{"version":3,"sources":["UI/Text.js","Utils/MapFor.js","UI/TextField.js","UI/EmptyMessage.js","UI/IconButton.js","UI/AcceleratorString.js","ResourcesLoader/index.js","UI/SemiControlledTextField.js","UI/SelectField.js","UI/SelectOption.js","UI/AlertMessage.js","UI/HelpButton/index.js","UI/PlaceholderLoader.js","UI/List.js","UI/Background.js","UI/Theme/ThemeConsumer.js","UI/ScrollView.js","Profile/AuthenticatedUserContext.js","Utils/NewNameGenerator.js","UI/Checkbox.js","Utils/Serializer.js","EventsSheet/EventsTree/ClassNames.js","UI/Tabs.js","EventsSheet/ParameterFields/GenericExpressionField/index.js","UI/Menu/ElementWithMenu.js","UI/BackgroundText.js","UI/SearchBar.js","Utils/ColorTransformer.js","UI/CorsAwareImage.js","UI/DismissableAlertMessage.js","UI/ListIcon.js","UI/SemiControlledAutoComplete.js","UI/PlaceholderError.js","Utils/GDevelopServices/Build.js","Utils/GetObjectByName.js","EventsSheet/ParameterFields/ParameterMetadataTools.js","UI/MiniToolbar.js","UI/Reponsive/ScreenTypeMeasurer.js","UI/Subheader.js","Utils/GDevelopServices/Game.js","ObjectsList/EnumerateObjects.js","ObjectsRendering/ObjectsRenderingService.js","GameEngineFinder/LocalGDJSFinder.js","UI/RaisedButtonWithMenu.js","ResourcesList/ResourceSelector.js","ResourcesList/ResourceUtils.js","UI/LeftLoader.js","Utils/GDevelopServices/Badge.js","CommandPalette/CommandHooks.js","ObjectsRendering/Renderers/RenderedInstance.js","UI/ColorField/index.js","UI/Table.js","UI/OpenedDialogChecker.js","KeyboardShortcuts/ReservedShortcuts.js","KeyboardShortcuts/IsUserTyping.js","KeyboardShortcuts/index.js","Utils/HelpLink.js","Utils/Clipboard.js","PropertiesEditor/index.js","UI/Search/FiltersChooser.js","EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext.js","Utils/GDevelopServices/Asset.js","Utils/EventsRootVariablesFinder.js","InstructionOrExpression/EnumerateInstructions.js","ObjectEditor/Editors/SpriteEditor/Utils/SpriteObjectHelper.js","UI/RaisedButtonWithSplitMenu.js","EventsFunctionsExtensionsLoader/index.js","InstancesEditor/ViewPosition.js","UI/ToolbarIcon.js","Utils/TagsHelper.js","VariablesList/VariablesEditorDialog.js","UI/EmptyPlaceholder.js","UI/InlineCheckbox.js","PropertiesEditor/PropertiesMapToSchema.js","ResourcesList/CheckeredBackground.js","ProjectManager/EnumerateProjectItems.js","UI/PlaceholderMessage.js","UI/Messages/DismissableInfoBar.js","Utils/GDevelopServices/Example.js","EventsSheet/EventsTree/InstructionsList.js","EventsSheet/InstructionEditor/SelectorListItems/Keys.js","EventsSheet/InlinePopover.js","UI/EditorMosaic/index.js","Utils/Rectangle.js","UI/Toolbar.js","UI/ToolbarSeparator.js","CommandPalette/CommandsList.js","Utils/UseLongTouch.js","UI/TagChips.js","Utils/SerializableObjectCancelableEditor.js","UI/TextEllipsis.js","HotReload/HotReloadPreviewButton.js","UI/ColorField/ColorPicker.js","Utils/GDevelopServices/Extension.js","UI/IconContainer.js","UI/Search/HighlightedText.js","EventsSheet/SelectionHandler.js","InstructionOrExpression/CreateTree.js","InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js","EventsSheet/EventsTree/ConditionsActionsColumns.js","Utils/GDevelopServices/Tutorial.js","ResourcesList/ResourcePreview/ImagePreview.js","UI/Menu/ElectronMenuImplementation.js","UI/Menu/MaterialUIMenuImplementation.js","UI/Menu/ContextMenu.js","UI/SortableVirtualizedItemList/ItemRow.js","UI/SortableVirtualizedItemList/DropIndicator.js","UI/SortableVirtualizedItemList/index.js","ResourcesList/ResourceThumbnail/index.js","ResourcesList/ResourceSelectorWithThumbnail.js","MainFrame/UnsavedChangesContext.js","UI/DragHandle.js","Utils/ProjectErrorsChecker.js","GameDashboard/GameRegistration.js","Utils/GDevelopServices/Usage.js","Leaderboard/LeaderboardContext.js","UI/Search/UseSearchStructuredItem.js","UI/Search/ListSearchResults.js","UI/User/UserPublicProfileChip.js","CommandPalette/CommandsContext.js","EventsSheet/InstructionEditor/InstructionOrExpressionSelector/index.js","Hints/DismissableTutorialMessage.js","Tutorial/TutorialContext.js","EventsFunctionsExtensionsLoader/MetadataDeclarationHelpers.js","Utils/BlueprintJsPlaceholder/index.js","InstancesEditor/InstancesSelection.js","ObjectEditor/ObjectsEditorService.js","UI/LocalFolderPicker/index.js","Export/GenericExporters/CordovaExport.js","Export/GenericExporters/ElectronExport.js","Export/GenericExporters/FacebookInstantGamesExport.js","Export/GenericExporters/OnlineCordovaExport.js","Export/GenericExporters/OnlineElectronExport.js","UI/CustomSvgIcons/GameJolt.js","UI/CustomSvgIcons/Poki.js","UI/CustomSvgIcons/CrazyGames.js","UI/CustomSvgIcons/NewsGround.js","Export/GenericExporters/HTML5Export.js","UI/Messages/InfoBar.js","Export/GenericExporters/OnlineWebExport/OnlineGamePropertiesDialog.js","Export/GenericExporters/OnlineWebExport/OnlineGameLink.js","Export/GenericExporters/OnlineWebExport/index.js","UI/Toggle.js","VariablesList/index.js","UI/TreeTable/index.js","UI/CustomSvgIcons/Copy.js","Profile/CreateProfile.js","Utils/TimestampedId.js","GameDashboard/PublicGameProperties.js","Utils/UseIsMounted.js","Utils/GDevelopServices/User.js","Utils/OnlineStatus.js","Utils/GDevelopServices/Play.js","Profile/SubscriptionChecker.js","AssetStore/ExtensionStore/ExtensionStoreContext.js","UI/ErrorBoundary.js","AssetStore/ExtensionStore/InstallExtension.js","Utils/OptionalLazyRequire.js","UI/Accordion.js","UI/DragAndDrop/DragSourceAndDropTarget.js","EventsSheet/index.js","EventsSheet/ParameterRenderingService.js","EventsSheet/ParameterFields/ObjectField.js","ObjectsRendering/PixiResourcesLoader.js","UI/Button.js","EventsSheet/ParameterFields/GenericExpressionField/FormatExpressionCall.js","EventsSheet/ParameterFields/VariableField.js","EffectsList/EnumerateEffects.js","Hints/index.js","EventsSheet/InstructionEditor/NewInstructionEditor.js","InstructionOrExpression/SetupInstructionParameters.js","UI/Search/UseSearchItem.js","UI/Search/CategoryChooser.js","AssetStore/AssetStoreContext.js","Utils/CssHelpers.js","ProjectsStorage/ResourceFetcher/index.js","Utils/GridHelpers.js","InstancesEditor/InstancesEditorSettings.js","ResourcesList/ResourceSource.js","GamesShowcase/GamesShowcaseContext.js","AssetStore/ExampleStore/ExampleStoreContext.js","AssetStore/ExampleStore/ExampleDialog.js","MainFrame/index.js","MainFrame/Preferences/LanguageSelector.js","MainFrame/UpdaterTools.js","UI/HelpIcon/index.js","UI/ListCommonItem.js","UI/CustomSvgIcons/Paste.js","Utils/MapStringString.js","Export/Builds/BuildProgressAndActions.js","UI/CustomSvgIcons/Chrome.js","Export/Builds/BuildsWatcher.js","Utils/Delay.js","GameDashboard/PublicGamePropertiesDialog.js","Utils/UsersAutocomplete.js","Utils/UseDebounce.js","UI/SemiControlledMultiAutoComplete.js","GameDashboard/GameThumbnail.js","Leaderboard/LeaderboardProvider.js","ResourcesList/ResourceThumbnail/ImageThumbnail.js","AssetStore/ExtensionStore/ExtensionsSearchDialog.js","Profile/PublicProfileContext.js","AssetStore/InstallAsset.js","SceneEditor/ScenePropertiesDialog.js","SceneEditor/SceneVariablesDialog.js","ProjectManager/EventFunctionExtensionNameVerifier.js","CommandPalette/CommandManager.js","CommandPalette/UseRefInitHook.js","UI/GravatarUrl.js","UI/DotBadge.js","UI/ClosableTabs.js","MainFrame/EditorTabs/EditorTabsHandler.js","MainFrame/EditorContainers/EventsEditorContainer.js","EventsSheet/EventsTree/DropIndicator.js","EventsSheet/ParameterFields/DefaultField.js","ObjectsList/ObjectSelector.js","ObjectsRendering/Renderers/RenderedIconInstance.js","EventsSheet/ParameterFields/ParameterFieldCommons.js","InstructionOrExpression/EnumerateExpressions.js","EventsSheet/InstructionEditor/SelectorListItems/SelectorInstructionOrExpressionListItem.js","EventsSheet/InstructionEditor/SelectorListItems/SelectorInstructionsTreeListItem.js","EventsSheet/ParameterFields/GenericExpressionField/ExpressionParametersEditor.js","EventsSheet/ParameterFields/EnumerateVariables.js","EventsSheet/ParameterFields/EnumerateFunctionParameters.js","EventsSheet/ParameterFields/SceneVariableField.js","EventsSheet/ClipboardKind.js","UI/DragAndDrop/DropTarget.js","EventsSheet/EnumerateEventsMetadata.js","EventsSheet/InstructionEditor/InstructionParametersEditor.js","EventsSheet/InstructionEditor/InstructionOrObjectSelector.js","UI/Reponsive/SelectColumns.js","BehaviorsEditor/NewBehaviorDialog.js","BehaviorsEditor/EnumerateBehaviorsMetadata.js","Utils/Behavior.js","UI/KeyboardShortcuts/index.js","Utils/History.js","EventsSheet/EventsFunctionExtractor/index.js","EventsFunctionsExtensionEditor/EventsFunctionConfigurationEditor/EventsFunctionParametersEditor.js","ObjectTypeSelector/index.js","BehaviorTypeSelector/index.js","StringArrayEditor/index.js","EventsFunctionsExtensionEditor/EventsFunctionConfigurationEditor/EventsFunctionPropertiesEditor.js","UI/EditorMosaic/CloseButton.js","MainFrame/EditorContainers/EventsFunctionsExtensionEditorContainer.js","ObjectGroupsList/index.js","ObjectGroupEditor/ObjectGroupEditorDialog.js","AssetStore/ResourceStore/ResourceStoreContext.js","UI/Search/BoxSearchResults.js","UI/CustomSvgIcons/Behaviors/Create.js","UI/CustomSvgIcons/Behaviors/Step.js","UI/CustomSvgIcons/Behaviors/Destroy.js","UI/CustomSvgIcons/Behaviors/Action.js","UI/CustomSvgIcons/Behaviors/Condition.js","UI/CustomSvgIcons/Behaviors/Expression.js","UI/CustomSvgIcons/Behaviors/Activate.js","UI/CustomSvgIcons/Behaviors/Deactivate.js","MainFrame/EditorContainers/ExternalEventsEditorContainer.js","MainFrame/EditorContainers/ExternalPropertiesDialog.js","MainFrame/EditorContainers/ExternalLayoutEditorContainer.js","SceneEditor/index.js","ObjectsList/index.js","UI/KeyboardShortcuts/DeprecatedKeyboardShortcuts.js","InstancesEditor/PinchHandler.js","LayersList/EnumerateLayers.js","UI/FullSizeMeasurer.js","EffectsList/index.js","ObjectEditor/Editors/SpriteEditor/PointsEditor/styles.js","ObjectEditor/Editors/SpriteEditor/Utils/SpriteSelector.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/styles.js","MainFrame/EditorContainers/ResourcesEditorContainer.js","MainFrame/EditorContainers/SceneEditorContainer.js","Utils/TimeFunction.js","UI/CustomSvgIcons/ItchIo.js","GamesShowcase/ShowcasedGameTitle.js","AssetStore/ExampleStore/ExampleIcon.js","Utils/UseInterval.js","Utils/i18n/getTranslationFunction.js","JsExtensionsLoader/index.js","ProjectsStorage/ProjectStorageProviders.js","InstancesEditor/InstancesRenderer/index.js","Utils/TransformRect.js","InstancesEditor/InstancesResizer.js","InstancesEditor/SelectedInstances.js","InstancesEditor/HighlightedInstance.js","InstancesEditor/InstancesRotator.js","InstancesEditor/InstancesMover.js","InstancesEditor/Grid.js","InstancesEditor/WindowBorder.js","InstancesEditor/WindowMask.js","InstancesEditor/BackgroundColor.js","InstancesEditor/FpsLimiter.js","Utils/PIXITicker.js","InstancesEditor/StatusBar.js","InstancesEditor/CanvasCursor.js","InstancesEditor/LongTouchHandler.js","InstancesEditor/index.js","Debugger/Toolbar.js","Debugger/InspectorsList.js","Debugger/Inspectors/VariablesContainerInspector.js","Debugger/Inspectors/RuntimeObjectInspector.js","Debugger/Inspectors/RuntimeSceneInspector.js","Debugger/GDJSInspectorDescriptions.js","Debugger/Inspectors/RawContentInspector.js","Debugger/Profiler/MeasuresTable.js","Debugger/Profiler/index.js","Debugger/DebuggerConsole.js","Debugger/DebuggerContent.js","Debugger/DebuggerSelector.js","Debugger/index.js","MainFrame/EditorContainers/DebuggerEditorContainer.js","UI/DragAndDrop/DragAndDropContextProvider.js","UI/RightLoader.js","Profile/UsernameField.js","Profile/CreateAccountDialog.js","Profile/LoginDialog.js","Profile/EditProfileDialog.js","Profile/ChangeEmailDialog.js","Profile/EmailVerificationPendingDialog.js","Profile/AuthenticatedUserProvider.js","Profile/PublicProfileDialog.js","Profile/PublicProfileProvider.js","EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsProvider.js","MainFrame/Providers.js","CodeEditor/Theme/TomorrowNight.js","CodeEditor/Theme/Monokai.js","CodeEditor/Theme/Tomorrow.js","CodeEditor/Theme/SolarizedDark.js","CodeEditor/Theme/SolarizedLight.js","CodeEditor/Theme/VibrantInk.js","CodeEditor/Theme/GitHub.js","CodeEditor/Theme/NordDark.js","CodeEditor/Theme/OneDark.js","CodeEditor/Theme/index.js","UI/CustomSvgIcons/GooglePlay.js","UI/CustomSvgIcons/Steam.js","UI/CustomSvgIcons/Twitter.js","UI/CustomSvgIcons/Instagram.js","UI/CustomSvgIcons/Twitch.js","UI/CustomSvgIcons/Microsoft.js","UI/CustomSvgIcons/Apple.js","GamesShowcase/ShowcasedGameButtons.js","Export/Builds/BuildsDialog.js","Profile/LimitDisplayer.js","Export/Builds/BuildStepsProgress.js","Export/ExportDialog/ExportLauncher.js","Export/ExportDialog/ExportHomeSeparator.js","Export/ExportDialog/ExportHome.js","Export/ExportDialog/index.js","AssetStore/ExampleStore/ExampleListItem.js","AssetStore/ExampleStore/index.js","Tutorial/TutorialListItem.js","Tutorial/index.js","GamesShowcase/ShowcasedGameListItem.js","GamesShowcase/index.js","ProjectCreation/CreateProjectDialog.js","Profile/Achievement/AchievementList.js","UI/CustomSvgIcons/Trophy.js","Profile/Achievement/UserAchievements.js","Profile/ProfileDetails.js","Leaderboard/LeaderboardScoreFormatter.js","GameDashboard/LeaderboardAdmin/LeaderboardEntriesTable.js","GameDashboard/LeaderboardAdmin/LeaderboardAppearanceDialog.js","GameDashboard/LeaderboardAdmin/index.js","Utils/ProjectNameGenerator.js","ProjectCreation/LocalPathFinder.js","ProjectCreation/ProjectPreCreationDialog.js","MainFrame/Changelog/ChangelogRenderer.js","Utils/GDevelopServices/Release.js","MainFrame/Changelog/index.js","Export/Builds/BuildCard.js","Export/Builds/BuildsList.js","Export/Builds/index.js","Utils/GDevelopServices/Analytics.js","UI/CustomSvgIcons/Crown.js","GameDashboard/GameDetailsDialog.js","AssetStore/ResourceStore/ResourceCard.js","AssetStore/ResourceStore/index.js","AssetStore/ExtensionStore/ExtensionListItem.js","AssetStore/ExtensionStore/index.js","AssetStore/ExtensionStore/UseExtensionUpdates.js","AssetStore/ExtensionStore/ExtensionInstallDialog.js","MainFrame/ProjectTitlebar.js","MainFrame/AboutDialog.js","VariablesList/VariableRow.js","VariablesList/styles.js","UI/BooleanField.js","VariablesList/EditVariableRow.js","Utils/SelectionHandler.js","VariablesList/ClipboardKind.js","Utils/IsNullPtr.js","PlatformSpecificAssetsEditor/PlatformSpecificAssetsDialog.js","PlatformSpecificAssetsEditor/ImageResizer.js","UI/LoaderModal.js","UI/DrawerTopBar.js","UI/CloseConfirmDialog.js","EventsSheet/EventsTree/index.js","EventsSheet/EventsTree/Renderers/StandardEvent.js","EventsSheet/EventsTree/Instruction.js","EventsSheet/ParameterFields/RelationalOperatorField.js","EventsSheet/ParameterFields/OperatorField.js","EventsSheet/ParameterFields/MouseField.js","EventsSheet/ParameterFields/KeyField.js","ObjectsRendering/Renderers/RenderedUnknownInstance.js","Utils/FontFaceLoader.js","ObjectsRendering/Renderers/RenderedSpriteInstance.js","ObjectsRendering/Renderers/RenderedTiledSpriteInstance.js","ObjectsRendering/Renderers/RenderedPanelSpriteInstance.js","ObjectsRendering/Renderers/RenderedTextInstance.js","ObjectsRendering/Renderers/RenderedShapePainterInstance.js","ObjectsRendering/Renderers/RenderedTextEntryInstance.js","ObjectsRendering/Renderers/RenderedParticleEmitterInstance.js","EventsSheet/ParameterFields/YesNoField.js","EventsSheet/ParameterFields/TrueFalseField.js","EventsSheet/ParameterFields/ExpressionField.js","EventsSheet/InstructionEditor/InstructionOrExpressionSelector/ExpressionSelector.js","EventsSheet/ParameterFields/GenericExpressionField/ExpressionParametersEditorDialog.js","EventsSheet/ParameterFields/GenericExpressionField/BackgroundHighlighting.js","ExpressionAutocompletion/index.js","EventsSheet/ParameterFields/GenericExpressionField/ExpressionAutocompletionsHandler.js","EventsSheet/ParameterFields/GenericExpressionField/ExpressionAutocompletionsDisplayer.js","EventsSheet/ParameterFields/StringField.js","EventsSheet/ParameterFields/StringWithSelectorField.js","EventsSheet/ParameterFields/BehaviorField.js","EventsSheet/ParameterFields/GlobalVariableField.js","EventsSheet/ParameterFields/ObjectVariableField.js","EventsSheet/ParameterFields/LayerField.js","EventsSheet/ParameterFields/ImageResourceField.js","EventsSheet/ParameterFields/AudioResourceField.js","EventsSheet/ParameterFields/VideoResourceField.js","EventsSheet/ParameterFields/JsonResourceField.js","EventsSheet/ParameterFields/BitmapFontResourceField.js","EventsSheet/ParameterFields/FontResourceField.js","EventsSheet/ParameterFields/ColorExpressionField.js","EventsSheet/ParameterFields/ForceMultiplierField.js","EventsSheet/ParameterFields/SceneNameField.js","EventsSheet/ParameterFields/LayerEffectNameField.js","EventsSheet/ParameterFields/LayerEffectParameterNameField.js","EventsSheet/ParameterFields/ObjectEffectNameField.js","EventsSheet/ParameterFields/ObjectEffectParameterNameField.js","EventsSheet/ParameterFields/ObjectPointNameField.js","EventsSheet/ParameterFields/ObjectAnimationNameField.js","EventsSheet/ParameterFields/FunctionParameterNameField.js","EventsSheet/ParameterFields/ExternalLayoutNameField.js","EventsSheet/EventsTree/InvalidParameterValue.js","EventsSheet/EventsTree/MissingParameterValue.js","EventsSheet/EventsTree/Renderers/GroupEvent.js","EventsSheet/EventsTree/Renderers/CommentEvent.js","EventsSheet/EventsTree/Renderers/ForEachEvent.js","EventsSheet/EventsTree/Renderers/ForEachChildVariableEvent.js","EventsSheet/EventsTree/Renderers/RepeatEvent.js","EventsSheet/EventsTree/Renderers/WhileEvent.js","EventsSheet/EventsTree/Renderers/LinkEvent/index.js","EventsSheet/EventsTree/Renderers/LinkEvent/ExternalEventsAutoComplete.js","EventsSheet/EventsTree/Renderers/JsCodeEvent.js","EventsSheet/EventsTree/EventHeightsCache.js","EventsSheet/EventsTree/BottomButtons.js","EventsSheet/InstructionEditor/NewInstructionEditorDialog.js","Utils/CaseSensitiveSlug.js","EventsFunctionsExtensionsLoader/EnumerateProperties.js","EventsSheet/InstructionEditor/SelectorListItems/SelectorGroupObjectsListItem.js","EventsSheet/InstructionEditor/SelectorListItems/SelectorObjectListItem.js","EventsSheet/InstructionEditor/NewInstructionEditorMenu.js","EventsSheet/InstructionEditor/EventTextDialog.js","EventsSheet/InlineParameterEditor.js","EventsSheet/OnceInstructionSanitizer.js","EventsSheet/EventsContextAnalyzerDialog.js","EventsSheet/SearchPanel.js","EventsSheet/EventsSearcher.js","EventsSheet/ContainsSubInstruction.js","EventsSheet/EventsFunctionExtractor/EventsFunctionExtractorDialog.js","Utils/GetObjectGroupByName.js","EventsFunctionsExtensionEditor/index.js","EventsFunctionsExtensionEditor/EventsFunctionConfigurationEditor/index.js","ObjectGroupsList/ObjectGroupsListWithObjectGroupEditor.js","ObjectGroupEditor/index.js","EventsFunctionsList/index.js","EventsFunctionsList/EnumerateEventsFunctions.js","EventsBasedBehaviorEditor/EventsBasedBehaviorEditorDialog.js","EventsBasedBehaviorEditor/index.js","EventsBasedBehaviorEditor/EventsBasedBehaviorPropertiesEditor.js","EventsFunctionsExtensionEditor/BehaviorMethodSelectorDialog.js","EventsFunctionsExtensionEditor/ExtensionFunctionSelectorDialog.js","UI/EditorMosaic/EditorNavigator.js","EventsFunctionsExtensionEditor/ChooseEventsFunctionsExtensionEditor.js","ObjectsList/ClipboardKind.js","UI/EditTagsDialog.js","InstancesEditor/InstancesRenderer/LayerRenderer.js","InstancesEditor/InstancesRenderer/PixiDoubleClickEvent.js","Utils/PolygonHelper.js","InstancesEditor/SelectionRectangle.js","InstancesEditor/InstancesAdder.js","InstancesEditor/InstancePropertiesEditor/index.js","InstancesEditor/InstancesList/index.js","LayersList/LayerRemoveDialog.js","LayersList/LayerEditorDialog.js","ObjectEditor/ObjectEditorDialog.js","ObjectEditor/Editors/TextEditor.js","ObjectEditor/Editors/TiledSpriteEditor.js","ObjectEditor/Editors/PanelSpriteEditor.js","ObjectEditor/Editors/SpriteEditor/index.js","ObjectEditor/Editors/SpriteEditor/SpritesList.js","ObjectEditor/Editors/SpriteEditor/PointsEditor/index.js","ObjectEditor/Editors/SpriteEditor/PointsEditor/PointsList.js","ObjectEditor/Editors/SpriteEditor/PointsEditor/PointRow.js","ObjectEditor/Editors/SpriteEditor/PointsEditor/PointsPreview.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/index.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/PolygonsList.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/VerticeRow.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/CollisionMasksPreview.js","ObjectEditor/Editors/EmptyEditor.js","ObjectEditor/Editors/ShapePainterEditor.js","ObjectEditor/Editors/ParticleEmitterEditor.js","ObjectEditor/Editors/ObjectPropertiesEditor.js","BehaviorsEditor/index.js","SceneEditor/SetupGridDialog.js","InstancesEditor/FullSizeInstancesEditorWithScrollbars.js","Utils/StringHelpers.js","UI/EditorMosaic/TagsButton.js","Hints/ObjectsAdditionalWork.js","ResourcesEditor/index.js","ResourcesList/index.js","ResourcesList/EnumerateResources.js","ResourcesEditor/Toolbar.js","MainFrame/Preferences/LanguageDialog.js","ProjectsStorage/OpenFromStorageProviderDialog.js","ProjectsStorage/SaveToStorageProviderDialog.js","ProjectsStorage/OpenConfirmDialog.js","ProjectsStorage/ProjectContentChecker.js","Utils/UseSetStateWithCallback.js","MainFrame/MainFrameCommands.js","CommandPalette/CommandsScopedContext.js","MainFrame/PreviewState.js","HotReload/HotReloadLogsDialog.js","Utils/UpdateDiscordRichPresence.js","ResourcesList/NewResourceDialog.js","Utils/i18n/GDI18nProvider.js","locales lazy /^/.//.*//messages$/ groupOptions: {} namespace object","ProjectManager/ExtensionsProperties.js","ProjectManager/LoadingScreenEditor.js","ProjectManager/ProjectPropertiesDialog.js","UI/CustomSvgIcons/VariableTree.js","ProjectManager/ProjectManagerCommands.js","ProjectManager/InstalledExtensionDetails.js","ProjectManager/ProjectManagerItems.js","ProjectManager/index.js","Profile/AuthenticatedUserProfileDetails.js","Utils/UseTimeout.js","Profile/SubscriptionDetails.js","Profile/ContributionsDetails.js","GameDashboard/GameCard.js","GameDashboard/GamesList.js","Profile/ProfileDialog.js","UI/Carousel.js","MainFrame/EditorContainers/HomePage/ScrollBackground.js","GamesShowcase/ShowcasedGameDialog.js","UI/User/UserChip.js","Utils/Notification.js","MainFrame/EditorContainers/HomePage/index.js","BehaviorsEditor/Editors/BehaviorPropertiesEditor.js","BehaviorsEditor/Editors/Physics2Editor/ShapePreview.js","BehaviorsEditor/Editors/Physics2Editor/PolygonEditor.js","BehaviorsEditor/Editors/Physics2Editor/index.js","BehaviorsEditor/BehaviorsEditorService.js","KeyboardShortcuts/DetectShortcutDialog.js","KeyboardShortcuts/ShortcutsListRow.js","KeyboardShortcuts/ShortcutsList.js","MainFrame/Preferences/PreferencesDialog.js","CommandPalette/CommandPalette/FilterOptions.js","Utils/FuzzyOrEmptyFilter.js","CommandPalette/CommandPalette/AutocompletePicker.js","CommandPalette/CommandPalette/index.js","UI/Badge.js","LayersList/BackgroundColorRow.js","LayersList/index.js","LayersList/LayerRow.js","ObjectsList/UseObjectsListCommands.js","ObjectGroupsList/UseObjectGroupsListCommands.js","LayersList/UseLayersListCommands.js","SceneEditor/UseSceneEditorCommands.js","AssetStore/AssetCard.js","AssetStore/index.js","AssetStore/AssetDetails.js","AssetStore/NewObjectDialog.js","EventsSheet/InstructionEditor/InstructionOrExpressionSelector/InstructionSelector.js","EventsSheet/InstructionEditor/index.js","EventsSheet/InstructionEditor/InstructionEditorDialog.js","EventsFunctionsExtensionEditor/OptionsEditorDialog/ExtensionOptionsEditor.js","EventsFunctionsExtensionEditor/OptionsEditorDialog/ExtensionDependenciesEditor.js","EventsFunctionsExtensionEditor/OptionsEditorDialog/index.js","ResourcesList/ResourcePreview/GenericIconPreview.js","ResourcesList/ResourcePreview/index.js","ResourcesEditor/ResourcePropertiesEditor/index.js","MainFrame/Toolbar/PreviewAndPublishButtons.js","MainFrame/Toolbar/index.js","MainFrame/EditorTabs/DropIndicator.js","MainFrame/EditorTabs/DraggableEditorTabs.js","HelpFinder/DocSearchArea.js","HelpFinder/index.js","Profile/SubscriptionPendingDialog.js","Profile/SubscriptionDialog.js","MainFrame/Changelog/ChangelogDialog.js","MainFrame/Changelog/ChangelogDialogContainer.js","EventsSheet/ToolbarCommands.js","EventsSheet/Toolbar.js","EventsBasedBehaviorsList/index.js","EventsBasedBehaviorsList/EnumerateEventsBasedBehaviors.js","ObjectEditor/Editors/SpriteEditor/AnimationPreview/index.js","ObjectEditor/Editors/SpriteEditor/DirectionTools.js","SceneEditor/ToolbarCommands.js","SceneEditor/Toolbar.js","EventsSheet/EventsTree/Renderers/UnknownEvent.js","EventsSheet/EventsTree/EventsRenderingService.js","Leaderboard/LeaderboardDialog.js","EventsSheet/ParameterFields/LeaderboardIdField.js","CodeEditor/LocalCodeEditorAutocompletions.js","CodeEditor/index.js"],"names":["Text","React","ref","children","style","size","color","align","noShrink","noMargin","displayInlineAsSpan","otherProps","variant","component","undefined","display","flexShrink","marginTop","marginBottom","mapFor","start","end","func","result","i","push","module","exports","mapReverseFor","mapVector","cppVector","at","computeTextFieldStyleProps","props","margin","hiddenLabel","floatingLabelText","TextField","_input","this","current","focus","blur","onChange","helperText","helperMarkdownText","source","i18n","type","value","defaultValue","event","target","error","errorText","disabled","required","InputLabelProps","shrink","floatingLabelFixed","label","name","placeholder","hintText","_","id","autoFocus","multiline","rows","rowsMax","fullWidth","InputProps","disableUnderline","underlineShow","fontSize","fontStyle","inputStyle","readOnly","inputProps","onKeyPress","onKeyUp","onKeyDown","onClick","maxLength","max","min","step","endAdornment","position","width","flex","top","onFocus","onBlur","inputRef","spellCheck","noMarginTextFieldInListItemTopOffset","styles","alignItems","justifyContent","padding","EmptyMessage","messageStyle","IconButton","tooltip","acceleratorString","iconButton","accelerator","Tooltip","title","isMobile","isMacLike","replace","placement","enterDelay","tooltipEnterDelay","electron","optionalRequire","path","UrlsCache","projectCache","project","cache","ptr","url","_getProjectCache","filename","systemFilename","disableCacheBurst","Date","now","ResourcesLoader","resourcesNames","resourcesManager","getResourcesManager","forEach","resourceName","hasResource","_cache","burstUrl","getResource","getFile","urlOrFilename","isResourceForPixi","startsWith","isLocalFile","cachedUrl","getCachedUrl","file","getProjectFile","projectPath","dirname","resourceAbsolutePath","resolve","console","info","cacheLocalFileUrl","urlWithParameters","urlEncodedParameterName","urlEncodedValue","separator","indexOf","addSearchParameterToUrl","cacheUrl","options","resourceRelativePath","getFullUrl","SemiControlledTextField","state","focused","text","_field","setState","selectionStart","selectionEnd","input","getInputNode","commitOnBlur","field","newValue","currentTarget","SelectField","hasValidValue","childrenValues","map","child","filter","childValue","length","displayedValue","select","SelectProps","native","SelectOption","primaryText","icon","height","marginRight","marginLeft","content","AlertMessage","kind","onHide","renderRightButton","renderLeftIcon","gdevelopTheme","GDevelopThemeContext","expand","message","warning","HelpButton","helpPagePath","helpLink","getHelpLink","Window","openExternalURL","listItemWith32PxIconHeight","listItemWithoutIconHeight","listItemText","wordBreak","ListItem","initiallyOpen","isOpen","setIsOpen","elementWithMenu","openContextMenu","open","longTouchForContextMenuProps","useLongTouch","renderListItemSecondaryAction","displayReloadButton","reloadButtonTooltip","edge","aria-label","onReload","buildMenuTemplate","displayMenuButton","element","rightIconColor","displayLinkButton","onOpenLink","displayRemoveButton","onRemove","renderNestedItems","isItemOpen","button","dense","disableRipple","leftIcon","primary","secondary","secondaryText","className","disableAutoTranslate","autoGenerateNestedIndicator","in","timeout","unmountOnExit","disablePadding","paddingLeft","nestedListStyle","ContainerComponent","onDoubleClick","selected","onContextMenu","secondaryTextLines","displayAddIcon","displaySearchIcon","List","container","flexDirection","maxWidth","Background","square","noFullHeight","noExpand","ThemeConsumer","Consumer","autoHideScrollbar","scrollView","scrollTo","scrollViewElement","targetElement","ReactDOM","findDOMNode","HTMLElement","yPosition","getBoundingClientRect","scrollViewYPosition","scrollTop","scrollToBottom","scrollHeight","overflowY","initialAuthenticatedUser","authenticated","firebaseUser","profile","badges","subscription","usages","limits","onLogout","onLogin","onEdit","onChangeEmail","onCreateAccount","onBadgesChanged","a","onRefreshUserProfile","onRefreshFirebaseProfile","onSendEmailVerification","onAcceptGameStatsEmail","getAuthorizationHeader","Promise","reject","Error","AuthenticatedUserContext","exists","prefix","potentialName","useStyles","makeStyles","root","onCheck","classes","checkbox","checked","uncheckedIcon","checkedIcon","control","gd","global","serializeToJSObject","serializable","methodName","serializedElement","SerializerElement","object","JSON","parse","Serializer","toJSON","delete","serializeToJSON","json","unserializeFromJSObject","optionalProject","fromJSObject","selectableArea","selectedArea","largeSelectableArea","largeSelectedArea","executableEventContainer","actionsContainer","conditionsContainer","subInstructionsContainer","smallWidthContainer","instructionParameter","instructionInvalidParameter","instructionMissingParameter","instructionWarningParameter","disabledText","eventsTree","eventsTreeWithSearchResults","dropIndicator","cantDropIndicator","linkContainer","nameAndIconContainer","Tabs","textColor","e","Tab","textFieldContainer","minWidth","textFieldAndHightlightContainer","expressionSelectorPopoverContentSmall","maxHeight","expressionSelectorPopoverContent","fontFamily","lineHeight","backgroundHighlightingWithFloatingLabel","paddingRight","boxSizing","backgroundHighlightingInline","backgroundHighlightingInlineWithFloatingLabel","extractErrors","expressionNode","expressionValidator","ExpressionValidator","visit","errors","getErrors","errorHighlights","begin","getStartPosition","getEndPosition","getMessage","otherErrorsCount","Math","hasMultipleErrors","slice","highlight","join","ExpressionField","_fieldElement","_inputElement","popoverOpen","parametersDialogOpen","selectedExpressionInfo","validatedValue","autocompletions","getAutocompletionsInitialState","selectAll","setSelectionRange","toString","_enqueueValidation","_openExpressionPopover","_handleFocus","preventDefault","_handleRequestClose","_handleChange","_handleBlur","cancel","_doValidation","_shouldOpenParametersDialog","expressionInfo","hasNonCodeOnlyParameters","metadata","_handleExpressionChosen","newState","insertExpression","parameterValues","cursorPosition","functionCall","formatExpressionCall","substr","setTimeout","_insertAutocompletion","expressionAutocompletion","isExact","caretLocation","expression","insertAutocompletionInExpression","completion","replacementStartPosition","replacementEndPosition","addParenthesis","addDot","addParameterSeparator","addNamespaceSeparator","hasVisibleParameters","newExpression","newCaretLocation","forceSetValue","forceSetSelection","debounce","globalObjectsContainer","objectsContainer","expressionType","scope","onGetAdditionalAutocompletions","onExtractAdditionalErrors","parser","ExpressionParser2","JsPlatform","get","parseExpression","formattedErrorText","Boolean","charAt","completionDescriptions","ExpressionCompletionFinder","getCompletionDescriptionsFor","newAutocompletions","getAutocompletionsFromDescriptions","allNewAutocompletions","concat","setNewAutocompletions","node","Element","parameterMetadata","parameterRenderingService","description","getDescription","isInline","longDescription","getLongDescription","popoverStyle","clientWidth","zIndex","muiZIndex","backgroundHighlightingStyle","renderTextField","highlights","handleAutocompletionsKeyDown","onUpdateAutocompletions","onInsertAutocompletion","shouldCloseOrCancel","shouldSubmit","onClickAway","anchorEl","disablePortal","screenSize","selectedType","onChoose","focusOnMount","expressionAutocompletions","getVisibleAutocompletions","remainingCount","getRemainingCount","selectedCompletionIndex","renderButton","renderExtraButton","expressionMetadata","onDone","onRequestClose","ElementWithMenu","_contextMenu","_wrappedElement","dimensions","round","left","openMenuWithSecondaryClick","passExtraProps","wrappedElement","contextMenu","BackgroundText","muiTheme","opacity","textShadow","emptyMessage","shadowColor","tooltipText","useAutocompleteStyles","palette","groupLabel","SearchBar","onRequestSearch","parentValue","tagsHandler","tags","textField","setValue","autocompleteValue","setAutocompleteValue","nonEmpty","iconButtonClose","transform","transition","iconStyle","iconButtonSearch","iconButtonFilter","iconButtonHelp","searchContainer","getStyles","autocompleteStyles","changeValue","shouldAutofocusSearchbar","useShouldAutofocusSearchbar","previousChosenTagsCount","chosenTags","handleBlur","trim","handleInput","handleCancel","handleKeyPressed","shouldValidate","handleAutocompleteInput","reason","add","handleAutocompleteInputChange","backgroundColor","searchBar","elevation","groupBy","freeSolo","inputValue","onInputChange","renderOption","option","renderInput","params","Array","from","tag","remove","useScreenType","rgbColorToRGBString","rgbColor","r","g","b","rgbToHex","rgbToHexNumber","rgbStringToHexNumber","rgbString","rgbStringAndAlphaToRGBColor","rgbOrHexToHexNumber","split","parseInt","hexNumberToRGBColor","hexNumber","hexNumberToRGBString","hex","rgbOrHexToRGBString","hexToRGBColor","alpha","colors","CorsAwareImage","crossOrigin","src","DismissableAlertMessage","identifier","values","showAlertMessage","hiddenAlertMessages","showConfirmDialog","ListIconMemo","memo","useContext","isGDevelopIcon","cssAnimation","useExactIconSize","iconWidth","iconSize","iconHeight","verticalAlign","animation","gdevelopIconsCSSFilter","textAlign","alt","listItem","cursor","listbox","flexGrow","inputRoot","flexWrap","popper","makeRenderItem","divider","disableGutters","translatableValue","renderIcon","textEllipsisStyle","isOptionDisabled","useState","setInputValue","isMenuOpen","setIsMenuOpen","forceInputValueTo","currentInputValue","handleInputChange","onApply","handleChange","dataSource","getOptionDisabled","getOptionLabel","filterOptions","lowercaseInputValue","toLowerCase","optionList","pop","shift","filterFunction","other","getDefaultStylingProps","otherStylingProps","onMouseDown","textFieldStyle","PlaceholderError","onRetry","theme","getBuildArtifactUrl","build","keyName","gameId","GDevelopGamesPlatform","getInstantBuildUrl","getWebBuildThumbnailUrl","buildId","resourceManager","getPlatformSpecificAssets","fileName","basename","uri","encodeURI","getBuildFileUploadOptions","makeTimestampedId","key","getSignedUrl","uploadType","contentType","then","signedUrl","buildElectron","userId","targets","authorizationHeader","axios","post","GDevelopBuildApi","baseUrl","headers","Authorization","response","data","buildWeb","buildCordovaAndroid","keystore","stringify","signing","getBuild","getBuilds","getObjectByName","objectName","hasObjectNamed","getObject","getLastObjectParameterValue","instructionMetadata","instruction","parameterIndex","objectParameterIndex","ParameterMetadataTools","getObjectParameterIndexFor","getParameters","getParametersCount","getParameter","getLastObjectParameterObjectType","parameters","getExtraInfo","getPreviousParameterValue","tryExtractStringLiteralContent","parameterValue","trimmedParameterValue","getParameterChoices","choice","exception","MiniToolbar","toolbar","Component","firstChildToolbarTextStyle","toolbarTextStyle","MiniToolbarText","firstChild","userHasTouchedScreen","window","addEventListener","onFirstTouch","removeEventListener","ScreenTypeMeasurer","allGameCategories","getCategoryName","category","getGameUrl","game","slug","getGameUrlWithSlug","username","gameSlug","getAclsFromUserIds","ownersIds","ownerId","level","listAllShowcasedGames","GDevelopGameApi","gamesShowcaseUrl","filtersUrl","all","showcasedGames","filters","registerGame","gameName","authorName","updateGame","categories","publicWebBuildId","playWithKeyboard","playWithGamepad","playWithMobile","orientation","thumbnailUrl","discoverable","patch","setGameUserAcls","acls","newAcls","setGameSlug","userSlug","getGame","deleteGame","getGames","getPublicGame","getGameSlugs","isSameGroupWithContext","groupWithContext","group","isSameObjectWithContext","objectWithContext","enumerateObjects","filterObject","getTypeOfObject","getName","containerObjectsList","getObjectsCount","getObjectAt","projectObjectsList","allObjectsList","enumerateObjectTypes","extensionsList","getCurrentPlatform","getAllPlatformExtensions","flatten","extension","getExtensionObjectsTypes","toJSArray","objectType","getObjectMetadata","objectMetadata","fullName","getFullName","iconFilename","getIconFilename","categoryFullName","getCategoryFullName","filterObjectByTags","selectedTags","objectTags","getTags","hasStringAllTags","filterObjectsList","list","searchText","hideExactMatches","filterGroupsList","groupName","enumerateGroups","objectGroups","count","getAt","enumerateObjectsAndGroups","filterGroup","containerGroups","getObjectGroups","containerGroupsList","projectGroups","projectGroupsList","allGroupsList","PIXI","GlobalPIXIModule","requirableModules","renderers","unknownObjectType","RenderedUnknownInstance","Sprite","RenderedSpriteInstance","RenderedTiledSpriteInstance","RenderedPanelSpriteInstance","RenderedTextInstance","RenderedShapePainterInstance","RenderedTextEntryInstance","RenderedParticleEmitterInstance","getThumbnail","getType","hasOwnProperty","createNewInstanceRenderer","layout","instance","associatedObject","pixiContainer","PixiResourcesLoader","warn","registerInstanceRenderer","renderer","registerModule","requirePath","requireModule","requireBasePath","originalRequiredModulePath","_load","originalNodeModuleLoad","allowedModules","request","parent","isMain","loadedModule","Object","keys","requiredModule","require","ex","RenderedInstance","app","remote","fs","process","isDarwin","test","platform","tryPath","onExists","onNoAccess","access","constants","R_OK","err","findGDJS","appPath","getAppPath","cwd","pathToRoot","rootPath","onFound","gdjsRoot","onNotFound","devPath","shouldNeverBeCalled","RaisedButtonWithMenu","RaisedButton","ResourceSelector","_addFrom","onChooseResource","initialSourceName","multiSelection","resourceKind","resources","resource","applyResourceDefaults","addResource","_loadFrom","_onChangeResourceName","_autoComplete","catch","_onResetResourceName","notExistingError","allResourcesNames","_editWith","resourceExternalEditor","resourcesLoader","initialResourceMetadata","initialResourceMetadataRaw","getMetadata","resourceNames","externalEditorOptions","singleFrame","extraOptions","fps","isLooping","externalEditorData","onChangesSaved","newResourceData","burstUrlsCacheForResources","edit","initialResourceName","nextProps","sources","resourceSources","displayName","getAllResourceNames","getKind","resourceSourceItems","_getResourceSourceItems","resourceItems","autoCompleteData","externalEditors","resourceExternalEditors","externalEditor","noFloatingLabelText","SemiControlledAutoComplete","openOnFocus","autoComplete","canBeReset","click","createOrUpdateResource","newlyCreatedResource","removeResource","setFile","setName","getLocalResourceFullPath","resourcePath","getResourceFullUrl","substring","lastIndexOf","isPathInProjectFolder","includes","copyAllToProjectFolder","resourcePaths","resourceBasename","fileExtension","extname","fileNameWithoutExtension","newFileNameWithoutExtension","newNameGenerator","tentativeFileName","tentativePath","existsSync","resourceNewPath","copyFile","getResourceFilePathStatus","normalize","newResource","ImageResource","setSmooth","getScaleMode","renameResourcesInProject","resourceNewNames","renamedResourcesMap","toNewGdMapStringString","resourcesRenamer","ResourcesRenamer","exposeResources","progress","isLoading","TRIVIAL_FIRST_EVENT","TRIVIAL_FIRST_BEHAVIOR","TRIVIAL_FIRST_PREVIEW","TRIVIAL_FIRST_WEB_EXPORT","TRIVIAL_FIRST_EXTENSION","TRIVIAL_FIRST_EFFECT","TRIVIAL_FIRST_DEBUG","isAchievementAlreadyClaimed","achievementId","badge","createOrEnsureBadgeForUser","authenticatedUser","uid","GDevelopUserApi","status","addCreateBadgePreHookIfNotClaimed","callback","args","apply","getAchievements","markBadgesAsSeen","unseenBadges","seen","compareAchievements","unlockedAt","useCommand","commandName","enabled","command","commandManager","CommandsContext","handler","registerCommand","deregisterCommand","useCommandWithOptions","generateOptions","pixiResourcesLoader","_pixiObject","_instance","_associatedObject","_pixiContainer","_project","_layout","_pixiResourcesLoader","wasUsed","removeChild","angleInDegrees","picker","right","ColorField","disableAlpha","_textField","parseFloat","_handlePickerChange","rgb","onChangeComplete","Table","TableBody","TableHeader","TableHeaderColumn","TableRow","TableRowColumn","isDialogOpen","body","document","activeEl","activeElement","mainFrame","querySelector","isInMainframe","contains","reservedShortcuts","isUserTyping","closest","getKeyTypeFromCode","code","getShortcutMetadataFromEvent","shortcutString","ctrlKey","metaKey","shiftKey","altKey","getShortcutStringFromEvent","isValidKey","keyType","ctrlOrCmdPressed","altPressed","isValidShortcutEvent","isReserved","isValid","useShortcutMap","userShortcutMap","PreferencesContext","defaultShortcuts","useKeyboardShortcuts","onRunCommand","shortcutMap","shortcutData","find","commandsList","handledByElectron","getShortcutDisplayName","keyCode","getKeyDisplayName","getElectronAccelerator","getElectronKeyString","isRelativePathToDocumentationRoot","isDocumentationAbsoluteUrl","electronClipboard","clipboard","internalClipboard","mangleClipboardKind","SafeExtractor","anything","propertyName","extractObject","property","extractArray","isArray","Clipboard","writeText","readText","has","columnContainer","fieldContainer","subPropertiesEditorContainer","subHeader","getFieldValue","instances","log","getValue","getFieldLabel","getLabel","PropertiesEditor","onInstancesModified","schema","mode","renderExtraDescriptionText","unsavedChanges","forceUpdate","useForceUpdate","_onInstancesModified","triggerUnsavedChanges","getFieldDescription","descriptions","getExtraDescription","renderInputField","valueType","onEditButtonClick","renderSelectField","getChoices","index","renderContainer","fields","renderSectionTitle","additionalText","selectedInstancesValue","nonFieldType","contentView","renderResourceField","useFilters","chosenCategory","setChosenCategory","Set","chosenFilters","setChosenFilters","newChosenCategory","newChosenFilters","allChildrenTags","addFilter","removeFilter","FiltersChooser","filtersState","allFilters","selectedCategoryTags","defaultTags","str","toUpperCase","defaultState","eventsFunctionsExtensionsError","loadProjectEventsFunctionsExtensions","unloadProjectEventsFunctionsExtensions","reloadProjectEventsFunctionsExtensions","unloadProjectEventsFunctionsExtension","getEventsFunctionsExtensionWriter","getEventsFunctionsExtensionOpener","ensureLoadFinished","getIncludeFileHashs","EventsFunctionsExtensionsContext","isCompatibleWithAsset","ideVersion","assetHeader","gdevelopVersion","semverSatisfies","includePrerelease","listAllAssets","GDevelopAssetApi","assetShortHeadersUrl","assetShortHeaders","getAsset","assetShortHeader","assetUrl","listAllResources","resourcesUrl","listAllAuthors","authorsUrl","listAllLicenses","licensesUrl","isPixelArt","some","isRootVariableName","EventsRootVariablesFinder","EventsVariablesFinder","findAllGlobalVariables","toNewVectorString","findAllLayoutVariables","findAllObjectVariables","freeActionsToAddToObject","BuiltinObject","freeConditionsToAddToObject","freeActionsToAddToBehavior","freeConditionsToAddToBehavior","Physics2","freeInstructionsToRemove","getExtensionPrefix","getCategory","deduplicateInstructionsList","createFound","enumerateInstruction","filterInstructionsToRemove","typesToRemove","types","enumerateExtraBehaviorInstructions","isCondition","behaviorType","extensionName","extensionsExtraInstructions","objectExtraInstructions","instructionMetadataMap","getAllConditions","getAllActions","enumerateExtraObjectInstructions","instrMetadata","displayedName","getGroup","fullGroupName","isPrivate","enumerateExtensionInstructions","instructions","instructionsTypes","allInstructions","j","isHidden","isUnsupportedBaseObjectCapability","getRequiredBaseObjectCapability","enumerateAllInstructions","allExtensions","asPlatform","allObjectsTypes","allBehaviorsTypes","getBehaviorsTypes","extensionFreeInstructions","behaviorMetadata","getAllConditionsForObject","getAllActionsForObject","getBehaviorMetadata","getAllConditionsForBehavior","getAllActionsForBehavior","enumerateObjectAndBehaviorsInstructions","objectBehaviorNames","getBehaviorsOfObject","objectBehaviorTypes","behaviorName","getTypeOfBehavior","extensionAndObjectMetadata","MetadataProvider","getExtensionAndObjectMetadata","getExtension","baseObjectExtension","noGroupInstructions","instructionsWithGroups","orderFirstInstructionsWithoutGroup","enumerateFreeInstructions","allFreeInstructions","getObjectParameterIndex","parametersCount","firstParameterType","ParameterMetadata","isObject","secondParameterType","getCurrentElements","animationIndex","directionIndex","spriteIndex","hasValidAnimation","getAnimationsCount","getAnimation","hasValidDirection","getDirectionsCount","direction","getDirection","hasValidSprite","getSpritesCount","sprite","getSprite","getAllPointNames","allPointNames","points","getAllNonDefaultPoints","pointIndex","point","copyPoint","originalPoint","destinationPoint","setX","getX","setY","getY","copySpritePoints","originalSprite","destinationSprite","getCenter","getOrigin","setDefaultCenterPoint","isDefaultCenterPoint","clear","addPoint","copyAnimationsSpritePoints","isSamePoint","point1","point2","allDirectionSpritesHaveSamePointsAs","every","sprite1","sprite2","sprite1Point","hasPoint","getPoint","allSpritesHaveSamePointsAs","copySpritePolygons","setCollisionMaskAutomatic","isCollisionMaskAutomatic","getCustomCollisionMask","originalPolygon","push_back","copyAnimationsSpriteCollisionMasks","haveSameCollisionMasks","sprite1CollisionMask","sprite2CollisionMask","sprite1Polygon","polygon1","polygon2","polygon1Vertices","getVertices","polygon2Vertices","get_x","get_y","isSamePolygon","allDirectionSpritesHaveSameCollisionMasksAs","allSpritesHaveSameCollisionMasksAs","deleteSpritesFromAnimation","spritePtrs","spritesToDelete","removeSprite","duplicateSpritesInAnimation","spritesToDuplicate","spriteToDuplicate","newSprite","setImageName","getImageName","addSprite","moveSprite","mainButton","RaisedButtonWithSplitMenu","focusRipple","mangleName","caseSensitiveSlug","getFreeFunctionCodeNamespace","eventsFunction","codeNamespacePrefix","eventsFunctionCodeWriter","getEventsFunctionsExtensionsCount","loadProjectEventsFunctionsExtension","getEventsFunctionsExtensionAt","skipCodeGeneration","eventsFunctionsExtension","generateEventsFunctionExtension","addNewExtension","PlatformExtension","declareExtension","codeGenerationContext","extensionIncludeFiles","getEventsFunctionsCount","getEventsFunctionAt","isExtensionLifecycleEventsFunction","functionName","getIncludeFileFor","getExtensionIncludeFiles","getEventsBasedBehaviors","eventsBasedBehavior","declareBehaviorMetadata","eventsFunctionsContainer","getEventsFunctions","codeNamespace","getBehaviorFunctionCodeNamespace","includeFile","setIncludeFile","addIncludeFile","behaviorMethodMangledNames","MapStringString","declareBehaviorPropertiesInstructionAndExpressions","eventsFunctionMangledName","set","instructionOrExpression","declareBehaviorInstructionOrExpressionMetadata","declareEventsFunctionParameters","isBehaviorLifecycleEventsFunction","setHidden","setPrivate","getCodeExtraInformation","setFunctionName","includeFiles","SetString","behaviorCodeGenerator","BehaviorCodeGenerator","generateRuntimeBehaviorCompleteCode","writeBehaviorCode","generateBehavior","generateFreeFunction","declareInstructionOrExpressionMetadata","addCodeOnlyParameter","codeExtraInformation","EventsFunctionsExtensionCodeGenerator","generateFreeEventsFunctionCompleteCode","writeFunctionCode","removeExtension","isAnEventFunctionMetadata","getFunctionNameFromType","parts","getFreeEventsFunctionType","getParametersIndexOffset","isEventsBasedBehaviorMethod","ViewPosition","initialViewX","initialViewY","instancesEditorSettings","viewX","viewY","toSceneCoordinates","x","y","_width","_height","abs","zoomFactor","tmp","cos","viewRotation","PI","sin","toCanvasCoordinates","resize","scale","ToolbarIcon","removeTag","selectedTag","buildTagsMenuTemplate","noTagLabel","getAllTags","onEditTags","editTagsLabel","allTags","footerMenuItems","newTags","getTagsFromString","tagsString","getStringFromTags","VariablesEditorDialog","onCancel","onEditObjectVariables","emptyPlaceholderTitle","emptyPlaceholderDescription","variablesContainer","hotReloadPreviewButtonProps","onComputeAllVariableNames","onCancelChanges","useSerializableObjectCancelableEditor","serializableObject","actions","keyboardFocused","cannotBeDismissed","secondaryActions","flexBody","fullHeight","commitVariableValueOnBlur","onSizeUpdated","EmptyPlaceholder","whiteSpace","actionLabel","onAdd","actionButtonId","tooltipOrHelperText","properties","getProperties","onUpdateProperty","propertyNames","fieldsByGroups","Map","propertyDescription","choices","getAllBehaviorNames","getBehavior","getTypeName","defaultGroupField","sort","localeCompare","CheckeredBackground","backgroundStyle","background","imagePreview","backgroundFilter","enumerateLayouts","getLayoutsCount","getLayoutAt","enumerateExternalEvents","getExternalEventsCount","getExternalEventsAt","enumerateExternalLayouts","getExternalLayoutsCount","getExternalLayoutAt","enumerateEventsFunctionsExtensions","filterProjectItemsList","lowercaseSearchText","item","bottom","DismissableInfoBar","show","touchScreenMessage","preferences","screenType","isUserflowRunning","action","listAllExamples","getExample","exampleShortHeader","getUserExampleShortHeaders","authorId","addButton","DropTarget","makeDropTarget","reactDndInstructionType","InstructionsList","addButtonLabel","areConditions","instrsList","onAddNewInstruction","onPasteInstructions","onMoveToInstruction","onMoveToInstructionsList","onInstructionClick","onInstructionContextMenu","onInstructionDoubleClick","onAddInstructionContextMenu","onParameterClick","selection","renderObjectThumbnail","windowWidth","canPaste","setCanPaste","addNewInstruction","pasteInstructions","instructionContext","indexInList","isInstructionSelected","domEvent","onAddNewSubInstruction","onPasteSubInstructions","onMoveToSubInstruction","onMoveToSubInstructionsList","onSubInstructionClick","onSubInstructionDoubleClick","onSubInstructionContextMenu","onAddSubInstructionContextMenu","onSubParameterClick","instructionsListContext","addButtonDefaultLabel","canDrop","draggedItem","drop","connectDropTarget","isOver","onPointerEnter","hasClipboardConditions","hasClipboardActions","onPointerLeave","stopPropagation","getObjectGroupListItemKey","getObjectListItemKey","getObjectOrObjectGroupListItemValue","objectOrObjectGroupName","getInstructionListItemKey","getInstructionListItemValue","instructionType","getSubheaderListItemKey","subheader","popover","paddingBottom","overflowX","minHeight","InlinePopover","startSentinel","endSentinel","MouseEvent","shouldFocusNextField","shouldFocusPreviousField","tabIndex","addNode","currentNode","newNode","splitPercentage","second","first","replaceNode","oldNode","defaultToolbarControls","renderMosaicWindowPreview","MosaicWindow","toolbarControls","renderPreview","EditorMosaic","mosaicNode","initialNodes","openEditor","editorName","editors","limitToOneSecondaryEditor","editor","openedEditorNames","getLeaves","secondaryEditorName","_persistNodes","_onChange","onPersistNodes","mosaicRootClassName","renderTile","noTitleBar","renderEditor","Rectangle","rectangle","Toolbar","toolbarGroupStyle","lastChild","ToolbarGroup","borderLeftStyle","borderLeftWidth","borderColor","separatorColor","commandAreas","GENERAL","IDE","PROJECT","SCENE","EVENTS","QUIT_APP","area","displayText","OPEN_PROJECT_MANAGER","OPEN_PROFILE","OPEN_GAMES_DASHBOARD","LAUNCH_NEW_PREVIEW","LAUNCH_DEBUG_PREVIEW","LAUNCH_NETWORK_PREVIEW","HOT_RELOAD_PREVIEW","OPEN_HOME_PAGE","CREATE_NEW_PROJECT","OPEN_PROJECT","SAVE_PROJECT","SAVE_PROJECT_AS","CLOSE_PROJECT","EXPORT_GAME","OPEN_RECENT_PROJECT","OPEN_COMMAND_PALETTE","ghost","OPEN_PROJECT_PROPERTIES","OPEN_PROJECT_LOADING_SCREEN","OPEN_PROJECT_VARIABLES","OPEN_PLATFORM_SPECIFIC_ASSETS_DIALOG","OPEN_PROJECT_RESOURCES","OPEN_SEARCH_EXTENSIONS_DIALOG","OPEN_LAYOUT","OPEN_EXTERNAL_EVENTS","OPEN_EXTERNAL_LAYOUT","OPEN_EXTENSION","OPEN_SCENE_PROPERTIES","OPEN_SCENE_VARIABLES","OPEN_OBJECTS_PANEL","OPEN_OBJECT_GROUPS_PANEL","OPEN_PROPERTIES_PANEL","TOGGLE_INSTANCES_PANEL","TOGGLE_LAYERS_PANEL","SCENE_EDITOR_UNDO","noShortcut","SCENE_EDITOR_REDO","DELETE_INSTANCES","TOGGLE_WINDOW_MASK","TOGGLE_GRID","OPEN_SETUP_GRID","EDIT_LAYER_EFFECTS","EDIT_LAYER","EDIT_OBJECT","EDIT_OBJECT_BEHAVIORS","EDIT_OBJECT_EFFECTS","EDIT_OBJECT_VARIABLES","EDIT_OBJECT_GROUP","ADD_STANDARD_EVENT","ADD_SUBEVENT","ADD_COMMENT_EVENT","TOGGLE_EVENT_DISABLED","CHOOSE_AND_ADD_EVENT","EVENTS_EDITOR_UNDO","EVENTS_EDITOR_REDO","DELETE_SELECTION","SEARCH_EVENTS","OPEN_EXTENSION_SETTINGS","currentTouchCallbackEvent","clientX","clientY","clearTimeout","capture","onTouchStart","touches","getClientXY","onTouchMove","touch","onTouchEnd","chipContainer","chip","getChipColor","randomColor","seed","luminosity","focusedTag","setFocusedTag","removedTagIndex","setRemovedTagIndex","tagRefs","useEffect","tagToFocus","getChipStyle","useCallback","isFocused","handleDeleteTag","nativeEvent","KeyboardEvent","tagIndex","newRef","createRef","onDelete","useProjectToUnserialize","serializedElementRef","serializeTo","unserializeFrom","overflow","textOverflow","NewPreviewIcon","PlayCircleFilledIcon","HotReloadPreviewIcon","OfflineBoltIcon","HotReloadPreviewButton","launchProjectDataOnlyPreview","hasPreviewsRunning","borderRadius","swatch","boxShadow","ColorPicker","_swatch","displayColorPicker","handleClick","handleClose","displayedColor","onClose","transformTagsAsStringToTagsAsArray","dataWithTags","isCompatibleWithExtension","extensionShortHeader","getExtensionsRegistry","extensionsRegistry","extensionShortHeaders","getExtensionHeader","headerUrl","extensionHeader","getUserExtensionShortHeaders","iconBackground","IconContainer","highlightText","matchCoordinates","styleToApply","highlightTextStart","highlightTextEnd","beforeText","highlightedText","afterText","HighlightedText","matchesCoordinates","returnText","startIndexOfNextMatch","startIndex","highlighted","getInitialSelection","selectedInstructions","selectedEvents","selectedInstructionsLists","getSelectedEvents","eventContext","getSelectedEventContexts","getSelectedInstructions","getSelectedInstructionsContexts","getSelectedInstructionsListsContexts","isEventSelected","hasEventSelected","hasInstructionSelected","hasSelectedAtLeastOneCondition","hasInstructionsListSelected","hasSomethingSelected","clearSelection","selectEvent","existingSelection","selectInstruction","createTree","allExpressions","tree","pathInTree","compact","update","groupInfo","existingGroupInfo","findInTree","instructionTreeNode","instructionOrGroup","searchResult","filterEnumeratedInstructionOrExpressionMetadataByScope","enumeratedInstructionOrExpressionMetadata","getNamespaceSeparator","oneColumnContainer","twoColumnsContainer","ConditionsActionsColumns","renderConditionsList","renderActionsList","leftIndentWidth","listAllTutorials","getObjectTutorialIds","getBehaviorTutorialIds","getInstructionTutorialIds","previewImagePixelated","imageRendering","getPixelatedImageRendering","contentContainer","imagePreviewContainer","touchAction","spriteThumbnailImage","pointerEvents","loadStateFrom","newProps","errored","imageSource","ImagePreview","imageWidth","imageHeight","imageZoomFactor","handleImageError","handleImageLoaded","imgElement","naturalWidth","naturalHeight","clientHeight","onSize","zoomBy","imageZoomFactorDelta","zoomTo","frameBorderColor","previewBorderColor","bounds","contentRect","measureRef","containerWidth","containerHeight","renderOverlay","fixedHeight","imageLoaded","imagePositionTop","imagePositionLeft","imageStyle","visibility","asImageResource","isSmooth","resourceIsSmooth","frameStyle","border","overlayStyle","useFullHeight","dir","onWheel","deltaY","onError","onLoad","offsetTop","offsetLeft","ElectronMenuImplementation","template","menuTemplate","Menu","browserWindow","getCurrentWindow","menu","buildFromTemplate","popup","async","SubMenuItem","menuOpen","setMenuOpen","anchorElement","useRef","setAnchorElement","Fragment","MenuItem","TransitionComponent","Fade","submenu","MaterialUIMenuImplementation","_onClose","visible","Divider","ListItemIcon","ListItemText","MaterialUIContextMenu","forwardRef","anchorPosition","setAnchorPosition","openMenu","setOpenMenu","buildOptions","setBuildOptions","menuImplementation","useImperativeHandle","anchorReference","getMenuProps","ElectronContextMenu","showMenu","ElectronContextMenuWrapper","electronContextMenu","ItemRow","prevProps","editingName","itemName","renderItemLabel","isBold","errorStatus","onItemSelected","hideMenuButton","scaleUpItemIconWhenSelected","connectIconDragSource","onRename","selectedTextColor","fontWeight","itemStyle","borderBottom","selectedBackgroundColor","selectedErrorBackgroundColor","selectedWarningBackgroundColor","errorTextColor","warningTextColor","ListIcon","selectedRightIconColor","borderTop","DropIndicator","SortableVirtualizedItemList","DragSourceAndDropTarget","makeDragSourceAndDropTarget","reactDndType","_list","forceUpdateGrid","selectedItems","getItemThumbnail","erroredItems","isItemBold","onEditItem","renamedItem","getItemName","getItemId","nameBeingEdited","newName","fullList","addNewItemLabel","addNewItemId","onAddNewItem","onMoveSelectionToItem","canMoveSelectionToItem","ResponsiveWindowMeasurer","rowCount","rowHeight","rowRenderer","isSelected","beginDrag","canDrag","connectDragSource","canDragOnlyIcon","dropTarget","_renderItemRow","ResourceThumbnail","ImageThumbnail","selectable","onSelect","selectorContainer","resourceThumbnail","ResourceSelectorWithThumbnail","UnsavedChangesContext","hasUnsavedChanges","sealUnsavedChanges","UnsavedChangesContextProvider","Provider","handle","disabledHandle","handleColor","DragHandle","SortableHandle","htmlColor","validatePackageName","packageName","getProjectPropertiesErrors","t","addError","extraExplanation","getPackageName","getVersion","displayProjectErrorsBox","showErrorBox","rawError","errorId","doNotReport","findAndLogProjectPreviewErrors","problems","WholeProjectRefactorer","findInvalidRequiredBehaviorProperties","problem","suggestedBehaviorNames","getBehaviorsWithType","getSourceObject","getExpectedBehaviorTypeName","getSourcePropertyName","getSourceBehaviorContent","GameRegistration","hideIfRegistered","hideIfSubscribed","hideLoader","onGameRegistered","setError","unavailableReason","setUnavailableReason","setGame","registrationInProgress","setRegistrationInProgress","acceptGameStatsEmailInProgress","setAcceptGameStatsEmailInProgress","detailsOpened","setDetailsOpened","detailsInitialTab","setDetailsInitialTab","loadGame","getProjectUuid","onRegisterGame","getAuthor","_onAcceptGameStatsEmail","GameRegistrationWidget","getGameStatsEmail","initialTab","onGameUpdated","updatedGame","onGameDeleted","getSubscriptionPlans","planId","monthlyPriceInEuros","smallDescription","descriptionBullets","extraDescription","getUserUsages","GDevelopUsageApi","getUserLimits","getUserSubscription","changeUserSubscription","newSubscriptionDetails","getRedirectToCheckoutUrl","email","encodeURIComponent","initialLeaderboardState","leaderboards","currentLeaderboard","displayOnlyBestEntry","browsing","entries","goToNextPage","goToPreviousPage","goToFirstPage","createLeaderboard","listLeaderboards","selectLeaderboard","setDisplayOnlyBestEntry","updateLeaderboard","resetLeaderboard","deleteLeaderboard","deleteLeaderboardEntry","entryId","fetchLeaderboardEntries","LeaderboardContext","sharedFuseConfiguration","minMatchCharLength","threshold","includeMatches","ignoreLocation","tuneMatchIndices","match","lowerCaseSearchText","indices","lowerCaseMatchedText","indexOfSearchTextInMatchedText","tuneMatches","matches","filterSearchResults","searchResults","startTime","performance","filteredSearchResults","isTagContainerOnly","parentNodes","parentNode","totalTime","toFixed","useSearchItem","searchItemsById","searchApiRef","setSearchResults","shuffledSearchResults","shuffle","newSearchApi","Fuse","weight","searchApi","discardSearch","results","search","grid","ListSearchResults","searchItems","getSearchItemUniqueId","renderSearchItem","cachedHeightsForWidth","cachedHeights","onItemHeightComputed","searchItem","getRowHeight","renderRow","rowIndex","recomputeGridSize","el","columnCount","columnWidth","cellRenderer","UserPublicProfileChip","user","isClickable","openUserPublicProfile","PublicProfileContext","CommandManager","CommandsContextProvider","useRefInit","getGroupIconSrc","getInstructionOrExpressionGroupMetadata","getIcon","InstructionOrExpressionSelector","_scrollView","_selectedItem","initialInstructionTypePath","instructionsInfoTree","_searchBar","instructionsInfo","searchPlaceholderObjectName","searchPlaceholderIsCondition","useSubheaders","onClickMore","displayedInstructionsList","hasResults","onSubmitSearch","itemsBackgroundColor","renderInstructionOrExpressionListItem","instructionOrExpressionMetadata","selectedValue","renderInstructionOrExpressionTree","initiallyOpenedPath","selectedItemRef","DismissableTutorialMessage","tutorialId","showTutorialHint","tutorials","TutorialContext","hiddenTutorialHints","tutorial","link","fetchTutorials","TutorialStateProvider","setTutorials","allTutorials","tutorialState","setExtensionInformation","setExtensionHelpPath","getHelpPath","setIconUrl","getIconUrl","addInstructionOrExpressionGroupMetadata","setIcon","setCategory","declareExtensionDependencies","getAllDependencies","dependency","addDependency","copyFrom","getExtensionIconUrl","generatedBehavior","BehaviorJsImplementation","enumeratedProperties","enumerateNamedPropertyDescriptorsList","getPropertyDescriptors","updateProperty","behaviorContent","enumeratedProperty","addChild","propertyType","setStringValue","setDoubleValue","setBoolValue","behaviorProperties","MapStringPropertyDescriptor","newProperty","toGdPropertyDescriptor","getOrCreate","hasChild","getChild","getStringValue","getDoubleValue","getBoolValue","initializeContent","addBehavior","BehaviorsSharedData","setObjectType","getObjectType","EventsFunctionsExtension","functionType","getFunctionType","EventsFunction","Expression","addExpression","StringExpression","addStrExpression","Condition","addCondition","getSentence","addAction","addScopedCondition","addScopedAction","addObjectAndBehaviorParameters","addParameter","setExtraInfo","getterName","getBehaviorPropertyGetterName","setterName","getBehaviorPropertySetterName","propertyLabel","EventsBasedBehavior","getPropertyExpressionName","getPropertyConditionName","useStandardRelationalOperatorParameters","getPropertyActionName","useStandardOperatorParameters","setManipulatedType","setGetter","parameter","isCodeOnly","isOptional","setParameterLongDescription","setDefaultValue","getDefaultValue","InstancesSelection","getSelectedInstances","compare","multiselect","layersVisibility","isInstanceSelected","unselectInstance","getLayer","selectInstance","splice","getObjectName","layerName","getEditorConfiguration","editorConfigurations","registerEditorConfiguration","editorConfiguration","createNewObject","castToObjectType","getDefaultObjectJsImplementationPropertiesEditor","ObjectPropertiesEditor","asObjectJsImplementation","clone","release","SpriteEditor","SpriteObject","asSpriteObject","TiledSpriteEditor","TiledSpriteObject","asTiledSpriteObject","PanelSpriteEditor","PanelSpriteObject","asPanelSpriteObject","TextEditor","TextObject","asTextObject","ShapePainterEditor","ShapePainterObject","asShapePainterObject","EmptyEditor","TextEntryObject","asTextEntryObject","ParticleEmitterEditor","ParticleEmitterObject","asParticleEmitterObject","dialog","LocalFolderPicker","_onChooseFolder","showOpenDialog","defaultPath","filePaths","_getTitleAndMessage","titleAndMessage","PureComponent","ExplanationHeader","DoneFooter","renderGameButton","cordovaExporter","tabName","helpPage","electronExporter","facebookInstantGamesExporter","SetupExportHeader","exportState","updateExportState","targetName","prevExportState","signingDialogOpen","onlineCordovaExporter","setTarget","enable","onlineElectronExporter","SvgIcon","d","fill","getIconStyle","useResponsiveWindowWidth","ItchIo","GameJolt","Poki","CrazyGames","NewsGround","FlatButton","html5Exporter","InfoBar","hide","Snackbar","OnlineGamePropertiesDialog","onSaveProject","getCategories","setCategories","setDescription","getAuthorIds","authorIds","setAuthorIds","isPlayableWithKeyboard","setPlayableWithKeyboard","isPlayableWithGamepad","setPlayableWithGamepad","isPlayableWithMobile","setPlayableWithMobile","setUserSlug","cleanUpGameSlug","getOrientation","setOrientation","setDiscoverable","saveProjectAndPublish","onPublish","applyPublicPropertiesToProject","Dialog","PublicGameProperties","displayThumbnail","OnlineGameLink","exportStep","showCopiedInfoBar","setShowCopiedInfoBar","isShareDialogOpen","setIsShareDialogOpen","isOnlineGamePropertiesDialogOpen","setIsOnlineGamePropertiesDialogOpen","setSlug","isGameLoading","setIsGameLoading","exportPending","isBuildComplete","isBuildPublished","gameUrl","buildUrl","slugs","onOpen","onCopy","navigator","onShare","share","shareData","onGameUpdate","partialGameChange","createdAt","dialogActions","LinearProgress","Copy","FacebookShareButton","quote","hashtag","FacebookIcon","RedditShareButton","RedditIcon","TwitterShareButton","hashtags","TwitterIcon","WhatsappShareButton","WhatsappIcon","EmailShareButton","subject","EmailIcon","CircularProgress","onlineWebExporter","Toggle","toggled","onToggle","SortableVariableRow","SortableElement","VariableRow","SortableVariablesListBody","SortableContainer","muiName","VariablesList","nameErrors","selectedVariables","allVariableNames","_selectVariable","variableAndName","addToSelection","copySelection","CLIPBOARD_KIND","getSelection","variable","serializedVariable","paste","inheritedVariablesContainer","clipboardContent","variablesContent","variableContent","extractStringProperty","extractObjectProperty","newVariable","Variable","insert","deleteSelection","otherVariableAndName","removeRecursively","_updateOrDefineVariable","origin","String","setString","Number","setBool","_getVariableOrigin","addVariable","parentVariable","depth","names","getAllChildrenNames","_renderVariableAndChildrenRows","getChildrenCount","getAtIndex","parentOrigin","arrayElement","isCollection","isPrimitive","onChangeValue","onResetToDefaultValue","onChangeType","newType","castTo","onChangeName","success","renameChild","rename","Structure","removeAtIndex","onAddChild","pushNew","_renderStructureChildren","_renderArrayChildren","showHandle","showSelectionCheckbox","undefinedVariableNames","variableName","containerInheritedVariablesTree","getNameAt","containerVariablesTree","allVariables","onSortEnd","oldIndex","newIndex","move","helperClass","useDragHandle","lockToContainerEdges","onPaste","onDeleteSelection","hasSelection","hasClipboard","TreeTableRow","TreeTableCell","floor","random","cyrillicToLatinMapping","latinGameSlug","char","latin","setOwnerIds","ownerIds","categoryInput","setCategoryInput","optionsLimit","userIds","useIsMounted","isMounted","searchUserPublicProfilesByUsername","searchString","getUserBadges","getUserPublicProfilesByIds","ids","getUserPublicProfile","useOnlineStatus","onLine","onlineStatus","setOnlineStatus","goOnline","goOffline","extractEntryDisplayData","playerName","score","extractExtremeScoreDisplayData","relatedEntryId","relatedEntryCreatedAt","breakUuid","uuid","listGameLeaderboards","GDevelopPlayApi","leaderboard","deletedAt","extractNextPageUriFromLinkHeader","linkHeader","mapRelationToUri","reduce","acc","relationRegexMatch","uriMatch","next","listLeaderboardEntries","leaderboardId","forceUri","onlyBestEntry","perPage","pageSize","nextPageUri","payload","put","iconText","SubscriptionCheckDialog","_closeDialog","sendSubscriptionCheckDismiss","sendSubscriptionCheckDialogShown","onChangeSubscription","SubscriptionChecker","_dialog","checkHasSubscription","ExtensionStoreContext","fetchExtensionsAndFilters","setSearchText","extensionShortHeadersByName","ExtensionStoreStateProvider","setExtensionShortHeadersByName","setFilters","extensionRegistry","sortedTags","tag1","tag2","tagsTree","timeoutId","extensionStoreState","errorHandler","componentStack","sendErrorMessage","ErrorFallbackComponent","stack","getIDEVersionWithHash","getArch","getPlatformName","getSystemVersion","getUserAgent","ErrorBoundary","FallbackComponent","installExtension","eventsFunctionsExtensionsState","serializedExtension","addSerializedExtensionsToProject","importExtension","eventsFunctionsExtensionOpener","chooseEventsFunctionExtensionFile","pathOrUrl","readEventsFunctionExtensionFile","hasEventsFunctionsExtensionNamed","optionalLazyRequire","moduleName","moduleLoaded","bodyRoot","AccordionHeader","expandIcon","alignSelf","AccordionBody","Accordion","costlyBody","TransitionProps","sourceSpec","monitor","getItem","targetSpec","didDrop","InnerDragSourceAndDropTarget","DragSource","connect","dragSource","shallow","zoomLevel","EventsSheetComponentWithoutHandle","_containerDiv","_keyboardShortcuts","KeyboardShortcuts","isActive","inlineEditing","editedInstruction","analyzedEventsContextResult","serializedEventsToExtract","shortcutCallbacks","onCut","cutSelection","pasteEventsOrInstructions","onSearch","_toggleSearchPanel","onEscape","_closeSearchPanel","onUndo","undo","onRedo","redo","onZoomIn","onZoomEvent","onZoomOut","history","getHistoryInitialState","events","historyMaxSize","editedParameter","inlineEditingAnchorEl","inlineInstructionEditorAnchorEl","inlineEditingChangesMade","inlineEditingPreviousValue","showSearchPanel","searchFocusOffset","allEventsMetadata","textEditedEvent","_addStandardEvent","addNewEvent","_addCommentEvent","_searchPanel","isSearchOngoing","_eventSearcher","reset","addSubEvents","canHaveSubEvents","getSubEvents","insertNewEvent","getEventsCount","_saveChangesToHistory","_eventsTree","forceEventsUpdate","_selectionCanHaveSubEvents","_selectionCanToggleDisabled","isExecutable","_addNewEvent","context","hasEventsSelected","insertTopOfSelection","insertions","selectedEvent","eventsList","newEvents","scrollToEvent","openEventTextDialog","editableEvents","filterEditableWithEventTextDialog","closeEventTextDialog","_buildInstructionContextMenu","canUndo","canRedo","_invertSelectedConditions","openAddInstructionContextMenu","openInstructionEditor","Instruction","moveSelectionToInstruction","destinationContext","moveSelectionToInstructionsList","destinationIndex","isTryingToDragAnInstructionIntoItsOwnNestedInstructions","containsSubInstructions","shouldCloneInstances","deleteEvents","multiSelect","shouldMultiSelect","updateToolbar","collapseAll","foldAll","expandToLevel","unfoldToLevel","_buildEventContextMenu","pasteEvents","hasClipboardEvents","toggleDisabled","extractEventsToFunction","moveEventsIntoNewGroup","_openEventsContextAnalyzer","eventsSheetZoomLevel","openEventContextMenu","eventContextMenu","openInstructionContextMenu","instructionContextMenu","openParameterEditor","parameterContext","closeParameterEditor","shouldCancel","setParameter","shouldBeSaved","setDisabled","isDisabled","deleteInstructions","eventsRemover","EventsRemover","addEventToRemove","addInstructionToRemove","launch","_ensureFocused","copySelectionToClipboard","pasteEventsFromClipboardInSelection","pasteInstructionsFromClipboardInSelection","pasteInstructionsInInstructionsList","pasteInstructionsFromClipboardInInstructionsList","setInverted","isInverted","cb","saveToHistory","markSearchResultsDirty","newHistory","towards","factor","setEventsSheetZoomLevel","eventsContextAnalyzer","EventsContextAnalyzer","EventsList","insertEvent","toEventsContextResult","getEventsContext","_closeEventsContextAnalyzer","onBeginCreateEventsFunction","_replaceSelectionByGroupOfEvents","_replaceSelectionByEventsFunction","contexts","createNewInstructionForEventsFunction","asStandardEvent","getActions","groupEvent","asGroupEvent","setFolded","insertEvents","_ensureEventUnfolded","unfoldForEvent","_replaceInEvents","doReplaceInEvents","inputs","_searchInEvents","doSearchInEvents","_onEventMoved","_renderInstructionEditorDialog","newInstructionEditorDialog","NewInstructionEditorMenu","NewInstructionEditorDialog","InstructionEditorDialog","isNewInstruction","closeInstructionEditor","onSubmit","ensureSingleOnceInstructions","openInstructionOrExpression","canPasteInstructions","containerDivElement","enumerateEventsMetadata","prevState","setToolbar","onAddStandardEvent","onAddSubEvent","canAddSubEvent","canToggleEventDisabled","onAddCommentEvent","onAddEvent","onToggleDisabledEvent","canRemove","onOpenSettings","onToggleSearchPanel","saveChanges","onOpenExternalEvents","onOpenLayout","onCreateEventsFunction","eventSearcher","eventsSearchResultEvents","searchInEvents","replaceInEvents","goToPreviousSearchResult","goToNextSearchResult","onDragOver","onScroll","onEventClick","onEventContextMenu","onAddNewEvent","eventType","onEventMoved","showObjectThumbnails","eventsSheetShowObjectThumbnails","eventsSheetHeight","searchPanel","onSearchInEvents","onReplaceInEvents","resultsCount","onGoToPreviousSearchResult","onCloseSearchPanel","onGoToNextSearchResult","eventsSheetCancelInlineParameter","useNewInstructionEditorDialog","eventsContextResult","serializedEvents","onCreate","leaderboardsManager","components","default","DefaultField","mouse","MouseField","ObjectField","relationalOperator","RelationalOperatorField","operator","OperatorField","yesorno","YesNoField","trueorfalse","TrueFalseField","string","StringField","stringWithSelector","StringWithSelectorField","behavior","BehaviorField","scenevar","SceneVariableField","globalvar","GlobalVariableField","objectvar","ObjectVariableField","layer","LayerField","KeyField","musicfile","AudioResourceField","soundfile","imageResource","ImageResourceField","videoResource","VideoResourceField","jsonResource","JsonResourceField","bitmapFontResource","BitmapFontResourceField","fontResource","FontResourceField","ColorExpressionField","police","joyaxis","forceMultiplier","ForceMultiplierField","sceneName","SceneNameField","layerEffectName","LayerEffectNameField","layerEffectParameterName","LayerEffectParameterNameField","objectEffectName","ObjectEffectNameField","objectEffectParameterName","ObjectEffectParameterNameField","objectPointName","ObjectPointNameField","objectAnimationName","ObjectAnimationNameField","functionParameterName","FunctionParameterNameField","externalLayoutName","ExternalLayoutNameField","LeaderboardIdField","inlineRenderers","renderInlineDefaultField","renderInlineForceMultiplier","renderInlineGlobalVariable","renderInlineSceneVariable","renderInlineObjectVariable","renderInlineKey","renderInlineMouse","renderInlineObjectWithThumbnail","renderInlineYesNo","renderInlineTrueFalse","renderInlineOperator","renderInlineRelationalOperator","renderInlineLeaderboardIdField","userFriendlyTypeName","getParameterComponent","rawType","fieldType","renderInlineParameter","getUserFriendlyTypeName","_description","_longDescription","_allowedObjectType","allowedObjectType","requiredObjectCapability","errorTextIfInvalid","MissingParameterValue","classNames","loadedBitmapFonts","loadedFontFamilies","loadedTextures","invalidTexture","texture","baseTexture","scaleMode","NEAREST","onProgress","onComplete","loader","shared","allResources","totalCount","loadingCount","progressCallbackId","load","loadedResources","detach","_initializeTexture","LINEAR","resourceOptions","autoPlay","fullFilename","loadFontFace","loadedFace","fullUrl","focusButton","buttonRef","HTMLButtonElement","getElementsByTagName","filterOutCodeOnlyParameters","array","firstParameterIndex","filterVisibleParameters","lastRequiredIndex","lastProvidedIndex","arrayWithDefaults","lastParameterIndex","getVisibleParameterTypes","parameterTypes","functionArgs","VariableNameQuickAnalyzeResults","quicklyAnalyzeVariableName","character","VariableField","autocompletionVariableNames","updateAutocompletions","definedVariableNames","enumerateVariables","isValidName","useUndefinedVariablesInAutocompletion","uniq","onOpenDialog","quicklyAnalysisResult","contextType","renderVariableWithIcon","iconPath","enumerateEffectsMetadata","getExtensionEffectTypes","getEffectMetadata","effectMetadata","effectType","parametersSchema","parameterName","effect","getDoubleParameter","setDoubleParameter","getBooleanParameter","setBooleanParameter","getStringParameter","setStringParameter","isMarkedAsNotWorkingForObjects","enumeratedEffectMetadata1","enumeratedEffectMetadata2","enumerateEffectNames","effectsContainer","getEffectsCount","getEffectAt","setEffectDefaultParameters","clearParameters","getDeprecatedBehaviorsInformation","getExtraObjectsInformation","getExtraInstructionInformation","getInstructionMetadata","getConditionMetadata","getActionMetadata","findInstruction","useNewInstructionEditor","getChosenObjectState","discardInstructionTypeIfNotInObjectInstructions","chosenObjectInstructionsInfo","setType","chosenObjectName","chosenObjectInstructionsInfoTree","enumeratedInstructionMetadata","chooseInstruction","chooseObject","chooseObjectInstruction","setupInstructionParameters","setParametersCount","maybeBehaviorParameterIndex","maybeBehaviorParameterMetadata","isBehavior","allowedBehaviorType","behaviorNames","currentParameterValue","filterSearchItems","filteredSearchItems","getItemDescription","shuffledSearchItems","terminate","SearchApi","allIds","indexDocument","partialSearchResultIds","partialSearchResults","toNodeId","nodes","TagsTreeItems","tagsTreeNodes","newParentNodes","nodeId","onLabelClick","collapseIcon","MemoizedTagsTree","allItemsLabel","defaultExpanded","onNodeSelect","CategoryChooser","AssetStoreContext","authors","licenses","fetchAssetsAndFilters","getAssetShortHeaderSearchTerms","shortDescription","AssetStoreStateProvider","assetShortHeadersById","setAssetShortHeadersById","setAuthors","setLicenses","assetStoreState","pixelatedImageRenderingValue","CSS","supports","ResourceFetcherContext","ResourceFetcherDialog","fetchedResources","onAbandon","hasErrors","erroredResources","useResourceFetcher","resourceFetcher","setProgress","isFetching","setIsFetching","setFetchedResources","setOnRetry","setOnAbandon","ensureResourcesAreFetched","getResourcesToFetch","someResourcesWereFetched","fetchResources","total","renderResourceFetcherDialog","roundPosition","pos","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridType","cellX","cellY","deltaX","roundPositionForResizing","prepareInstancesEditorSettings","gridColor","gridAlpha","snap","windowMask","cloneInstancesEditorSettings","allResourceKindsAndMetadata","fileExtensions","createNewResource","AudioResource","FontResource","VideoResource","JsonResource","BitmapFontResource","GamesShowcaseContext","fetchShowcasedGamesAndFilters","allShowcasedGames","getShowcasedGameSearchTerms","showcasedGame","author","GamesShowcaseStateProvider","showcasedGamesByName","setShowcasedGamesByName","setAllShowcasedGames","gamesShowcaseState","ExampleStoreContext","fetchExamplesAndFilters","allExamples","ExampleStoreStateProvider","exampleShortHeadersById","setExampleShortHeadersById","setAllExamples","exampleShortHeaders","exampleStoreState","openExampleInWebApp","example","projectFileUrl","ExampleDialog","isOpening","setExample","loadExample","isCompatible","getIDEVersion","hasIcon","previewImageUrls","canOpenExample","onOpenExample","isStandaloneText","GD_STARTUP_TIMES","drawerContent","findStorageProviderFor","storageProviders","fileMetadataAndStorageProviderName","storageProviderName","storageProvider","internalName","initialPreviewState","previewLayoutName","previewExternalLayoutName","isPreviewOverriden","overridenPreviewLayoutName","overridenPreviewExternalLayoutName","MainFrame","useStateWithCallback","createDialogOpen","currentProject","currentFileMetadata","editorTabs","getEditorTabsInitialState","snackMessage","snackMessageOpen","updateStatus","openFromStorageProviderDialogOpen","saveToStorageProviderDialogOpen","gdjsDevelopmentWatcherEnabled","chooseResourceOptions","setChooseResourceOptions","onResourceChosen","setOnResourceChosen","_previewLauncher","isLoadingProject","setIsLoadingProject","isSavingProject","setIsSavingProject","projectManagerOpen","openProjectManager","introDialogOpen","openIntroDialog","languageDialogOpen","openLanguageDialog","helpFinderDialogOpen","openHelpFinderDialog","platformSpecificAssetsDialogOpen","openPlatformSpecificAssetsDialog","aboutDialogOpen","openAboutDialog","profileDialogInitialTab","setProfileDialogInitialTab","profileDialogOpen","openProfileDialog","preferencesDialogOpen","openPreferencesDialog","subscriptionDialogOpen","openSubscriptionDialog","exportDialogOpen","openExportDialog","previewLoading","setPreviewLoading","previewState","setPreviewState","commandPaletteRef","eventsFunctionsExtensionsContext","previewDebuggerServer","getPreviewDebuggerServer","usePreviewDebuggerServerWatcher","previewDebuggerIds","hotReloadLogs","clearHotReloadLogs","useOpenConfirmDialog","ensureInteractionHappened","renderOpenConfirmDialog","createDialogInitialTab","setCreateDialogInitialTab","renderExportDialog","renderCreateDialog","onCreateFromExampleShortHeader","onCreateBlank","renderPreviewLauncher","getStorageProviderOperations","getStorageProvider","integratedEditor","initialFileMetadataToOpen","introDialog","renderGDJSDevelopmentWatcher","renderMainMenu","openHomePage","_loadExtensions","getStartupTimesSummary","getAutoOpenMostRecentProject","getRecentProjectFiles","hadProjectOpenedDuringLastSession","storageProviderOperations","openInitialFileMetadata","openFromFileMetadataWithStorageProvider","openProfileDialogWithTab","_showSnackMessage","_closeSnackMessage","openFromFileMetadata","openSceneOrProjectManager","newEditorTabs","editorTab","getCurrentTab","editorRef","setEditorToolbar","_languageDidChange","reloadBuiltinExtensions","extensionsLoader","loadAllExtensions","getNotNullTranslationFunction","loadingResults","successLoadingResults","loadingResult","failLoadingResults","dangerous","dangerousLoadingResults","useDiscordRichPresence","closeProject","setHasProjectOpened","closeProjectTabs","loadFromProject","fileMetadata","insertRecentProjectFile","burstAllUrlsCache","setProjectFile","fileIdentifier","loadFromSerializedProject","serializedProject","timePromise","newProject","ProjectHelper","createNewGDJSProject","time","hasAutoSave","onGetAutoSave","getOpenErrorMessage","delay","canOpenAutosave","verifyProjectContent","errorMessage","closeApp","quit","toggleProjectManager","editorToolbar","isCurrentTab","setPreviewedLayout","autosaveProjectIfNeeded","autosaveOnPreview","onAutoSaveProject","_launchPreview","networkPreview","hotReload","projectDataOnlyExport","fullLoadingScreen","previewLauncher","notifyPreviewWillStart","layoutName","hasLayoutNamed","getLayout","externalLayout","hasExternalLayoutNamed","getExternalLayout","launchPreview","getIsMenuBarHiddenInPreview","getIsAlwaysOnTopInPreview","launchNewPreview","launchHotReloadPreview","launchNetworkPreview","launchProjectWithLoadingScreenPreview","openLayout","openEventsEditor","openSceneEditor","sceneEditorOptions","projectItemName","renderEditorContainer","renderSceneEditorContainer","eventsEditorOptions","renderEventsEditorContainer","dontFocusTab","tabsWithSceneEditor","openEditorTab","tabsWithSceneAndEventsEditors","openExternalEvents","renderExternalEventsEditorContainer","openExternalLayout","renderExternalLayoutEditorContainer","openEventsFunctionsExtension","initiallyFocusedFunctionName","initiallyFocusedBehaviorName","extraEditorProps","renderEventsFunctionsExtensionEditorContainer","role","titleAccess","renderHomePageContainer","closable","_openDebugger","renderDebuggerEditorContainer","openDebugger","launchDebuggerAndPreview","getEventsFunctionsExtension","foundTab","getEventsFunctionsExtensionEditor","selectEventsFunctionByName","changeCurrentTab","_onProjectItemModified","editorIdentifier","sendEventsExtractedAsFunction","parentEditor","createNewExtension","insertNewEventsFunctionsExtension","setFullName","insertEventsFunction","openCreateProjectDialog","tab","onOpenTutorials","onOpenExamples","onOpenGamesShowcase","openOpenFromStorageProviderDialog","insertNewLayout","chooseProjectWithStorageProviderPicker","onOpenWithPicker","chooseProject","hiddenInOpenDialog","openSaveToStorageProviderDialog","saveProjectAsWithStorageProvider","saveUiSettings","onSaveProjectAs","wasSaved","saveProjectAs","hiddenInSaveDialog","saveProject","saveStartTime","askToCloseProject","_onEditorTabActived","forceUpdateEditor","setUpdateStatus","notificationTitle","getUpdateNotificationTitle","notificationBody","getUpdateNotificationBody","Notification","onclick","onOpenProjectAfterCreation","projectName","shouldCloseDialog","resetProjectUuid","setVersion","launchCommand","useMainFrameCommands","previewEnabled","onOpenProjectManager","allowNetworkPreview","canDoNetworkPreview","onLaunchPreview","onHotReloadPreview","onLaunchDebugPreview","onLaunchNetworkPreview","onOpenHomePage","onCreateProject","onOpenProject","onCloseApp","onCloseProject","onExportGame","onOpenExternalLayout","onOpenEventsFunctionsExtension","onOpenCommandPalette","onOpenProfile","onOpenGamesDashboard","showLoader","onChooseProject","onOpenRecentFile","onExportProject","onOpenDebugger","onOpenAbout","onOpenPreferences","onOpenLanguage","recentProjectFiles","PaperProps","ModalProps","keepMounted","displayRightCloseButton","onInstallExtension","eventsFunctionsExtensionName","closeEventsFunctionsExtensionTabs","onDeleteLayout","closeLayoutTabs","getFirstLayout","setFirstLayout","removeLayout","onDeleteExternalLayout","closeExternalLayoutTabs","removeExternalLayout","onDeleteEventsFunctionsExtension","removeEventsFunctionsExtension","onDeleteExternalEvents","externalEvents","closeExternalEventsTabs","removeExternalEvents","onRenameLayout","oldName","showWarningBox","delayToNextTick","shouldChangeProjectFirstLayout","onRenameExternalLayout","onRenameEventsFunctionsExtension","isExtensionNameTaken","Project","validateName","renameEventsFunctionsExtension","onRenameExternalEvents","hasExternalEventsNamed","getExternalEvents","onOpenResources","renderResourcesEditorContainer","openResources","onOpenPlatformSpecificAssets","onReloadEventsFunctionsExtensions","freezeUpdate","showProjectIcons","hasProject","exportProject","requestUpdate","simulateUpdateDownloaded","releaseName","simulateUpdateAvailable","onPreviewWithoutHotReload","onNetworkPreview","setPreviewOverride","isPreviewEnabled","hideLabels","onClickTab","onCloseTab","closeEditorTab","_onCloseEditorTab","onCloseOtherTabs","closeOtherEditorTabs","_onCloseOtherEditorTabs","onCloseAll","closeAllEditorTabs","onTabActived","onDropTab","fromIndex","toHoveredIndex","moveTabToTheRightOfHoveredTab","getEditors","getCurrentTabIndex","active","onOpenEvents","canOpen","onOpenHelpFinder","onOpenLanguageDialog","onLoadEventsFunctionsExtensions","onDeleteResource","onRenameResource","autoHideDuration","ContentProps","onExport","onChooseResources","languageChanged","onChooseProvider","shouldPrompt","language","logs","onLaunchNewPreview","localesToDisplay","LocalesMetadata","localeMetadata","languageCode","isDev","goodProgressLocales","translationRatio","startedLocales","renderLanguageSelectOption","percent","isStarted","languageNativeName","languageName","LanguageSelector","onLanguageChanged","setLanguage","getUpdateStatusLabel","getUpdateButtonLabel","canDownloadUpdate","AddListItem","SearchListItem","buildTypesConfig","estimatedTimeInSeconds","completeDescription","downloadButtons","gameUpdating","setGameUpdating","config","estimatedTime","secondsSinceLastUpdate","differenceInSeconds","updatedAt","estimatedRemainingTime","isStillWithinEstimatedTime","hasJustOverrun","hasTimedOut","onDownload","onUpdatePublicBuild","s3Key","BuildsWatcher","runningWatchers","nextWatcherId","_pollBuild","waitTime","watcherId","onBuildUpdated","builds","stop","ms","res","newProperties","projectCategories","projectAuthorIds","PublicGamePropertiesDialog","publicGame","publicGameAuthorIds","publicGameOwnerIds","owners","owner","onSave","getErrorMessage","UsersAutocomplete","users","setUsers","userInput","setUserInput","loading","setLoading","completionUserPublicProfiles","setCompletionUserPublicProfiles","searchUserPublicProfiles","useDebounce","userPublicProfiles","getUserPublicProfilesForAutocomplete","userPublicProfilesByIds","userPublicProfile","inputsRef","leading","trailing","SemiControlledMultiAutoComplete","multiple","getOptionSelected","ChipProps","objectFit","GameThumbnail","shouldDisplayOnlyBestEntries","playerUnicityDisplayChoice","reducer","leaderboardsByIds","currentLeaderboardId","newCurrentLeaderboard","pageIndex","mapPageIndexToUri","nextPageIndex","newLeaderboardsByIds","leaderboardsIds","LeaderboardProvider","isListingLeaderboards","dispatch","fetchedLeaderboards","creationPayload","doCreateLeaderboard","newLeaderboard","fetchEntries","uriToUse","fetchedEntries","entriesToDisplay","entry","attributes","doUpdateLeaderboard","updatedLeaderboard","doResetLeaderboard","doDeleteLeaderboard","doDeleteLeaderboardEntry","navigateToNextPage","navigateToPreviousPage","previousPageUri","navigateToFirstPage","thumbnailContainerStyle","SPRITE_SIZE","spriteThumbnail","checkboxContainer","selectedBorderColor","imageThumbnail","normalBorderColor","containerStyle","check","ExtensionsSearchDialog","onExtensionInstalled","isInstalling","setIsInstalling","extensionWasInstalled","setExtensionWasInstalled","installDisplayedExtension","installOrImportExtension","wasExtensionInstalledOrImported","onInstall","showOnlyWithBehaviors","sanitizeObjectName","trimmedObjectName","prefixedObjectName","m","installResource","serializedResource","originalResourceName","resourceFileUrl","resourceOriginName","resourceOriginIdentifier","existingResourceNameFromSameOrigin","getResourceNameWithOrigin","existingResourceNameWithSameFile","getResourceNameWithFile","setOrigin","addAssetToProject","asset","objectNewNames","createdObjects","objectAssets","objectAsset","originalName","insertNewObject","customization","isBadBehaviorMetadata","addNewBehavior","getContent","GroupEvent","EventsRefactorer","replaceStringInEvents","renameObjectInEvents","getRequiredBehaviorsFromAsset","uniqBy","extensionVersion","filterMissingExtensions","requiredExtensions","loadedExtensionNames","getRequiredExtensionsForEventsFromAsset","extensions","filterMissingBehaviors","requiredBehaviors","downloadExtensions","extensionNames","serializedExtensions","fromExtensionStore","newEventsFunctionsExtension","installAsset","missingBehaviors","missingExtensions","output","ScenePropertiesDialog","_onApply","setWindowDefaultTitle","windowTitle","setStopSoundsOnStartup","shouldStopSoundsOnStartup","setBackgroundColor","getWindowDefaultTitle","stopSoundsOnStartup","getBackgroundColorRed","getBackgroundColorGreen","getBackgroundColorBlue","propertiesEditors","getAllBehaviorSharedDataNames","sharedDataContent","getBehaviorSharedData","behaviorSharedData","getSharedDataInstance","isNullPtr","propertiesSchema","propertiesMapToSchema","onEditVariables","onOpenMoreSettings","getVariables","_commands","getNamedCommand","getAllNamedCommands","init","instanceRef","newInstance","getGravatarUrl","hash","md5","DotBadge","tabContentContainer","tabLabel","tabLabelAndIcon","closeButton","TabContentContainer","ClosableTabs","tabItemContainerStyle","closableTabs","containerBackgroundColor","ClosableTab","onCloseOthers","onActivated","closeOnMiddleClick","onAuxClick","disableTouchRipple","currentTab","existingEditorId","findIndex","newTabId","closeTabsExceptIf","keepPredicate","currentEditorTab","remainingEditors","chosenEditorTab","editorProject","getProject","SceneEditorContainer","ExternalLayoutEditorContainer","EventsFunctionsExtensionEditorContainer","previewWillStart","EventsEditorContainer","ExternalEventsEditorContainer","editorLayout","editorTabsState","movingTabIndex","hoveredTabIndex","moveTabToPosition","toIndex","currentEditorTabs","movingTab","currentTabIndex","currentTabNewIndex","getEvents","ObjectSelector","noGroups","rest","objectAndGroups","objects","ObjectsRenderingService","groups","getObjectsAndGroupsDataSource","hasValidChoice","checkHasRequiredCapability","makeRenderer","rotation","getAngle","getParameterValueOrDefault","isPotentiallyStringType","isPotentiallyNumberType","enumerateExpressionMetadataMap","expressions","exprMetadata","isShown","getSmallIconFilename","enumerateFreeExpressions","returnNumber","returnString","getAllStrExpressions","getAllExpressions","enumerateObjectExpressions","objectsExpressions","getAllStrExpressionsForObject","getAllExpressionsForObject","enumerateBehaviorExpressions","extensionAndBehaviorMetadata","getExtensionAndBehaviorMetadata","getAllStrExpressionsForBehavior","getAllExpressionsForBehavior","enumerateAllExpressions","behaviorsExpressions","freeExpressions","filterExpressions","exactMatch","unshift","favorExactMatch","enumeratedExpression","getRenderedText","matchesForGivenField","initiallyOpenedKey","restOfInitiallyOpenedPath","instructionInformation","groupOfInstructionInformation","iconSrc","isVisible","ExpressionParametersEditor","ParameterComponent","onChangeParameter","isValidIdentifier","enumerateVariableAndChildrenNames","isTopLevel","isFullNameValid","enumeratedVariable","flatMap","childName","enumerateParametersUsableInExpressions","editorOpen","eventsCount","extractNumberProperty","conditionsCount","actionsCount","actionsList","conditionsList","eventsListContent","extractArrayProperty","actionsListContent","conditionsListContent","insertInstructions","hover","InnerDropTarget","extensionEvents","getAllEvents","emptyContainer","parametersContainer","paddingTop","invertToggle","isParameterVisible","InstructionParametersEditor","_firstVisibleField","isDirty","_openExtension","getExtensionAndConditionMetadata","getExtensionAndActionMetadata","_getVisibleParametersCount","noHelpButton","_renderEmpty","instructionExtraInformation","tutorialIds","parameterFieldIndex","parameterMetadataType","ParameterRenderingService","isFirstVisibleParameterField","labelPosition","InstructionOrObjectSelector","selectedObjectTags","freeInstructionsInfo","freeInstructionsInfoTree","chosenInstructionType","instructionSearchApi","objectSearchApi","groupSearchApi","tagSearchApi","reEnumerateInstructions","allInstructionsInfo","_search","_selectTag","_getAllObjectTags","tagsSet","_buildObjectTagsMenuTemplate","getFn","onChooseInstruction","onChooseObject","onChangeTab","onSearchStartOrReset","isOutsideLayout","isSearching","filteredObjectsList","displayedObjectGroupsList","filteredInstructionsList","displayedTags","displayedObjectsList","remainingResultsCount","oldSearchText","renderObjectListItem","renderGroupObjectsListItem","SelectColumns","columns","getColumns","columnName","columnsRenderer","disabledItem","BehaviorListItem","alreadyInstalled","NewBehaviorDialog","objectBehaviorsTypes","showDeprecated","setShowDeprecated","setCurrentTab","extensionInstallTime","setExtensionInstallTime","enumerateBehaviorsMetadata","deprecatedBehaviorsInformation","filteredBehaviorMetadata","filterEnumeratedBehaviorMetadata","behaviors","deprecatedBehaviors","chooseBehavior","defaultName","showMessageBox","isAmongObjectBehaviors","canBehaviorBeUsed","hasSearchNoResult","getDefaultName","addBehaviorToObject","hasBehaviorWithType","hasBehaviorNamed","addBehaviorAndRequiredBehaviors","listObjectBehaviorsTypes","_shiftPressed","_ctrlPressed","_altPressed","_metaPressed","_updateModifiersFromEvent","evt","_isControlOrCmdPressed","_isActive","_shortcutCallbacks","onMove","which","undoHistory","redoHistory","maxSize","newUndoHistory","newCurrent","setupFunctionFromEvents","setFunctionType","Action","eventsContext","objectOrGroupNames","getReferencedObjectOrGroupNames","objectNames","getObjectNames","objectOrGroupName","getObjectGroupByName","parameterGroups","referencedObjectOrGroupName","parameterGroupNames","parameterObjectNames","newParameter","getBehaviorNamesOfObjectOrGroup","validateEventsFunctionName","validateExtensionName","validateExtensionNameUniqueness","validateEventsFunctionNameUniqueness","hasEventsFunctionNamed","canCreateEventsFunction","functionHasLotsOfParameters","getExtraInfoArray","extraInfoJson","EventsFunctionParametersEditor","longDescriptionShownIndexes","_addParameter","onParametersUpdated","_removeParameter","removeFromVectorParameterMetadata","_addLongDescription","_removeLongDescription","setLongDescription","_moveParameters","onMoveBehaviorEventsParameter","isDone","swapInVectorParameterMetadata","onMoveFreeEventsParameter","_setStringSelectorExtraInfo","newExtraInfo","freezeParameters","isParameterDisabled","isParameterDescriptionAndTypeShown","isParameterLongDescriptionShown","parametersIndexOffset","validateParameterName","setOptional","extraInfo","ObjectTypeSelector","allowedObjectTypes","BehaviorTypeSelector","valueIsListed","StringArrayEditor","updateExtraInfo","getSentenceErrorText","sentence","missingParameters","expectedString","getFullNameHintText","getDescriptionHintText","EventsFunctionPropertiesEditor","freezeEventsFunctionType","onConfigurationUpdated","renderConfigurationHeader","getFunctionGroupNames","setGroup","setSentence","CloseButton","mosaicActions","mosaicWindowActions","getPath","_onBehaviorEdited","eventsFunctionName","onBehaviorEdited","listContainer","getGroupWithContextName","isGroupWithContextGlobal","GroupsListContainer","displayedGlobalObjectGroupsList","renamedGroupWithContext","selectedGroupWithContext","addGroup","globalObjectGroups","insertNew","_onObjectGroupModified","onGroupAdded","_onDelete","onDeleteGroup","doRemove","onGroupRemoved","_onEditName","sortableList","_onDuplicate","newGroup","getPosition","_onRename","canRenameGroup","onRenameGroup","doRename","onGroupRenamed","_setAsGlobalGroup","_canMoveSelectionTo","targetGroupWithContext","_moveSelectionTo","areSelectedAndTargetItemsFromSameContext","isDroppingLocalItemOnFirstGlobalItemOfDisplayedList","_renderGroupMenuTemplate","onEditGroup","canSetAsGlobalGroup","nextState","objectGroupsList","globalObjectGroupsList","listKey","defaultProps","ObjectGroupEditorDialog","ResourceStoreContext","fetchResourcesAndFilters","getResourceSearchTerms","ResourceStoreStateProvider","resourcesByUrl","setResourcesByUrl","resourceStoreState","BoxSearchResults","baseSize","ceil","columnIndex","viewBox","stroke","strokeWidth","fillRule","cx","cy","fillOpacity","externalPropertiesDialogOpen","saveExternalProperties","externalProps","setAssociatedLayout","openExternalPropertiesDialog","getAssociatedLayoutName","getAssociatedLayout","helpTexts","ExternalPropertiesDialog","initialLayoutName","selectedLayoutName","setSelectedLayoutName","layoutNames","helpText","getAssociatedEditorSettings","getInstancesEditorSettings","initialInstances","getInitialInstances","getInitialInstancesEditorSettings","initialMosaicEditorNodes","initialMosaicEditorNodesSmallWindow","SceneEditor","openObjectsList","editorMosaic","showObjectsListInfoBar","openProperties","showPropertiesInfoBar","openObjectGroupsList","toggleInstancesList","showInstancesInfoBar","toggleLayersList","showLayersInfoBar","toggleWindowMask","toggleGrid","openSetupGrid","setupGridOpen","openSceneProperties","scenePropertiesDialogOpen","openObjectEditor","instancesSelection","hasSelectedInstances","selectedInstanceObjectName","editObjectByName","editLayerEffects","editedLayer","editedLayerInitialTab","editLayer","editInstanceVariables","variablesEditedInstance","editLayoutVariables","layoutVariablesDialogOpen","editObject","editedObject","editedObjectWithContext","editedObjectInitialTab","editGroup","editedGroup","setInstancesEditorSettings","forceRemount","_onObjectSelected","selectedObjectName","selectedObjectNames","_createNewObjectAndInstanceUnderCursor","newObjectInstanceSceneCoordinates","getLastCursorSceneCoordinates","_objectsList","newObjectDialogOpen","_onAddInstanceUnderCursor","objectSelected","_addInstance","addInstanceAtTheCenter","viewPosition","addInstances","_onInstancesAdded","infoBarDetails","onInstanceAdded","additionalWorkInfoBar","showAdditionalWorkInfoBar","_onInstancesSelected","forceUpdatePropertiesEditor","_onInstanceDoubleClicked","_onInstancesMoved","_onInstancesResized","_onInstancesRotated","_onSelectInstances","selectInstances","centerViewOn","forceUpdateInstancesList","_addInstanceForNewObject","newObjectName","_onObjectCreated","onObjectAdded","_onRemoveLayer","done","layerRemoveDialogOpen","layerRemoved","onCloseLayerRemoveDialog","newLayer","unselectInstancesOnLayer","removeAllInstancesOnLayer","moveInstancesToLayer","forceUpdateLayersList","_onRenameLayer","_onDeleteObject","answer","showYesNoCancelDialog","shouldRemoveReferences","unselectInstancesOfObject","globalObjectOrGroupRemoved","objectOrGroupRemovedInLayout","_canObjectOrGroupUseNewName","_onRenameEditedObject","_onRenameObject","globalObjectOrGroupRenamed","objectOrGroupRenamedInLayout","_onDeleteGroup","_onRenameGroup","isLocked","removeInstance","clearHighlightedInstance","centerView","setZoomFactor","zoomIn","zoomOut","_onContextMenu","ignoreSelectedObjectNamesForContextMenu","buildContextMenu","contextMenuItems","duplicateSelection","shortenString","useLastCursorPosition","serializedSelection","getLastContextMenuSceneCoordinates","newInstances","serializedInstance","InitialInstance","MOVEMENT_BIG_DELTA","insertInitialInstance","resetPersistentUuid","instancesContent","updateBehaviorsSharedData","forceUpdateObjectsList","forceUpdateList","_layersList","_instancesList","_propertiesEditor","reloadResourcesFor","resourcesInUse","ResourcesInUseHelper","objectResourceNames","getAllImages","loadTextures","resetInstanceRenderersFor","layersListOpen","isGridShown","isWindowMaskShown","selectedInstances","onEditObjectByName","propertiesEditor","onEditLayerEffects","onEditLayer","onRemoveLayer","onRenameLayer","layersContainer","layersList","onSelectInstances","instancesList","onChangeInstancesEditorSettings","onInstancesAdded","onInstancesSelected","onInstanceDoubleClicked","onInstancesMoved","onInstancesResized","onInstancesRotated","wrappedEditorRef","pauseRendering","bind","onEditObject","onDeleteObject","canRenameObject","onObjectCreated","onObjectSelected","onRenameObject","onAddObjectInstance","onObjectPasted","onChangeSelectedObjectTags","getAllObjectTags","objectsList","onOpenSceneProperties","onOpenSceneVariables","onEditObjectGroup","getDefaultEditorMosaicNode","setDefaultEditorMosaicNode","onUpdateBehaviorsSharedData","associatedObjectName","variablesEditedObject","objectTypeToDefaultName","objectWithContextReactDndType","getObjectWithContextName","isObjectWithContextGlobal","getPasteLabel","isGlobalObject","clipboardObjectName","ObjectsList","_displayedObjectWithContextsList","renamedObjectWithContext","tagEditedObject","addObject","setTags","_onObjectAddedFromAsset","onAddNewObject","_deleteObject","removeObject","_onObjectModified","_copyObject","_cutObject","_duplicateObject","_pasteAndRename","_editName","_paste","pasteObject","copiedObject","newObject","getObjectPosition","_rename","destinationObjectWithContext","selectedObjectsWithContext","selectedObject","displayedGlobalObjectsWithContext","displayedLocalObjectsWithContext","isDestinationItemFirstItemOfGlobalDisplayedList","movedObjectWithContext","moveObject","_setAsGlobalObject","moveObjectToAnotherContainer","_openEditTagDialog","_changeObjectTags","_selectObject","_getObjectThumbnail","_renderObjectMenuTemplate","shouldForceUpdateList","lists","selectedObjects","onCreateNewObject","onObjectAddedFromAsset","DeprecatedKeyboardShortcuts","_isControlPressed","metaPressed","rawCtrlPressed","_onKeyDown","shiftPressed","spacePressed","_onKeyUp","_onMouseDown","mouseMidButtonPressed","_onMouseUp","_onKeyPress","_noop","mount","shouldBeHandledByPinch","targetTouches","PinchHandler","canvas","getZoomFactor","_lastPinchCenterX","_lastPinchCenterY","_startPinch","_onPinchMove","centerX","centerY","sceneDeltaX","_getZoomFactor","sceneDeltaY","_viewPosition","scrollBy","_setZoomFactor","_endPinch","unmount","_unregisterCanvasPinchDetector","onPinchStart","onPinchMove","onPinchEnd","lastPinch","dx","dy","distance","sqrt","p","date","newCenter","scaleChange","registerCanvasPinchDetector","getLayersCount","getLayerAt","flexContainer","FullSizeMeasurer","getEnumeratedEffectMetadata","allEffectDescriptions","EffectsList","onEffectsUpdated","showEffectParameterNames","setShowEffectParameterNames","allEffectMetadata","addEffect","hasEffectNamed","insertNewEffect","getEffectType","newEffectType","setEffectType","chooseEffectType","removeEffect","handleColumn","coordinateColumn","toolColumn","SpriteSelector","spriteObject","sameForAllAnimations","sameForAllSprites","chooseAnimation","chooseDirection","chooseSprite","setSameForAllAnimations","setSameForAllSprites","setSameForAllAnimationsLabel","setSameForAllSpritesLabel","ResourcesEditorContainer","refreshResourcesList","timeFunction","fn","onResult","t0","promiseFn","t1","ShowcasedGameTitle","forceColumn","StackLayout","ColumnStackLayout","ResponsiveLineStackLayout","ExampleIcon","endsWith","useInterval","savedCallback","setInterval","clearInterval","getTranslationFunction","i18nModule","runExtensionSanityTests","jsExtensionModule","testResults","loadExtension","createExtension","testsResult","emptyStorageProvider","createOperations","computeInitialFileMetadataToOpen","defaultStorageProvider","appArguments","candidates","currentStorageProvider","getFileMetadataFromAppArguments","ProjectStorageProviders","renderDialog","_setDialog","_getStorageProviderOperations","newStorageProvider","setDialog","closeDialog","_getStorageProvider","InstancesRenderer","onInstanceClicked","onInstanceRightClicked","onOverInstance","onOutInstance","onMoveInstance","onMoveInstanceEnd","onDownInstance","layersRenderers","temporaryRectangle","instanceMeasurer","getInstanceAABB","layerRenderer","getUnrotatedInstanceAABB","getInstanceRect","aabb","LayerRenderer","getPixiContainer","zOrder","render","_updatePixiObjectsZOrder","_cleanUnusedLayerRenderers","destroy","transformRect","transformPoint","startPos","endPos","resizeGrabbingLocationValues","resizeGrabbingRelativePositions","TopLeft","BottomLeft","BottomRight","TopRight","Top","Left","Bottom","Right","canMoveOnX","location","canMoveOnY","InstancesResizer","_initialSelectionAABB","_unrotatedInstanceAABBs","_instanceAABBs","_instancePositions","totalDeltaX","totalDeltaY","_temporaryGrabbingPosition","initialInstanceAABB","initialUnrotatedInstanceAABB","initialPosition","initialSelectionAABB","setRectangle","_getOrCreateInstanceAABB","union","grabbingLocation","proportional","nonLockedInstances","_getOrCreateSelectionAABB","grabbingRelativePosition","initialGrabbingX","initialGrabbingY","grabbingPosition","roundedTotalDeltaX","roundedTotalDeltaY","flippedTotalDeltaX","flippedTotalDeltaY","scaleX","scaleY","hasRotatedInstance","areAnyInstancesNotStraight","fixedPointX","fixedPointY","selectedInstance","_getOrCreateUnrotatedInstanceAABB","initialInstanceOriginPosition","_getOrCreateInstanceOriginPosition","initialWidth","initialHeight","angle","setCustomWidth","setCustomHeight","setHasCustomSize","centerToOriginX","centerToOriginY","resizeGrabbingIconNames","SelectedInstances","onResize","onResizeEnd","onRotate","onRotateEnd","rectanglesContainer","selectedRectangles","resizeButtons","rotateButton","_screenType","resizeGrabbingLocation","resizeButton","_makeButton","objectButton","onEnd","interactive","buttonMode","gesture","panable","on","buttonObject","canvasPosition","shape","hitAreaPadding","beginFill","lineStyle","drawRect","drawCircle","endFill","hitArea","bigButtonSize","smallButtonSize","buttonPadding","x1","y1","x2","y2","initialised","newRectangle","instanceRect","selectionRectangle","selectionRectangleColor","relativePositions","buttonSize","resizeButtonPos","_renderButton","rotateButtonPos","highlightedInstance","highlightRectangle","tooltipBackground","tooltipInfo","getZOrder","drawRoundedRect","InstancesRotator","_instanceAngles","_fixedPointIsUpToDate","_fixedPoint","_instanceMeasurer","initialAngle","atan2","initialAABB","selectionAABB","_getOrCreateInstanceAngle","degreeAngle","_getNewAngle","setAngle","rotationAngle","cosa","sina","InstancesMover","_startX","_startY","instancePositions","_temporaryPoint","followAxis","startX","startY","noGridSnap","magnetLeft","magnetTop","initialMagnetX","initialMagnetY","magnetPosition","_getMoveDeltaX","_getMoveDeltaY","Grid","pixiGrid","sceneStartPoint","sceneEndPoint","getWidth","getHeight","offsetX","offsetY","endX","endY","countX","countY","lineCount","lineStartX","lineStartY","lineEndX","lineEndY","moveTo","lineTo","WindowBorder","pixiRectangle","windowRectangle","getGameResolutionWidth","getGameResolutionHeight","displayedRectangle","WindowMask","getViewX","getViewY","BackgroundColor","pixiRenderer","FpsLimiter","maxFps","_lastFrameTime","_interval","_forceUpdate","delta","stopPIXITicker","ticker","startPIXITicker","StatusBar","_getLastCursorSceneCoordinates","_statusBarContainer","_statusBarBackground","_statusBarText","CanvasCursor","shouldMoveView","LongTouchHandler","onLongTouch","_lastTouchX","_lastTouchY","_onTouchStart","_clear","_longTouchTimeoutID","_onLongTouch","_onTouchMove","_canvas","canvasArea","dropCursor","InstancesEditor","lastContextMenuX","lastContextMenuY","lastCursorX","lastCursorY","fpsLimiter","_unmounted","_renderingPaused","_instancesAdder","_onMouseMove","_onBackgroundClicked","view","keyboardShortcuts","startSelectionRectangle","_onPanMove","onViewPositionChanged","updateSelectionRectangle","_getLayersVisibility","getVisibility","_onPanEnd","hasStartedSelectionRectangle","instancesSelected","endSelectionRectangle","_onInstanceClicked","_onInstanceRightClicked","coordinates","_onRightClicked","_onOverInstance","setInstance","_onDownInstance","sceneX","sceneY","instancesMover","startMove","_onOutInstance","getInstance","_onMoveInstance","moveBy","shouldFollowAxis","shouldNotSnapToGrid","_onMoveInstanceEnd","endMove","_onResize","shouldResizeProportionally","instancesResizer","resizeBy","_onResizeEnd","endResize","_onRotate","instancesRotator","rotateBy","_onRotateEnd","endRotate","moveSelection","unlockedSelectedInstances","getViewPosition","_renderScene","shouldUpdate","canvasCursor","instancesRenderer","windowBorder","statusBar","nextFrame","requestAnimationFrame","pauseSceneRendering","cancelAnimationFrame","restartSceneRendering","_initializeCanvasAndRenderer","preserveDrawingBuffer","antialias","appendChild","longTouchHandler","onwheel","shouldZoom","zoomOnCursorBy","shouldScrollHorizontally","setAttribute","backgroundArea","interactionEvent","originalEvent","cursorX","cursorY","getPixiObject","pinchHandler","InstancesAdder","_mountEditorComponents","SelectionRectangle","getInstanceMeasurer","HighlightedInstance","forceNextUpdate","setScreenType","beforeZoomCursorPosition","afterZoomCursorPosition","scrollToInstance","getClientOffset","canvasRect","createOrUpdateTemporaryInstancesFromObjectNames","deleteTemporaryInstances","updateTemporaryInstancePositions","commitTemporaryInstances","onPlay","onPause","canPlay","canPause","onOpenProfiler","canOpenProfiler","onOpenConsole","canOpenConsole","ToolbarSeparator","InspectorsList","gameData","getInspectorDescriptions","inspectorDescription","fullInspectorPath","getSubInspectors","onChooseInspector","_renderInspectorList","transformVariable","transformedVariable","_type","_str","_value","_bool","mapValues","_children","_childrenArray","handleEdit","onCall","editPath","variableInContainerName","_variables","items","skip","constructPathToVariable","namespace","new_value","isNaN","collapsed","enableClipboard","displayDataTypes","displayObjectSize","groupArraysAfterLength","validationMessage","runtimeObject","Angle","Layer","hidden","VariablesContainerInspector","transformLayer","_cameraRotation","_zoomFactor","_hidden","_cameraX","_cameraY","_timeScale","runtimeScene","_timeManager","Layers","_layers","RuntimeSceneInspector","_objects","gdjsRuntimeGame","renderInspector","gdjsStack","_name","RuntimeObjectInspector","indent","MeasuresTable","collapsedPaths","_convertToDataRows","parentSection","section","profilerMeasures","parentPercent","totalPercent","isCollapsed","_isSectionCollapsed","hasSubsections","subsections","subsection","subsectionName","_toggleSection","_rowClassName","_renderSectionNameCell","rowData","dataRows","headerHeight","tableRootClassName","headerClassName","rowGetter","onRowClick","rowClassName","dataKey","tableContainer","Profiler","onStart","onStop","profilerOutput","profilingInProgress","stats","framesCount","framesAverageMeasures","LogsManager","_onNewLog","_onNewGroup","_pendingLogs","_pendingCommit","f","_commitLogs","selectableTextStyle","userSelect","consoleTextArea","Tag","Chip","iconMap","DebuggerConsole","logsManager","onUpdate","off","cellMeasurerCache","CellMeasurerCache","defaultHeight","fixedWidth","keyMapper","hideInternal","setHideInternal","showDetails","_setShowDetails","editingHiddenGroups","setEditingHiddenGroups","hiddenGroups","filteredLogs","internal","noOverflowParent","clearAll","deferredMeasurementCache","registerChild","timestamp","Checkbox","DebuggerContent","selectedInspector","selectedInspectorFullPath","rawMode","_editors","openProfiler","openConsole","onRefresh","onStartProfiler","onStopProfiler","inspectors","ScrollView","RawContentInspector","profiler","DebuggerSelector","hasDebuggers","debuggerIds","selectedId","onChooseDebugger","isUnavoidableLibraryWarning","Debugger","debuggerServerState","getServerState","debuggerServerError","getExistingDebuggerIds","unregisterDebuggerServerCallbacks","debuggerGameData","profilerOutputs","_debuggerContents","_debuggerLogs","_registerServerCallbacks","unregisterCallbacks","registerCallbacks","onErrorReceived","onConnectionClosed","onConnectionOpened","onServerStateChanged","onHandleParsedMessage","parsedMessage","_handleMessage","_getLogsManager","addLog","_play","sendMessage","_pause","_refresh","_edit","_call","_startProfiler","_stopProfiler","_hasSelectedDebugger","PlaceholderMessage","PlaceholderLoader","debuggerContent","DebuggerEditorContainer","subscriptionChecked","_checkHasSubscription","_subscriptionChecker","subscriptionChecker","DragAndDropContextProvider","DragDropContext","MultiBackend","HTML5toTouch","isUsernameValid","allowEmpty","usernameFormatError","UsernameField","getEmailErrorText","getPasswordErrorText","CreateAccountDialog","form","password","_canCreateAccount","createAccountInProgress","_onCreateAccount","onGoToLogin","LeftLoader","MarkdownText","translatableSource","LoginDialog","_canLogin","loginInProgress","forgotPasswordInProgress","_onLogin","_onForgotPassword","onForgotPassword","onGoToCreateAccount","resetPasswordDialogOpen","onCloseResetPasswordDialog","RightLoader","getUsernameErrorText","EditDialog","_onEdit","_canEdit","editInProgress","ChangeEmailDialog","_onChangeEmail","changeEmailInProgress","EmailVerificationPendingDialog","isVerified","emailVerified","AuthenticatedUserProvider","loginDialogOpen","createAccountDialogOpen","editProfileDialogOpen","authError","emailVerificationPendingDialogOpen","changeEmailDialogOpen","_automaticallyUpdateUserProfile","_reloadFirebaseProfile","authentication","getFirebaseUser","_fetchUserProfileWithoutThrowingErrors","_fetchUserProfile","_fetchUserBadges","getUserProfile","userProfile","_doLogout","logout","_resetAuthenticatedUser","_doLogin","login","openLoginDialog","_doEdit","editUserProfile","openEditProfileDialog","_doCreateAccount","createFirebaseAccount","createUser","sendSignupDone","_doForgotPassword","forgotPassword","openResetPassword","_doSendEmailVerification","sendFirebaseEmailVerification","openEmailVerificationPendingDialog","_doAcceptGameStatsEmail","acceptGameStatsEmail","_doChangeEmail","changeEmail","openChangeEmailDialog","openCreateAccountDialog","setOnUserLogoutCallback","setOnUserUpdateCallback","getFirebaseUserSync","PublicProfileDialog","setProfile","setBadges","fetchProfile","fetchUserBadges","ProfileDetails","visitedPublicProfileUserId","setVisitedPublicProfileUserId","closeUserPublicProfile","publicProfileState","EventsFunctionsExtensionsProvider","_eventsFunctionCodeWriter","makeEventsFunctionCodeWriter","onWriteFile","_onWriteFile","_includeFileHashs","_lastLoadPromise","_loadProjectEventsFunctionsExtensions","_unloadProjectEventsFunctionsExtensions","_unloadProjectEventsFunctionsExtension","_reloadProjectEventsFunctionsExtensions","_ensureLoadFinished","eventsFunctionsExtensionWriter","xxhashjs","h32","toNumber","lastLoadPromise","jss","create","plugins","jssPreset","rtl","Providers","disableCheckForUpdates","PreferencesProvider","getTheme","themeName","GDI18nProvider","StylesProvider","ThemeProvider","PublicProfileProvider","ResourceFetcher","themeData","base","inherit","rules","foreground","token","fontground","themes","GitHub","Monokai","SolarizedDark","SolarizedLight","Tomorrow","TomorrowNight","VibrantInk","NordDark","OneDark","getAllThemes","LinkButton","Apple","GooglePlay","Steam","Twitter","Microsoft","Instagram","Twitch","getLinkIconAndLabel","sendShowcaseGameLinkOpened","renderLayout","noColumnMargin","ShowcasedGameButton","links","firstLinks","otherLinks","BuildsDialog","Builds","onBuildsUpdated","limit","hasSubscription","noSubscription","limitReached","stepper","linearProgress","stepMaxProgress","stepCurrentProgress","hasBuildStep","showSeeAllMyBuildsExplanation","getActiveStep","Stepper","activeStep","Step","StepLabel","StepContent","BuildProgressAndActions","ExportLauncher","compressionOutput","doneFooterOpen","exportPipeline","getInitialExportState","buildsWatcher","_setupAchievementHook","launchWholeExport","_launchWholeExport","_updateStepProgress","_startBuildWatch","tryUpdateAuthors","authorAcls","registerGameIfNot","sendExportLaunched","handleError","setStep","exportPipelineContext","updateStepProgress","prepareExporter","preparedExporter","launchExport","exportOutput","launchResourcesDownload","resourcesDownloadOutput","launchCompression","launchUpload","launchOnlineBuild","uploadBucketKey","_closeDoneFooter","_updateExportState","updater","setIsNavigationDisabled","isNavigationDisabled","getBuildLimit","onlineBuildType","packageNameWarningType","renderHeader","renderLaunchButtonLabel","canLaunchBuild","CreateProfile","renderCustomStepsProgress","BuildStepsProgress","limitedBuilds","LimitDisplayer","renderDoneFooter","titleContainer","iconsContainer","ExportHome","setChosenExporterKey","setChosenExporterSection","cantExportBecauseOffline","ExportHomeSeparator","Chrome","ExportDialog","allExportersRequireOnline","automatedExporters","manualExporters","chosenExporterSection","buildsDialogOpen","setBuildsDialogOpen","chosenExporterKey","exporter","ExampleListItem","onHeightComputed","containerRef","fetchAndOpenExampleInWebApp","renderExampleField","originalField","nameMatches","ButtonBase","getExampleName","ExampleStore","selectedExampleShortHeader","setSelectedExampleShortHeader","searchBarRef","getExampleMatches","exampleMatches","sendExampleDetailsOpened","thumbnailImageWithDescription","smallScreenThumbnailImage","card","TutorialListItem","isLoaded","setIsLoaded","isImageLoadingRef","notifyHeightChanged","sendTutorialOpened","Card","allowParagraphs","TutorialsList","thumbnailImageWithoutDescription","ShowcasedGameListItem","hasDescription","genres","TagChips","getShowcasedGameTitle","GamesShowcase","Subheader","CreateProjectDialog","setIsOpening","setSelectedExampleShortShortHeader","preCreationDialogOpen","setPreCreationDialogOpen","createProject","settings","projectMetadata","newTab","ProjectPreCreationDialog","achievementsContainer","lockedAchievement","unlockedAchievement","AchievementList","achievements","displayUnclaimedAchievements","displayNotifications","achievementsWithBadgeData","setAchievementsWithBadgeData","badgeByAchievementId","achievement","hasBadge","parseISO","achievementWithBadgeData","invisible","data-name","strokeMiterlimit","summary","leftContainer","rightContainer","UserAchievements","setAchievements","displayError","setDisplayError","fetchAchievements","Trophy","isAuthenticatedUserProfile","onEditProfile","Avatar","getUserPublicProfileUrl","orderedTimeUnits","unitToDivider","hour","minute","millisecond","unitToNextSeparator","formatScore","durationInSecond","formattedDuration","durationInMs","biggestUnitIndex","biggestUnit","smallestUnitIndex","smallestUnit","unit","remainder","padStart","formatDuration","roundedScore","precision","suffix","formatCustomScore","LeaderboardEntriesTable","customizationSettings","onDeleteEntry","erroredEntry","navigation","TableHead","TableCell","scoreTitle","scoreFormatting","dateStyle","timeStyle","unitToAbbreviation","getIdentifierFromUnits","units","unitSelectOptions","currentUnit","currentUnitIndex","otherUnitIndex","selectedUnits","LeaderboardAppearanceDialog","leaderboardCustomizationSettings","setIsLoading","scoreTitleError","setScoreTitleError","setScoreTitle","scoreType","setScoreType","setPrefix","setSuffix","setPrecision","timeUnits","setTimeUnits","scorePreview","setScorePreview","onSaveSettings","newTitle","CenteredError","leftColumn","rightColumn","leaderboardConfigurationPaper","leaderboardNameText","leaderboardNameTextField","getApiError","LeaderboardAdmin","onLoading","isOnline","isEditingAppearance","setIsEditingAppearance","isEditingName","setIsEditingName","isRequestPending","setIsRequestPending","setNewName","newNameError","setNewNameError","newNameTextFieldRef","apiError","setApiError","displayGameRegistration","setDisplayGameRegistration","yesOrNo","onUpdateLeaderboard","onListLeaderboards","fetchAndHandleError","onFetchLeaderboardEntries","onCreateLeaderboard","onResetLeaderboard","onDeleteLeaderboard","itemId","Paper","avatar","secondaryAction","startDatetime","getLeaderboardDescription","ListItemAvatar","disableTypography","ListItemSecondaryAction","Switch","LeaderboardAdminContainer","adjectives","nouns","generateName","capitalize","sample","findEmptyPathInDefaultFolder","electronApp","documentsPath","basePath","folderName","accessSync","findEmptyPath","projectNameError","setProjectNameError","setProjectName","outputPath","setOutputPath","onValidate","_onChangeProjectName","ChangelogRenderer","releases","currentReleaseName","openReleaseNote","currentRelease","findRelease","currentVersionHasBreakingChange","Changelog","onUpdated","setReleases","GDevelopReleaseApi","last","formatBuildText","buildType","BuildCard","isOld","differenceInCalendarDays","CardHeader","format","CardActions","loadBuilds","_startBuildsWatcher","newBuild","oldBuild","_refreshBuilds","BuildsList","getGameMetrics","dayIsoDate","GDevelopAnalyticsApi","validateStatus","tableRowStatColumn","GameDetailsDialog","gameRollingMetrics","setGameMetrics","gameUnregisterErrorText","setGameUnregisterErrorText","gameRollingMetricsError","setGameMetricsError","isGameMetricsLoading","setIsGameMetricsLoading","isGameUpdating","setIsGameUpdating","yesterdayIsoDate","formatISO","subDays","representation","analyticsDate","setAnalyticsDate","setPublicGame","publicGameError","setPublicGameError","isPublicGamePropertiesDialogOpen","setIsPublicGamePropertiesDialogOpen","loadGameMetrics","loadPublicGame","publicGameResponse","handleGameUpdated","updateGameFromProject","ownerAcls","ownership","unregisterGame","unpublishGame","authorUsernames","ownerUsernames","isGameOpenedAsProject","flexColumnBody","Crown","cachedLastWeekSessionsCount","cachedLastYearSessionsCount","_index","newIsoDate","isoDate","reverse","players","d0Players","sessions","d0Sessions","d0NewPlayers","retention","dayIndex","previewContainer","previewImage","previewIcon","cardContainer","audioElement","ImageCard","license","GenericCard","ResourceCard","controls","ResourceStore","searchResultsForResourceKind","ExtensionListItem","renderExtensionField","previewIconUrl","getExtensionName","ExtensionStore","selectedExtensionShortHeader","setSelectedExtensionShortHeader","eventsBasedBehaviorsCount","getExtensionsMatches","extensionMatches","sendExtensionDetailsOpened","ExtensionInstallDialog","sendExtensionAddedToProject","useExtensionUpdate","useMemo","currentVersion","newestVersion","versionDiff","diff","getUpdateMetadataFromVersions","version","getTransformedDescription","extensionUpdate","setExtensionHeader","loadExtensionheader","canInstallExtension","ProjectTitlebar","ThemeContext","setTitle","setTitleBarColor","logo","contributors","AboutDialog","_openContributePage","_openLink","_changeTab","updateStatusString","updateButtonLabel","checkUpdates","getGDCoreVersion","contributor","Indent","indentIconColor","limitEditing","tableChildIndentation","fadedButton","getString","noPaddingMultilineTextField","getBool","toolColumnHeader","buttonStyle","BooleanField","EditVariableRow","getPointer","desktopSizes","androidSizes","iosSizes","PlatformSpecificAssetsDialog","_generateFromFile","fullPath","resizeImage","desktopIconResourceNames","androidIconResourceNames","iosIconResourceNames","thumbnailResourceName","isResizeSupported","newIcons","lazyRequireJimp","inputFile","outputFile","Jimp","read","jimpImage","contain","write","dialogContent","transitionDuration","enter","exit","circularProgress","disableShrink","appBar","displayLeftCloseButton","delayElectronClose","onbeforeunload","close","returnValue","defaultEventContainer","smallEventContainer","getIndentWidth","EventContainer","_onEventUpdated","_onEventContextMenu","_container","offsetHeight","eventsHeightsCache","setEventHeight","EventComponent","EventsRenderingService","getEventComponent","getNodeKey","treeIndex","SortableTree","eventsSheetRootClassName","noop","ThemableEventsTree","_eventsToTreeData","flatData","parentDisabled","treeData","getEventAt","_renderEvent","expanded","isFolded","extraNodes","_onMoveNode","targetPath","targetNode","getNodeAtPath","targetEventsList","targetPosition","moveEventToAnotherEventsList","_canDrag","_canDrop","nextParent","_canNodeHaveChildren","_onVisibilityToggle","_renderObjectThumbnail","_isNodeHighlighted","searchQuery","highlightedEvent","EventHeightsCache","onHeightsChanged","wrappedInstance","recomputeRowHeights","row","_getEventRow","scrollToRow","EventsListUnfolder","unfoldWhenContaining","searchedEvent","scaffoldBlockPxWidth","onVisibilityToggle","onMoveNode","canNodeHaveChildren","getEventHeight","searchMethod","reactVirtualizedListProps","StandardEvent","standardEvent","getConditions","wordWrap","instrFormatter","InstructionSentenceFormatter","useAssignmentOperators","eventsSheetUseAssignmentOperators","dragAllowed","instructionDragSourceElement","shouldActivate","formattedTexts","getAsFormattedText","getTextFormatting","getUserData","parameterType","InvalidParameterValue","renderInstructionText","instructionDragSourceDropTargetElement","canHaveSubInstructions","getSubInstructions","operatorLabels","mapTypeToOperators","unknown","number","comparedValueType","operators","isEmpty","keyNames","isKeyValid","call","hasCustomSize","getCustomWidth","getCustomHeight","prototype","descriptors","FontFace","fontFace","fonts","newStyle","createElement","createTextNode","head","FontFaceObserver","_renderedAnimation","_renderedDirection","_centerX","_centerY","_originX","_originY","getInvalidPIXITexture","updatePIXITextureAndSprite","imageName","updatePIXISprite","anchor","frame","_shouldNotRotate","toRad","updateSprite","_sprite","hasNoAnimations","getRawDoubleProperty","hasNoDirections","useMultipleDirections","normalizedAngle","getPIXITexture","valid","center","once","getOriginX","getOriginY","getDefaultWidth","getDefaultHeight","tiledSprite","_texture","getTexture","makeObjects","updateTexture","panelSprite","isTiled","_tiled","_textureName","updateAngle","updatePosition","oldWidth","oldHeight","updateWidthHeight","StretchedSprite","_centerSprite","_borderSprites","removeChildren","_updateLocalPositions","getLeftMargin","getTopMargin","getRightMargin","getBottomMargin","_updateSpritesAndTexturesSize","_wasRendered","cacheAsBitmap","makeInsideTexture","rect","pivot","_styleFontDirty","textObject","isItalic","_isItalic","_isBold","getCharacterSize","_characterSize","_wrapping","_wrappingWidth","_fontName","getFontName","loadFontFamily","_fontFamily","wordWrapWidth","breakWords","dirty","getColorR","_colorR","getColorG","_colorG","getColorB","_colorB","updateGraphics","particleEmitterObject","emitterAngle","sprayConeAngle","getConeSprayAngle","line1Angle","line2Angle","getParticleRed2","getParticleGreen2","getParticleBlue2","getParticleRed1","getParticleGreen1","getParticleBlue1","_yesButton","effectiveValue","_trueButton","ExpressionSelector","minHeightContainer","ExpressionParametersEditorDialog","editedIndex","oldValue","defaultStyle","borderSizing","sortedHighlights","highlight1","highlight2","elements","lastPos","filterStringList","getAutocompletionsForExpressions","expressionMetadatas","enumeratedExpressionMetadata","getAutocompletionsForText","expressionAutocompletionContext","completionDescription","getPrefix","autocompletionTexts","getParameterMetadata","autocompletion","spriteObjectName","animationName","filteredTextList","isLastParameter","getReplacementStartPosition","getReplacementEndPosition","expressionCompletionDescriptions","completionKind","getCompletionKind","ExpressionCompletionDescription","getBehaviorName","behaviorExpressions","filteredBehaviorExpressions","getAutocompletionsForBehaviorExpressions","objectExpressions","filteredObjectExpressions","getAutocompletionsForObjectExpressions","filteredFreeExpressions","getAutocompletionsForFreeExpressions","filteredGroupsList","getAutocompletionsForObject","Behavior","getAutocompletionsForBehavior","getAutocompletionsForVariable","insertedAutocompletion","formatCompletion","nextCharacter","addSuffix","wordStartPosition","wordEndPosition","maybeNextCharacter","newExpressionStart","insertedWord","visibleAutocompletionsLength","defaultTextStyle","overflowWrap","AutocompletionIcon","DisplayedTextAutocompletion","onPointerDown","DisplayedExpressionAutocompletion","userFriendlyName","formatParameterTypesString","DisplayedObjectAutocompletion","thumbnail","DisplayedBehaviorAutocompletion","tooManyTextContainer","popperStyle","ExpressionAutocompletionsDisplayer","selectedAutocompletionElement","_behaviorNames","_getError","_forceChooseBehavior","_behaviorTypeAllowed","_updateBehaviorsList","noBehaviorErrorText","layerNames","fieldRef","ParameterColorField","expressioNode","_instantButton","showDeprecatedNumericValue","hasLayerNamed","getEffects","effectName","getEffectNames","getEffect","getEffectParameterNames","pointName","getPointNames","getAnimationNames","parameterNames","externalLayoutNames","editing","endEditing","getBackgroundColorR","getBackgroundColorG","getBackgroundColorB","WebkitTextFillColor","underlineFocusStyle","commentTextStyle","commentTextField","commentSpan","CommentEvent","onEvent","asCommentEvent","setComment","_getCommentHTML","getComment","commentEvent","getTextColorRed","getTextColorGreen","getTextColorBlue","_selectable","dangerouslySetInnerHTML","__html","instructionsContainer","ForEachEvent","_objectField","editingPreviousValue","asForEachEvent","getObjectToPick","cancelEditing","forEachEvent","setObjectToPick","objectField","variableContainer","eventLabel","ForEachChildVariableEvent","_valueIteratorField","_keyIteratorField","_iterableField","editingValueIteratorVariableName","editingKeyIteratorVariableName","editingIterableVariableName","forEachChildVariableEvent","asForEachChildVariableEvent","valueIteratorName","getValueIteratorVariableName","keyIteratorName","getKeyIteratorVariableName","iterableName","getIterableVariableName","setIterableVariableName","setValueIteratorVariableName","setKeyIteratorVariableName","iteratorField","iterableField","RepeatEvent","asRepeatEvent","getRepeatExpression","repeatEvent","setRepeatExpression","whileEvent","asWhileEvent","getWhileConditions","openInNewIcon","LinkEvent","_externalEventsAutoComplete","asLinkEvent","getTarget","openTarget","linkEvent","externalEventsName","externalEventsAutoComplete","getList","currentSceneName","currentExternalEventName","layouts","ExternalEventsAutoComplete","wrappingText","comment","commentLink","textDecoration","JsCodeEvent","editingObject","asJsCodeEvent","setInlineCode","parameterObjects","getParameterObjects","cancelObjectEditing","endObjectEditing","jsCodeEvent","setParameterObjects","toggleExpanded","setEventsSheetExpanded","isEventsSheetExpanded","_getCodeEditorHeight","heightToFillSheet","textStyle","eventsFunctionContext","functionStart","functionEnd","href","rel","getInlineCode","onEditorMounted","eventHeights","updateTimeoutId","cachedHeight","_notifyComponent","makeMenuTemplateBuilderForEvents","BottomButtons","fullHeightSelector","newInstructionEditorState","newInstructionEditorSetters","hasObjectChosen","chosenObject","freeInstructionComponentRef","getInitialStepName","getInitialTab","currentInstructionOrObjectSelectorTab","setCurrentInstructionOrObjectSelectorTab","newBehaviorDialogOpen","setNewBehaviorDialogOpen","newExtensionDialogOpen","setNewExtensionDialogOpen","instructionParametersEditor","instructionHelpPage","stepBackFrom","sendBehaviorAdded","incString","preserved","s","RegExp","namedProperties","namedProperty","propertyDescriptor","setLabel","addExtraInfo","submitInstruction","anchorOrigin","vertical","horizontal","transformOrigin","sizeTextField","white","black","EventTextDialog","textValue","setTextValue","setTextColor","InlineParameterEditor","_loadComponentFromInstruction","_unload","instructionsList","hasEndingOnceInstruction","hasInvalidOnce","removeAt","onceInstruction","objectsNames","objectOrGroupBehaviorNames","EventsContextAnalyzerDialog","searchTextField","replaceText","setReplaceText","matchCase","setMatchCase","searchInActions","setSearchInActions","searchInConditions","setSearchInConditions","searchInEventStrings","setSearchInEventStrings","searchInSelection","searchResultsDirty","setSearchResultsDirty","focusSearchField","launchSearch","searchInEventSentences","isSearchAndReplaceTab","launchReplace","launchSearchIfResultsDirty","shouldBrowsePrevious","getSearchInitialOffset","resultEvents","eventsToSearch","positionFinder","EventsPositionFinder","addEventToSearch","getPositions","selectedEventPosition","searchResultsPositions","searchResultIndex","EventsSearcher","eventsSearchResults","_resultEvents","_doReplaceInEvents","_doSearchInEvents","newEventsSearchResults","_updateListOfResultEvents","resultEventsWithDuplicates","eventsSearchResult","isEventValid","getEvent","_goToSearchResults","newSearchFocusOffset","_goToPreviousSearchResult","_goToNextSearchResult","clearSearchResults","subInstructionsList","EventsFunctionExtractorDialog","_getFunctionGroupNames","groupNames","eventsFunctionsExtensions","hasLotsOfParameters","objectGroupName","EventsFunctionsExtensionEditor","selectedEventsFunction","selectedEventsBasedBehavior","editedEventsBasedBehavior","editOptionsDialogOpen","behaviorMethodSelectorDialogOpen","extensionFunctionSelectorDialogOpen","onAddEventsFunctionCb","_loadEventsFunctionFrom","_globalObjectsContainer","ObjectsContainer","_objectsContainer","EventsFunctionTools","behaviorEventsFunctionToObjectsContainer","freeEventsFunctionToObjectsContainer","eventsBasedBehaviors","behaviorEventsFunctions","_selectEventsFunction","getEventsFunction","_editorNavigator","_makeRenameFreeEventsFunction","renameEventsFunction","_makeRenameBehaviorEventsFunction","renameBehaviorEventsFunction","_makeMoveFreeEventsParameter","moveEventsFunctionParameter","_makeMoveBehaviorEventsParameter","moveBehaviorEventsFunctionParameter","_onDeleteEventsFunction","_selectEventsBasedBehavior","_editorMosaic","_makeRenameEventsBasedBehavior","renameEventsBasedBehavior","_onEventsBasedBehaviorRenamed","_onDeleteEventsBasedBehavior","_onAddFreeEventsFunction","_onCloseExtensionFunctionSelectorDialog","_onAddBehaviorEventsFunction","_onCloseBehaviorMethodSelectorDialog","_onBehaviorEventsFunctionAdded","ensureBehaviorEventsFunctionsProperParameters","_onBehaviorPropertyRenamed","renameEventsBasedBehaviorProperty","_editOptions","_editBehavior","fixInvalidRequiredBehaviorProperties","_openFreeFunctionsListEditor","_openBehaviorsListEditor","_onEditorNavigatorEditorChanged","eventFunctionContainer","_onConfigurationUpdated","whatChanged","onEditFreeFunctions","onEditBehaviors","onEditExtensionOptions","onParametersOrGroupsUpdated","onSelectEventsFunction","onDeleteEventsFunction","canRename","onRenameEventsFunction","onAddEventsFunction","onEventsFunctionAdded","eventsBasedBehaviorsList","onSelectEventsBasedBehavior","onDeleteEventsBasedBehavior","onRenameEventsBasedBehavior","onEventsBasedBehaviorRenamed","onEditProperties","editorNavigator","initialEditorName","transitions","previousEditor","nextIcon","nextLabel","nextEditor","onEditorChanged","onRenameProperty","EventsFunctionConfigurationEditor","objectOrGroupRemovedInEventsFunction","objectOrGroupRenamedInEventsFunction","_chooseTab","onGroupsUpdated","ObjectGroupsListWithObjectGroupEditor","objectSelector","ObjectGroupEditor","setNewObjectName","getAllObjectsNames","renderExplanation","renderEventsFunctionLabel","getEventsFunctionName","EventsFunctionsList","renamedEventsFunction","_togglePrivate","_deleteEventsFunction","askForConfirmation","removeEventsFunction","_onEventsFunctionModified","_getFunctionThumbnail","destinationEventsFunction","moveEventsFunction","getEventsFunctionPosition","_copyEventsFunction","_cutEventsFunction","_pasteEventsFunction","copiedEventsFunction","newEventsFunction","insertNewEventsFunction","_renderEventsFunctionMenuTemplate","_addNewEventsFunction","filterEventFunctionsList","enumerateEventsFunctions","EventsBasedBehaviorEditorDialog","onTabChanged","onPropertiesUpdated","EventsBasedBehaviorEditor","_allObjectTypes","getAllObjectTypesUsingEventsBasedBehavior","propertiesContainer","EventsBasedBehaviorPropertiesEditor","_addProperty","getCount","_removeProperty","_moveProperty","_setChoiceExtraInfo","defaultValueIndex","vectorString","VectorString","_getPropertyGroupNames","validatePropertyName","MethodListItem","BehaviorMethodSelectorDialog","eventsFunctions","showAdvanced","setShowAdvanced","FunctionListItem","currentEditorName","setCurrentEditorName","buttonLineJustifyContent","eventsFunctionsCount","EditTagsDialog","_tagsField","renderedInstances","_temporaryRectangle","_temporaryRectanglePath","getUnrotatedInstanceLeft","getUnrotatedInstanceTop","getUnrotatedInstanceWidth","getUnrotatedInstanceHeight","getRendererOfInstance","renderedInstance","makeDoubleClickable","viewPoint","scenePoint","viewTopLeft","viewBottomRight","InitialInstanceJSFunctor","invoke","instancePtr","wrapPointer","pixiObject","_isInstanceVisible","rotatePolygon","rotatedRectangle","_getInstanceRotatedRectangle","MAX_VALUE","len","_computeViewBounds","iterateOverInstancesWithZOrdering","_updateVisibility","_destroyUnusedInstanceRenderers","onRemovedFromScene","pixiDisplayObject","lastClickTime","lastClickGlobalX","lastClickGlobalY","handleTap","currentTime","emit","vertices","selectionRectangleStart","selectionRectangleEnd","lastX","lastY","_instancesInSelectionRectangle","iterateOverInstances","selector","_temporaryAABB","instanceAABB","selectionSceneStart","selectionSceneEnd","roundPositionsToGrid","newPos","_zOrderFinder","HighestZOrderFinder","_instances","getHighestZOrder","_instancesEditorSettings","insertNewInitialInstance","setObjectName","setZOrder","_temporaryInstances","_createTemporaryInstancesFromObjectNames","InstancePropertiesEditor","_instanceVariablesList","setLocked","enumerateLayers","setLayer","getCustomProperties","instanceSchema","updateCustomProperty","_renderInstancesProperties","compareStrings","InstancesList","sortBy","sortDirection","SortDirection","ASC","renderedRows","_onRowClick","_rowGetter","_renderLockCell","_selectFirstInstance","_sort","_orderRenderedRows","locked","instanceRowRenderer","tableKey","table","selectedLayer","LayerEditorDialog","zOrderFinder","restrictSearchToLayer","instancesCount","getInstancesCount","highestZOrder","isLightingLayer","getUseDeprecatedZeroAsDefaultZOrder","setVisibility","isFollowingBaseLayerCamera","setFollowBaseLayerCamera","getAmbientLightColorRed","getAmbientLightColorGreen","getAmbientLightColorBlue","setAmbientLightColor","InnerDialog","EditorComponent","editorComponent","sendBehaviorsEditorShown","noTitleMargin","ObjectEditorDialog","ObjectsEditorService","toolbarItemStyle","resourcesSelector","toolbarItem","setCharacterSize","setColor","setBold","setItalic","setFontName","tiledSpriteObject","setTexture","setWidth","setHeight","panelSpriteObject","setTiled","setTopMargin","setBottomMargin","setLeftMargin","setRightMargin","Animation","onSpriteContextMenu","selectedSprites","onSelectSprite","onReplaceDirection","onReplaceByDirection","newDirection","SortableAnimation","SortableAnimationsList","onRemoveAnimation","onAddAnimation","onChangeAnimationName","extraBottomTools","directionId","AnimationsListContainer","moveAnimation","addAnimation","emptyAnimation","setDirectionsCount","removeAnimation","changeAnimationName","otherNames","openSpriteContextMenu","selectSprite","spriteContextMenu","replaceDirection","animationId","setDirection","lockAxis","axis","pointsEditorOpen","setPointsEditorOpen","advancedOptionsOpen","setAdvancedOptionsOpen","collisionMasksEditorOpen","setCollisionMasksEditorOpen","getUpdateIfNotVisible","setUpdateIfNotVisible","spritesList","thumbnailExtraStyle","AddSpriteButton","displayHint","SortableSpriteThumbnail","SortableList","onAddSprite","spritesCount","checkDirectionPointsAndCollisionsMasks","allDirectionSpritesHaveSamePoints","allDirectionSpritesHaveSameCollisionMasks","SpritesList","editWith","metadataRaw","getTimeBetweenFrames","Direction","setTimeBetweenFrames","setLoop","originalIndex","setMetadata","newAnimationName","smallest","onEditWith","horizontalMosaicNodes","verticalMosaicNodes","PointsEditor","setAnimationIndex","setDirectionIndex","setSpriteIndex","samePointsForAnimations","setSamePointsForAnimations","samePointsForSprites","setSamePointsForSprites","updatePoints","otherAnimation","setSamePointsForAllAnimations","setSamePointsForAllSprites","editorNodes","preview","overlayProps","pointsContainer","onPointsUpdated","SortablePointRow","PointRow","SortablePointsListBody","setNameErrors","nonDefaultPoints","pointsRows","pointX","pointY","onChangePointX","updatePointX","onChangePointY","updatePointY","nameError","old","delPoint","originPoint","centerPoint","originRow","centerRow","isAutomatic","PointsList","Point","pointKindIdentifiers","PointsPreview","frameRef","draggedPoint","draggedPointKind","renderPoint","imageSrc","automaticCenterPosition","onPointerMove","frameBoundingRect","xOnFrame","yOnFrame","onPointerUp","CollisionMasksEditor","sameCollisionMasksForAnimations","setSameCollisionMasksForAnimations","sameCollisionMasksForSprites","setSameCollisionMasksForSprites","spriteWidth","setSpriteWidth","spriteHeight","setSpriteHeight","updateCollisionMasks","onSetCollisionMaskAutomatic","automatic","setSameCollisionMasksForAllAnimations","setSameCollisionMasksForAllSprites","setCurrentSpriteSize","isDefaultBoundingBox","polygons","onPolygonsUpdated","restoreCollisionMask","SortableVerticeRow","VerticeRow","SortableVerticesTable","hasWarning","vertice","verticeX","verticeY","onChangeVerticeX","set_x","updateVerticeX","onChangeVerticeY","set_y","updateVerticeY","removeFromVectorVector2f","newVertice","Vector2f","PolygonSection","warningColor","polygon","verticesCount","isConvex","polygonActions","ev","PolygonsList","addCollisionMask","newPolygon","Polygon2d","createRectangle","removeFromVectorPolygon2d","vertexCircle","CollisionMasksPreview","svgRef","draggedVertex","setDraggedVertex","confinePointToFrame","freeX","freeY","maxX","maxY","frameX","frameY","svgStyle","pointOnScreen","createSVGPoint","screenToSvgMatrix","getScreenCTM","inverse","pointOnSvg","matrixTransform","vertex","onStartDragVertex","shapePainterObject","areCoordinatesAbsolute","setCoordinatesRelative","setCoordinatesAbsolute","isClearedBetweenFrames","setClearBetweenFrames","getOutlineColorR","getOutlineColorG","getOutlineColorB","setOutlineColor","getOutlineOpacity","setOutlineOpacity","getOutlineSize","setOutlineSize","getFillColorR","getFillColorG","getFillColorB","setFillColor","getFillOpacity","setFillOpacity","getRendererType","rendererType","setRendererType","Quad","setParticleTexture","Line","getRendererParam1","setRendererParam1","getRendererParam2","setRendererParam2","getParticleTexture","setParticleRed1","setParticleGreen1","setParticleBlue1","getParticleAlpha1","setParticleAlpha1","setParticleRed2","setParticleGreen2","setParticleBlue2","getParticleAlpha2","setParticleAlpha2","isRenderingAdditive","setRenderingAdditive","setRenderingAlpha","getDestroyWhenNoParticles","setDestroyWhenNoParticles","getMaxParticleNb","setMaxParticleNb","getTank","setTank","getFlow","setFlow","getEmitterForceMin","setEmitterForceMin","getEmitterForceMax","setEmitterForceMax","setConeSprayAngle","getZoneRadius","setZoneRadius","getParticleGravityX","setParticleGravityX","getParticleGravityY","setParticleGravityY","getParticleLifeTimeMin","setParticleLifeTimeMin","getParticleLifeTimeMax","setParticleLifeTimeMax","getParticleSize1","setParticleSize1","getParticleSize2","setParticleSize2","getParticleAngle1","setParticleAngle1","getParticleAngle2","setParticleAngle2","objectAsGdObject","castObject","gdObject","extraInformation","BehaviorsEditor","allBehaviorNames","onRemoveBehavior","dependentBehaviors","findDependentBehaviorNames","removeBehavior","behaviorTypeName","BehaviorComponent","BehaviorsEditorService","getEditor","enabledTutorialIds","iconUrl","renameBehavior","onChangeBehaviorName","SetupGridDialog","previousOptions","xScrollbar","yScrollbar","FullSizeInstancesEditorWithScrollbars","_editor","xValue","yValue","xMin","xMax","yMin","yMax","_handleXChange","_handleYChange","_setAndAdjust","_handleViewPositionChange","throttle","onChangeCommitted","TagsButton","additionalWork","getInfoBarDetails","getLightingLayer","insertNewLayer","setLightingLayer","lightingLayer","infoBarEvent","shell","ResourcesEditor","_resourcesList","selectedResource","deleteResource","_removeUnusedResources","selectedResourceName","removedResourceNames","ProjectResourcesAdder","getAllUseless","removeAllUseless","_onResourceSelected","_removeAllResourcesWithInvalidPath","openProjectFolder","openItem","onOpenProjectFolder","onOpenProperties","canDelete","onResourcePathUpdated","checkMissingPaths","onSelectResource","resourcesList","onRemoveUnusedResources","onRemoveAllResourcesWithInvalidPath","lazyRequireGlob","hasElectron","getResourceName","ResourcesList","renamedResource","resourcesWithErrors","_deleteResource","_locateResourceFile","resourceFolderPath","_openResourceFile","resourceFilePath","_copyResourceFilePath","_scanForNewResources","createResource","glob","allFiles","filesToCheck","filePath","relative","filePathsNotInResources","findFilesNotInResources","relativeFilePath","_getResourceThumbnail","destinationResource","moveResource","getResourcePosition","_renderResourceMenuTemplate","allResourcesList","filteredList","filterResourcesList","LanguageDialog","languageDidChange","setLanguageDidChange","isLoadingLanguage","OpenFromStorageProviderDialog","OpenConfirmDialog","onConfirm","interactionMade","pendingConfirmationPromiseResolve","openConfirmDialogOpen","openOpenConfirmDialog","doesInitialOpenRequireUserInteraction","closeAndResolveWith","proceed","gdVersion","initialValue","useStateWithCB","generateProjectItemOptions","enumerate","handlers","ScopedCommandManager","centralCommandManager","setActive","_centralManager","registerAllCommandsToCentralManager","deregisterAllCommandsFromCentralManager","cmd","CommandsContextScopedProvider","centralManager","scopedManager","setDebuggerIds","setHotReloadLogs","HotReloadLogsDialog","shouldDisplayDialogForLogs","ipc","ipcRenderer","richPresenceStartTimestamp","updateDiscordRichPresence","details","startTimestamp","largeImageKey","largeImageText","send","lastCallTime","setLastCallTime","NewResourceDialog","possibleResourceSources","standaloneTabResourceSources","displayTab","importTabResourceSources","initialSource","isInitialSourceHeadless","selectResourcesHeadless","getLastUsedPath","setLastUsedPath","renderComponent","catalogs","_loadCatalog","catalog","_loadLanguage","setupI18n","getTranslation","webpackAsyncContext","req","__webpack_require__","o","ExtensionsProperties","propertyList","getExtensionProperties","getAllExtensionProperties","getAllProperties","LoadingScreenEditor","loadingScreen","getBackgroundImageResourceName","setBackgroundImageResourceName","getBackgroundColor","getBackgroundFadeInDuration","setBackgroundFadeInDuration","isGDevelopSplashShown","showGDevelopSplash","getGDevelopLogoStyle","setGDevelopLogoStyle","getLogoAndProgressLogoFadeInDelay","setLogoAndProgressLogoFadeInDelay","getLogoAndProgressFadeInDuration","setLogoAndProgressFadeInDuration","getShowProgressBar","setShowProgressBar","getProgressBarMinWidth","setProgressBarMinWidth","getProgressBarWidthPercent","setProgressBarWidthPercent","getProgressBarMaxWidth","setProgressBarMaxWidth","getProgressBarHeight","setProgressBarHeight","getProgressBarColor","setProgressBarColor","getMinDuration","setMinDuration","ProjectPropertiesDialog","initialProperties","gameResolutionWidth","gameResolutionHeight","adaptGameResolutionAtRuntime","getAdaptGameResolutionAtRuntime","pixelsRounding","getPixelsRounding","sizeOnStartupMode","getSizeOnStartupMode","minFPS","getMinimumFPS","maxFPS","getMaximumFPS","isFolderProject","useDeprecatedZeroAsDefaultZOrder","loadPropertiesFromProject","setGameResolutionWidth","setGameResolutionHeight","setAdaptGameResolutionAtRuntime","setAuthor","setPackageName","setScaleMode","setPixelsRounding","setSizeOnStartupMode","setMinFPS","setMaxFPS","setIsFolderProject","setUseDeprecatedZeroAsDefaultZOrder","onCancelLoadingScreenChanges","getLoadingScreen","setGameResolutionSize","setMinimumFPS","setMaximumFPS","setFolderProject","applyPropertiesToProject","ProjectManagerCommands","onOpenProjectProperties","onOpenProjectLoadingScreen","onOpenProjectVariables","onOpenPlatformSpecificAssetsDialog","onOpenResourcesDialog","onOpenSearchExtensionDialog","InstalledExtensionDetails","installOrUpdateExtension","noIndentNestedList","itemTextField","ProjectStructureItem","indentNestedItems","groupBackgroundColor","Item","textEndAdornment","addLabel","onEditName","onDuplicate","canMoveUp","onMoveUp","canMoveDown","onMoveDown","buildExtraMenuTemplate","EventFunctionExtensionItem","ProjectManager","editedPropertiesLayout","editedVariablesLayout","renamedItemKind","renamedItemName","projectPropertiesDialogOpen","projectPropertiesDialogInitialTab","projectVariablesEditorOpen","extensionsSearchDialogOpen","openedExtensionShortHeader","openedExtensionName","isInstallingExtension","layoutPropertiesDialogOpen","_openProjectProperties","_openProjectLoadingScreen","_openProjectVariables","_openSearchExtensionDialog","_copyLayout","_cutLayout","_pasteLayout","copiedLayout","newLayout","_duplicateLayout","_addLayout","_onOpenLayoutProperties","_onOpenLayoutVariables","_addExternalEvents","insertNewExternalEvents","_addExternalLayout","insertNewExternalLayout","_addEventsFunctionsExtension","_moveUpLayout","swapLayouts","_moveDownLayout","_copyExternalEvents","_cutExternalEvents","_pasteExternalEvents","copiedExternalEvents","newExternalEvents","_duplicateExternalEvents","_moveUpExternalEvents","swapExternalEvents","_moveDownExternalEvents","_copyExternalLayout","_cutExternalLayout","_pasteExternalLayout","copiedExternalLayout","newExternalLayout","_duplicateExternalLayout","_moveUpExternalLayout","swapExternalLayouts","_moveDownExternalLayout","_copyEventsFunctionsExtension","_cutEventsFunctionsExtension","_duplicateEventsFunctionsExtension","_pasteEventsFunctionsExtension","copiedEventsFunctionsExtension","_moveUpEventsFunctionsExtension","swapEventsFunctionsExtensions","_moveDownEventsFunctionsExtension","_onEditEventsFunctionExtensionOrSeeDetails","getOriginName","originIdentifier","getOriginIdentifier","_onSearchChange","_onRequestSearch","_setProjectFirstLayout","hasMainMenu","forceOpen","firstLayoutName","_renderMenu","VariableTree","SceneVariablesDialog","AuthenticatedUserProfileDetails","emailSent","setEmailSent","sendEmail","ContributionLine","ExamplesAccordion","examples","exampleError","ExtensionsAccordion","extensionError","AssetsAccordion","setExtensions","setExamples","setExtensionError","setExampleError","fetchUserExtensions","fetchUserExamples","GameCard","isCurrentGame","onOpenGameManager","openGameUrl","GamesList","games","setGames","openedGame","setOpenedGame","openedGameInitialTab","setOpenedGameInitialTab","loadGames","projectUuid","thisGame","displayedGames","ProfileDialog","_onChangeTab","SubscriptionDetails","ContributionsDetails","referenceSizesByWindowSize","small","medium","large","arrowWidth","randomNumbers","itemTitle","gridList","image","itemTitleContainer","arrowContainer","useStylesForGridList","scrollbarWidth","useStylesForGridListItem","createStyles","main","outline","tile","useStylesForLeftArrow","arrow","Carousel","additionalAction","browseAllLink","onBrowseAllClick","browseAllLabel","displayItemTitles","shouldDisplayLeftArrow","setShouldDisplayLeftArrow","classesForGridList","classesForGridListItem","classesForLeftArrow","hoveredElement","setHoveredElement","areItemsSet","itemsToDisplay","skeleton","windowSize","cellWidth","widthUnit","cellHeight","titleHeight","renderImage","openLinkCallback","renderThumbnail","Skeleton","renderItemTitle","roundScroll","getVisibleThumbnailsCount","offsetWidth","computeScroll","visibleThumbnailsCount","currentScroll","scrollLeft","currentFirstVisibleItemIndex","onClickArrow","newScrollPosition","handleScroll","handleScrollEnd","onFocusItem","offsetParent","elementBoundingRect","parentBoundingRect","isHiddenLeft","isHiddenRight","scroll","cellSpacing","GridList","cols","spacing","GridListTile","onMouseEnter","onMouseLeave","ScrollBackground","ShowcasedGameDialog","anchorOriginTopRightCircle","UserChip","displayNotificationBadge","overlap","sx","hasPendingNotifications","prepareTutorials","tutorialWithoutLink","renderBetweenCarouselSpace","offset","HomePage","tutorialLoadingError","showcaseLoadingError","exampleLoadingError","selectedShowcasedGame","setSelectedShowcasedGame","selectedExample","setSelectedExample","buildRecentProjectFilesMenuTemplate","recentFiles","prepareExamples","prepareShowcasedGames","BehaviorPropertiesEditor","ShapePreview","draggedIndex","frameOffsetTop","frameOffsetLeft","polygonOrigin","onMoveVertex","dimensionA","dimensionB","renderBox","renderCircle","halfLength","renderEdge","onVertexDown","renderPolygon","PolygonEditor","edges","v1","v2","zProductIsPositive","alignedX","alignedY","onChangeVertexX","onChangeVertexY","_isPolygonConvex","NumericProperty","BitGroupEditor","ButtonGroup","disableElevation","bits","bit","Button","Physics2Editor","setImage","isBitEnabled","bitsValue","enableBit","layersValues","masksValues","newX","newY","idx","shortcutBox","DetectShortcutDialog","setShortcutString","setIsValid","onSet","Typography","commandText","shortcutChip","ShortcutsListRow","isClashing","onEditShortcut","isDefault","onResetShortcut","getPatchedShortcutString","defaultShortcut","userShortcut","ShortcutsList","editedShortcut","setEditedShortcut","areaWiseCommands","shortcutStringToCommands","areaName","sortCommandsIntoAreasAndGetReverseMap","commandPaletteShortcut","onReset","shortcutDisplayName","clashingCommands","hasClash","resetShortcut","shortcut","PreferencesDialog","setThemeName","setCodeEditorThemeName","setAutoDownloadUpdates","showAllAlertMessages","showAllTutorialHints","setAutoDisplayChangelog","setEventsSheetShowObjectThumbnails","setAutosaveOnPreview","setUseNewInstructionEditorDialog","setUseUndefinedVariablesInAutocompletion","setUseGDJSDevelopmentWatcher","setEventsSheetUseAssignmentOperators","setAutoOpenMostRecentProject","resetShortcutsToDefault","setShortcutForCommand","setIsMenuBarHiddenInPreview","setBackdropClickBehavior","setIsAlwaysOnTopInPreview","setEventsSheetCancelInlineParameter","codeEditorThemeName","codeEditorTheme","backdropClickBehavior","autoDownloadUpdates","autoDisplayChangelog","autoOpenMostRecentProject","isMenuBarHiddenInPreview","isAlwaysOnTopInPreview","useGDJSDevelopmentWatcher","directMatches","fuzzyMatches","optionText","compareString","searchTextIndex","fuzzyFilter","fuzzyOrEmptyFilter","listItemContainer","AutocompletePicker","setOpen","getItemText","areaText","Autocomplete","autoHighlight","getItemIcon","getItemHint","scrollPaper","CommandPalette","setMode","selectedCommand","selectCommand","handleCommandChoose","handleOptionChoose","openPalette","hideBackdrop","Badge","onBackgroundColorChanged","TreeTable","SortableLayerRow","effectsCount","onEditEffects","onChangeVisibility","InlineCheckbox","badgeContent","LayersListBody","_onLayerModified","layersCount","containerLayersList","removeLayer","BackgroundColorRow","SortableLayersListBody","LayersList","_addLayer","_addLightingLayer","isLightingLayerPresent","hasLightingLayer","moveLayer","generateLayoutObjectsOptions","onChooseArg","useObjectsListCommands","useObjectGroupsListCommands","useLayersListCommands","UseSceneEditorCommands","AssetCard","onOpenDetails","AssetStore","previewBackground","verticalPreviewBackground","horizontalPreviewBackground","AssetDetails","canInstall","isBeingInstalled","setAsset","loadAsset","loadedAsset","canAddAsset","onAddAsset","assetAuthors","assetLicense","Link","website","ObjectListItem","NewObjectDialog","setNewObjectDialogDefaultTab","getNewObjectDialogDefaultTab","assetWasInstalled","setAssetWasInstalled","openedAsset","setOpenedAsset","allObjectMetadata","objectsByCategory","resourcesFetcher","assetBeingInstalled","setAssetBeingInstalled","onInstallAsset","installOutput","sendAssetAddedToProject","sendAssetOpened","categoryObjectMetadata","sendNewObjectCreated","InstructionSelector","parametersEditor","InstructionEditor","chooseType","_instructionParametersEditor","downloadSvgAsBase64","responseType","btoa","Uint8Array","byte","fromCharCode","HelpPathTextField","helpPath","onChangeHelpPath","isAbsoluteUrl","isRelativePath","ExtensionOptionsEditor","onLoadChange","resourceStoreOpen","setResourceStoreOpen","getPreviewIconUrl","setPreviewIconUrl","getShortDescription","setShortDescription","setHelpPath","base64Svg","checkNameExists","deps","ExtensionDependenciesEditor","TableContainer","getExportName","newExportName","setExportName","newVersion","getDependencyType","__","setDependencyType","removeDependencyAt","openGitHubIssue","OptionsEditorDialog","setExportDialogOpen","writeEventsFunctionsExtension","exportExtension","iconContainer","ResourcePreview","GenericIconPreview","ResourcePropertiesEditor","_chooseResourcePath","resourceSchema","_renderPreview","_renderResourcesProperties","PreviewAndPublishButtons","debugBuildMenuTemplate","previewBuildMenuTemplate","exceptionalTooltipForToolbar","borderRight","borderLeft","ColumnDropIndicator","DraggableClosableTabs","draggedTabIndex","DraggableClosableTab","onBeginDrag","onDrop","fixSomeHtmlCharacters","apiKey","algoliaOptions","hitsPerPage","DocSearchArea","client","algoliasearch","_handleSearchTextChange","_launchSearchRequest","indexName","query","hits","_renderResult","hierarchy","lvl0","lvl1","lvl2","lvl3","lvl4","lvl5","lvl6","objectID","HelpFinder","_sendHelpSearch","sendHelpSearch","sendHelpFinderOpened","SubscriptionPendingDialog","hasPlan","descriptionText","bulletIcon","bulletText","SubscriptionDialog","subscriptionPendingDialogOpen","choosePlan","plan","sendChoosePlanClicked","stripeSubscriptionId","handleUpdatedSubscriptionSuccess","handleUpdatedSubscriptionFailure","_isLoading","sendSubscriptionDialogShown","_renderPrice","CardContent","descriptionBullet","isLocalAppOnly","ChangelogDialog","ChangelogDialogContainer","defaultOpen","verifyIfIsNewVersion","ToolbarCommands","getEventsBasedBehaviorName","EventsBasedBehaviorsList","renamedEventsBasedBehavior","_deleteEventsBasedBehavior","_onEventsBasedBehaviorModified","destinationEventsBasedBehavior","_copyEventsBasedBehavior","_cutEventsBasedBehavior","_pasteEventsBasedBehavior","copiedEventsBasedBehavior","newEventsBasedBehavior","_renderEventsBasedBehaviorMenuTemplate","_addNewEventsBasedBehavior","filterEventsBasedBehaviorsList","timeField","timeIcon","AnimationPreview","currentFrameIndex","currentFrameElapsedTime","paused","timeBetweenFrames","nextUpdate","previousUpdateTimeInMs","replay","play","pause","_updateAnimation","updateTimeInMs","elapsedTime","spritesContainer","newFrameIndex","newFrameElapsedTime","onChangeTimeBetweenFrames","spacer","formatTime","DirectionTools","timeError","previewOpen","saveTimeBetweenFrames","newTime","newTimeIsValid","setLooping","openPreview","imageResourceExternalEditors","openPropertiesPanel","canDeleteSelection","setupGrid","UnknownEvent","unknownEvent","WhileEvent","registerEvent","renderFunction","LeaderboardDialog","useFetchLeaderboards","fetchLeaderboards","InlineLeaderboardIdField","isAdminOpen","setIsAdminOpen","inputFieldRef","isCurrentValueInLeaderboardList","isExpressionField","setIsExpressionField","onChangeSelectValue","onChangeTextValue","fieldLabel","gameHasLeaderboards","selectOptions","GenericExpressionField","currentExpression","currentExpressionNode","getInlineParameterDisplayValue","setupAutocompletions","monaco","importAllJsFilesFromFolder","folderPath","readdir","filenames","readFile","fileError","languages","typescript","javascriptDefaults","addExtraLib","runtimePath","runtimeTypesPath","runtimeLibsPath","runtimePixiRenderersPath","runtimeCocosRenderersPath","runtimeHowlerSoundManagerPath","runtimeCocosSoundManagerPath","runtimeFontfaceobserverFontManagerPath","extensionsPath","eventToolsPath","folderNames","monacoEditorOptions","scrollBeyondLastLine","minimap","monacoCompletionsInitialized","monacoThemesInitialized","CodeEditor","MonacoEditor","setupEditorThemes","defineTheme","setupEditorCompletions","setCompilerOptions","ScriptTarget","ES6","allowNonTsExtensions","allowJs","checkJs","_handleContextMenu","loadMonacoEditor","MonacoEnvironment","getWorkerUrl","workerId","handleLoadError","editorWillMount","editorDidMount"],"mappings":"qKA4CMA,EAAOC,cACX,WAYEC,GAZF,IAEIC,EAFJ,EAEIA,SACAC,EAHJ,EAGIA,MACAC,EAJJ,EAIIA,KACAC,EALJ,EAKIA,MACAC,EANJ,EAMIA,MACAC,EAPJ,EAOIA,SACAC,EARJ,EAQIA,SACAC,EATJ,EASIA,oBACGC,EAVP,8GAcE,gBAAC,IAAD,eACEC,QACW,eAATP,EACI,KACS,UAATA,EACA,KACS,UAATA,EACA,QACA,QAENH,IAAKA,EACLI,MAAOA,EACPO,UAAWH,EAAsB,YAASI,EAC1CV,MAAK,2BACAA,GADA,IAEHW,QAASL,EAAsB,oBAAiBI,EAChDE,WAAYR,EAAW,OAAIM,EAC3BG,UAAWR,EAAW,EAAI,EAC1BS,aAAcT,EAAW,EAAI,IAE/BF,MAAOA,GAAS,WACZI,GAEHR,MAKQH,O,eCpFf,IAAMmB,EAAoB,SACxBC,EACAC,EACAC,GAGA,IADA,IAAMC,EAAS,GACNC,EAAIJ,EAAOI,EAAIH,EAAKG,IAC3BD,EAAOE,KAAKH,EAAKE,IAEnB,OAAOD,GA6BTG,EAAOC,QAAU,CACfR,SACAS,cA5B+B,SAC/BR,EACAC,EACAC,GAGA,IADA,IAAMC,EAAS,GACNC,EAAIH,EAAM,EAAGG,GAAKJ,EAAOI,IAChCD,EAAOE,KAAKH,EAAKE,IAEnB,OAAOD,GAoBPM,UAV8B,SAC9BC,EACAR,GAEA,OAAOH,EAAO,EAAGW,EAAUzB,QAAQ,SAAAmB,GAAC,OAAIF,EAAKQ,EAAUC,GAAGP,GAAIA,S,0NCiHnDQ,EAA6B,SAACC,GAIzC,MAAO,CAELrB,QAA0B,SAAjBqB,EAAMC,OAAoB,WAAa,SAEhDA,OAAyB,SAAjBD,EAAMC,OAAoB,OAAS,QAI3CC,YAA8B,SAAjBF,EAAMC,SAAsBD,EAAMG,oBAO9BC,E,4MACnBC,OAASrC,c,sDAGHsC,KAAKD,OAAOE,SACdD,KAAKD,OAAOE,QAAQC,U,6BAKlBF,KAAKD,OAAOE,SACdD,KAAKD,OAAOE,QAAQE,S,qCAKtB,OAAIH,KAAKD,OAAOE,QACPD,KAAKD,OAAOE,QAGd,O,+BAGC,IAAD,OACCP,EAAUM,KAAVN,MACFU,EAAWV,EAAMU,eAAY7B,EAE7B8B,EAAaX,EAAMY,mBACvB,gBAAC,IAAD,CAAcC,OAAQb,EAAMY,qBAC1B,KAEJ,OACE,gBAAC,OAAD,MACG,gBAAGE,EAAH,EAAGA,KAAH,OACC,gBAAC,IAAD,eAEEC,UAAqBlC,IAAfmB,EAAMe,KAAqBf,EAAMe,UAAOlC,EAC9CmC,WAAuBnC,IAAhBmB,EAAMgB,MAAsBhB,EAAMgB,WAAQnC,EACjDoC,kBACyBpC,IAAvBmB,EAAMiB,aAA6BjB,EAAMiB,kBAAepC,EAE1D6B,SACEA,EACI,SAAAQ,GAAK,OAAIR,EAASQ,EAAOA,EAAMC,OAAOH,aACtCnC,EAGNuC,QAASpB,EAAMqB,UACfV,WAAYX,EAAMqB,WAAaV,EAC/BW,SAAUtB,EAAMsB,SAChBC,SAAUvB,EAAMuB,SAChBC,gBAAiB,CACfC,SAAQzB,EAAM0B,yBAA4B7C,GAE5C8C,MAAO3B,EAAMG,kBACbyB,KAAM5B,EAAM4B,KACZC,YAAa7B,EAAM8B,SAAWhB,EAAKiB,EAAE/B,EAAM8B,eAAYjD,EACvDmD,GAAIhC,EAAMgC,GAEVC,UAAWjC,EAAMiC,UAEjBC,UAAWlC,EAAMkC,UACjBC,KAAMnC,EAAMmC,KACZC,QAASpC,EAAMoC,SAEXrC,EAA2BC,GA/BjC,CAgCEqC,UAAWrC,EAAMqC,UACjBC,WAAY,CACVC,sBAC0B1D,IAAxBmB,EAAMwC,gBAEDxC,EAAMwC,cACbrE,MAAM,aACJsE,SAAUzC,EAAM7B,MAAQ6B,EAAM7B,MAAMsE,cAAW5D,EAC/C6D,UAAW1C,EAAM7B,MAAQ6B,EAAM7B,MAAMuE,eAAY7D,GAC9CmB,EAAM2C,YAEXC,SAAU5C,EAAM4C,SAChBC,WAAY,CACVC,WAAY9C,EAAM8C,WAClBC,QAAS/C,EAAM+C,QACfC,UAAWhD,EAAMgD,UACjBC,QAASjD,EAAMiD,QAEfC,UAAWlD,EAAMkD,UAEjBC,IAAKnD,EAAMmD,IACXC,IAAKpD,EAAMoD,IACXC,KAAMrD,EAAMqD,MAGdC,aAActD,EAAMsD,aAClB,gBAAC,IAAD,CAAgBC,SAAS,OACtBvD,EAAMsD,mBAGTzE,GAGJV,MACE6B,EAAM7B,MACF,CACEqF,MAAOxD,EAAM7B,MAAMqF,YAAS3E,EAC5B4E,KAAMzD,EAAM7B,MAAMsF,WAAQ5E,EAC1B6E,IAAK1D,EAAM7B,MAAMuF,UAAO7E,QAE1BA,EAEN8E,QAAS3D,EAAM2D,QACfC,OAAQ5D,EAAM4D,OACdC,SAAU,EAAKxD,OACfyD,WAAW,kB,GA/GgB9F,aAyH1B+F,EAAuC,G,wDC/R9CC,EACY,CACdlF,QAAS,OACTmF,WAAY,SACZC,eAAgB,SAChBT,KAAM,EACNU,QAAS,IAoBEC,IANM,SAACpE,GAAD,OACnB,uBAAK7B,MAAK,2BAAO6F,GAA0BhE,EAAM7B,QAC/C,gBAAC,IAAD,CAAgBA,MAAO6B,EAAMqE,cAAerE,EAAM9B,a,iKC6BjCoG,E,uKACT,IAAD,EAC+ChE,KAAKN,MAAnDuE,EADD,EACCA,QAASC,EADV,EACUA,kBAAsB9F,EADhC,+CAED+F,EAAa,gBAAC,IAAkB/F,GAEtC,OAAO6F,IAAYjE,KAAKN,MAAMsB,SAC5B,gBAAC,OAAD,MACG,gBC3D8BoD,ED2D3B5D,EAAH,EAAGA,KAAH,OACC,gBAAC6D,EAAA,EAAD,CACEC,MACE9D,EAAKiB,EAAEwC,IACNC,EACG,KChEqBE,EDgEQF,EC/DzCK,cACK,GACEC,cACFJ,EACJK,QAAQ,cAAe,UACvBA,QAAQ,qBAAsB,UAC9BA,QAAQ,UAAW,UACnBA,QAAQ,UAAW,UACnBA,QAAQ,QAAS,UACjBA,QAAQ,WAAY,UACpBA,QAAQ,SAAU,UAClBA,QAAQ,YAAa,UAEjBL,EACJK,QAAQ,cAAe,SACvBA,QAAQ,qBAAsB,SAC9BA,QAAQ,UAAW,QACnBA,QAAQ,WAAY,QACpBA,QAAQ,SAAU,QD8CP,IAENC,UAAU,SACVC,WAAYC,KAEXT,MAKPA,M,GAvBkCzG,c,mGErDlCmH,EAAWC,IAAgB,YAC3BC,EAAOD,IAAgB,QAEvBE,E,iDACJC,aAAmD,G,6DAElCC,GACf,IAAMC,EAAQnF,KAAKiF,aAAaC,EAAQE,KACxC,OAAKD,IACKnF,KAAKiF,aAAaC,EAAQE,KAAO,M,mCAMhCF,EAAoBG,GAE/B,OADcrF,KAAKsF,iBAAiBJ,GACvBG,K,+BAGNH,EAAoBG,GAE3B,OADcrF,KAAKsF,iBAAiBJ,GACtBG,GAAOA,I,+BAGdH,EAAoBG,UACbrF,KAAKsF,iBAAiBJ,GACvBG,K,wCAIbH,EACAK,EACAC,EACAC,GAEA,IAAMN,EAAQnF,KAAKsF,iBAAiBJ,GAEpC,OAMUC,EAAMI,GANXE,EAMuBD,EAFlB,UAAqBA,EAArB,kBAA6CE,KAAKC,W,KAwC3CC,E,wHAQjBV,EACAW,GAEA,IAAMC,EAAmBZ,EAAQa,sBACjCF,EAAeG,SAAQ,SAAAC,GACjBH,EAAiBI,YAAYD,IAC/BL,EAAgBO,OAAOC,SACrBlB,EACAY,EAAiBO,YAAYJ,GAAcK,gB,0CAWjDV,EAAgBO,OAAS,IAAInB,I,iCAO7BE,EACAqB,E,GAES,IADPC,EACM,EADNA,kBAAmBf,EACb,EADaA,kBAErB,GAAMZ,GApDU,SAAC0B,GACnB,QACEA,EAAcE,WAAW,YACzBF,EAAcE,WAAW,aACzBF,EAAcE,WAAW,WACzBF,EAAcE,WAAW,UACzBF,EAAcE,WAAW,UA8CPC,CAAYH,GAAgB,CAC5C,IAAMI,EAAYf,EAAgBO,OAAOS,aACvC1B,EACAqB,GAEF,GAAII,EAAW,OAAOA,EAGtB,IAAME,EAAO3B,EAAQ4B,iBACfC,EAAchC,EAAKiC,QAAQH,GAC3BI,EAAuBlC,EAC1BmC,QAAQH,EAAaR,GACrB9B,QAAQ,MAAO,KAGlB,OADA0C,QAAQC,KAAK,mCAAoCH,GAC1CjH,KAAKmG,OAAOkB,kBACjBnC,EACAqB,EACA,UAAYU,IACVxB,GAIN,IAAI6B,EAAoBf,EACpBC,IAmBFc,EA7G0B,SAC9BjC,EACAkC,EACAC,GAEA,GAAInC,EAAIoB,WAAW,UAAYpB,EAAIoB,WAAW,SAE5C,OAAOpB,EAGT,IAAMoC,GAAkC,IAAtBpC,EAAIqC,QAAQ,KAAc,IAAM,IAClD,OAAOrC,EAAMoC,EAAYF,EAA0B,IAAMC,EAkGjCG,CAClBL,EACA,UACA,SAIJ,IAAMX,EAAYf,EAAgBO,OAAOS,aACvC1B,EACAoC,GAEF,OAAIX,IAEJQ,QAAQC,KAAK,wBAAyBE,GAC/BtH,KAAKmG,OAAOyB,SAAS1C,EAASoC,M,yCAQrCpC,EACAe,EACA4B,GAEA,GAAI3C,EAAQa,sBAAsBG,YAAYD,GAAe,CAC3D,IAAM6B,EAAuB5C,EAC1Ba,sBACAM,YAAYJ,GACZK,UACH,OAAOV,EAAgBmC,WAAW7C,EAAS4C,EAAsBD,GAGnE,OAAO5B,M,KAnHUL,EACZO,OAAS,IAAInB,G,yHC3BDgD,E,4MAInBC,MAAQ,CACNC,SAAS,EACTC,KAAM,M,EAGRC,OAAqB,K,4DAEPD,GACZnI,KAAKqI,SAAS,CAAEF,W,wCAGAG,EAAwBC,GACxC,IAAMC,EAAQxI,KAAKyI,eACfD,IACFA,EAAMF,eAAiBA,EACvBE,EAAMD,aAAeA,K,8BAKnBvI,KAAKoI,QAAQpI,KAAKoI,OAAOlI,U,qCAI7B,GAAIF,KAAKoI,OAAQ,OAAOpI,KAAKoI,OAAOK,iB,+BAG5B,IAAD,SASHzI,KAAKN,MAPPgB,EAFK,EAELA,MACAN,EAHK,EAGLA,SACAsI,EAJK,EAILA,aACArF,EALK,EAKLA,QACAC,EANK,EAMLA,OACA7C,EAPK,EAOLA,KACGrC,EARE,6EAWP,OAEE,gBAAC,IAAD,iBACMA,EADN,CAEEqC,KAAMA,GAAQ,OACd9C,IAAK,SAAAgL,GAAK,OAAK,EAAKP,OAASO,GAC7BjI,MAAOV,KAAKiI,MAAMC,QAAUlI,KAAKiI,MAAME,KAAOzH,EAC9C2C,QAAS,SAAAzC,GACP,EAAKyH,SAAS,CACZH,SAAS,EACTC,KAAM,EAAKzI,MAAMgB,QAGf2C,GAASA,EAAQzC,IAEvBR,SAAU,SAACQ,EAAOgI,GAChB,EAAKP,SAAS,CACZF,KAAMS,IAGHF,GAActI,EAASwI,IAE9BtF,OAAQ,SAAA1C,GACNR,EAASQ,EAAMiI,cAAcnI,OAC7B,EAAK2H,SAAS,CACZH,SAAS,EACTC,KAAM,OAGJ7E,GAAQA,EAAO1C,W,GAvEwBlD,c,4ICVhCoL,E,4MACnB/I,OAASrC,c,sDAGHsC,KAAKD,OAAOE,SAASD,KAAKD,OAAOE,QAAQC,U,+BAGrC,IAAD,OACCR,EAAUM,KAAVN,MACFU,EAAWV,EAAMU,eAAY7B,EAG/BwK,GAAgB,EACdC,EAAiBtL,WAAeuL,IAAIvJ,EAAM9B,UAAU,SAAAsL,GACxD,OAAc,OAAVA,GAAmBA,EAAMxJ,MAEtBwJ,EAAMxJ,MAAMgB,MAFwB,QAIxCsI,EAKHD,EAEgB,IADdC,EAAeG,QAAO,SAAAC,GAAU,OAAIA,IAAe1J,EAAMgB,SACtD2I,OANLlC,QAAQrG,MACN,iGAOJ,IAAMwI,EAAiBP,EAAgBrJ,EAAMgB,MAjC3B,GAmCZL,EAAaX,EAAMY,mBACvB,gBAAC,IAAD,CAAcC,OAAQb,EAAMY,qBAC1B,KAEJ,OACE,gBAAC,OAAD,MACG,gBAAGE,EAAH,EAAGA,KAAH,OACC,gBAAC,IAAD,eACE+I,QAAM,GACF9J,YAA2BC,GAFjC,CAGEsB,SAAUtB,EAAMsB,SAChBe,UAAWrC,EAAMqC,UACjBV,MAAO3B,EAAMG,kBACbQ,WAAYA,EACZK,MAAO4I,EACPlJ,SACEA,EACI,SAAAQ,GACER,EAASQ,GAAQ,EAAGA,EAAMC,OAAOH,aAEnCnC,EAENyD,WAAY,CAAEnE,MAAO6B,EAAM2C,YAC3BnB,gBAAiB,CACfC,QAAQ,GAEVqI,YAAa,CACXC,QAAQ,GAEV5L,MAAO6B,EAAM7B,MACb0F,SAAU,EAAKxD,SAEbgJ,EAME,KALF,0BAAQrI,MApEA,GAoEsBM,UAAQ,GACnCtB,EAAM8B,SACHhB,EAAKiB,EAAE/B,EAAM8B,UACbhB,EAAKiB,EAAE,0BAGd/B,EAAM9B,iB,GApEsBF,c,gHChCpBgM,E,uKACT,IAAD,OACP,OACE,gBAAC,OAAD,MACG,gBAAGlJ,EAAH,EAAGA,KAAH,OACC,0BAAQE,MAAO,EAAKhB,MAAMgB,MAAOM,SAAU,EAAKtB,MAAMsB,UACnDR,EAAKiB,EAAE,EAAK/B,MAAMiK,qB,GANWjM,c,kKCFpCgG,EAAS,CACbkG,KAAM,CAAE1G,MAAO,GAAI2G,OAAQ,GAAIC,YAAa,GAAIC,WAAY,IAC5DC,QAAS,CAAE7G,KAAM,IA6EJ8G,IA9DM,SAAC,GAMR,IALZC,EAKW,EALXA,KACAtM,EAIW,EAJXA,SACAuM,EAGW,EAHXA,OACAC,EAEW,EAFXA,kBACAC,EACW,EADXA,eAEMC,EAAgB5M,aAAiB6M,KAEvC,OACE,gBAAC,IAAD,CAAOlM,QAAQ,YACb,gBAAC,IAAD,CAAQmM,QAAM,GACZ,gBAAC,IAAD,CACE7G,WAAW,SACXC,eAAe,gBACf1F,UAAQ,GAER,gBAAC,IAAD,CAAMA,UAAQ,EAACyF,WAAW,UACvB0G,EACC,gBAAC,WAAD,KACGA,IACD,gBAAC,IAAD,MACA,gBAAC,IAAD,OAGF,gBAAC,WAAD,KACY,SAATH,GAAmB,gBAAC,IAAD,CAAMrM,MAAO6F,EAAOkG,OAC9B,YAATM,GACC,gBAAC,IAAD,CACErM,MAAK,2BACA6F,EAAOkG,MADP,IAEH7L,MAAOuM,EAAcG,QAAQC,YAIzB,UAATR,GACC,gBAAC,IAAD,CACErM,MAAK,2BACA6F,EAAOkG,MADP,IAEH7L,MAAOuM,EAAcG,QAAQ3J,WAMvC,gBAAC,IAAD,CAAMjD,MAAO6F,EAAOsG,SAAUpM,IAEhC,gBAAC,IAAD,CAA2BM,UAAQ,EAACyF,WAAW,UAC5CyG,GAAqBA,IACrBD,GACC,gBAAC,IAAD,CACE9I,MAAO,gBAAC,QAAD,aACPsB,QAAS,kBAAMwH,a,4FChDhBQ,IAnBI,SAACjL,GAClB,IAAKA,EAAMkL,aAAc,OAAO,KAChC,IAAMC,EAAWC,YAAYpL,EAAMkL,cACnC,OAAKC,EAGH,gBAAC,IAAD,CACElI,QAAS,WACHjD,EAAMkL,cACRG,IAAOC,gBAAgBH,IAG3BhK,OAAO,SACPQ,MAAO3B,EAAM2B,OAAS,gBAAC,QAAD,aACtBuI,KAAM,gBAAC,IAAD,QAXY,O,oEChBlBlG,EACY,CACdlF,QAAS,OACTmF,WAAY,SACZC,eAAgB,SAChBT,KAAM,EACNU,QAAS,IAIE,aAAAnE,GAAK,OAClB,yBAAK7B,MAAK,2BAAO6F,GAA0BhE,EAAM7B,QAC/C,kBAAC,IAAD,CAAkBC,KAAM,Q,idCQfmN,EAA6B,GAC7BC,EAA4B,GAEnCxH,EAAS,CACbyH,aAAc,CAGZxL,OAAQ,QAMRyL,UAAW,eA0EFC,EAAW3N,cACtB,SAACgC,EAAsB/B,GAAS,IAAD,EACDD,aAAiBgC,EAAM4L,eADtB,mBACtBC,EADsB,KACdC,EADc,KAEvBC,EAAkB/N,SAA+B,MAEjDgO,EAAkBhO,eACtB,WACM+N,EAAgBxL,SAClBwL,EAAgBxL,QAAQ0L,SAG5B,CAACF,IAEGG,EAA+BC,YAAaH,GAE5CI,EAAgC,WACpC,OAAIpM,EAAMqM,oBAEN,gBAAC,IAAD,KACE,gBAAC,IAAD,CAASzH,MAAO5E,EAAMsM,qBACpB,gBAAC,IAAD,CACElO,KAAK,QACLmO,KAAK,MACLC,aAAW,SACXvJ,QAASjD,EAAMyM,UAEf,gBAAC,IAAD,SAMNzM,EAAM0M,kBACD1M,EAAM2M,kBACX,gBAAC,IAAD,KACE,gBAAC,IAAD,CACE1O,IAAK8N,EACLa,QACE,gBAAC,IAAD,CAAYxO,KAAK,QAAQmO,KAAK,MAAMC,aAAW,QAC7C,gBAAC,IAAD,CAAUrO,MAAO,CAAEE,MAAO2B,EAAM6M,mBAGpCH,kBAAmB1M,EAAM0M,qBAI7B,gBAAC,IAAD,CACEzO,IAAK8N,EACLa,QACE,4BAEFF,kBAAmB1M,EAAM0M,oBAI3B1M,EAAM8M,kBAEN,gBAAC,IAAD,KACE,gBAAC,IAAD,CACE1O,KAAK,QACLmO,KAAK,MACLC,aAAW,YACXvJ,QAASjD,EAAM+M,YAEf,gBAAC,IAAD,CAAW5O,MAAO,CAAEE,MAAO2B,EAAM6M,oBAKrC7M,EAAMgN,oBAEN,gBAAC,IAAD,KACE,gBAAC,IAAD,CACE5O,KAAK,QACLmO,KAAK,MACLC,aAAW,SACXvJ,QAASjD,EAAMiN,UAEf,gBAAC,IAAD,CAAQ9O,MAAO,CAAEE,MAAO2B,EAAM6M,oBAM/B,MAGDK,EAAsBlN,EAAtBkN,kBAER,GAAKA,EAsCE,CACL,IAAMC,OAA4BtO,IAAfmB,EAAMiM,KAAqBJ,EAAS7L,EAAMiM,KAC7D,OACE,gBAAC,WAAD,KACE,gBAAC,IAAD,CACEmB,QAAM,EACNC,OA7NU,EA8NVC,eAAa,EACbrK,QAAS,WACP6I,GAAWqB,GACPnN,EAAMiD,SACRjD,EAAMiD,WAGV3B,SAAUtB,EAAMsB,SAChBnD,MAAO6B,EAAM7B,MACbF,IAAKA,EACL+D,GAAIhC,EAAMgC,IAEThC,EAAMuN,UACL,gBAAC,IAAD,KAAkBvN,EAAMuN,UAE1B,gBAAC,IAAD,CACEpP,MAAO6F,EAAOyH,aACd+B,QAASxN,EAAMiK,YACfwD,UAAWzN,EAAM0N,cACjBC,UAAW3N,EAAM4N,qBAAuB,cAAgB,KAEzD5N,EAAM6N,4BACLV,EACE,gBAAC,IAAD,MAEA,gBAAC,IAAD,MAEA,KACHf,KAEH,gBAAC,IAAD,CAAU0B,GAAIX,EAAYY,QAAQ,OAAOC,eAAa,GACpD,gBAAC,IAAD,CACEpP,UAAU,MACVqP,gBAAc,EACd9P,MAAK,aACH+P,YAAa,IACVlO,EAAMmO,iBAEXd,OApQQ,GAsQPH,OApFT,OACE,gBAAC,IAAD,eACEE,QAAM,EACNC,OArLY,EAsLZC,eAAa,EACbc,mBACE,MAEFnL,QAASjD,EAAMiD,QACfoL,cAAerO,EAAMqO,cACrB/M,SAAUtB,EAAMsB,SAChBgN,SAAUtO,EAAMsO,SAChBnQ,MAAO6B,EAAM7B,MACboQ,cAAevO,EAAM0M,kBAAoBV,OAAkBnN,GACvDqN,EAbN,CAcEjI,WAAyC,IAA7BjE,EAAMwO,mBAA2B,kBAAe3P,EAC5DZ,IAAKA,EACL+D,GAAIhC,EAAMgC,KAEThC,EAAMuN,UACL,gBAAC,IAAD,KAAkBvN,EAAMuN,UAE1B,gBAAC,IAAD,CACEpP,MAAO6F,EAAOyH,aACd+B,QAASxN,EAAMiK,YACfwD,UAAWzN,EAAM0N,cACjBC,UAAW3N,EAAM4N,qBAAuB,cAAgB,KAEzDxB,IACApM,EAAMyO,gBACL,gBAAC,IAAD,CAAKtQ,MAAO,CAAEE,MAAO2B,EAAM6M,kBAE5B7M,EAAM0O,mBACL,gBAAC,IAAD,CAAQvQ,MAAO,CAAEE,MAAO2B,EAAM6M,sBA0E7B8B,EAAb,uKAEI,OACE,gBAAC,IAAD,CAASxQ,MAAOmC,KAAKN,MAAM7B,MAAOkP,OAhSlB,GAiSb/M,KAAKN,MAAM9B,cAJpB,GAA0BF,c,yDC/SpBgG,EAAS,CACb4K,UAAW,CACT9P,QAAS,OACT+P,cAAe,UAEjBC,SAAU,CACRA,SAAU,SAgCCC,IAfI,SAAC/O,GAAD,OACjB,gBAAC,IAAD,CACEgP,QAAM,EACN7Q,MAAK,2BACA6F,EAAO4K,WADP,IAEHzE,OAAQnK,EAAMiP,kBAAepQ,EAAY,OACzC2E,MAAOxD,EAAMwD,MAAQxD,EAAMwD,WAAQ3E,EACnC4E,KAAMzD,EAAMkP,cAAWrQ,EAAY,GAC/BmB,EAAM8O,SAAW9K,EAAO8K,cAAWjQ,IAGxCmB,EAAM9B,Y,6BCrCX,oBAiBeiR,IANO,SAACnP,GAAD,OACpB,gBAAC,IAAqBoP,SAAtB,MACG,SAAAxE,GAAa,OAAI5K,EAAM9B,SAAS0M,Q,gECV/B5G,EACO,CACTP,KAAM,GAkBKzF,kBACb,WAAgDC,GAAS,IAAtDC,EAAqD,EAArDA,SAAUmR,EAA2C,EAA3CA,kBAAmBlR,EAAwB,EAAxBA,MACxBmR,EAAatR,SAAc,MAiCjC,OAhCAA,sBAA0BC,GAAK,iBAAO,CAIpCsR,SAAU,SAACpO,GACT,IAAMqO,EAAoBF,EAAW/O,QACrC,GAAKiP,EAAL,CAEA,IAAMC,EAAgBC,IAASC,YAAYxO,GAC3C,GAAIsO,aAAyBG,YAAa,CACxC,IAAMC,EAAYJ,EAAcK,wBAAwBpM,IAElDqM,EAAsBP,EAAkBM,wBAC3CpM,IACH8L,EAAkBQ,WAAaH,EAAYE,OAE3CtI,QAAQrG,MACN,4DAON6O,eAAgB,WACd,IAAMT,EAAoBF,EAAW/O,QAChCiP,IAELA,EAAkBQ,UAAYR,EAAkBU,mBAKlD,uBACE/R,MAAK,2BACA6F,GADA,IAEHmM,UAAWd,EAAoB,OAAS,UACrClR,GAELF,IAAKqR,GAEJpR,O,iGCpCIkS,G,MAA2B,CACtCC,eAAe,EACfC,aAAc,KACdC,QAAS,KACTC,OAAQ,KACRC,aAAc,KACdC,OAAQ,KACRC,OAAQ,KACRC,SAAU,aACVC,QAAS,aACTC,OAAQ,aACRC,cAAe,aACfC,gBAAiB,aACjBC,gBAAgB,WAAD,4BAAE,sBAAAC,EAAA,0FAAF,kDAAC,GAChBC,qBAAqB,WAAD,4BAAE,sBAAAD,EAAA,0FAAF,kDAAC,GACrBE,yBAAyB,WAAD,4BAAE,sBAAAF,EAAA,0FAAF,kDAAC,GACzBG,wBAAwB,WAAD,4BAAE,sBAAAH,EAAA,0FAAF,kDAAC,GACxBI,uBAAuB,WAAD,4BAAE,sBAAAJ,EAAA,0FAAF,kDAAC,GACvBK,uBAAwB,kBAAMC,QAAQC,OAAO,IAAIC,MAAM,qBAGnDC,EAA2B3T,gBAC/BoS,GAGauB,O,+BCvDA,aACb/P,EACAgQ,GAEI,IADJC,EACG,uDADoB,GAEvB,IAAKD,EAAOhQ,GAAO,OAAOA,EAG1B,IADA,IAAIkQ,EAAgBD,EAASjQ,EACpBrC,EAAI,EAAGqS,EAAOE,KAAkBvS,EACvCuS,EAAgBD,EAASjQ,EAAOrC,EAGlC,OAAOuS,I,6BCbT,yCAMMC,EAAYC,YAAW,CAC3BC,KAAM,CACJ5H,WAAY,EACZD,YAAa,EACbjG,QAAS,KAwBE,aAACnE,GAAkB,IACxBkS,EAAYlS,EAAZkS,QACFC,EAAUJ,IACVK,EACJ,gBAAC,IAAD,CACEzE,UAAWwE,EAAQF,KACnB3Q,SAAUtB,EAAMsB,SAChB+Q,QAASrS,EAAMqS,QACf3R,SACEwR,EAAU,SAAAhR,GAAK,OAAIgR,EAAQhR,EAAOA,EAAMC,OAAOkR,eAAWxT,EAE5DqL,KAAMlK,EAAMsS,cACZC,YAAavS,EAAMuS,YACnBlU,MAAM,UACNF,MAAO6B,EAAM2B,WAAQ9C,EAAYmB,EAAM7B,QAG3C,OAAO6B,EAAM2B,MACX,gBAAC,IAAD,CACE6Q,QAASJ,EACTzQ,MAAO3B,EAAM2B,MACbxD,MAAO6B,EAAM7B,QAGfiU,I,8BCzDJ,sHAAMK,EAAkBC,EAAOD,GAUxB,SAASE,EACdC,GAEC,IADDC,EACA,uDADqB,cAEfC,EAAoB,IAAIL,EAAGM,kBACjCH,EAAaC,GAAYC,GAGzB,IAAME,EAASC,KAAKC,MAAMT,EAAGU,WAAWC,OAAON,IAG/C,OAFAA,EAAkBO,SAEXL,EAWF,SAASM,EACdV,GAES,IADTC,EACQ,uDADa,cAEfC,EAAoB,IAAIL,EAAGM,kBACjCH,EAAaC,GAAYC,GAGzB,IAAMS,EAAOd,EAAGU,WAAWC,OAAON,GAGlC,OAFAA,EAAkBO,SAEXE,EAYF,SAASC,EACdZ,EACAI,GAGC,IAFDH,EAEA,uDAFqB,kBACrBY,EACA,4DAD8B5U,EAExBiU,EAAoBL,EAAGU,WAAWO,aAAaV,GAChDS,EAKHb,EAAaC,GAAYY,EAAiBX,GAJ1CF,EAAaC,GAAYC,GAM3BA,EAAkBO,Y,+CCtEpB,0sBAAO,IAAMM,EAAiB,aACjBC,EAAe,WACf1J,EAAO,OAEP2J,EAAsB,mBACtBC,EAAoB,iBAEpBC,EAA2B,6BAC3BC,EAAmB,oBACnBC,EAAsB,uBACtBC,EAA2B,6BAC3BC,EAAsB,wBACtBC,EAAuB,wBACvBC,EAA8B,gCAC9BC,EAA8B,gCAC9BC,EAA8B,gCAC9BC,EAAe,gBAIfC,EAAa,cACbC,EAA8B,sBAE9BC,EAAgB,iBAChBC,EAAoB,sBAEpBC,EAAgB,iBAEhBC,EAAuB,2B,8JCbvBC,EAAb,uKACY,IAAD,OACP,OACE,gBAAC,IAAD,CACEpW,QAAQ,YACRqW,UAAU,UACVhU,MAAOV,KAAKN,MAAMgB,MAClBN,SAAU,SAACuU,EAAG/L,GAAJ,OAAiB,EAAKlJ,MAAMU,SAASwI,KAE9C5I,KAAKN,MAAM9B,cATpB,GAAmCF,aA4BtBkX,EAAb,uKAEI,OAAO,gBAAC,IAAW5U,KAAKN,WAF5B,GAAyBhC,c,wWCDnByU,EAAkBC,EAAOD,GAEzBzO,EAAS,CACb4K,UAAW,CACT9P,QAAS,OACTmF,WAAY,cAEdkR,mBAAoB,CAClB1R,KAAM,EACN2R,SAAU,KAEZC,gCAAiC,CAC/B9R,SAAU,YAEZ+R,sCAAuC,CACrCxW,QAAS,OACTyW,UAAW,KAEbC,iCAAkC,CAChC1W,QAAS,OACTyW,UAAW,KAEbzM,MAAO,CACL2M,WAAY,sCACZC,WAAY,KAEdC,wCAAyC,CACvC3W,UAAW,GACXkP,YAAa,GACb0H,aAAc,GACdC,UAAW,cAEbC,6BAA8B,CAC5B9W,UAAW,EACXkP,YAAa,EACb0H,aAAc,GAEhBG,8CAA+C,CAC7C/W,UAAW,GACXkP,YAAa,EACb0H,aAAc,IAiCZI,EAAgB,SACpBC,GAKA,IAAMC,EAAsB,IAAIzD,EAAG0D,oBACnCF,EAAeG,MAAMF,GACrB,IAAMG,EAASH,EAAoBI,YAE7BC,EAAoC3W,oBAAUyW,GAAQ,SAAAjV,GAAK,MAAK,CACpEoV,MAAOpV,EAAMqV,mBACbrX,IAAKgC,EAAMsV,iBAAmB,EAC9B3L,QAAS3J,EAAMuV,aACf5V,KAAM,YAEF6V,EAAmBC,KAAK1T,IAC5B,EACAoT,EAAgB5M,OApBK,IAsBjBmN,EAAoBP,EAAgB5M,OAAS,EAO7CtI,GAJJuV,EAAmB,EACfL,EAAgBQ,MAAM,EA1BL,IA2BjBR,GAGHhN,KACC,SAACyN,EAAWzX,GAAZ,OACGuX,EAAiB,WAAOvX,EAAI,EAAX,MAAmB,IAAMyX,EAAUjM,WAExDkM,KAAK,KAIR,OAFAf,EAAoB7C,SAEb,CAAEhS,YAAWkV,oBAGDW,E,4MACnBxO,OAAmC,K,EACnCyO,cAA0B,K,EAC1BC,cAAmC,K,EAEnC7O,MAAQ,CACN8O,aAAa,EACbC,sBAAsB,EACtBC,uBAAwB,KAExBC,eAAgB,EAAKxX,MAAMgB,MAC3BK,UAAW,KACXkV,gBAAiB,GACjBkB,gBAAiBC,e,EAanBlX,MAAQ,WAAiC,IAAhCmX,EAA+B,wDAClC,EAAKjP,SACP,EAAKA,OAAOlI,QACRmX,GACE,EAAKP,eACP,EAAKA,cAAcQ,kBACjB,EACA,EAAK5X,MAAMgB,MAAM6W,WAAWlO,QAIlC,EAAKmO,uB,EAITC,uBAAyB,WACvB,EAAKpP,SAAS,CACZ0O,aAAa,K,EAIjBW,aAAe,SAAC9W,GAEdA,EAAM+W,kB,EAGRC,oBAAsB,WACpB,EAAKvP,SAAS,CACZ0O,aAAa,K,EAIjBc,cAAgB,SAACnX,GACf,EAAK2H,SACH,CACE6O,eAAgBxW,IAElB,kBAAM,EAAK8W,yB,EAIfM,YAAc,SAAClX,GACb,IAAMF,EAAQE,EAAMiI,cAAcnI,MAC9B,EAAKhB,MAAMU,UAAU,EAAKV,MAAMU,SAASM,GAC7C,EAAK2H,SAAS,CAAE6O,eAAgBxW,IAAS,WACvC,EAAK8W,mBAAmBO,SACxB,EAAKC,gBACL,EAAK3P,SAAS,CACZ8O,gBAAiBC,oB,EAKvBa,4BAA8B,SAC5BC,GAGA,OAAOC,YAAyBD,EAAeE,W,EAGjDC,wBAA0B,SAACH,GACzB,IAAII,EAAW,CAAEvB,aAAa,GAC1B,EAAKkB,4BAA4BC,GACnCI,EAAQ,2BACHA,GADG,IAENtB,sBAAsB,EACtBC,uBAAwBiB,IAG1B,EAAKK,iBAAiBL,EAAgB,IAExC,EAAK7P,SAASiQ,I,EAGhBC,iBAAmB,SACjBL,EACAM,GAEA,GAAK,EAAK1B,cAAV,CACA,IAAM2B,EAAiB,EAAK3B,cAAcxO,eAEpCoQ,EAAeC,YAAqBT,EAAgBM,GAGlD9X,EAAU,EAAKhB,MAAfgB,MACFkI,EACJlI,EAAMkY,OAAO,EAAGH,GAChBC,EACAhY,EAAMkY,OAAOH,GAGX,EAAK/Y,MAAMU,UAAU,EAAKV,MAAMU,SAASwI,GAC7C,EAAKP,SACH,CACE6O,eAAgBtO,IAElB,kBAAM,EAAK4O,wBAIbqB,YAAW,WACL,EAAKzQ,QAAQ,EAAKA,OAAOlI,QAE7B2Y,YAAW,WACL,EAAK/B,eACP,EAAKA,cAAcQ,kBACjBmB,EACAA,EAAiBC,EAAarP,UAGjC,KACF,K,EAGLyP,sBAAwB,SACtBC,GAIA,IAAIA,EAAyBC,QAA7B,CAEA,IAAMC,EAAgB,EAAKnC,cACvB,EAAKA,cAAcxO,eACnB,EACE4Q,EAAa,EAAKjR,MAAMiP,eAR3B,EAaCiC,YACF,CAAED,aAAYD,iBACd,CACEG,WAAYL,EAAyBK,WACrCC,yBACEN,EAAyBM,yBAC3BC,uBAAwBP,EAAyBO,uBACjDC,eAAgBR,EAAyBQ,eACzCC,OAAQT,EAAyBS,OACjCC,sBAAuBV,EAAyBU,sBAChDC,sBAAuBX,EAAyBW,sBAChDC,qBAAsBZ,EAAyBY,uBAbrCC,EAXX,EAWDV,WACeW,EAZd,EAYDZ,cAgBE,EAAK7Q,QACP,EAAKA,OAAO0R,cAAcF,GAExB,EAAKla,MAAMU,UAAU,EAAKV,MAAMU,SAASwZ,GAC7C,EAAKvR,SACH,CACE6O,eAAgB0C,IAElB,WACE,EAAKpC,qBACD,EAAKpP,QACP,EAAKA,OAAO2R,kBAAkBF,EAAkBA,Q,EAMxDrC,mBAAqBwC,KAAS,WAC5B,EAAKhC,kBACJ,K,EAEHA,cAAgB,WAAO,IAAD,EAShB,EAAKtY,MAPPwF,EAFkB,EAElBA,QACA+U,EAHkB,EAGlBA,uBACAC,EAJkB,EAIlBA,iBACAC,EALkB,EAKlBA,eACAC,EANkB,EAMlBA,MACAC,EAPkB,EAOlBA,+BACAC,EARkB,EAQlBA,0BAEF,IAAKpV,EAAS,OAAO,KAErB,IAAMgU,EAAa,EAAKjR,MAAMiP,eAKxBqD,EAAS,IAAIpI,EAAGqI,kBACpBrI,EAAGsI,WAAWC,MACdT,EACAC,GAGIvE,EAAiB4E,EACpBI,gBAAgBR,EAAgBjB,GAChCwB,MAzBiB,EA2BmBhF,EAAcC,GAA7C5U,EA3BY,EA2BZA,UAAWkV,EA3BC,EA2BDA,gBAIb2E,EAAqB,CAHJN,EACnBA,EAA0BpB,EAAYvD,GACtC,KACwC5U,GACzCoI,OAAO0R,SACPlE,KAAK,OAIR,GACEuC,EAAW7P,OAAS,GACyB,MAA7C6P,EAAW4B,OAAO5B,EAAW7P,OAAS,GAEtC,EAAKhB,UAAS,SAAAJ,GAAK,MAAK,CACtBlH,UAAW6Z,EACX3E,kBACAkB,gBAAiBC,sBAPrB,CAYA,IAAMqB,EAAiB,EAAK3B,cACxB,EAAKA,cAAcxO,eACnB,EACEyS,EAAyB5I,EAAG6I,2BAA2BC,6BAC3DtF,EACA8C,EAAiB,GAEbyC,EAAqBC,YACzB,CACEhJ,KACAjN,UACA+U,yBACAC,mBACAE,SAEFW,GAEIK,EAAwBf,EAC1BA,EAA+BnB,GAAYmC,OAAOH,GAClDA,EAEJX,EAAOxH,SAEP,EAAK1K,UAAS,SAAAJ,GAAK,MAAK,CACtBlH,UAAW6Z,EACX3E,kBACAkB,gBAAiBmE,YACfrT,EAAMkP,gBACNiE,S,kEA3PJ,GAAIpb,KAAKoI,OAAQ,CACf,IAAMmT,EAAOnM,IAASC,YAAYrP,KAAKoI,QACnCmT,aAAgBC,UAClBxb,KAAK6W,cAAgB0E,GAEvBvb,KAAK8W,cAAgB9W,KAAKoI,OAASpI,KAAKoI,OAAOK,eAAiB,Q,+BA2P1D,IAAD,SAUHzI,KAAKN,MARPgB,EAFK,EAELA,MACAyZ,EAHK,EAGLA,eACAsB,EAJK,EAILA,kBACAvW,EALK,EAKLA,QACAkV,EANK,EAMLA,MACAH,EAPK,EAOLA,uBACAC,EARK,EAQLA,iBACAwB,EATK,EASLA,0BAEIC,EAAcF,EAChBA,EAAkBG,iBAClB5b,KAAKN,MAAMmc,cACXtd,EACA,IACEud,EAAkBL,EACpBA,EAAkBM,0BAClBxd,EAEEyd,EAAe,CACnB9Y,MAAOlD,KAAK6W,cAAgB7W,KAAK6W,cAAcoF,YAAc,OAC7DlS,YAAa,EAIbmS,OAAQC,IAAUlY,QAAU,KAGxBmY,EAA8Bpc,KAAKN,MAAMmc,SAK3CF,EACEjY,EAAO+R,8CACP/R,EAAO8R,6BAIT9R,EAAO2R,wCAEX,OACE,gBAAC,WAAD,KACE,gBAAC,IAAD,CACE1V,OAAQK,KAAKN,MAAMmc,SAAW,OAAS,QACvCQ,gBAAiB,kBACf,uBAAKxe,MAAO6F,EAAOmR,oBACjB,uBAAKhX,MAAO6F,EAAOqR,iCACjB,gBAAC,IAAD,CACErU,MAAO,EAAKuH,MAAMiP,eAClBrZ,MAAK,2BAAO6F,EAAO8E,OAAU4T,GAC7BE,WAAY,EAAKrU,MAAMgO,kBAEzB,gBAAC,IAAD,CACEtW,OAAQ,EAAKD,MAAMmc,SAAW,OAAS,QACvCnb,MAAOA,EACPb,kBAAmB8b,EACnBrb,mBAAoBwb,EACpBta,SAA6B,WAAnB2Y,EAA8B,UAAO5b,EAC/C8D,WAAYqB,EAAO8E,MACnBpI,SAAU,EAAKyX,cACfvU,OAAQ,EAAKwU,YACbna,IAAK,SAAAgL,GAAK,OAAK,EAAKP,OAASO,GAC7BtF,QAAS,EAAKqU,aACd3W,UAAW,EAAKkH,MAAMlH,UACtB4B,QAAS,kBAAM,EAAK6U,sBACpB9U,UAAW,SAAA9B,GACT,IAAMuW,EAAkBoF,YACtB,EAAKtU,MAAMkP,gBACX,CACEvW,QACA4b,wBAAyB,EAAKhF,mBAC9BiF,uBAAwB,EAAK3D,wBAWjC,GARA,EAAKzQ,SAAS,CAAE8O,oBAQZuF,YAAoB9b,IAAU+b,YAAa/b,GAAQ,CACrD,IAAMF,EAAQE,EAAMiI,cAAcnI,MAC9B,EAAKhB,MAAMU,UAAU,EAAKV,MAAMU,SAASM,KAGjDkB,WAAS,EACTG,WAAS,KAGZ,EAAK+U,eAAiB,EAAK7O,MAAM8O,aAChC,gBAAC,IAAD,CAAmB6F,YAAa,EAAKhF,qBACnC,gBAAC,IAAD,CACE/Z,MAAOme,EACPrQ,KAAM,EAAK1D,MAAM8O,YACjB8F,SAAU,EAAK/F,cACfpS,UAAU,SACVoY,eACE,GAGF,gBAAC,IAAD,MACG,SAAAC,GAAU,OACT,gBAAC,IAAD,CACElf,MACiB,UAAfkf,EACIrZ,EAAOsR,sCACPtR,EAAOwR,kCAGb,gBAAC,IAAD,CACE8H,aAAa,GACbC,SAAU,SAACxc,EAAMyY,GACf,EAAKb,wBAAwBa,IAE/BiB,eAAgBA,EAChB+C,cAAY,EACZ9C,MAAOA,UAQpB,EAAKtD,gBACH,EAAK7O,MAAM8O,aACZ2E,GACE,gBAAC,IAAD,CACExW,QAASA,EACT2X,SAAU,EAAK/F,cACfqG,0BAA2BC,YACzB,EAAKnV,MAAMkP,iBAEbkG,eAAgBC,YACd,EAAKrV,MAAMkP,iBAEboG,wBACE,EAAKtV,MAAMkP,gBAAgBoG,wBAE7BN,SAAU,SAAAlE,GACR,EAAKD,sBAAsBC,GAE3BF,WACE,EAAK3Y,MACL,KAGJwb,0BAA2BA,MAKrC8B,aAAc,SAAA3f,GAAK,OACjB,gBAAC,WAAD,MACI,EAAK6B,MAAMmc,UACX,EAAKnc,MAAM+d,mBACX,EAAK/d,MAAM+d,kBAAkB,CAC3B5f,WAEF,EAAK6B,MAAMmc,UACX,gBAAC,IAAD,CACEjS,KAAM,gBAAC,IAAD,MACNvI,MACqB,WAAnB8Y,EACI,QACmB,WAAnBA,EACA,MACA,GAENjN,SAAO,EACPrP,MAAOA,EACP8E,QAAS,EAAK8U,6BAOvBzX,KAAKiI,MAAM+O,sBAAwBhX,KAAKiI,MAAMgP,wBAC7C,gBAAC,IAAD,CACE/R,QAASA,EACTkV,MAAOA,EACPH,uBAAwBA,EACxBC,iBAAkBA,EAClBwD,mBAAoB1d,KAAKiI,MAAMgP,uBAAuBmB,SACtDuF,OAAQ,SAAAnF,GACD,EAAKvQ,MAAMgP,yBAEhB,EAAKsB,iBACH,EAAKtQ,MAAMgP,uBACXuB,GAEF,EAAKnQ,SAAS,CACZ2O,sBAAsB,EACtBC,uBAAwB,SAG5B2G,eAAgB,WACd,EAAKvV,SAAS,CACZ2O,sBAAsB,EACtBC,uBAAwB,QAG5ByE,0BAA2BA,S,GAheMhe,e,0KCvIxBmgB,E,4MAInBlS,KAAO,WAAO,IACJmS,EADG,eACHA,aACR,GAAKA,EAAL,CAEA,IAAMvC,EAAOnM,IAASC,YAAY,EAAK0O,iBACvC,GAAIxC,aAAgBjM,YAAa,CAC/B,IAAM0O,EAAazC,EAAK/L,wBAExBsO,EAAanS,KACX4K,KAAK0H,MAAMD,EAAWE,KAAOF,EAAW9a,MAAQ,GAChDqT,KAAK0H,MAAMD,EAAW5a,IAAM4a,EAAWnU,Y,uDAKnC,IAAD,SAOH7J,KAAKN,MALP4M,EAFK,EAELA,QACAF,EAHK,EAGLA,kBACA+R,EAJK,EAILA,2BACAC,EALK,EAKLA,eACGhgB,EANE,6FASP,OACE,gBAAC,WAAD,KACGV,eAAmB4O,EAAnB,yBACC2B,cAAejO,KAAK2L,MAEhBwS,EAA6B,GAAK,CAAExb,QAAS3C,KAAK2L,OAHvD,IAIChO,IAAK,SAAA0gB,GAAc,OAAK,EAAKN,gBAAkBM,IAC3CD,EAAiBhgB,EAAa,KAEpC,gBAAC,IAAD,CACET,IAAK,SAAA2gB,GAAW,OAAK,EAAKR,aAAeQ,GACzClS,kBAAmBA,S,GAvCgB1O,c,iECW9B6gB,IAnBQ,SAAC7e,GAAD,OACrB,gBAAC,IAAD,MACG,SAAA8e,GAAQ,OACP,gBAAC,IAAD,CACEngB,QAAQ,QACRL,MAAM,SACNH,MAAK,aACH4gB,QAAS,GACTC,WAAW,eAAD,OAAiBF,EAASG,aAAaC,cAC9Clf,EAAM7B,OAEXyG,MAAO5E,EAAMmf,aAEZnf,EAAM9B,e,gSCuFTkhB,EAAwBpN,aAC5B,gBAEYxE,EAFZ,EACE6R,QACE5W,KAAQ+E,QAFZ,MAIO,CAKL8R,WAAY,CAAEjhB,MAAM,GAAD,OAAKmP,GAAL,OAAeA,EAAQ7D,OAAS,EAAI,KAAO,UAe5D4V,EAAYvhB,cAChB,WAcEC,GACI,IAbF+D,EAaC,EAbDA,GACAV,EAYC,EAZDA,SACAO,EAWC,EAXDA,YACAnB,EAUC,EAVDA,SACA8e,EASC,EATDA,gBACArhB,EAQC,EARDA,MACOshB,EAON,EAPDze,MACA0e,EAMC,EANDA,YACAC,EAKC,EALDA,KACAjT,EAIC,EAJDA,kBACAxB,EAGC,EAHDA,aAIFlN,sBAA0BC,GAAK,iBAAO,CACpCuC,QACAC,WAEF,IAAMD,EAAQ,WACRof,EAAUrf,SACZqf,EAAUrf,QAAQC,SAGhBC,EAAO,WACPmf,EAAUrf,SACZqf,EAAUrf,QAAQE,QAZnB,EAiBuBzC,WAAuByhB,GAjB9C,mBAiBIze,EAjBJ,KAiBW6e,EAjBX,OAqB+C7hB,WAChDyhB,GAtBC,mBAqBIK,EArBJ,KAqBuBC,EArBvB,KAyBGH,EAAY5hB,SAAyB,MAErCgG,EA3HQ,SAAChD,EAAgBM,GACjC,IAAM0e,IAAahf,GAASA,EAAM2I,OAAS,EAE3C,MAAO,CACLsI,KAAM,CACJ9H,OAAQ,GACRrL,QAAS,OACT2E,KAAM,EACNS,eAAgB,iBAElB+b,gBAAiB,CACf9hB,MAAO,CACL4gB,QAAUzd,EAAkB,IAAP,IACrB4e,UAAWF,EAAW,cAAgB,cACtCG,WAAY,kDAEdC,UAAW,CACTrB,QAASiB,EAAW,EAAI,EACxBG,WAAY,iDAGhBE,iBAAkB,CAChBliB,MAAO,CACL4gB,QAAUzd,EAAkB,IAAP,IACrB4e,UAAWF,EAAW,cAAgB,cACtCG,WAAY,iDACZ/V,aAAc,IAEhBgW,UAAW,CACTrB,QAASiB,EAAW,EAAI,EACxBG,WAAY,iDAGhBG,iBAAkB,CAChBniB,MAAO,CACL4gB,QAAUzd,EAAkB,IAAP,MAGzBif,eAAgB,CACdpiB,MAAO,CACL4gB,QAAUzd,EAAkB,IAAP,MAGzBwH,MAAO,CACLtF,MAAO,QAETgd,gBAAiB,CACf9c,KAAM,EACNH,SAAU,WACVtD,OAAQ,WACRuD,MAAO,SAyEMid,CAAUzf,EAAOM,GAC1Bof,EAAqBtB,IAErBuB,EAAc3iB,eAClB,SAAAkL,GACE2W,EAAS3W,GAAY,IACrBxI,GAAYA,EAASwI,GAAY,MAEnC,CAACxI,EAAUmf,IAGb7hB,aACE,WAGE6hB,EAASJ,KAEX,CAACA,IAGH,IAAMmB,EAA2BC,IAC3BC,EAA0B9iB,SAAqB,GACrDA,aACE,WAKI4iB,GACAlB,GACgC,IAAhCA,EAAYqB,WAAW3iB,MACvB0iB,EAAwBvgB,QAAU,GAElCC,MAEJ,CAACkf,EAAakB,IAGhB5iB,aAAgB,WACd8iB,EAAwBvgB,QAAUmf,EAC9BA,EAAYqB,WAAW3iB,KACvB,KAGN,IAAM4iB,EAAa,WACZhgB,GAA0B,KAAjBA,EAAMigB,QAClBN,EAAY,KAIVO,EAAc,SAACjM,GACnB0L,EAAY1L,EAAE9T,OAAOH,QAGjBmgB,EAAe,WACnBR,EAAY,KAGRS,GAAmB,SAAClgB,GACpBmgB,YAAengB,IACjBse,EAAgBxe,IAMdsgB,GAA0B,SAC9BpgB,EACAgI,EACAqY,GAQe,kBAAXA,GACF7B,GAAeA,EAAY8B,IAAItY,GAC/ByX,EAAY,KAEZA,EAAYzX,IAIVuY,GAAgC,SACpCvgB,EACAgI,EACAqY,GAGe,UAAXA,GAEF1B,EAAS,IAGTE,EAAqB,KAErBF,EAAS3W,IAIb,OACE,gBAAC,OAAD,MACG,gBAAGpI,EAAH,EAAGA,KAAH,OACC,gBAAC,IAAD,MACG,SAAAge,GAAQ,OACP,gBAAC,IAAD,CAAQtgB,UAAQ,GACd,gBAAC,IAAD,CAAMA,UAAQ,GACZ,gBAAC,IAAD,CACEL,MAAK,yBACHujB,gBAAiB5C,EAAS6C,UAAUD,iBACjC1d,EAAOiO,MACP9T,GAEL6Q,QAAM,EACN4S,UAAW,GAEX,uBAAKzjB,MAAO6F,EAAOwc,iBAChBb,EACC,gBAAC,IAAD,CACE3d,GAAIA,EACJmG,QAASwX,EAAK5I,MAAM,EAAG,IACvB8K,QAAS,SAAA1Z,GAAO,OAAIrH,EAAKiB,EAAE,wBAC3BoQ,QAASuO,EACToB,UAAQ,EACRzf,WAAS,EACTpB,aAAa,GACb8gB,WAAY/gB,EACZA,MAAO8e,EACPpf,SAAU4gB,GACVU,cAAeP,GACf3e,WAAYse,GACZxd,OAAQod,EACRiB,aAAc,SAAAC,GAAM,OAClB,gBAAC,IAAD,KAAaA,IAEfC,YAAa,SAAAC,GAAM,OACjB,gBAAC,IAAD,eACEniB,OAAO,QACHmiB,EAFN,CAGEve,SAAU+b,EACVtd,WAAU,2BACL8f,EAAO9f,YADF,IAERC,kBAAkB,EAClBe,aAAc,KACdzB,YAAaf,EAAKiB,EAAEF,GAAe,uBAM3C,gBAAC,IAAD,CACEG,GAAIA,EACJ/B,OAAO,OACP6B,SAAUD,GAAe,cACzB+B,OAAQod,EACRhgB,MAAOA,EACPN,SAAUwgB,EACVne,QAASqe,GACT/e,WAAS,EACTlE,MAAO6F,EAAO8E,MACdtG,eAAe,EACflB,SAAUA,EACVrD,IAAK2hB,KAIVlT,GACC,gBAAC,IAAD,CACEE,QACE,gBAAC,IAAD,CACEzO,MAAO6F,EAAOsc,iBAAiBniB,MAC/BmD,SAAUA,EACVlD,KAAK,SAEL,gBAAC,IAAD,OAGJsO,kBAAmBA,IAGtBxB,GACC,gBAAC,IAAD,CACE5J,SAAUA,EACV4J,aAAcA,EACd/M,MAAO6F,EAAOuc,eAAepiB,MAC7BC,KAAK,UAGT,gBAAC,IAAD,CACED,MAAO6F,EAAOqc,iBAAiBliB,MAC/BmD,SAAUA,EACVlD,KAAK,SAEL,gBAAC,IAAD,CAAQD,MAAO6F,EAAOqc,iBAAiBD,aAEzC,gBAAC,IAAD,CACEnd,QAASke,EACThjB,MAAO6F,EAAOic,gBAAgB9hB,MAC9BmD,SAAUA,EACVlD,KAAK,SAEL,gBAAC,IAAD,CAAOD,MAAO6F,EAAOic,gBAAgBG,eAI1CV,GACC,gBAAC,IAAD,CAAU5R,GAAI4R,EAAYqB,WAAW3iB,KAAO,GAC1C,gBAAC,IAAD,CACEuhB,KAAM0C,MAAMC,KAAK5C,EAAYqB,YAC7B9T,SAAU,SAAAsV,GAAG,OAAI7C,EAAY8C,OAAOD,iBAa3ChD,MAER,IAAMsB,EAA8B,WAKzC,QAD0C,UAApB4B,iB,6BCjZxB,gRAGO,IAAMC,EAAsB,SAACC,GAClC,OAAKA,EACC,GAAN,OAAUA,EAASC,EAAnB,YAAwBD,EAASE,EAAjC,YAAsCF,EAASG,GADzB,IAQXC,EAAW,SAACH,EAAWC,EAAWC,GAAvB,MACtB,KAAO,GAAK,KAAOF,GAAK,KAAOC,GAAK,GAAKC,GAAGjL,SAAS,IAAId,MAAM,IAKpDiM,EAAiB,SAACJ,EAAWC,EAAWC,GAAvB,OAC3BF,GAAK,KAAOC,GAAK,GAAKC,GAKZG,EAAuB,SAACC,GACnC,IAAMP,EAAWQ,EAA4BD,GAC7C,OAAKP,EACEK,EAAeL,EAASC,EAAGD,EAASE,EAAGF,EAASG,GADjC,GAOXM,EAAsB,SAACpiB,GAGlC,OAA0B,IAFPA,EAAMqiB,MAAM,KAEhB1Z,OACNsZ,EAAqBjiB,GAGvBsiB,SAAStiB,EAAM+D,QAAQ,IAAK,IAAK,KAMpCwe,EAAsB,SAACC,GAC3B,MAAO,CACLZ,EAAIY,GAAa,GAAM,IACvBX,EAAIW,GAAa,EAAK,IACtBV,EAAe,IAAZU,EACHtS,EAAG,MAeMuS,EAAuB,SAACC,GACnC,IAAMf,EAAWY,EAAoBG,GACrC,OAAOhB,EAAoBC,IAOhBgB,EAAsB,SAAS3iB,GAG1C,GAA0B,IAFPA,EAAMqiB,MAAM,KAEhB1Z,OACb,OAAO3I,EAGT,IAAM2hB,EAxBc,SAACe,GACrB,IAAMF,EAAYF,SAASI,EAAI3e,QAAQ,IAAK,IAAK,IACjD,OAAOwe,EAAoBC,GAsBVI,CAAc5iB,GAC/B,MAAM,GAAN,OAAU2hB,EAASC,EAAnB,YAAwBD,EAASE,EAAjC,YAAsCF,EAASG,IAOpCK,EAA8B,SACzCR,EACAkB,GAEA,IAAMC,EAASnB,EAAS5d,QAAQ,KAAM,IAAIse,MAAM,KAChD,GAAsB,IAAlBS,EAAOna,OACT,OAAO,KAGT,IAAMiZ,EAAIU,SAASQ,EAAO,GAAI,IACxBjB,EAAIS,SAASQ,EAAO,GAAI,IACxBhB,EAAIQ,SAASQ,EAAO,GAAI,IAO9B,OAAIlB,IAAMA,GAAKC,IAAMA,GAAKC,IAAMA,EAAU,KAEnC,CACLF,IACAC,IACAC,IACA5R,OAXkBrS,IAAVglB,GAAiC,OAAVA,EAAiB,EAAIA,K,gCC/GxD,6CAaM5b,EAA0B,SAC9BtC,EACAkC,EACAC,GAEA,GAAInC,EAAIoB,WAAW,UAAYpB,EAAIoB,WAAW,SAE5C,OAAOpB,EAGT,IAAMoC,GAAkC,IAAtBpC,EAAIqC,QAAQ,KAAc,IAAM,IAClD,OAAOrC,EAAMoC,EAAYF,EAA0B,IAAMC,GAY9Cic,EAAiB,SAAC/jB,GAAD,OAC5B,uCACMA,EADN,CAEEgkB,YAAY,YACZC,IAmBEjkB,EAAMikB,IACFhc,EAAwBjI,EAAMikB,IAAK,UAAW,YAC9CplB,O,+BC7DV,oCAuCeqlB,IAtBiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAY3Z,EAAf,EAAeA,KAAMtM,EAArB,EAAqBA,SAArB,OAC9B,gBAAC,IAAmBkR,SAApB,MACG,gBAAGgV,EAAH,EAAGA,OAAQC,EAAX,EAAWA,iBAAX,OACED,EAAOE,oBAAoBH,IAC1B,gBAAC,IAAD,CACE3Z,KAAMA,EACNtM,SAAUA,EACVuM,OAAQ,WACSY,IAAOkZ,kBACpB,qHAKFF,EAAiBF,GAAY,W,6BC/BzC,sCAkFA,IAAMK,EAAexmB,IAAMymB,MAtD3B,SAAkBzkB,GAChB,IAAM4K,EAAgB5M,IAAM0mB,WAAW7Z,KAErCoZ,EAMEjkB,EANFikB,IACA1f,EAKEvE,EALFuE,QACAjD,EAIEtB,EAJFsB,SACAqjB,EAGE3kB,EAHF2kB,eACAC,EAEE5kB,EAFF4kB,aACAC,EACE7kB,EADF6kB,iBAGIC,OACgBjmB,IAApBmB,EAAM8kB,UAA0B9kB,EAAM8kB,UAAY9kB,EAAM+kB,SACpDC,OACiBnmB,IAArBmB,EAAMglB,WAA2BhlB,EAAMglB,WAAahlB,EAAM+kB,SAKtDnP,EAAekP,EAAY,GAAK,GAAK,EAErC3mB,EAAQ,CACZ2Q,SAAU+V,OAAmBhmB,EAAYimB,EACzCvP,UAAWsP,OAAmBhmB,EAAYmmB,EAC1CxhB,MAAOqhB,EAAmBC,OAAYjmB,EACtCsL,OAAQ0a,EAAmBG,OAAanmB,EACxComB,cAAe,SACfC,UAAWN,EACXnb,OAASkb,EAELrjB,EACA,kBACAsJ,EAAcua,4BAHdtmB,GAMN,OACE,yBACEV,MAAO,CACLqF,MAAOshB,EACP3a,OAAQ6a,EACRtP,WAAW,GAAD,OAAKsP,EAAL,MACVI,UAAW,SACXxP,iBAGD+O,EACC,yBAAK/f,MAAOL,EAAS8gB,IAAK9gB,EAAS0f,IAAKA,EAAK9lB,MAAOA,IAEpD,kBAAC,IAAD,CAAgByG,MAAOL,EAAS8gB,IAAK9gB,EAAS0f,IAAKA,EAAK9lB,MAAOA,QAOxDqmB,O,mMCpBTxgB,EAAS,CACb4K,UAAW,CACTrL,SAAU,WACVC,MAAO,QAET8hB,SAAU,CAERnhB,QAAS,EACTlE,OAAQ,GAEVwL,aAAc,CACZxL,OAAQ,UAIN8R,EAAYC,YAAW,CAC3BkQ,OAAQ,CACNqD,OAAQ,WAEVC,QAAS,CACPrhB,QAAS,EACTlE,OAAQ,GAEV6I,MAAO,CACLtF,MAAO,OACPiiB,SAAU,GAEZC,UAAW,CACTC,SAAU,QAEZC,OAAQ,CACNpJ,OAAQC,IAAUlY,QAAU,OAI1BshB,EAAiB,SAAC/kB,GAAD,OAAoB,SACzCohB,EACA3Z,GAEA,GAAI2Z,EAAOnhB,MAAwB,cAAhBmhB,EAAOnhB,KACxB,OACE,gBAAC,IAAD,CACE+kB,SAAO,EACPC,gBAAc,EACdnnB,UAAW,MACXT,MAAO6F,EAAOshB,WAKpB,IAAMtkB,EAAQkhB,EAAO8D,kBACjBllB,EAAKiB,EAAEmgB,EAAO8D,mBACd9D,EAAOlhB,MACX,OACE,gBAAC,IAAD,CAAUqM,OAAO,EAAMzO,UAAW,MAAOT,MAAO6F,EAAOshB,UACpDpD,EAAO+D,YAAc,gBAAC,IAAD,KAAe/D,EAAO+D,cAC5C,gBAAC,IAAD,CACE9nB,MAAO6F,EAAOyH,aACd+B,QACE,uBAAK5I,MAAO5D,EAAO7C,MAAO+nB,KACvBllB,QAQPmlB,EAAmB,SAACjE,GAAD,MACP,cAAhBA,EAAOnhB,MAiGM/C,kBACb,SAAoCgC,EAAc/B,GAChD,IAAM6K,EAAQ9K,SAAc,MADyB,EAEjBooB,mBAAU,MAFO,mBAE9CrE,EAF8C,KAElCsE,EAFkC,OAGjBD,oBAAS,GAHQ,mBAG9CE,EAH8C,KAGlCC,EAHkC,KAI/CpU,EAAUJ,IAEhB/T,sBAA0BC,GAAK,iBAAO,CACpCuC,MAAO,WAAiC,IAC9BD,EAAYuI,EAAZvI,QACJA,IACFA,EAAQC,QACRD,EAAQqX,kBAAkB,EAAG5X,EAAMgB,MAAM6W,WAAWlO,UAGxD6c,kBAAmB,SAACtd,GACC,OAAf6Y,GAAqBsE,EAAcnd,QAI3C,IAAMud,EAAmC,OAAf1E,EAAsBA,EAAa/hB,EAAMgB,MAE7DL,EAAaX,EAAMY,mBACvB,gBAAC,IAAD,CAAcC,OAAQb,EAAMY,qBAC1B,KAEE8lB,EAAoB,SACxBxlB,EACAF,EACAugB,GAEA8E,EAAcrlB,GACTslB,GAAYC,GAAc,IAGjC,OACE,gBAAC,OAAD,MACG,gBAAGzlB,EAAH,EAAGA,KAAH,OACC,gBAAC,IAAD,CACEghB,UAAQ,EACR3P,QAASA,EACTzR,SAAU,SACRQ,EACAghB,GAEe,OAAXA,GAAoBpZ,EAAMvI,WA3GvB,SACnBuI,EACAoZ,EACAliB,GAEoB,cAAhBkiB,EAAOnhB,OACFmhB,EAAOjf,QAASif,EAAOjf,WAM9B6F,EAAM9H,MAAQkhB,EAAOlhB,MAKjBhB,EAAMud,SACRvd,EAAMud,SAAS2E,EAAOlhB,OAEtBhB,EAAMU,SAASwhB,EAAOlhB,OAIpBhB,EAAM2mB,QAAS3mB,EAAM2mB,UAChB3mB,EAAMke,gBAAgBle,EAAMke,mBAoF3B0I,CAAa9d,EAAMvI,QAAS2hB,EAAQliB,GACpCqmB,EAAc,MACdE,GAAc,KAEhBta,KAAMqa,EACNnoB,MAAK,2BACA6B,EAAM7B,OACN6F,EAAO4K,WAEZmT,WAAY0E,EACZzlB,MAAOylB,EACPzE,cAAe0E,EACfve,QAASnI,EAAM6mB,WACf5E,aAAc4D,EAAe/kB,GAC7BgmB,kBAAmBX,EACnBY,eAAgB,SAAC7E,GAAD,OAjEL,SAACA,EAAgBlhB,GAAjB,OACrBkhB,EAAOlhB,MAAQkhB,EAAOlhB,MAAQA,EAiElB+lB,CAAe7E,EAAQuE,IAEzBO,cAAe,SAAC7e,EAAqBI,GAAtB,OAhKJ,SACrBJ,EACAI,EACAvH,GAEA,IAAMimB,EAAsBjmB,EAAMkmB,cAC5BC,EAAahf,EAAQsB,QAAO,SAAAyY,GAChC,MAAoB,cAAhBA,EAAOnhB,QACNmhB,EAAOzZ,OACuD,IAA5DyZ,EAAOzZ,KAAKye,cAAclf,QAAQif,OAG3C,IACGE,EAAW1d,QACV,SAAAyY,GAAM,MACY,cAAhBA,EAAOnhB,OACNmhB,EAAOlhB,OAASkhB,EAAO8D,sBAC1Brc,OAEF,MAAO,GAGT,UACwC9K,IAAtCsoB,EAAWA,EAAWxd,OAAS,SACY9K,IAA3CsoB,EAAWA,EAAWxd,OAAS,GAAG5I,MAElComB,EAAWC,MACb,UAAyBvoB,IAAlBsoB,EAAW,SAA2CtoB,IAAvBsoB,EAAW,GAAGpmB,MAClDomB,EAAWE,QAEb,OAAOF,EAmIKG,CAAenf,EAASI,EAAOke,IAEjCzkB,GAAIhC,EAAMgC,GACVmgB,YAAa,SAAAC,GAAW,IAAD,EAtGJ,SAACA,EAAgBpiB,GAA0B,IAChEsC,EAAsD8f,EAAtD9f,WAAYO,EAA0Cuf,EAA1Cvf,WAAgC0kB,GAAUnF,EAA9B5gB,gBADuC,YACT4gB,EADS,gDAEvE,OAAO,2BACFmF,GADL,IAEEjlB,WAAW,2BACNA,GADK,IAERqL,UAAW,KACXrK,aAAc,OAEhBT,WAAW,2BACNA,GADK,IAER8K,UAAW,KACXrM,SAAUtB,EAAMsB,SAChB0B,UAAW,SAAC9B,GACN8b,YAAoB9b,GAClBlB,EAAMke,gBAAgBle,EAAMke,iBACvBjB,YAAa/b,KAItBlB,EAAMU,SAASQ,EAAMiI,cAAcnI,OAE/BhB,EAAM2mB,QAAS3mB,EAAM2mB,UAChB3mB,EAAMke,gBAAgBle,EAAMke,uBAoF7BsJ,CAAuBpF,EAAQpiB,GAHjCsC,EAFmB,EAEnBA,WACAO,EAHmB,EAGnBA,WACG4kB,EAJgB,2CAMrB,OACE,gBAAC,IAAD,eACEnlB,WAAU,2BACLA,GADK,IAERT,YAC4B,kBAAnB7B,EAAM8B,SACT9B,EAAM8B,SACNhB,EAAKiB,EAAE/B,EAAM8B,YAErBe,WAAU,2BACLA,GADK,IAERc,QAAS,SACPzC,GAEAqlB,GAAc,GACVzd,EAAMvI,UACRuI,EAAMvI,QAAQqI,eACZE,EAAMvI,QAAQS,MAAM2I,SAK1B/F,OAAQ,SACN1C,GAEAmlB,EAAc,MACdE,GAAc,GAKdvmB,EAAMU,SAASQ,EAAMiI,cAAcnI,OAE/BhB,EAAM4D,QAAQ5D,EAAM4D,OAAO1C,IAEjCwmB,YAAa,SACXxmB,GAGI4H,EAAMvI,UAAYuI,EAAMvI,QAAQS,MAAM2I,QACxC4c,GAAeD,OAGjBmB,EACA1nB,YAA2BC,GA3CjC,CA4CE7B,MAAO6B,EAAM2nB,eACbhmB,MAAO3B,EAAMG,kBACb0D,SAAUiF,EACVxH,SAAUtB,EAAMsB,SAChBF,QAASpB,EAAMqB,UACfV,WAAYA,GAAcX,EAAMqB,UAChCgB,UAAWrC,EAAMqC,uB,qFClUpBulB,IApBU,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,QAAS3pB,EAA4B,EAA5BA,SAAUsM,EAAkB,EAAlBA,KACvCsd,EAAQ9pB,aAAiB6M,KAC/B,OACE,gBAAC,IAAD,CAAQC,QAAM,EAAC7G,WAAW,UACxB,gBAAC,IAAD,CAAc9F,MAAOqM,EAAO,CAAEnM,MAAOypB,EAAM/c,QAAQP,SAAU3L,GAC1DX,GAEH,gBAAC,IAAD,KACG2pB,GACC,gBAAC,IAAD,CACEra,SAAO,EACP7L,MAAO,gBAAC,QAAD,cACPsB,QAAS4kB,Q,6BCzBrB,wUA6CaE,EAAsB,SACjCC,EACAC,GAEA,OAAKD,GAAUA,EAAMC,GAIL,UAAZA,EAEKD,EAAME,OACTC,IAAsBC,mBAAmBJ,EAAMhmB,IAD5C,yCAE+BgmB,EAAMC,GAFrC,eAKH,mCAAN,OAA0CD,EAAMC,IAVvC,MAaEI,EAA0B,SACrC7iB,EACA8iB,GAEA,IAAMC,EAAkB/iB,EAAQa,sBAC1BE,EAAef,EAClBgjB,4BACAxN,IAAI,QAFc,aAGrB,IAAKuN,EAAgB/hB,YAAYD,GAC/B,MAAO,GAET,IAAMlB,EAAOkjB,EAAgB5hB,YAAYJ,GAAcK,UACjD6hB,EAAWC,mBAASrjB,GAC1B,IAAKojB,EACH,MAAO,GAKT,IAAME,EAAG,8CAA0CL,EAA1C,YAAqDG,GAG9D,OADmBG,UAAUD,IAUlBE,EAA4B,WACvC,IAAMhX,EAAS,gBAAkBiX,cAG3BC,EAAMlX,sBAEZ,OAAOmX,YAAa,CAAEC,WAAY,QAASF,MAAKG,YAH5B,oBAG2CC,MAC7D,YACE,MAAO,CACLC,UAFe,EAAhBA,UAGCF,YAPc,kBAQdH,WAMKM,EAAgB,SAC3B9X,EACA+X,EACAP,EACAQ,EACArB,GAEA,OAAO3W,IACJ4X,MAAK,SAAAK,GAAmB,OACvBC,IAAMC,KAAN,UAAcC,IAAiBC,QAA/B,UAAgD,KAAM,CACpDxH,OAAQ,CACNkH,SACAP,MACAhoB,KAAM,iBACNwoB,QAASA,EAAQtS,KAAK,KACtBiR,UAEF2B,QAAS,CACPC,cAAeN,QAIpBL,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBC,EAAW,SACtB1Y,EACA+X,EACAP,EACAb,GAEA,OAAO3W,IACJ4X,MAAK,SAAAK,GAAmB,OACvBC,IAAMC,KAAN,UAAcC,IAAiBC,QAA/B,UAAgD,KAAM,CACpDxH,OAAQ,CACNkH,SACAP,MACAhoB,KAAM,YACNwoB,QAAS,KACTrB,UAEF2B,QAAS,CACPC,cAAeN,QAIpBL,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBE,EAAsB,SACjC3Y,EACA+X,EACAP,EACAQ,EACAY,EACAjC,GAEA,OAAO3W,IACJ4X,MAAK,SAAAK,GAAmB,OACvBC,IAAMC,KAAN,UACKC,IAAiBC,QADtB,UAEE3W,KAAKmX,UAAU,CACbC,QAAS,CACPF,cAGJ,CACE/H,OAAQ,CACNkH,SACAP,MACAhoB,KAAM,gBACNwoB,QAASA,EAAQtS,KAAK,KACtBiR,UAEF2B,QAAS,CACPC,cAAeN,QAKtBL,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBM,EAAW,SACtB/Y,EACA+X,EACAhB,GAEA,OAAO/W,IACJ4X,MAAK,SAAAK,GAAmB,OACvBC,IAAMzO,IAAN,UAAa2O,IAAiBC,QAA9B,kBAA+CtB,GAAW,CACxDlG,OAAQ,CACNkH,UAEFO,QAAS,CACPC,cAAeN,QAIpBL,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBO,EAAY,SACvBhZ,EACA+X,EACApB,GAEA,OAAO3W,IACJ4X,MAAK,SAAAK,GAAmB,OACvBC,IAAMzO,IAAN,UAAa2O,IAAiBC,QAA9B,UAA+C,CAC7CxH,OAAQ,CACNkH,SACApB,UAEF2B,QAAS,CACPC,cAAeN,QAIpBL,MAAK,SAAAY,GAAQ,OAAIA,EAASC,U,6BCrOhB,SAASQ,EACtBjQ,EACAC,EACAiQ,GAEA,OAAIjQ,GAAoBA,EAAiBkQ,eAAeD,GAC/CjQ,EAAiBmQ,UAAUF,GAC3BlQ,EAAuBmQ,eAAeD,GACtClQ,EAAuBoQ,UAAUF,GAEnC,KAVT,mC,8BCCA,0LAAMhY,EAAkBC,EAAOD,GAUlBmY,EAA8B,SAAC,GAY3B,IAXfC,EAWc,EAXdA,oBACAC,EAUc,EAVdA,YACA9M,EASc,EATdA,mBACAxE,EAQc,EARdA,WACAuR,EAOc,EAPdA,eAQA,QAAuBlsB,IAAnBksB,GAAkD,MAAlBA,EAElC,OAAO,KAGT,IAAIN,EAAa,KACjB,GAAII,GAAuBC,EAAa,CACtC,IAAME,EAAuBvY,EAAGwY,uBAAuBC,2BACrDL,EAAoBM,gBACpBJ,GAGAC,GAAwB,GACxBA,EAAuBF,EAAYM,uBAEnCX,EAAaK,EAAYO,aAAaL,SAEnC,GAAIhN,GAAsBxE,EAAY,CAC3C,IAAMwR,EAAuBvY,EAAGwY,uBAAuBC,2BACrDlN,EAAmBmN,gBACnBJ,GAGAC,GAAwB,GACxBA,EAAuBxR,EAAW4R,uBAElCX,EAAajR,EAAW6R,aAAaL,IAIzC,OAAOP,GAGIa,EAAmC,SAC9CC,EACAR,GAEA,IAAMC,EAAuBvY,EAAGwY,uBAAuBC,2BACrDK,EACAR,GAEF,OAAIC,EAAuB,GAAKA,GAAwBO,EAAWntB,OAC1D,GAGFmtB,EAAWzrB,GAAGkrB,GAAsBQ,gBAOhCC,EAA4B,SAAC,GAQzB,IAPfX,EAOc,EAPdA,YACAtR,EAMc,EANdA,WACAuR,EAKc,EALdA,eAMA,QAAuBlsB,IAAnBksB,GAAkD,MAAlBA,EAElC,OAAO,KAGT,GAAID,GACF,GACEC,GAAkB,GAClBA,EAAiBD,EAAYM,qBAE7B,OAAON,EAAYO,aAAaN,EAAiB,QAE9C,GAAIvR,GAEPuR,GAAkB,GAClBA,EAAiBvR,EAAW4R,qBAE5B,OAAO5R,EAAW6R,aAAaN,EAAiB,GAIpD,OAAO,MASIW,EAAiC,SAC5CC,GAEA,IAAKA,EAAgB,OAAO,KAE5B,IAAMC,EAAwBD,EAAe1K,OAC7C,OACE2K,EAAsBjiB,QAAU,GACH,MAA7BiiB,EAAsB,IACsC,MAA5DA,EAAsBA,EAAsBjiB,OAAS,GAE9CiiB,EAAsB1S,OAAO,EAAG0S,EAAsBjiB,OAAS,GAGjE,MAGIkiB,EAAsB,SACjC9P,GAEA,IAAKA,EACH,MAAO,GAGT,IACE,OAAO9I,KAAKC,MAAM6I,EAAkByP,gBAAgBjiB,KAAI,SAAAuiB,GAAM,MAAK,CACjEthB,KAAM,OACNkP,WAAW,IAAD,OAAMoS,EAAN,SAEZ,MAAOC,GACPtkB,QAAQrG,MACN,0KACA2qB,GAIJ,MAAO,M,4JCrJH5tB,EAAQ,CACZW,QAAS,OACTmF,WAAY,SACZiK,YAAa,EACb0H,aAAc,GAGVoW,E,uKACM,IAAD,OACC9nB,EAAmB5D,KAAKN,MAAxBkE,eAER,OACE,kBAAC,IAAD,MACG,SAAA4a,GAAQ,OACP,yBACE3gB,MAAK,2BACAA,GADA,IAEHgM,OAAQ,GACRuX,gBAAiB5C,EAASmN,QAAQvK,gBAClCxd,oBAGD,EAAKlE,MAAM9B,iB,GAfEguB,aAuBpBC,EAA6B,CACjC/hB,YAAa,GAETgiB,EAAmB,CACvB/hB,WAAY,EACZD,YAAa,GAGFiiB,EAAkB,SAAC,GAAD,IAAGnuB,EAAH,EAAGA,SAAUouB,EAAb,EAAaA,WAAb,OAC7B,kBAAC,IAAD,CACE/tB,UAAQ,EACRJ,MAAOmuB,EAAaH,EAA6BC,GAEhDluB,IAIU8tB,O,+BClDf,6EAIIO,GAAuB,EACL,qBAAXC,QACTA,OAAOC,iBACL,cACA,SAASC,IACPjlB,QAAQC,KAAK,4DACb6kB,GAAuB,EACvBC,OAAOG,oBAAoB,aAAcD,GAAc,MAEzD,GAWG,IAAME,EAAqB,SAAC,GAAD,OAChC1uB,EADgC,EAAGA,UAC1BukB,MAKEA,EAAgB,WAI3B,MAAsB,qBAAX+J,OAA+B,SAEnCD,EAAuB,QAAU,W,+BCpC1C,oBAOMpuB,EAAQ,CACZ+P,YAAa,GAIA,oBAAGhQ,EAAH,EAAGA,SAAH,OACbA,EACE,gBAAC,IAAD,CAAYS,QAAS,WAAYR,MAAOA,GACrCD,GAED,O,8hBCiEO2uB,EAAoB,CAC/B,SACA,YACA,UACA,aACA,MACA,SACA,WACA,SACA,aACA,WACA,SACA,WACA,aACA,QACA,cACA,eAGWC,EAAkB,SAACC,EAAkBjsB,GAChD,OAAQisB,GACN,IAAK,SACH,OAAOjsB,EAAKiB,EAAE,eAChB,IAAK,YACH,OAAOjB,EAAKiB,EAAE,kBAChB,IAAK,UACH,OAAOjB,EAAKiB,EAAE,gBAChB,IAAK,aACH,OAAOjB,EAAKiB,EAAE,mBAChB,IAAK,MACH,OAAOjB,EAAKiB,EAAE,YAChB,IAAK,SACH,OAAOjB,EAAKiB,EAAE,eAChB,IAAK,WACH,OAAOjB,EAAKiB,EAAE,iBAChB,IAAK,SACH,OAAOjB,EAAKiB,EAAE,eAChB,IAAK,SACH,OAAOjB,EAAKiB,EAAE,eAChB,IAAK,aACH,OAAOjB,EAAKiB,EAAE,mBAChB,IAAK,QACH,OAAOjB,EAAKiB,EAAE,cAChB,IAAK,aACH,OAAOjB,EAAKiB,EAAE,mBAChB,IAAK,WACH,OAAOjB,EAAKiB,EAAE,iBAChB,IAAK,WACH,OAAOjB,EAAKiB,EAAE,iBAChB,IAAK,cACH,OAAOjB,EAAKiB,EAAE,oBAChB,IAAK,cACH,OAAOjB,EAAKiB,EAAE,oBAChB,QACE,OAAOgrB,IAIAC,EAAa,SAACC,EAAaC,GACtC,OAAKD,EACEC,EACH/E,IAAsBgF,mBAAmBD,EAAKE,SAAUF,EAAKG,UAC7DlF,IAAsB6E,WAAWC,EAAKjrB,IAHxB,MAMPsrB,EAAqB,SAChCC,GADgC,OAGhCA,EAAUhkB,KAAI,SAAAikB,GAAO,MAAK,CACxBlE,OAAQkE,EACRC,MAAO,aAGEC,EAAwB,WACnC,OAAOjE,IACJzO,IADI,UACG2S,IAAgB/D,QADnB,oBAEJT,MAAK,SAAAY,GAAQ,OAAIA,EAASC,QAC1Bb,MAAK,YAAuC,IAApCyE,EAAmC,EAAnCA,iBAAkBC,EAAiB,EAAjBA,WACzB,IAAKD,IAAqBC,EACxB,MAAM,IAAInc,MAAM,mDAElB,OAAOF,QAAQsc,IAAI,CACjBrE,IAAMzO,IAAI4S,GAAkBzE,MAAK,SAAAY,GAAQ,OAAIA,EAASC,QACtDP,IAAMzO,IAAI6S,GAAY1E,MAAK,SAAAY,GAAQ,OAAIA,EAASC,UAC/Cb,MAAK,yCAAgC,CACtC4E,eADM,KAENC,QAFM,aAODC,EAAe,SAC1B1c,EACA+X,EAF0B,GAYP,IARjBpB,EAQgB,EARhBA,OACAgG,EAOgB,EAPhBA,SACAC,EAMgB,EANhBA,WAOF,OAAO5c,IACJ4X,MAAK,SAAAK,GAAmB,OACvBC,IAAMC,KAAN,UACKiE,IAAgB/D,QADrB,iBACqC1B,GACnC,CACEgG,WACAC,cAEF,CACE/L,OAAQ,CACNkH,UAEFO,QAAS,CACPC,cAAeN,QAKtBL,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBoE,EAAa,SACxB7c,EACA+X,EACApB,EAHwB,GA6BL,IAxBjBgG,EAwBgB,EAxBhBA,SACAG,EAuBgB,EAvBhBA,WACAF,EAsBgB,EAtBhBA,WACAG,EAqBgB,EArBhBA,iBACArS,EAoBgB,EApBhBA,YACAsS,EAmBgB,EAnBhBA,iBACAC,EAkBgB,EAlBhBA,gBACAC,EAiBgB,EAjBhBA,eACAC,EAgBgB,EAhBhBA,YACAC,EAegB,EAfhBA,aACAC,EAcgB,EAdhBA,aAeF,OAAOrd,IACJ4X,MAAK,SAAAK,GAAmB,OACvBC,IAAMoF,MAAN,UACKlB,IAAgB/D,QADrB,iBACqC1B,GACnC,CACEgG,WACAG,aACAF,aACAG,mBACArS,cACAsS,mBACAC,kBACAC,iBACAC,cACAC,eACAC,gBAEF,CACExM,OAAQ,CACNkH,UAEFO,QAAS,CACPC,cAAeN,QAKtBL,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlB8E,EAAkB,SAC7Bvd,EACA+X,EACApB,EACA6G,GAKA,OAAOxd,IACJ4X,MAAK,SAAAK,GAAmB,OACvBC,IAAMC,KAAN,UACKiE,IAAgB/D,QADrB,yBAEE,CACE1B,SACA8G,QAASD,GAEX,CACE3M,OAAQ,CACNkH,UAEFO,QAAS,CACPC,cAAeN,QAKtBL,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBiF,EAAc,SACzB1d,EACA+X,EACApB,EACAgH,EACA7B,GAEA,OAAO9b,IACJ4X,MAAK,SAAAK,GAAmB,OACvBC,IAAMC,KAAN,UACKiE,IAAgB/D,QADrB,yBAEE,CACE1B,SACAgH,WACA7B,YAEF,CACEjL,OAAQ,CACNkH,UAEFO,QAAS,CACPC,cAAeN,QAKtBL,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBmF,EAAU,SACrB5d,EACA+X,EACApB,GAEA,OAAO3W,IACJ4X,MAAK,SAAAK,GAAmB,OACvBC,IAAMzO,IAAN,UAAa2S,IAAgB/D,QAA7B,iBAA6C1B,GAAU,CACrD9F,OAAQ,CACNkH,UAEFO,QAAS,CACPC,cAAeN,QAIpBL,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBoF,EAAa,SACxB7d,EACA+X,EACApB,GAEA,OAAO3W,IACJ4X,MAAK,SAAAK,GAAmB,OACvBC,IAAMpW,OAAN,UAAgBsa,IAAgB/D,QAAhC,iBAAgD1B,GAAU,CACxD9F,OAAQ,CACNkH,UAEFO,QAAS,CACPC,cAAeN,QAIpBL,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBqF,EAAW,SACtB9d,EACA+X,GAEA,OAAO/X,IACJ4X,MAAK,SAAAK,GAAmB,OACvBC,IAAMzO,IAAN,UAAa2S,IAAgB/D,QAA7B,SAA6C,CAC3CxH,OAAQ,CACNkH,UAEFO,QAAS,CACPC,cAAeN,QAIpBL,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBsF,EAAgB,SAACpH,GAC5B,OAAOuB,IACJzO,IADI,UACG2S,IAAgB/D,QADnB,wBAC0C1B,IAC9CiB,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBuF,EAAe,SAC1Bhe,EACA+X,EACApB,GAEA,OAAO3W,IACJ4X,MAAK,SAAAK,GAAmB,OACvBC,IAAMzO,IAAN,UAAa2S,IAAgB/D,QAA7B,cAAkD,CAChDxH,OAAQ,CACNkH,SACApB,UAEF2B,QAAS,CACPC,cAAeN,QAIpBL,MAAK,SAAAY,GAAQ,OAAIA,EAASC,U,+BCrZ/B,sWAGMvX,EAAkBC,EAAOD,GAyBlB+c,EAAyB,SAACC,GAAD,OAAyC,SAC7ElI,GAEA,OACEkI,GACAlI,GACAkI,EAAiB/c,SAAW6U,EAAM7U,QAClC+c,EAAiBC,QAAUnI,EAAMmI,QAIxBC,EAA0B,SACrCC,GADqC,OAElC,SAACrI,GACJ,OACEqI,GACArI,GACAqI,EAAkBld,SAAW6U,EAAM7U,QACnCkd,EAAkB5c,SAAWuU,EAAMvU,SAI1B6c,EAAmB,SAC9BrqB,EACAgV,GAEI,IADJzZ,EACG,4DADalC,EAEVixB,EAAe,SAAC9c,GACpB,OACGjS,GACD0R,EAAGsd,gBAAgBvqB,EAASgV,EAAkBxH,EAAOgd,WAAW,KAC9DjvB,GAIAkvB,EAA8C/wB,iBAClD,EACAsb,EAAiB0V,mBACjB,SAAA3wB,GAAC,OAAIib,EAAiB2V,YAAY5wB,MAEjCkK,OAAOqmB,GACPvmB,KAAI,SAACyJ,GAAD,MAA0C,CAAEA,SAAQN,QAAQ,MAE7D0d,EACJ5qB,IAAYgV,EACR,GACAtb,iBAAO,EAAGsG,EAAQ0qB,mBAAmB,SAAA3wB,GAAC,OAAIiG,EAAQ2qB,YAAY5wB,MAC3DkK,OAAOqmB,GACPvmB,KACC,SAACyJ,GAAD,MAA0C,CACxCA,SACAN,QAAQ,MAId2d,EAAwCJ,EAAqBtU,OACjEyU,GAGF,MAAO,CACLH,uBACAG,qBACAC,mBAISC,EAAuB,SAClC9qB,GAEA,IACM+qB,EADW/qB,EAAQgrB,qBACOC,2BAEhC,OAAOC,IACLxxB,iBAAO,EAAGqxB,EAAenyB,QAAQ,SAAAmB,GAC/B,IAAMoxB,EAAYJ,EAAezwB,GAAGP,GAEpC,OAAOoxB,EACJC,2BACAC,YACAtnB,KAAI,SAAAunB,GAAU,OAAIH,EAAUI,kBAAkBD,MAC9CvnB,KAAI,SAAAynB,GAAc,MAAK,CACtBL,YACAK,iBACApvB,KAAMovB,EAAehB,UACrBiB,SAAUD,EAAeE,cACzBjV,YAAa+U,EAAe9U,iBAC5BiV,aAAcH,EAAeI,kBAC7BC,iBAAkBL,EAAeM,+BAY9BC,EAAqB,SAChC3B,EACA4B,GAEA,IAAKA,EAAa7nB,OAAQ,OAAO,EAEjC,IAAM8nB,EAAa7B,EAAkB5c,OAAO0e,UAC5C,OAAOC,YAAiBF,EAAYD,IAGzBI,EAAoB,SAC/BC,EAD+B,GAGJ,IADzBC,EACwB,EADxBA,WAAYN,EACY,EADZA,aAAcO,EACF,EADEA,iBAE5B,OAAKD,GAAeN,EAAa7nB,OAE1BkoB,EACJpoB,QAAO,SAAAmmB,GAAiB,OACvB2B,EAAmB3B,EAAmB4B,MAEvC/nB,QAAO,SAACmmB,GACP,IAAMnF,EAAamF,EAAkB5c,OAAOgd,UAE5C,IAAI+B,GAAoBD,IAAerH,EAEvC,OAAuE,IAAhEA,EAAWvD,cAAclf,QAAQ8pB,EAAW5K,kBAXP2K,GAoBrCG,EAAmB,SAC9BH,EAD8B,GAGJ,IADxBC,EACuB,EADvBA,WAAYC,EACW,EADXA,iBAEd,OAAKD,EAEED,EAAKpoB,QAAO,SAACgmB,GAClB,IAAMwC,EAAYxC,EAAiBC,MAAMM,UAEzC,IAAI+B,GAAoBE,IAAcH,EAEtC,OAAsE,IAA/DG,EAAU/K,cAAclf,QAAQ8pB,EAAW5K,kBAP5B2K,GAWbK,EAAkB,SAC7BC,GAEA,OAAOjzB,iBAAO,EAAGizB,EAAaC,SAAS,SAAA7yB,GACrC,OAAO4yB,EAAaE,MAAM9yB,OAIjB+yB,EAA4B,SACvC/X,EACAC,GAEI,IADJzZ,EACG,4DADalC,EAEVixB,EAAe,SAAC9c,GACpB,OACGjS,GACD0R,EAAGsd,gBACDxV,EACAC,EACAxH,EAAOgd,WACP,KACIjvB,GAGJwxB,EAAc,SAAC7C,GACnB,OACG3uB,GACD0R,EAAGsd,gBACDxV,EACAC,EACAkV,EAAMM,WACN,KACIjvB,GAIJkvB,EAA8C/wB,iBAClD,EACAsb,EAAiB0V,mBACjB,SAAA3wB,GAAC,OAAIib,EAAiB2V,YAAY5wB,MAEjCkK,OAAOqmB,GACPvmB,KAAI,SAAAyJ,GAAM,MAAK,CAAEA,SAAQN,QAAQ,MAE9B8f,EAAkBhY,EAAiBiY,kBACnCC,EAA4CR,EAChDM,GAEC/oB,OAAO8oB,GACPhpB,KAAI,SAAAmmB,GAAK,MAAK,CAAEA,QAAOhd,QAAQ,MAE5B0d,EACJ7V,IAA2BC,EACvB,GACAtb,iBAAO,EAAGqb,EAAuB2V,mBAAmB,SAAA3wB,GAAC,OACnDgb,EAAuB4V,YAAY5wB,MAElCkK,OAAOqmB,GACPvmB,KAAI,SAAAyJ,GAAM,MAAK,CAAEA,SAAQN,QAAQ,MAEpCigB,EAAgBpY,EAAuBkY,kBACvCG,EACJrY,IAA2BC,EACvB,GACA0X,EAAgBS,GACblpB,OAAO8oB,GACPhpB,KAAI,SAAAmmB,GAAK,MAAK,CAAEA,QAAOhd,QAAQ,MAElC2d,EAAwCJ,EAAqBtU,OACjEyU,GAEIyC,EAAsCH,EAAoB/W,OAC9DiX,GAGF,MAAO,CACL3C,uBACAG,qBACAC,iBACAqC,sBACAE,oBACAC,oB,gDCjQJ,8JAcMxtB,EAAOD,IAAgB,QACvBD,EAAWC,IAAgB,YAC3BqN,EAAkBC,EAAOD,GAK/BC,EAAOogB,KAAOA,EAGdpgB,EAAOqgB,iBAAmB,CAAED,QAE5B,IAAME,EAAoB,GAMX,KACbC,UAAW,CACTC,kBAAmBC,IACnBC,OAAQC,IACR,iCAAkCC,IAClC,iCAAkCC,IAClC,mBAAoBC,IACpB,2BAA4BC,IAC5B,6BAA8BC,IAC9B,kCAAmCC,KAErCC,aAAc,SAASpuB,EAAoBwN,GACzC,IAAI8d,EAAa9d,EAAO6gB,UACxB,OAAIvzB,KAAK2yB,UAAUa,eAAehD,GACzBxwB,KAAK2yB,UAAUnC,GAAY8C,aAChCpuB,EACAU,IACA8M,GAGK1S,KAAK2yB,UAAL,kBAAoCW,aACzCpuB,EACAU,IACA8M,IAGN+gB,0BAA2B,SACzBvuB,EACAwuB,EACAC,EACAC,EACAC,GAEA,IAAIrD,EAAaoD,EAAiBL,UAClC,OAAIvzB,KAAK2yB,UAAUa,eAAehD,GACzB,IAAIxwB,KAAK2yB,UAAUnC,GACxBtrB,EACAwuB,EACAC,EACAC,EACAC,EACAC,MAGF3sB,QAAQ4sB,KAAR,2BACsBvD,EADtB,yGAGO,IAAIxwB,KAAK2yB,UAAL,kBACTztB,EACAwuB,EACAC,EACAC,EACAC,EACAC,OAINE,yBAA0B,SAASxD,EAAoByD,GAChDA,EAASX,aAOVtzB,KAAK2yB,UAAUa,eAAehD,GAChCrpB,QAAQ4sB,KAAR,iDAC4CvD,EAD5C,uCAUFrpB,QAAQC,KAAR,mDAAyDopB,EAAzD,OACAxwB,KAAK2yB,UAAUnC,GAAcyD,GAlB3B9sB,QAAQ4sB,KAAR,iDAC4CvD,EAD5C,yCAwBJ0D,eAAgB,SAASC,EAAqBh1B,GAC5CuzB,EAAkByB,GAAeh1B,GAMnCi1B,cAAe,SAASC,EAAyBF,GAG/C,GAAItvB,GAAYE,EAAM,CACpB,IAAMuvB,EAA6BvvB,EAAK4R,KACtC0d,EACAF,GAQIh1B,EAAS2F,IAAgB,UAC/B,IAAK3F,EAAOo1B,MACV,MAAM,IAAInjB,MACR,qNAGJ,IAAMojB,EAAyBr1B,EAAOo1B,MAGhCE,EAAiB,CACrB,iBAAkBjC,EAClB,UAAWA,EACX,aAAcA,EACd,gBAAiBA,EACjB,kBAAmBA,EACnB,eAAgBA,EAChB,aAAcA,EACd,cAAeA,EACf,iBAAkBA,GAEpBrzB,EAAOo1B,MAAQ,SAAsBG,EAASC,EAAQC,GACpD,IAAMC,EAAeJ,EAAeC,GACpC,OAAIG,IAGwB,IAA1BH,EAAQhtB,QAAQ,OAChBgtB,IAAYJ,EAELE,EAAuBE,EAASC,EAAQC,IAEjDztB,QAAQrG,MAAR,qBACgB4zB,EADhB,gCAC+CJ,EAD/C,6GAGAntB,QAAQ4sB,KAAR,wBAAsCe,OAAOC,KAAKN,IAClDttB,QAAQ4sB,KAAR,gEAGO,QAGT,IAAIiB,EAAiB,KACrB,IACEA,EAAiB5iB,EAAO6iB,QAAQX,GAChC,MAAOY,GACP/tB,QAAQrG,MAAR,iCAC4BqzB,EAD5B,oCACmEE,EADnE,kCAEEa,GAEFF,EAAiB,KAKnB,OADA71B,EAAOo1B,MAAQC,EACRQ,EAGP,OAAItC,EAAkByB,GAAqBzB,EAAkByB,IAE7DhtB,QAAQrG,MAAR,iCAC4BqzB,EAD5B,gJAIO,OAGXrR,wBACA3Q,KACAqgB,OACA2C,wB,kCC1MF,IAAMrwB,EAAkBmwB,EAAQ,IAC1BpwB,EAAWC,EAAgB,YAC3BswB,EAAMvwB,EAAWA,EAASwwB,OAAOD,IAAM,KACvCE,EAAKxwB,EAAgB,MACrBC,EAAOD,EAAgB,QACvBywB,EAAUzwB,EAAgB,WAC5B0wB,EAAWD,GAAW,UAAUE,KAAKF,EAAQG,UAE3CC,EAAU,SACd5wB,EACA6wB,EACAC,GAHc,OAKdP,EAAGQ,OAAO/wB,EAAMuwB,EAAGS,UAAUC,MAAM,SAAAC,GAC5BA,EACAJ,IADKD,EAAS7wB,OAqCvB5F,EAAOC,QAAU,CACf82B,SAlCe,WACf,IAAKnxB,IAASwwB,IAAYD,EAAI,OAAOpkB,QAAQC,OAAO,IAAIC,MAAM,gBAE9D,IAAM+kB,EAAUf,EAAMA,EAAIgB,aAAeb,EAAQc,MAI3CC,EAAad,EAAW,eAAiBzwB,EAAK4R,KAAK,KAAM,MACzD4f,EAAWxxB,EAAK4R,KAAKwf,EAASG,GAEpC,OAAO,IAAIplB,SAAQ,SAAChK,EAASiK,GAC3B,IAAMqlB,EAAU,SAAAC,GAAQ,OAAIvvB,EAAQ,CAAEuvB,cAChCC,EAAa,kBAAMvlB,EAAO,IAAIC,MAAM,yBAG1CukB,EAAQ5wB,EAAK4R,KAAK4f,EAAU,KAAM,cAAeC,GAAS,WAExDb,EAAQ5wB,EAAK4R,KAAKwf,EAAS,KAAM,QAASK,GAAS,WAEjD,IAAMG,EAAU5xB,EAAK4R,KACnBwf,EACA,KACA,KACA,MACA,YACA,QAEFR,EAAQgB,EAASH,EAASE,e,oMChC5BE,EAAsB,WAC1B,MAAM,IAAIxlB,MAAM,6DAiBHylB,EAXc,SAACn3B,GAAkB,IACtC0M,EAAqC1M,EAArC0M,kBAAsBhO,EADe,YACAsB,EADA,uBAG7C,OACE,gBAACme,EAAA,EAAD,CACEvR,QAAS,gBAACwqB,EAAA,EAAD,iBAAkB14B,EAAlB,CAA8BuE,QAASi0B,KAChDxqB,kBAAmBA,K,wDCoBJ2qB,E,kDACnB,WAAYr3B,GAAe,IAAD,uBACxB,cAAMA,IAiERs3B,SAAW,SAACz2B,GACV,GAAKA,EAAL,CADqC,MAGC,EAAKb,MAAnCwF,EAH6B,EAG7BA,SACR+xB,EAJqC,EAGpBA,kBACA,CACfC,kBAAmB32B,EAAOe,KAC1B61B,gBAAgB,EAChBC,aAAc,EAAK13B,MAAM03B,eAExBvO,MAAK,SAAAwO,GACJ,GAAKA,EAAUhuB,OAAf,CACA,IAAMiuB,EAAWD,EAAU,GAC3BE,YAAsBryB,EAASoyB,GAI/BpyB,EAAQa,sBAAsByxB,YAAYF,GAE1C,EAAKG,UAAUvyB,EAAQa,uBACvB,IAAME,EAAuBqxB,EAAS5H,UACtC,EAAKgI,sBAAsBzxB,GAKvB,EAAK0xB,eACP,EAAKA,cAAczR,kBAAkBjgB,GAIvCoxB,EAAUrxB,SAAQ,SAAAsxB,GAAQ,OAAIA,EAASvkB,gBAExC6kB,OAAM,SAAA3B,GAEL9uB,QAAQrG,MAAM,8BAA+Bm1B,QApGzB,EAwG1B4B,qBAAuB,WACrB,EAAKxvB,SACH,CACEpC,aAAc,GACd6xB,kBAAkB,IAEpB,WACM,EAAKp4B,MAAMU,UAAU,EAAKV,MAAMU,SAAS,EAAK6H,MAAMhC,kBA/GpC,EAoH1ByxB,sBAAwB,SAACzxB,GACvB,GAAqB,KAAjBA,EAAJ,CAKA,IAAM6xB,GAC8C,IAAlD,EAAKC,kBAAkBrwB,QAAQzB,GAE5B6xB,GACC,EAAKp4B,MAAMU,UAAU,EAAKV,MAAMU,SAAS6F,GAE/C,EAAKoC,SAAS,CACZpC,eACA6xB,0BAZA,EAAKD,wBAtHiB,EAsI1BG,UAAY,SAACC,GAAoD,IAAD,EACX,EAAKv4B,MAAhDwF,EADsD,EACtDA,QAASgzB,EAD6C,EAC7CA,gBAAiBd,EAD4B,EAC5BA,aAC1BnxB,EAAiB,EAAKgC,MAAtBhC,aACFH,EAAmBZ,EAAQa,sBAE7BoyB,EAA0B,GACxBC,EAFkBtyB,EAAiBO,YAAYJ,GAEFoyB,cACnD,GAAID,EACF,IACED,EAA0BxlB,KAAKC,MAAMwlB,GACrC,MAAOzjB,GACPxN,QAAQrG,MAAM,qBAAsB6T,GAIxC,GAAqB,UAAjByiB,EAA0B,CAC5B,IAAMkB,EAAgB,GAClBxyB,EAAiBI,YAAYD,IAC/BqyB,EAAcp5B,KAAK+G,GAErB,IAAMsyB,EAAwB,CAC5BrzB,UACAgzB,kBACAM,aAAa,EACbF,gBACAG,aAAc,CACZC,IAAK,EACLp3B,KAAM2E,EACN0yB,WAAW,EACXC,mBAAoBT,GAEtBU,eAAgB,SAAAC,GACTA,EAAgBzvB,SAGrB6uB,EAAgBa,2BAA2B7zB,EAAS,CAClD4zB,EAAgB,GAAGx3B,OAErB,EAAK5B,MAAMU,SAAS04B,EAAgB,GAAGx3B,SAG3C22B,EAAuBe,KAAKT,QACvB,GAAqB,UAAjBnB,EAA0B,CACnC,IAAMmB,EAAwB,CAC5BrzB,UACAgzB,kBACAI,cAAe,CAACryB,GAChBwyB,aAAc,CACZG,mBAAoBT,GAEtBU,eAAgB,SAAAC,GAEdZ,EAAgBa,2BAA2B7zB,EAAS,CAClD4zB,EAAgB,GAAGx3B,OAErB,EAAK5B,MAAMU,SAAS04B,EAAgB,GAAGx3B,QAG3C22B,EAAuBe,KAAKT,QACvB,GAAqB,SAAjBnB,EAAyB,CAClC,IAAMmB,EAAwB,CAC5BrzB,UACAgzB,kBACAI,cAAe,CAACryB,GAChBwyB,aAAc,CACZN,2BAEFU,eAAgB,SAAAC,GACd,EAAKp5B,MAAMU,SAAS04B,EAAgB,GAAGx3B,QAG3C22B,EAAuBe,KAAKT,KA1M9B,EAAKtwB,MAAQ,CACX6vB,kBAAkB,EAClB7xB,aAAcvG,EAAMu5B,qBAAuB,IALrB,IAQhB/zB,EAAYxF,EAAZwF,QARgB,OASpBA,GACF,EAAKuyB,UAAUvyB,EAAQa,uBAVD,E,oDAkBS,IAA7BsR,EAA4B,wDAC5BrX,KAAK23B,eAAe33B,KAAK23B,cAAcz3B,MAAMmX,K,gDAGzB6hB,GACpBA,EAAUD,sBAAwBj5B,KAAKN,MAAMu5B,qBAC/Cj5B,KAAKqI,SAAS,CACZpC,aAAcizB,EAAUD,qBAAuB,O,gDAKd,IAAD,OAC9BE,EAAUn5B,KAAKN,MAAM05B,iBAAmB,GAC9C,MAAM,GAAN,mBACKD,EACAhwB,QAAO,SAAA5I,GAAM,OAAIA,EAAO2J,OAAS,EAAKxK,MAAM03B,gBAC5CnuB,KAAI,SAAA1I,GAAM,MAAK,CACd4H,KAAM,GACNzH,MAAO,GACPglB,kBAAmBnlB,EAAO84B,YAC1B1T,WAAY,kBAAM,gBAAC,IAAD,OAClBhjB,QAAS,kBAAM,EAAKq0B,SAASz2B,SARnC,CAUE,CACEE,KAAM,iB,gCAKFqF,GAAuC,IAAD,OAC9C9F,KAAK+3B,kBAAoBjyB,EAAiBwzB,sBAAsB/I,YAC5DvwB,KAAKN,MAAM03B,eACbp3B,KAAK+3B,kBAAoB/3B,KAAK+3B,kBAAkB5uB,QAAO,SAAAlD,GACrD,OACEH,EAAiBO,YAAYJ,GAAcszB,YAC3C,EAAK75B,MAAM03B,iBAIjB,IAAMoC,EAAsBx5B,KAAKy5B,0BAC3BC,EAAgB15B,KAAK+3B,kBAAkB9uB,KAAI,SAAAhD,GAAY,MAAK,CAChEkC,KAAMlC,EACNvF,MAAOuF,MAETjG,KAAK25B,iBAAL,sBAA4BH,GAA5B,YAAoDE,M,+BAkJ5C,IAAD,OACD34B,EAAYf,KAAKiI,MAAM6vB,iBACzB,2CACA,KAEE8B,EAAkB55B,KAAKN,MAAMm6B,wBAAwB1wB,QACzD,SAAA2wB,GAAc,OAAIA,EAAe5vB,OAAS,EAAKxK,MAAM03B,gBAEvD,OACE,gBAAC,IAAD,CACE2C,qBAAsB/5B,KAAKN,MAAMG,kBACjCF,OAAQK,KAAKN,MAAMC,OACnB0c,gBAAiB,kBACf,gBAAC2d,EAAA,EAAD,CACEn8B,MAAO,EAAK6B,MAAM7B,MAClBgC,kBAAmB,EAAKH,MAAMG,kBAC9BS,mBAAoB,EAAKZ,MAAMY,mBAC/BkB,SAAU,EAAK9B,MAAM8B,SACrBy4B,aAAW,EACX1T,WAAY,EAAKoT,kBAAoB,GACrCj5B,MAAO,EAAKuH,MAAMhC,aAClB7F,SAAU,EAAKs3B,sBACf32B,UAAWA,EACXgB,UAAW,EAAKrC,MAAMqC,UACtBpC,OAAQ,EAAKD,MAAMC,OACnBie,eAAgB,EAAKle,MAAMke,eAC3ByI,QAAS,EAAK3mB,MAAM2mB,QACpB1oB,IAAK,SAAAu8B,GAAY,OAAK,EAAKvC,cAAgBuC,MAG/C1c,aAAc,SAAA3f,GAAK,OACjB,gBAAC,WAAD,KACG,EAAK6B,MAAMy6B,YACV,gBAACn2B,EAAA,EAAD,CACElG,KAAK,QACL6E,QAAS,WACP,EAAKk1B,yBAGP,gBAAC,IAAD,OAGD+B,EAAgBvwB,OACjB,gBAAC,EAAD,CACExL,MAAOA,EACP+L,KAAM,gBAAC,IAAD,MACNvI,MACE,EAAK4G,MAAMhC,aACT,gBAAC,QAAD,aAEA,gBAAC,QAAD,eAGJiH,SAAO,EACPd,kBAAmB,kBACjBwtB,EAAgB3wB,KAAI,SAAA6wB,GAAc,MAAK,CACrCz4B,MAAOy4B,EAAeT,YACtBe,MAAO,kBAAM,EAAKpC,UAAU8B,WAIhC,a,GA/Q8Bp8B,c,8BChD9C,0SAIM43B,EAAKxwB,IAAgB,MACrBC,EAAOD,IAAgB,QACvBqN,EAAkBC,EAAOD,GAElBkoB,EAAyB,SACpCn1B,EACAo1B,EACAr0B,GAEA,IAAMH,EAAmBZ,EAAQa,sBAC7BD,EAAiBI,YAAYD,IAC/BH,EAAiBy0B,eAAet0B,GAElCq0B,EAAqBE,QAAQv0B,GAC7Bq0B,EAAqBG,QAAQx0B,GAC7BsxB,EAAsBryB,EAASo1B,GAI/Bx0B,EAAiB0xB,YAAY8C,GAE7BA,EAAqBvnB,UAOV2nB,EAA2B,SACtCx1B,EACAe,GAEA,IAAI00B,EAAe/0B,IAAgBg1B,mBACjC11B,EACAe,EACA,IACA40B,UAAU,GASZ,OAPyC,IAArCF,EAAajzB,QAAQ,aAEvBizB,EAAeA,EAAaE,UAC1B,EACAF,EAAaG,YAAY,aAGtBH,GAGII,EAAwB,SACnC71B,EACAy1B,GAEA,IAAM5zB,EAAchC,EAAKiC,QAAQ9B,EAAQ4B,kBACzC,OAAO6zB,EAAaK,SAASj0B,IAGlBk0B,EAAyB,SACpC/1B,EACAg2B,GAEA,IAAK5F,IAAOvwB,EACV,OAAOmM,QAAQhK,QAAQg0B,GAGzB,IAAMn0B,EAAchC,EAAKiC,QAAQ9B,EAAQ4B,kBAEzC,OAAOoK,QAAQsc,IACb0N,EAAcjyB,KAAI,SAAA0xB,GAChB,GAAII,EAAsB71B,EAASy1B,GACjC,OAAOA,EAGT,IAAMQ,EAAmBp2B,EAAKqjB,SAASuS,GACrCS,EAAgBr2B,EAAKs2B,QAAQF,GAC7BG,EAA2Bv2B,EAAKqjB,SAC9B+S,EACAC,GAGEG,EAA8BC,YAClCF,GACA,SAAAG,GACE,IAAMC,EACJ32B,EAAK4R,KAAK5P,EAAa00B,GAAqBL,EAC9C,OAAO9F,EAAGqG,WAAWD,MAInBE,EAAkB72B,EAAK4R,KAC3B5P,EACAw0B,EAA8BH,GAGhC,OAAO,IAAIlqB,SAAQ,SAAAhK,GACjBouB,EAAGuG,SAASlB,EAAciB,GAAiB,SAAA3F,GACzC,OACS/uB,EADL+uB,EACa0E,EAGFiB,cAOZE,EAA4B,SACvC52B,EACAe,GAEA,IAAKqvB,EAAI,MAAO,GAChB,IAAMqF,EAAe51B,EAAKg3B,UACxBrB,EAAyBx1B,EAASe,IAIpC,OAAKqvB,EAAGqG,WAAWhB,GAGdI,EAAsB71B,EAASy1B,GAG7B,GAHmD,UAHjB,SAS9BpD,EAAwB,SACnCryB,EACA82B,GAEIA,aAAuB7pB,EAAG8pB,eAC5BD,EAAYE,UAAqC,YAA3Bh3B,EAAQi3B,iBASrBC,EAA2B,SACtCl3B,EACAm3B,GAEA,IAAMC,EAAsBC,YAAuBF,GAC7CG,EAAmB,IAAIrqB,EAAGsqB,iBAAiBH,GACjDA,EAAoBvpB,SACpB7N,EAAQw3B,gBAAgBF,GACxBA,EAAiBzpB,Y,oDCvJnB,qBAGMrP,EAAS,CACbi5B,SAAU,CAAE7yB,YAAa,EAAG6a,cAAe,WAG9B,oBACb/mB,EADa,EACbA,SACAg/B,EAFa,EAEbA,UAFa,OAOb,4BACGA,GAAa,gBAAC,IAAD,CAAkB9+B,KAAM,GAAID,MAAO6F,EAAOi5B,WACvD/+B,K,ucCXQi/B,EAAsB,sBACtBC,EAAyB,yBACzBC,EAAwB,wBACxBC,EAA2B,2BAC3BC,EAA0B,0BAC1BC,EAAuB,uBACvBC,EAAsB,sBAsB7BC,EAA8B,SAClCltB,EACAmtB,GAEA,OAAOntB,EAAOjH,KAAI,SAAAq0B,GAAK,OAAIA,EAAMD,iBAAerC,SAASqC,IAGrDE,EAA0B,uCAAG,WACjCC,EACAH,GAFiC,2BAAAzsB,EAAA,yDAK/BV,EAIEstB,EAJFttB,OACAF,EAGEwtB,EAHFxtB,aACAiB,EAEEusB,EAFFvsB,uBACAN,EACE6sB,EADF7sB,gBAEGT,GAAWF,EAViB,yCAUI,MAVJ,WAW7BotB,EAA4BltB,EAAQmtB,GAXP,yCAYxB,MAZwB,cAe3BrU,EAAShZ,EAAaytB,IAfK,kBAiBGxsB,IAjBH,cAiBzBiY,EAjByB,iBAkBRC,IAAMC,KAAN,UAClBsU,IAAgBpU,QADE,iBACcN,EADd,UAErB,CACEqU,iBAEF,CACEvb,OAAQ,CACNkH,UAEFO,QAAS,CACPC,cAAeN,KA5BU,eAkBzBO,EAlByB,OAgC/B9Y,IAhC+B,kBAiCxB8Y,EAASC,MAjCe,sCAmC3B,KAAID,UAAoC,MAAxB,KAAIA,SAASkU,OAnCF,iBAoC7Bx2B,QAAQ4sB,KAAK,wBApCgB,6FAAH,wDA+CnB6J,EAAoC,SAG/CJ,EACAH,EACAQ,GACO,IACC3tB,EAAWstB,EAAXttB,OACR,OAAKA,EACDktB,EAA4BltB,EAAQmtB,GAC/BQ,EAIF,WACL,IACEN,EAA2BC,EAAmBH,GAC9C,MAAOpH,GACP9uB,QAAQrG,MAAR,gCAAuCu8B,EAAvC,aAAyDpH,IAJzC,2BAAT6H,EAAS,yBAATA,EAAS,gBAMlB,OAAOD,EAASE,MAAM,KAAMD,IAZVD,GAgBTG,EAAkB,WAC7B,OAAO7U,IACJzO,IADI,UACGgjB,IAAgBpU,QADnB,iBAEJT,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBuU,EAAgB,uCAAG,WAC9BT,GAD8B,6BAAA5sB,EAAA,yDAI5BV,EAIEstB,EAJFttB,OACAF,EAGEwtB,EAHFxtB,aACAiB,EAEEusB,EAFFvsB,uBACAN,EACE6sB,EADF7sB,gBAEGT,GAAWF,EATc,yCASO,MATP,UAYF,KADtBkuB,EAAehuB,EAAO/G,QAAO,SAAAm0B,GAAK,OAAKA,EAAMa,SAClC90B,OAZa,wDAcxB2f,EAAShZ,EAAaytB,IAdE,mBAgBMxsB,IAhBN,eAgBtBiY,EAhBsB,iBAiBLC,IAAMoF,MAAN,UAClBmP,IAAgBpU,QADE,iBACcN,EADd,UAErBkV,EAAaj1B,KAAI,SAAAq0B,GAAK,MAAK,CACzBD,cAAeC,EAAMD,cACrBc,MAAM,MAER,CACErc,OAAQ,CACNkH,UAEFO,QAAS,CACPC,cAAeN,KA5BO,eAiBtBO,EAjBsB,OAgC5B9Y,IAhC4B,kBAiCrB8Y,EAASC,MAjCY,kCAmC5BviB,QAAQrG,MAAR,+CAnC4B,0DAAH,sDAuChBs9B,EAAsB,SACjCxtB,EACA4R,GAEA,OAAIA,EAAE6b,YAAcztB,EAAEytB,WACb7b,EAAE6b,WAAaztB,EAAEytB,WACfztB,EAAEytB,aAAe7b,EAAE6b,YACpB,GACEztB,EAAEytB,YAAc7b,EAAE6b,WACrB,EAEA,I,6BCvKX,wFAQaC,EAAa,SACxBC,EACAC,EACAC,GAEA,IAAMC,EAAiBhhC,aAAiBihC,KAChCC,EAAYH,EAAZG,QACRlhC,aACE,WACE,GAAK8gC,EAEL,OADAE,EAAeG,gBAAgBN,EAAa,CAAEK,YACvC,kBAAMF,EAAeI,kBAAkBP,MAEhD,CAACG,EAAgBH,EAAaC,EAASI,KAO9BG,EAAwB,SACnCR,EACAC,EACAC,GAEA,IAAMC,EAAiBhhC,aAAiBihC,KAChCK,EAAoBP,EAApBO,gBACRthC,aACE,WACE,GAAK8gC,EAEL,OADAE,EAAeG,gBAAgBN,EAAa,CAAES,oBACvC,kBAAMN,EAAeI,kBAAkBP,MAEhD,CAACG,EAAgBH,EAAaC,EAASQ,M,iFClCtB7J,G,yBAUnB,WACEjwB,EACAwuB,EACAC,EACAC,EACAC,EACAoL,GACC,oBACDj/B,KAAKk/B,YAAc,KACnBl/B,KAAKm/B,UAAYxL,EACjB3zB,KAAKo/B,kBAAoBxL,EACzB5zB,KAAKq/B,eAAiBxL,EACtB7zB,KAAKs/B,SAAWp6B,EAChBlF,KAAKu/B,QAAU7L,EACf1zB,KAAKw/B,qBAAuBP,EAC5Bj/B,KAAKy/B,SAAU,E,8FAkBf,OAAOz/B,KAAKk/B,c,oCAIZ,OAAOl/B,KAAKm/B,Y,2CASa,OAArBn/B,KAAKk/B,aACPl/B,KAAKq/B,eAAeK,YAAY1/B,KAAKk/B,e,mCAIvC,OAAO,I,mCAIP,OAAO,I,wCAOP,OAAO,K,yCAOP,OAAO,M,6BAhDIS,GACX,OAAQA,EAAiB,IAAO,Y,mJC9B9Bj8B,EAAS,CACb4K,UAAW,CACTrL,SAAU,WACVzE,QAAS,gBAEXohC,OAAQ,CACN38B,SAAU,WACV48B,MAAO,MACPz8B,IAAK,SAoBY08B,E,4MACnB73B,MAAQ,CACNlK,MAAO,EAAK2B,MAAM3B,MAElBwlB,MACG,EAAK7jB,MAAMqgC,mBAAqCxhC,IAArB,EAAKmB,MAAM6jB,MAEnC,EADA,EAAK7jB,MAAM6jB,O,EAInByc,WAAyB,K,EAEzBnoB,cAAgB,SAAC9Z,EAAewlB,GAC9B,EAAKlb,SAAS,CAAEtK,QAAOwlB,W,EAGzBzL,YAAc,WAEZ,IAAIyL,EAAQ0c,WAAW,EAAKh4B,MAAMsb,OAC9BA,EAAQ,IAAGA,EAAQ,GACnBA,EAAQ,IAAGA,EAAQ,GACvB,EAAKlb,SAAS,CAAEkb,UAChB,EAAK7jB,MAAMU,SAAS,EAAK6H,MAAMlK,MAAOwlB,I,EAGxC2c,oBAAsB,SAACniC,GACrB,IAAM6kB,EAAYR,YAAoBrkB,EAAMoiC,KACtC5c,EAAQ,EAAK7jB,MAAMqgC,aAAe,EAAIhiC,EAAMoiC,IAAIvvB,EACtD,EAAKvI,SAAS,CAAEtK,MAAO6kB,EAAWW,UAClC,EAAK7jB,MAAMU,SAASwiB,EAAWW,I,uDAGvB,IAAD,OACP,OACE,uBACE1lB,MAAK,2BACA6F,EAAO4K,WADP,IAEHpL,MAAOlD,KAAKN,MAAMqC,UAAY,YAASxD,KAGzC,gBAAC,IAAD,CACEmD,GAAI1B,KAAKN,MAAMgC,GACfK,UAAW/B,KAAKN,MAAMqgC,aACtBliC,MAAQmC,KAAKN,MAAMqgC,kBAAkCxhC,EAAnB,CAAE2E,MAAO,OAC3CrD,kBAAmBG,KAAKN,MAAMG,kBAC9BuB,oBAAkB,EAClBd,mBAAoBN,KAAKN,MAAMY,mBAC/BG,KAAK,OACLe,SAAU,kDACVd,MAAOV,KAAKiI,MAAMlK,MAClBqC,SAAU,SAAAQ,GAAK,OACb,EAAKiX,cAAcjX,EAAMC,OAAOH,MAAO,EAAKuH,MAAMsb,QAEpDjgB,OAAQtD,KAAK8X,YACbna,IAAK,SAAA2hB,GAAS,OAAK,EAAK0gB,WAAa1gB,MAErCtf,KAAKN,MAAMqgC,cACX,gBAAC,IAAD,CACEr+B,GAAE,UAAK1B,KAAKN,MAAMgC,IAAM,GAAtB,UACF7B,kBAAkB,QAClBuB,oBAAkB,EAClBvD,MAAO,CAAEqF,MAAO,OAChB1B,SAAU,8BACVd,MAAOV,KAAKiI,MAAMsb,MAAMhM,WACxBnX,SAAU,SAACQ,EAAOF,GAAR,OACR,EAAKmX,cAAc,EAAK5P,MAAMlK,MAAOkiC,WAAWv/B,KAElD4C,OAAQtD,KAAK8X,YACbna,IAAK,SAAA2hB,GAAS,OAAK,EAAK0gB,WAAa1gB,GACrC7e,KAAK,SACLsC,KAAM,KAGV,uBAAKlF,MAAO6F,EAAOk8B,QACjB,gBAAC,IAAD,CACEG,aAAc//B,KAAKN,MAAMqgC,aACzBK,iBAAkBpgC,KAAKkgC,oBACvBniC,MAAO8kB,YACL7iB,KAAKiI,MAAMlK,MACXiC,KAAKiI,MAAMsb,e,GA/Ee7lB,c,qUCtB3B2iC,EAAb,uKAEI,OAAO,gBAAC,IAAD,eAAUviC,KAAK,SAAYkC,KAAKN,YAF3C,GAA2BhC,aAad4iC,EAAb,uKAEI,OAAO,gBAAC,IAAiBtgC,KAAKN,WAFlC,GAA+BhC,aAalB6iC,EAAb,uKAEI,OAAO,gBAAC,IAAiBvgC,KAAKN,WAFlC,GAAiChC,aAiBpB8iC,EAAb,uKAKI,OAAO,gBAAC,IAAiBxgC,KAAKN,WALlC,GAAuChC,aAmB1B+iC,EAAb,uKAEI,OAAO,gBAAC,IAAgBzgC,KAAKN,WAFjC,GAA8BhC,aAmBjBgjC,EAAb,uKAEI,OAAO,gBAAC,IAAiB1gC,KAAKN,WAFlC,GAAoChC,c,kDC9ErBijC,EAdM,WAMnB,IAAMC,EAAOC,SAASD,KAChBE,EAAWD,SAASE,cACpBC,EAAYH,SAASI,cAAc,kBACnCC,EAAgBF,GAAaA,EAAUG,SAASL,GAEtD,QADeA,IAAaF,KACTM,G,QCSNE,EAvBW,CACxB,iBACA,iBACA,uBACA,iBACA,iBACA,iBACA,uBACA,iBACA,SACA,uBACA,MAEA,YACA,kBACA,iBACA,kBAIA,kB,iBCRaC,EATM,WACnB,IAAMN,EAAgBF,SAASE,cAC/B,IAAKA,EAAe,OAAO,EAG3B,QAAIA,EAAcO,QADU,8C,oMCC9B,IAAMz8B,EAAWC,IAAgB,YAe3By8B,EAAqB,SAACC,GAC1B,OAAKA,EACuB,IAAxBA,EAAK95B,QAAQ,OAAqB,WACR,IAA1B85B,EAAK95B,QAAQ,SAAuB,SACd,IAAtB85B,EAAK95B,QAAQ,KAAmB,SACvB,cAAT85B,GAAiC,mBAATA,EAAkC,eACjD,UAATA,GAA6B,UAATA,EAAyB,eACpC,QAATA,GAA2B,UAATA,EAAyB,QACxC,KAPW,MAkDPC,EAA+B,SAC1C9sB,GAEA,IAAM+sB,EAxCkC,SAAC/sB,GACzC,IAAI+sB,EAAiB,IACjB/sB,EAAEgtB,SAAWhtB,EAAEitB,WAASF,GAAkB,cAC1C/sB,EAAEktB,WAAUH,GAAkB,UAC9B/sB,EAAEmtB,SAAQJ,GAAkB,QAEhC,IAAMF,EAAO7sB,EAAE6sB,MAAQ,GAGvB,OAFgBD,EAAmBC,KACtBE,GAAkBF,GACxBE,EA+BgBK,CAA2BptB,GAC5CqtB,EAzB4B,SAACrtB,GAEnC,IAAM6sB,EAAO7sB,EAAE6sB,MAAQ,GACjBS,EAAUV,EAAmBC,GACnC,IAAKS,EAAS,OAAO,EAErB,IAAMC,EAAmBvtB,EAAEgtB,SAAWhtB,EAAEitB,QAClCO,EAAaxtB,EAAEmtB,OAGrB,QAAgB,UAAZG,IAEGC,IAAqBC,GAaTC,CAAqBztB,GAClC0tB,EAAajB,EAAkBpG,SAAS0G,GAC9C,MAAO,CAAEA,iBAAgBY,QAASN,IAAeK,IAOtCE,EAAiB,WAC5B,IACMC,EADc9kC,aAAiB+kC,KACD3e,OAAO0e,gBAC3C,OAAO,2BAAKE,KAAqBF,IAOtBG,EAAuB,SAACC,GACnC,IAAMC,EAAcN,IAEpB7kC,aACE,WACE,IAAMkhC,EAAU,SAACjqB,GAEf,IAAMmuB,EAAerB,EAA6B9sB,GAClD,GAAKmuB,EAAaR,QAAlB,CAGA,IAAM/D,EAAczJ,OAAOC,KAAK8N,GAAaE,MAC3C,SAAAzhC,GAAI,OAAIuhC,EAAYvhC,KAAUwhC,EAAapB,kBAExCnD,IAGD15B,GAAYm+B,IAAazE,GAAa0E,mBAItC5B,MACJ1sB,EAAEgD,iBAGEgpB,KAEJiC,EAAarE,OAIf,OADAsC,SAAS1U,iBAAiB,UAAWyS,GAC9B,kBAAMiC,SAASxU,oBAAoB,UAAWuS,MAEvD,CAACgE,EAAcC,KAqBNK,EAAyB,SAACxB,GACrC,OAAOA,EACJ3e,MAAM,KACN9Z,KAAY,SAAAk6B,GACX,MAAgB,cAAZA,EAAgC3+B,cAAc,MAAQ,OAC1C,UAAZ2+B,GAAmC,QAAZA,EAA0BA,EAlBjC,SAAC3B,GACzB,IAAMS,EAAUV,EAAmBC,GACnC,MAAgB,aAAZS,EAA+BT,EAAK/qB,MAAM,GAC9B,WAAZwrB,EAA6BT,EAAK/qB,MAAM,GAC5B,WAAZwrB,EAA6BT,EACjB,iBAAZS,EAA4C,cAATT,EAAuB,OAAS,OACvD,iBAAZS,EAA4C,UAATT,EAAmB,IAAM,IACzDA,EAYI4B,CAAkBD,MAE1BxsB,KAAK,QAoBG0sB,EAAyB,SAAC3B,GACrC,OAAOA,EACJ3e,MAAM,KACN9Z,KAAY,SAAAk6B,GACX,MAAgB,cAAZA,GAAuC,UAAZA,GAAmC,QAAZA,EAC7CA,EAnBc,SAAC3B,GAC5B,IAAMS,EAAUV,EAAmBC,GACnC,MAAgB,aAAZS,EAA+BT,EAAK/qB,MAAM,GAC9B,WAAZwrB,EAA6BT,EAAK/qB,MAAM,GAC5B,WAAZwrB,EAA6BT,EACjB,iBAAZS,EACc,cAATT,EAAuB,SAAW,SAC3B,iBAAZS,EAA4C,UAATT,EAAmB,IAAM,IACzDA,EAYI8B,CAAqBH,MAE7BxsB,KAAK,O,gCC3LV,sGAAO,IAAM4sB,EAAoC,SAACx+B,GAChD,OAAOA,EAAK0B,WAAW,MAGZ+8B,EAA6B,SAACz+B,GACzC,OAAOA,EAAK0B,WAAW,YAAc1B,EAAK0B,WAAW,aAG1CqE,EAAc,SAAC/F,GAC1B,OAAIw+B,EAAkCx+B,GAC9B,iDAAN,OAAwDA,EAAxD,6CAEEy+B,EAA2Bz+B,GAAcA,EAEtC,K,8HCdHF,E,MAAWC,GAAgB,YAC3B2+B,EAAoB5+B,EAAWA,EAAS6+B,UAAY,KAItDC,EAAoB,GAElBC,EAAsB,SAAC15B,GAI3B,MAAO,YAAcA,EAAO,mCAWjB25B,EAAb,mHAEIC,EACAC,GAGA,IADe/jC,KAAKgkC,cAAcF,GACrB,OAAO,KAEpB,IAAMG,EAAWH,EAASC,GAE1B,MAAwB,kBAAbE,EAA8B,KAElCA,IAZX,4CAgBIH,EACAC,GAGA,IADe/jC,KAAKgkC,cAAcF,GACrB,OAAO,KAEpB,IAAMG,EAAWH,EAASC,GAE1B,MAAwB,kBAAbE,EAA8B,KAElCA,IA1BX,4CA8BIH,EACAC,GAGA,IADe/jC,KAAKgkC,cAAcF,GACrB,OAAO,KAEpB,IAAMG,EAAWH,EAASC,GAE1B,OAAO/jC,KAAKgkC,cAAcC,KAtC9B,2CA0CIH,EACAC,GAGA,IADe/jC,KAAKgkC,cAAcF,GACrB,OAAO,KAEpB,IAAMG,EAAWH,EAASC,GAE1B,OAAO/jC,KAAKkkC,aAAaD,KAlD7B,oCAqDuBH,GACnB,OACe,OAAbA,QACavlC,IAAbulC,GACoB,kBAAbA,GACP/hB,MAAMoiB,QAAQL,GAEP,KAEFA,IA9DX,mCAiEsBA,GAClB,OACe,OAAbA,QACavlC,IAAbulC,GACoB,kBAAbA,GACN/hB,MAAMoiB,QAAQL,GAIVA,EAFE,SAxEb,KA8EqBM,E,iGACRl6B,EAAqBwI,GAC9B,IAAMvK,EAAOwK,KAAKmX,UAAU,CAC1B,UAAW8Z,EAAoB15B,GAC/BF,QAAS0I,IAGP+wB,EACFA,EAAkBY,UAAUl8B,GAE5Bw7B,EAAoBx7B,I,0BAUb+B,GAQT,OAAmD,MAN/Cu5B,EACKA,EAAkBa,WAElBX,GAGGj8B,QAAQk8B,EAAoB15B,M,0BAU/BA,GACT,IAAKk6B,EAAUG,IAAIr6B,GAAO,OAAO,KAEjC,IAAI/B,EAAO,GAETA,EADEs7B,EACKA,EAAkBa,WAElBX,EAGT,IAEE,OADmBhxB,KAAKC,MAAMzK,GACZ6B,QAClB,MAAO2K,GAEP,OADAxN,QAAQ4sB,KAAK,2CACN,U,iOCXPrwB,EAAS,CACb8gC,gBAAiB,CACfhmC,QAAS,OACT+P,cAAe,UAEjBk2B,eAAgB,CACdthC,KAAM,EACN3E,QAAS,OACT+P,cAAe,MACf5K,WAAY,YAEdgF,MAAO,CACLxF,KAAM,EACND,MAAO,QAETwhC,6BAA8B,CAC5B36B,WAAY,IAEd46B,UAAW,CACT/2B,YAAa,IAUXg3B,EAAgB,SACpBC,EACAl8B,EACAhI,GAEA,IAAKkkC,EAAU,GAIb,OAHA19B,QAAQ29B,IACN,0HAEKnkC,EALD,IAQAokC,EAAap8B,EAAbo8B,SACR,IAAKA,EAAU,OAAO,KAGtB,IADA,IAAIrkC,EAAQqkC,EAASF,EAAU,IACtB5lC,EAAI,EAAGA,EAAI4lC,EAAUx7B,SAAUpK,EACtC,GAAIyB,IAAUqkC,EAASF,EAAU5lC,IAAK,CACR,qBAAjB0B,IAA8BD,EAAQC,GACjD,MAIJ,OAAOD,GAGHskC,EAAgB,SAACH,EAAsBl8B,GAC3C,OAAKk8B,EAAU,GAOXl8B,EAAMs8B,SAAiBt8B,EAAMs8B,SAASJ,EAAU,IAE7Cl8B,EAAMrH,MARX6F,QAAQ29B,IACN,4IAEKn8B,EAAMrH,OAkaF4jC,IA1ZU,SAAnBA,EAAoB,GAWZ,IAVZC,EAUW,EAVXA,oBACAN,EASW,EATXA,UACAO,EAQW,EARXA,OACAC,EAOW,EAPXA,KACAC,EAMW,EANXA,2BACAC,EAKW,EALXA,eACArgC,EAIW,EAJXA,QACAk0B,EAGW,EAHXA,gBACAnC,EAEW,EAFXA,iBACA4C,EACW,EADXA,wBAEM2L,EAAcC,cAEdC,EAAuBhoC,eAC3B,SAACmnC,GAIKU,GAAgBA,EAAeI,wBAC/BR,GAAqBA,EAAoBN,GAC7CW,MAEF,CAACD,EAAgBJ,EAAqBK,IAGlCI,EAAsBloC,eAC1B,SAACiL,GACC,GAAKk8B,EAAU,GAAf,CAOA,IAAMgB,EAA8B,GAQpC,OAPIl9B,EAAMiT,gBACRiqB,EAAa3mC,KAAKyJ,EAAMiT,eAAeipB,EAAU,KAC/CS,GAA8B38B,EAAMm9B,qBACtCD,EAAa3mC,KACXomC,EAA2B38B,EAAMm9B,oBAAoBjB,EAAU,MAG5DgB,EAAalvB,KAAK,YAASpY,EAdhC4I,QAAQ29B,IACN,oJAeN,CAACD,EAAWS,IAGRS,EAAmBroC,eACvB,SAACiL,GACC,GAAmB,wCAAfA,EAAMrH,KAAgD,OAAO,KAEjE,GAAwB,YAApBqH,EAAMq9B,UAAyB,CAAC,IAC1BzmB,EAAa5W,EAAb4W,SACF5D,EAAciqB,EAAoBj9B,GAExC,OACE,gBAAC,IAAD,CACEtH,MACGsa,EAGC,gBAAC,WAAD,KACE,gBAAC,IAAD,CAAMzd,UAAQ,GAAE8mC,EAAcH,EAAWl8B,IACzC,gBAAC,IAAD,CAAgB9K,MAAO,CAAEW,QAAS,WAChC,gBAAC,IAAD,CAAc+B,OAAQob,MAL1BqpB,EAAcH,EAAWl8B,GAU7B8f,IAAK9f,EAAMrH,KACXyQ,QAAS6yB,EAAcC,EAAWl8B,GAClCiJ,QAAS,SAAChR,EAAOgI,GACfi8B,EAAU7+B,SAAQ,SAAA/G,GAAC,OAAIsgB,EAAStgB,IAAK2J,MACrC88B,EAAqBb,IAEvB7jC,SAAU2H,EAAM3H,WAGf,GAAwB,WAApB2H,EAAMq9B,UAAwB,CAAC,IAChCzmB,EAAa5W,EAAb4W,SACR,OACE,gBAAC,IAAD,CACE7e,MAAOkkC,EAAcC,EAAWl8B,GAChC8f,IAAK9f,EAAMrH,KACXI,GAAIiH,EAAMrH,KACVzB,kBAAmBmlC,EAAcH,EAAWl8B,GAC5CvH,oBAAkB,EAClBd,mBAAoBslC,EAAoBj9B,GACxCvI,SAAU,SAAAwI,GACRi8B,EAAU7+B,SAAQ,SAAA/G,GAAC,OAAIsgB,EAAStgB,EAAGghC,WAAWr3B,IAAa,MAC3D88B,EAAqBb,IAEvBpkC,KAAK,SACL5C,MAAO6F,EAAOiF,MACd3H,SAAU2H,EAAM3H,WAGf,GAAwB,UAApB2H,EAAMq9B,UAAuB,CAAC,IAC/BzmB,EAAa5W,EAAb4W,SACR,OACE,gBAAC,IAAD,CACEkJ,IAAK9f,EAAMrH,KACXI,GAAIiH,EAAMrH,KACVzB,kBAAmBmlC,EAAcH,EAAWl8B,GAC5CrI,mBAAoBslC,EAAoBj9B,GACxCo3B,cAAY,EACZh+B,WAAS,EACThE,MAAO6mC,EAAcC,EAAWl8B,GAChCvI,SAAU,SAAArC,GACR,IAAM6kB,EACa,IAAjB7kB,EAAMsL,OAAe,GAAKga,YAAoBtlB,GAChD8mC,EAAU7+B,SAAQ,SAAA/G,GAAC,OAAIsgB,EAAStgB,EAAG2jB,MACnC8iB,EAAqBb,MAItB,GAAwB,aAApBl8B,EAAMq9B,UAA0B,CAAC,IAClCzmB,EAAa5W,EAAb4W,SACR,OACE,gBAAC,IAAD,CACEkJ,IAAK9f,EAAMrH,KACXI,GAAIiH,EAAMrH,KACVlB,SAAU,SAAA+H,GACR08B,EAAU7+B,SAAQ,SAAA/G,GAAC,OAAIsgB,EAAStgB,EAAGkJ,GAAQ,OAC3Cu9B,EAAqBb,IAEvBnkC,MAAOkkC,EAAcC,EAAWl8B,GAChC9I,kBAAmBmlC,EAAcH,EAAWl8B,GAC5CvH,oBAAkB,EAClBd,mBAAoBslC,EAAoBj9B,GACxC/G,WAAS,EACT/D,MAAO6F,EAAOiF,QAGZ,IACEs9B,EAAgCt9B,EAAhCs9B,kBAAmB1mB,EAAa5W,EAAb4W,SAC3B,OACE,gBAAC,IAAD,CACEkJ,IAAK9f,EAAMrH,KACX+a,gBAAiB,kBACf,gBAAC,IAAD,CACE3b,MAAOkkC,EAAcC,EAAWl8B,EAAO,qBACvCjH,GAAIiH,EAAMrH,KACVzB,kBAAmBmlC,EAAcH,EAAWl8B,GAC5CvH,oBAAkB,EAClBd,mBAAoBslC,EAAoBj9B,GACxCvI,SAAU,SAAAwI,GACRi8B,EAAU7+B,SAAQ,SAAA/G,GAAC,OAAIsgB,EAAStgB,EAAG2J,GAAY,OAC/C88B,EAAqBb,IAEvBhnC,MAAO6F,EAAOiF,MACd3H,SAAU2H,EAAM3H,YAGpBwc,aAAc,SAAA3f,GAAK,OACjBooC,EACE,gBAAC,IAAD,CACEpoC,MAAOA,EACPqP,SAAO,EACPlM,SAA+B,IAArB6jC,EAAUx7B,OACpBO,KAAM,gBAAC,IAAD,MACNvI,MAAO,gBAAC,QAAD,aACPsB,QAAS,kBAAMsjC,EAAkBpB,EAAU,OAE3C,UAMd,CAACA,EAAWe,EAAqBF,IAG7BQ,EAAoBxoC,eACxB,SAACiL,GACC,GAAKA,EAAMw9B,YAAex9B,EAAMo8B,SAAhC,CAEA,IAAMnnC,EAAW+K,EACdw9B,aACAl9B,KAAI,gBAAGvI,EAAH,EAAGA,MAAOW,EAAV,EAAUA,MAAV,OACH,gBAAC,IAAD,CAAconB,IAAK/nB,EAAOA,MAAOA,EAAOiJ,YAAatI,OAGzD,GAAwB,WAApBsH,EAAMq9B,UAAwB,CAAC,IACzBzmB,EAAa5W,EAAb4W,SACR,OACE,gBAAC,IAAD,CACE7e,MAAOkkC,EAAcC,EAAWl8B,GAChC8f,IAAK9f,EAAMrH,KACXzB,kBAAmBmlC,EAAcH,EAAWl8B,GAC5CrI,mBAAoBslC,EAAoBj9B,GACxCvI,SAAU,SAACQ,EAAOwlC,EAAOx9B,GACvBi8B,EAAU7+B,SAAQ,SAAA/G,GAAC,OAAIsgB,EAAStgB,EAAGghC,WAAWr3B,IAAa,MAC3D88B,EAAqBb,IAEvBhnC,MAAO6F,EAAOiF,MACd3H,SAAU2H,EAAM3H,UAEfpD,GAGA,GAAwB,WAApB+K,EAAMq9B,UAAwB,CAAC,IAChCzmB,EAAa5W,EAAb4W,SACR,OACE,gBAAC,IAAD,CACE7e,MAAOkkC,EAAcC,EAAWl8B,EAAO,qBACvC8f,IAAK9f,EAAMrH,KACXzB,kBAAmBmlC,EAAcH,EAAWl8B,GAC5CrI,mBAAoBslC,EAAoBj9B,GACxCvI,SAAU,SAACQ,EAAOwlC,EAAOx9B,GACvBi8B,EAAU7+B,SAAQ,SAAA/G,GAAC,OAAIsgB,EAAStgB,EAAG2J,GAAY,OAC/C88B,EAAqBb,IAEvBhnC,MAAO6F,EAAOiF,MACd3H,SAAU2H,EAAM3H,UAEfpD,OAKT,CAACinC,EAAWa,EAAsBE,IAG9BpoB,EAAe9f,eACnB,SAACiL,GACC,IAAI3H,GAAW,EACf,GAAuB,sBAAnB2H,EAAM3H,SAAkC,CAE1CA,EADyB,qBAEvB4jC,EAAcC,EAAWl8B,EAFF,oBAK3B,OACE,gBAAC,IAAD,CACE8f,IAAG,iBAAY9f,EAAMtH,OACrBU,WAAS,EACTmL,SAAO,EACPtD,KAAM,gBAAC,IAAD,MACN5I,SAAUA,EACVK,MAAOsH,EAAMtH,MACbsB,QAAS,WACPgG,EAAMhG,QAAQkiC,EAAU,SAKhC,CAACA,IA0CGwB,EACK,QAAThB,EACI,SAACiB,GAAD,OACE,gBAAC,IAAD,CAA2BpoC,UAAQ,GAChCooC,IAGL,SAACA,GAAD,OACE,gBAAC,IAAD,CAAmBpoC,UAAQ,GAAEooC,IAG/BC,EAAqB7oC,eACzB,SAACiL,GAAyB,IAGpB69B,EAAiB,KAErB,GAJqB79B,EAAbo8B,SAIM,CACZ,IAAI0B,EAAyB7B,EAC3BC,EACAl8B,EACAA,EAAMhI,cAAgB,mBAElB8lC,IAAwBD,EAAiBC,GAGjD,OAAMD,EAEF,gBAAC,IAAD,CAAM7iC,WAAW,WAAW8kB,IAAG,wBAAmB9f,EAAMrH,OACtD,gBAAC,IAAD,CAAMnD,qBAAmB,GAAEwK,EAAMrH,MACjC,gBAAC,IAAD,MACA,gBAAC,IAAD,CACEnD,qBAAmB,EACnBL,KAAK,SAFP,YAGO0oC,KAMX,gBAAC,IAAD,CAAM/d,IAAG,wBAAmB9f,EAAMrH,OAChC,gBAAC,IAAD,CAAMnD,qBAAmB,GAAEwK,EAAMrH,SAIvC,CAACujC,IAGH,OAAOwB,EACLjB,EAAOn8B,KAAI,SAAAN,GACT,GAAMA,EAAM+9B,aACV,MAA2B,iBAAvB/9B,EAAM+9B,aACDH,EAAmB59B,GACM,WAAvBA,EAAM+9B,aACRlpB,EAAa7U,GAEf,KACF,GAAIA,EAAM/K,SAAU,CACzB,GAAmB,QAAf+K,EAAMlI,KAAgB,CACxB,IAAMkmC,EACJ,gBAAC,IAAsB73B,SAAvB,CAAgC2Z,IAAK9f,EAAMrH,OACxC,SAAAikC,GAAc,OACb,gBAACL,EAAD,CACEhgC,QAASA,EACTk0B,gBAAiBA,EACjBnC,iBAAkBA,EAClB4C,wBAAyBA,EACzBuL,OAAQz8B,EAAM/K,SACdinC,UAAWA,EACXQ,KAAK,MACLE,eAAgBA,EAChBJ,oBAAqBA,OAK7B,OAAIx8B,EAAMrE,MACD,CACL,gBAAC,IAAD,CAAMmkB,IAAK9f,EAAMrH,KAAO,SAAUxD,KAAK,SACpC6K,EAAMrE,OAETqiC,GAGGA,EAGT,OACE,uBAAKle,IAAK9f,EAAMrH,MACd,gBAAC,IAAD,KAAYqH,EAAMrH,MAClB,uBAAKzD,MAAO6F,EAAOghC,8BACjB,gBAAC,IAAsB51B,SAAvB,CAAgC2Z,IAAK9f,EAAMrH,OACxC,SAAAikC,GAAc,OACb,gBAACL,EAAD,CACEhgC,QAASA,EACTk0B,gBAAiBA,EACjBnC,iBAAkBA,EAClB4C,wBAAyBA,EACzBuL,OAAQz8B,EAAM/K,SACdinC,UAAWA,EACXQ,KAAK,SACLE,eAAgBA,EAChBJ,oBAAqBA,SAO5B,MAAwB,aAApBx8B,EAAMq9B,UApJO,SAACr9B,GAC3B,IACGzD,IACAk0B,IACAnC,IACA4C,EAKD,OAHA1yB,QAAQrG,MACN,uOAEK,KAV2C,IAa5Cye,EAAa5W,EAAb4W,SACR,OACE,gBAAC,IAAD,CACEkJ,IAAK9f,EAAMrH,KACX4D,QAASA,EACTk0B,gBAAiBA,EACjBnC,iBAAkBA,EAClB4C,wBAAyBA,EACzB3B,gBAAiBtyB,IACjBwxB,aAAczuB,EAAMyuB,aACpBr1B,WAAS,EACTk3B,oBAAqB2L,EACnBC,EACAl8B,EACA,qBAEFvI,SAAU,SAAAwI,GACRi8B,EAAU7+B,SAAQ,SAAA/G,GAAC,OAAIsgB,EAAStgB,EAAG2J,MACnC88B,EAAqBb,IAEvBhlC,kBAAmBmlC,EAAcH,EAAWl8B,GAC5CrI,mBAAoBslC,EAAoBj9B,KAmHjCi+B,CAAoBj+B,GAEvBA,EAAMw9B,YAAcx9B,EAAMo8B,SAAiBmB,EAAkBv9B,GAC7DA,EAAMo8B,SAAiBgB,EAAiBp9B,GAEvC,W,0KChlBAk+B,EAAa,WAAqB,IAAD,EACAnpC,WAC1C,MAF0C,mBACrCopC,EADqC,KACrBC,EADqB,OAIFrpC,YACxC,kBAAM,IAAIspC,OALgC,mBAIrCC,EAJqC,KAItBC,EAJsB,KA8B5C,MAAO,CACLJ,iBACAC,kBAxBwCrpC,eACxC,SAACypC,GACC,GAAKA,EAGE,CAGL,IAHK,EAGCC,EAAmB,IAAIJ,IAHxB,cAIaC,EAAclS,QAJ3B,IAIL,2BAAwC,CAAC,IAA9B9S,EAA6B,QAClCklB,EAAkB5rB,KAAK8rB,gBAAgBrM,SAAS/Y,IAClDmlB,EAAiBlmB,IAAIe,IANpB,8BAULilB,EAAiBE,GACjBL,EAAkBI,QAZlBJ,EAAkB,QAetB,CAACE,IAMDA,gBACAK,UAAW,SAACrlB,GACV,IAAMmlB,EAAmB,IAAIJ,IAAIC,GACjCG,EAAiBlmB,IAAIe,GACrBilB,EAAiBE,IAEnBG,aAAc,SAACtlB,GACb,IAAMmlB,EAAmB,IAAIJ,IAAIC,GACjCG,EAAiBr0B,OAAOkP,GAExBilB,EAAiBE,MAiBVI,EAAiB,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,WAAY5mC,EAAmB,EAAnBA,MACzD,IAAK4mC,EACH,OAAO,gBAAC,IAAD,MAET,GAAI5mC,EAEF,OAAO,KAIT,IAAM6mC,EAAuBF,EAAaX,eACtCW,EAAaX,eAAevrB,KAAK8rB,gBACjCK,EAAWE,YAEf,OACE,gBAAC,IAAD,KACID,EAIEA,EAAqBt+B,OACvBs+B,EAAqB1+B,KAAI,SAAAgZ,GAAG,OAC1B,gBAAC,IAAD,CACEwG,IAAKxG,EACL5gB,OApCQwmC,EAoCU5lB,EAnCvB4lB,EAEEA,EAAI,GAAGC,cAAgBD,EAAIjvB,OAAO,GAFxB,IAoCP7G,QAAS01B,EAAaR,cAAc1C,IAAItiB,GACxCrQ,QAAS,WACH61B,EAAaR,cAAc1C,IAAItiB,GACjCwlB,EAAaF,aAAatlB,GAE1BwlB,EAAaH,UAAUrlB,MA1CpB,IAAC4lB,KAgDZ,gBAAC,IAAD,KACE,gBAAC,QAAD,sCApBF,gBAAC,IAAD,KACE,gBAAC,QAAD,iD,6BCtGV,WAuBME,EAAe,CACnBC,+BAAgC,KAChCC,qCAAsC,kBACpC/2B,QAAQC,OAAO,IAAIC,MAAM,oBAC3B82B,uCAAwC,aACxCC,uCAAwC,kBACtCj3B,QAAQC,OAAO,IAAIC,MAAM,oBAC3Bg3B,sCAAuC,aACvCC,kCAAmC,kBAAM,MACzCC,kCAAmC,kBAAM,MACzCC,mBAAoB,kBAAMr3B,QAAQC,OAAO,IAAIC,MAAM,oBACnDo3B,oBAAqB,iBAAO,KAGxBC,EAAmC/qC,gBACvCqqC,GAGaU,O,kUCmDFC,EAAwB,SACnCC,EACAC,GAFmC,OAInCA,EAAYC,iBACRC,IAAgBH,EAAYC,EAAYC,gBAAiB,CACvDE,mBAAmB,KAIdC,EAAgB,WAC3B,OAAO7f,IACJzO,IADI,UACGuuB,IAAiB3f,QADpB,WAEJT,MAAK,SAAAY,GAAQ,OAAIA,EAASC,QAC1Bb,MAAK,YAA2C,IAAxCqgB,EAAuC,EAAvCA,qBAAsB3b,EAAiB,EAAjBA,WAC7B,IAAK2b,IAAyB3b,EAC5B,MAAM,IAAInc,MAAM,mDAElB,OAAOF,QAAQsc,IAAI,CACjBrE,IAAMzO,IAAIwuB,GAAsBrgB,MAAK,SAAAY,GAAQ,OAAIA,EAASC,QAC1DP,IAAMzO,IAAI6S,GAAY1E,MAAK,SAAAY,GAAQ,OAAIA,EAASC,UAC/Cb,MAAK,yCAAmC,CACzCsgB,kBADM,KAENzb,QAFM,aAOD0b,EAAW,SACtBC,GAEA,OAAOlgB,IACJzO,IADI,UACGuuB,IAAiB3f,QADpB,kBACqC+f,EAAiB3nC,KAC1DmnB,MAAK,SAAAY,GAAQ,OAAIA,EAASC,QAC1Bb,MAAK,YAAmB,IAAhBygB,EAAe,EAAfA,SACP,IAAKA,EACH,MAAM,IAAIl4B,MAAM,gDAGlB,OAAO+X,IAAMzO,IAAI4uB,MAElBzgB,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlB6f,EAAmB,WAC9B,OAAOpgB,IACJzO,IADI,UACGuuB,IAAiB3f,QADpB,cAEJT,MAAK,SAAAY,GAAQ,OAAIA,EAASC,QAC1Bb,MAAK,YAAmC,IAAhC2gB,EAA+B,EAA/BA,aAAcjc,EAAiB,EAAjBA,WACrB,IAAKic,IAAiBjc,EACpB,MAAM,IAAInc,MAAM,mDAElB,OAAOF,QAAQsc,IAAI,CACjBrE,IAAMzO,IAAI8uB,GAAc3gB,MAAK,SAAAY,GAAQ,OAAIA,EAASC,QAClDP,IAAMzO,IAAI6S,GAAY1E,MAAK,SAAAY,GAAQ,OAAIA,EAASC,UAC/Cb,MAAK,yCAA2B,CACjCwO,UADM,KAEN3J,QAFM,aAOD+b,EAAiB,WAC5B,OAAOtgB,IACJzO,IADI,UACGuuB,IAAiB3f,QADpB,YAEJT,MAAK,SAAAY,GAAQ,OAAIA,EAASC,QAC1Bb,MAAK,YAAqB,IAAlB6gB,EAAiB,EAAjBA,WACP,IAAKA,EACH,MAAM,IAAIt4B,MAAM,6CAClB,OAAO+X,IAAMzO,IAAIgvB,MAElB7gB,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBigB,EAAkB,WAC7B,OAAOxgB,IACJzO,IADI,UACGuuB,IAAiB3f,QADpB,aAEJT,MAAK,SAAAY,GAAQ,OAAIA,EAASC,QAC1Bb,MAAK,YAAsB,IAAnB+gB,EAAkB,EAAlBA,YACP,IAAKA,EACH,MAAM,IAAIx4B,MAAM,8CAClB,OAAO+X,IAAMzO,IAAIkvB,MAElB/gB,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBmgB,EAAa,SAACR,GACzB,OAAOA,EAAiBhqB,KAAKyqB,MAAK,SAAA7nB,GAChC,MAA6B,cAAtBA,EAAI2E,mB,8FCpLTzU,EAAkBC,EAAOD,GAGzB43B,EAAqB,SAAApZ,GAAQ,OAChCA,EAASqK,SAAS,OAASrK,EAASqK,SAAS,MAAQrK,EAAStnB,OAAS,GAYrD2gC,E,oHAEjBtU,EACAxwB,GAEA,OACEiN,EAAG83B,sBAAsBC,uBAAuBxU,EAAUxwB,GACvDilC,oBACA5Z,YAEApnB,OAAO4gC,K,6CAKZrU,EACAxwB,EACAwuB,GAEA,OAAOvhB,EAAG83B,sBAAsBG,uBAC9BllC,EAAQgrB,qBACRhrB,EACAwuB,GAECyW,oBACA5Z,YACApnB,OAAO4gC,K,6CAIVrU,EACAxwB,EACAwuB,EACAhhB,GAEA,OAAOP,EAAG83B,sBAAsBI,uBAC9BnlC,EAAQgrB,qBACRhrB,EACAwuB,EACAhhB,GAECy3B,oBACA5Z,YACApnB,OAAO4gC,O,8RCtDR53B,EAAkBC,EAAOD,GAazBm4B,EAAwD,CAC5DC,cAAe,CACb,GAAI,CAAC,cAAe,SAAU,qBAI5BC,EAA2D,CAC/DD,cAAe,CACb,GAAI,CACF,cACA,kBACA,cACA,sBACA,uBACA,cACA,WACA,WACA,YACA,oBAKAE,EAA0D,GAE1DC,EAA6D,CACjEC,SAAU,CACR,6BAA8B,CAAC,yBAI7BC,EAA2B,CAC/BL,cAAc,YAKTC,EAA4BD,cAAc,KAE/CI,SAAS,YAEJD,EAA8BC,SAAS,gCAIjCE,EAAqB,SAACxa,GACjC,OAAOA,EAAUya,cAzDK,IAyD6Bza,EAAUO,eAUlDma,EAA8B,SACzCxZ,GAEA,IAAIyZ,GAAc,EAClB,OAAOzZ,EAAKpoB,QAAO,SAAA8hC,GACjB,GAAkC,WAA9BA,EAAqBxqC,KAAmB,CAC1C,GAAIuqC,EAAa,OAAO,EAExBA,GAAc,EAGhB,OAAO,MAILE,EAA6B,SACjC3Z,EACA4Z,GAEA,IAAMC,EAAQD,EACd,OAAKC,EAEE7Z,EAAKpoB,QAAO,SAAAiP,GAAQ,OAAsC,IAAlCgzB,EAAM1jC,QAAQ0Q,EAAS3X,SAFnC8wB,GAKf8Z,EAAqC,SACzCC,EACAjb,EACAkb,EACAh6B,EACA6I,GAEA,IAAMoxB,EAAgBnb,EAAUX,UAE1B+b,EAA8BH,EAChCZ,EAA8Bc,GAC9Bf,EAA2Be,GAC/B,IAAKC,EACH,MAAO,GAGT,IAAMC,EAA0BD,EAA4BF,GAC5D,IAAKG,EACH,MAAO,GAGT,IAAMC,EAAyBL,EAC3Bjb,EAAUub,mBACVvb,EAAUwb,gBAEd,OAAOH,EAAwBziC,KAAI,SAAAxI,GAAI,OACrCwqC,EAAqB15B,EAAQ9Q,EAAMkrC,EAAuBjxB,IAAIja,GAAO2Z,OAInE0xB,EAAmC,SACvCR,EACAjb,EACAG,EACAjf,EACA6I,GAEA,IAAMoxB,EAAgBnb,EAAUX,UAE1B+b,EAA8BH,EAChCd,EAA4BgB,GAC5BlB,EAAyBkB,GAC7B,IAAKC,EACH,MAAO,GAGT,IAAMC,EAA0BD,EAA4Bjb,GAC5D,IAAKkb,EACH,MAAO,GAGT,IAAMC,EAAyBL,EAC3Bjb,EAAUub,mBACVvb,EAAUwb,gBAEd,OAAOH,EAAwBziC,KAAI,SAAAxI,GAAI,OACrCwqC,EAAqB15B,EAAQ9Q,EAAMkrC,EAAuBjxB,IAAIja,GAAO2Z,OAInE6wB,EAAuB,SAC3B15B,EACA9Q,EACAsrC,EACA3xB,GAEA,IAAM4xB,EAAgBD,EAAcnb,cAC9Be,EAAYoa,EAAcE,WAC1Bpb,EAAekb,EAAcjb,kBAKnC,MAAO,CACLrwB,OACA2X,SAAU2zB,EACVlb,eACAmb,gBACAE,cAToB,CAAC36B,EAAQogB,GAC5BxoB,OAAO0R,SACPlE,KAnKmB,KA2KpByD,QACA+xB,UAAWJ,EAAcI,cAIvBC,EAAiC,SACrC76B,EACA86B,EACAjyB,GAOA,IAJA,IAAMkyB,EAAoBD,EAAatX,OACjCwX,EAAkB,GAGfC,EAAI,EAAGA,EAAIF,EAAkBxuC,SAAU0uC,EAAG,CACjD,IAAM/rC,EAAO6rC,EAAkB9sC,GAAGgtC,GAC5BT,EAAgBM,EAAa3xB,IAAIja,GACnCsrC,EAAcU,aAGhBryB,EAAMsW,gBACNtW,EAAMsW,eAAegc,kCACnBX,EAAcY,oCAKlBJ,EAAgBrtC,KACd+rC,EAAqB15B,EAAQ9Q,EAAMsrC,EAAe3xB,KAItD,OAAOmyB,GAMIK,EAA2B,SACtCtB,GAOA,IALA,IAAIiB,EAAkB,GAEhBM,EAAgB16B,EACnB26B,WAAW36B,EAAGsI,WAAWC,OACzByV,2BACMlxB,EAAI,EAAGA,EAAI4tC,EAAc/uC,SAAUmB,EAAG,CAC7C,IAAMoxB,EAAYwc,EAAcrtC,GAAGP,GAC7BusC,EAAgBnb,EAAUX,UAC1Bqd,EAAkB1c,EAAUC,2BAC5B0c,EAAoB3c,EAAU4c,oBAC9B17B,EAASs5B,EAAmBxa,GAG5B6c,EAA4Bd,EAChC76B,EACA+5B,EAAcjb,EAAUub,mBAAqBvb,EAAUwb,gBACvD,CACExb,YACAK,oBAAgBnyB,EAChB4uC,sBAAkB5uC,IAGtBguC,EAAe,sBACVA,GADU,YAEVrB,EACDgC,EACAtC,EAAyBY,MAK7B,IAAK,IAAIgB,EAAI,EAAGA,EAAIO,EAAgBjvC,SAAU0uC,EAAG,CAC/C,IAAMhc,EAAauc,EAAgBvtC,GAAGgtC,GAChC9b,EAAiBL,EAAUI,kBAAkBD,GAC7CpW,EAAQ,CAAEiW,YAAWK,kBAC3B6b,EAAe,sBACVA,GADU,YAEVH,EACD76B,EACA+5B,EACIjb,EAAU+c,0BAA0B5c,GACpCH,EAAUgd,uBAAuB7c,GACrCpW,IAPW,YASV0xB,EACDR,EACAjb,EACAG,EACAjf,EACA6I,KAMN,IAAK,IAAIoyB,EAAI,EAAGA,EAAIQ,EAAkBlvC,SAAU0uC,EAAG,CACjD,IAAMjB,EAAeyB,EAAkBxtC,GAAGgtC,GACpCW,EAAmB9c,EAAUid,oBAAoB/B,GACjDnxB,EAAQ,CAAEiW,YAAW8c,oBAE3BZ,EAAe,sBACVA,GADU,YAEVH,EACD76B,EACA+5B,EACIjb,EAAUkd,4BAA4BhC,GACtClb,EAAUmd,yBAAyBjC,GACvCnxB,IAPW,YASVixB,EACDC,EACAjb,EACAkb,EACAh6B,EACA6I,MAMR,OAAOmyB,GAqBIkB,EAA0C,SACrDnC,EACArxB,EACAC,EACAiQ,GAEA,IAAIoiB,EAAkB,GAEhB/b,EAAqBre,EAAGsd,gBAC5BxV,EACAC,EACAiQ,GACA,GAEIujB,EAAqCv7B,EACxCw7B,qBACC1zB,EACAC,EACAiQ,GACA,GAEDoG,YACGqd,EAAsB,IAAI5G,IAC9B0G,EAAoBzkC,KAAI,SAAA4kC,GAAY,OAClC17B,EAAG27B,kBACD7zB,EACAC,EACA2zB,GACA,OAMAE,EAA6B57B,EAAG67B,iBAAiBC,8BACrD97B,EAAGsI,WAAWC,MACd8V,GAEIH,EAAY0d,EAA2BG,eAEvC9zB,EAAQ,CAAEiW,YAAWK,eADJqd,EAA2B1V,eAIlDkU,EAAe,sBACVA,GADU,YAEVH,EAJU,GAMXd,EACIjb,EAAU+c,0BAA0B5c,GACpCH,EAAUgd,uBAAuB7c,GACrCpW,IAPW,YASV0xB,EACDR,EACAjb,EACAG,EAdW,GAgBXpW,KAMJ,GADuB,KACnBoW,EAA+B,CACjC,IAIM2d,EAJiCh8B,EAAG67B,iBAAiBC,8BACzD97B,EAAGsI,WAAWC,MAHK,IAMsCwzB,eAE3D3B,EAAe,sBACVA,GADU,YAEVH,EA/BQ,GAiCTd,EACI6C,EAAoBf,0BAbP,IAcbe,EAAoBd,uBAdP,IAejBjzB,IAPW,YASV0xB,EACDR,EACA6C,EAnBiB,GArBR,GA2CT/zB,KASN,IAHA,IAAMyyB,EAAgB16B,EACnB26B,WAAW36B,EAAGsI,WAAWC,OACzByV,2BAvFsC,WAwFhClxB,GACP,IAAMoxB,EAAYwc,EAAcrtC,GAAGP,GACboxB,EACnB4c,oBACA1c,YACApnB,QAAO,SAAAoiC,GAAY,OAAIqC,EAAoBrJ,IAAIgH,MAGpCvlC,SAAQ,SAAAulC,GACpB,IAAM4B,EAAmB9c,EAAUid,oBAAoB/B,GACjDnxB,EAAQ,CAAEiW,YAAW8c,oBAG3BZ,EAAe,sBACVH,EAlEM,GAoEPd,EACIjb,EAAUkd,4BAA4BhC,GACtClb,EAAUmd,yBAAyBjC,GACvCnxB,IANW,YAQVixB,EACDC,EACAjb,EACAkb,EA5EO,GA8EPnxB,IAbW,YAeVmyB,QA5BAttC,EAAI,EAAGA,EAAI4tC,EAAc/uC,SAAUmB,EAAI,EAAvCA,GAiCT,OAhJyC,SACzCstC,GAEA,IAAM6B,EAAsB7B,EAAgBpjC,QAC1C,SAAAohB,GAAmB,OAAiD,IAA7CA,EAAoB2hB,cAAc7iC,UAErDglC,EAAyB9B,EAAgBpjC,QAC7C,SAAAohB,GAAmB,OAAiD,IAA7CA,EAAoB2hB,cAAc7iC,UAG3D,MAAM,GAAN,mBAAW+kC,GAAX,YAAmCC,IAsI5BC,CAAmC/B,IAO/BgC,EAA4B,SACvCjD,GAOA,IALA,IAAIkD,EAAsB,GAEpB3B,EAAgB16B,EACnB26B,WAAW36B,EAAGsI,WAAWC,OACzByV,2BACMlxB,EAAI,EAAGA,EAAI4tC,EAAc/uC,SAAUmB,EAAG,CAC7C,IAAMoxB,EAAYwc,EAAcrtC,GAAGP,GAC7BusC,EAAwBnb,EAAUX,UAClCne,EAASs5B,EAAmBxa,GAG5B6c,EAA4Bd,EAChC76B,EACA+5B,EAAcjb,EAAUub,mBAAqBvb,EAAUwb,gBACvD,CACExb,YACAK,oBAAgBnyB,EAChB4uC,sBAAkB5uC,IAGtBiwC,EAAmB,sBACdA,GADc,YAEdtD,EACDgC,EACAtC,EAAyBY,MAK/B,OAAOgD,GAOIC,EAA0B,SACrClkB,GAEA,IAAMmkB,EAAkBnkB,EAAoBO,qBAC5C,GAAI4jB,GAAmB,EAAG,CACxB,IAAMC,EAAqBpkB,EAAoBQ,aAAa,GAAGwI,UAC/D,GAA2B,WAAvBob,EAEF,OAAO,EAET,GAAIx8B,EAAGy8B,kBAAkBC,SAASF,GAIhC,OAAO,EAGT,IACyB,mBAAvBA,GACuB,iBAAvBA,IAEID,GAAmB,EAAG,CACxB,IAAMI,EAAsBvkB,EACzBQ,aAAa,GACbwI,UACH,GAAIphB,EAAGy8B,kBAAkBC,SAASC,GAKhC,OAAO,GAMf,OAAQ,K,2fChhBJ38B,EAAKC,EAAOD,GAUL48B,EAAqB,SAChCr8B,EACAs8B,EACAC,EACAC,GAEA,IAAMC,EAAoBH,EAAiBt8B,EAAO08B,qBAC5CxqB,EAAYuqB,EACdz8B,EAAO28B,aAAaL,GACpB,KACEM,IACF1qB,GAAaqqB,EAAiBrqB,EAAU2qB,qBACtCC,EAAYF,EACd1qB,EAAU6qB,aAAaR,GACvB,KACES,IACFF,GAAaN,EAAcM,EAAUG,kBACnCC,EAASF,EAAiBF,EAAUK,UAAUX,GAAe,KAEnE,MAAO,CACLC,oBACAvqB,YACA0qB,oBACAE,YACAE,iBACAE,WAQSE,EAAmB,SAAAp9B,GAE9B,IADA,IAAMq9B,EAAgB,IAAI/I,IAEpBgI,EAAiB,EACrBA,EAAiBt8B,EAAO08B,qBACxBJ,IAGA,IADA,IAAMpqB,EAAYlS,EAAO28B,aAAaL,GAEhCC,EAAiB,EACrBA,EAAiBrqB,EAAU2qB,qBAC3BN,IAGA,IADA,IAAMO,EAAY5qB,EAAU6qB,aAAaR,GAEnCC,EAAc,EAClBA,EAAcM,EAAUG,kBACxBT,IAKA,IAHA,IAAMc,EAASR,EACZK,UAAUX,GACVe,yBACMC,EAAa,EAAGA,EAAaF,EAAOlyC,OAAQoyC,IAAc,CACjE,IAAMC,EAAQH,EAAOxwC,GAAG0wC,GACxBH,EAAc7uB,IAAIivB,EAAMzgB,WAKhC,OAAO,YAAIqgB,IAGAK,EAAY,SAACC,EAAeC,GACvCA,EAAiBC,KAAKF,EAAcG,QACpCF,EAAiBG,KAAKJ,EAAcK,QACpCJ,EAAiB7V,QAAQ4V,EAAc3gB,YAG5BihB,EAAmB,SAACC,EAAgBC,GAC3CD,EAAexrC,MAAQyrC,EAAkBzrC,MAE7CgrC,EAAUQ,EAAeE,YAAaD,EAAkBC,aACxDV,EAAUQ,EAAeG,YAAaF,EAAkBE,aACxDF,EAAkBG,sBAChBJ,EAAeK,wBAGjBJ,EAAkBZ,yBAAyBiB,QAC3C5xC,oBAAUsxC,EAAeX,0BAA0B,SAAAI,GACjDQ,EAAkBM,SAASd,QAIlBe,EAA6B,SAACR,EAAgBhsB,GACzDhmB,iBAAO,EAAGgmB,EAAU2qB,sBAAsB,SAAAtwC,GACxC,IAAMuwC,EAAY5qB,EAAU6qB,aAAaxwC,GAEzCL,iBAAO,EAAG4wC,EAAUG,mBAAmB,SAAAnD,GACrC,IAAMoD,EAASJ,EAAUK,UAAUrD,GACnCmE,EAAiBC,EAAgBhB,UAK1ByB,EAAc,SAACC,EAAQC,GAClC,OACED,EAAOd,SAAWe,EAAOf,QACzBc,EAAOZ,SAAWa,EAAOb,QACzBY,EAAO5hB,YAAc6hB,EAAO7hB,WA4BnB8hB,EAAsC,SACjDZ,EACApB,GAEA,OAAOiC,IACL7yC,iBAAO,EAAG4wC,EAAUG,mBAAmB,SAAAnD,GACrC,IA9ByBkF,EAASC,EA8B5B/B,EAASJ,EAAUK,UAAUrD,GACnC,OA/BkCmF,EA+BJf,IA9B7BS,GADwBK,EA+BH9B,GA9BDkB,YAAaa,EAAQb,gBACzCO,EAAYK,EAAQX,YAAaY,EAAQZ,cAC1CW,EAAQT,yBAA2BU,EAAQV,wBAI7CS,EAAQzB,yBAAyBnyC,SACjC6zC,EAAQ1B,yBAAyBnyC,QAI5B2zC,IACLnyC,oBAAUoyC,EAAQzB,0BAA0B,SAAA2B,GAC1C,QAAKD,EAAQE,SAASD,EAAaliB,YAE5B2hB,EACLO,EACAD,EAAQG,SAASF,EAAaliB,qBAkBzBqiB,EAA6B,SAACnB,EAAgBhsB,GACzD,OAAO6sB,IACL7yC,iBAAO,EAAGgmB,EAAU2qB,sBAAsB,SAAAtwC,GACxC,IAAMuwC,EAAY5qB,EAAU6qB,aAAaxwC,GACzC,OAAOuyC,EAAoCZ,EAAgBpB,QAKpDwC,EAAqB,SAACpB,EAAgBC,GAC7CD,EAAexrC,MAAQyrC,EAAkBzrC,MAE7CyrC,EAAkBoB,0BAChBrB,EAAesB,4BAGjBrB,EAAkBsB,yBAAyBjB,QAC3C5xC,oBAAUsxC,EAAeuB,0BAA0B,SAAAC,GACjDvB,EAAkBsB,yBAAyBE,UAAUD,QAI5CE,EAAqC,SAChD1B,EACAhsB,GAEAhmB,iBAAO,EAAGgmB,EAAU2qB,sBAAsB,SAAAtwC,GACxC,IAAMuwC,EAAY5qB,EAAU6qB,aAAaxwC,GAEzCL,iBAAO,EAAG4wC,EAAUG,mBAAmB,SAAAnD,GACrC,IAAMoD,EAASJ,EAAUK,UAAUrD,GACnCwF,EAAmBpB,EAAgBhB,UAqB5B2C,EAAyB,SAACb,EAASC,GAC9C,GAAID,EAAQQ,6BAA+BP,EAAQO,2BACjD,OAAO,EAET,GAAIR,EAAQQ,4BAA8BP,EAAQO,2BAChD,OAAO,EAET,IAAMM,EAAuBd,EAAQS,yBAC/BM,EAAuBd,EAAQQ,yBAErC,OAAIK,EAAqB10C,SAAW20C,EAAqB30C,QAElD2zC,IACLnyC,oBAAUkzC,GAAsB,SAACE,EAAgBtM,GAC/C,OA9BuB,SAACuM,EAAUC,GACtC,IAAMC,EAAmBF,EAASG,cAC5BC,EAAmBH,EAASE,cAElC,OAAID,EAAiB/0C,SAAWi1C,EAAiBj1C,QAE1C2zC,IACLnyC,oBAAUuzC,GAAkB,SAACvB,EAAQlL,GACnC,IAAMmL,EAASwB,EAAiBvzC,GAAG4mC,GACnC,OACEkL,EAAO0B,UAAYzB,EAAOyB,SAAW1B,EAAO2B,UAAY1B,EAAO0B,YAoB1DC,CAAcR,EAAgBD,EAAqBjzC,GAAG4mC,SAKtD+M,EAA8C,SACzDvC,EACApB,GAEA,OAAOiC,IACL7yC,iBAAO,EAAG4wC,EAAUG,mBAAmB,SAAAnD,GACrC,IAAMoD,EAASJ,EAAUK,UAAUrD,GACnC,OAAO+F,EAAuB3C,EAAQgB,QAK/BwC,EAAqC,SAChDxC,EACAhsB,GAEA,OAAO6sB,IACL7yC,iBAAO,EAAGgmB,EAAU2qB,sBAAsB,SAAAtwC,GACxC,IAAMuwC,EAAY5qB,EAAU6qB,aAAaxwC,GACzC,OAAOk0C,EACLvC,EACApB,QAMK6D,EAA6B,SAACzuB,EAAW0uB,GACpD10C,iBAAO,EAAGgmB,EAAU2qB,sBAAsB,SAAAtwC,GAUxC,IATA,IAAMuwC,EAAY5qB,EAAU6qB,aAAaxwC,GAEnCs0C,EAAkB30C,iBAAO,EAAG4wC,EAAUG,mBAAmB,SAAAnD,GAC7D,IAAMoD,EAASJ,EAAUK,UAAUrD,GAEnC,QAAS8G,EAAW1D,EAAOxqC,QAKvB8pC,EAAcM,EAAUG,kBAAoB,EAChDT,GAAe,EACfA,IAEIqE,EAAgBrE,IAAcM,EAAUgE,aAAatE,OAKlDuE,EAA8B,SAAC7uB,EAAW0uB,GACrD10C,iBAAO,EAAGgmB,EAAU2qB,sBAAsB,SAAAtwC,GAUxC,IATA,IAAMuwC,EAAY5qB,EAAU6qB,aAAaxwC,GAEnCy0C,EAAqB90C,iBAAO,EAAG4wC,EAAUG,mBAAmB,SAAAnD,GAChE,IAAMoD,EAASJ,EAAUK,UAAUrD,GAEnC,QAAS8G,EAAW1D,EAAOxqC,QAKvB8pC,EAAcM,EAAUG,kBAAoB,EAChDT,GAAe,EACfA,IAEA,GAAIwE,EAAmBxE,GAAc,CACnC,IAAMyE,EAAoBnE,EAAUK,UAAUX,GACxC0E,EAAY,IAAIzhC,EAAG2gB,OACzB8gB,EAAUC,aAAaF,EAAkBG,gBACzCnD,EAAiBgD,EAAmBC,GACpC5B,EAAmB2B,EAAmBC,GAEtCpE,EAAUuE,UAAUH,GACpBpE,EAAUwE,WAAWxE,EAAUG,kBAAoB,EAAGT,U,+CCvS9D,kEA0BMtY,EAAsB,WAC1B,MAAM,IAAIxlB,MACR,kEAIE1N,EAAS,CACbuwC,WAAY,CAAE9wC,KAAM,IAgDP+wC,IAzCmB,SAACx0C,GAAkB,IAC3C0M,EAA+D1M,EAA/D0M,kBAAmBzJ,EAA4CjD,EAA5CiD,QAAStB,EAAmC3B,EAAnC2B,MAAO6L,EAA4BxN,EAA5BwN,QAAStD,EAAmBlK,EAAnBkK,KAAM5I,EAAatB,EAAbsB,SAQ1D,OACE,gBAAC,IAAD,CACE3C,QAAQ,YACRN,MAAOmP,EAAU,UAAY,UAC7BlM,SAAUA,EACVlD,KAAK,QACLD,MAAO6B,EAAM7B,OAEb,gBAAC,IAAD,CACEs2C,aAXc,EAYdxxC,QAASA,EACT9E,MAAO6F,EAAOuwC,YAEbrqC,EACAA,GAAQ,gBAAC,IAAD,MACRvI,GAEH,gBAAC,IAAD,CACE+c,gBACE,EAEF9R,QACE,gBAAC,IAAD,CAAQ3J,QAASi0B,EAAqBud,aAxB1B,GAyBV,gBAAC,IAAD,OAGJ/nC,kBAAmBA,O,8BC1E3B,0RAaM+F,EAAkBC,EAAOD,GA4BzBiiC,EAAa,SAAC9yC,GAClB,OAAO+yC,YAAkB/yC,EAAM,IAAK,KAIhCgzC,EAA+B,SACnCC,EACAC,GAEA,OAAOA,EAAsB,KAAOJ,EAAWG,EAAe7kB,YAcnDuY,EAAuC,SAClD/iC,EACAuvC,EACAj0C,GAEA,OAAO0Q,QAAQsc,IAKb5uB,iBAAO,EAAGsG,EAAQwvC,qCAAqC,SAAAz1C,GACrD,OAAO01C,EACLzvC,EACAA,EAAQ0vC,8BAA8B31C,GACtC,CAAE41C,oBAAoB,EAAMJ,2BAA0Bj0C,aAG1DqoB,MAAK,kBACL3X,QAAQsc,IAEN5uB,iBAAO,EAAGsG,EAAQwvC,qCAAqC,SAAAz1C,GACrD,OAAO01C,EACLzvC,EACAA,EAAQ0vC,8BAA8B31C,GACtC,CACE41C,oBAAoB,EACpBJ,2BACAj0C,iBAQNm0C,EAAsC,SAC1CzvC,EACA4vC,EACAjtC,GAEA,OAAOktC,EACL7vC,EACA4vC,EACAjtC,GACAghB,MAAK,SAAAwH,GACLle,EAAGsI,WAAWC,MAAMs6B,gBAAgB3kB,GACpCA,EAAUtd,aAkCRgiC,EAAkC,SACtC7vC,EACA4vC,EACAjtC,GAEA,IAAMwoB,EAAY,IAAIle,EAAG8iC,kBACzBC,YAAiB7kB,EAAWykB,GAE5B,IAAMN,EACJ,iBAAmBJ,EAAWU,EAAyBplB,WAQnDylB,EAAwB,CAC5BX,sBACAY,sBA7C6B,SAC/BlwC,EACA4vC,EACAjtC,EACA2sC,GAEA,OAAO51C,iBAAO,EAAGk2C,EAAyBO,2BAA2B,SAAAp2C,GACnE,IAAMs1C,EAAiBO,EAAyBQ,oBAAoBr2C,GAEpE,GAAIs2C,YAAmChB,EAAe7kB,WAAY,CAChE,IAIM8lB,EAJgBlB,EACpBC,EACAC,GAEmC,QAErC,OAAO3sC,EAAQ4sC,yBAAyBgB,kBAAkBD,GAG5D,OAAO,QACNrsC,OAAO0R,SAiBoB66B,CAC5BxwC,EACA4vC,EACAjtC,EACA2sC,IAOF,OAAOtjC,QAAQsc,IAEbluB,oBACEw1C,EAAyBa,2BACzB,SAAAC,GACE,OAkHR,SACE1wC,EACAmrB,EACAykB,EACAc,EACA/tC,EACAstC,GAEA,IAAMhI,EAAmB0I,YACvBxlB,EACAulB,GAGIE,EAA2BF,EAAoBG,qBAC/CC,EArPiC,SACvCJ,EACApB,GAEA,OAAOA,EAAsB,KAAOJ,EAAWwB,EAAoBlmB,WAiP7CumB,CACpBL,EACAT,EAAsBX,qBAElB0B,EAAcruC,EAAQ4sC,yBAAyBgB,kBACnDO,GAUF,OAPA7I,EAAiBgJ,eAAeD,GAGhCf,EAAsBC,sBAAsBpvC,SAAQ,SAAAkwC,GAClD/I,EAAiBiJ,eAAeF,MAG3BhlC,QAAQhK,UAAU2hB,MAAK,WAC5B,IAAMwtB,EAA6B,IAAIlkC,EAAGmkC,gBA2C1C,GAxCAC,YACE1uC,EAAQrH,KACR6vB,EACA8c,EACAyI,GAIFh3C,iBAAO,EAAGk3C,EAAyBT,2BAA2B,SAAAp2C,GAC5D,IAAMs1C,EAAiBuB,EAAyBR,oBAAoBr2C,GAE9Du3C,EAA4BpC,EAAWG,EAAe7kB,WAC5D2mB,EAA2BI,IACzBlC,EAAe7kB,UACf8mB,GAGF,IAAME,EAA0BC,YAC9BtmB,EACA8c,EACAyI,EACArB,GAEFqC,YAAgCrC,EAAgBmC,GAI5CG,YAAkCtC,EAAe7kB,YACnDgnB,EAAwBI,YAGtBvC,EAAepI,aAAauK,EAAwBK,aAE3BL,EAAwBM,0BAElDb,eAAeD,GACfe,gBAAgBT,MAIhB3uC,EAAQgtC,mBAqCX,OADAwB,EAA2BtjC,SACpB7B,QAAQhK,UApCf,IAAMgwC,EAAe,IAAI/kC,EAAGglC,UACtBC,EAAwB,IAAIjlC,EAAGklC,sBAAsBnyC,GACrDs8B,EAAO4V,EAAsBE,oCACjCxC,EAAyBplB,UACzBkmB,EACAI,EACAK,EACAa,GAKA,GAiBF,OAfAE,EAAsBrkC,SACtBsjC,EAA2BtjC,SAK3BmkC,EACG/M,oBACA5Z,YACAvqB,SAAQ,SAACkwC,GACR/I,EAAiBiJ,eAAeF,MAGpCgB,EAAankC,SAENlL,EAAQ4sC,yBAAyB8C,kBACtCvB,EACAxU,MA3NOgW,CACLtyC,EACAmrB,EACAykB,EACAc,EACA/tC,EACAstC,OAKLtsB,MAAK,kBAEJ3X,QAAQsc,IACN5uB,iBAAO,EAAGk2C,EAAyBO,2BAA2B,SAAAp2C,GAC5D,IAAMs1C,EAAiBO,EAAyBQ,oBAC9Cr2C,GAEF,OAAOw4C,EACLvyC,EACAmrB,EACAykB,EACAP,EACA1sC,EACAstC,UAKPtsB,MAAK,kBAAMwH,MAGVonB,EAAuB,SAC3BvyC,EACAmrB,EACAykB,EACAP,EACA1sC,EACAstC,GAEA,IAAMuB,EAA0BgB,YAC9BrnB,EACAykB,EACAP,GAGFmC,EAAwBiB,qBAAqB,eAAgB,IAC7Df,YAAgCrC,EAAgBmC,GAI5CnB,YAAmChB,EAAe7kB,YACpDgnB,EAAwBI,YAEtBvC,EAAepI,aAAauK,EAAwBK,aAExD,IAAMf,EAAgB1B,EACpBC,EACAY,EAAsBX,qBAElBgB,EAAeQ,EAAgB,QAE/B4B,EAAuBlB,EAAwBM,0BAYrD,GAXAY,EACGzB,eACCtuC,EAAQ4sC,yBAAyBgB,kBAAkBD,IAEpDyB,gBAAgBzB,GAGnBL,EAAsBC,sBAAsBpvC,SAAQ,SAAAkwC,GAClD0B,EAAqBxB,eAAeF,MAGjCruC,EAAQgtC,mBAoCX,OAAO3jC,QAAQhK,UAnCf,IAAMgwC,EAAe,IAAI/kC,EAAGglC,UAItB3V,EAHwC,IAAIrvB,EAAG0lC,sCACnD3yC,GAEiD4yC,uCACjDvD,EACAyB,EACAkB,GAIA,GAeF,OATAA,EACG/M,oBACA5Z,YACAvqB,SAAQ,SAACkwC,GACR0B,EAAqBxB,eAAeF,MAGxCgB,EAAankC,SAENlL,EAAQ4sC,yBAAyBsD,kBACtCvC,EACAhU,IAiIC,IAAM0G,EAAyC,SACpDhjC,GAEA,OAAOgM,QAAQsc,IACb5uB,iBAAO,EAAGsG,EAAQwvC,qCAAqC,SAAAz1C,GACrDkT,EAAGsI,WAAWC,MAAMs9B,gBAClB9yC,EAAQ0vC,8BAA8B31C,GAAGywB,gBASpC0Y,EAAwC,SACnDljC,EACAsmC,GAEAr5B,EAAGsI,WAAWC,MAAMs9B,gBAAgBxM,IAOzByM,EAA4B,SACvCvB,GAEA,IAAMhI,EAAkBgI,EAAwB5rB,qBAChD,QAAI4jB,GAAmB,IAIrB,0BADAgI,EAAwB3rB,aAAa2jB,EAAkB,GAAGnb,WASjD2kB,EAA0B,SAACz3C,GACtC,IAAM03C,EAAQ13C,EAAKsiB,MAAM,MACzB,OAAKo1B,EAAM9uC,OAOJ,CACL/H,KAAM62C,EAAMA,EAAM9uC,OAAS,GAC3BwkC,aAAcsK,EAAM9uC,OAAS,EAAI8uC,EAAM,QAAK55C,EAC5CitC,cAAe2M,EAAM,IATd,CACL72C,KAAM,GACNusC,aAAc,GACdrC,cAAe,KAcR4M,EAA4B,SACvC5M,EACA+I,GAEA,OAAO/I,EAAgB,KAAO+I,EAAe7kB,WAQlC2oB,EAA2B,SACtCC,GAEA,OAAOA,EACH,EACA,K,gHCxdeC,E,WAQnB,cAMW,IAAD,OALRC,EAKQ,EALRA,aACAC,EAIQ,EAJRA,aACAv1C,EAGQ,EAHRA,MACA2G,EAEQ,EAFRA,OACA6uC,EACQ,EADRA,wBACQ,yBAbVC,MAAgB,EAaN,KAZVC,MAAgB,EAYN,KARVvZ,eAAiB,IAAI7M,YAQX,KA4BVqmB,mBAAqB,SAACC,EAAWC,GAC/BD,GAAK,EAAKE,OAAS,EACnBD,GAAK,EAAKE,QAAU,EACpBH,GAAKviC,KAAK2iC,IAAI,EAAKR,wBAAwBS,YAC3CJ,GAAKxiC,KAAK2iC,IAAI,EAAKR,wBAAwBS,YAE3C,IACIC,EAAMN,EAQV,OAPAA,EACEviC,KAAK8iC,IAAKC,EAAsB/iC,KAAKgjC,IAAMT,EAC3CviC,KAAKijC,IAAKF,EAAsB/iC,KAAKgjC,IAAMR,EAC7CA,EACExiC,KAAKijC,IAAKF,EAAsB/iC,KAAKgjC,IAAMH,EAC3C7iC,KAAK8iC,IAAKC,EAAsB/iC,KAAKgjC,IAAMR,EAEtC,CAACD,EAAI,EAAKH,MAAOI,EAAI,EAAKH,QA3CzB,KAkDVa,oBAAsB,SAACX,EAAWC,GAChCD,GAAK,EAAKH,MACVI,GAAK,EAAKH,MAEV,IACIQ,EAAMN,EAWV,OAVAA,EACEviC,KAAK8iC,KAAKC,EAAsB/iC,KAAKgjC,IAAMT,EAC3CviC,KAAKijC,KAAKF,EAAsB/iC,KAAKgjC,IAAMR,EAC7CA,EACExiC,KAAKijC,KAAKF,EAAsB/iC,KAAKgjC,IAAMH,EAC3C7iC,KAAK8iC,KAAKC,EAAsB/iC,KAAKgjC,IAAMR,EAE7CD,GAAKviC,KAAK2iC,IAAI,EAAKR,wBAAwBS,YAC3CJ,GAAKxiC,KAAK2iC,IAAI,EAAKR,wBAAwBS,YAEpC,CAACL,EAAI,EAAKE,OAAS,EAAGD,EAAI,EAAKE,QAAU,IAjEhDj5C,KAAK24C,MAAQH,EACbx4C,KAAK44C,MAAQH,EACbz4C,KAAK04C,wBAA0BA,EAC/B14C,KAAK05C,OAAOx2C,EAAO2G,G,uEAGM6uC,GACzB14C,KAAK04C,wBAA0BA,I,6BAG1Bx1C,EAAe2G,GACpB7J,KAAKg5C,OAAS91C,EACdlD,KAAKi5C,QAAUpvC,I,iCAIf,OAAO7J,KAAKg5C,S,kCAIZ,OAAOh5C,KAAKi5C,U,+BAgDLH,EAAWC,GAClB/4C,KAAK24C,OAASG,EACd94C,KAAK44C,OAASG,I,+BAGPD,EAAWC,GAClB/4C,KAAK24C,MAAQG,EACb94C,KAAK44C,MAAQG,I,uCAGEplB,GACf3zB,KAAK24C,MAAQhlB,EAAS6c,OACtBxwC,KAAK44C,MAAQjlB,EAAS+c,S,iCAItB,OAAO1wC,KAAK24C,Q,iCAIZ,OAAO34C,KAAK44C,Q,yCAIZ,OAAO54C,KAAKq/B,iB,+BAIZr/B,KAAKq/B,eAAep8B,SAAS61C,GAC1B94C,KAAK24C,MAAQ34C,KAAK04C,wBAAwBS,WAC7Cn5C,KAAKq/B,eAAep8B,SAAS81C,GAC1B/4C,KAAK44C,MAAQ54C,KAAK04C,wBAAwBS,WAC7Cn5C,KAAKq/B,eAAep8B,SAAS61C,GAAK94C,KAAKg5C,OAAS,EAChDh5C,KAAKq/B,eAAep8B,SAAS81C,GAAK/4C,KAAKi5C,QAAU,EACjDj5C,KAAKq/B,eAAesa,MAAMb,EAAI94C,KAAK04C,wBAAwBS,WAC3Dn5C,KAAKq/B,eAAesa,MAAMZ,EAAI/4C,KAAK04C,wBAAwBS,e,sCCjI/D,6BAiBMS,EAAcl8C,cAAoC,SAACgC,EAAc/B,GAAS,IAE5EgmB,EAMEjkB,EANFikB,IACA1f,EAKEvE,EALFuE,QACAC,EAIExE,EAJFwE,kBACAlD,EAGEtB,EAHFsB,SACA2B,EAEEjD,EAFFiD,QACAsL,EACEvO,EADFuO,cAGF,OACE,gBAAC,IAAD,MACG,SAAAuQ,GAAQ,OACP,gBAAC,IAAD,CACE7b,QAASA,EACTsL,cAAeA,EACfnQ,KAAK,QACLkD,SAAUA,EACViD,QAASA,EACTC,kBAAmBA,EACnBvG,IAAKA,GAEL,uBACEonB,IAAK9gB,EACL0f,IAAKA,EACLzgB,MAAO,GACP2G,OAAQ,GACRhM,MAAO,CACLsL,OAAQnI,EACJ,kBACAwd,EAASqG,iCASZ+0B,O,+NClDFC,EAAY,SAACx6B,EAAY4C,GACpC,OAAO5C,EAAKlW,QAAO,SAAA2wC,GAAW,OAAIA,IAAgB73B,MAgBvC83B,EAAwB,SAAC,GAOW,IAN/CC,EAM8C,EAN9CA,WACAC,EAK8C,EAL9CA,WACA/oB,EAI8C,EAJ9CA,aACA9wB,EAG8C,EAH9CA,SACA85C,EAE8C,EAF9CA,WACAC,EAC8C,EAD9CA,cAEMC,EAAUH,IACVI,EACJH,GAAcC,EACV,CACE,CACE15C,KAAM,aAER,CACEY,MAAO84C,EACP/f,MAAO8f,IAGX,GAEN,OAAKE,EAAQ/wC,OAUN+wC,EACJnxC,KAAI,SAAAgZ,GAAG,MAAK,CACXxhB,KAAM,WACNY,MAAO4gB,EACPlQ,QAASmf,EAAa8J,SAAS/Y,GAC/BmY,MAAO,WAlDU,IAAC/a,EAAYi7B,EAmDxBppB,EAAa8J,SAAS/Y,GACxB7hB,EAASy5C,EAAU3oB,EAAcjP,IAEjC7hB,GAtDcif,EAsDG6R,EAtDSopB,EAsDK,CAACr4B,GArDjCF,MAAMC,KAAK,IAAIglB,IAAJ,sBAAY3nB,GAAZ,YAAqBi7B,aAyDpCj/B,OAAOg/B,GAtBF,CACJ,CACEh5C,MAAO24C,EACPxb,SAAS,IAHb,OAKK6b,IAoBIE,EAAoB,SAACC,GAChC,MAA0B,KAAtBA,EAAW75B,OAAsB,GAE9B65B,EAAWz3B,MAAM,KAAK9Z,KAAI,SAAAgZ,GAAG,OAAIA,EAAItB,WAGjC85B,EAAoB,SAACp7B,GAChC,OAAOA,EAAK1I,KAAK,OAGN0a,EAAmB,SAACmpB,EAAoBn7B,GAAgB,IAAD,gBAChDA,GADgD,IAClE,2BAAwB,CAAC,IAAd4C,EAAa,QACtB,IAAiC,IAA7Bu4B,EAAW9yC,QAAQua,GAAa,OAAO,GAFqB,8BAKlE,OAAO,I,sGCoBMy4B,IAjFe,SAAC,GAYjB,IAXZC,EAWW,EAXXA,SACAt0B,EAUW,EAVXA,QACA1a,EASW,EATXA,KACAivC,EAQW,EARXA,sBACAt2C,EAOW,EAPXA,MACAu2C,EAMW,EANXA,sBACAC,EAKW,EALXA,4BACAC,EAIW,EAJXA,mBACAC,EAGW,EAHXA,4BACAC,EAEW,EAFXA,0BACArwC,EACW,EADXA,aAEM46B,EAAcC,cACdyV,EAAkBC,YAAsC,CAC5DC,mBAAoBL,EACpBJ,aAGF,OACE,gBAAC,IAAD,CACEt0B,QAASA,EACTnoB,UAAQ,EACRm9C,QAAS,CACP,gBAAC,IAAD,CACEh6C,MAAO,gBAAC,QAAD,eACPsB,QAASu4C,EACTzyB,IAAK,WAEP,gBAAC,IAAD,CACEpnB,MAAO,gBAAC,QAAD,cACP6L,SAAO,EACPouC,iBAAe,EACf34C,QAAS0jB,EACToC,IAAK,WAGT9c,KAAMA,EACN4vC,mBAAmB,EACnB39B,eAAgBs9B,EAChBM,iBAAkB,CAChBZ,EACE,gBAAC,IAAD,CACEnyB,IAAI,wBACJpnB,MAAO,gBAAC,QAAD,8BACP6L,SAAS,EACTvK,QAASi4C,IAET,KACJI,EACE,gBAAC,IAAD,eACEvyB,IAAI,6BACAuyB,IAEJ,MAEN12C,MAAOA,EACPm3C,UAAQ,EACRC,YAAU,GAEV,gBAAC,IAAD,CACEC,2BAKE,EAEFZ,mBAAoBA,EACpBF,sBAAuBA,EACvBC,4BAA6BA,EAC7Bc,cACEpW,EAEFyV,0BAA2BA,EAC3BrwC,aAAcA,O,sKC3ETixC,EAAmB,SAACn8C,GAAD,OAC9B,gBAAC,IAAD,CAAQiE,WAAW,UACjB,gBAAC,IAAD,CACE9F,MAAO,CACL2Q,SAAU,QACVstC,WAAY,WAGd,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAMh+C,KAAK,QAAQE,MAAM,UACtB0B,EAAM4E,OAET,gBAAC,IAAD,CAAMtG,MAAM,SAASE,UAAQ,GAC1BwB,EAAMic,aAET,gBAAC,IAAD,MACA,gBAAC,IAAD,CAAmBhY,WAAW,SAASzF,UAAQ,GAC7C,gBAAC,IAAD,CACEmD,MAAO3B,EAAMq8C,YACb7uC,SAAO,EACPvK,QAASjD,EAAMs8C,MACfh7C,WAAYtB,EAAMk9B,UAClBhzB,KAAMlK,EAAMk9B,UAAY,gBAAC,IAAD,CAAkB9+B,KAAM,KAAS,gBAAC,IAAD,MACzD4D,GAAIhC,EAAMu8C,iBAEZ,gBAAC,IAAD,CACE56C,MAAO,gBAAC,QAAD,qBACPuJ,aAAclL,EAAMkL,qB,6BCpDhC,4DAoBe,gBAQD,IAPZgH,EAOW,EAPXA,QACA5Q,EAMW,EANXA,SACA+Q,EAKW,EALXA,QACA1Q,EAIW,EAJXA,MACA2Q,EAGW,EAHXA,cACAC,EAEW,EAFXA,YACAiqC,EACW,EADXA,oBAEMpqC,EACJ,gBAAC,IAAD,CACE9Q,SAAUA,EACV+Q,QAASA,EACT3R,SACEwR,EAAU,SAAAhR,GAAK,OAAIgR,EAAQhR,EAAOA,EAAMC,OAAOkR,eAAWxT,EAE5DqL,KAAMoI,EACNC,YAAaA,EACblU,MAAM,YAGV,OAAOsD,EACL,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAkB6Q,QAASJ,EAAUzQ,MAAOA,IAC3C66C,GACC,gBAAC,IAAD,KAAiBA,IAGnBA,IAAwBl7C,EAC1B,gBAAC,IAAD,CAASsD,MAAO43C,GAAsBpqC,GAEtCA,I,mDCvCW,aACbqqC,EACAC,EACAC,EAKA3pC,GAEA,IAAM4pC,EAAgBH,EAAWpnB,OAE3BwnB,EAAiB,IAAIC,IAsM3B,GArMA59C,iBAAO,EAAG09C,EAAcx+C,QAAQ,SAAAmB,GAC9B,IAAMqC,EAAOg7C,EAAc98C,GAAGP,GACxBglC,EAAWkY,EAAWzhC,IAAIpZ,GAE1BqwB,EAAYsS,EAASgI,YAAc,GACrC3F,EAASiW,EAAe7hC,IAAIiX,GAC3B2U,IACHA,EAAS,GACTiW,EAAe9F,IAAI9kB,EAAW2U,IAGhC,IAAMmW,EAAsBxY,EAASroB,iBAC/BoqB,EAAY/B,EAAS1Q,UAAU3M,cAC/Bqe,EAAW,SAACtR,GAChB,IAAMoQ,EAAeqY,EAAczoB,GAChCjZ,IAAIpZ,GACJ2jC,WACH,OAAIlB,GAEFziC,EAAKwZ,OAAO,GAAGgtB,cACfxmC,EACGmV,MAAM,GACNsM,MAAM,aACNpM,KAAK,MAGNiF,EAAiB,kBAAM6gC,GAE7B,GAAIxY,EAASwI,WAAY,OAAO,KAEhC,GAAkB,WAAdzG,EAmBF,OAlBAM,EAAOpnC,KAAK,CACVoC,OACA0kC,YACAjB,SAAU,SAACpR,GACT,OACEsM,WACEmc,EAAczoB,GACXjZ,IAAIpZ,GACJyjC,aACA,GAGTxlB,SAAU,SAACoU,EAAoB/qB,GAC7ByzC,EAAiB1oB,EAAUryB,EAAM,GAAKsH,IAExCq8B,WACArpB,mBAEK,KACF,GAAkB,WAAdoqB,GAAwC,KAAdA,EAenC,OAdAM,EAAOpnC,KAAK,CACVoC,OACA0kC,UAAW,SACXjB,SAAU,SAACpR,GACT,OAAOyoB,EAAczoB,GAClBjZ,IAAIpZ,GACJyjC,YAELxlB,SAAU,SAACoU,EAAoB/qB,GAC7ByzC,EAAiB1oB,EAAUryB,EAAMsH,IAEnCq8B,WACArpB,mBAEK,KACF,GAAkB,YAAdoqB,EAiBT,OAhBAM,EAAOpnC,KAAK,CACVoC,OACA0kC,YACAjB,SAAU,SAACpR,GACT,MAGoB,SAFlByoB,EAAczoB,GACXjZ,IAAIpZ,GACJyjC,YAGPxlB,SAAU,SAACoU,EAAoB/qB,GAC7ByzC,EAAiB1oB,EAAUryB,EAAMsH,EAAW,IAAM,MAEpDq8B,WACArpB,mBAEK,KACF,GAAkB,WAAdoqB,EAAwB,CAEjC,IAAM0W,EAAUzY,EACb/Y,eACAqF,YACAtnB,KAAI,SAAAvI,GAAK,MAAK,CAAEA,QAAOW,MAAOX,MAgBjC,OAfA4lC,EAAOpnC,KAAK,CACVoC,OACA0kC,UAAW,SACXG,WAAY,kBAAMuW,GAClB3X,SAAU,SAACpR,GACT,OAAOyoB,EAAczoB,GAClBjZ,IAAIpZ,GACJyjC,YAELxlB,SAAU,SAACoU,EAAoB/qB,GAC7ByzC,EAAiB1oB,EAAUryB,EAAMsH,IAEnCq8B,WACArpB,mBAEK,KACF,GAAkB,aAAdoqB,EAA0B,CACnC,IAAMuF,EACJtH,EAAS/Y,eAAeptB,OAAS,EAAImmC,EAAS/Y,eAAe1rB,GAAG,GAAK,GA6BvE,OA5BA8mC,EAAOpnC,KAAK,CACVoC,OACA0kC,UAAW,SACXG,WAAY,WACV,OAAQzzB,GAA2B,KAAjB64B,EAEd74B,EACGiqC,sBACApsB,YACAtnB,KAAI,SAAA3H,GAAI,OACPoR,EAAOkqC,YAAYt7C,GAAMu7C,gBAAkBtR,EACvCjqC,EACA,QAEL6H,OAAO0R,SACP5R,KAAI,SAAAvI,GAAK,MAAK,CAAEA,QAAOW,MAAOX,MAVjC,IAYNqkC,SAAU,SAACpR,GACT,OAAOyoB,EAAczoB,GAClBjZ,IAAIpZ,GACJyjC,YAELxlB,SAAU,SAACoU,EAAoB/qB,GAC7ByzC,EAAiB1oB,EAAUryB,EAAMsH,IAEnCq8B,WACArpB,mBAEK,KACF,GAAkB,aAAdoqB,EAA0B,CAGnC,IAAM97B,EAAqB+5B,EAAS/Y,eAAeqF,YAAY,IAAM,GAgBrE,OAfA+V,EAAOpnC,KAAK,CACVoC,OACA0kC,UAAW,WACX5O,aAAcltB,EACd66B,SAAU,SAACpR,GACT,OAAOyoB,EAAczoB,GAClBjZ,IAAIpZ,GACJyjC,YAELxlB,SAAU,SAACoU,EAAoB/qB,GAC7ByzC,EAAiB1oB,EAAUryB,EAAMsH,IAEnCq8B,WACArpB,mBAEK,KACF,MAAkB,UAAdoqB,GACTM,EAAOpnC,KAAK,CACVoC,OACA0kC,UAAW,QACXjB,SAAU,SAACpR,GACT,OAAOyoB,EAAczoB,GAClBjZ,IAAIpZ,GACJyjC,YAELxlB,SAAU,SAACoU,EAAoB/qB,GAC7ByzC,EAAiB1oB,EAAUryB,EAAMsH,IAEnCq8B,WACArpB,mBAEK,MACgB,aAAdoqB,GACTM,EAAOpnC,KAAK,CACVoC,OACA0kC,UAAW,WACXjB,SAAU,SAACpR,GACT,OAAOyoB,EAAczoB,GAClBjZ,IAAIpZ,GACJyjC,YAELxlB,SAAU,SAACoU,EAAoB/qB,GAC7ByzC,EAAiB1oB,EAAUryB,EAAMsH,IAEnCq8B,WACArpB,mBAEK,OAEPzU,QAAQrG,MAAR,+BAC0BklC,EAD1B,iGAGO,SAGiB,IAAxBuW,EAAez+C,KACjB,MAAO,GAET,IAAMg/C,EAAoBP,EAAe7hC,IAAI,IAC7C,OAA4B,IAAxB6hC,EAAez+C,MAAcg/C,EAExBA,EAGU,YAAIP,EAAexnB,QAAQgoB,MAAK,SAACnsC,EAAG4R,GAAJ,OACjD5R,EAAEosC,cAAcx6B,MAEAvZ,KAAI,SAAA0oB,GAAS,MAAK,CAClCrwB,KAAMqwB,EACNlxB,KAAM,SACN6D,MAAOqtB,EAEP/zB,SAAU2+C,EAAe7hC,IAAIiX,IAAc,S,wDCrMhCsrB,IAnBa,SAACv9C,GAC3B,IAAM8nB,EAAQ9pB,aAAiB6M,KACzB2yC,EAAe,aACnBj6C,SAAU,WACVG,IAAK,EACL8a,KAAM,EACNhb,MAAO,OACP2G,OAAQ,OAGRszC,WAAY,wCACZh0C,OAAQqe,EAAM41B,aAAaC,kBAAoB,QAE5C39C,EAAM7B,OAGX,OAAO,uBAAKA,MAAOq/C,M,6BCvCrB,uLAEaI,EAAmB,SAACp4C,GAAD,OAC9BtG,iBAAO,EAAGsG,EAAQq4C,mBAAmB,SAAAt+C,GAAC,OAAIiG,EAAQs4C,YAAYv+C,OAEnDw+C,EAA0B,SACrCv4C,GADqC,OAGrCtG,iBAAO,EAAGsG,EAAQw4C,0BAA0B,SAAAz+C,GAAC,OAC3CiG,EAAQy4C,oBAAoB1+C,OAGnB2+C,EAA2B,SACtC14C,GADsC,OAGtCtG,iBAAO,EAAGsG,EAAQ24C,2BAA2B,SAAA5+C,GAAC,OAC5CiG,EAAQ44C,oBAAoB7+C,OAGnB8+C,EAAqC,SAChD74C,GADgD,OAGhDtG,iBAAO,EAAGsG,EAAQwvC,qCAAqC,SAAAz1C,GAAC,OACtDiG,EAAQ0vC,8BAA8B31C,OAG7B++C,EAAyB,SACpCzsB,EACAC,GAEA,IAAKA,EAAY,OAAOD,EAExB,IAAM0sB,EAAsBzsB,EAAW5K,cAEvC,OAAO2K,EAAKpoB,QACV,SAAC+0C,GAAD,OAIuC,IAHrCA,EACGxuB,UACA9I,cACAlf,QAAQu2C,Q,8BCvCjB,oBAOe,aAACv+C,GACd,OACE,uBACE7B,MAAO,CACLoF,SAAU,WACVG,IAAK,EACL8a,KAAM,EACN2hB,MAAO,EACPse,OAAQ,EACR/8B,gBAAiB,kBACjB5iB,QAAS,OACTmF,WAAY,SACZC,eAAgB,WAGlB,gBAAC,IAAD,CACE0d,UAAW,EACXzjB,MAAO,CACLgG,QAAS,GACTlE,OAAQ,IAGTD,EAAM9B,a,6FCqBAwgD,IAjCY,SAAC,GAKd,IAJZv6B,EAIW,EAJXA,WACAw6B,EAGW,EAHXA,KACAC,EAEW,EAFXA,mBACA7zC,EACW,EADXA,QAEM8zC,EAAc7gD,aAAiB+kC,KAC/B+b,EAAar8B,cAEnB,OAAOs8B,IAAoB,KACzB,gBAAC,IAAD,CACE9yC,KAAM0yC,IAASE,EAAYz6B,OAAOE,oBAAoBH,GACtDpZ,QACiB,UAAf+zC,GAA0BF,EACtBA,EACA7zC,EAENi0C,OACE,gBAAC,IAAD,CACEj2B,IAAI,OACJ1qB,MAAM,UACND,KAAK,QACL6E,QAAS,WACP47C,EAAYx6B,iBAAiBF,GAAY,KAG3C,gBAAC,QAAD,oB,uLCbG86B,EAAe,uCAAG,4BAAA/tC,EAAA,sEACNuY,IAAMzO,IAAN,UAClBuuB,IAAiB3f,QADC,qCADM,cACvBG,EADuB,yBAKtBA,EAASC,MALa,2CAAH,qDAQfk1B,EAAU,uCAAG,WACxBC,GADwB,eAAAjuC,EAAA,sEAGDuY,IAAMzO,IAAN,UAClBuuB,IAAiB3f,QADC,uBACqBu1B,EAAmBn9C,KAJvC,cAGlB+nB,EAHkB,yBAOjBA,EAASC,MAPQ,2CAAH,sDAUVo1B,EAA0B,uCAAG,WACxCC,GADwC,eAAAnuC,EAAA,sEAGjBuY,IAAMzO,IAAN,UAClBuuB,IAAiB3f,QADC,yBAErB,CACExH,OAAQ,CACNi9B,cAPkC,cAGlCt1B,EAHkC,yBAYjCA,EAASC,MAZwB,2CAAH,uD,6JC/BjChmB,EAAS,CACbs7C,UAAW,CACT/5B,OAAQ,YAgCNg6B,EAAaC,YAEhBC,KAEY,SAASC,EAAT,GAoBJ,IAnBTC,EAmBQ,EAnBRA,eACAC,EAkBQ,EAlBRA,cACAjyC,EAiBQ,EAjBRA,UACAkyC,EAgBQ,EAhBRA,WACAC,EAeQ,EAfRA,oBACAC,EAcQ,EAdRA,oBACAC,EAaQ,EAbRA,oBACAC,EAYQ,EAZRA,yBACAC,EAWQ,EAXRA,mBACAC,EAUQ,EAVRA,yBACAC,EASQ,EATRA,yBACAC,EAQQ,EARRA,4BACAC,EAOQ,EAPRA,iBACAC,EAMQ,EANRA,UACApiD,EAKQ,EALRA,MACAmD,EAIQ,EAJRA,SACAk/C,EAGQ,EAHRA,sBACA1B,EAEQ,EAFRA,WACA2B,EACQ,EADRA,YACQ,EACwBziD,YAAe,GADvC,mBACD0iD,EADC,KACSC,EADT,KAGFC,EAAoB5iD,eACxB,WACM8hD,GACFA,EAAoB,CAClBD,aACAjU,YAAagU,MAGnB,CAACE,EAAqBD,EAAYD,IAG9BiB,EAAoB7iD,eACxB,WACE+hD,EAAoB,CAClBF,aACAjU,YAAagU,MAGjB,CAACG,EAAqBF,EAAYD,IAG9BjT,EAAeztC,iBAAO,EAAG2gD,EAAWzhD,QAAQ,SAAAmB,GAChD,IAAMurB,EAAc+0B,EAAW7kC,IAAIzb,GAC7BuhD,EAAqB,CACzBlV,YAAagU,EACbC,WAAYA,EACZ/0B,cACAi2B,YAAaxhD,GAGf,OACE,gBAAC,IAAD,CACEurB,YAAaA,EACb8gB,YAAagU,EACb72B,IAAK+B,EAAYplB,IACjB4I,SAAU0yC,YAAsBT,EAAWz1B,GAC3Ck1B,oBAAqB,kBAAMA,EAAoBc,IAC/C79C,QAAS,kBAAMi9C,EAAmBY,IAClCzyC,cAAe,kBAAM+xC,EAAyBU,IAC9CvyC,cAAe,SAAC6qC,EAAGC,GAAJ,OACb8G,EAAyB/G,EAAGC,EAAGyH,IAEjCR,iBAAkB,SAACW,EAAUl2B,GAAX,OAChBu1B,EAAiB,CACf1U,YAAakV,EAAmBlV,YAChCiU,WAAYiB,EAAmBjB,WAC/B/0B,YAAag2B,EAAmBh2B,YAChCi2B,YAAaD,EAAmBC,YAChCh2B,iBACAk2B,cAGJV,UAAWA,EACXW,uBAAwBpB,EACxBqB,uBAAwBpB,EACxBqB,uBAAwBpB,EACxBqB,4BAA6BpB,EAC7BqB,sBAAuBpB,EACvBqB,4BAA6BnB,EAC7BoB,4BAA6BrB,EAC7BsB,+BAAgCpB,EAChCqB,oBAAqBpB,EACrBh/C,SAAUA,EACVk/C,sBAAuBA,EACvB1B,WAAYA,EACZ2B,YAAaA,OAKbkB,EAA0B,CAC9B9B,aACAjU,YAAagU,GAGTN,EAAYthD,SAAiC,MAC7C4jD,EAAwBhC,EAC5B,gBAAC,QAAD,sBAEA,gBAAC,QAAD,mBAEI1zC,EAA+BC,YACnCnO,eACE,SAAAkD,GACEo+C,EAAU/+C,SACR8/C,EACEf,EAAU/+C,QACVohD,KAGN,CAACtB,EAA6BsB,EAAyBrC,KAI3D,OACE,gBAACC,EAAD,CACEsC,QAAS,SAAAC,GAAW,OAAIA,EAAYlW,cAAgBgU,GACpDmC,KAAM,WACJ9B,EAAyB,CACvBrU,YAAagU,EACbC,WAAYA,OAIf,gBAAGmC,EAAH,EAAGA,kBAAmBC,EAAtB,EAAsBA,OAAQJ,EAA9B,EAA8BA,QAA9B,OACCG,EACE,uBAAKr0C,UAAWA,EAAWxP,MAAOA,GAC/BwuC,EACAsV,GAAU,gBAAC,IAAD,CAAeJ,QAASA,IACnC,wBACEK,eAAgB,WACdvB,EACGf,GAAiBuC,gBACdvC,GAAiBwC,gBAGzBC,eAAgB,WACd1B,GAAY,KAGd,wCACExiD,MAAO6F,EAAOs7C,UACd3xC,UAAU,WACV1K,QAAS29C,EACTryC,cAAe,SAAA0G,GACbA,EAAEqtC,kBACFjC,EACEprC,EAAE9L,cACFw4C,KAGAz1C,EAXN,CAYEjO,IAAKqhD,EACLt9C,GACE49C,EAAgB,uBAAyB,sBAG1CD,GAAkBiC,GAEpBlB,GACC,4BACE,0BACEviD,MAAO6F,EAAOs7C,UACd3xC,UAAU,WACV1K,QAAS49C,GAERjB,EACC,gBAAC,QAAD,8BAEA,gBAAC,QAAD,qC,6BC7NtB,4MAIO,IAAM2C,EAA4B,SAAC9yB,GAAD,iCACnBA,EAAiBC,MAAMM,UADJ,YAErCP,EAAiB/c,OAAS,UAAY,KAE7B8vC,EAAuB,SAAC5yB,GAAD,2BACpBA,EAAkB5c,OAAOgd,UADL,YAEhCJ,EAAkBld,OAAS,UAAY,KAE9B+vC,EAAsC,SACjDC,GADiD,6CAEdA,IAExBC,EAA4B,SACvC73B,GADuC,gCAEjBA,EAAY0hB,cAFK,YAEY1hB,EAAY/pB,OACpD6hD,EAA8B,SAACC,GAAD,kCACpBA,IAEVC,EAA0B,SAACC,GAAD,8BACpBA,K,6BC7BnB,0FAYM/+C,EAAS,CACbg/C,QAAS,CACPC,cAAe,GACf9yC,UAAW,OAGX+yC,UAAW,SAGXC,UAAW,GACX5tC,UAAW,IACXzG,SAAU,IACVsG,SAAU,IAKVoH,OAAQ,IAkBG,SAAS4mC,EAAcpjD,GACpC,IAAMqjD,EAAgBrlD,SAA8B,MAC9CslD,EAActlD,SAA8B,MAElD,OACE,gBAAC,IAAD,CACEkf,YAAa,SAAAhc,GAKPA,aAAiBqiD,WAMnBvjD,EAAM2mB,UASNxN,YAAW,WACTnZ,EAAM2mB,YACL,MAIP,gBAAC,IAAD,CACE1a,KAAMjM,EAAMiM,KACZkR,SAAUnd,EAAMmd,SAChBhf,MAAO6F,EAAOg/C,QACdh+C,UAAU,eACVhC,UAAW,SAAA9B,GAML8b,YAAoB9b,GACtBlB,EAAMke,iBACGjB,YAAa/b,IACtBlB,EAAM2mB,UAQJ68B,YAAqBtiD,GACnBA,EAAMC,QAAUD,EAAMC,SAAWmiD,EAAY/iD,UAC/CW,EAAMohD,kBACNphD,EAAM+W,iBACForC,EAAc9iD,SAChB8iD,EAAc9iD,QAAQC,SAGjBijD,YAAyBviD,IAC9BA,EAAMC,QAAUD,EAAMC,SAAWkiD,EAAc9iD,UACjDW,EAAMohD,kBACNphD,EAAM+W,iBACFqrC,EAAY/iD,SACd+iD,EAAY/iD,QAAQC,WAM5B,gBAAC,IAAD,KACE,uBAAKkjD,SAAU,EAAGzlD,IAAKolD,IACvB,gBAAC,IAAD,CAAQv4C,QAAM,GACZ,gBAAC,IAAD,KAAO9K,EAAM9B,WAEf,uBAAKwlD,SAAU,EAAGzlD,IAAKqlD,S,sKC3F3BK,G,gBAAU,SAAVA,EACJC,EACAC,EACAtgD,EACAugD,EACAhU,GAEA,IAAK8T,EAAa,OAAOC,EAGzB,GAA2B,kBAAhBD,EAA0B,CACnC,GACe,QAAbrgD,GACAqgD,EAAYG,QACkB,kBAAvBH,EAAYG,OAEnB,OAAO,2BACFH,GADL,IAEEG,OAAQJ,EACNC,EAAYG,OACZF,EACAtgD,EACAugD,EACAhU,KAGC,GACQ,UAAbvsC,GACAqgD,EAAYI,OACiB,kBAAtBJ,EAAYI,MAEnB,OAAO,2BACFJ,GADL,IAEEI,MAAOL,EACLC,EAAYI,MACZH,EACAtgD,EACAugD,EACAhU,KAOR,MAAO,CACLA,UACgB,QAAdA,EAEI,SACA,MACNkU,MAAoB,QAAbzgD,EAAqBqgD,EAAcC,EAC1CE,OAAqB,QAAbxgD,EAAqBsgD,EAAUD,EACvCE,qBAKEG,EAAc,SAAdA,EACJL,EACAM,EACAL,GAEA,OAAKD,EAE6B,kBAAhBA,EACZA,IAAgBM,EAAgBL,EAE7BD,EAEHA,IAAgBM,EAAgBL,EAE7B,2BACFD,GADL,IAEEI,MAAOC,EAAYL,EAAYI,MAAOE,EAASL,GAC/CE,OAAQE,EAAYL,EAAYG,OAAQG,EAASL,KAX5CD,GAgBLO,EAAyB,CAAC,gBAAC,IAAD,CAAap7B,IAAI,WAE3Cq7B,EAA4B,SAAApkD,GAAK,OACrC,uBAAK2N,UAAU,kBACb,uBAAKA,UAAU,yBACb,uBAAKA,UAAU,uBAAuB3N,EAAM4E,QAE9C,uBAAK+I,UAAU,yBASb02C,EAAe,SAACrkD,GAAD,OACnB,gBAAC,eAAD,iBACMA,EADN,CAEEskD,gBAAiBtkD,EAAMskD,iBAAmBH,EAC1CI,cAAeH,MAuBEI,E,4MACnBj8C,MAAQ,CACNk8C,WAAY,EAAKzkD,MAAM0kD,c,EAGzBC,WAAa,SACXC,EACArhD,EACAugD,EACAhU,GACI,IAAD,EAC4C,EAAK9vC,MAA5C6kD,EADL,EACKA,QAASC,EADd,EACcA,0BAEXC,EAAS,EAAK/kD,MAAM6kD,QAAQD,GAClC,IAAKG,EAAQ,OAAO,EAEpB,IAAMC,EAAoBC,oBAAU,EAAK18C,MAAMk8C,YAC/C,IAA+C,IAA3CO,EAAkBh9C,QAAQ48C,GAC5B,OAAO,EAGT,GAAIE,GAA6C,cAAhBC,EAAOhkD,KAAsB,CAE5D,IAAMmkD,EAAsBF,EAAkB3hB,MAC5C,SAAAuhB,GAAU,MAAiC,cAA7BC,EAAQD,GAAY7jD,QAEpC,GAAImkD,EAUF,OATA,EAAKv8C,SAAS,CACZ87C,WAAYR,EACV,EAAK17C,MAAMk8C,WACXS,EACAN,KAIJ,EAAKO,iBACE,EAgBX,OAXA,EAAKx8C,SAAS,CACZ87C,WAAYd,EACV,EAAKp7C,MAAMk8C,WACXG,EACArhD,EACAugD,EACAhU,KAIJ,EAAKqV,iBACE,G,EAGTC,UAAY,SAACX,GACX,EAAK97C,SAAS,CAAE87C,eAChB,EAAKU,iB,EAGPA,cAAgB7qC,KAAS,WACnB,EAAKta,MAAMqlD,gBAAkB,EAAK98C,MAAMk8C,YAC1C,EAAKzkD,MAAMqlD,eAAe,EAAK98C,MAAMk8C,cAEtC,K,uDAEO,IAAD,OACCI,EAAYvkD,KAAKN,MAAjB6kD,QACR,OACE,gBAAC,IAAD,MACG,SAAA/lC,GAAQ,OACP,gBAAC,+BAAD,CACEnR,UAAS,UACPmR,EAASwmC,oBADF,2CAGTC,WAAY,SAACX,EAAoBv/C,GAC/B,IAAM0/C,EAASF,EAAQD,GACvB,OAAKG,EAODA,EAAOS,WACFT,EAAOU,eAId,gBAAC,OAAD,MACG,gBAAG3kD,EAAH,EAAGA,KAAH,OACC,gBAACujD,EAAD,CACEh/C,KAAMA,EACNT,MAAO9D,EAAKiB,EAAEgjD,EAAOngD,OACrB0/C,gBAAiBS,EAAOT,iBAEvBS,EAAOU,oBAlBdh+C,QAAQrG,MACN,uCAAyCwjD,GAEpC,OAqBX5jD,MAAO,EAAKuH,MAAMk8C,WAClB/jD,SAAU,EAAK0kD,mB,GAvGepnD,c,kFC7JrB0nD,E,WAMnB,aAKG,IAJDlnC,EAIA,uDAJe,EACf9a,EAGA,uDAHc,EACdy8B,EAEA,uDAFgB,EAChBse,EACA,uDADiB,EACjB,oBACAn+C,KAAKke,KAAOA,EACZle,KAAKoD,IAAMA,EACXpD,KAAK6/B,MAAQA,EACb7/B,KAAKm+C,OAASA,E,gDAGZjgC,EAAc9a,EAAay8B,EAAese,GAC5Cn+C,KAAKke,KAAOA,EACZle,KAAKoD,IAAMA,EACXpD,KAAK6/B,MAAQA,EACb7/B,KAAKm+C,OAASA,I,mCAGHkH,GACXrlD,KAAKke,KAAOmnC,EAAUnnC,KACtBle,KAAKoD,IAAMiiD,EAAUjiD,IACrBpD,KAAK6/B,MAAQwlB,EAAUxlB,MACvB7/B,KAAKm+C,OAASkH,EAAUlH,S,8BAIxB,OAAOn+C,KAAK6/B,MAAQ7/B,KAAKke,O,+BAIzB,OAAOle,KAAKm+C,OAASn+C,KAAKoD,M,gCAI1B,OAAQpD,KAAKke,KAAOle,KAAK6/B,OAAS,I,gCAIlC,OAAQ7/B,KAAKoD,IAAMpD,KAAKm+C,QAAU,I,4BAG9BkH,GACAA,EAAUnnC,KAAOle,KAAKke,OACxBle,KAAKke,KAAOmnC,EAAUnnC,MAEpBmnC,EAAUjiD,IAAMpD,KAAKoD,MACvBpD,KAAKoD,IAAMiiD,EAAUjiD,KAEnBiiD,EAAUxlB,MAAQ7/B,KAAK6/B,QACzB7/B,KAAK6/B,MAAQwlB,EAAUxlB,OAErBwlB,EAAUlH,OAASn+C,KAAKm+C,SAC1Bn+C,KAAKm+C,OAASkH,EAAUlH,U,iCAK1B,MACE,IACAn+C,KAAKke,KACL,OACAle,KAAK6/B,MACL,MACA7/B,KAAKoD,IACL,OACApD,KAAKm+C,OACL,Q,yCCzEN,wFAaamH,EAAU5nD,QACrB,gBAAGE,EAAH,EAAGA,SAAH,OACE,gBAAC,IAAD,MACG,SAAA4gB,GAAQ,OACP,uBACE3gB,MAAO,CACLujB,gBAAiB5C,EAASmN,QAAQvK,gBAClCvd,QAAS,EACTpF,WAAY,EACZD,QAAS,OACTokD,UAAW,OACX/yC,UAAW,WAGZjS,SAOL2nD,EAAoB,SAAA7lD,GAAK,MAAK,CAClCyD,KAAM,EACN3E,QAAS,OACTmF,WAAY,SACZC,eAAgBlE,EAAMssB,WAClB,aACAtsB,EAAM8lD,UACN,WACA,WAGOC,EAAe/nD,QAC1B,SAACgC,GAAD,OACE,wBAAM7B,MAAO0nD,EAAkB7lD,IAASA,EAAM9B,c,6BC/ClD,6BAGe,eACb,IAAM4pB,EAAQ9pB,IAAM0mB,WAAW7Z,KAC/B,OACE,0BACE1M,MAAO,CACLgM,OAAQ,GACRE,WAAY,EACZD,YAAa,EACb47C,gBAAiB,QACjBC,gBAAiB,EACjBC,YAAap+B,EAAMmE,QAAQk6B,oB,8BCkDnC,kCAAO,IAAMC,EAAe,CAC1BC,QAAS,eACTC,IAAK,WACLC,QAAS,eACTC,MAAO,aACPC,OAAQ,eAuPKnjB,IA1O0C,CAEvDojB,SAAU,CACRC,KAAM,UACNC,YAAa,sBACbrjB,mBAAmB,GAErBsjB,qBAAsB,CACpBF,KAAM,MACNC,YAAa,4BACbrjB,mBAAmB,GAErBujB,aAAc,CACZH,KAAM,MACNC,YAAa,wBAEfG,qBAAsB,CACpBJ,KAAM,MACNC,YAAa,gCAEfI,mBAAoB,CAAEL,KAAM,UAAWC,YAAa,2BACpDK,qBAAsB,CACpBN,KAAM,UACNC,YAAa,kDAEfM,uBAAwB,CACtBP,KAAM,UACNC,YAAa,6CAEfO,mBAAoB,CAClBR,KAAM,UACNC,YAAa,6CAEfQ,eAAgB,CAAET,KAAM,MAAOC,YAAa,kBAC5CS,mBAAoB,CAClBV,KAAM,UACNC,YAAa,4BACbrjB,mBAAmB,GAErB+jB,aAAc,CACZX,KAAM,UACNC,YAAa,oBACbrjB,mBAAmB,GAErBgkB,aAAc,CACZZ,KAAM,UACNC,YAAa,oBACbrjB,mBAAmB,GAErBikB,gBAAiB,CACfb,KAAM,UACNC,YAAa,0BACbrjB,mBAAmB,GAErBkkB,cAAe,CACbd,KAAM,UACNC,YAAa,qBACbrjB,mBAAmB,GAErBmkB,YAAa,CACXf,KAAM,UACNC,YAAa,mBACbrjB,mBAAmB,GAErBokB,oBAAqB,CACnBhB,KAAM,UACNC,YAAa,+BAEfgB,qBAAsB,CACpBjB,KAAM,MACNC,YAAa,4BACbiB,OAAO,GAITC,wBAAyB,CACvBnB,KAAM,UACNC,YAAa,gCAEfmB,4BAA6B,CAC3BpB,KAAM,UACNC,YAAa,4BAEfoB,uBAAwB,CACtBrB,KAAM,UACNC,YAAa,8BAEfqB,qCAAsC,CACpCtB,KAAM,UACNC,YAAa,2BAEfsB,uBAAwB,CACtBvB,KAAM,UACNC,YAAa,+BAEfuB,8BAA+B,CAC7BxB,KAAM,UACNC,YAAa,iCAIfwB,YAAa,CAAEzB,KAAM,MAAOC,YAAa,sBACzCyB,qBAAsB,CACpB1B,KAAM,MACNC,YAAa,gCAEf0B,qBAAsB,CACpB3B,KAAM,MACNC,YAAa,gCAEf2B,eAAgB,CAAE5B,KAAM,MAAOC,YAAa,0BAG5C4B,sBAAuB,CACrB7B,KAAM,QACNC,YAAa,8BAEf6B,qBAAsB,CACpB9B,KAAM,QACNC,YAAa,6BAIf8B,mBAAoB,CAClB/B,KAAM,QACNC,YAAa,gCAEf+B,yBAA0B,CACxBhC,KAAM,QACNC,YAAa,sCAEfgC,sBAAuB,CACrBjC,KAAM,QACNC,YAAa,kCAEfiC,uBAAwB,CACtBlC,KAAM,QACNC,YAAa,mCAEfkC,oBAAqB,CACnBnC,KAAM,QACNC,YAAa,+BAEfmC,kBAAmB,CACjBpC,KAAM,QACNC,YAAa,6BACboC,YAAY,GAEdC,kBAAmB,CACjBtC,KAAM,QACNC,YAAa,6BACboC,YAAY,GAEdE,iBAAkB,CAChBvC,KAAM,QACNC,YAAa,oDACboC,YAAY,GAEdG,mBAAoB,CAAExC,KAAM,QAASC,YAAa,oBAClDwC,YAAa,CAAEzC,KAAM,QAASC,YAAa,oBAC3CyC,gBAAiB,CAAE1C,KAAM,QAASC,YAAa,mBAG/C0C,mBAAoB,CAClB3C,KAAM,QACNC,YAAa,8BAEf2C,WAAY,CACV5C,KAAM,QACNC,YAAa,sBAIf4C,YAAa,CAAE7C,KAAM,QAASC,YAAa,uBAC3C6C,sBAAuB,CACrB9C,KAAM,QACNC,YAAa,iCAEf8C,oBAAqB,CACnB/C,KAAM,QACNC,YAAa,+BAEf+C,sBAAuB,CACrBhD,KAAM,QACNC,YAAa,iCAIfgD,kBAAmB,CAAEjD,KAAM,QAASC,YAAa,6BAGjDiD,mBAAoB,CAClBlD,KAAM,SACNC,YAAa,8BAEfkD,aAAc,CACZnD,KAAM,SACNC,YAAa,8CAEfmD,kBAAmB,CAAEpD,KAAM,SAAUC,YAAa,sBAClDoD,sBAAuB,CACrBrD,KAAM,SACNC,YAAa,8BAEfqD,qBAAsB,CACpBtD,KAAM,SACNC,YAAa,mCAEfsD,mBAAoB,CAClBvD,KAAM,SACNC,YAAa,6BACboC,YAAY,GAEdmB,mBAAoB,CAClBxD,KAAM,SACNC,YAAa,6BACboC,YAAY,GAEdoB,iBAAkB,CAChBzD,KAAM,SACNC,YAAa,oCACboC,YAAY,GAEdqB,cAAe,CACb1D,KAAM,SACNC,YAAa,wBACboC,YAAY,GAEdsB,wBAAyB,CACvB3D,KAAM,SACNC,YAAa,kC,6BCvTjB,6CAkCaz6C,EAAe,SAACgyB,GAC3B,IAAMpwB,EAAU/P,SAAyB,MACnCusD,EAA4BvsD,SAA4B,CAC5DwsD,QAAS,EACTC,QAAS,IAELjZ,EAAQxzC,eAAkB,WAC9B+P,EAAQxN,SAAWmqD,aAAa38C,EAAQxN,WACvC,IAmEH,OAjEAvC,aACE,WAaE,OATAmjC,SAAS1U,iBAAiB,SAAU+kB,EAAO,CAEzCmZ,SAAS,IAOJ,WAGLnZ,IAGArQ,SAASxU,oBAAoB,SAAU6kB,EAAO,CAAEmZ,SAAS,OAG7D,CAACnZ,IA0CI,CACLoZ,aAxCY5sD,eACZ,SAACkD,GAIC6M,EAAQxN,SAAWmqD,aAAa38C,EAAQxN,SAExCgqD,EAA0BhqD,QAnEZ,SAACW,GACnB,OAAIA,EAAM2pD,SAAW3pD,EAAM2pD,QAAQlhD,OAAS,EACnC,CACL6gD,QAAStpD,EAAM2pD,QAAQ,GAAGL,QAC1BC,QAASvpD,EAAM2pD,QAAQ,GAAGJ,SAIvB,CACLD,QAAS,EACTC,QAAS,GAyD6BK,CAAY5pD,GAChD6M,EAAQxN,QAAU4Y,YAAW,WAC3BglB,EAASosB,EAA0BhqD,WAvD7B,OA0DV,CAAC49B,IA6BD4sB,YA1Ba/sD,eACb,SAACkD,GAGC,GAA6B,IAAzBA,EAAM2pD,QAAQlhD,OAAlB,CAOA,IAAMqhD,EAAQ9pD,EAAM2pD,QAAQ,GAVP,EAWQN,EAA0BhqD,QAA/CiqD,EAXa,EAWbA,QAASC,EAXI,EAWJA,SAEf5zC,KAAK2iC,IAAIwR,EAAMR,QAAUA,GA1EX,IA2Ed3zC,KAAK2iC,IAAIwR,EAAMP,QAAUA,GA3EX,KA6EdjZ,SAZAA,MAgBJ,CAAC+Y,EAA2B/Y,IAM5ByZ,WAAYzZ,K,wGC3GVxtC,EAAS,CACbknD,cAAe,CACbpsD,QAAS,OACT6mB,SAAU,OACVu9B,UAAW,OACXlkD,UAAW,GAEbmsD,KAAM,CACJ/gD,YAAa,EACbnL,aAAc,IAIZmsD,EAAe,SAAC7oC,GACpB,OAAO8oC,IAAY,CACjBC,KAAM/oC,EACNgpC,WAAY,WAUD,gBAA0C,IAAvC5rC,EAAsC,EAAtCA,KAAMjf,EAAgC,EAAhCA,SAAUuM,EAAsB,EAAtBA,SAChC,IAAK0S,EAAKhW,OAAQ,OAAO,KAD6B,MAGlB3L,IAAMooB,SAAkB,MAHN,mBAG/ColC,EAH+C,KAGnCC,EAHmC,OAIRztD,IAAMooB,SAClD,MALoD,mBAI/CslC,EAJ+C,KAI9BC,EAJ8B,KAQhDC,EAAU,GAChB5tD,IAAM6tD,WACJ,WACE,GAAwB,OAApBH,EAA0B,CAC5B,IAAMI,EAAaF,EAAQ/0C,KAAKzT,IAAIsoD,EAAiB/rC,EAAKhW,OAAS,IACnEmiD,EAAWvrD,SAAWurD,EAAWvrD,QAAQC,QACzCmrD,EAAmB,SAGvB,CAAChsC,EAAM+rC,EAAiBE,IAG1B,IAAMG,EAAe/tD,IAAMguD,aACzB,SAACzpC,GACC,IAAM0pC,IAAcT,GAAcA,IAAejpC,EACjD,OAAO,2BACFve,EAAOmnD,MADZ,IAEEzpC,gBAAiBuqC,EAAYb,EAAa7oC,QAAO1jB,EACjDR,MAAO4tD,EAAY,aAAUptD,MAGjC,CAAC2sD,IAGGU,EAAkB,SAAC3pC,GAAD,OAAiB,SAAArhB,GACvC,GAAIA,EAAMirD,uBAAuBC,cAAe,CAC9C,IAAMC,EAAW1sC,EAAK3X,QAAQua,GAC9BopC,EAAmBU,GAEjB3rD,EAAUA,EAASy5C,YAAUx6B,EAAM4C,IAC9BtV,GAAUA,EAASsV,KAG9B,OACE,yBAAKpkB,MAAO6F,EAAOknD,eAChBvrC,EAAKpW,KAAI,SAAAgZ,GACR,IAAM+pC,EAAStuD,IAAMuuD,YAErB,OADAX,EAAQpsD,KAAK8sD,GAEX,kBAAC,IAAD,CACEvjC,IAAKxG,EACLnkB,KAAK,QACLD,MAAO4tD,EAAaxpC,GACpB3e,OAAQ,kBAAM6nD,EAAc,OAC5B9nD,QAAS,kBAAM8nD,EAAclpC,IAC7BiqC,SAAU9rD,GAAYuM,EAAWi/C,EAAgB3pC,GAAO,KACxD5gB,MAAO4gB,EACPtkB,IAAKquD,U,+BCtFjB,yDACM75C,EAAKC,EAAOD,GAaLgpC,EAAwC,SAAC,GAIxC,IAHZC,EAGW,EAHXA,mBACA+Q,EAEW,EAFXA,wBACAxR,EACW,EADXA,SAEMyR,EAAuB1uD,SAAa,MA4C1C,OA3CAA,aACE,WAWE,OARI0uD,EAAqBnsD,UACvBmsD,EAAqBnsD,QAAQ8S,SAC7Bq5C,EAAqBnsD,QAAU,MAGjCmsD,EAAqBnsD,QAAU,IAAIkS,EAAGM,kBACtC2oC,EAAmBiR,YAAYD,EAAqBnsD,SAE7C,WACDmsD,EAAqBnsD,UACvBmsD,EAAqBnsD,QAAQ8S,SAC7Bq5C,EAAqBnsD,QAAU,SAIrC,CAACm7C,IAGqB19C,eACtB,WAGE,IAAM8U,EAAoB45C,EAAqBnsD,QAC1CuS,IAEA25C,EAGH/Q,EAAmBkR,gBACjBH,EACA35C,GAJF4oC,EAAmBkR,gBAAgB95C,GAQrCmoC,OAEF,CAACS,EAAoB+Q,EAAyBxR,O,+CC7DlD,kCAQO,IAAM/0B,EAAoB,CAC/B2mC,SAAU,SACVzQ,WAAY,SACZ0Q,aAAc,a,qKCEHC,EAAiBC,IACjBC,EAAuBC,IAErB,SAASC,EAAT,GAGkB,IAF/BC,EAE8B,EAF9BA,6BACAC,EAC8B,EAD9BA,mBAEA,OACE,gBAAC,IAAD,CACEnjD,KAAMmjD,EAAqB,gBAACJ,EAAD,MAA2B,gBAACF,EAAD,MACtDprD,MACE0rD,EACE,gBAAC,QAAD,iCAEA,gBAAC,QAAD,sBAGJpqD,QAAS,kBAAMmqD,S,kHCHfppD,EAAS,CACb3F,MAAO,CACLmF,MAAO,OACP2G,OAAQ,OACRmjD,aAAc,MACdloC,UAAW,SACX3iB,SAAU,QAEZ8qD,OAAQ,CACNppD,QAAS,MACTs5C,WAAY,OACZ6P,aAAc,MACdE,UAAW,2BACX1uD,QAAS,eACTymB,OAAQ,WAEVy9B,QAAS,CAIPxmC,O,OAAQC,EAAUlY,QAAU,MAI1BkpD,E,4MACJC,QAAU1vD,c,EACVuK,MAAQ,CACNolD,oBAAoB,G,EAGtB1hD,KAAO,WACL,EAAKtD,SAAS,CAAEglD,oBAAoB,K,EAGtCC,YAAc,WACZ,EAAKjlD,SAAS,CAAEglD,oBAAqB,EAAKplD,MAAMolD,sB,EAGlDE,YAAc,WACZ,EAAKllD,SAAS,CAAEglD,oBAAoB,K,uDAG5B,IAAD,EACiCrtD,KAAKN,MAArC7B,EADD,EACCA,MAAOE,EADR,EACQA,MAAUK,EADlB,iCAGDovD,EAAiBzvD,GAEnB,CACEukB,EAAG,IACHC,EAAG,IACHC,EAAG,IACH5R,EAAG,GAGT,OACE,uBAAK/S,MAAOA,GACV,uBACEA,MAAO6F,EAAOupD,OACdtqD,QAAS3C,KAAKstD,YACd3vD,IAAKqC,KAAKotD,SAEV,uBACEvvD,MAAK,2BACA6F,EAAO3F,OADP,IAEHo/C,WAAW,QAAD,OAAUqQ,EAAelrC,EAAzB,aAA+BkrC,EAAejrC,EAA9C,aACRirC,EAAehrC,EADP,aAELgrC,EAAe58C,GAAK,EAFf,QAKX7S,EAAQ,KAAO,MAGnBiC,KAAKiI,MAAMolD,oBAAsBrtD,KAAKotD,QAAQntD,QAC7C,gBAAC,IAAD,CACE0L,MAAI,EACJ8hD,QAASztD,KAAKutD,YACd1wC,SAAU7c,KAAKotD,QAAQntD,QACvBpC,MAAO6F,EAAOg/C,SAEd,gBAAC,eAAD,eAAc3kD,MAAOyvD,GAAoBpvD,KAEzC,U,GAzDcV,aA+DXyvD,O,sRC3CTO,EAAqC,SACzCC,GAIA,OAAI5rC,MAAMoiB,QAAQwpB,EAAatuC,MAEtBsuC,EAIF,2BACFA,GADL,IAEEtuC,KAAMsuC,EAAatuC,KAAK0D,MAAM,KAAK9Z,KAAI,SAAAgZ,GAAG,OAAIA,EAAItB,OAAOiG,oBAKhDgnC,EAA4B,SACvCjlB,EACAklB,GAFuC,OAIvCA,EAAqBhlB,iBACjBC,IAAgBH,EAAYklB,EAAqBhlB,gBAAiB,CAChEE,mBAAmB,KAId+kB,EAAwB,WACnC,OAAO3kC,IACJzO,IADI,UACGuuB,IAAiB3f,QADpB,yBAEJT,MAAK,SAAAY,GAAQ,OAAIA,EAASC,QAC1Bb,MAAK,SAAAklC,GACJ,OAAO,2BACFA,GADL,IAGEC,sBAAuBD,EAAmBC,sBAAsB/kD,IAC9DykD,SAMGO,EAAqB,SAChCJ,GAEA,OAAO1kC,IAAMzO,IAAImzC,EAAqBK,WAAWrlC,MAAK,SAAAY,GACpD,IAAMC,EAAwCD,EAASC,KAIvD,OAHyCgkC,EACvChkC,OAMOwkB,EAAe,SAC1BigB,GAEA,OAAOhlC,IAAMzO,IAAIyzC,EAAgB9oD,KAAKwjB,MAAK,SAAAY,GACzC,IAAMC,EAA4CD,EAASC,KAI3D,OAH6CgkC,EAC3ChkC,OAMO0kC,EAA4B,uCAAG,WAC1CrP,GAD0C,eAAAnuC,EAAA,sEAGnBuY,IAAMzO,IAAN,UAClBuuB,IAAiB3f,QADC,2BAErB,CACExH,OAAQ,CACNi9B,cAPoC,cAGpCt1B,EAHoC,yBAYnCA,EAASC,MAZ0B,2CAAH,uD,0FCtInChmB,EAAS,CACb2qD,eAAgB,CACdlrD,KAAM,EACN3E,QAAS,OACToF,eAAgB,UAElBgG,KAAM,CACJuzC,WAAY,6CACZ6P,aAAc,IAcLsB,EAAgB,SAAC,GAA+B,IAA7B3qC,EAA4B,EAA5BA,IAAKoB,EAAuB,EAAvBA,IAAKjnB,EAAkB,EAAlBA,KAClC+F,EAAU/F,EAAO,GAAK,EAAI,EAChC,OACE,uBAAKD,MAAO6F,EAAO2qD,gBACjB,gBAAC,IAAD,CACExwD,MAAK,2BACA6F,EAAOkG,MADP,IAEH/F,UACAX,MAAOpF,EAAO,EAAI+F,EAClBgG,OAAQ/L,EAAO,EAAI+F,IAErB8f,IAAKA,EACLoB,IAAKA,O,6BCrCb,oBAGMwpC,EAAgB,SACpBpmD,EACAqmD,EACA3vD,EACAC,EACA2vD,GAEA,IAAMC,EAAqBF,EAAiB,GACtCG,EAAmBH,EAAiB,GAAK,EAGzCI,EAAazmD,EAAKsO,MAAM5X,EAAO6vD,GAG/BG,EAAkB1mD,EAAKsO,MAAMi4C,EAAoBC,GAIjDG,EAAY3mD,EAAKsO,MAAMk4C,EAAkB7vD,GAAOqJ,EAAKkB,QAE3D,MAAO,CACLulD,EACA,wBAAMnmC,IAAG,UAAKomC,GAAL,OAAuBH,GAAsB7wD,MAAO4wD,GAC1DI,GAEHC,IAsCWC,IAlCS,SAAC,GAMH,IALpB5mD,EAKmB,EALnBA,KACA6mD,EAImB,EAJnBA,mBAKMxnC,EAAQ9pB,aAAiB6M,KAE/B,GAAkC,IAA9BykD,EAAmB3lD,OAAc,MAAO,CAAClB,GAI7C,IAFA,IAAM8mD,EAAa,GAEVhwD,EAAI,EAAGA,EAAI+vD,EAAmB3lD,OAAQpK,IAAK,CAClD,IAAMiwD,EAAwBF,EAAmB/vD,EAAI,GACjD+vD,EAAmB/vD,EAAI,GAAG,QAC1BV,EACE4wD,EAAmB,IAANlwD,EAAU,EAAI+vD,EAAmB/vD,GAAG,GACvDgwD,EAAW/vD,KACTqvD,EACEpmD,EACA6mD,EAAmB/vD,GACnBkwD,EACAD,EACA1nC,EAAMrf,KAAKinD,cAKjB,OAAOH,EAAWhmD,KAAI,SAACd,EAAMlJ,GAAP,OACpB,gBAAC,WAAD,CAAgBwpB,IAAKxpB,GAAIkJ,Q,mmBC1BhBknD,EAAsB,WACjC,MAAO,CACLC,qBAAsB,GACtBC,eAAgB,GAChBC,0BAA2B,KAIlBC,EAAoB,SAC/BxP,GAEA,OAAOn8B,IAAOm8B,EAAUsP,gBAAgBtmD,KACtC,SAACymD,GAAD,OAAgCA,EAAa9uD,UAIpC+uD,EAA2B,SACtC1P,GAEA,OAAOn8B,IAAOm8B,EAAUsP,iBAGbK,EAA0B,SACrC3P,GAEA,OAAOn8B,IAAOm8B,EAAUqP,sBAAsBrmD,KAC5C,SAACu3C,GAAD,OAA4CA,EAAmBh2B,gBAItDqlC,EAAkC,SAC7C5P,GAEA,OAAOn8B,IAAOm8B,EAAUqP,uBAGbQ,EAAuC,SAClD7P,GAEA,OAAOn8B,IAAOm8B,EAAUuP,4BAGbO,EAAkB,SAC7B9P,EACAr/C,GAEA,QAASq/C,EAAUsP,eAAe3uD,EAAMwE,MAG7Bs7C,EAAwB,SACnCT,EACAz1B,GAEA,QAASy1B,EAAUqP,qBAAqB9kC,EAAYplB,MAUzC4qD,EAAmB,SAAC/P,GAC/B,QAASnrB,OAAOC,KAAKkrB,EAAUsP,gBAAgBlmD,QAGpC4mD,EAAyB,SAAChQ,GACrC,QAASnrB,OAAOC,KAAKkrB,EAAUqP,sBAAsBjmD,QAG1C6mD,EAAiC,SAC5CjQ,GACa,IAAD,gBACmB4P,EAAgC5P,IADnD,IACZ,2BAA2E,CACzE,GADyE,QAClD3U,YACrB,OAAO,GAHC,8BAMZ,OAAO,GAGI6kB,EAA8B,SACzClQ,GAEA,QAASnrB,OAAOC,KAAKkrB,EAAUuP,2BAA2BnmD,QAG/C+mD,EAAuB,SAACnQ,GACnC,OACEgQ,EAAuBhQ,IACvBkQ,EAA4BlQ,IAC5B+P,EAAiB/P,IAIRoQ,EAAiB,WAC5B,OAAOhB,KAGIiB,EAAc,SACzBrQ,EACAyP,GAEoB,IADpBv4B,EACmB,wDACbv2B,EAAQ8uD,EAAa9uD,MAC3B,GAAImvD,EAAgB9P,EAAWr/C,GAAQ,OAAOq/C,EAE9C,IAAMsQ,EAAoBp5B,EAAiB8oB,EAAYoQ,IACvD,OAAO,2BACFE,GADL,IAEEhB,eAAe,2BACVgB,EAAkBhB,gBADT,IAEZ,CAAC3uD,EAAMwE,KAAMsqD,OAKNc,EAAoB,SAC/BvQ,EACAO,GAEoB,IADpBrpB,EACmB,wDACb3M,EAA6Bg2B,EAAmBh2B,YACtD,GAAIk2B,EAAsBT,EAAWz1B,GAAc,OAAOy1B,EAE1D,IAAMsQ,EAAoBp5B,EAAiB8oB,EAAYoQ,IACvD,OAAO,2BACFE,GADL,IAEEjB,qBAAqB,2BAChBiB,EAAkBjB,sBADH,IAElB,CAAC9kC,EAAYplB,KAAMo7C,Q,4JCjJZiQ,EAAa,SACxBC,GAEA,IAAMC,EAAO,GAmBb,OAlBAD,EAAe1qD,SAAQ,SAACkS,GACtB,IAAI04C,EAAaC,IACf34C,EAAeg0B,cAAcnpB,MApBX,MAsBf6tC,EAAWvnD,SAEdunD,EAAa,CAAC,KAGhBE,IAAOH,EAAMC,GAAY,SAAAG,GACvB,IAAMC,EAAoBD,GAAa,GACvC,OAAO,2BACFC,GADL,IAEE,CAAC94C,EAAe8zB,eAAgB9zB,UAK/By4C,GAGIM,EAAa,SAAbA,EACXC,EACA3O,GAEA,IAAKA,EAAiB,OAAO,KAG7B,IADA,IAAMxtB,EAAOD,OAAOC,KAAKm8B,GAChBjyD,EAAI,EAAGA,EAAI81B,EAAK1rB,SAAUpK,EAAG,CACpC,IAAMwpB,EAAMsM,EAAK91B,GAMXkyD,EAAqBD,EAAoBzoC,GAC/C,IAAK0oC,EAAoB,OAAO,KAEhC,GAAuC,kBAA5BA,EAAmB1wD,KAAmB,CAI/C,GAF0E0wD,EAE/C1wD,OAAS8hD,EAClC,MAAO,OAEJ,CAEL,IACM6O,EAAeH,EAD8BE,EAGjD5O,GAEF,GAAI6O,EACF,MAAM,CAAE3oC,GAAR,mBAAgB2oC,KAKtB,OAAO,O,8BCnFT,kDAAMj/C,EAAkBC,EAAOD,GAkDlBk/C,EAAyD,SAGpE9/B,EACAnX,GAEA,OAAOmX,EAAKpoB,QAAO,SAAAmoD,GACjB,IAAKA,EAA0CnlB,UAAW,OAAO,EADH,IAvBrCX,EAAuBqC,EAuBc,EAU1DyjB,EAA0Cl3C,MAF5C+yB,EAR4D,EAQ5DA,iBACA9c,EAT4D,EAS5DA,UAEMulB,EAAkDx7B,EAAlDw7B,oBAAqBd,EAA6B16B,EAA7B06B,yBAG7B,SACE3H,GACAyI,GACAd,IAxCuBtJ,EA0CrBsJ,EAAyBplB,UA1CmBme,EA2C5C+H,EAAoBlmB,UAzCnB8b,EADWr5B,EAAG8iC,kBAAkBsc,wBACJ1jB,IA0CzBV,EAAiBzd,eAMtByd,IACD2H,GACAA,EAAyBplB,YAAcW,EAAUX,iB,+CCtFvD,oBAgBMhsB,EAAS,CACb8tD,mBAAoB,CAClBhzD,QAAS,OACT+P,cAAe,UAEjBkjD,oBAAqB,CACnBjzD,QAAS,SAsCEkzD,IA7BkB,SAAChyD,GAChC,MAA0B,UAAtBA,EAAMygD,YAEN,uBAAKtiD,MAAO6F,EAAO8tD,mBAAoBnkD,UAAW3N,EAAM2N,WACrD3N,EAAMiyD,qBAAqB,CAC1B9zD,MAAO,GACPwP,UAAU,GAAD,OAAKsG,IAAL,YAA4BE,OAEtCnU,EAAMkyD,kBAAkB,CACvB/zD,MAAO,GACPwP,UAAU,GAAD,OAAKqG,IAAL,YAAyBG,QAOxC,uBAAKhW,MAAO6F,EAAO+tD,oBAAqBpkD,UAAW3N,EAAM2N,WACtD3N,EAAMiyD,qBAAqB,CAC1B9zD,MAAO,CACLqF,MAAM,eAAD,OAAiBxD,EAAMmyD,gBAAvB,QAEPxkD,UAAWsG,MAEZjU,EAAMkyD,kBAAkB,CAAEvkD,UAAWqG,S,6BCvD5C,qKAYao+C,EAAmB,WAC9B,OAAO3oC,IACJzO,IADI,UACGuuB,IAAiB3f,QADpB,cAEJT,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBqoC,EAAuB,SAACtxD,GACnC,OAAQA,GACN,IAAK,kCACH,MAAO,CAAC,oBACV,IAAK,wBACH,MAAO,CAAC,mCACV,QACE,MAAO,KAIAuxD,EAAyB,SAACvxD,GACrC,OAAQA,GACN,IAAK,uBACH,MAAO,CAAC,kBACV,IAAK,iCACH,MAAO,CAAC,iBACV,IAAK,6BACH,MAAO,CAAC,iCAAkC,2BAC5C,QACE,MAAO,KAIAwxD,EAA4B,SAACxxD,GACxC,OAAQA,GACN,IAAK,UACL,IAAK,UACL,IAAK,eACL,IAAK,aACL,IAAK,YACL,IAAK,eACH,MAAO,CAAC,0BACV,IAAK,kBACH,MAAO,CAAC,cACV,IAAK,mBACL,IAAK,mBACL,IAAK,iBACL,IAAK,iBACH,MAAO,CAAC,iBACV,IAAK,oCACH,MAAO,CAAC,gCACV,QACE,MAAO,M,4OC5CP0R,EAAkBC,EAAOD,GAMzBzO,EAAS,CACbwuD,sBAAuB,CACrBC,eAAgBC,eAElBC,iBAAkB,CAChBpvD,SAAU,WACV4G,OAAQ,OACR0iD,SAAU,UAEZ+F,sBAAuB,CACrBrvD,SAAU,WACVC,MAAO,OACP2G,OAAQ,OACR0L,UAAW,aACXg3C,SAAU,OAMVgG,YAAa,QAEfC,qBAAsB,CACpBvvD,SAAU,WACVwvD,cAAe,OACf9yD,OA7BW,KAoET+yD,EAAgB,SAACC,GAKrB,MAAO,CACLC,SAAS,EACTC,YAAaF,EAASz6B,gBAAgB0C,mBACpC+3B,EAASztD,QACTytD,EAAS1sD,aACT,MAqNS6sD,IA7MM,SAACpzD,GAAkB,IAAD,EACXhC,WAAA,aACxBk1D,SAAS,EACTG,WAAY,KACZC,YAAa,KACbC,gBAAiB,GACdP,EAAchzD,KANkB,mBAC9BuI,EAD8B,KACvBI,EADuB,KASrC3K,aACE,WACE2K,GAAS,SAAAJ,GAAK,kCACTA,GACAyqD,EAAc,CACfzsD,aAAcvG,EAAMuG,aACpBf,QAASxF,EAAMwF,QACfgzB,gBAAiBx4B,EAAMw4B,wBAI7B,CACEx4B,EAAMuG,aACNvG,EAAMwF,QACNxF,EAAMw4B,gBACNx4B,EAAMi7B,eAIV,IAAMu4B,EAAmB,WACvB7qD,GAAS,SAAAJ,GAAK,kCAAUA,GAAV,IAAiB2qD,SAAS,QAGpCO,EAAoB,SAACx+C,GACzB,IAAMy+C,EAAaz+C,EAAE9T,OAEfkyD,EAAaK,EACfA,EAAWC,cAAgBD,EAAWn3C,YACtC,EACE+2C,EAAcI,EAChBA,EAAWE,eAAiBF,EAAWG,aACvC,EACJlrD,GAAS,SAAAJ,GAAK,kCAAUA,GAAV,IAAiB8qD,aAAYC,mBACvCtzD,EAAM8zD,QAAQ9zD,EAAM8zD,OAAOT,EAAYC,IAGvCS,EAAS,SAACC,GACdC,EAAO1rD,EAAMgrD,gBAAkBS,IAG3BC,EAAS,SAACV,GACd5qD,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZgrD,gBAAiB18C,KAAKzT,IAzIJ,GA2IhByT,KAAK1T,IA1IW,GA0IUowD,UAK1BzrC,EAAQ9pB,aAAiB6M,KACzBqpD,EAAmBpsC,EAAM41B,aAAawW,kBAAoB,OAC1DC,EAAqBrsC,EAAM41B,aAAawI,aAAe,OAE7D,OACE,gBAAC,IAAD,CAASkO,QAAM,IACZ,YAAkC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WACTC,EAAiBF,EAAYD,OAAO5wD,MACpCgxD,EAAkBH,EAAYD,OAAOjqD,OACnC5D,EAAsDvG,EAAtDuG,aAAckuD,EAAwCz0D,EAAxCy0D,cAAeC,EAAyB10D,EAAzB00D,YAAalvD,EAAYxF,EAAZwF,QAC1C8tD,EAA0D/qD,EAA1D+qD,YAAaD,EAA6C9qD,EAA7C8qD,WAAYF,EAAiC5qD,EAAjC4qD,YAAaI,EAAoBhrD,EAApBgrD,gBAExCoB,IAAgBtB,KAAgBC,IAAgB/qD,EAAM2qD,QAGtD0B,EAAmB/9C,KAAK1T,IAC5B,EACAqxD,EAAkB,GACdlB,GAAe,GAAKC,EAAmB,EAnKtC,IAsKDsB,EAAoBh+C,KAAK1T,IAC7B,EACAoxD,EAAiB,GACblB,GAAc,GAAKE,EAAmB,EAzKrC,IA6KDuB,EAAU,2BACX9wD,EAAO8uD,sBADI,IAEdpvD,IAAKkxD,GAAoB,EACzBp2C,KAAMq2C,GAAqB,EAC3BrxD,MAAO6vD,EAAaA,EAAaE,OAAkB10D,EACnDsL,OAAQmpD,EAAcA,EAAcC,OAAkB10D,EACtDk2D,WAAYJ,OAAc91D,EAAY,UA1HvB,SACvB2G,EACAe,GAEA,IAAMqxB,EAAWpyB,EAAQa,sBAAsBM,YAAYJ,GAC3D,MAA2B,UAAvBqxB,EAASiC,WAESpnB,EAAGuiD,gBAAgBp9B,GACpBq9B,WAmHRC,CAAiB1vD,EAASe,QAE3B1H,EADAmF,EAAOwuD,uBAIP2C,EAAa,CACjB5xD,SAAU,WACVG,IAAKkxD,EA3LA,IA2L6B,EAClCp2C,KAAMq2C,EA5LD,IA4L+B,EACpCrxD,MAAO6vD,EAAaA,EAAaE,OAAkB10D,EACnDsL,OAAQmpD,EAAcA,EAAcC,OAAkB10D,EACtDk2D,WAAYJ,OAAc91D,EAAY,SACtCu2D,OAAO,aAAD,OAAelB,IAGjBmB,EAAe,CACnB9xD,SAAU,WACVG,IAAK,EACL8a,KAAM,EACNhb,MAAO,OACP2G,OAAQ,OACR4qD,WAAYJ,OAAc91D,EAAY,UAGxC,OACE,gBAAC,IAAD,CAAQiM,QAAM,EAACtM,UAAQ,EAAC82D,eAAa,GACnC,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEryD,QAAS,kBAAM8wD,EAAO,KACtBxvD,QAAS,sDAET,gBAAC,IAAD,OAEF,gBAAC,IAAD,CACEtB,QAAS,kBAAM8wD,GAAQ,KACvBxvD,QAAS,uDAET,gBAAC,IAAD,OAEF,gBAAC,IAAD,CACEtB,QAAS,kBAAMgxD,EAAO,IACtB1vD,QAAS,8BAET,gBAAC,IAAD,QAGJ,uBACEpG,MAAK,2BACA6F,EAAO2uD,kBADP,IAEHxoD,OAAQuqD,GAAe,UAGzB,gBAAC,IAAD,MACA,uBACEa,IACE,MAEFp3D,MAAK,2BACA6F,EAAO4uD,uBADP,IAEHwC,OAAO,aAAD,OAAejB,KAEvBl2D,IAAKq2D,EACLkB,QAAS,SAAAt0D,GAAU,IACTu0D,EAAWv0D,EAAXu0D,QAEJv0D,EAAMghC,SAAWhhC,EAAM+gC,WACzB8xB,GAAQ0B,EAAS,KACjBv0D,EAAM+W,iBACN/W,EAAMohD,uBAMP/5C,EAAM2qD,SACP,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,gBAAC,QAAD,oCAIJ3qD,EAAM2qD,SACN,gBAAC,IAAD,CACE/0D,MAAO22D,EACPzvC,IAAK9e,EACL0d,IAAKkvC,EACLuC,QAASlC,EACTmC,OAAQlC,IAGXkB,GAAeF,GAAiB,uBAAKt2D,MAAOg3D,IAC5CR,GAAeF,GACd,uBAAKt2D,MAAOk3D,GACTZ,EAAc,CACbpB,WAAYA,GAAc,EAC1BC,YAAaA,GAAe,EAC5BsC,UAAWhB,EApRlB,GAqROiB,WAAYhB,EArRnB,GAsROtB,8B,wICzShBpuD,EAAWC,IAAgB,YAKZ0wD,E,0GACDC,GAChBz1D,KAAK01D,aAAeD,I,+BAIbz3C,GACP,GAAKnZ,EAAL,CADmB,IAGX8wD,EAAS9wD,EAASwwB,OAAlBsgC,KACFC,EAAgB/wD,EAASwwB,OAAOwgC,mBACtC71D,KAAK81D,KAAOH,EAAKI,kBAAkB/1D,KAAK01D,cACxC11D,KAAK81D,KAAKE,MAAM,CACd9pC,OAAQ0pC,EACR9c,EAAGviC,KAAK0H,MAAMD,EAAWE,MACzB66B,EAAGxiC,KAAK0H,MAAMD,EAAW5a,IAAM4a,EAAWnU,QAC1CosD,OAAO,O,qCAKT,MAAO,CACLtqD,MAAM,O,sGCjBNuqD,EAAc,SAAC,GAAiC,IAA/BhY,EAA8B,EAA9BA,KAAM6X,EAAwB,EAAxBA,kBAAwB,EACnBjwC,oBAAS,GADU,mBAC5CqwC,EAD4C,KAClCC,EADkC,KAE7CC,EAAgBC,iBAAO,MACvBC,EAAmB7K,uBAAY,SAAAp/C,GACnC+pD,EAAcp2D,QAAUqM,IACvB,IAEH,OACE,kBAAC,IAAMkqD,SAAP,KACE,kBAACC,EAAA,EAAD,CACE1pD,OAAK,EACL0b,IAAKy1B,EAAK78C,MACVL,UAA2B,IAAjBk9C,EAAK1f,QACf77B,QAAS,SAAA/B,IACc,IAAjBs9C,EAAK1f,UAIJ63B,EAAcp2D,SACjBs2D,EAAiB31D,EAAMiI,eAGzButD,GAAaD,MAGdjY,EAAK78C,MACN,kBAAC,IAAD,OAEF,kBAACs0D,EAAA,EAAD,CACEhqD,KAAMwqD,EACNt5C,SAAUw5C,EAAcp2D,QACxBwtD,QAAS,kBAAM2I,GAAY,IAC3BM,oBAAqBC,KAEpBZ,EAAkB7X,EAAK0Y,YAoBXC,E,WACnB,cAA0B,IAAZpJ,EAAW,EAAXA,QAAW,oBACvBztD,KAAK82D,SAAWrJ,E,8DAGAgI,GAAW,IAAD,OAC1B,OAAOA,EACJxsD,KAAI,SAACi1C,EAAMx8C,GACV,OAAqB,IAAjBw8C,EAAK6Y,QAA0B,KAOjB,cAAd7Y,EAAKz9C,KACA,kBAACu2D,EAAA,EAAD,CAASvuC,IAAK,YAAc/mB,IAEZ,aAAdw8C,EAAKz9C,KAEZ,kBAACg2D,EAAA,EAAD,CACE1pD,OAAK,EACL0b,IAAK,WAAay1B,EAAK78C,MACvB0Q,QAASmsC,EAAKnsC,QACd/Q,UAA2B,IAAjBk9C,EAAK1f,QACf77B,QAAS,YACc,IAAjBu7C,EAAK1f,UAIL0f,EAAK9jB,OACP8jB,EAAK9jB,QAEP,EAAK08B,cAGP,kBAACG,EAAA,EAAD,KACG/Y,EAAKnsC,QAAU,kBAAC,IAAD,MAAmB,kBAAC,IAAD,OAErC,kBAACmlD,EAAA,EAAD,CAAchqD,QAASgxC,EAAK78C,SAGvB68C,EAAK0Y,QAEZ,kBAAC,EAAD,CACEnuC,IAAK,UAAYy1B,EAAK78C,MACtB68C,KAAMA,EACN6X,kBAAmB,SAAAN,GAAQ,OAAI,EAAKM,kBAAkBN,MAKxD,kBAACgB,EAAA,EAAD,CACE1pD,OAAK,EACL0b,IAAK,OAASy1B,EAAK78C,MACnBL,UAA2B,IAAjBk9C,EAAK1f,QACf77B,QAAS,YACc,IAAjBu7C,EAAK1f,SAIL0f,EAAK9jB,QACP8jB,EAAK9jB,QACL,EAAK08B,cAIR5Y,EAAK78C,UAKb8H,OAAO0R,W,yEAQV,MAAO,O,KCvILhW,EAAWC,IAAgB,YAU3BqyD,EAAwBz5D,IAAM05D,YAGlC,SAAC13D,EAAO/B,GAAS,IAAD,EAC4BD,IAAMooB,SAAwB,CACxE,EACA,IAHc,mBACTuxC,EADS,KACOC,EADP,OAKgB55D,IAAMooB,UAAkB,GALxC,mBAKTyxC,EALS,KAKCC,EALD,OAMwB95D,IAAMooB,SAAc,IAN5C,mBAMT2xC,EANS,KAMKC,EANL,KAQVC,EAAqB,IAAId,EAA6B,CAC1DpJ,QAAS,kBAAM+J,GAAY,MAGvB7rD,EAAO,SAACmtC,EAAGC,EAAGlxC,GAClByvD,EAAkB,CAACxe,EAAGC,IACtB2e,EAAgB7vD,GAChB2vD,GAAY,IAOd,OAJA95D,IAAMk6D,oBAAoBj6D,GAAK,iBAAO,CACpCgO,WAGK4rD,EACL,kBAAC,OAAD,MACG,gBAAG/2D,EAAH,EAAGA,KAAH,OACC,kBAACm1D,EAAA,EAAD,eACEhqD,KAAMA,EACN0rD,eAAgB,CACdn5C,KAAMm5C,EAAe,GACrBj0D,IAAKi0D,EAAe,IAEtBQ,gBAAiB,iBACjBpK,QAAS,kBAAM+J,GAAY,IAC3Bd,oBAAqBC,KACjBgB,EAAmBG,gBAEtBH,EAAmB5B,kBAClBr2D,EAAM0M,kBAAkB5L,EAAMi3D,QAQxC,QAQIM,EAAsBr6D,IAAM05D,YAGhC,SAAC13D,EAAO/B,GACR,IAAMg6D,EAAqB,IAAInC,EAEzB7pD,EAAO,SAACmtC,EAAGC,EAAGlxC,GAClB8vD,EAAmB5B,kBACjBr2D,EAAM0M,kBAAkB1M,EAAMc,KAAMqH,IAEtC8vD,EAAmBK,SAAS,CAC1B95C,KAAM46B,GAAK,EACX11C,IAAK21C,GAAK,EACV71C,MAAO,EACP2G,OAAQ,KAQZ,OAJAnM,IAAMk6D,oBAAoBj6D,GAAK,iBAAO,CACpCgO,WAGK,QAGHssD,EAA6Bv6D,IAAM05D,YAGvC,SAAC13D,EAAO/B,GACR,IAAMu6D,EAAsBx6D,IAAM44D,OAA8B,MAQhE,OAPA54D,IAAMk6D,oBAAoBj6D,GAAK,iBAAO,CACpCgO,KAAM,SAACmtC,EAAGC,EAAGlxC,GACPqwD,EAAoBj4D,SACtBi4D,EAAoBj4D,QAAQ0L,KAAKmtC,EAAGC,EAAGlxC,QAK3C,kBAAC,OAAD,MACG,gBAAGrH,EAAH,EAAGA,KAAH,OACC,kBAACu3D,EAAD,iBAAyBr4D,EAAzB,CAAgCc,KAAMA,EAAM7C,IAAKu6D,WAMzCrzD,MAAWozD,EAA6Bd,G,4IChHlDzzD,EAAS,CACb4b,UAAW,CACTlc,IAAKK,MA2JM00D,E,iLA/HMC,GAAyB,IAAD,QACpCA,EAAUC,aAAer4D,KAAKN,MAAM24D,aACvCx/C,YAAW,WACL,EAAKyG,WAAW,EAAKA,UAAUpf,UAClC,O,+BAIG,IAAD,SAeHF,KAAKN,MAbPw+C,EAFK,EAELA,KACAoa,EAHK,EAGLA,SACA52D,EAJK,EAILA,GACA62D,EALK,EAKLA,gBACAC,EANK,EAMLA,OACAxqD,EAPK,EAOLA,SACAslB,EARK,EAQLA,aACAmlC,EATK,EASLA,YACAjoD,EAVK,EAULA,OACAkoD,EAXK,EAWLA,eACAC,EAZK,EAYLA,eACAC,EAbK,EAaLA,4BACAC,EAdK,EAcLA,sBAGF,OACE,gBAAChqD,EAAA,EAAD,MACG,SAAA2P,GACC,IAAMnd,EAAQ,EAAK3B,MAAM24D,YACvB,gBAACv4D,EAAA,EAAD,CACE4B,GAAG,oBACH/B,OAAO,OACPhC,IAAK,SAAA2hB,GAAS,OAAK,EAAKA,UAAYA,GACpC3e,aAAc23D,EACdh1D,OAAQ,SAAAqR,GAAC,OAAI,EAAKjV,MAAMo5D,SAASnkD,EAAE9L,cAAcnI,QACjD8B,WAAY,SAAA5B,GACNmgB,YAAengB,IACb,EAAK0e,WAAW,EAAKA,UAAUnf,QAGvC4B,WAAS,EACTlE,MAAO6F,EAAO4b,YAGhB,uBACEhb,MAA2B,kBAAbg0D,EAAwBA,OAAW/5D,EACjDV,MAAK,2BACA+nB,KADA,IAEH7nB,MAAOiQ,EACHwQ,EAASwG,SAAS+zC,uBAClBx6D,EACJ6D,UAAWo2D,EAAS,cAAWj6D,EAC/By6D,WAAYR,EAAS,OAAS,YAG/BD,EAAkBA,IAAoBD,GAIrCW,EAAY,CAChBC,aAAa,aAAD,OAAe16C,EAASwG,SAAS6gC,gBAC7CzkC,gBAAiBpT,EACG,KAAhByqD,EACEj6C,EAASwG,SAASm0C,wBACF,UAAhBV,EACAj6C,EAASwG,SAASo0C,6BAClB56C,EAASwG,SAASq0C,oCACpB96D,EACJR,MACkB,KAAhB06D,OACIl6D,EACgB,UAAhBk6D,EACAj6C,EAASwG,SAASs0C,eAClB96C,EAASwG,SAASu0C,kBAGpBtsD,EAAWqmB,EACf,gBAACkmC,EAAA,EAAD,CACE/0C,SAAU,GACVd,IAAK2P,IACLhP,aACEs0C,GAA+B5qD,EAC3B,iCACA,KAGN,KAEJ,OACE,gBAACK,EAAA,EAAD,CACExQ,MAAK,eAAOo7D,GACZtvD,YAAatI,EACb4L,SACE4rD,GAAyB5rD,EACrB4rD,EAAsB,2BAAM5rD,IAC5BA,EAENZ,mBAAoBssD,EACpBpsD,eACEyB,EACIwQ,EAASwG,SAASy0C,uBAClBj7C,EAASwG,SAASzY,eAExBH,kBAAmB,EAAK1M,MAAM0M,kBAC9BzJ,QAAS,WACF+1D,IACD,EAAKh5D,MAAM24D,aAEfK,EAAe1qD,EAAW,KAAOkwC,KAEnCnwC,cAAe,SAAAnN,GAtIH,IAuINA,EAAMkM,QACL0D,IACD,EAAK9Q,MAAM24D,cAEfK,EAAe,MACfloD,EAAO0tC,MAETx8C,GAAIA,W,GAzHUhE,a,kBCjCtBgG,EACW,CACbg2D,UAAW,oBACX7vD,OAAQ,EACRnL,UAAW,OACXC,aAAc,OACduE,MAAO,OACPqS,UAAW,cAIA,SAASokD,EAAT,GAA6D,IAApCpY,EAAmC,EAAnCA,QACtC,OACE,gBAAC1yC,EAAA,EAAD,MACG,SAAAvE,GAAa,OACZ,uBACEzM,MAAK,2BACA6F,GADA,IAEHkiD,YAAarE,EACTj3C,EAAc0a,SAASm0C,wBACvB7uD,EAAc0a,SAASo0C,oC,2DCalBQ,E,4MAInBC,wBAA0BC,YACxB,EAAKp6D,MAAMq6D,c,gEAIP/5D,KAAKg6D,OAAOh6D,KAAKg6D,MAAMC,oB,qCAI3B/b,EACA9X,EACA+Z,EACA0Y,GACC,IAAD,SAYI74D,KAAKN,MAVPw6D,EAFF,EAEEA,cACAC,EAHF,EAGEA,iBACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,WACAC,EANF,EAMEA,WACAC,EAPF,EAOEA,YACAC,EARF,EAQEA,YACAC,EATF,EASEA,UACAlC,EAVF,EAUEA,gBACAK,EAXF,EAWEA,4BAGI8B,EAAkBH,IAAgBrc,EAClCoa,EAAWkC,EAAYtc,GAE7B,OACE,gBAAC,EAAD,CACEA,KAAMA,EACNoa,SAAUA,EACV52D,GAAI+4D,EAAYA,EAAUvc,EAAM9X,QAAS7nC,EACzCg6D,gBACEA,EAAkB,kBAAMA,EAAgBra,SAAQ3/C,EAElDi6D,SAAQ6B,GAAaA,EAAWnc,GAChC4a,SAAU,SAAA6B,GAAO,OAAI,EAAKj7D,MAAMo5D,SAAS5a,EAAMyc,IAC/CtC,YAAaqC,EACbpnC,aACE6mC,EAAmB,kBAAMA,EAAiBjc,SAAQ3/C,EAEpDyP,UAA2C,IAAjCksD,EAAcxyD,QAAQw2C,GAChCwa,eAAgB14D,KAAKN,MAAMg5D,eAC3BD,YAAa2B,GAAeA,EAAa9B,IAAkB,GAC3DlsD,kBAAmB,kBAAM,EAAK1M,MAAM0M,kBAAkB8xC,EAAM9X,IAC5D51B,OAAQ8pD,EACR3B,eAAgC,UAAhBxY,EAChByY,4BAA6BA,EAC7BC,sBAAuBA,GAAyB,S,+BAK5C,IAAD,SAaH74D,KAAKN,MAXPmK,EAFK,EAELA,OACA3G,EAHK,EAGLA,MACA03D,EAJK,EAILA,SACAC,EALK,EAKLA,gBACAC,EANK,EAMLA,aACAP,EAPK,EAOLA,YACAJ,EARK,EAQLA,iBACAY,EATK,EASLA,aACAC,EAVK,EAULA,sBACAC,EAXK,EAWLA,uBACAf,EAZK,EAYLA,cAEML,EAA4B75D,KAA5B65D,wBAER,OACE,gBAACqB,EAAA,EAAD,MACG,SAAA/a,GAAW,OACV,gBAAC7zB,EAAA,EAAD,MACG,SAAAkyB,GAAU,OACT,gBAAC,IAAD,CACE7gD,IAAK,SAAA4zB,GAAI,OAAK,EAAKyoC,MAAQzoC,GAC3B1nB,OAAQA,EACRsxD,SAAUP,EAASvxD,QAAU0xD,EAAe,EAAI,GAChDK,UACEjB,EACIlvD,IACAC,IAENmwD,YAAa,YAQL,IAPNj1B,EAOK,EAPLA,MACA3d,EAMK,EANLA,IACA5qB,EAKK,EALLA,MAMA,GAAIuoC,GAASw0B,EAASvxD,OACpB,OACE,uBAAKxL,MAAOA,EAAO4qB,IAAKA,GACtB,gBAAC,IAAD,CACE9lB,QAASo4D,EACTpxD,YAAakxD,EACbn5D,GAAIo5D,KAMZ,IAAM5c,EAAO0c,EAASx0B,GAChBs0B,EAAkBH,IAAgBrc,EAClCod,GAA8C,IAAjCpB,EAAcxyD,QAAQw2C,GAEzC,OACE,uBAAKrgD,MAAOA,EAAO4qB,IAAKA,GACtB,gBAACoxC,EAAD,CACE0B,UAAW,WAIT,OAHKD,GAAY,EAAK57D,MAAMg5D,eAAexa,GAGpC,IAETsd,QAAS,kBAAOd,GAChBnZ,QAAS,kBACP0Z,GACIA,EAAuB/c,IAG7BuD,KAAM,WACJuZ,EAAsB9c,MAGvB,YAKM,IAJLud,EAII,EAJJA,kBACA/Z,EAGI,EAHJA,kBACAC,EAEI,EAFJA,OACAJ,EACI,EADJA,QAMMma,EACW,UAAfld,IAA2B8c,EAIvBK,EAAaja,EACjB,2BACGC,GAAU,gBAACgY,EAAD,CAAepY,QAASA,IAClC,EAAKqa,eACJ1d,EACA9X,EACA+Z,EAGAub,EAAkBD,EAAoB,QAK5C,OAAKE,EAEED,EACHC,EACAF,EAAkBE,GAJE,UAUlCz4D,MAAOA,c,GA7KwCxF,c,iGCb1Cm+D,E,kDACnB,WAAYn8D,GAAe,IAAD,8BACxB,cAAMA,IAEDuI,MAAQ,EAAKwvB,UAAU/3B,GAHJ,E,sEAMAizD,GAEtBA,EAAS1sD,eAAiBjG,KAAKN,MAAMuG,cACrC0sD,EAASztD,UAAYlF,KAAKN,MAAMwF,SAEhClF,KAAKqI,SAASrI,KAAKy3B,UAAUk7B,M,gCAIvBjzD,GAAsB,IACtBwF,EAA0BxF,EAA1BwF,QAASe,EAAiBvG,EAAjBuG,aACXH,EAAmBZ,EAAQa,sBAKjC,MAAO,CACLqxB,aALmBtxB,EAAiBI,YAAYD,GAC9CH,EAAiBO,YAAYJ,GAAcszB,UAC3C,Q,+BAUJ,OAFyBv5B,KAAKiI,MAAtBmvB,cAGN,IAAK,QACH,OACE,gBAAC0kC,EAAA,EAAD,CACE52D,QAASlF,KAAKN,MAAMwF,QACpBe,aAAcjG,KAAKN,MAAMuG,aACzBiyB,gBAAiBl4B,KAAKN,MAAMw4B,gBAC5Br6B,MAAOmC,KAAKN,MAAM7B,MAClBk+D,WAAY/7D,KAAKN,MAAMq8D,WACvB/tD,SAAUhO,KAAKN,MAAMsO,SACrBguD,SAAUh8D,KAAKN,MAAMs8D,SACrB/tD,cAAejO,KAAKN,MAAMuO,gBAGhC,QACE,OAAO,U,GA9CgCvQ,aCCzCgG,EAAS,CACb4K,UAAW,CAAEnL,KAAM,EAAG3E,QAAS,OAAQmF,WAAY,YACnDs4D,kBAAmB,CAAE94D,KAAM,GAC3B+4D,kBAAmB,CAAEnyD,WAAY,GAAIpL,aAAc,IAyCtCw9D,IAtCuB,SAAC,GAUzB,IATZj3D,EASW,EATXA,QACAk0B,EAQW,EARXA,gBACAnC,EAOW,EAPXA,iBACA4C,EAMW,EANXA,wBACAzC,EAKW,EALXA,aACAnxB,EAIW,EAJXA,aACA7F,EAGW,EAHXA,SACAP,EAEW,EAFXA,kBACA2B,EACW,EADXA,SAEA,OACE,uBAAK3D,MAAO6F,EAAO4K,WACjB,uBAAKzQ,MAAO6F,EAAOu4D,mBACjB,gBAACllC,EAAA,EAAD,CACE7xB,QAASA,EACTk0B,gBAAiBA,EACjBnC,iBAAkBA,EAClB4C,wBAAyBA,EACzB3B,gBAAiBtyB,IACjBwxB,aAAcA,EACdr1B,WAAS,EACTk3B,oBAAqBhzB,EACrB7F,SAAUA,EACVP,kBAAmBA,EACnB2B,SAAUA,KAGd,gBAAC,EAAD,CACEyE,aAAcA,EACdiyB,gBAAiBtyB,IACjBV,QAASA,EACTrH,MAAO6F,EAAOw4D,uB,kHChDhBE,EAAwB1+D,gBANO,CACnC2+D,mBAAmB,EACnBC,mBAAoB,aACpB32B,sBAAuB,eAKVy2B,MAUR,IAAMG,EAAb,4MAIEt0D,MAAQ,CAAEo0D,mBAAmB,GAJ/B,EAKE12B,sBAAwB,WACjB,EAAK19B,MAAMo0D,mBACd,EAAKh0D,SAAS,CAAEg0D,mBAAmB,KAPzC,EAUEC,mBAAqB,WACf,EAAKr0D,MAAMo0D,mBACb,EAAKh0D,SAAS,CAAEg0D,mBAAmB,KAZzC,uDAgBI,IAAM92B,EAA8B,2BAC/BvlC,KAAKiI,OAD0B,IAElC09B,sBAAuB3lC,KAAK2lC,sBAC5B22B,mBAAoBt8D,KAAKs8D,qBAG3B,OACE,gBAACF,EAAsBI,SAAvB,CAAgC97D,MAAO6kC,GACpCvlC,KAAKN,MAAM9B,cAxBpB,GAAmDF,c,8BC3BnD,gDAIMgG,EAAS,CACb+4D,OAAQ,CACNj+D,QAAS,OACTymB,OAAQ,QAEVy3C,eAAgB,CACdl+D,QAAS,OACTigB,QAAS,IAEXk+C,YAAa,QAGTC,EAAaC,0BAAe,SAAAn9D,GAAK,OACrC,0BAAM7B,MAAO6B,EAAMsB,SAAW0C,EAAOg5D,eAAiBh5D,EAAO+4D,QAC3D,kBAAC,IAAD,CAAgBK,UAAWp5D,EAAOi5D,kBAGvBC,O,gCCpBf,kLAEMzqD,EAAkBC,EAAOD,GAYlB4qD,EAAsB,SAACC,GAGlC,MAFgB,sDAEDvnC,KAAKunC,IAQTC,EAA6B,SACxCC,EACAh4D,GAEA,IAAM6Q,EAAwB,GAExBonD,EAAW,SACfp5B,EACAtjC,EACAgK,GAEI,IADJ2yD,EACG,uDADwB,GAEtBrnD,EAAOguB,KAAehuB,EAAOguB,GAAgB,IAElDhuB,EAAOguB,GAAc7kC,KAAK,CACxBuB,OACAgK,UACA2yD,sBA+CJ,OA3CKl4D,EAAQm4D,iBAOFn4D,EAAQm4D,iBAAiBh0D,QAAU,IAC5C8zD,EACE,cACA,QACAD,EAAE,iCACFA,EAAE,oDAEMH,EAAoB73D,EAAQm4D,mBACtCF,EACE,cACA,QACAD,EACE,0IAEFA,EAAE,oDApBJC,EACE,cACA,QACAD,EAAE,8BACFA,EAAE,4DAoBDh4D,EAAQwqB,WACXytC,EACE,OACA,QACAD,EAAE,sCACFA,EAAE,8CAIDh4D,EAAQo4D,cAAgBp4D,EAAQo4D,aAAav6C,MAAM,KAAK1Z,OAAS,IACpE8zD,EACE,cACA,QACAD,EAAE,wDACFA,EAAE,4CAICnnD,GAGIwnD,EAA0B,SACrCL,EACAnnD,GAEA,OAAK+e,OAAOC,KAAKhf,GAAQ1M,SAEzBm0D,YAAa,CACX/yD,QACEyyD,EACE,4EAEF,OACAp5C,IAAO/N,GACJ9M,KAAI,SAAA8M,GAAM,OACTA,EAAO9M,KAAI,SAACnI,GAAD,kBAA8BA,EAAM2J,YAAWkM,KAAK,SAEhEA,KAAK,MACV8mD,cAAUl/D,EACVm/D,QAAS,iCACTC,aAAa,KAGR,IAWIC,EAAiC,SAAC14D,GAI7C,IAHA,IAAM24D,EAAW1rD,EAAG2rD,uBAAuBC,sCACzC74D,GAEOkhC,EAAQ,EAAGA,EAAQy3B,EAAS//D,OAAQsoC,IAAS,CACpD,IAAM43B,EAAUH,EAASr+D,GAAG4mC,GAEtB63B,EAAyB9rD,EAAG2rD,uBAAuBI,qBACvDF,EAAQG,kBACRH,EAAQI,+BACR7tC,YAEFppB,QAAQrG,MAAR,wDACmDk9D,EAAQK,wBAD3D,uBACiGL,EAC5FG,kBACAzuC,UAHL,yBAG+BsuC,EAC1BM,2BACA5uC,UALL,MAOAvoB,QAAQC,KAAR,oCAC+B42D,EAAQI,8BADvC,mCAC+FH,EAAuBtnD,KAClH,OACG,SAHP,U,iQCjHS4nD,EAAmB,SAAC,GAMnB,IALZr5D,EAKW,EALXA,QACAs5D,EAIW,EAJXA,iBACAC,EAGW,EAHXA,iBACAC,EAEW,EAFXA,WACAC,EACW,EADXA,iBACW,EAQPjhE,aAAiB2T,KANnBtB,EAFS,EAETA,cACAQ,EAHS,EAGTA,QACAG,EAJS,EAITA,gBACAO,EALS,EAKTA,uBACAhB,EANS,EAMTA,QACAe,EAPS,EAOTA,uBAPS,EASetT,WAA6B,MAT5C,mBASJoD,EATI,KASG89D,EATH,OAaPlhE,WAAkC,MAb3B,mBAWTmhE,EAXS,KAYTC,EAZS,OAcaphE,WAA4B,MAdzC,mBAcJivB,EAdI,KAcEoyC,EAdF,OAeiDrhE,YAC1D,GAhBS,mBAeJshE,EAfI,KAeoBC,EAfpB,OAqBPvhE,YAAe,GArBR,mBAmBTwhE,EAnBS,KAoBTC,EApBS,OAsB+BzhE,YAAe,GAtB9C,mBAsBJ0hE,EAtBI,KAsBWC,EAtBX,OAuBuC3hE,WAChD,WAxBS,mBAuBJ4hE,EAvBI,KAuBeC,EAvBf,KA2BLC,EAAW9hE,cAAA,sBACf,8BAAAkT,EAAA,yDACOX,GAAY/K,EADnB,wDAGUxD,EAAOuO,EAAPvO,GACRk9D,EAAS,MAJX,kBAMuB/vC,YACjB5d,EACAvP,EACAwD,EAAQu6D,kBATd,OAMU9yC,EANV,OAWImyC,EAAqB,MACrBC,EAAQpyC,GAZZ,qDAcIxlB,QAAQ29B,IAAR,OACI,KAAIrb,SAfZ,oBAgBkC,MAAxB,KAAIA,SAASkU,OAhBvB,wBAiBQmhC,EAAqB,gBAjB7B,8BAmByC,MAAxB,KAAIr1C,SAASkU,OAnB9B,wBAoBQmhC,EAAqB,gBApB7B,2BAyBIF,EAAS,EAAD,IAzBZ,0DA4BA,CAAC15D,EAAS+L,EAAwBhB,IAG9ByvD,EAAiBhiE,cAAA,sBACrB,4BAAAkT,EAAA,yDACOX,GAAY/K,EADnB,wDAGUxD,EAAOuO,EAAPvO,GACRu9D,GAA0B,GAJ5B,kBAMUtxC,YAAa1c,EAAwBvP,EAAI,CAC7CkmB,OAAQ1iB,EAAQu6D,iBAChB5xC,WAAY3oB,EAAQy6D,aAAe,wBACnC/xC,SAAU1oB,EAAQwqB,WAAa,kBATrC,OAWI8vC,IACIb,GAAkBA,IAZ1B,kDAcIx3D,QAAQrG,MAAM,8BAAd,MACA08D,YAAa,CACXC,SAAS,EAAD,GACRC,QAAS,sBAETjzD,QACE,qFApBR,QAyBEw0D,GAA0B,GAzB5B,0DA2BA,CAAChuD,EAAwBhB,EAAS/K,EAASs6D,EAAUb,IAGjDiB,EAA0BliE,cAAA,sBAC9B,sBAAAkT,EAAA,yDACOX,GAAY/K,EADnB,wDAGEi6D,GAAkC,GAHpC,kBAKUnuD,IALV,uDAOI7J,QAAQrG,MAAM,qCAAd,MACA08D,YAAa,CACXC,SAAS,EAAD,GACRC,QAAS,yBACTjzD,QACE,4FAZR,QAiBE00D,GAAkC,GAjBpC,yDAmBA,CAAClvD,EAAS/K,EAAS8L,IAYrB,OATAtT,aACE,WACOivB,GACH6yC,MAGJ,CAACA,EAAU7yC,IAIX,gBAACkzC,EAAD,CACE9vD,cAAeA,EACfE,QAASA,EACTM,QAASA,EACTG,gBAAiBA,EACjBxL,QAASA,EACTynB,KAAMA,EACNoyC,QAASA,EACTS,SAAUA,EACVE,eAAgBA,EAChBV,uBAAwBA,EACxBR,iBAAkBA,EAClBC,iBAAkBA,EAClBI,kBAAmBA,EACnBK,+BAAgCA,EAChCluD,uBAAwB4uD,EACxBN,kBAAmBA,EACnBC,qBAAsBA,EACtBH,cAAeA,EACfC,iBAAkBA,EAClBv+D,MAAOA,EACP49D,WAAYA,KA6BLmB,EAAyB,SAAC,GAsBH,IArBlC9vD,EAqBiC,EArBjCA,cACAE,EAoBiC,EApBjCA,QACAM,EAmBiC,EAnBjCA,QACAG,EAkBiC,EAlBjCA,gBACAxL,EAiBiC,EAjBjCA,QACAynB,EAgBiC,EAhBjCA,KACAoyC,EAeiC,EAfjCA,QACAS,EAciC,EAdjCA,SACAE,EAaiC,EAbjCA,eACAV,EAYiC,EAZjCA,uBACAR,EAWiC,EAXjCA,iBACAC,EAUiC,EAVjCA,iBACAI,EASiC,EATjCA,kBACAK,EAQiC,EARjCA,+BACAluD,EAOiC,EAPjCA,uBACAsuD,EAMiC,EANjCA,kBACAC,EAKiC,EALjCA,qBACAH,EAIiC,EAJjCA,cACAC,EAGiC,EAHjCA,iBACAv+D,EAEiC,EAFjCA,MACA49D,EACiC,EADjCA,WAEA,OAAKx5D,EAIA6K,GAAkBE,EAMG,iBAAtB4uD,EAEA,gBAAC,IAAD,CACE30D,KAAK,OACLE,kBAAmB,kBACjB,gBAAC,IAAD,CACE/I,MAAO,gBAAC,QAAD,6BACPL,SAAUg+D,EACV9xD,SAAO,EACPvK,QAAS+8D,MAIb,gBAAC,QAAD,gMASoB,iBAAtBb,EAEA,gBAAC,IAAD,CAAc30D,KAAK,SACjB,gBAAC,QAAD,uKASFpJ,EAEA,gBAAC,IAAD,CACEymB,QAAS,WACPi4C,MAGF,gBAAC,QAAD,sDAA6D,IAC7D,gBAAC,QAAD,6DAKF7yC,EACE6xC,EAAyB,KACxBvuD,EAAQ6vD,kBAiBTrB,EAAyB,KAE3B,gBAAC,IAAD,CAAmBvgE,UAAQ,GACzB,gBAAC,IAAD,CAAM0F,eAAe,UACnB,gBAAC,IAAD,CACEgG,KAAM,gBAAC,IAAD,MACNvI,MAAO,gBAAC,QAAD,kBACPsB,QAAS,WACP48D,EAAqB,aACrBF,GAAiB,OAItBD,GACC,gBAAC,IAAD,CACEzyC,KAAMA,EACNznB,QAASA,EACT66D,WAAYT,EACZ7R,QAAS,WACP4R,GAAiB,IAEnBW,cAAe,SAAAC,GACblB,EAAQkB,IAEVC,cAAe,WACbb,GAAiB,GACjBG,QAzCN,gBAAC,IAAD,CACEt1D,KAAK,OACLE,kBAAmB,kBACjB,gBAAC,IAAD,CACE/I,MAAO,gBAAC,QAAD,uBACPL,SAAUk+D,EACVhyD,SAAO,EACPvK,QAASqO,MAIb,gBAAC,QAAD,+CAsCD0tD,EAAa,KAAO,gBAAC,IAAD,MAxGvB,gBAAC,IAAD,CAAenuD,QAASA,EAASG,gBAAiBA,IAL7C,O,8BCzOX,2QA2CayvD,EAAuB,iBAA0B,CAC5D,CACEC,OAAQ,eACR9+D,KAAM,eACN++D,oBAAqB,EACrBC,iBAAkB,sCAClBC,mBAAoB,CAClB,CACE91D,QAAS,6EAEX,CACEA,QAAS,gGAEX,CACEA,QAAS,6EAGb+1D,iBAAkB,sGAEpB,CACEJ,OAAQ,iBACR9+D,KAAM,iBACN++D,oBAAqB,EACrBC,iBAAkB,2BAClBC,mBAAoB,CAClB,CACE91D,QAAS,6EAEX,CACEA,QAAS,gGAEX,CACEA,QAAS,4EAGb+1D,iBAAkB,sGAEpB,CACEJ,OAAQ,KACR9+D,KAAM,kBACN++D,oBAAqB,EACrBE,mBAAoB,CAClB,CACE91D,QAAS,gLAMJg2D,EAAgB,SAC3BxvD,EACA+X,GAEA,OAAO/X,IACJ4X,MAAK,SAAAK,GAAmB,OACvBC,IAAMzO,IAAN,UAAagmD,IAAiBp3C,QAA9B,UAA+C,CAC7CxH,OAAQ,CACNkH,UAEFO,QAAS,CACPC,cAAeN,QAIpBL,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBi3C,EAAgB,SAC3B1vD,EACA+X,GAEA,OAAO/X,IACJ4X,MAAK,SAAAK,GAAmB,OACvBC,IAAMzO,IAAN,UAAagmD,IAAiBp3C,QAA9B,WAAgD,CAC9CxH,OAAQ,CACNkH,UAEFO,QAAS,CACPC,cAAeN,QAIpBL,MAAK,SAAAY,GAAQ,OAAIA,EAASC,KAAKrZ,WAGvBuwD,EAAsB,SACjC3vD,EACA+X,GAEA,OAAO/X,IACJ4X,MAAK,SAAAK,GAAmB,OACvBC,IAAMzO,IAAN,UAAagmD,IAAiBp3C,QAA9B,oBAAyD,CACvDxH,OAAQ,CACNkH,UAEFO,QAAS,CACPC,cAAeN,QAIpBL,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBm3C,EAAyB,SACpC5vD,EACA+X,EACA83C,GAEA,OAAO7vD,IACJ4X,MAAK,SAAAK,GAAmB,OACvBC,IAAMC,KAAN,UACKs3C,IAAiBp3C,QADtB,oBAEEw3C,EACA,CACEh/C,OAAQ,CACNkH,UAEFO,QAAS,CACPC,cAAeN,QAKtBL,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAKlBhB,EAAe,SAAC5G,GAO3B,OAAOqH,IACJC,KADI,UACIs3C,IAAiBp3C,QADrB,8BAC0DxH,GAC9D+G,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBq3C,EAA2B,SACtCX,EACA3iC,EACAujC,GAEA,MAAM,GAAN,OACEN,IAAiBp3C,QADnB,wDAEgD23C,mBAC9Cb,GAHF,8BAIuBa,mBACrBxjC,GALF,0BAMmBwjC,mBAAmBD,M,+DCnK3BE,EAA0B,CACrCC,aAAc,KACdC,mBAAoB,KACpBC,sBAAsB,EACtBC,SAAU,CACRC,QAAS,KACTC,aAAc,KACdC,iBAAkB,KAClBC,cAAe,MAEjBC,kBAAkB,WAAD,4BAAE,sBAAA/wD,EAAA,+EAAY,MAAZ,2CAAF,kDAAC,GAClBgxD,iBAAiB,WAAD,4BAAE,sBAAAhxD,EAAA,0FAAF,kDAAC,GACjBixD,kBAAmB,aACnBC,wBAAyB,aACzBC,kBAAkB,WAAD,4BAAE,sBAAAnxD,EAAA,0FAAF,kDAAC,GAClBoxD,iBAAiB,WAAD,4BAAE,sBAAApxD,EAAA,0FAAF,kDAAC,GACjBqxD,kBAAkB,WAAD,4BAAE,sBAAArxD,EAAA,0FAAF,kDAAC,GAClBsxD,uBAAuB,WAAD,4BAAE,WAAMC,GAAN,SAAAvxD,EAAA,0FAAF,mDAAC,GACvBwxD,wBAAwB,WAAD,4BAAE,sBAAAxxD,EAAA,0FAAF,kDAAC,IAGpByxD,EAAqB3kE,gBACzBwjE,GAGamB,O,4LCjDFC,EAA0B,CACrCC,mBAAoB,EACpBC,UAAW,IACXC,gBAAgB,EAChBC,gBAAgB,GAGZC,EAAmB,SAACC,EAAoBpxC,GAC5C,IAAMqxC,EAAsBrxC,EAAW5K,cACvC,OAAOg8C,EAAME,QACV75D,KAAI,SAAAm9B,GACH,IAAM28B,EAAuBH,EAAMliE,MAChC+V,MAAM2vB,EAAM,GAAIA,EAAM,GAAK,GAC3Bxf,cAEH,GAAIm8C,IAAyBF,EAAqB,OAAOz8B,EACzD,IAAM48B,EAAiCD,EAAqBr7D,QAC1Dm7D,GAMF,OAAwC,IAApCG,EAIG,CACL58B,EAAM,GAAK48B,EACX58B,EAAM,GAAK48B,EAAiCxxC,EAAWnoB,OAAS,QANlE,KASDF,OAAO0R,UAGCooD,EAAc,SAAIjkE,EAAyBwyB,GAA7B,OACzBxyB,EAAOkkE,QAAQj6D,KAAiB,SAAA25D,GAAK,MAAK,CACxCn6C,IAAKm6C,EAAMn6C,IACX/nB,MAAOkiE,EAAMliE,MACboiE,QAASH,EAAiBC,EAAOpxC,QAOxB2xC,EAAsB,SACjCC,EACAt8B,EACAG,GAEA,IAAKm8B,EAAe,OAAO,KAE3B,IAAMC,EAAYC,YAAY39D,MACxB49D,EAAwBH,EAC3Bj6D,QAAO,YAAyB,IAAdkW,EAAa,EAArB6+B,KAAQ7+B,KACjB,IAAKynB,EAAgB,OAAO,EAO5B,KAFEA,EAAevrB,KAAKioD,oBACpBnkD,EAAKyqB,MAAK,SAAA7nB,GAAG,OAAIA,IAAQ6kB,EAAevrB,KAAKja,SACpB,OAAO,EARJ,oBASLwlC,EAAe28B,aATV,yBASnBC,EATmB,QAU5B,OAAIA,EAAWF,mBAGP,CAAN,GAAO,GAGoBnkD,EAAKyqB,MAAK,SAAA7nB,GAAG,OAAIA,IAAQyhD,EAAWpiE,aACjE,EAAiC,CAAN,GAAO,IARpC,2BAAqD,CAAC,IAAD,yCATvB,8BAoB9B,OAAO,KAER6H,QAAO,YAAyB,IAAdkW,EAAa,EAArB6+B,KAAQ7+B,KACjB,OACyB,IAAvB4nB,EAAcnpC,MAAcuhB,EAAKyqB,MAAK,SAAA7nB,GAAG,OAAIglB,EAAc1C,IAAItiB,SAI/D0hD,EAAYL,YAAY39D,MAAQ09D,EAItC,OAHAl8D,QAAQC,KAAR,gDAC2Cu8D,EAAUC,QAAQ,GAD7D,QAGOL,GAUIM,EAAgB,SAC3BC,EACAtyC,EACAsV,EACAG,GAEA,IAAM88B,EAAermE,SAAmB,MADmB,EAEjBA,WAGrC,MALsD,mBAEpD0lE,EAFoD,KAErCY,EAFqC,KASrDC,EAAwBvmE,WAC5B,WACE,OAAKomE,EAEEI,IACLpvC,OAAOC,KAAK+uC,GAAiB76D,KAAI,SAAAvH,GAAE,MAAK,CACtCw8C,KAAM4lB,EAAgBpiE,GACtBwhE,QAAS,QALgB,OAS/B,CAACY,IAIHpmE,aACE,WACE,GAAKomE,EAAL,CAKA,IAAMT,EAAYC,YAAY39D,MAC1Bo+D,EAAa9jE,UACf8jE,EAAa9jE,QAAU,MAGzB,IACE,IAAMkkE,EAAe,IAAIC,IAAKtvC,OAAOhR,OAAOggD,GAAkB,CAC5D/uC,KAAM,CACJ,CAAEzzB,KAAM,OAAQ+iE,OAAQ,GACxB,CAAE/iE,KAAM,WAAY+iE,OAAQ,GAC5B,CAAE/iE,KAAM,mBAAoB+iE,OAAQ,IAEtC9B,mBAAoB,EACpBC,UAAW,IACXC,gBAAgB,EAChBC,gBAAgB,IAGZiB,EAAYL,YAAY39D,MAAQ09D,EACtCl8D,QAAQC,KAAR,kBAEI0tB,OAAOC,KAAK+uC,GAAiBz6D,OAFjC,qBAGes6D,EAAUC,QAAQ,GAHjC,QAKAG,EAAa9jE,QAAUkkE,EACvB,MAAOrjE,GACPqG,QAAQrG,MAAM,+BAAgCA,OAGlD,CAACgjE,IAKH,IAAMQ,EAAYP,EAAa9jE,QA4D/B,OA3DAvC,aACE,WACE,IAAI6mE,GAAgB,EACpB,GAAK/yC,EAQE,CACL,IAAKsyC,IAAoBQ,EAIvB,YAHAn9D,QAAQC,KACN,qFAKJ,IAAMi8D,EAAYC,YAAY39D,MACxB6+D,EAAUF,EAAUG,OAAV,WAAqBjzC,IAC/BmyC,EAAYL,YAAY39D,MAAQ09D,EAItC,GAHAl8D,QAAQC,KAAR,gBACWo9D,EAAQn7D,OADnB,qBACsCs6D,EAAUC,QAAQ,GADxD,QAGIW,EAIF,YAHAp9D,QAAQC,KACN,2DAIJ48D,EACEb,EACEqB,EAAQv7D,KAAI,SAAAjK,GAAM,MAAK,CACrBk/C,KAAMl/C,EAAOk/C,KACbglB,QAASD,EAAYjkE,EAAQwyB,OAE/BsV,EACAG,SAlCJ+8B,EACEb,EACEc,EACAn9B,EACAG,IAmCN,OAAO,WAGLs9B,GAAgB,KAGpB,CACEN,EACAH,EACAtyC,EACAsV,EACAG,EACAq9B,IAIGlB,I,+HCvNH1/D,EAAS,CACb4K,UAAW,CAAEnL,KAAM,GACnBuhE,KAAM,CAAE9hB,UAAW,WAMR+hB,EAAoB,YAOP,IANxBr3D,EAMuB,EANvBA,qBACAs3D,EAKuB,EALvBA,YACAC,EAIuB,EAJvBA,sBACAC,EAGuB,EAHvBA,iBACAhkE,EAEuB,EAFvBA,MACAymB,EACuB,EADvBA,QAEMm9C,EAAOhnE,SAAoB,MAI3BqnE,EAAwBrnE,SAAa,GACrCsnE,EAAgBtnE,SAAa,IAC7BunE,EAAuBvnE,eAC3B,SAACwnE,EAAYr7D,GACX,OAAIm7D,EAAc/kE,QAAQ4kE,EAAsBK,MAAiBr7D,IAGjEm7D,EAAc/kE,QAAQ4kE,EAAsBK,IAAer7D,GACpD,KAET,CAACg7D,IAEGM,EAAeznE,eACnB,YAAgB,IAAb0oC,EAAY,EAAZA,MACD,IAAKw+B,IAAgBA,EAAYx+B,GAAQ,OA7BlB,GA+BvB,IAAM8+B,EAAaN,EAAYx+B,GAC/B,OACE4+B,EAAc/kE,QAAQ4kE,EAAsBK,KAjCvB,KAqCzB,CAACN,EAAaC,IAIVO,EAAY1nE,eAChB,YAA+B,IAA5B+qB,EAA2B,EAA3BA,IAAK48C,EAAsB,EAAtBA,SAAUxnE,EAAY,EAAZA,MAChB,IAAK+mE,EAAa,OAAO,KAEzB,IAAMM,EAAaN,EAAYS,GAC/B,OAAKH,EAGH,uBAAKz8C,IAAKA,EAAK5qB,MAAOA,GACnBinE,EAAiBI,GAAY,SAAAr7D,GACHo7D,EAAqBC,EAAYr7D,IAClC66D,EAAKzkE,SAC3BykE,EAAKzkE,QAAQqlE,kBAAkB,EAAGD,OAPlB,OAa1B,CAACT,EAAaK,EAAsBH,IAGtC,OAAKF,EAY6B,IAAvBA,EAAYv7D,OAEnB,gBAAC,IAAD,KACE,gBAAC,QAAD,kGASJ,gBAAC,IAAD,KACE,uBACExL,MAAO6F,EAAO4K,UACdjB,UAAWC,EAAuB,cAAgB,IAElD,gBAAC,IAAD,MACG,YAAwB,IAArBpK,EAAoB,EAApBA,MAAO2G,EAAa,EAAbA,OACT,OAAK3G,GAAU2G,GAGXk7D,EAAsB9kE,UAAYiD,IACpC8hE,EAAc/kE,QAAU,GACxB8kE,EAAsB9kE,QAAUiD,GAIhC,gBAAC,IAAD,CACEvF,IAAK,SAAA4nE,GACCA,GAEFA,EAAGD,kBAAkB,EAAG,GAE1BZ,EAAKzkE,QAAUslE,GAEjBriE,MAAOA,EACP2G,OAAQA,EACR27D,YAAa,EACbC,YAAaviE,EACbk4D,UAAW+J,EACXhK,SAAUyJ,EAAYv7D,OACtBq8D,aAAcN,EACdvnE,MAAO6F,EAAOghE,QAxBY,UA9BjC5jE,EAGD,gBAAC,IAAD,CAAkBymB,QAASA,GACzB,gBAAC,QAAD,iFAJa,gBAAC,IAAD,Q,6BCxFvB,kFAMM7jB,EAAS,CACbmnD,KAAM,CACJ/gD,YAAa,IASJ67D,EAAwB,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,KAAuC,IAAjCC,mBAAiC,SACrEC,EAA0BpoE,aAAiBqoE,KAA3CD,sBAER,OACE,gBAAC,IAAD,CACEl8D,KAAM,gBAAC,IAAD,MACN9L,KAAK,QACLD,MAAO6F,EAAOmnD,KACdxpD,MAAOukE,EAAK94C,SACZrE,IAAKm9C,EAAK94C,SACVnqB,QAASkjE,EAAc,kBAAMC,EAAsBF,EAAKlkE,KAAM,S,6BC3BpE,+DAIMi9B,EAAkBjhC,gBACtB,IAAIsoE,KAOOC,EAA0B,SAACvmE,GACtC,IAAMg/B,EAAiBwnC,aAA2B,kBAAM,IAAIF,OAE5D,OACE,gBAACrnC,EAAgB69B,SAAjB,CAA0B97D,MAAOg+B,GAC9Bh/B,EAAM9B,WAKE+gC,O,0RCQTxsB,EAAkBC,EAAOD,GAEzBzO,EAAS,CACb2d,UAAW,CACTD,gBAAiB,cACjB3iB,WAAY,EACZyd,OAAQ,IAINiqD,EAAkB,SAAC19C,GACvB,OAAOtW,EAAGsI,WAAWC,MAClB0rD,wCAAwC39C,GACxC49C,WAuBgBC,E,4MAGnBr+D,MAAkB,CAChBupB,WAAY,GACZ4xC,cAAe,I,EAGjBmD,YAAc7oE,c,EACd8oE,cAAgB9oE,c,EAChB4mE,UAAY,K,EAEZmC,2BAA6BxV,YAC3B,EAAKvxD,MAAMgnE,qBACX,EAAKhnE,MAAMsd,c,EAwBb9c,MAAQ,WACF,EAAKymE,YAAY,EAAKA,WAAWzmE,S,kEApBnCF,KAAKN,MAAMwd,cACXqD,eACAvgB,KAAK2mE,YAEL3mE,KAAK2mE,WAAWzmE,QAEdF,KAAKwmE,cAAcvmE,SAAWD,KAAKumE,YAAYtmE,SACjDD,KAAKumE,YAAYtmE,QAAQgP,SAASjP,KAAKwmE,cAAcvmE,SAGvDD,KAAKskE,UAAY,IAAIF,IAAKpkE,KAAKN,MAAMknE,iBAApB,2BACZtE,KADY,IAEfvtC,KAAM,CACJ,CAAEzzB,KAAM,gBAAiB+iE,OAAQ,GACjC,CAAE/iE,KAAM,gBAAiB+iE,OAAQ,S,+BAS7B,IAAD,SAaHrkE,KAAKN,MAXPsd,EAFK,EAELA,aACAyH,EAHK,EAGLA,SACAiiD,EAJK,EAILA,qBACAzpD,EALK,EAKLA,SACA4pD,EANK,EAMLA,4BACAC,EAPK,EAOLA,6BACAC,EARK,EAQLA,cACAn8D,EATK,EASLA,aACA/M,EAVK,EAULA,MACAmpE,EAXK,EAWLA,YACAtlE,EAZK,EAYLA,GAEM8vB,EAAexxB,KAAKiI,MAApBupB,WACFy1C,EACFz1C,GAAcxxB,KAAKskE,UACjBtkE,KAAKskE,UAAUG,OAAf,WAA0BjzC,IAAcvoB,KAAI,SAAAjK,GAAM,MAAK,CACrDk/C,KAAMl/C,EAAOk/C,KACbglB,QAASD,YAAYjkE,EAAQwyB,OAE/B,GACA01C,GAAc11C,KAAgBy1C,EAA0B59D,OAExD89D,EAAiB,WAChBF,EAA0B59D,QAE/B4T,EACEgqD,EAA0B,GAAG/oB,KAAKz9C,KAClCwmE,EAA0B,GAAG/oB,OAIjC,OACE,gBAAC,IAAD,MACG,SAAA1/B,GAAQ,OACP,uBACE3gB,MAAK,aACHujB,gBAAiB5C,EAAS+S,KAAK61C,sBAC5BvpE,GAEL6D,GAAIA,GAEJ,gBAAC,IAAD,CACEhB,MAAO8wB,EACPpxB,SAAU,SAAAoxB,GAAU,OAClB,EAAKnpB,SAAS,CACZmpB,gBAGJtS,gBAAiBioD,EACjBtpE,MAAO6F,EAAO2d,UACd9f,YACEslE,EACIC,EACE,8DAAWD,gCACX,2DAAWA,qCACbtoE,EAENqM,aAAcA,EACdjN,IAAK,SAAA0jB,GAAS,OAAK,EAAKslD,WAAatlD,KAEvC,gBAAC,IAAD,CACE1jB,IAEE,EAAK4oE,aAGNW,GACC,gBAAC,IAAD,KACG11C,EACCy1C,EAA0Bh+D,KACxB,gBACQqoD,EADR,EACEpT,KACAglB,EAFF,EAEEA,QAFF,OAIEmE,YAAsC,CACpCC,gCAAiChW,EACjC7sC,SAAUA,EACV9hB,QAAS,kBACPsa,EACEq0C,EAA0C7wD,KAC1C6wD,IAEJ4R,UACAqE,cAAejlB,YACbtlC,QAKR,gCACGwqD,YAAkC,CACjCtW,oBAAqBwV,EACrBjiD,WACAxH,WACA8pD,gBACAQ,cAAejlB,YACbtlC,GAEFyqD,oBAAqB,EAAKhB,2BAC1BiB,gBAAiB,EAAKlB,cACtBL,oBAEDa,GACC,gBAAC,IAAD,CAA2BpjE,eAAe,UACxC,gBAAC,IAAD,CACEsJ,SAAO,EACPtD,KAAM,gBAAC,IAAD,MACNjH,QAASqkE,EACT3lE,MACE,gBAAC,QAAD,+CASd6lE,GACA,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,gBAAC,QAAD,wF,GAnKVxpE,mB,+CCpEV,oGA8EeiqE,IA1DoB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,WAC9BrpB,EAAc7gD,aAAiB+kC,KAC7B3e,EAA6By6B,EAA7Bz6B,OAAQ+jD,EAAqBtpB,EAArBspB,iBACRC,EAAcpqE,aAAiBqqE,KAA/BD,UAER,GAAIhkD,EAAOkkD,oBAAoBJ,GAAa,OAAO,KAEnD,IAAKE,EAAW,OAAO,KACvB,IAAMG,EAAsBH,EAAU/kC,MACpC,SAAAklC,GAAQ,OAAIA,EAASvmE,KAAOkmE,KAE9B,OAAKK,EAMH,gBAAC,OAAD,MACG,cAAGznE,KAAH,OACC,gBAAC,IAAD,CACE0J,KAAM,OACNtM,SAAUqqE,EAAS3jE,MACnB+F,eAAgB,kBACd,uBACE0a,IAAI,GACJlnB,MAAO,CACL2Q,SAAU,IACVyG,UAAW,KAEb0O,IAAKskD,EAAS55C,gBAGlBjkB,kBAAmB,kBACjB,gBAAC,IAAD,CACER,KACoB,UAAlBq+D,EAASxnE,KAAmB,gBAAC,IAAD,MAAkB,gBAAC,IAAD,MAEhDY,MACoB,UAAlB4mE,EAASxnE,KACP,gBAAC,QAAD,2BAEA,gBAAC,QAAD,0BAGJkC,QAAS,WACPoI,IAAOC,gBAAgBi9D,EAASC,UAItC/9D,OAAQ,WACN09D,EAAiBD,GAAY,UAtCrCzgE,QAAQ4sB,KAAR,mBAAyB6zC,EAAzB,eACO,Q,oJCrBEG,EAAkBrqE,gBAAmC,CAChEoqE,UAAW,KACXK,eAAgB,aAChBrnE,MAAO,OAOIsnE,EAAwB,SAAC,GAEH,IADjCxqE,EACgC,EADhCA,SACgC,EACEF,WAA8B,MADhC,mBACzBoqE,EADyB,KACdO,EADc,OAEN3qE,WAAuB,MAFjB,mBAEzBoD,EAFyB,KAElB89D,EAFkB,KAG1BhiC,EAAYl/B,UAAsB,GAElCyqE,EAAiBzqE,eACrB,WAGMoqE,GAAalrC,EAAU38B,SAE3B,sBAAC,4BAAA2Q,EAAA,6DACCguD,EAAS,MACThiC,EAAU38B,SAAU,EAFrB,kBAK+C6xD,cAL/C,OAKSwW,EALT,OAOGnhE,QAAQC,KAAR,iBAAuBkhE,EAAaj/D,OAApC,gBACAg/D,EAAaC,GARhB,kDAUGnhE,QAAQrG,MAAR,sCACA89D,EAAS,EAAD,IAXX,QAcChiC,EAAU38B,SAAU,EAdrB,yDAAD,KAiBF,CAAC6nE,EAAWlrC,IAGR2rC,EAAgB7qE,WACpB,iBAAO,CACLoqE,YACAK,iBACArnE,WAEF,CAACgnE,EAAWK,EAAgBrnE,IAG9B,OACE,gBAACinE,EAAgBvL,SAAjB,CAA0B97D,MAAO6nE,GAC9B3qE,K,8BChEP,mTAKMuU,EAAkBC,EAAOD,GAUlB+iC,EAAmB,SAC9B7kB,EACAykB,GAEA,IAAMnkB,EACJmkB,EAAyBlkB,eACzBkkB,EAAyBplB,UAC3BW,EACGm4C,wBACC1zB,EAAyBplB,UACzBiB,EACAmkB,EAAyBl5B,iBACzBk5B,EAAyB6qB,YACzB,IAED8I,qBAAqB3zB,EAAyB4zB,eAC9CC,WAAW7zB,EAAyB8zB,cAEnCj4C,GACFN,EACGw4C,wCAAwCl4C,GACxCm4C,QAAQh0B,EAAyB8zB,cAGlC9zB,EAAyBhK,eAC3Bza,EAAU04C,YAAYj0B,EAAyBhK,eAEjDk+B,EAA6B34C,EAAWykB,IAM7Bk0B,EAA+B,SAC1C34C,EACAykB,GAF0C,OAI1Cx1C,oBACEw1C,EAAyBm0B,sBACzB,SAAAC,GAAU,OAAI74C,EAAU84C,gBAAgBC,SAASF,OAG/CG,EAAsB,SAACh5C,GAC3B,OAAOA,EAAUu4C,cAAgB,sBAOtB/yB,EAA0B,SACrCxlB,EACAulB,GAEA,IAAM0zB,EAAoB,IAAIn3D,EAAGo3D,yBAiB3BC,EAAuBC,YAC3B7zB,EAAoB8zB,0BAgGtB,OA5FAJ,EAAkBK,eAAiB,SACjCC,EACA7lC,EACAn7B,GAEA,IAAMihE,EAAqBL,EAAqBzmC,MAC9C,SAAA8mC,GAAkB,OAAIA,EAAmBvoE,OAASyiC,KAEpD,IAAK8lC,EAAoB,OAAO,EAEhC,IAAMv9D,EAAUs9D,EAAgBE,SAAS/lC,GACnCgmC,EAAuBF,EAAmBppE,KAehD,MAZmB,WAAjBspE,GACiB,WAAjBA,GACiB,UAAjBA,GACiB,aAAjBA,EAEAz9D,EAAQ09D,eAAephE,GACG,WAAjBmhE,EACTz9D,EAAQ29D,eAAehqC,WAAWr3B,IACR,YAAjBmhE,GACTz9D,EAAQ49D,aAA0B,MAAbthE,IAGhB,GAIT0gE,EAAkBltB,cAAgB,SAASwtB,GACzC,IAAIO,EAAqB,IAAIh4D,EAAGi4D,4BAqChC,OAnCAZ,EAAqBxjE,SAAQ,SAAA6jE,GAC3B,IAAM9lC,EAAe8lC,EAAmBvoE,KAClCyoE,EAAeF,EAAmBppE,KAClC4pE,EAAcC,YAClBT,EACAM,EAAmBI,YAAYxmC,IAG7B6lC,EAAgBY,SAASzmC,KAER,WAAjBgmC,GACiB,WAAjBA,GACiB,UAAjBA,GACiB,aAAjBA,EAEAM,EAAY9qD,SACVqqD,EAAgBa,SAAS1mC,GAAc2mC,kBAEf,WAAjBX,EACTM,EAAY9qD,SACV,GAAKqqD,EAAgBa,SAAS1mC,GAAc4mC,kBAEpB,YAAjBZ,GACTM,EAAY9qD,SACVqqD,EAAgBa,SAAS1mC,GAAc6mC,eACnC,OACA,aASLT,GAITb,EAAkBuB,kBAAoB,SAASjB,GAC7CJ,EAAqBxjE,SAAQ,SAAA6jE,GAC3B,IAAMv9D,EAAUs9D,EAAgBE,SAASD,EAAmBvoE,MACtDyoE,EAAuBF,EAAmBppE,KAG7B,WAAjBspE,GACiB,WAAjBA,GACiB,UAAjBA,GACiB,aAAjBA,EAEAz9D,EAAQ09D,eAAeH,EAAmBnpE,OAChB,WAAjBqpE,EACTz9D,EAAQ29D,eAAehqC,WAAW4pC,EAAmBnpE,QAAU,GACrC,YAAjBqpE,GACTz9D,EAAQ49D,aAA0C,SAA7BL,EAAmBnpE,WAKvC2vB,EACJy6C,YACCl1B,EAAoBlmB,UACpBkmB,EAAoBhlB,eAAiBglB,EAAoBlmB,UACzDkmB,EAAoBlmB,UACpBkmB,EAAoBh6B,iBACpB,GACAytD,EAAoBh5C,GACpBulB,EAAoBlmB,UACpB45C,EACA,IAAIn3D,EAAG44D,qBAERC,cAAcp1B,EAAoBq1B,kBAO1Bp0B,EAAoC,SAACrB,GAChD,OAW+B,IAV7B,CACE,YACA,aACA,eACA,kBACA,mBACA,YAEA,2BAEA9tC,QAAQ8tC,IAQDD,EAAqC,SAACC,GACjD,OAAOrjC,EAAG+4D,yBAAyB31B,mCACjCC,IAQSkC,EAAyC,SACpDrnB,EACAykB,EACAP,GAEA,IAAM42B,EAAe52B,EAAe62B,kBACpC,OAAID,IAAiBh5D,EAAGk5D,eAAeC,WAC9Bj7C,EAAUk7C,cACfh3B,EAAe7kB,UACf6kB,EAAe3jB,eAAiB2jB,EAAe7kB,UAC/C6kB,EAAe34B,kBAAoB24B,EAAe3jB,cAClD2jB,EAAetI,YAAc,GAC7Bo9B,EAAoBh5C,IAEb86C,IAAiBh5D,EAAGk5D,eAAeG,iBACrCn7C,EAAUo7C,iBACfl3B,EAAe7kB,UACf6kB,EAAe3jB,eAAiB2jB,EAAe7kB,UAC/C6kB,EAAe34B,kBAAoB24B,EAAe3jB,cAClD2jB,EAAetI,YAAc,GAC7Bo9B,EAAoBh5C,IAEb86C,IAAiBh5D,EAAGk5D,eAAeK,UACrCr7C,EAAUs7C,aACfp3B,EAAe7kB,UACf6kB,EAAe3jB,eAAiB2jB,EAAe7kB,UAC/C6kB,EAAe34B,kBAAoB24B,EAAe3jB,cAClD2jB,EAAeq3B,cACfr3B,EAAetI,YAAc,GAC7Bo9B,EAAoBh5C,GACpBg5C,EAAoBh5C,IAGfA,EAAUw7C,UACft3B,EAAe7kB,UACf6kB,EAAe3jB,eAAiB2jB,EAAe7kB,UAC/C6kB,EAAe34B,kBAAoB24B,EAAe3jB,cAClD2jB,EAAeq3B,cACfr3B,EAAetI,YAAc,GAC7Bo9B,EAAoBh5C,GACpBg5C,EAAoBh5C,KASbsmB,EAAiD,SAC5DtmB,EACA8c,EACAyI,EACArB,GAEA,IAAM42B,EAAe52B,EAAe62B,kBACpC,OAAID,IAAiBh5D,EAAGk5D,eAAeC,WAC9Bn+B,EAAiBo+B,cACtBh3B,EAAe7kB,UACf6kB,EAAe3jB,eAAiB2jB,EAAe7kB,UAC/C6kB,EAAe34B,kBAAoB24B,EAAe3jB,cAClD2jB,EAAetI,YACb2J,EAAoBhlB,eACpBglB,EAAoBlmB,UACtB25C,EAAoBh5C,IAEb86C,IAAiBh5D,EAAGk5D,eAAeG,iBACrCr+B,EAAiBs+B,iBACtBl3B,EAAe7kB,UACf6kB,EAAe3jB,eAAiB2jB,EAAe7kB,UAC/C6kB,EAAe34B,kBAAoB24B,EAAe3jB,cAClD2jB,EAAetI,YACb2J,EAAoBhlB,eACpBglB,EAAoBlmB,UACtB25C,EAAoBh5C,IAEb86C,IAAiBh5D,EAAGk5D,eAAeK,UAIrCv+B,EAAiB2+B,mBACtBv3B,EAAe7kB,UACf6kB,EAAe3jB,eAAiB2jB,EAAe7kB,UAC/C6kB,EAAe34B,kBAAoB24B,EAAe3jB,cAClD2jB,EAAeq3B,cACfr3B,EAAetI,YACb2J,EAAoBhlB,eACpBglB,EAAoBlmB,UACtB25C,EAAoBh5C,GACpBg5C,EAAoBh5C,IAMf8c,EAAiB4+B,gBACtBx3B,EAAe7kB,UACf6kB,EAAe3jB,eAAiB2jB,EAAe7kB,UAC/C6kB,EAAe34B,kBAAoB24B,EAAe3jB,cAClD2jB,EAAeq3B,cACfr3B,EAAetI,YACb2J,EAAoBhlB,eACpBglB,EAAoBlmB,UACtB25C,EAAoBh5C,GACpBg5C,EAAoBh5C,KAebkmB,EAAqD,SAChE/1C,EACA6vB,EACA8c,EACAyI,GAEA,IAAMo2B,EAAiC,SACrCt1B,GA6BA,OA1BAA,EAAwBu1B,aACtB,SACA,SACA,IACA,GAMFv1B,EACG3rB,aAAa2rB,EAAwB5rB,qBAAuB,GAC5DohD,aAAat2B,EAAoBq1B,iBAGpCv0B,EAAwBu1B,aACtB,WACA,WACAr2B,EAAoBlmB,WACpB,GAKFgnB,EAAwBK,aAEjBL,GAGTp3C,oBAAUs2C,EAAoB8zB,0BAA0B,SAAAzlC,GACtD,IAAM8lC,EAAe9lC,EAAS1Q,UACxBwQ,EAAeE,EAASvU,UACxBy8C,EAAah6D,EAAGklC,sBAAsB+0B,8BAC1CroC,GAEIsoC,EAAal6D,EAAGklC,sBAAsBi1B,8BAC1CvoC,GAEIwoC,EACJtoC,EAASgB,YAAczkC,EAAKiB,EAAE,sCAAIsiC,kBAEf,WAAjBgmC,GAA8C,WAAjBA,GAC/BiC,EACE7+B,EAAiBs+B,iBACft5D,EAAGq6D,oBAAoBC,0BAA0B1oC,GACjDwoC,EACAA,EACA32B,EAAoBhlB,eAAiBglB,EAAoBlmB,UACzD25C,EAAoBh5C,KAGrB2mB,0BACAC,gBAAgBk1B,GAEnBH,EACE7+B,EAAiB2+B,mBACf35D,EAAGq6D,oBAAoBE,yBAAyB3oC,GAChDwoC,EACA/rE,EAAKiB,EAAE,qDAA2B8qE,mBAClC/rE,EAAKiB,EAAE,0CAAiBsiC,kBACxB6R,EAAoBhlB,eAAiBglB,EAAoBlmB,UACzD25C,EAAoBh5C,GACpBg5C,EAAoBh5C,KAGrBs8C,wCAAwC,UACxC31B,0BACAC,gBAAgBk1B,GAEnBH,EACE7+B,EAAiB4+B,gBACf55D,EAAGq6D,oBAAoBI,sBAAsB7oC,GAC7CwoC,EACA/rE,EAAKiB,EAAE,oDAA0B8qE,mBACjC/rE,EAAKiB,EAAE,0CAAiBsiC,kBACxB6R,EAAoBhlB,eAAiBglB,EAAoBlmB,UACzD25C,EAAoBh5C,GACpBg5C,EAAoBh5C,KAGrBw8C,8BAA8B,UAC9B71B,0BACAC,gBAAgBo1B,GAChBS,mBAAmB,UACnBC,UAAUZ,IACa,WAAjBpC,GACTiC,EACE7+B,EAAiBo+B,cACfp5D,EAAGq6D,oBAAoBC,0BAA0B1oC,GACjDwoC,EACAA,EACA32B,EAAoBhlB,eAAiBglB,EAAoBlmB,UACzD25C,EAAoBh5C,KAGrB2mB,0BACAC,gBAAgBk1B,GAEnBH,EACE7+B,EAAiB2+B,mBACf35D,EAAGq6D,oBAAoBE,yBAAyB3oC,GAChDwoC,EACA/rE,EAAKiB,EAAE,mDAAyB8qE,mBAChC/rE,EAAKiB,EAAE,0CAAiBsiC,kBACxB6R,EAAoBhlB,eAAiBglB,EAAoBlmB,UACzD25C,EAAoBh5C,GACpBg5C,EAAoBh5C,KAGrBs8C,wCAAwC,UACxC31B,0BACAC,gBAAgBk1B,GAEnBH,EACE7+B,EAAiB4+B,gBACf55D,EAAGq6D,oBAAoBI,sBAAsB7oC,GAC7CwoC,EACA/rE,EAAKiB,EAAE,kDAAwB8qE,mBAC/B/rE,EAAKiB,EAAE,0CAAiBsiC,kBACxB6R,EAAoBhlB,eAAiBglB,EAAoBlmB,UACzD25C,EAAoBh5C,GACpBg5C,EAAoBh5C,KAGrBw8C,8BAA8B,UAC9B71B,0BACAC,gBAAgBo1B,GAChBU,UAAUZ,IACa,YAAjBpC,GACTiC,EACE7+B,EAAiB2+B,mBACf35D,EAAGq6D,oBAAoBE,yBAAyB3oC,GAChDwoC,EACA/rE,EAAKiB,EAAE,iDAAuB8qE,mBAC9B/rE,EAAKiB,EAAE,0DAAasiC,kBACpB6R,EAAoBhlB,eAAiBglB,EAAoBlmB,UACzD25C,EAAoBh5C,GACpBg5C,EAAoBh5C,KAGrB2mB,0BACAC,gBAAgBk1B,GAEnBH,EACE7+B,EAAiB4+B,gBACf55D,EAAGq6D,oBAAoBI,sBAAsB7oC,GAC7CwoC,EACA/rE,EAAKiB,EAAE,kDAAwB8qE,mBAC/B/rE,EAAKiB,EAAE,kEAAiBsiC,kBACxB6R,EAAoBhlB,eAAiBglB,EAAoBlmB,UACzD25C,EAAoBh5C,GACpBg5C,EAAoBh5C,KAGrB47C,aAAa,UAAWzrE,EAAKiB,EAAE,yBAAsB,IAAI,GACzDu1C,0BACAC,gBAAgBo1B,IACO,UAAjBtC,IACTiC,EACE7+B,EAAiB2+B,mBACf35D,EAAGq6D,oBAAoBE,yBAAyB3oC,GAChDwoC,EACA/rE,EAAKiB,EAAE,8CAAoB8qE,mBAC3B/rE,EAAKiB,EAAE,mCAAUsiC,kBACjB6R,EAAoBhlB,eAAiBglB,EAAoBlmB,UACzD25C,EAAoBh5C,GACpBg5C,EAAoBh5C,KAGrBs8C,wCAAwC,UACxC31B,0BACAC,gBAAgBk1B,GAEnBH,EACE7+B,EAAiB4+B,gBACf55D,EAAGq6D,oBAAoBI,sBAAsB7oC,GAC7CwoC,EACA/rE,EAAKiB,EAAE,kDAAwB8qE,mBAC/B/rE,EAAKiB,EAAE,kEAAiBsiC,kBACxB6R,EAAoBhlB,eAAiBglB,EAAoBlmB,UACzD25C,EAAoBh5C,GACpBg5C,EAAoBh5C,KAGrB47C,aAAa,QAASzrE,EAAKiB,EAAE,yBAAsB,IAAI,GACvDu1C,0BACAC,gBAAgBo1B,GAEnBL,EACE7+B,EAAiBs+B,iBACft5D,EAAGq6D,oBAAoBC,0BAA0B1oC,GACjDwoC,EACAA,EACA32B,EAAoBhlB,eAAiBglB,EAAoBlmB,UACzD25C,EAAoBh5C,KAGrB2mB,0BACAC,gBAAgBk1B,QASZv1B,EAAkC,SAC7CrC,EACAmC,GAEAp3C,oBACEi1C,EAAe1pB,iBACf,SAACmiD,GACMA,EAAUC,aAYbv2B,EAAwBiB,qBACtBq1B,EAAUz5C,UACV,KAbFmjB,EAAwBu1B,aACtBe,EAAUz5C,UACVy5C,EAAUpxD,iBACV,GACAoxD,EAAUE,cAEZx2B,EAAwBy2B,4BACtBH,EAAUjxD,sBAEZ26B,EAAwB02B,gBAAgBJ,EAAUK,oBAUpD32B,EACG3rB,aAAa2rB,EAAwB5rB,qBAAuB,GAC5DohD,aAAac,EAAU9hD,mBAM9BwrB,EAAwBiB,qBAAqB,wBAAyB,O,4CC9lBxE,MAAM,IAAIvmC,MACR,kU,gGCAIe,EAAkBC,EAAOD,GAKVm7D,E,iDACnBrtB,UAAsC,G,mEAGpC,QAASjgD,KAAKutE,uBAAuBlkE,S,6CAIrC,OAAOrJ,KAAKigD,Y,yCAGKtsB,GACjB,IAAK,IAAI10B,EAAI,EAAGA,EAAIe,KAAKigD,UAAU52C,OAAQpK,IACzC,GAAIkT,EAAGq7D,QAAQxtE,KAAKigD,UAAUhhD,GAAI00B,GAAW,OAAO,EAGtD,OAAO,I,uCAIP3zB,KAAKigD,UAAU52C,OAAS,I,qCAIxBsqB,EACA85C,GAEC,IADDC,EACA,uDAD2C,KAEvC1tE,KAAK2tE,mBAAmBh6C,GACtB85C,GAAaztE,KAAK4tE,iBAAiBj6C,IAKpC85C,GAAaztE,KAAKqwD,iBAElBqd,IAAoBA,EAAiB/5C,EAASk6C,aACjD7tE,KAAKigD,UAAU/gD,KAAKy0B,M,sCAKtBkR,EACA4oC,GAEC,IAAD,OADAC,EACA,uDAD2C,KAEtCD,GAAaztE,KAAKqwD,iBAEvBxrB,EAAU7+B,SAAQ,SAAA2tB,GAAQ,OACxB,EAAKm6C,eAAen6C,GAAU,EAAM+5C,Q,uCAIvB/5C,GACf,GAAI3zB,KAAK2tE,mBAAmBh6C,GAAW,CAErC,IADA,IAAI10B,EAAIe,KAAKigD,UAAU52C,OAAS,EACzBpK,IAAM,GAAKe,KAAKigD,UAAUhhD,GAAGmG,MAAQuuB,EAASvuB,OACjDnG,EAGJe,KAAKigD,UAAU8tB,OAAO9uE,EAAG,M,gDAIHkrB,GACxB,IAAK,IAAIlrB,EAAI,EAAGA,EAAIe,KAAKigD,UAAU52C,QAC7BrJ,KAAKigD,UAAUhhD,GAAG+uE,kBAAoB7jD,EACxCnqB,KAAKigD,UAAU8tB,OAAO9uE,EAAG,GAEzBA,M,+CAKmBgvE,GACvB,IAAK,IAAIhvE,EAAI,EAAGA,EAAIe,KAAKigD,UAAU52C,QAC7BrJ,KAAKigD,UAAUhhD,GAAG4uE,aAAeI,EACnCjuE,KAAKigD,UAAU8tB,OAAO9uE,EAAG,GAEzBA,Q,uDCrFR,gGAQMkT,EAAuCC,EAAOD,GAKrC,KACb+7D,uBAAuB19C,GAOrB,OANKxwB,KAAKmuE,qBAAqB39C,IAC7BrpB,QAAQ4sB,KAAR,2BACsBvD,EADtB,6GAKKxwB,KAAKmuE,qBAAqB39C,IAEnC49C,4BAA6B,SAAS59C,EAAY69C,GAC3CA,EAAoB/vE,UAMpB+vE,EAAoBC,gBAMpBD,EAAoBE,iBAOrBvuE,KAAKmuE,qBAAqB36C,eAAehD,GAC3CrpB,QAAQ4sB,KAAR,6DACwDvD,EADxD,oDAMFrpB,QAAQC,KAAR,+DAC0DopB,EAD1D,OAGAxwB,KAAKmuE,qBAAqB39C,GAAc69C,GAhBtClnE,QAAQ4sB,KAAR,6DACwDvD,EADxD,uDANArpB,QAAQ4sB,KAAR,6DACwDvD,EADxD,sDANArpB,QAAQ4sB,KAAR,6DACwDvD,EADxD,iDA8BJg+C,iDAAiD3mE,IACxC,CACLvJ,UAAWmwE,IACXH,gBAAiB,SAAA57D,GAAM,OACrBP,EACGu8D,yBAAyBh8D,GACzBi8D,QACAC,WACLL,iBAAkB,SAAA77D,GAAM,OAAIP,EAAGu8D,yBAAyBh8D,IACxD9H,aAAc/C,EAAQ+C,eAG1BujE,qBAAsB,CACpBr7C,OAAQ,CACNx0B,UAAWuwE,IACXP,gBAAiB,kBAAM,IAAIn8D,EAAG28D,aAAa,KAC3CP,iBAAkB,SAAA77D,GAAM,OAAIP,EAAG48D,eAAer8D,IAC9C9H,aAAc,mBAEhB,iCAAkC,CAChCtM,UAAW0wE,IACXV,gBAAiB,kBAAM,IAAIn8D,EAAG88D,kBAAkB,KAChDV,iBAAkB,SAAA77D,GAAM,OAAIP,EAAG+8D,oBAAoBx8D,IACnD9H,aAAc,yBAEhB,iCAAkC,CAChCtM,UAAW6wE,IACXb,gBAAiB,kBAAM,IAAIn8D,EAAGi9D,kBAAkB,KAChDb,iBAAkB,SAAA77D,GAAM,OAAIP,EAAGk9D,oBAAoB38D,IACnD9H,aAAc,yBAEhB,mBAAoB,CAClBtM,UAAWgxE,IACXhB,gBAAiB,kBAAM,IAAIn8D,EAAGo9D,WAAW,KACzChB,iBAAkB,SAAA77D,GAAM,OAAIP,EAAGq9D,aAAa98D,IAC5C9H,aAAc,iBAEhB,2BAA4B,CAC1BtM,UAAWmxE,IACXnB,gBAAiB,kBAAM,IAAIn8D,EAAGu9D,mBAAmB,KACjDnB,iBAAkB,SAAA77D,GAAM,OAAIP,EAAGw9D,qBAAqBj9D,IACpD9H,aAAc,0BAEhB,6BAA8B,CAC5BtM,UAAWsxE,IACXtB,gBAAiB,kBAAM,IAAIn8D,EAAG09D,gBAAgB,KAC9CtB,iBAAkB,SAAA77D,GAAM,OAAIP,EAAG29D,kBAAkBp9D,IACjD9H,aAAc,uBAEhB,kCAAmC,CACjCtM,UAAWyxE,IACXzB,gBAAiB,kBAAM,IAAIn8D,EAAG69D,sBAAsB,KACpDzB,iBAAkB,SAAA77D,GAAM,OAAIP,EAAG89D,wBAAwBv9D,IACvD9H,aAAc,kC,gLClGd/F,E,MAAWC,GAAgB,YAC3BorE,EAASrrE,EAAWA,EAASwwB,OAAO66C,OAAS,KAE7CxsE,EAAS,CACb4K,UAAW,CACTrL,SAAU,WACVzE,QAAS,OACTmF,WAAY,YAEdmJ,OAAQ,CACN/C,WAAY,IAEduV,UAAW,CACTnc,KAAM,IAiBWgtE,E,4MACnBC,gBAAkB,YAA0C,IAAvC9rE,EAAsC,EAAtCA,MAAOmG,EAA+B,EAA/BA,QAC1B,GAAKylE,GAAWrrE,EAAhB,CAEA,IAAM+wD,EAAgB/wD,EAASwwB,OAAOwgC,mBACtCqa,EACGG,eAAeza,EAAe,CAC7BtxD,QACA63C,WAAY,CAAC,gBAAiB,mBAC9B1xC,UACA6lE,YAAa,EAAK5wE,MAAM4wE,cAEzBznD,MAAK,YAAoB,IAAjB0nD,EAAgB,EAAhBA,UACFA,GAAcA,EAAUlnE,QAC7B,EAAK3J,MAAMU,SAASmwE,EAAU,S,EAIpCC,oBAAsB,SAAChwE,GAAqC,IAClDC,EAAS,EAAKf,MAAde,KACR,MAAa,WAATA,EACK,CACL6D,MAAO9D,EAAKiB,EAAE,gCACdgJ,QAASjK,EAAKiB,EAAE,yCAEA,gBAAThB,EACF,CACL6D,MAAO9D,EAAKiB,EAAE,yCACdgJ,QAASjK,EAAKiB,EAAE,yCAIb,CACL6C,WAAO/F,EACPkM,aAASlM,I,uDAIH,IAAD,OACP,OACE,kBAAC,OAAD,MACG,YAAe,IAAZiC,EAAW,EAAXA,KACIiwE,EAAkB,EAAKD,oBAAoBhwE,GACjD,OACE,yBACE3C,MAAK,2BACA6F,EAAO4K,WADP,IAEHpL,MAAO,EAAKxD,MAAMqC,UAAY,YAASxD,KAGzC,kBAAC,IAAD,CACEoB,OAAO,QACP9B,MAAO6F,EAAO4b,UACd7e,KAAK,OACLe,SAAUivE,EAAgBnsE,MAC1B5D,MAAO,EAAKhB,MAAMgB,MAClBN,SAAU,SAACQ,EAAOF,GAAR,OAAkB,EAAKhB,MAAMU,SAASM,MAElD,kBAAC,IAAD,CACEW,MAAO,kBAAC,QAAD,sBACP6L,SAAS,EACTrP,MAAO6F,EAAOoJ,OACdnK,QAAS,kBAAM,EAAKytE,gBAAgBK,c,GA9DLC,kB,uKClClCC,EAAoB,kBAC/B,gBAAC,IAAD,KACE,gBAAC,QAAD,gJAOSC,EAAa,SAAC,GAAD,IACxBC,EADwB,EACxBA,iBADwB,OAKxB,gBAAC,IAAD,CAAQ3yE,UAAQ,GACd,gBAAC,IAAD,KACE,gBAAC,QAAD,mJAKF,gBAAC,IAAD,CAAM0F,eAAe,UAAUitE,OAItBC,EAAkB,CAC7BroD,IAAK,gBACLsoD,QAAS,gBAAC,QAAD,eACTzvE,KAAM,gBAAC,QAAD,+BACN0vE,SAAU,6C,uKC7BCL,EAAoB,kBAC/B,gBAAC,IAAD,KACE,gBAAC,QAAD,0LAQSC,EAAa,SAAC,GAAD,IACxBC,EADwB,EACxBA,iBADwB,OAKxB,gBAAC,IAAD,CAAQ3yE,UAAQ,GACd,gBAAC,IAAD,KACE,gBAAC,QAAD,uLAMF,gBAAC,IAAD,CAAM0F,eAAe,UAAUitE,OAItBI,EAAmB,CAC9BxoD,IAAK,iBACLsoD,QAAS,gBAAC,QAAD,gBACTzvE,KAAM,gBAAC,QAAD,qCACN0vE,SAAU,kD,kMC5BCL,EAAoB,kBAC/B,gBAAC,IAAD,KACE,gBAAC,QAAD,oMAQSC,EAAa,SAAC,GAInB,IAHNC,EAGK,EAHLA,iBAUA,OACE,gBAAC,IAAD,CAAQ3yE,UAAQ,GACd,gBAAC,IAAD,KACE,gBAAC,QAAD,qHAKF,gBAAC,IAAD,CAAM0F,eAAe,UAClBitE,IACD,gBAAC,IAAD,CACExvE,MAAO,gBAAC,QAAD,mDACP6L,SAAO,EACPvK,QAnBc,WACpBoI,IAAOC,gBACLF,YAAY,2DAwBLomE,EAA+B,CAC1CzoD,IAAK,6BACLsoD,QAAS,gBAAC,QAAD,sBACTzvE,KAAM,gBAAC,QAAD,+BACN0vE,SAAU,qD,qMC3BCG,EAAoB,SAAC,GAGd,IAFlBC,EAEiB,EAFjBA,YACAC,EACiB,EADjBA,kBAEA,OACE,gBAAC,IAAD,CAAQnzE,UAAQ,GACd,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,gBAAC,QAAD,yKAOJ,gBAAC,IAAD,CACEwC,MAAO0wE,EAAYnoD,QAAQ,IAAM,aACjC7oB,SAAU,SAAAQ,GACR,IAAM0wE,EAAa1wE,EAAMC,OAAOH,MAChC2wE,GAAkB,SAAAE,GAAe,kCAC5BA,GAD4B,IAE/BtoD,QAAS,CAACqoD,UAId,gBAAC,IAAD,CACE5wE,MAAO,aACPwR,QAAS,gBAAC,IAAD,CAAOnU,MAAM,YACtBsD,MACE,gBAAC,QAAD,qEAKJ,gBAAC,IAAD,CACEX,MAAO,mBACPwR,QAAS,gBAAC,IAAD,CAAOnU,MAAM,YACtBsD,MACE,gBAAC,QAAD,8DAIN,gBAAC,IAAD,CAAMnD,UAAQ,EAAC0F,eAAe,YAC5B,gBAAC,IAAD,CACEvC,MAAO,gBAAC,QAAD,wBACPsB,QAAS,WACP0uE,GAAkB,SAAAE,GAAe,kCAC5BA,GAD4B,IAE/BC,mBAAmB,QAGvBxwE,SAAqC,qBAA3BowE,EAAYnoD,QAAQ,MAGjCmoD,EAAYI,mBACX,gBAAC,IAAD,CACEn2B,QAAS,CACP,gBAAC,IAAD,CACE5yB,IAAI,QACJpnB,MAAO,gBAAC,QAAD,cACP6L,SAAO,EACPouC,iBAAe,EACf34C,QAAS,WACP0uE,GAAkB,SAAAE,GAAe,kCAC5BA,GAD4B,IAE/BC,mBAAmB,WAK3Bh2B,iBAAkB,CAChB,gBAAC,IAAD,CACE5wC,aAAa,mEACb6d,IAAI,UAGR9c,MAAI,EACJrH,MAAO,gBAAC,QAAD,wBACPsZ,eAAgB,WACdyzD,GAAkB,SAAAE,GAAe,kCAC5BA,GAD4B,IAE/BC,mBAAmB,QAGvBhjE,SAAS,MAET,gBAAC,IAAD,KACE,gBAAC,QAAD,wQAOF,gBAAC,IAAD,CACElN,KAAK,mBACLZ,MAAO0wE,EAAYvnD,SACnBzpB,SAAU,SAAAQ,GACR,IAAMipB,EAAWjpB,EAAMC,OAAOH,MAC9B2wE,GAAkB,SAAAE,GAAe,kCAC5BA,GAD4B,IAE/B1nD,kBAIJ,gBAAC,IAAD,CACEnpB,MAAO,MACPwR,QAAS,gBAAC,IAAD,CAAOnU,MAAM,YACtBsD,MAAO,gBAAC,QAAD,uCAET,gBAAC,IAAD,CACEX,MAAO,MACPwR,QAAS,gBAAC,IAAD,CAAOnU,MAAM,YACtBsD,MACE,gBAAC,QAAD,kHAMJ,gBAAC,IAAD,CACEX,MAAO,SACPwR,QAAS,gBAAC,IAAD,CAAOnU,MAAM,YACtBsD,MAAO,gBAAC,QAAD,8CACPL,UAAQ,QASTywE,EAAwB,CACnChpD,IAAK,sBACLsoD,QAAS,gBAAC,QAAD,eACTzvE,KAAM,gBAAC,QAAD,oCACN0vE,SAAU,gC,6JChJCG,EAAoB,SAAC,GAGd,IAFlBC,EAEiB,EAFjBA,YACAC,EACiB,EADjBA,kBAEMK,EAAY,SAACJ,EAAwBK,GACzCN,GAAkB,SAAAE,GAChB,OAAII,IAA2D,IAAjDJ,EAAgBtoD,QAAQvhB,QAAQ4pE,GACrC,2BACFC,GADL,IAEEtoD,QAAQ,GAAD,mBAAMsoD,EAAgBtoD,SAAtB,CAA+BqoD,MAGvCK,IACgD,IAAjDJ,EAAgBtoD,QAAQvhB,QAAQ4pE,GAQ3BC,EANE,2BACFA,GADL,IAEEtoD,QAASsoD,EAAgBtoD,QAAQ9f,QAAO,SAAA7H,GAAI,OAAIA,IAASgwE,WAQjE,OACE,gBAAC,WAAD,KACE,gBAAC,IAAD,CAAQpzE,UAAQ,GACd,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,gBAAC,QAAD,gHAMJ,gBAAC,IAAD,CACEmD,MAAO,gBAAC,QAAD,2BACP0Q,SAAoD,IAA3Cq/D,EAAYnoD,QAAQvhB,QAAQ,UACrCkK,QAAS,SAAC+C,EAAG5C,GAAJ,OAAgB2/D,EAAU,SAAU3/D,MAE/C,gBAAC,IAAD,CACE1Q,MAAO,gBAAC,QAAD,sCACP0Q,SAAoD,IAA3Cq/D,EAAYnoD,QAAQvhB,QAAQ,UACrCkK,QAAS,SAAC+C,EAAG5C,GAAJ,OAAgB2/D,EAAU,SAAU3/D,MAE/C,gBAAC,IAAD,CACE1Q,MAAO,gBAAC,QAAD,yBACP0Q,SAAoD,IAA3Cq/D,EAAYnoD,QAAQvhB,QAAQ,UACrCkK,QAAS,SAAC+C,EAAG5C,GAAJ,OAAgB2/D,EAAU,SAAU3/D,MAE/C,gBAAC,IAAD,CACE1Q,MAAO,gBAAC,QAAD,yBACP0Q,SAA2D,IAAlDq/D,EAAYnoD,QAAQvhB,QAAQ,iBACrCkK,QAAS,SAAC+C,EAAG5C,GAAJ,OAAgB2/D,EAAU,gBAAiB3/D,SAOjD6/D,EAAyB,CACpCnpD,IAAK,uBACLsoD,QAAS,gBAAC,QAAD,gBACTzvE,KAAM,gBAAC,QAAD,4BACN0vE,SAAU,oC,oIClFGtzE,MAAMymB,MAAK,SAAAzkB,GAAK,OAC7B,kBAACmyE,EAAA,EAAYnyE,EACX,0BAAMoyE,EAAE,8E,OCFGp0E,MAAMymB,MAAK,SAAAzkB,GAAK,OAC7B,kBAACmyE,EAAA,EAAD,iBAAanyE,EAAb,CAAoB7B,MAAK,aAAI+hB,UAAW,iBAAoBlgB,EAAM7B,SAChE,0BAAMi0E,EAAE,6OCFGp0E,MAAMymB,MAAK,SAAAzkB,GAAK,OAC7B,kBAACmyE,EAAA,EAAYnyE,EACX,0BACEqyE,KAAK,eACLD,EAAE,goBCJOp0E,MAAMymB,MAAK,SAAAzkB,GAAK,OAC7B,kBAACmyE,EAAA,EAAYnyE,EACX,0BAAMoyE,EAAE,2V,8GCWZ,IAManB,EAAoB,WAC/B,IACM7wD,EARa,SAAAqgC,GAAW,MAAK,CACnCt2C,OAAwB,UAAhBs2C,EAA0B,GAAK,GACvCj9C,MAAuB,UAAhBi9C,EAA0B,GAAK,GACtCxgD,OAAQ,IAKUqyE,CADEC,eAEpB,OACE,gBAAC,IAAD,CAAQ/zE,UAAQ,GACd,gBAAC,IAAD,KACE,gBAACT,EAAA,EAAD,KACE,gBAAC,QAAD,oNAOJ,gBAAC,IAAD,CAAMmG,eAAe,UACnB,gBAACsuE,EAAA,EAAD,CAAQn0E,MAAM,UAAUF,MAAOiiB,IAC/B,gBAACqyD,EAAD,CAAUp0E,MAAM,UAAUF,MAAOiiB,IACjC,gBAACsyD,EAAD,CAAMr0E,MAAM,UAAUF,MAAOiiB,IAC7B,gBAACuyD,EAAD,CAAYt0E,MAAM,UAAUF,MAAOiiB,IACnC,gBAACwyD,EAAD,CAAYv0E,MAAM,UAAUF,MAAOiiB,OAM9B8wD,EAAa,SAAC,GAAD,IACxBC,EADwB,EACxBA,iBADwB,OAKxB,gBAAC,IAAD,CAAQ3yE,UAAQ,GACd,gBAACT,EAAA,EAAD,KACE,gBAAC,QAAD,2EAIF,gBAACwM,EAAA,EAAD,CAAcC,KAAK,WACjB,gBAAC,QAAD,oKAMF,gBAAC,IAAD,MACC2mE,IACD,gBAAC,IAAD,MACA,gBAAC0B,EAAA,EAAD,CACExwE,WAAS,EACTmL,SAAO,EACPvK,QAAS,kBACPoI,IAAOC,gBACLF,YAAY,8CAGhBzJ,MAAO,gBAAC,QAAD,uCACPuI,KAAM,gBAACuoE,EAAD,QAER,gBAACI,EAAA,EAAD,CACExwE,WAAS,EACTmL,SAAO,EACPvK,QAAS,kBACPoI,IAAOC,gBAAgB,yCAEzB3J,MAAO,gBAAC,QAAD,4CACPuI,KAAM,gBAACyoE,EAAD,QAER,gBAACE,EAAA,EAAD,CACExwE,WAAS,EACTmL,SAAO,EACPvK,QAAS,kBACPoI,IAAOC,gBACLF,YAAY,gDAGhBzJ,MAAO,gBAAC,QAAD,0CAET,gBAACkxE,EAAA,EAAD,CACExwE,WAAS,EACTmL,SAAO,EACPvK,QAAS,kBACPoI,IAAOC,gBAAgBF,YAAY,uCAErCzJ,MAAO,gBAAC,QAAD,qCACPuI,KAAM,gBAACsoE,EAAA,EAAD,QAER,gBAACK,EAAA,EAAD,CACExwE,WAAS,EACTmL,SAAO,EACPvK,QAAS,kBAAMoI,IAAOC,gBAAgB,kCACtC3J,MAAO,gBAAC,QAAD,sCACPuI,KAAM,gBAACwoE,EAAD,QAER,gBAACG,EAAA,EAAD,CACExwE,WAAS,EACTY,QAAS,kBAAMoI,IAAOC,gBAAgBF,YAAY,iBAClDzJ,MAAO,gBAAC,QAAD,wCAKAmxE,EAAgB,CAC3B/pD,IAAK,YACLsoD,QAAS,gBAAC,QAAD,YACTzvE,KAAM,gBAAC,QAAD,YACN0vE,SAAU,6C,kLCvFGyB,EA3BC,SAAC,GAA2D,IAAzD1b,EAAwD,EAAxDA,QAASzY,EAA+C,EAA/CA,mBAAoB7zC,EAA2B,EAA3BA,QAASioE,EAAkB,EAAlBA,KACjDl0B,EAAar8B,cAcnB,OAZAzkB,aACE,WACE,GAAIq5D,EAAS,CACX,IAAMtpD,EAAUoL,YAAW,WACzB65D,MACC,KACH,OAAO,kBAAMtoB,aAAa38C,OAG9B,CAACspD,EAAS2b,IAIV,gBAACC,EAAA,EAAD,CACEhnE,KAAMorD,EACNtsD,QACiB,UAAf+zC,GAA0BF,EACtBA,EACA7zC,K,kNC+HGmoE,EAlI2B,SAAC,GAS7B,IARZ1tE,EAQW,EARXA,QACA2tE,EAOW,EAPXA,cACA7qD,EAMW,EANXA,QACA2E,EAKW,EALXA,KACAC,EAIW,EAJXA,KACA6gC,EAGW,EAHXA,QACApnC,EAEW,EAFXA,QACAuW,EACW,EADXA,UAEQ3sB,EAAYvS,aAAiB2T,KAA7BpB,QADG,EAGavS,WAAuBwH,EAAQwqB,WAH5C,mBAGJpuB,EAHI,KAGEm5B,EAHF,OAIyB/8B,WAClCwH,EAAQ4tE,gBAAgBviD,aALf,mBAIJxC,EAJI,KAIQglD,EAJR,OAO2Br1E,WACpCwH,EAAQ0W,kBARC,mBAOJD,EAPI,KAOSq3D,EAPT,OAUuBt1E,WAChCwH,EAAQ+tE,eAAe1iD,aAXd,mBAUJ2iD,EAVI,KAUOC,EAVP,OAayCz1E,WAClDwH,EAAQkuE,0BAdC,mBAaJnlD,EAbI,KAacolD,EAbd,OAgBuC31E,WAChDwH,EAAQouE,yBAjBC,mBAgBJplD,EAhBI,KAgBaqlD,EAhBb,OAmBqC71E,WAC9CwH,EAAQsuE,wBApBC,mBAmBJrlD,EAnBI,KAmBYslD,EAnBZ,OAsBqB/1E,WAC7BkvB,GAAQA,EAAKE,UAAc7c,GAAWA,EAAQ6c,UAAa,IAvBnD,mBAsBJ8B,EAtBI,KAsBM8kD,EAtBN,QAyBqBh2E,WAC7BkvB,GAAQA,EAAKG,UAAa4mD,YAAgBzuE,EAAQwqB,YA1B1C,qBAyBJ3C,GAzBI,MAyBM4B,GAzBN,SA4B2BjxB,WACpCwH,EAAQ0uE,kBA7BC,qBA4BJxlD,GA5BI,MA4BSylD,GA5BT,SA+B6Bn2E,aACpCivB,EAAK2B,cAhCE,qBA+BJA,GA/BI,MA+BUwlD,GA/BV,MAkCLzlD,GAAetG,YAAwB7iB,EAAS8iB,GAEhD+rD,GAAqB,uCAAG,sBAAAnjE,EAAA,sEACtBiiE,IADsB,uBAEtBmB,KAFsB,2CAAH,qDAKrBA,GAAS,uCAAG,sBAAApjE,EAAA,0DAGdqjE,YAA+B/uE,EAAS,CACtC5D,OACAysB,WAAYA,GAAc,GAC1BpS,YAAaA,GAAe,GAC5Bu3D,YACAjlD,mBAAoBA,EACpBC,kBAAmBA,EACnBC,iBAAkBA,EAClBC,YAAaA,IAAe,YAXhB,gCAcR/H,EAAQ,CAAEiI,gBAAcM,WAAU7B,cAd1B,2CAAH,qDAkBf,OACE,gBAACmnD,EAAA,EAAD,CACE5vE,MAAO,gBAAC,QAAD,gDACPsZ,eAAgB6vC,EAChBpS,QAAS,CACP,gBAACk3B,EAAA,EAAD,CACElxE,MAAO,gBAAC,QAAD,aACPonB,IAAI,OACJvb,SAAS,EACTvK,QAAS8qD,EACTzsD,SAAU47B,IAEZ,gBAACsX,EAAA,EAAD,CACE7yC,MAAO,gBAAC,QAAD,iCACPonB,IAAI,UACJvb,SAAO,EACPvK,QAAS,WACPoxE,MAEF/yE,SAAU47B,EACVxwB,kBAAmB,SAAA5L,GAAI,MAAI,CACzB,CACEa,MAAOb,EAAKiB,EAAE,uCACd24B,MAAO45C,SAKfz4B,kBAAmB3e,EACnBjxB,MAAI,GAEJ,gBAACwoE,EAAA,EAAD,CACE7yE,KAAMA,EACNm5B,QAASA,EACT1M,WAAYA,EACZglD,cAAeA,EACfp3D,YAAaA,EACbq3D,eAAgBA,EAChB9tE,QAASA,EACTguE,UAAWA,EACXC,aAAcA,EACdE,wBAAyBA,EACzBplD,iBAAkBA,EAClBslD,uBAAwBA,EACxBrlD,gBAAiBA,EACjBulD,sBAAuBA,EACvBtlD,eAAgBA,EAChB0lD,eAAgBA,GAChBzlD,YAAaA,GACbQ,SAAUA,EACV8kD,YAAaA,EACb3mD,SAAUA,GACV4B,YAAaA,GACbL,aAAcA,GACdwlD,gBAAiBA,GACjBM,kBAAgB,EAChB/lD,aAAcA,O,QCvGhB3qB,EAAS,CACbkG,KAAM,CACJ/F,QAAS,IAyXEwwE,EA7WQ,SAAC,GAMI,IAL1B3sD,EAKyB,EALzBA,MACAxiB,EAIyB,EAJzBA,QACA2tE,EAGyB,EAHzBA,cACAjgB,EAEyB,EAFzBA,QACA0hB,EACyB,EADzBA,WACyB,EACyB52E,YAChD,GAFuB,mBAClB62E,EADkB,KACCC,EADD,OAIyB92E,YAChD,GALuB,mBAIlB+2E,EAJkB,KAICC,EAJD,OAUrBh3E,YAAwB,GAVH,mBAQvBi3E,EARuB,KASvBC,EATuB,QAWDl3E,WAAsB,MAXrB,qBAWlBivB,GAXkB,MAWZoyC,GAXY,SAYDrhE,WAA0B,MAZzB,qBAYlBkvB,GAZkB,MAYZioD,GAZY,SAaiBn3E,YAAwB,GAbzC,qBAalBo3E,GAbkB,MAaHC,GAbG,SAcmBr3E,aAC1C2T,KADMJ,GAdiB,GAcjBA,uBAAwBhB,GAdP,GAcOA,QAI1B+kE,IAAiBpiB,GAA0B,KAAf0hB,GAAoC,SAAfA,EACjDW,GAAkBvtD,GAA0B,aAAjBA,EAAMiW,OACjCu3C,GAAmBxtD,GAASiF,IAAQjF,EAAMhmB,KAAOirB,GAAKqB,iBACtDmnD,GAAUzoD,YAAWC,GAAMC,IAC3BwoD,GACJJ,KAAkBC,GACd,KACAC,GACAC,GACA1tD,YAAoBC,EAAO,SAE3B83C,GAAW9hE,cAAA,sBACf,sCAAAkT,EAAA,yDACQgX,EAASF,GAASA,EAAME,OACzB3X,IAAY2X,EAFnB,wDAIUlmB,EAAOuO,GAAPvO,GAJV,SAMIqzE,IAAiB,GANrB,SAOgC7jE,QAAQsc,IAAI,CACtCqB,YAAQ5d,GAAwBvP,EAAIkmB,GACpCqH,YAAahe,GAAwBvP,EAAIkmB,GAAQgQ,OAAM,SAAA3B,GACrD9uB,QAAQrG,MAAM,8BAA+Bm1B,QAVrD,mCAOWtJ,EAPX,KAOiB0oD,EAPjB,KAaItW,GAAQpyC,GACJ0oD,GAASA,EAAMhsE,OAAS,GAC1BwrE,GAAQQ,EAAM,IAfpB,kDAkBIluE,QAAQrG,MAAM,0BAAd,MAlBJ,yBAoBIi0E,IAAiB,GApBrB,6EAuBA,CAACrtD,EAAOzW,GAAwBhB,KAGlCvS,aACE,YAEOivB,IAAQsoD,IACXzV,OAGJ,CAAC7yC,GAAM6yC,GAAUyV,KAGnB,IAAMK,GAAS,WACRF,IACLrqE,IAAOC,gBAAgBoqE,KAGnBG,GAAS,WACRH,KAELI,UAAU9xC,UAAUW,UAAU+wC,IAC9BZ,GAAqB,KAGjBiB,GAAO,uCAAG,4BAAA7kE,EAAA,yDACTwkE,IAAaI,UAAUE,MADd,wDAIRC,EAAY,CAChBrxE,MAAO,mBACP6D,KAAM,6CACN9C,IAAK+vE,IAPO,kBAWNI,UAAUE,MAAMC,GAXV,uDAaZxuE,QAAQrG,MAAM,0BAAd,MAbY,yDAAH,qDAiBbpD,aACE,WACqB,SAAf42E,GACFI,GAAqB,KAGzB,CAACJ,IAGH,IAAMsB,GAAel4E,cAAA,uCACnB,WACEm4E,EACAr1E,GAFF,qBAAAoQ,EAAA,yDAIOX,IAAY0c,IAASjF,EAJ5B,0CAI0C,GAJ1C,cAMUhmB,EAAOuO,GAAPvO,GANV,SAQIqzE,IAAiB,GARrB,SAS8BjnD,YACxB7c,GACAvP,EACAirB,GAAKjrB,GACL,CACEksB,SAAU1oB,EAAQwqB,UAClB/T,YAAazW,EAAQ0W,iBACrBmS,WAAY7oB,EAAQ4tE,gBAAgBviD,YACpCrC,gBAAiBhpB,EAAQouE,wBACzBrlD,iBAAkB/oB,EAAQkuE,yBAC1BjlD,eAAgBjpB,EAAQsuE,uBACxBplD,YAAalpB,EAAQ0uE,iBACrB5lD,iBAAkBtG,EAAMhmB,GACxB2sB,aAActG,YAAwB7iB,EAASwiB,EAAMhmB,IACrD4sB,aAAcunD,EAAkBvnD,eAvBxC,UASU2xC,EATV,OA0BIlB,GAAQkB,GACArxC,EAAuBinD,EAAvBjnD,SAAU7B,EAAa8oD,EAAb9oD,UACd6B,IAAY7B,GAAY6B,IAAa3e,GAAQ6c,SA5BrD,4CA8Bc6B,YACJ1d,GACAvP,EACAirB,GAAKjrB,GACLktB,EACA7B,GAnCV,QAqCQ8nD,GAAQ,CAAE/nD,SAAU8B,EAAU7B,SAAUA,EAAU+oD,UAAW,IArCrE,0DAuCQ3uE,QAAQrG,MACN,kCACA,KAAM2oB,UAAY,KAAMhf,SAE1B+yD,YAAa,CACX/yD,QACEjK,EAAKiB,EACH,4HAEF,IACAjB,EAAKiB,EAAE,4DACTg8D,SAAS,EAAD,GACRC,QAAS,2BAnDnB,mBAqDe,GArDf,iEAyDIF,YAAa,CACX/yD,QAASjK,EAAKiB,EACZ,mHAEFg8D,SAAS,EAAD,GACRC,QAAS,sBAEXv2D,QAAQrG,MAAM,4BAAd,MAhEJ,mBAiEW,GAjEX,yBAmEIi0E,IAAiB,GAnErB,+CAsES,GAtET,wEADmB,wDAyEnB,CAACpoD,GAAM1b,GAAwBhB,GAASyX,EAAOxiB,IAGjD,IAAKwiB,IAAU4sD,EAAY,OAAO,KAElC,IAAMyB,GAAgB,CACpB,gBAACxD,EAAA,EAAD,CACE9pD,IAAI,QACJpnB,MAAO,gBAAC,QAAD,cACP6L,SAAS,EACTvK,QAAS,kBAAM+xE,GAAqB,MAGtC/nD,IAAQyoD,KAAaF,IACnB,gBAACp+C,EAAA,EAAD,CACErO,IAAI,UACJpnB,MAAO,gBAAC,QAAD,uCACP6L,SAAO,EACPvK,QAAS,kBAAMiyE,GAAoC,OAIzD,OACE,gBAAC,OAAD,MACG,gBAAGp0E,EAAH,EAAGA,KAAH,OACC,gCACGw0E,IACC,gCACE,gBAACv3E,EAAA,EAAD,KACE,gBAAC,QAAD,0DAEF,gBAACu4E,EAAA,EAAD,OAGHvB,GACC,gBAACP,EAAA,EAAD,CACE5vE,MAAO,gBAAC,QAAD,wBACP+2C,QAAS06B,GACTpqE,MAAI,EACJiS,eAAgB,kBAAM82D,GAAqB,KAE1CU,KAAaN,GACZ,gBAAC,IAAD,CAAQ52E,UAAQ,GACd,gBAAC,IAAD,CACE67B,qBAAmB,EACnB1d,gBAAiB,kBACf,gBAACvc,EAAA,EAAD,CACEY,MAAO00E,GACP9yE,UAAQ,EACRP,WAAS,EACTiB,aACE,gBAACgB,EAAA,EAAD,CACErB,QAAS4yE,GACTtxE,QAAS,YACTgI,KAAK,OAEL,gBAACgqE,EAAA,EAAD,UAKRz4D,aAAc,SAAA3f,GAAK,OACjB,gBAACi5B,EAAA,EAAD,CACE5pB,SAAO,EACP7L,MAAO,gBAAC,QAAD,aACPsB,QAAS2yE,GACTz3E,MAAOA,OAIZq3E,IAAoBM,UAAUE,OAC7B,gBAAC,IAAD,CAAM9xE,eAAe,YACnB,gBAAC2uE,EAAA,EAAD,CACElxE,MAAO,gBAAC,QAAD,cACPsB,QAAS8yE,GACT7rE,KAAM,gBAAC,IAAD,SAIXsrE,KAAqBM,UAAUE,OAC9B,gBAAC,IAAD,CAAM9xE,eAAe,iBACnB,gBAAC,IAAD,CAAQA,eAAe,UACrB,gBAACqG,EAAA,EAAD,CAAcC,KAAK,QACjB,gBAAC,QAAD,+DAKJ,gBAAC,IAAD,CAAQtG,eAAe,YACrB,gBAAC,IAAD,KACE,gBAACsyE,EAAA,EAAD,CACE7wE,IAAK+vE,GACLv3E,MAAO6F,EAAOkG,KACdusE,MAAK,+CACLC,QAAQ,aAER,gBAACC,EAAA,EAAD,CAAcv4E,KAAM,GAAImgB,OAAK,KAE/B,gBAACq4D,EAAA,EAAD,CACEjxE,IAAK+vE,GACL9wE,MAAK,8CACLzG,MAAO6F,EAAOkG,MAEd,gBAAC2sE,EAAA,EAAD,CAAYz4E,KAAM,GAAImgB,OAAK,KAE7B,gBAACu4D,EAAA,EAAD,CACElyE,MAAK,+CACLmyE,SAAU,CAAC,YACXpxE,IAAK+vE,GACLv3E,MAAO6F,EAAOkG,MAEd,gBAAC8sE,EAAA,EAAD,CAAa54E,KAAM,GAAImgB,OAAK,KAE9B,gBAAC04D,EAAA,EAAD,CACEryE,MAAK,+CACLe,IAAK+vE,GACLv3E,MAAO6F,EAAOkG,MAEd,gBAACgtE,EAAA,EAAD,CAAc94E,KAAM,GAAImgB,OAAK,KAE/B,gBAAC44D,EAAA,EAAD,CACEC,QAAQ,mBACRl2C,KAAK,+CACLv7B,IAAK+vE,GACLv3E,MAAO6F,EAAOkG,MAEd,gBAACmtE,EAAA,EAAD,CAAWj5E,KAAM,GAAImgB,OAAK,SAMlCi3D,IAAoBvoD,IACpB,gBAAC,IAAD,KACE,gBAAC1iB,EAAA,EAAD,CAAcC,KAAK,QACjB,gBAAC,QAAD,wIAUR,gBAAC,IAAD,CAAQvG,WAAW,UACjB,gBAACqzE,EAAA,EAAD,OAGJ,gBAAC,EAAD,CACEvsE,QAAS,gBAAC,QAAD,6BACTssD,QAASwd,EACT7B,KAAM,kBAAM8B,GAAqB,OAItC7nD,IAAQjF,GAASitD,GAChB,gBAAC,EAAD,CACEzvE,QAASA,EACT2tE,cAAeA,EACf7qD,QAASN,EAAMhmB,GACf+rD,QAAS,kBAAMmnB,GAAoC,IACnDvuD,QAAO,uCAAE,WAAMwvD,GAAN,SAAAjlE,EAAA,sEACqBglE,GAC1BC,EACAr1E,GAHK,eAMLo0E,GAAoC,GAN/B,2CAAF,sDASPjoD,KAAMA,GACNC,KAAMA,GACNgQ,UAAWk4C,U,sGC9ZzB,IAAMnE,EAAoB,kBACxB,gBAAC,IAAD,CAAQzyE,UAAQ,EAACyF,WAAW,SAASC,eAAe,UAClD,gBAAC,IAAD,KACE,gBAACnG,EAAA,EAAD,CAAMO,MAAM,UACV,gBAAC,QAAD,0FASFi5E,EAAoB,CACxBxuD,IAAK,kBACLsoD,QAAS,MACTzvE,KAAM,gBAAC,QAAD,YACN0vE,SAAU,oB,qICFSkG,E,uKACT,IAAD,OACP,OACE,gBAAC,IAAD,CACEhlE,QACE,gBAAC,IAAD,CACEH,QAAS/R,KAAKN,MAAMy3E,QACpB/2E,SAAU,SAAAQ,GAAK,OAAI,EAAKlB,MAAM03E,SAASx2E,EAAOA,EAAMC,OAAOkR,UAC3DhU,MAAM,YAGVsD,MAAOrB,KAAKN,MAAM2B,MAClBL,SAAUhB,KAAKN,MAAMsB,SACrBnD,MAAOmC,KAAKN,MAAM7B,Y,GAbUH,c,yQCG9ByU,EAAkBC,EAAOD,GAEzBzO,EAAS,CACbq3C,mBAAoB,CAElBp8C,aAAc,KAIZ04E,EAAsBC,0BAAgBC,KACtCC,EAA4BC,6BAAkB,gBAAG75E,EAAH,EAAGA,SAAH,OAClD,uBAAKC,MAAO6F,EAAOq3C,oBAAqBn9C,MAE1C45E,EAA0BE,QAAU,Y,IAqBfC,E,4MACnB1vE,MAAQ,CACN2vE,WAAY,GACZC,kBAAmBxoB,cACnBhqB,KAAM,SACNyyC,iBAAkB,I,EAOpBC,gBAAkB,SAACC,EAAkCzuE,GACnD,EAAKlB,SAAS,CACZwvE,kBAAmBI,YACjB,EAAKhwE,MAAM4vE,kBACXG,EACAzuE,M,EAKN2uE,cAAgB,WACd9zC,IAAUqS,IACR0hC,IACAC,YAAa,EAAKnwE,MAAM4vE,mBAAmB5uE,KAAI,gBAAG3H,EAAH,EAAGA,KAAM+2E,EAAT,EAASA,SAAT,MAAyB,CACtE/2E,OACAg3E,mBAAoBjmE,YAAoBgmE,S,EAK9CE,MAAQ,WAAO,IAAD,EACgD,EAAK74E,MAAzDq7C,EADI,EACJA,mBAAoBy9B,EADhB,EACgBA,4BAC5B,GAAKp0C,IAAUG,IAAI4zC,KAAnB,CAEA,IAAMM,EAAmBr0C,IAAU1pB,IAAIy9D,KACjCO,EAAmB70C,IAAcK,aAAau0C,GAC/CC,IAELA,EAAiB1yE,SAAQ,SAAA2yE,GACvB,IAAMr3E,EAAOuiC,IAAc+0C,sBAAsBD,EAAiB,QAC5DL,EAAqBz0C,IAAcg1C,sBACvCF,EACA,sBAEF,GAAKr3E,GAASg3E,EAAd,CAEA,IAAM3d,EAAUn/B,YACdl6B,GACA,SAAAA,GAAI,OACFk3E,GACIA,EAA4Bj0C,IAAIjjC,IAEhCy5C,EAAmBxW,IAAIjjC,KAC7B,UAEIw3E,EAAc,IAAI3mE,EAAG4mE,SAC3B7lE,YAAwB4lE,EAAaR,GACrCv9B,EAAmBi+B,OACjBre,EACAme,EACA/9B,EAAmBjpB,SAErBgnD,EAAY/lE,aAEd,EAAKyyB,iB,EAGPyzC,gBAAkB,WAAO,IACfl+B,EAAuB,EAAKr7C,MAA5Bq7C,mBACFkF,EAAoCm4B,YACxC,EAAKnwE,MAAM4vE,mBAKiB53B,EAAU92C,QAAO,SAAA6uE,GAE7C,OAAQ/3B,EAAUld,MAChB,SAAAm2C,GAAoB,OAClBlB,IAAoBkB,GACpBA,EAAqBb,SAASl3C,SAC5B62C,EAAgBK,UACD,SAODryE,SAAQ,gBAAGqyE,EAAH,EAAGA,SAAH,OAC5Bt9B,EAAmBo+B,kBAAkBd,MAEvC,EAAKhoB,kB,EAGPA,eAAiB,WACf,EAAKhoD,SAAS,CACZwvE,kBAAmBxoB,iB,EAIvB+pB,wBAA0B,SACxB93E,EACA+2E,EACAzvE,EACAw9B,EACAizC,GACI,IAAD,EACyD,EAAK35E,MAAzDq7C,EADL,EACKA,mBAAoBy9B,EADzB,EACyBA,4BAI5B,GAAIA,GAA0C,WAAXa,EAAqB,CACtD,IAAMf,EAAqBjmE,YACzBmmE,EAA4B99D,IAAIpZ,IAE5Bw3E,EAAc,IAAI3mE,EAAG4mE,SAC3B7lE,YAAwB4lE,EAAaR,GACrCv9B,EAAmBi+B,OAAO13E,EAAMw3E,EAAa1yC,GAC7C0yC,EAAY/lE,SAEZslE,EAAWt9B,EAAmBrgC,IAAIpZ,GAGpC,OAAQ+2E,EAAS9kD,WACf,KAAKphB,EAAG4mE,SAASO,OACfjB,EAASkB,UAAU3wE,GACnB,MACF,KAAKuJ,EAAG4mE,SAASS,OACfnB,EAAS94D,SAAS0gB,WAAWr3B,IAC7B,MACF,KAAKuJ,EAAG4mE,SAASl+D,QACfw9D,EAASoB,QAAqB,SAAb7wE,GACjB,MACF,QACEzB,QAAQrG,MAAR,wCACmCu3E,EAAS9kD,UAD5C,6C,EA+CNmmD,mBAAqB,SAACp4E,GAAkB,IAAD,EACuB,EAAK5B,MAAzDq7C,EAD6B,EAC7BA,mBAAoBy9B,EADS,EACTA,4BAE5B,OAAKA,GAAgCA,EAA4Bj0C,IAAIjjC,GAE9Dy5C,EAAmBxW,IAAIjjC,GAAQ,YAAc,SAD3C,I,EAuHXq4E,YAAc,WAAO,IAAD,EAC0C,EAAKj6E,MAAzDq7C,EADU,EACVA,mBAAoBy9B,EADV,EACUA,4BACtBH,EAAW,IAAIlmE,EAAG4mE,SACxBV,EAASkB,UAAU,IACnB,IAAMj4E,EAAOk6B,YAAiB,YAAY,SAAAl6B,GAAI,OAC5Ck3E,GACIA,EAA4Bj0C,IAAIjjC,IAChCy5C,EAAmBxW,IAAIjjC,MAE7By5C,EAAmBi+B,OAAO13E,EAAM+2E,EAAUt9B,EAAmBjpB,SAC7D,EAAK0T,cACD,EAAK9lC,MAAMk8C,eAAe,EAAKl8C,MAAMk8C,iB,kEArTzC57C,KAAKqI,SAAS,CAAEyvE,iBAAkB93E,KAAKN,MAAMu7C,gC,+CAuI7C2+B,EACAC,EACAR,GACoB,IAAD,OACbS,EAAQF,EAAeG,sBAAsBxpD,YAEnD,OAAOH,IACL0pD,EAAM7wE,KAAI,SAAC3H,EAAM8kC,GACf,IAAMiyC,EAAWuB,EAAenP,SAASnpE,GACzC,OAAO,EAAK04E,+BACV14E,EACA+2E,EACAwB,EAAQ,EACRzzC,EACAwzC,EACAP,S,2CAONO,EACAC,EACAR,GACoB,IAAD,OACnB,OAAOz6E,iBAAO,EAAGg7E,EAAeK,oBAAoB,SAAA7zC,GAClD,IAAMiyC,EAAWuB,EAAeM,WAAW9zC,GAC3C,OAAO,EAAK4zC,+BACV,GAAK5zC,EACLiyC,EACAwB,EAAQ,EACRzzC,EACAwzC,EACAP,GACoB,Q,qDAcxB/3E,EACA+2E,EACAwB,EACAzzC,EACAwzC,GAGC,IAAD,OAFAO,EAEA,uDAFgC,KAChCC,EACA,0DAC0Dp6E,KAAKN,MAAvDq7C,EADR,EACQA,mBAAoBY,EAD5B,EAC4BA,0BACtBl7C,EAAO43E,EAAS9kD,UAChB8mD,GAAgBloE,EAAG4mE,SAASuB,YAAYjC,EAAS9kD,WAEjD8lD,EAASc,GAA8Bn6E,KAAK05E,mBAAmBp4E,GAErE,OACE,gBAAC+1E,EAAD,CACE/1E,KAAMA,EACN8kC,MAAOA,EACP3d,IAAK,YAAcnnB,EACnB+2E,SAAUA,EACVr3E,SAAoB,IAAV64E,EACVA,MAAOA,EACPR,OAAQA,EACRe,eAAgBA,EAChBz+B,0BAA2BA,EAC3B56C,UACEf,KAAKiI,MAAM2vE,WAAWS,EAASjzE,IAAImS,YAC/B,kCACAhZ,EAENg8E,cAAe,SAAApyE,GACb,EAAKixE,wBAAwB93E,EAAM+2E,EAAUlwE,EAAMi+B,EAAOizC,GAE1D,EAAK7zC,cACD,EAAK9lC,MAAMk8C,eAAe,EAAKl8C,MAAMk8C,iBAE3C4+B,sBAAuB,WACrBz/B,EAAmBo+B,kBAAkBd,GACrC,EAAK7yC,cACD,EAAK9lC,MAAMk8C,eAAe,EAAKl8C,MAAMk8C,iBAE3C6+B,aAAc,SAAAC,GACZrC,EAASsC,OAAOD,GAChB,EAAKl1C,eAEPo1C,aAAc,SAAAzyE,GACZ,GAAI7G,IAAS6G,EAAb,CAEA,IAAI0yE,GAAU,EAIZA,EAHGjB,EAGOA,EAAekB,YAAYx5E,EAAM6G,GAFjC4yC,EAAmBggC,OAAOz5E,EAAM6G,GAK5C,EAAKE,SAAS,CACZuvE,WAAW,2BACN,EAAK3vE,MAAM2vE,YADN,IAER,CAACS,EAASjzE,MAAOy1E,QAIvBluE,SAAU,WACHitE,EAGCA,EAAermD,YAAcphB,EAAG4mE,SAASiC,UAC3CpB,EAAel6C,YAAYp+B,GACpBs4E,EAAermD,YAAcphB,EAAG4mE,SAASh3D,OAChD63D,EAAeqB,cAAc70C,GAL/B2U,EAAmB74B,OAAO5gB,GAQ5B,EAAKkkC,cACD,EAAK9lC,MAAMk8C,eAAe,EAAKl8C,MAAMk8C,iBAE3Cs/B,WAAY,WAEV,GAAKb,EAAL,CAEA,GAAI55E,IAAS0R,EAAG4mE,SAASiC,UAAW,CAClC,IAAM15E,EAAOk6B,YAAiB,iBAAiB,SAAAl6B,GAAI,OACjD+2E,EAAS7N,SAASlpE,MAEpB+2E,EAAS5N,SAASnpE,GAAMi4E,UAAU,SACzB94E,IAAS0R,EAAG4mE,SAASh3D,OAAOs2D,EAAS8C,UAEhD,EAAK31C,cACD,EAAK9lC,MAAMk8C,eAAe,EAAKl8C,MAAMk8C,kBAE3Ch+C,SACE6C,IAAS0R,EAAG4mE,SAASiC,UACjBh7E,KAAKo7E,yBAAyB/C,EAAUwB,EAAOR,GAC/C54E,IAAS0R,EAAG4mE,SAASh3D,MACrB/hB,KAAKq7E,qBAAqBhD,EAAUwB,EAAOR,GAC3C,KAENiC,WAAgC,SAApBt7E,KAAKiI,MAAMo9B,KACvBk2C,sBAA2C,WAApBv7E,KAAKiI,MAAMo9B,KAClCi2B,aAAct7D,KAAKiI,MAAM4vE,kBAAkBQ,EAASjzE,KACpD42D,SAAU,SAAAzyD,GAAM,OACd,EAAKwuE,gBAAgB,CAAEz2E,OAAM8D,IAAKizE,EAASjzE,IAAKizE,YAAY9uE,IAE9DiyE,uBAEY,IAAV3B,EACI75E,KAAKiI,MAAM6vE,iBAAiB3uE,QAC1B,SAAAsyE,GAAY,OAAK,EAAK/7E,MAAMq7C,mBAAmBxW,IAAIk3C,MAErD,O,+BAoBF,IAAD,SACqDz7E,KAAKN,MAAzDq7C,EADD,EACCA,mBAAoBy9B,EADrB,EACqBA,4BAC5B,IAAKz9B,EAAoB,OAAO,KAGhC,IAAM2gC,EAAkClD,EACpC55E,iBAAO,EAAG45E,EAA4B1mD,SAAS,SAAAsU,GAC7C,IAAM9kC,EAAOk3E,EAA4BmD,UAAUv1C,GACnD,IAAK2U,EAAmBxW,IAAIjjC,GAAO,CAEjC,IAAM+2E,EAAWG,EAA4BzmD,MAAMqU,GACnD,OAAO,EAAK4zC,+BACV14E,EACA+2E,EACA,EACAjyC,OACA7nC,EACA,cAIN,GAEEq9E,EAAyBh9E,iBAC7B,EACAm8C,EAAmBjpB,SACnB,SAAAsU,GACE,IAAMiyC,EAAWt9B,EAAmBhpB,MAAMqU,GACpC9kC,EAAOy5C,EAAmB4gC,UAAUv1C,GAE1C,OAAO,EAAK4zC,+BACV14E,EACA+2E,EACA,EACAjyC,OACA7nC,MASAs9E,EAAY,sBACbH,GADa,YAEbE,IAGL,OACE,gBAAC,IAAD,CAAQ19E,UAAQ,EAACsM,QAAM,EAACwqD,eAAa,GAClC6mB,EAAaxyE,OACZ,gBAAC,IAAD,CAAY0F,mBAAiB,GAC3B,gBAACyoE,EAAD,CACEz8B,mBAAoB/6C,KAAKN,MAAMq7C,mBAC/B+gC,UAAW,YAA6B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACtB,EAAKt8E,MAAMq7C,mBAAmBkhC,KAAKF,EAAUC,GAC7C,EAAKx2C,eAEP02C,YAAY,kBACZC,eAAa,EACbC,sBAAoB,GAEnBP,IAGH77E,KAAKN,MAAMm7C,uBACb76C,KAAKN,MAAMo7C,6BACX96C,KAAKN,MAAMkL,aACX,gBAAC,IAAD,CAAQ1M,UAAQ,EAACsM,QAAM,EAAC5G,eAAe,UACrC,gBAAC,IAAD,CACEU,MAAOtE,KAAKN,MAAMm7C,sBAClBl/B,YAAa3b,KAAKN,MAAMo7C,4BACxBiB,YAAY,iBACZnxC,aAAc5K,KAAKN,MAAMkL,aACzBoxC,MAAOh8C,KAAK25E,eAGd,KACJ,gBAAC,IAAD,CACE39B,MAAO6/B,EAAaxyE,OAASrJ,KAAK25E,YAAc,KAChDpE,OAAQv1E,KAAKk4E,cACbmE,QAASr8E,KAAKu4E,MACd+D,kBAAmBt8E,KAAKi5E,gBACxBsD,aAAcA,YAAav8E,KAAKiI,MAAM4vE,mBACtC2E,aAAcp4C,IAAUG,IAAI4zC,Y,GAtZKz6E,e,gJCvDrCgG,EACC,CACHlF,QAAS,QAFPkF,EAIE,CACJlF,QAAS,OACTmF,WAAY,SACZiK,YAAa,EACb0H,aAAc,GAULmnE,EAAe,SAAC/8E,GAC3B,IAAM4K,EAAgB5M,aAAiB6M,KAEvC,OACE,uBACE1M,MAAK,2BACA6F,GADA,IAEHC,WAAYjE,EAAMiE,WAClByd,gBAAiB9W,EAAcinB,KAAK61C,wBAGrC1nE,EAAM9B,WAWA8+E,EAAgB,SAACh9E,GAAD,OAC3B,uBACE7B,MAAK,2BACA6F,GADA,IAEHP,KAAMzD,EAAM8K,OAAS,OAAIjM,GACtBmB,EAAM7B,QAGV6B,EAAM9B,Y,6BCpDX,6BAGeF,QAAMymB,MAAK,SAAAzkB,GAAK,OAC7B,kBAAC,IAAYA,EACX,0BAAMoyE,EAAE,yI,kHCYG,oBACbrnE,EADa,EACbA,QACA8F,EAFa,EAEbA,QACAG,EAHa,EAGbA,gBACA9M,EAJa,EAIbA,eAJa,OAMb,gBAAC,IAAD,CAAQ1F,UAAQ,GACd,gBAAC,IAAD,CAAM0F,eAAgBA,GACpB,gBAAC,IAAD,KACG6G,GACC,gBAAC,QAAD,mKAQN,gBAAC,IAAD,CAAM7G,eAAe,SAASD,WAAW,YACvC,gBAAC,IAAD,CACEtC,MAAO,gBAAC,QAAD,0BACPsB,QAAS+N,EACTxD,SAAO,IAET,gBAAC,IAAD,MACA,gBAAC,IAAD,MACA,gBAAC,IAAD,WACA,gBAAC,IAAD,MACA,gBAAC,IAAD,CAAY7L,MAAO,gBAAC,QAAD,cAAsBsB,QAAS4N,Q,6BC3CxD,kCAAO,IAAMiY,EAAoB,kBAC1B9iB,KAAKC,MAAQ,IAAM4Q,KAAKomE,MAAsB,IAAhBpmE,KAAKqmE,Y,0PCqBpCC,EAAyB5nD,EAAQ,MAE1B0+C,EAAkB,SAAC5mD,GAC9B,IAAI+vD,EAAgB/vD,EAUpB,MAdA,2PAA8C0I,KAK/B1I,KACb+vD,EAAgB/vD,EACbhK,MAAM,IACN9Z,KAAI,SAAS8zE,GACZ,IAAMC,EAAQH,EAAuBE,GACrC,YAAiBx+E,IAAVy+E,EAAsBD,EAAOC,KAErCrmE,KAAK,KAEHmmE,EACJ/gD,UAAU,OACVt3B,QAAQ,mBAAoB,IAC5BA,QAAQ,gBAAiB,KACzBmiB,eAmCE,SAASutD,EAAT,GA4BI,IA3BTjvE,EA2BQ,EA3BRA,QACAu1B,EA0BQ,EA1BRA,QACAn5B,EAyBQ,EAzBRA,KACAysB,EAwBQ,EAxBRA,WACAglD,EAuBQ,EAvBRA,cACAC,EAsBQ,EAtBRA,eACAr3D,EAqBQ,EArBRA,YACAw3D,EAoBQ,EApBRA,aACAD,EAmBQ,EAnBRA,UACA+J,EAkBQ,EAlBRA,YACAC,EAiBQ,EAjBRA,SACA7J,EAgBQ,EAhBRA,wBACAplD,EAeQ,EAfRA,iBACAslD,EAcQ,EAdRA,uBACArlD,EAaQ,EAbRA,gBACAulD,EAYQ,EAZRA,sBACAtlD,EAWQ,EAXRA,eACA0lD,EAUQ,EAVRA,eACAzlD,EASQ,EATRA,YACAQ,EAQQ,EARRA,SACA8kD,EAOQ,EAPRA,YACA3mD,EAMQ,EANRA,SACA4B,EAKQ,EALRA,YACAmlD,EAIQ,EAJRA,gBACAxlD,EAGQ,EAHRA,aACA8lD,EAEQ,EAFRA,iBACA/lD,EACQ,EADRA,aACQ,EACkC3wB,IAAMooB,SAAS,IADjD,mBACDq3D,EADC,KACcC,EADd,KAEAntE,EAAYvS,IAAM0mB,WAAW/S,KAA7BpB,QAER,OACE,kBAAC,OAAD,MACG,gBAAGzP,EAAH,EAAGA,KAAH,OACC,kBAAC,IAAD,CAAmBtC,UAAQ,GACzB,kBAAC,IAAD,CAA2BA,UAAQ,GAChCk2E,GACC,oCACE,kBAAC,IAAD,CAAQl2E,UAAQ,GACd,kBAAC,IAAD,CACE0vB,SAAU1oB,EAAQwqB,UAClBrB,aAAcA,KAGlB,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CAAmBnwB,UAAQ,EAACsM,QAAM,GAChC,kBAAC,IAAD,CACE3K,kBAAmB,kBAAC,QAAD,kBACnBkC,WAAS,EACTtB,KAAK,OACLC,MAAOY,EACPlB,SAAUq6B,EACV94B,WAAS,IAEVoxE,GACC,kBAAC,IAAD,CACEvxE,SAAU,sBACV3B,kBAAmB,kBAAC,QAAD,eACnBQ,WACE,kBAAC,QAAD,yFAKFK,MACEqtB,EACIA,EAAW9kB,KAAI,SAAAwjB,GAAQ,MAAK,CAC1B/rB,MAAO+rB,EACPtkB,KAAMqkB,YAAgBC,EAAUjsB,OAElC,GAENJ,SAAU,SAACQ,EAAOkjB,GAChBivD,EACEjvD,EAASA,EAAO7a,KAAI,SAAAwjB,GAAQ,OAAIA,EAAS/rB,SAAS,KAGtD+gB,WAAY07D,EACZz7D,cAAe,SAAC9gB,EAAOF,GACrB08E,EAAiB18E,IAEnB6lB,WAAYgG,IAAkBtjB,KAAI,SAAAwjB,GAAQ,MAAK,CAC7C/rB,MAAO+rB,EACPtkB,KAAMqkB,YAAgBC,EAAUjsB,OAElCuB,WAAS,EACTs7E,aAAc,IAGjBvJ,GACC,kBAAC,IAAD,CACEzyE,MAAO,kBAAC,QAAD,gDACP0Q,UAAWuc,EACX1c,QAAS,SAAC+C,EAAG5C,GAAJ,OAAgB+hE,EAAgB/hE,QAKhDqiE,GACC,kBAAC,IAAD,CAAMl2E,UAAQ,GACZ,kBAAC,IAAD,KACE,kBAAC,QAAD,2HAON,kBAAC,IAAD,CACE2B,kBAAmB,kBAAC,QAAD,yBACnBkC,WAAS,EACTtB,KAAK,OACLC,MAAOib,GAAe,GACtBvb,SAAU4yE,EACVrxE,WAAS,EACTC,WAAS,EACTC,KAAM,IAEP6xE,GAAe/kD,GACd,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE5sB,WAAS,EACTlC,kBAAmB,kBAAC,QAAD,kCACnBa,MAAOkuB,GAAY,GACnBxuB,SAAU,SAACuU,EAAG1V,EAAGyB,GAAP,OAAyBgzE,EAAYhzE,IAE/CM,WAEIiP,GACAA,EAAQ6c,UACR8B,KACE3e,GAAW2e,IAAa3e,EAAQ6c,YAIrC7c,GAAWA,EAAQ6c,UAClB,kBAAC,IAAD,CACEpsB,MAAOuP,EAAQ6c,SACfnjB,YAAasG,EAAQ6c,WAGxB8B,KAAc3e,GAAW2e,IAAa3e,EAAQ6c,WAC7C,kBAAC,IAAD,CAAcpsB,MAAOkuB,EAAUjlB,YAAailB,KAGhD,kBAAC,IAAD,MACA,kBAAC,IAAD,CACE5tB,WAEI4tB,GACAA,EAASvlB,QACT4G,GACAA,EAAQ6c,UAGZjtB,kBAAmB,kBAAC,QAAD,kCACnBkC,WAAS,EACTtB,KAAK,OACLC,MACEkuB,GAAYA,EAASvlB,QAAU4G,GAAWA,EAAQ6c,UAC9CC,GACA,GAEN3sB,SAAU,SAAA2sB,GAAQ,OAAI4B,EAAYglD,EAAgB5mD,KAClDprB,WAAS,OAIXitB,GACAA,EAASvlB,QACT4G,GACAA,EAAQ6c,WAER,kBAAC,IAAD,CAAc5iB,KAAK,QACjB,kBAAC,QAAD,8DAOR,kBAAC,IAAD,CACEozE,QAASpK,EACT9yE,SAAU+yE,EACVtzE,kBAAmB,kBAAC,QAAD,gBACnBQ,WACE,kBAAC,QAAD,yKAOH48E,GACC,kBAAC,IAAD,CACEK,QAASJ,GAAY,GACrB98E,SAAU68E,EACVp9E,kBAAmB,kBAAC,QAAD,eACnBQ,WACE,kBAAC,QAAD,kJAQN,kBAAC,IAAD,CACE0B,WAAS,EACTlC,kBAAmB,kBAAC,QAAD,wCACnBa,MAAO0tB,EACPhuB,SAAU,SAACuU,EAAG1V,EAAGyB,GAAP,OAAyBmzE,EAAenzE,KAElD,kBAAC,IAAD,CAAcA,MAAM,UAAUiJ,YAAa,0BAC3C,kBAAC,IAAD,CAAcjJ,MAAM,YAAYiJ,YAAa,mBAC7C,kBAAC,IAAD,CAAcjJ,MAAM,WAAWiJ,YAAa,mBAE7C0pE,GACCE,GACAE,GACE,kBAAC,IAAMjd,SAAP,KACE,kBAAC,IAAD,CACEn1D,MAAO,kBAAC,QAAD,iCACP0Q,UAAWkc,EACXrc,QAAS,SAAC+C,EAAG5C,GAAJ,OAAgBshE,EAAwBthE,MAEnD,kBAAC,IAAD,CACE1Q,MAAO,kBAAC,QAAD,gCACP0Q,UAAWmc,EACXtc,QAAS,SAAC+C,EAAG5C,GAAJ,OAAgBwhE,EAAuBxhE,MAElD,kBAAC,IAAD,CACE1Q,MAAO,kBAAC,QAAD,2BACP0Q,UAAWoc,EACXvc,QAAS,SAAC+C,EAAG5C,GAAJ,OAAgB0hE,EAAsB1hE,WAUlDoiE,O,6BCnUf,6CAOaoJ,EAAe,WAC1B,IAAMC,EAAY9/E,UAAsB,GAOxC,OANAA,aAAgB,WAEd,OADA8/E,EAAUv9E,SAAU,EACb,WACLu9E,EAAUv9E,SAAU,KAErB,IACIu9E,I,6BCfT,qKAoBaC,EAAqC,SAChDC,GAEA,OAAOv0D,IACJzO,IADI,UACGgjB,IAAgBpU,QADnB,+BACyD,CAC5DxH,OAAQ,CACNgL,SAAU4wD,KAGb70D,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBi0D,EAAgB,SAACj8E,GAC5B,OAAOynB,IACJzO,IADI,UACGgjB,IAAgBpU,QADnB,iBACmC5nB,EADnC,WAEJmnB,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBk0D,EAA6B,SACxCC,GAEA,OAAO10D,IACJzO,IADI,UACGgjB,IAAgBpU,QADnB,wBACkD,CACrDxH,OAAQ,CACNpgB,GAAIm8E,EAAIlnE,KAAK,QAGhBkS,MAAK,SAAAY,GAAQ,OAAIA,EAASC,SAGlBo0D,EAAuB,SAClCp8E,GAEA,OAAOynB,IACJzO,IADI,UACGgjB,IAAgBpU,QADnB,gCACkD5nB,IACtDmnB,MAAK,SAAAY,GAAQ,OAAIA,EAASC,U,kFC3CxB,IAAMq0D,EAAkB,WAAO,IAAD,EACKrgF,WAVZ,qBAAd83E,WACgB,mBAArBA,UAAUwI,QACfxI,UAAUwI,QAOqB,mBAC5BC,EAD4B,KACdC,EADc,KAG7BC,EAAW,kBAAMD,GAAgB,IAEjCE,EAAY,kBAAMF,GAAgB,IAYxC,OAVAxgF,aAAgB,WAId,OAHAwuB,OAAOC,iBAAiB,SAAUgyD,GAClCjyD,OAAOC,iBAAiB,UAAWiyD,GAE5B,WACLlyD,OAAOG,oBAAoB,SAAU8xD,GACrCjyD,OAAOG,oBAAoB,UAAW+xD,MAEvC,IAEIH,I,qaC0DII,EAA0B,SAAC,GAAD,IACrCC,EADqC,EACrCA,WACA58E,EAFqC,EAErCA,GACA68E,EAHqC,EAGrCA,MAHqC,MAKU,CAC/C78E,KACAo0E,UAPqC,EAIrCA,UAIAwI,aACAC,UAGWC,EAAiC,SAAC,GAAD,IAC5CF,EAD4C,EAC5CA,WACAG,EAF4C,EAE5CA,eACAF,EAH4C,EAG5CA,MAH4C,MAKgB,CAC5D78E,GAAI+8E,EACJ3I,UAP4C,EAI5C4I,sBAIAJ,aACAC,UAGWI,EAAY,SAACC,GAAD,gBAA6BA,EAAK77D,MAAM,KAAK,GAA7C,SAEZ87D,EAAoB,uCAAG,WAClCrhD,EACA5V,GAFkC,qBAAAhX,EAAA,yDAI1BK,EAAyCusB,EAAzCvsB,uBAAwBjB,EAAiBwtB,EAAjBxtB,aAJE,wDAOrBgZ,EAAWhZ,EAAhBytB,IAP0B,SAQAxsB,IARA,cAQ5BiY,EAR4B,yBAS3BC,IACJzO,IADI,UACGokE,IAAgBx1D,QADnB,iBACmC1B,EADnC,gBACyD,CAC5D2B,QAAS,CAAEC,cAAeN,GAC1BpH,OAAQ,CAAEkH,YAEXH,MAAK,SAAAY,GAAQ,OACZA,EAASC,KAAKvgB,QAAO,SAAA41E,GAAW,OAAKA,EAAYC,iBAfnB,2CAAH,wDAmBpBC,EAAmC,SAC9CC,GAEA,IACMC,EADQD,EAAWn8D,MAAM,KAAK9Z,KAAI,SAAAi/D,GAAI,OAAIA,EAAKvnD,UACtBy+D,QAAO,SAACC,EAAKnX,GAC1C,IAAMoX,EAAqBpX,EAAKtF,MAAM,kBAChC2c,EAAWrX,EAAKtF,MAAM,WAI5B,OAHIyc,GAAOC,GAAsBC,IAC/BF,EAAIC,EAAmB,IAAMC,EAAS,IAEjCF,IACN,IACH,OAAIvqD,OAAOC,KAAKoqD,GAAkBnkD,SAAS,QAClCmkD,EAAiBK,KAEnB,MAGIC,EAAsB,uCAAG,WACpC73D,EACA83D,EACA73E,GAHoC,mBAAA+I,EAAA,6DAQ9ByX,EACJxgB,EAAQ83E,UAAR,gBAA6B/3D,EAA7B,wBAAmD83D,EAAnD,UATkC,SAWbv2D,IAAMzO,IAAN,UAAaokE,IAAgBx1D,SAA7B,OAAuCjB,GAAO,CACnEvG,OAAQja,EAAQ83E,SACZ,KACA,CACEC,cAAe/3E,EAAQ+3E,cACvBC,QAASh4E,EAAQi4E,YAhBW,cAW9Br2D,EAX8B,OAmB9Bs2D,EAAct2D,EAASF,QAAQ2+C,KACjC+W,EAAiCx1D,EAASF,QAAQ2+C,MAClD,KArBgC,kBAsB7B,CACL3G,QAAS93C,EAASC,KAClBq2D,gBAxBkC,2CAAH,0DA4BtBpe,EAAiB,uCAAG,WAC/BnkC,EACA5V,EAF+B,8BAAAhX,EAAA,yDAG7BtP,EAH6B,EAG7BA,KAAMy7C,EAHuB,EAGvBA,KAEA9rC,EAAyCusB,EAAzCvsB,uBAAwBjB,EAAiBwtB,EAAjBxtB,aALD,wDAQlBgZ,EAAWhZ,EAAhBytB,IARuB,SASGxsB,IATH,cASzBiY,EATyB,iBAURC,IAAMC,KAAN,UAClB01D,IAAgBx1D,QADE,iBACc1B,EADd,gBAErB,CACEtmB,OACAy7C,QAEF,CACExzB,QAAS,CAAEC,cAAeN,GAC1BpH,OAAQ,CAAEkH,YAlBiB,eAUzBS,EAVyB,yBAqBxBA,EAASC,MArBe,4CAAH,0DAwBjBq4C,EAAiB,uCAAG,WAC/BvkC,EACA5V,EACA83D,EACAM,GAJ+B,uBAAApvE,EAAA,yDAMvBK,EAAyCusB,EAAzCvsB,uBAAwBjB,EAAiBwtB,EAAjBxtB,aAND,wDASlBgZ,EAAWhZ,EAAhBytB,IATuB,SAUGxsB,IAVH,cAUzBiY,EAVyB,gBAWRC,IAAMoF,MAAN,UAClBuwD,IAAgBx1D,QADE,iBACc1B,EADd,wBACoC83D,GACzDM,EACA,CACEz2D,QAAS,CAAEC,cAAeN,GAC1BpH,OAAQ,CAAEkH,YAhBiB,cAWzBS,EAXyB,yBAmBxBA,EAASC,MAnBe,4CAAH,4DAsBjBs4C,EAAgB,uCAAG,WAC9BxkC,EACA5V,EACA83D,GAH8B,uBAAA9uE,EAAA,yDAKtBK,EAAyCusB,EAAzCvsB,uBAAwBjB,EAAiBwtB,EAAjBxtB,aALF,wDAQjBgZ,EAAWhZ,EAAhBytB,IARsB,SASIxsB,IATJ,cASxBiY,EATwB,gBAUPC,IAAM82D,IAAN,UAEnBnB,IAAgBx1D,QAFG,iBAGZ1B,EAHY,wBAGU83D,EAHV,UAIrB,GACA,CACEn2D,QAAS,CAAEC,cAAeN,GAC1BpH,OAAQ,CAAEkH,YAjBgB,cAUxBS,EAVwB,yBAoBvBA,EAASC,MApBc,4CAAH,0DAuBhBu4C,EAAiB,uCAAG,WAC/BzkC,EACA5V,EACA83D,GAH+B,uBAAA9uE,EAAA,yDAKvBK,EAAyCusB,EAAzCvsB,uBAAwBjB,EAAiBwtB,EAAjBxtB,aALD,wDAQlBgZ,EAAWhZ,EAAhBytB,IARuB,SASGxsB,IATH,cASzBiY,EATyB,gBAURC,IAAMpW,OAAN,UAClB+rE,IAAgBx1D,QADE,iBACc1B,EADd,wBACoC83D,GACzD,CACEn2D,QAAS,CAAEC,cAAeN,GAC1BpH,OAAQ,CAAEkH,YAdiB,cAUzBS,EAVyB,yBAiBxBA,EAASC,MAjBe,4CAAH,0DAoBjBw4C,EAAsB,uCAAG,WACpC1kC,EACA5V,EACA83D,EACAvd,GAJoC,uBAAAvxD,EAAA,yDAM5BK,EAAyCusB,EAAzCvsB,uBAAwBjB,EAAiBwtB,EAAjBxtB,aANI,wDASvBgZ,EAAWhZ,EAAhBytB,IAT4B,SAUFxsB,IAVE,cAU9BiY,EAV8B,gBAWbC,IAAMpW,OAAN,UAEnB+rE,IAAgBx1D,QAFG,iBAGZ1B,EAHY,wBAGU83D,EAHV,kBAGiCvd,GACtD,CACE54C,QAAS,CAAEC,cAAeN,GAC1BpH,OAAQ,CAAEkH,YAjBsB,cAW9BS,EAX8B,yBAoB7BA,EAASC,MApBoB,4CAAH,6D,iLCzO7BhmB,EAAS,CACbkG,KAAM,CAAE1G,MAAO,GAAI2G,OAAQ,GAAIC,YAAa,IAC5Co2E,SAAU,CAAE/8E,KAAM,IAGPg9E,EAAb,4MAIEl4E,MAAQ,CAAE0D,MAAM,GAJlB,EA0BEy0E,aAAe,WACbC,cACA,EAAKh4E,SAAS,CAAEsD,MAAM,KA5B1B,qEAM0B,IAAD,EACmB3L,KAAKN,MAArC89B,EADa,EACbA,kBAAmB6H,EADN,EACMA,KAAM3jC,EADZ,EACYA,GACjC,GAAI87B,EAAkBrtB,gBACFqtB,EAAkBrtB,aAAaiwD,OAK/C,OAHApgE,KAAKqI,SAAS,CACZsD,MAAM,KAED,EASX,OALA3L,KAAKqI,SAAS,CACZsD,MAAM,IAER20E,YAAiC,CAAEj7C,OAAM3jC,QAElC,IAvBX,+BA+BY,IAAD,OACCiK,EAAS3L,KAAKiI,MAAd0D,KADD,EAEgC3L,KAAKN,MAApC6gF,EAFD,EAECA,qBAAsBl7C,EAFvB,EAEuBA,KAC9B,OAAK15B,EAGH,gBAAC,IAAD,CACE0vC,QAAS,CACPklC,GACE,gBAAC,IAAD,CACEl/E,MAAO,gBAAC,QAAD,oCACPonB,IAAI,YACJvb,SAAO,EACPvK,QAAS,WACP,EAAK0F,SAAS,CAAEsD,MAAM,IACtB40E,QAKR/kC,iBAAkB,CAChB,gBAAC,IAAD,CACEn6C,MACW,QAATgkC,EACE,gBAAC,QAAD,wBAEA,gBAAC,QAAD,yBAGJ5c,IAAI,QACJvb,SAAS,EACTvK,QAAS3C,KAAKogF,gBAGlB7kC,mBAAmB,EACnB39B,eAAgB5d,KAAKogF,aACrBz0E,KAAMA,EACNrH,MACW,QAAT+gC,EACE,gBAAC,QAAD,8BAEArlC,KAAKN,MAAM4E,OAIf,gBAAC,IAAD,CAAQpG,UAAQ,GACd,gBAAC,IAAD,CAAMA,UAAQ,EAACyF,WAAW,UACd,QAAT0hC,EACC,gBAAC,IAAD,KACE,gBAAC,QAAD,6DAKF,gBAAC,IAAD,KACE,gBAAC,QAAD,6EAON,gBAAC,IAAD,CAAMnnC,UAAQ,EAACyF,WAAW,UACxB,gBAAC,IAAD,CAAM9F,MAAO6F,EAAOkG,OACpB,gBAAC,IAAD,CAAM/L,MAAO6F,EAAOw8E,UAClB,gBAAC,QAAD,8IAOJ,gBAAC,IAAD,CAAMhiF,UAAQ,EAACyF,WAAW,UACxB,gBAAC,IAAD,CAAU9F,MAAO6F,EAAOkG,OACxB,gBAAC,IAAD,CAAM/L,MAAO6F,EAAOw8E,UAClB,gBAAC,QAAD,4KAOJ,gBAAC,IAAD,MACA,gBAAC,IAAD,MACA,gBAAC,IAAD,MACA,gBAAC,IAAD,MACA,gBAAC,IAAD,CAAMliF,MAAM,SACV,yBACE,gBAAC,QAAD,oBArFQ,SAlCtB,GAA6CN,aAgIvC8iF,E,4MACJC,QAAoC,K,qEAGlC,QAAIzgF,KAAKygF,SACAzgF,KAAKygF,QAAQC,yB,+BAMd,IAAD,OACP,OACE,gBAAC,IAAyB5xE,SAA1B,MACG,SAAC0uB,GAAD,OACC,gBAAC2iD,EAAD,CACE3iD,kBAAmBA,EACnB7/B,IAAK,SAAAuyE,GAAM,OAAK,EAAKuQ,QAAUvQ,GAC/BqQ,qBAAsB,EAAK7gF,MAAM6gF,qBACjC7+E,GAAI,EAAKhC,MAAMgC,GACf4C,MAAO,EAAK5E,MAAM4E,MAClB+gC,KAAM,EAAK3lC,MAAM2lC,c,GArBK3nC,aA6BnB8iF,O,sKCvKFG,EAAwBjjF,gBAAyC,CAC5EgwB,QAAS,KACT01C,cAAe,KACfwd,0BAA2B,aAC3B9/E,MAAO,KACP0wB,WAAY,GACZqvD,cAAe,aACfC,4BAA6B,GAC7Br5C,aAAc,CACZR,cAAe,IAAID,IACnBM,UAAW,aACXC,aAAc,aACdT,eAAgB,KAChBC,kBAAmB,gBAQVg6C,EAA8B,SAAC,GAEH,IADvCnjF,EACsC,EADtCA,SACsC,EAIlCF,WAED,IANmC,mBAEpCojF,EAFoC,KAGpCE,EAHoC,OAORtjF,WAAyB,MAPjB,mBAO/BgwB,EAP+B,KAOtBuzD,EAPsB,OAQZvjF,WAAuB,MARX,mBAQ/BoD,EAR+B,KAQxB89D,EARwB,KAShChiC,EAAYl/B,UAAsB,GATF,EAWFA,WAlDZ,IAuCc,mBAW/B8zB,EAX+B,KAWnBqvD,EAXmB,KAYhCp5C,EAAeZ,cAEf+5C,EAA4BljF,eAChC,WAGMo3B,OAAOC,KAAK+rD,GAA6Bz3E,QAAUuzB,EAAU38B,SAGjE,sBAAC,oCAAA2Q,EAAA,6DACCguD,EAAS,MACThiC,EAAU38B,SAAU,EAFrB,kBAKuD6tD,cALvD,OAKSozB,EALT,OAMWlzB,EAAmCkzB,EAAnClzB,sBAAuB5T,EAAY8mC,EAAZ9mC,QAEzB+mC,EAAa/mC,EAChB3jC,QACAsmC,MAAK,SAACqkC,EAAMC,GAAP,OACJD,EAAKx6D,cAAco2B,cAAcqkC,EAAKz6D,kBAGpCk6D,EAA8B,GACpC9yB,EAAsBhoD,SAAQ,SAAAqqB,GAC5BywD,EAA4BzwD,EAAU/uB,MAAQ+uB,KAGhDlpB,QAAQC,KAAR,iBAEI4mD,EAAsB3kD,OAF1B,0CAKA23E,EAA+BF,GAC/BG,EAAW,CACT7mC,QAAS+mC,EACTv5C,YAAau5C,EACbG,SAAU,KA5Bf,kDA+BGn6E,QAAQrG,MAAR,gEAIA89D,EAAS,EAAD,IAnCX,QAsCChiC,EAAU38B,SAAU,EAtCrB,yDAAD,KAyCF,CAAC6gF,EAA6BlkD,IAGhCl/B,aACE,WAGE,IAAIo3B,OAAOC,KAAK+rD,GAA6Bz3E,SAAUuzB,EAAU38B,QAAjE,CAGA,IAAMshF,EAAY1oE,YAAW,WAC3B1R,QAAQC,KAAK,mDACbw5E,MACC,KACH,OAAO,kBAAMx2B,aAAam3B,OAE5B,CAACX,EAA2BE,EAA6BlkD,IA9ErB,IAiF9BkK,EAAkCW,EAAlCX,eAAgBG,EAAkBQ,EAAlBR,cAClBm8B,EAGAS,YACJid,EACAtvD,EACAsV,EACAG,GAGIu6C,EAAsB9jF,WAC1B,iBAAO,CACL0lE,gBACAwd,4BACAlzD,UACA5sB,QACA0wB,aACAqvD,gBACAC,8BACAr5C,kBAEF,CACE27B,EACAtiE,EACA4sB,EACA8D,EACAsvD,EACAr5C,EACAm5C,IAIJ,OACE,gBAACD,EAAsBnkB,SAAvB,CAAgC97D,MAAO8gF,GACpC5jF,K,qKCpJD6jF,EAAe,SAAC3gF,EAAc4gF,GAClCv6E,QAAQrG,MAAM,6BAA8BA,EAAO4gF,GACnDC,YACE,kCACA,iBACA,CACE7gF,QACA4gF,kBAEF,yBAISE,EAAyB,SAAC,GAAD,IACpCF,EADoC,EACpCA,eACA5gF,EAFoC,EAEpCA,MAFoC,OAOpC,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAWqB,SAAS,UACpB,gBAAC,IAAD,MACA,gBAAC,IAAD,CAAMrE,KAAK,SAAX,uCAEF,gBAAC,IAAD,MACA,gBAAC,IAAD,mCAEE,2BAFF,UAGS,kDAHT,+DAMA,gBAAC,IAAD,6CAEE,2BAFF,mGAMA,gBAAC,IAAD,CACEuD,MAAO,gBAAC,QAAD,mCACPsB,QAAS,WACP,IAAMi+B,EAAI,iUAQhB9/B,EAAQA,EAAM+gF,MAAQ,iBARN,yEAahBH,GAAkB,2BAbF,qDAiBDI,cAjBC,qBAkBRC,cAlBQ,+BAmBCC,cAnBD,gCAoBEC,cApBF,4BAqBFC,cArBE,eAuBVn3E,IAAOC,gBAAP,2DACsDi2D,mBAClDrgC,GAFJ,oDAuBOuhD,IATO,SAACziF,GAAD,OACpB,gBAAC,IAAD,CACE0iF,kBAAmBR,EACnBxsB,QAASqsB,GAER/hF,EAAM9B,Y,+JC1FEykF,EAAgB,uCAAG,WAC9B7hF,EACA0E,EACAo9E,EACAz0B,GAJ8B,eAAAj9C,EAAA,+EAOMs9B,YAAa2f,GAPnB,cAOtB00B,EAPsB,gBAQtBC,YACJF,EACAp9E,EACA,CAACq9E,IAXyB,iCAcrB,GAdqB,uCAgB5B/kB,YAAa,CACX/yD,QAASjK,EAAKiB,EACZ,0HAEFg8D,SAAQ,KACRC,QAAS,6BArBiB,mBAuBrB,GAvBqB,yDAAH,4DA8BhB+kB,EAAe,uCAAG,WAC7BjiF,EACA8hF,EACAp9E,GAH6B,mBAAA0L,EAAA,yDAKvB8xE,EAAiCJ,EAA+Bh6C,oCALzC,0CAMe,GANf,gCASHo6C,EAA+BC,oCAT5B,UASrBC,EATqB,iDAUJ,GAVI,wBAYOF,EAA+BG,gCAC/DD,GAbyB,WAYrBL,EAZqB,QAgBvBr9E,EAAQ49E,iCAAiCP,EAAoBjhF,MAhBtC,oBAiBVyJ,IAAOkZ,kBACpBzjB,EAAKiB,EACH,iJAnBqB,2CAsBL,GAtBK,yBAyBrB+gF,YACJF,EACAp9E,EACA,CAACq9E,IACD,GA7ByB,kCA+BpB,GA/BoB,yCAiC3B/kB,YAAa,CACX/yD,QAASjK,EAAKiB,EACZ,qJAEFg8D,SAAQ,KACRC,QAAS,4BAtCgB,mBAwCpB,GAxCoB,0DAAH,2D,+BC5C5B,uDASe,SAASqlB,EAAoBC,GAC1C,IAAIC,GAAe,EACf9jF,OAASZ,EACb,OAAO,WACL,OAAI0kF,IAIJ97E,QAAQC,KAAR,uBAA6B47E,EAA7B,QACA7jF,EAAS2F,IAAgBk+E,GACzBC,GAAe,GALN9jF,K,yOCLPuE,EAAS,CACbw/E,SAAU,CAERr/E,QAAS,IAcAs/E,EAAkB,SAACzjF,GAC9B,OACE,gBAAC,IAAD,CACE0jF,WACE1jF,EAAM0jF,YACJ,gBAAC,IAAD,CAAYtlF,KAAK,SACf,gBAAC,IAAD,QAKN,uBAAKD,MAAO,CAAEsnB,SAAU,EAAG3mB,QAAS,OAAQmF,WAAY,WACrDjE,EAAM9B,UAER8B,EAAM27C,SACL,uBAAKx9C,MAAO,CAAEsnB,SAAU,EAAG1mB,WAAY,EAAG4kF,UAAW,WAClD3jF,EAAM27C,WAmBJioC,EAAgB,SAAC5jF,GAC5B,OACE,gBAAC,IAAD,CACE7B,MAAK,2BAAQ6B,EAAM+lB,gBAAkB/hB,EAAOw/E,UAAcxjF,EAAM7B,QAE/D6B,EAAM9B,WAgDA2lF,EAAY,SAAC7jF,GAA2B,IAC3C8jF,EAA8B9jF,EAA9B8jF,WAAeplF,EAD2B,YACZsB,EADY,gBAE5C8nB,EAAQ9pB,aAAiB6M,KAE/B,OACE,gBAAC,IAAD,iBACMnM,EADN,CAEEsQ,QAAM,EACN4S,UAAW,EACXzjB,MAAO,CAAEi3D,OAAO,aAAD,OAAettC,EAAMmE,QAAQk6B,iBAC5C49B,gBAAiB,CAAE/1E,gBAAiB81E,Q,6BC5H1C,sDAyCa1pB,EAA8B,SACzCC,GAEA,IAAM2pB,EAAa,CACjBloB,QAAQ97D,EAA+BikF,GACrC,IAAMzlC,EAAOylC,EAAQC,UACfpoB,EAAU97D,EAAM87D,SAAW,KACjC,OAAIA,GAAgBA,EAAQtd,IAG9Bqd,UAAU77D,GACDA,EAAM67D,aAajB,IAAMsoB,EAAa,CACjBtiC,QAAQ7hD,EAA+BikF,GACrC,IAAMzlC,EAAOylC,EAAQC,UACrB,OAAO1lC,GAAQx+C,EAAM6hD,QAAQrD,IAE/BuD,KAAK/hD,EAA+BikF,GAC9BA,EAAQG,WAGZpkF,EAAM+hD,SAeV,IAAMsiC,EAA+BC,qBACnCjqB,EACA2pB,GAnCF,SACEO,EACAN,GAEA,MAAO,CACLloB,kBAAmBwoB,EAAQC,gBA4BMF,CAKnC/kC,qBAAW8a,EAAc8pB,GAhB3B,SACEI,EACAN,GAEA,MAAO,CACLjiC,kBAAmBuiC,EAAQtoB,aAC3Bha,OAAQgiC,EAAQhiC,OAAO,CAAEwiC,SAAS,IAClC5iC,QAASoiC,EAAQpiC,aASnBtC,EACE,YACE,OAAOrhD,EADgE,EAAtEA,UACe,CACd69D,kBAFqE,EAA5DA,kBAGT/Z,kBAHqE,EAAzCA,kBAI5BC,OAJqE,EAAtBA,OAK/CJ,QALqE,EAAdA,cAW/D,OAAO,SAAC7hD,GAAD,OACL,gBAACqkF,EAAiCrkF,M,2XCXhCyS,EAAkBC,EAAOD,GAEzBiyE,EAAmB,EAAnBA,EAA2B,GAgF3B1gF,EAAS,CACb4K,UAAW,CACT9P,QAAS,OACT0E,MAAO,OACPqL,cAAe,SACfpL,KAAM,EACNF,SAAU,aAIDohF,EAAb,kDA0EE,WAAY3kF,GAAwB,IAAD,8BACjC,cAAMA,IApER4kF,cAAgB5mF,cAmEmB,EAlEnC6mF,mBAAqB,IAAIC,IAAkB,CACzCC,SAAU,kBACP,EAAKx8E,MAAMy8E,gBACX,EAAKz8E,MAAM08E,kBAAkBn6D,cAC7B,EAAKviB,MAAM28E,8BACX,EAAK38E,MAAM48E,2BACdC,kBAAmB,CACjB54B,SAAU,kBAAM,EAAK+sB,mBACrB1D,OAAQ,kBAAM,EAAK2C,iBACnB6M,MAAO,kBAAM,EAAKC,gBAClB3I,QAAS,kBAAM,EAAK4I,6BACpBC,SAAU,kBAAM,EAAKC,sBACrBC,SAAU,kBAAM,EAAKC,qBACrBC,OAAQ,kBAAM,EAAKC,QACnBC,OAAQ,kBAAM,EAAKC,QACnBC,SAAU,SAAC9kF,GAAD,OAA0B,EAAK+kF,YAAY,KAAjB,CAAuB/kF,IAC3DglF,UAAW,SAAChlF,GAAD,OAA0B,EAAK+kF,YAAY,MAAjB,CAAwB/kF,OAkD9B,EAvCnCqH,MAAQ,CACN49E,QAASC,YAAuB,EAAKpmF,MAAMqmF,OAAQ,CAAEC,eAAgB,KAErErB,kBAAmB,CACjBr5C,aAAa,EACb9gB,YAAa,KACb+0B,WAAY,KACZkB,YAAa,GAEfwlC,gBAAiB,CACf36C,aAAa,EACb9gB,YAAa,KACb+0B,WAAY,KACZ90B,eAAgB,GAGlBw1B,UAAWoP,cAEXq1B,eAAe,EACfwB,sBAAuB,KACvBC,gCAAiC,KACjCC,0BAA0B,EAC1BC,2BAA4B,KAE5BzB,4BAA6B,KAE7BC,0BAA2B,KAE3ByB,iBAAiB,EACjBljB,cAAe,KACfmjB,kBAAmB,KAEnBC,kBAAmB,GAEnBC,gBAAiB,KAEjBtkF,SAAU,IAGuB,EAkDnCukF,kBAAoB,WAClB,EAAKC,YAAY,wCAnDgB,EAsDnCC,iBAAmB,WACjB,EAAKD,YAAY,uCAvDgB,EA0DnCxB,mBAAqB,WACnB,EAAK98E,UACH,SAAAJ,GACE,KACEA,EAAMq+E,iBACN,EAAKO,cACL,EAAKA,aAAaC,mBAHpB,CAQA,IAAMzoC,GAAQp2C,EAAMq+E,gBAKpB,OAJKjoC,GACC,EAAK0oC,gBAAgB,EAAKA,eAAeC,QAGxC,CACLV,gBAAiBjoC,GATjB,EAAKwoC,aAAa3mF,WAYtB,WACM,EAAK+H,MAAMq+E,iBAAmB,EAAKO,cACrC,EAAKA,aAAa3mF,YAhFS,EAsFnCmlF,kBAAoB,WACd,EAAK0B,gBAAgB,EAAKA,eAAeC,QAC7C,EAAK3+E,SAAS,CAAEi+E,iBAAiB,KAxFA,EA2FnCW,aAAe,WAAO,IACZ/hF,EAAY,EAAKxF,MAAjBwF,QAERuqD,YAAkB,EAAKxnD,MAAMg4C,WAAWj6C,SAAQ,SAAApF,GAC1CA,EAAMsmF,oBACRtmF,EACGumF,eACAC,eACCliF,EACA,sCACAtE,EAAMumF,eAAeE,qBAK7B,EAAKC,uBAAsB,WACrB,EAAKC,aAAa,EAAKA,YAAYC,wBA3GR,EA+GnCC,2BAA6B,WAC3B,OAAOh4B,YAAkB,EAAKxnD,MAAMg4C,WAAWnW,MAAK,SAAAlpC,GAClD,OAAOA,EAAMsmF,uBAjHkB,EAqHnCQ,4BAA8B,WAC5B,OAAOj4B,YAAkB,EAAKxnD,MAAMg4C,WAAWnW,MAAK,SAAAlpC,GAClD,OAAOA,EAAM+mF,mBAvHkB,EA2HnCC,aAAe,SACbnnF,EACAonF,GACwB,IAChB3iF,EAAY,EAAKxF,MAAjBwF,QACF4iF,EAAoB93B,YAAiB,EAAK/nD,MAAMg4C,WAClD8nC,GAAuB,EAEvBC,EAA2C,GAC3CH,EACFG,EAAa,CAACH,GACLC,GAEE,uCAATrnF,GACS,qCAATA,IAEAsnF,GAAuB,GAGzBC,EAAar4B,YAAyB,EAAK1nD,MAAMg4C,WAAWh3C,KAC1D,SAAAg/E,GAAa,MAAK,CAChBC,WAAYD,EAAcC,WAC1BznC,YAAasnC,EACTE,EAAcxnC,YAAc,EAC5BwnC,EAAcxnC,iBAItBunC,EAAa,CACX,CACEE,WAAY,EAAKxoF,MAAMqmF,OACvBtlC,YAAa,EAAK/gD,MAAMqmF,OAAOsB,mBAKrC,IAAMc,EAAYH,EAAW/+E,KAC3B,SAAC4+E,GACC,OAAOA,EAAQK,WAAWd,eACxBliF,EACAzE,EACAonF,EAAQpnC,YAAc,MAgB5B,OAXA,EAAK6mC,uBAAsB,WACzB,IAAMnzE,EAAa,EAAKozE,YACnBpzE,GAELA,EAAWqzE,mBAAkB,WACtBK,GAAYC,GACf3zE,EAAWi0E,cAAcD,EAAU,UAKlCA,GApL0B,EAuLnCE,oBAAsB,WACpB,IAAMC,EAAiBC,YACrB94B,YAAkB,EAAKxnD,MAAMg4C,YAE/B,GAAKqoC,EAAej/E,OAApB,CAEA,IAAMzI,EAAQ0nF,EAAeA,EAAej/E,OAAS,GACrD,EAAKhB,SAAS,CACZo+E,gBAAiB7lF,MA/Lc,EAmMnC4nF,qBAAuB,WACrB,EAAKngF,SAAS,CACZo+E,gBAAiB,QArMc,EAyMnCgC,6BAA+B,SAACjoF,GAAD,MAAoB,CACjD,CACEa,MAAOb,EAAKiB,EAAE,aACd24B,MAAO,kBAAM,EAAK89C,iBAClB9zE,YAAa,eAEf,CACE/C,MAAOb,EAAKiB,EAAE,YACd24B,MAAO,kBAAM,EAAK4qD,gBAClB5gF,YAAa,eAEf,CACE/C,MAAOb,EAAKiB,EAAE,cACd24B,MAAO,kBAAM,EAAKmmB,qBAClB/hB,QAASqjB,eAA4BC,cACrC19C,YAAa,eAEf,CAAE3D,KAAM,aACR,CACEY,MAAOb,EAAKiB,EAAE,eACd24B,MAAO,kBAAM,EAAK6+C,mBAClB70E,YAAa,UAEf,CAAE3D,KAAM,aACR,CACEY,MAAOb,EAAKiB,EAAE,aACd24B,MAAO,EAAKmrD,KACZ/mD,QAASkqD,YAAQ,EAAKzgF,MAAM49E,SAC5BzhF,YAAa,eAEf,CACE/C,MAAOb,EAAKiB,EAAE,aACd24B,MAAO,EAAKqrD,KACZjnD,QAASmqD,YAAQ,EAAK1gF,MAAM49E,SAC5BzhF,YAAa,qBAEf,CACE/C,MAAOb,EAAKiB,EAAE,yBACd24B,MAAO,kBAAM,EAAKwuD,6BAClB7xB,QAAS7G,YAA+B,EAAKjoD,MAAMg4C,cAhPpB,EAoPnC4oC,8BAAgC,SAC9B/7E,EACAu0C,GAEA,EAAKynC,sBAAsBznC,EAAyBv0C,IAxPnB,EA2PnCg8E,sBAAwB,SACtBtoC,GAEI,IADJ2lC,EACG,uDADoD,KAEnD,EAAKl+E,MAAM08E,kBAAkBn6D,cAC/B,EAAKviB,MAAM08E,kBAAkBn6D,YAAYzX,SACzC5L,QAAQ4sB,KACN,wKAIJ,EAAK1rB,SAAS,CACZ89E,kCACAxB,kBAAmB,CACjBplC,WAAYiB,EAAmBjB,WAC/BjU,YAAakV,EAAmBlV,YAChC9gB,YAAag2B,EAAmBh2B,YAC5Bg2B,EAAmBh2B,YAAYmkD,QAC/B,IAAIx8D,EAAG42E,YACXtoC,iBACqCliD,IAAnCiiD,EAAmBC,YACfD,EAAmBC,iBACnBliD,MAjRuB,EA+SnCyqF,2BAA6B,SAACC,GAC5B,EAAKC,gCACH,CACE3pC,WAAY0pC,EAAmB1pC,WAC/BjU,YAAa29C,EAAmB39C,aAElC29C,EAAmBxoC,cArTY,EAyTnCyoC,gCAAkC,SAChCD,GAEI,IADJxoC,EACG,4DADoBliD,EAEjB+wD,EAAuBM,YAAwB,EAAK3nD,MAAMg4C,WAC1DkpC,OACY5qF,IAAhBkiD,GAA6C,OAAhBA,EACzBwoC,EAAmB1pC,WAAWzhD,OAC9B2iD,EAEA2oC,IAA4D95B,EAAqBnmD,QACrF,SAAAqhB,GAAW,OACT6+D,YAAwB7+D,EAAay+D,EAAmB1pC,eAC1Dl2C,OAEE+/E,IAEJ95B,EAAqBtpD,SAAQ,SAAAwkB,GAAW,OACtCy+D,EAAmB1pC,WAAWy5B,OAAOxuD,EAAa2+D,MAG/C,EAAK5E,mBAAmB+E,uBAG3B,EAAKhC,wBAFL,EAAKrO,gBAAgB,CAAEsQ,cAAc,MA/UN,EAqVnCj5B,YAAc,SAACZ,GACb,IAAM85B,EAAc,EAAKjF,mBAAmBkF,oBAC5C,EAAKphF,SACH,CACE43C,UAAWqQ,YAAY,EAAKroD,MAAMg4C,UAAWyP,EAAc85B,KAE7D,kBAAM,EAAKE,oBA3VoB,EA+VnCC,YAAc,WACR,EAAKpC,aAAa,EAAKA,YAAYqC,WAhWN,EAmWnCC,cAAgB,SAAC18D,GACX,EAAKo6D,aAAa,EAAKA,YAAYuC,cAAc38D,IApWpB,EAuWnC48D,uBAAyB,SAACvpF,GAAD,MAAoB,CAC3C,CACEa,MAAOb,EAAKiB,EAAE,aACd24B,MAAO,kBAAM,EAAKiuD,uBAClBtxB,QACEwxB,YACE94B,YAAkB,EAAKxnD,MAAMg4C,YAC7B52C,OAAS,GAEf,CACEhI,MAAOb,EAAKiB,EAAE,aACd24B,MAAO,kBAAM,EAAK89C,iBAClB9zE,YAAa,eAEf,CACE/C,MAAOb,EAAKiB,EAAE,YACd24B,MAAO,kBAAM,EAAK4qD,gBAClB5gF,YAAa,eAEf,CACE/C,MAAOb,EAAKiB,EAAE,cACd24B,MAAO,kBAAM,EAAK4vD,eAClBxrD,QAASyrD,cACT7lF,YAAa,eAEf,CACE/C,MAAOb,EAAKiB,EAAE,eACd24B,MAAO,kBAAM,EAAK6+C,mBAClB70E,YAAa,UAEf,CACE/C,MAAOb,EAAKiB,EAAE,wBACd24B,MAAO,kBAAM,EAAK8vD,kBAClB1rD,QAAS,EAAKkpD,8BACdtjF,YAAa8+B,YACX,EAAKxjC,MAAM6+C,YAAYz6B,OAAO0e,gBAA9B,uBAEK,SAGT,CAAE/hC,KAAM,aACR,CACEY,MAAOb,EAAKiB,EAAE,4BACd24B,MAAO,WACL,EAAKusD,YAAY,yCAGrB,CACEtlF,MAAOb,EAAKiB,EAAE,sBACd24B,MAAO,kBAAM,EAAK6sD,gBAClBzoD,QAAS,EAAKipD,8BAEhB,CACEpmF,MAAOb,EAAKiB,EAAE,kBACdm1D,QAAS,EAAK3uD,MAAMu+E,kBAAkBv9E,KAAI,SAAAmP,GACxC,MAAO,CACL/W,MAAO+W,EAASuY,SAChByJ,MAAO,WACL,EAAKusD,YAAYvuE,EAAS3X,YAKlC,CAAEA,KAAM,aACR,CACEY,MAAOb,EAAKiB,EAAE,aACd24B,MAAO,EAAKmrD,KACZ/mD,QAASkqD,YAAQ,EAAKzgF,MAAM49E,SAC5BzhF,YAAa,eAEf,CACE/C,MAAOb,EAAKiB,EAAE,aACd24B,MAAO,EAAKqrD,KACZjnD,QAASmqD,YAAQ,EAAK1gF,MAAM49E,SAC5BzhF,YAAa,qBAEf,CAAE3D,KAAM,aACR,CACEY,MAAOb,EAAKiB,EAAE,qBACd24B,MAAO,EAAKuvD,aAEd,CACEtoF,MAAOb,EAAKiB,EAAE,4BACdm1D,QAAQ,CACN,CACEv1D,MAAOb,EAAKiB,EAAE,YACd24B,MAAO,kBAAM,EAAKyvD,eAAe,KAEnC,CAAEppF,KAAM,cALH,mBAMF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGwI,KAAI,SAAAm9B,GACjC,MAAO,CACL/kC,MAAOb,EAAKiB,EAAE,0BAAU2kC,EAAQ,KAChChM,MAAO,kBAAM,EAAKyvD,cAAczjD,WAKxC,CAAE3lC,KAAM,aACR,CACEY,MAAOb,EAAKiB,EAAE,qCACd24B,MAAO,kBAAM,EAAK+vD,4BAEpB,CACE9oF,MAAOb,EAAKiB,EAAE,iCACd24B,MAAO,kBAAM,EAAKgwD,2BAEpB,CACE/oF,MAAOb,EAAKiB,EAAE,2CACd24B,MAAO,EAAKiwD,4BAEd,CAAE5pF,KAAM,aACR,CACEY,MAAOb,EAAKiB,EAAE,gBACd24B,MAAO,kBAAM,EAAKurD,YAAY,KAAjB,IACbvhF,YAAa,cACbo6B,QACE,EAAK9+B,MAAM6+C,YAAYz6B,OAAOwmE,qBAAuBlG,GAEzD,CACE/iF,MAAOb,EAAKiB,EAAE,iBACd24B,MAAO,kBAAM,EAAKurD,YAAY,MAAjB,IACbvhF,YAAa,cACbo6B,QACE,EAAK9+B,MAAM6+C,YAAYz6B,OAAOwmE,qBAAuBlG,KAlexB,EAsenCmG,qBAAuB,SAACzxC,EAAWC,EAAW2W,GAC5C,IAAM85B,EAAc,EAAKjF,mBAAmBkF,oBAC5C,EAAKphF,SACH,CACE43C,UAAWqQ,YAAY,EAAKroD,MAAMg4C,UAAWyP,EAAc85B,KAE7D,WACE,EAAKE,gBACD,EAAKc,kBAAkB,EAAKA,iBAAiB7+E,KAAKmtC,EAAGC,OA9e5B,EAmfnC0xC,2BAA6B,SAC3B3xC,EACAC,EACAyH,GAEA,IAAMgpC,EAAc,EAAKjF,mBAAmBkF,oBAC5C,EAAKphF,SACH,CACE43C,UAAWuQ,YACT,EAAKvoD,MAAMg4C,UACXO,EACAgpC,KAGJ,WACE,EAAKE,gBACD,EAAKgB,wBAAwB,EAAKA,uBAAuB/+E,KAAKmtC,EAAGC,OAngBxC,EAwgBnCyX,kBAAoB,SAAChQ,GACnB,IAAMgpC,EAAc,EAAKjF,mBAAmBkF,oBAC5C,EAAKphF,SACH,CACE43C,UAAWuQ,YACT,EAAKvoD,MAAMg4C,UACXO,EACAgpC,KAGJ,kBAAM,EAAKE,oBAlhBoB,EAshBnCiB,oBAAsB,SAACC,GAAwC,IACrDpgE,EAAgCogE,EAAhCpgE,YAAaC,EAAmBmgE,EAAnBngE,eAGrB,EAAKpiB,SAAS,CACZ49E,gBAAiB2E,EACjBlG,eAAe,EACfwB,sBAAuB0E,EAAiBjqC,SACpCiqC,EAAiBjqC,SAAS93C,cAC1B,KACJu9E,0BAA0B,EAC1BC,2BAA4B77D,EAAYO,aAAaN,MAjiBtB,EAqiBnCogE,qBAAuB,SAACC,GACtB,GAAIA,EAAc,CAAC,IAAD,EACwB,EAAK7iF,MAAMg+E,gBAA3Cz7D,EADQ,EACRA,YAAaC,EADL,EACKA,eACrB,IAAKD,IAAgB,EAAKviB,MAAMo+E,2BAA4B,OAE5D77D,EAAYugE,aACVtgE,EACA,EAAKxiB,MAAMo+E,iCAGT,EAAKp+E,MAAMm+E,0BACb,EAAKkB,wBAXuC,IAexCpB,EAA0B,EAAKj+E,MAA/Bi+E,sBAER,EAAK79E,SACH,CACEq8E,eAAe,EACfwB,sBAAuB,KACvBE,0BAA0B,IAE5B,WACMF,GAWFA,EAAsBhmF,YAxkBK,EA8kBnCgqF,eAAiB,WACf,IAAIc,GAAgB,EACpBv7B,YAAkB,EAAKxnD,MAAMg4C,WAAWj6C,SAAQ,SAAApF,GAC1CA,EAAM+mF,iBACR/mF,EAAMqqF,aAAarqF,EAAMsqF,cACzBF,GAAgB,MAGhBA,GACF,EAAK1D,uBAAsB,WACrB,EAAKC,aAAa,EAAKA,YAAYC,wBAxlBV,EA6lBnCvO,gBAAkB,WAGoD,IAAD,yDAAP,GAAO,IAFnEkS,0BAEmE,aADnE5B,oBACmE,SAC3DxD,EAAW,EAAKrmF,MAAhBqmF,OACFqF,EAAgB,IAAIj5E,EAAGk5E,cACzB9B,GACF95B,YAAkB,EAAKxnD,MAAMg4C,WAAWj6C,SAAQ,SAAApF,GAAK,OACnDwqF,EAAcE,iBAAiB1qF,MAG/BuqF,GACFv7B,YAAwB,EAAK3nD,MAAMg4C,WAAWj6C,SAAQ,SAAAwkB,GAAW,OAC/D4gE,EAAcG,uBAAuB/gE,MAIzC4gE,EAAcI,OAAOzF,GAKjB,EAAKwB,aAAa,EAAKA,YAAYC,oBAEvC,EAAKn/E,SACH,CACE43C,UAAWoQ,cACXq0B,eAAe,EACfwB,sBAAuB,OAEzB,WACE,EAAKoB,wBAKL,EAAKmE,qBAjoBwB,EAsoBnCvT,cAAgB,WACdwT,YAAyB,EAAKzjF,MAAMg4C,YAvoBH,EA0oBnC+kC,aAAe,WACb,EAAK9M,gBACL,EAAKe,mBA5oB4B,EA+oBnC+Q,YAAc,WAET2B,YACC,EAAKjsF,MAAMwF,QACX,EAAK+C,MAAMg4C,YAMf,EAAKqnC,uBAAsB,WACrB,EAAKC,aAAa,EAAKA,YAAYC,wBA1pBR,EA8pBnCjnC,kBAAoB,WAEfqrC,YACC,EAAKlsF,MAAMwF,QACX,EAAK+C,MAAMg4C,YAMf,EAAKqnC,uBAAsB,WACrB,EAAKC,aAAa,EAAKA,YAAYC,wBAzqBR,EA6qBnCvC,0BAA4B,WACtBj1B,YAAiB,EAAK/nD,MAAMg4C,WAAY,EAAK+pC,eACxC/5B,YAAuB,EAAKhoD,MAAMg4C,YAElCkQ,YAA4B,EAAKloD,MAAMg4C,aAD9C,EAAKM,qBAhrB0B,EAqrBnCsrC,oCAAsC,SACpCxqC,GAGGyqC,YACC,EAAKpsF,MAAMwF,QACXm8C,IAMJ,EAAKimC,uBAAsB,WACrB,EAAKC,aAAa,EAAKA,YAAYC,wBAlsBR,EAssBnCoB,0BAA4B,WAC1B/4B,YAAgC,EAAK5nD,MAAMg4C,WAAWj6C,SACpD,SAAAw6C,GACMA,EAAmBlV,aACrBkV,EAAmBh2B,YAAYuhE,aAC5BvrC,EAAmBh2B,YAAYwhE,iBAMxC,EAAK1E,uBAAsB,WACrB,EAAKC,aAAa,EAAKA,YAAYC,wBAltBR,EAstBnCF,sBAAwB,SAAC2E,GACvB,EAAK5jF,SACH,CACEw9E,QAASqG,YAAc,EAAKjkF,MAAM49E,QAAS,EAAKnmF,MAAMqmF,UAExD,WACE,EAAK2D,gBACDuC,GAAIA,OAGR,EAAKpF,cAAc,EAAKA,aAAasF,0BAhuBR,EAmuBnC5G,KAAO,WACL,GAAKmD,YAAQ,EAAKzgF,MAAM49E,SAAxB,CADW,MAGiB,EAAKnmF,MAAzBqmF,EAHG,EAGHA,OAAQ7gF,EAHL,EAGKA,QACVknF,EAAa7G,YAAK,EAAKt9E,MAAM49E,QAASE,EAAQ7gF,GAKhD,EAAKqiF,aAAa,EAAKA,YAAYC,oBAIvC,EAAKn/E,SAAS,CAAEw9E,QAASuG,EAAYnsC,UAAWoQ,gBAAoB,kBAClE,EAAKq5B,qBAjvB0B,EAqvBnCjE,KAAO,WACL,GAAKkD,YAAQ,EAAK1gF,MAAM49E,SAAxB,CADW,MAGiB,EAAKnmF,MAAzBqmF,EAHG,EAGHA,OAAQ7gF,EAHL,EAGKA,QACVknF,EAAa3G,YAAK,EAAKx9E,MAAM49E,QAASE,EAAQ7gF,GAKhD,EAAKqiF,aAAa,EAAKA,YAAYC,oBAIvC,EAAKn/E,SAAS,CAAEw9E,QAASuG,EAAYnsC,UAAWoQ,gBAAoB,kBAClE,EAAKq5B,qBAnwB0B,EAuwBnC/D,YAAc,SACZ0G,GAEA,IAAMC,EAAqB,OAAZD,EAAmB,GAAK,EACvC,OAAO,SAAC1rC,GACFA,IAEFA,EAAShpC,iBACTgpC,EAASqB,mBAEX,EAAKtiD,MAAM6+C,YAAYguC,wBACrBh2E,KAAKzT,IACHyT,KAAK1T,IACH,EAAKnD,MAAM6+C,YAAYz6B,OAAOwmE,qBAAgC,EAATgC,EACrDlI,GAEFA,MAvxB2B,EA6xBnCiG,2BAA6B,WAAO,IAAD,EACoB,EAAK3qF,MAAlDua,EADyB,EACzBA,uBAAwBC,EADC,EACDA,iBAC1BsyE,EAAwB,IAAIr6E,EAAGs6E,sBACnCt6E,EAAGsI,WAAWC,MACdT,EACAC,GAGIguE,EAAa,IAAI/1E,EAAGu6E,WAC1Bj9B,YAAkB,EAAKxnD,MAAMg4C,WAAWj6C,SAAQ,SAAApF,GAAK,OACnDsnF,EAAWyE,YAAY/rF,EAAOsnF,EAAWb,qBAG3CmF,EAAsBhB,OAAOtD,GAC7BA,EAAWn1E,SAEX,EAAK1K,SAAS,CACZu8E,4BAA6BgI,YAC3BJ,EAAsBK,sBAG1BL,EAAsBz5E,UAlzBW,EAqzBnC+5E,4BAA8B,WAC5B,EAAKzkF,SAAS,CACZu8E,4BAA6B,QAvzBE,EA2zBnCuF,wBAA0B,WACxB,IAAMjC,EAAa,IAAI/1E,EAAGu6E,WAE1Bj9B,YAAkB,EAAKxnD,MAAMg4C,WAAWj6C,SAAQ,SAAApF,GAAK,OACnDsnF,EAAWyE,YAAY/rF,EAAOsnF,EAAWb,qBAG3C,EAAK3nF,MAAMqtF,8BAEX,EAAK1kF,SAAS,CACZw8E,0BAA2BxyE,YAAoB61E,KAGjDA,EAAWn1E,UAx0BsB,EA20BnCq3E,uBAAyB,WACvB,IAAMlC,EAAa,IAAI/1E,EAAGu6E,WAE1Bj9B,YAAkB,EAAKxnD,MAAMg4C,WAAWj6C,SAAQ,SAAApF,GAAK,OACnDsnF,EAAWyE,YAAY/rF,EAAOsnF,EAAWb,qBAG3C,EAAK2F,iCAAiC9E,GACtCA,EAAWn1E,UAn1BsB,EAs1BnCk6E,kCAAoC,SAClCzhD,EACA+I,GAEA,IAAM24C,EAAWv9B,YAAyB,EAAK1nD,MAAMg4C,WACrD,GAAKitC,EAAS7jF,OAAd,CAEA,IAAM8+E,EAAY,EAAKxB,YAAY,sCAAuC,CACxEuB,WAAYgF,EAAS,GAAGhF,WACxBznC,YAAaysC,EAAS,GAAGzsC,cAE3B,GAAK0nC,EAAU9+E,OAAf,CAKA,IAAMq1C,EAASyuC,YACb3hD,EACA+I,GAEkBpiC,EAAGi7E,gBAAgBjF,EAAU,IACrCkF,aAAah7C,UAAUqM,GACnCA,EAAO3rC,SAEP,EAAKkmE,gBAAgB,CAAEkS,oBAAoB,SAZzChkF,QAAQrG,MAAM,0CAl2BiB,EAi3BnCksF,iCAAmC,SAAC9E,GAClC,IAAMgF,EAAWv9B,YAAyB,EAAK1nD,MAAMg4C,WACrD,GAAKitC,EAAS7jF,OAAd,CAEA,IAAM8+E,EAAY,EAAKxB,YAAY,mCAAoC,CACrEuB,WAAYgF,EAAS,GAAGhF,WACxBznC,YAAaysC,EAAS,GAAGzsC,cAE3B,GAAK0nC,EAAU9+E,OAAf,CAKA,IAAMikF,EAAan7E,EAAGo7E,aAAapF,EAAU,IAE7CmF,EAAW7yD,QAAQ,kBACnB6yD,EAAWE,WAAU,GACrBF,EACGnG,eACAsG,aAAavF,EAAY,EAAGA,EAAWb,iBAAkB,GAE5D,EAAKpO,gBAAgB,CAAEkS,oBAAoB,SAZzChkF,QAAQrG,MAAM,0CA13BiB,EAy4BnC4sF,qBAAuB,SAACzB,GACtB,IAAMrrF,EAAQqrF,IACVrrF,GAAS,EAAK2mF,aAChB,EAAKA,YAAYoG,eAAe/sF,IA54BD,EAg5BnCgtF,iBAAmB,SACjBC,EACAC,GAEAD,EAAkBC,GAClB,EAAKxG,uBAAsB,WACrB,EAAKC,aAAa,EAAKA,YAAYC,wBAt5BR,EA05BnCuG,gBAAkB,SAChBC,EACAF,GAEAE,EAAiBF,GAAQ,WACvB,EAAKtoD,aAAY,WACX,EAAK+hD,aAAa,EAAKA,YAAYC,2BAh6BV,EAq6BnCyG,cAAgB,WAId,EAAK3G,yBAz6B4B,EA46BnC4G,+BAAiC,SAACC,GAAyC,IAAD,EAMpE,EAAKzuF,MAJPwF,EAFsE,EAEtEA,QACAkV,EAHsE,EAGtEA,MACAH,EAJsE,EAItEA,uBACAC,EALsE,EAKtEA,iBAIIg6D,EAAS,EAAKjsE,MAAMk+E,gCACtBiI,IACAD,EACAE,IACAC,IAEJ,OAAO,EAAKrmF,MAAM08E,kBAAkBn6D,YAClC,gBAAC0pD,EAAD,CACEhvE,QAASA,EACTkV,MAAOA,EACPH,uBAAwBA,EACxBC,iBAAkBA,EAClBsQ,YAAa,EAAKviB,MAAM08E,kBAAkBn6D,YAC1C8gB,YAAa,EAAKrjC,MAAM08E,kBAAkBr5C,YAC1CijD,sBAC+ChwF,IAA7C,EAAK0J,MAAM08E,kBAAkBlkC,YAE/B5jC,SAAU,EAAK5U,MAAMk+E,gCACrBx6E,MAAM,EACNgvC,SAAU,kBAAM,EAAK6zC,0BACrBC,SAAU,WAAO,IAAD,EAKV,EAAKxmF,MAAM08E,kBAHbplC,EAFY,EAEZA,WACA/0B,EAHY,EAGZA,YACAi2B,EAJY,EAIZA,YAEGlB,GAAe/0B,SAEAjsB,IAAhBkiD,GAA6C,OAAhBA,EAE/BlB,EAAW9I,IAAIgK,EAAaj2B,GAG5B+0B,EAAWy5B,OAAOxuD,EAAa+0B,EAAWzhD,QAG5C,EAAK0wF,wBAAuB,GAC5BE,YAA6BnvC,GACzB,EAAKgoC,aAAa,EAAKA,YAAYC,sBAEzCpuD,gBAAiB,EAAK15B,MAAM05B,gBAC5BnC,iBAAkB,EAAKv3B,MAAMu3B,iBAC7B4C,wBAAyB,EAAKn6B,MAAMm6B,wBACpC80D,4BAA6B,SAACt+D,EAAW5vB,GACvC,EAAK+tF,yBACL,EAAK9uF,MAAMivF,4BAA4Bt+D,EAAW5vB,IAEpDmuF,qBACE,EAAK3mF,MAAM08E,kBAAkBr5C,YACzBuW,cACAC,cAENrC,oBAAqB,WAAO,IAAD,EACW,EAAKx3C,MAAM08E,kBAAvCplC,EADiB,EACjBA,WAAYjU,EADK,EACLA,YACfiU,GAEL,EAAKssC,oCAAoC,CACvCtsC,aACAjU,wBAKN/sC,GAp/B+B,EA6/BnCktF,eAAiB,WACf,GAAK,EAAKnH,eAAkBzjD,SAA5B,CAEA,IAAMguD,EAAsB,EAAKvK,cAAcrkF,QAC/C,GAAI4gC,SAASE,gBAAkB8tD,GAI3BA,EAAqB,CACvB,GACEhuD,SAASE,gBAAkBF,SAASD,MACpCiuD,EAAoB1tD,SAASN,SAASE,eAGtC,OAKF8tD,EAAoB3uF,WA9gCtB,EAAKymF,YAAc/oD,YACjB,EAAKl+B,MAAM89B,kBACXX,IACA,EAAK+qD,cAL0B,EA1ErC,gEAoFI5nF,KAAKqI,SAAS,CAAEm+E,kBAAmBsI,kBApFvC,yCAuFqB12B,EAA2B22B,GAC5C/uF,KAAK2mF,YAAc/oD,YACjB59B,KAAKN,MAAM89B,kBACXX,IACA78B,KAAK4nF,cAGH5nF,KAAKiI,MAAM49E,UAAYkJ,EAAUlJ,SAC/B7lF,KAAKN,MAAM6lC,gBACbvlC,KAAKN,MAAM6lC,eAAeI,0BAhGlC,sCAoGS3lC,KAAKN,MAAMsvF,YAEhBhvF,KAAKN,MAAMsvF,WACT,gBAAC,IAAD,CACExI,kBAAmBxmF,KAAKiI,MAAMu+E,kBAC9ByI,mBAAoBjvF,KAAK0mF,kBACzBwI,cAAelvF,KAAKinF,aACpBkI,eAAgBn/B,YAAiBhwD,KAAKiI,MAAMg4C,WAC5CmvC,uBAAwBp/B,YAAiBhwD,KAAKiI,MAAMg4C,WACpDovC,kBAAmBrvF,KAAK4mF,iBACxB0I,WAAYtvF,KAAK2mF,YACjB4I,sBAAuBvvF,KAAKkqF,eAC5BsF,UAAWp/B,YAAqBpwD,KAAKiI,MAAMg4C,WAC3CtzC,SAAU3M,KAAKi5E,gBACfyP,QAASA,YAAQ1oF,KAAKiI,MAAM49E,SAC5B8C,QAASA,YAAQ3oF,KAAKiI,MAAM49E,SAC5BN,KAAMvlF,KAAKulF,KACXE,KAAMzlF,KAAKylF,KACXgK,eAAgBzvF,KAAKN,MAAM+vF,eAC3BC,oBAAqB1vF,KAAKmlF,wBAvHlC,+CAgWwD,IAAD,OAA9BwK,EAA8B,wDAC3CnlE,EAAgBxqB,KAAKiI,MAAM08E,kBAA3Bn6D,YACRxqB,KAAKqI,SACH,CACEs8E,kBAAmB,CACjBr5C,aAAa,EACb9gB,YAAa,KACb+0B,WAAY,KACZkB,YAAa,KAGjB,WAIMj2B,GACFA,EAAYzX,SAEV48E,GACF,EAAKrI,6BAnXf,+BA8lCY,IAAD,SAcHtnF,KAAKN,MAZPwF,EAFK,EAELA,QACAkV,EAHK,EAGLA,MACA2rE,EAJK,EAILA,OACA6J,EALK,EAKLA,qBACAC,EANK,EAMLA,aACA51E,EAPK,EAOLA,uBACAC,EARK,EAQLA,iBACAqkC,EATK,EASLA,YACAnlB,EAVK,EAULA,gBACAnC,EAXK,EAWLA,iBACA4C,EAZK,EAYLA,wBACAi2D,EAbK,EAaLA,uBAEF,IAAK5qF,EAAS,OAAO,KAErB,IAAMs5C,EAAar8B,cAEnB,OACE,gBAAC,IAAD,MACG,SAAAg+B,GAAW,OACV,gBAAC,IAAD,CACE13B,IAAKs9D,EAAO3gF,IACZzH,IAAK,SAAAoyF,GAAa,OAAK,EAAKhJ,eAAiBgJ,GAC7ChK,OAAQA,EACR9rE,uBAAwBA,EACxBC,iBAAkBA,EAClB+lC,UAAW,EAAKh4C,MAAMg4C,UACtB/6C,QAASA,IAER,gBACC8qF,EADD,EACCA,yBACAzJ,EAFD,EAECA,kBACA0J,EAHD,EAGCA,eACAC,EAJD,EAICA,gBACAC,EALD,EAKCA,yBACAC,EAND,EAMCA,qBAND,OAQC,uBACE/iF,UAAU,kBACVxP,MAAO6F,EAAO4K,UACd5L,UAAW,EAAK6hF,mBAAmB7hF,UACnCD,QAAS,EAAK8hF,mBAAmB9hF,QACjC4tF,WAAY,EAAK9L,mBAAmB8L,WACpC1yF,IAAK,EAAK2mF,cACVlhC,SAAU,GAEV,gBAAC,IAAD,CACEzlD,IAAK,SAAAwW,GAAU,OAAK,EAAKozE,YAAcpzE,GACvCsU,IAAKs9D,EAAO3gF,IACZkrF,SAAU,EAAK7E,eACf1F,OAAQA,EACR7gF,QAASA,EACTkV,MAAOA,EACPH,uBAAwBA,EACxBC,iBAAkBA,EAClB+lC,UAAW,EAAKh4C,MAAMg4C,UACtBL,mBAAoB,EAAK4Q,kBACzB1Q,yBAA0B,EAAKgpC,sBAC/BjpC,yBAA0B,EAAK4qC,2BAC/B1qC,4BACE,EAAK8oC,8BAEPrpC,oBAAqB,EAAKspC,sBAC1BrpC,oBAAqB,EAAKosC,oCAC1BnsC,oBAAqB,EAAKspC,2BAC1BrpC,yBACE,EAAKupC,gCAEPlpC,iBAAkB,EAAK2qC,oBACvB4F,aAAc,EAAKjgC,YACnBkgC,mBAAoB,EAAKjG,qBACzBkG,cAAe,SACbC,EACAxI,GAEA,EAAKvB,YAAY+J,EAAW,CAC1BxI,aACAznC,YAAaynC,EAAWb,oBAG5BuI,qBAAsBA,EACtBC,aAAcA,EACdzsB,cAAe4sB,EACfzJ,kBAAmBA,EACnBoK,aAAc,EAAK1C,cACnB2C,qBACEryC,EAAYz6B,OAAO+sE,gCAErBryC,WAAYA,EACZ2B,YAAaA,EACb2wC,kBACE,EAAKxM,cAAcrkF,QACf,EAAKqkF,cAAcrkF,QAAQszD,aAC3B,EAENpxD,SAAUo8C,EAAYz6B,OAAOwmE,uBAE9B,EAAKriF,MAAMq+E,iBACV,gBAAC,IAAD,CACE3oF,IAAK,SAAAozF,GAAW,OAAK,EAAKlK,aAAekK,GACzCC,iBAAkB,SAAAlD,GAAM,OACtB,EAAKC,gBAAgBkC,EAAgBnC,IAEvCmD,kBAAmB,SAAAnD,GAAM,OACvB,EAAKF,iBAAiBsC,EAAiBpC,IAEzCoD,aACElB,EACIA,EAAyB3mF,OACzB,KAEN2mD,iBAAkBA,YAAiB,EAAK/nD,MAAMg4C,WAC9CkxC,2BAA4B,kBAC1B,EAAKzD,qBAAqByC,IAE5BiB,mBAAoB,WAClB,EAAK/L,qBAEPgM,uBAAwB,kBACtB,EAAK3D,qBAAqB0C,IAE5B7J,kBAAmBA,IAGvB,gBAAC,IAAD,CACE56E,KAAM,EAAK1D,MAAMy8E,cACjB7nE,SAAU,EAAK5U,MAAMi+E,sBACrBtoE,eAAgB,WACd,EAAKitE,qBAEqC,WADtBtsC,EAAYz6B,OAC3BwtE,mCAGPjrE,QAAS,WACP,EAAKwkE,sBAAuC,IAE9C3lF,QAASA,EACTkV,MAAOA,EACPH,uBAAwBA,EACxBC,iBAAkBA,EAClBoxB,YAAa,EAAKrjC,MAAMg+E,gBAAgB36C,YACxC9gB,YAAa,EAAKviB,MAAMg+E,gBAAgBz7D,YACxCC,eAAgB,EAAKxiB,MAAMg+E,gBAAgBx7D,eAC3CrqB,SAAU,SAAAM,GAAU,IAAD,EAIb,EAAKuH,MAAMg+E,gBAFbz7D,EAFe,EAEfA,YACAC,EAHe,EAGfA,eAEGD,GAAgB,EAAKviB,MAAMy8E,gBAMhCl6D,EAAYugE,aAAatgE,EAAgB/pB,GACzC,EAAK2H,SAAS,CACZ+9E,0BAA0B,IAExB,EAAKS,cACP,EAAKA,aAAasF,2BAEtB/yD,gBAAiBA,EACjBnC,iBAAkBA,EAClB4C,wBAAyBA,IAE3B,gBAAC,IAAD,CACEl8B,IAAK,SAAA6sF,GAAgB,OAClB,EAAKA,iBAAmBA,GAE3Bp+E,kBAAmB,EAAK29E,yBAE1B,gBAAC,IAAD,CACEpsF,IAAK,SAAA+sF,GAAsB,OACxB,EAAKA,uBAAyBA,GAEjCt+E,kBAAmB,EAAKq8E,+BAEzB,EAAKyF,+BAEJ3vC,EAAYz6B,OAAOytE,+BACF,UAAf/yC,GAEH,EAAKv2C,MAAM28E,6BACV,gBAAC,IAAD,CACEn3B,QAAS,EAAKq/B,4BACd0E,oBAAqB,EAAKvpF,MAAM28E,8BAGnC,EAAK38E,MAAM48E,2BACV,gBAAC,IAAD,CACE3/E,QAASA,EACT+U,uBAAwBA,EACxBC,iBAAkBA,EAClBuzC,QAAS,kBACP,EAAKplD,SAAS,CACZw8E,0BAA2B,QAG/B4M,iBAAkB,EAAKxpF,MAAM48E,0BAC7B6M,SAAU,SAAClmD,EAAe+I,GACxBu7C,EAAuBtkD,EAAe+I,GACtC,EAAK04C,kCACHzhD,EACA+I,GAEF,EAAKlsC,SAAS,CACZw8E,0BAA2B,UAKlC,EAAK58E,MAAMw+E,iBACV,gBAAC,IAAD,CACE7lF,MAAO,EAAKqH,MAAMw+E,gBAClBpgE,QAAS,WACP,EAAKmiE,uBACL,EAAKlB,yBAEP75B,QAAS,EAAK+6B,uBAGlB,gBAAC,IAAD,CACE3kE,WAAW,+BACXpZ,QACE,gBAAC,QAAD,0DAIF6zC,mBACE,gBAAC,QAAD,sFAKFD,KAAM4R,YAAuB,EAAKhoD,MAAMg4C,wBA10C1D,GAAuDviD,aAm3CxCA,kBAxBK,SAACgC,EAAO/B,GAC1BD,sBAA0BC,GAAK,iBAAO,CACpC+rF,oBAGF,IAAMprF,EAAYZ,SAAiD,MAC7DgsF,EAAgB,WAChBprF,EAAU2B,SAAS3B,EAAU2B,QAAQypF,iBAGrClsD,EAAoB9/B,aAAiB2T,KACrCktC,EAAc7gD,aAAiB+kC,KAC/BkvD,EAAsBj0F,aAAiB2kE,KAC7C,OACE,gBAACgiB,EAAD,eACE1mF,IAAKW,EACLk/B,kBAAmBA,EACnB+gB,YAAaA,EACbozC,oBAAqBA,GACjBjyF,S,iDCziDV,uWA4DMyS,EAAkBC,EAAOD,GAEzBy/E,EAAa,CACjBC,QAASC,IACTC,MAAOC,IACPt/E,OAAQu/E,IACRC,mBAAoBC,IACpBC,SAAUC,IACVC,QAASC,IACTC,YAAaC,IACbv5E,WAAYtC,IACZ87E,OAAQC,IACRC,mBAAoBC,IACpBC,SAAUC,IACVC,SAAUC,IACVC,UAAWC,IACXC,UAAWC,IACXC,MAAOC,IACP9qE,IAAK+qE,IACL3sF,KAAMirF,IACN2B,UAAWC,IACXC,UAAWD,IACXE,cAAeC,IACfC,cAAeC,IACfC,aAAcC,IACdC,mBAAoBC,IACpBC,aAAcC,IACdt2F,MAAOu2F,IACPC,OAAQzC,IACR0C,QAAS1C,IACT2C,gBAAiBC,IACjBC,UAAWC,IACXC,gBAAiBC,IACjBC,yBAA0BC,IAC1BC,iBAAkBC,IAClBC,0BAA2BC,IAC3BC,gBAAiBC,IACjBC,oBAAqBC,IACrBC,sBAAuBC,IACvBC,mBAAoBC,IACpBlW,cAAemW,KAEXC,EAAyD,CAC7DjE,QAASkE,IACTtB,gBAAiBuB,IACjB9C,UAAW+C,IACXjD,SAAUkD,IACV9C,UAAW+C,IACX1tE,IAAK2tE,IACLrE,MAAOsE,IACP3jF,OAAQ4jF,IACRhE,QAASiE,IACT/D,YAAagE,IACbpE,SAAUqE,IACVvE,mBAAoBwE,IACpBhX,cAAeiX,KAEXC,EAAwD,CAC5D7E,MAAO,oBACPr/E,OAAQ,cACRw/E,mBAAoB,2BACpBE,SAAU,gBACVE,QAAS,iBACTE,YAAa,qBACbt5E,WAAY,cACZw5E,OAAQ,cACRE,mBAAoB,cACpBE,SAAU,gBACVE,SAAU,sBACVE,UAAW,uBACXE,UAAW,uBACXE,MAAO,aACP7qE,IAAK,oBACLgrE,UAAW,sBACXE,UAAW,sBACXC,cAAe,sBACfE,cAAe,sBACfI,mBAAoB,4BACpBE,aAAc,qBACdJ,aAAc,qBACdj2F,MAAO,aACP02F,gBAAiB,kCACjBE,UAAW,kBACXE,gBAAiB,yBACjBE,yBAA0B,mCAC1BE,iBAAkB,0BAClBE,0BAA2B,oCAC3BE,gBAAiB,yBACjBE,oBAAqB,6BACrBE,sBAAuB,sBACvBE,mBAAoB,oCAGP,KACb/D,aACAiF,sBAAuB,SAACC,GACtB,IAAMC,EAAY5kF,EAAGy8B,kBAAkBC,SAASioD,GAC5C,SACAA,EAEJ,OAAIlF,EAAWp+D,eAAeujE,GAAmBnF,EAAWmF,GAChDnF,EAAWC,SAEzBmF,sBAAuB,SAACt3F,GACtB,IAAMo3F,EAAUp3F,EAAM+b,kBAAkB8X,UAClCwjE,EAAY5kF,EAAGy8B,kBAAkBC,SAASioD,GAC5C,SACAA,EAIJ,OADEhB,EAAgBiB,IAAcjB,EAAgBjE,SAC1BnyF,IAExBu3F,wBAAyB,SAACH,GACxB,IAAMC,EAAY5kF,EAAGy8B,kBAAkBC,SAASioD,GAC5C,SACAA,EAEJ,OAAOF,EAAqBG,IAAc,S,uMC3KzB9E,E,kDASnB,WAAYvyF,GAA6B,IAAD,0BAG9B+b,GAFR,cAAM/b,IAE6BA,MAA3B+b,kBAH8B,OAKtC,EAAKy7E,aAAez7E,EAChBA,EAAkBG,sBAClBrd,EAEJ,EAAK44F,iBAAmB17E,EACpBA,EAAkBM,0BAClBxd,EAEJ,EAAK64F,mBAAqB37E,EACtBA,EAAkByP,oBAClB3sB,EAfkC,E,oDAkBL,IAA7B8Y,EAA4B,wDAC5BrX,KAAKoI,QAAQpI,KAAKoI,OAAOlI,MAAMmX,K,+BAG3B,IAAD,OACP,OACE,gBAAC,IAAD,CACE1X,OAAQK,KAAKN,MAAMmc,SAAW,OAAS,QACvC3W,QAASlF,KAAKN,MAAMwF,QACpBxE,MAAOV,KAAKN,MAAMgB,MAClBN,SAAUJ,KAAKN,MAAMU,SACrBwd,eAAgB5d,KAAKN,MAAMke,eAC3ByI,QAASrmB,KAAKN,MAAM2mB,QACpBgxE,kBAAmBr3F,KAAKo3F,mBACxBE,yBAGEt3F,KAAKN,MAAM6qB,oBACPvqB,KAAKN,MAAM6qB,oBAAoBoiB,kCAC/B3sC,KAAKN,MAAMge,mBACX1d,KAAKN,MAAMge,mBAAmBivB,uCAC9BpuC,EAEN0b,uBAAwBja,KAAKN,MAAMua,uBACnCC,iBAAkBla,KAAKN,MAAMwa,iBAC7Bra,kBAAmBG,KAAKk3F,aACxB52F,mBAAoBN,KAAKm3F,iBACzBz1F,QACgCnD,IAA9ByB,KAAKN,MAAM+qB,eAAX,oBACiBzqB,KAAKN,MAAM+qB,eAD5B,yBAEIlsB,EAENwD,WAAS,EACTw1F,mBACEv3F,KAAKo3F,mBACH,gBAAC,QAAD,yDAEA,gBAAC,QAAD,qCAGJn9D,aACGj6B,KAAKN,MACHgB,MAEL/C,IAAK,SAAAgL,GAAK,OAAK,EAAKP,OAASO,S,GAvEIjL,aA6E5B44F,EAAkC,SAAC,GAKX,IAJnC51F,EAIkC,EAJlCA,MACA+a,EAGkC,EAHlCA,kBACAykC,EAEkC,EAFlCA,sBACAs3C,EACkC,EADlCA,sBAEA,OAAK92F,GAAU+a,EAAkByxD,aAK/B,wBACE5oE,MAAO5D,EACP2M,UAAWoqF,IAAW,CACpB,CAACjjF,MAAuB,KAGzB0rC,EAAsBx/C,GACtBA,GAXI,gBAAC82F,EAAD,Q,gKCvFLrlF,EAAkBC,EAAOD,GAEzBulF,EAAoB,GACpBC,EAAqB,GACrBC,EAAiB,GACjBC,EAAiBrlE,UAAaxQ,KAAK,mBAQpB8R,E,gHACOwD,EAAsBwgE,GACnB,UAAvBxgE,EAASiC,YAESpnB,EAAGuiD,gBAAgBp9B,GACtBq9B,aACjBmjC,EAAQC,YAAYC,UAAYxlE,cAAiBylE,Y,mCAQnD/yF,EACAozB,EACA4/D,EACAC,GAEA,IAAMryF,EAAmBZ,EAAQa,sBAC3BqyF,EAAS5lE,SAAY6lE,OAC3BD,EAAOpR,QAEP,IAAMsR,EAAe,GACrBhgE,EAActyB,SAAQ,SAAAC,GACpB,GAAKH,EAAiBI,YAAYD,GAAlC,CAEA,IAAMqxB,EAAWxxB,EAAiBO,YAAYJ,GACxCV,EAAWK,IAAgBg1B,mBAC/B11B,EACAe,EACA,CACEO,mBAAmB,IAGvB4xF,EAAOl3E,IAAIjb,EAAcV,GACzB+yF,EAAaryF,GAAgBqxB,MAG/B,IAAMihE,EAAazjE,OAAOC,KAAKujE,GAAcjvF,OAC7C,GAAKkvF,EAAL,CAKA,IAAIC,EAAe,EACbC,EAAqBL,EAAOF,WAAWh3E,KAAI,WAC/Cs3E,IACAN,EAAWM,EAAcD,MAG3BH,EAAOM,MAAK,SAACN,EAAQO,GAInB,IAAK,IAAM1yF,KAHXmyF,EAAOF,WAAWU,OAAOH,GAGEE,EACzB,GAAIA,EAAgBnlE,eAAevtB,GAAe,CAChD,IAAMqxB,EAAWxxB,EAAiBO,YAAYJ,GAC9C,GAA2B,UAAvBqxB,EAASiC,UAAuB,SAEpCq+D,EAAe3xF,GAAgB0yF,EAAgB1yF,GAAc6xF,QAC7DhkE,EAAoB+kE,mBAClBvhE,EACAsgE,EAAe3xF,IAKrBkyF,YA3BAA,M,qCAsCkBjzF,EAAoBe,GACxC,GAAI2xF,EAAe3xF,GAKjB,OAAO2xF,EAAe3xF,GAGxB,IAAKf,EAAQa,sBAAsBG,YAAYD,GAC7C,OAAO4xF,EAET,IAAMvgE,EAAWpyB,EAAQa,sBAAsBM,YAAYJ,GAC3D,MAA2B,UAAvBqxB,EAASiC,UAA8Bs+D,GAE3CD,EAAe3xF,GAAgBusB,UAAaxQ,KAC1Cpc,IAAgBg1B,mBAAmB11B,EAASe,EAAc,CACxDO,mBAAmB,KAIvBstB,EAAoB+kE,mBAClBvhE,EACAsgE,EAAe3xF,IAEV2xF,EAAe3xF,M,0CAUGf,EAAoBe,GAC7C,OAAI2xF,EAAe3xF,GAKV2xF,EAAe3xF,GAGnBf,EAAQa,sBAAsBG,YAAYD,GAIpB,UADVf,EAAQa,sBAAsBM,YAAYJ,GAC9CszB,UAA8Bs+D,GAE3CD,EAAe3xF,GAAgBusB,UAAaxQ,KAC1Cpc,IAAgBg1B,mBAAmB11B,EAASe,EAAc,CACxDR,mBAAmB,EACnBe,mBAAmB,IAErB,CACEwxF,UAAWxlE,cAAiBsmE,OAC5BC,gBAAiB,CACfC,UAAU,KAKTpB,EAAe3xF,IAlBb4xF,I,qCA2BT3yF,EACAe,GAGA,GAAI0xF,EAAmB1xF,GACrB,OAAOiL,QAAQhK,QAAQywF,EAAmB1xF,IAG5C,IAAMkP,EAAakgE,IAAMpvE,GACrBgzF,EAAe,KACf/zF,EAAQa,sBAAsBG,YAAYD,GAEjB,SADVf,EAAQa,sBAAsBM,YAAYJ,GAC9CszB,YACX0/D,EAAerzF,IAAgBg1B,mBAC7B11B,EACAe,EACA,CACEO,mBAAmB,KAOzByyF,EAAerzF,IAAgBmC,WAAW7C,EAASe,EAAc,CAC/DO,mBAAmB,IAKvB,OAAKyyF,EAMEC,YAAa/jF,EAAD,eAAqB8jF,EAArB,MAAuC,IAAIpwE,MAC5D,SAAAswE,GAGE,OAFAxB,EAAmB1xF,GAAgBkP,EAE5BA,KAPFjE,QAAQhK,QAAQ,W,oCAiBNhC,EAAoBe,GACvC,OAAI0xF,EAAmB1xF,GACd0xF,EAAmB1xF,GAGTovE,IAAMpvE,K,wCAQzBf,EACAe,GAEA,GAAIyxF,EAAkBzxF,GACpB,OAAOiL,QAAQhK,QAAQwwF,EAAkBzxF,GAAcyjB,MAGzD,IAAKxkB,EAAQa,sBAAsBG,YAAYD,GAC7C,OAAOiL,QAAQC,OACb,IAAIC,MAAJ,qCAAwCnL,EAAxC,OAIJ,GAA2B,eADVf,EAAQa,sBAAsBM,YAAYJ,GAC9CszB,UACX,OAAOroB,QAAQC,OACb,IAAIC,MAAJ,8BACyBnL,EADzB,8DAKJ,IAAMmzF,EAAUxzF,IAAgBg1B,mBAAmB11B,EAASe,EAAc,CACxEO,mBAAmB,IAErB,OAAK4yF,EAQEjwE,IAAMzO,IAAI0+E,GAASvwE,MAAK,SAAAY,GAE7B,OADAiuE,EAAkBzxF,GAAgBwjB,EAC3BA,EAASC,QATTxY,QAAQC,OACb,IAAIC,MAAJ,8BACyBnL,EADzB,6D,8CAaJ,OAAO4xF,I,0CAOP3yF,EACAe,GAEA,IAAKf,EAAQa,sBAAsBG,YAAYD,GAC7C,OAAOiL,QAAQC,OACb,IAAIC,MAAJ,qCAAwCnL,EAAxC,OAIJ,GAA2B,SADVf,EAAQa,sBAAsBM,YAAYJ,GAC9CszB,UACX,OAAOroB,QAAQC,OACb,IAAIC,MAAJ,8BAAiCnL,EAAjC,0BAGJ,IAAMmzF,EAAUxzF,IAAgBg1B,mBAAmB11B,EAASe,EAAc,CACxEO,mBAAmB,IAErB,OAAO2iB,IAAMzO,IAAI0+E,GAASvwE,MAAK,SAAAY,GAAQ,OAAIA,EAASC,Y,sDCtSxD,uDAUa2vE,GAVb,OAU2B,SAACC,GAC1B,GAAIA,GAAaA,EAAUr5F,QAAS,CAClC,IAAMqM,EAAU8C,IAASC,YAAYiqF,EAAUr5F,SAC/C,GAAIqM,aAAmBitF,kBACrBjtF,EAAQpM,aACH,GAAIoM,aAAmBgD,YAAa,CACzC,IAAM1R,EAAW0O,EAAQktF,qBAAqB,UAE5C57F,GACAA,EAASyL,QACTzL,EAAS,aAAc27F,mBAEvB37F,EAAS,GAAGsC,a,6BCpBpB,iFAEMu5F,EAA8B,SAClCC,EACAh8E,EACAi8E,GAEA,IAAMjrD,EAAkBhxB,EAAmBoN,qBAE3C,OAAO4uE,EAAMvwF,QAAO,SAAC6jE,EAAW5mC,GAC9B,QAAIA,EAAQuzD,KAGVvzD,EAAQsI,IACPhxB,EAAmBqN,aAAaqb,GAAO6mC,kBAKxC2sB,EAA0B,SAC9BF,EACAh8E,EACAi8E,GAEA,IAAIE,GAAqB,EACrBC,GAAqB,EAEnBC,EAAoBL,EAAMzwF,KAAI,SAAC+jE,EAAW5mC,GAC9C,IAAMhuB,EAAWsF,EAAmBqN,aAAaqb,GAMjD,OAJKhuB,EAAS80D,eACZ2sB,EAAoBzzD,GAGlB4mC,EAAU3jE,OAAS,GACrBywF,EAAoB1zD,EACb4mC,GAGA50D,EAASi1D,qBAId2sB,EAAqBzjF,KAAK1T,IAAIg3F,EAAmBC,EAAmB,GAE1E,OAAOC,EAAkB5wF,QACvB,SAAC6jE,EAAW5mC,GAAZ,OACEuzD,GAAuBvzD,GACvBA,GAAS4zD,IACRt8E,EAAmBqN,aAAaqb,GAAO6mC,iBAIjCgtB,EAA2B,SACtCv8E,GAEA,IAAMw8E,EAAgC56F,oBACpCoe,EAAmBtF,SAASyS,iBAC5B,SAAApP,GAAiB,OAAIA,EAAkB8X,aAGzC,OAAI7V,EAAmBtD,MAAMsW,eACpB+oE,EACLS,EACAx8E,EAAmBtF,SACnB,GAEOsF,EAAmBtD,MAAM+yB,iBAC3BssD,EACLS,EACAx8E,EAAmBtF,SACnB,GAGKqhF,EACLS,EACAx8E,EAAmBtF,SACnB,IAKOO,EAAuB,SAClCT,EACAM,GAEA,IAAMg9B,EAAet9B,EAAe5W,MAAQ,GAE5C,GAAI4W,EAAekC,MAAMsW,eAAgB,CACvC,IAAMvG,EAAa3R,EAAgB,GAE7B2hF,EAAeP,EACnBphF,EACAN,EAAeE,SACf,GACAzB,KAAK,MACP,MAAM,GAAN,OAAUwT,EAAV,YAAwBqrB,EAAxB,YAAwC2kD,EAAxC,KACK,GAAIjiF,EAAekC,MAAM+yB,iBAAkB,CAChD,IAAMhjB,EAAa3R,EAAgB,GAC7Bq1B,EAAer1B,EAAgB,GAE/B2hF,EAAeP,EACnBphF,EACAN,EAAeE,SACf,GACAzB,KAAK,MACP,MAAM,GAAN,OAAUwT,EAAV,YAAwB0jB,EAAxB,aAAyC2H,EAAzC,YAAyD2kD,EAAzD,KAEA,IAAMA,EAAeP,EACnBphF,EACAN,EAAeE,SACf,GACAzB,KAAK,MACP,MAAM,GAAN,OAAU6+B,EAAV,YAA0B2kD,EAA1B,O,+QCjFSC,EACP,EADOA,EAEE,EAFFA,EAGE,EAHFA,EAIO,EAGPC,EAA6B,SACxC/4F,GAEA,IAAK,IAAIrC,EAAI,EAAGA,EAAIqC,EAAK+H,SAAUpK,EAAG,CACpC,IAAMq7F,EAAYh5F,EAAKrC,GACvB,GAAkB,MAAdq7F,EAEF,OAAOF,EACF,GAAkB,MAAdE,EACT,OAAOF,EACF,GAAkB,MAAdE,EACT,OAAOF,EACF,GACS,MAAdE,GACc,MAAdA,GACc,MAAdA,GACc,MAAdA,GACc,MAAdA,EAEA,OAAOF,EAIX,OAAOA,GAGYG,E,kDAKnB,WAAY76F,GAAe,IAAD,8BACxB,cAAMA,IACDuI,MAAQ,CACXuyF,4BAA6B,IAHP,E,gEAQxBx6F,KAAKy6F,0B,8CAOL,IAAMC,EAAuBC,YAC3B36F,KAAKN,MAAMq7C,oBAEV9xC,KAAI,gBAAG3H,EAAH,EAAGA,KAAH,SAASs5F,YAERt5F,EAGA,QAEL6H,OAAO0R,SAEJ2/E,EADcx6F,KAAK6nF,QACuB/jE,OAC7C+2E,sCACCC,IAAK,GAAD,mBACCJ,GADD,YAEC16F,KAAKN,MAAMu7C,+BAEhBy/C,EACJ16F,KAAKqI,SAAS,CACZmyF,4BAA6BA,EAA4BvxF,KAAI,SAAA3H,GAAI,MAAK,CACpE6G,KAAM7G,EACNZ,MAAOY,U,8BAKsB,IAA7B+V,EAA4B,wDAC5BrX,KAAKoI,QAAQpI,KAAKoI,OAAOlI,MAAMmX,K,+BAG3B,IAAD,SASHrX,KAAKN,MAPPgB,EAFK,EAELA,MACAN,EAHK,EAGLA,SACAyb,EAJK,EAILA,SACAk/E,EALK,EAKLA,aACAt/E,EANK,EAMLA,kBACAmC,EAPK,EAOLA,eACAyI,EARK,EAQLA,QAGI1K,EAAcF,EAChBA,EAAkBG,sBAClBrd,EAEEy8F,EAAwBX,EAA2B35F,GAEnDK,EACJi6F,IAA0BZ,EACxB,kBAAC,QAAD,uFAIEY,IACFZ,EACA,kBAAC,QAAD,wIAIEY,IACFZ,EACA,kBAAC,QAAD,uJAKE,KAEN,OACE,kBAAC,IAAD,CACE/9E,gBAAiB,kBACf,kBAAC,IAAD,CACE1c,OAAQ,EAAKD,MAAMmc,SAAW,OAAS,QACvChc,kBAAmB8b,EACnBrb,mBACEmb,EACIA,EAAkBM,0BAClBxd,EAENwC,UAAWA,EACXgB,WAAS,EACTrB,MAAOA,EACPN,SAAUA,EACVwd,eAAgBA,EAChByI,QAASA,EACTE,WAAY,EAAKte,MAAMuyF,4BACvBvgE,aAAcpe,EACdle,IAAK,SAAAgL,GAAK,OAAK,EAAKP,OAASO,MAGjC6U,aAAc,SAAA3f,GAAK,OACjBk9F,IAAiBl/E,EACf,kBAAC,IAAD,CACEjS,KAAM,kBAAC,IAAD,MACN5I,UAAW,EAAKtB,MAAMq7C,mBACtB7tC,SAAO,EACPrP,MAAOA,EACP8E,QAASo4F,IAET,Y,GAxH6BnvE,aAAtB2uE,EAGZU,YAAcx4D,IA4HhB,IAAMy4D,EAAyB,SAAC,EAMrCC,EACAl3F,GACI,IANFvD,EAMC,EANDA,MACA+a,EAKC,EALDA,kBACA+7E,EAIC,EAJDA,sBAKF,OAAK92F,GAAU+a,EAAkByxD,aAK/B,0BACE5oE,MAAOL,EACPoJ,UAAWoqF,IAAW,CACpB,CAACjjF,MAAuB,EACxB,CAACP,KACComF,EAA2B35F,KAC3B05F,KAGJ,yBACE/sF,UAAWoqF,IAAW,CACpB,CAAC7tF,MAAO,IAEV+Z,IAAKw3E,EACLp2E,IAAI,KAELrkB,GApBI,kBAAC82F,EAAD,Q,6BC5MX,qIAmBa4D,EAA2B,SACtCl2F,GAEA,IACM+qB,EADW/qB,EAAQgrB,qBACOC,2BAEhC,OAAOC,IACLxxB,iBAAO,EAAGqxB,EAAenyB,QAAQ,SAAAmB,GAC/B,IAAMoxB,EAAYJ,EAAezwB,GAAGP,GAEpC,OAAOoxB,EACJgrE,0BACA9qE,YACAtnB,KAAI,SAAAxI,GAAI,OAAI4vB,EAAUirE,kBAAkB76F,MACxCwI,KAAI,SAACsyF,GACJ,IAAMC,EAAaD,EAAehoE,UAG5B4oB,EAAao/C,EAAen/C,gBAE5Bq/C,EADiBt/C,EAAWpnB,OAAOxE,YAEtCtnB,KAAI,SAACyyF,GACJ,IAAMz3D,EAAWkY,EAAWzhC,IAAIghF,GAC1B11D,EAAY/B,EAAS1Q,UAAU3M,cAC/B2lD,EAAgBtoC,EAASgB,WACzBwX,EAAsBxY,EAASroB,iBAC/BqpB,EAAW,kBAAMsnC,GACjB3wD,EAAiB,kBAAM6gC,GACvB3W,EAAsB,kBAAM41D,GAElC,GAAkB,WAAd11D,EACF,MAAO,CACL1kC,KAAMo6F,EACN11D,UAAW,SACXjB,SAAU,SAAC42D,GAAD,OACRA,EAAOC,mBAAmBF,IAC5Bn8E,SAAU,SAACo8E,EAAkB/yF,GAAnB,OACR+yF,EAAOE,mBAAmBH,EAAe9yF,IAC3Cq8B,WACArpB,iBACAkqB,uBAEG,GAAkB,YAAdE,EACT,MAAO,CACL1kC,KAAMo6F,EACN11D,UAAW,UACXjB,SAAU,SAAC42D,GAAD,OACRA,EAAOG,oBAAoBJ,IAC7Bn8E,SAAU,SAACo8E,EAAkB/yF,GAAnB,OACR+yF,EAAOI,oBAAoBL,EAAe9yF,IAC5Cq8B,WACArpB,iBACAkqB,uBAEG,GAAkB,aAAdE,EAA0B,CAEnC,IAAM97B,EAEJ+5B,EAAS/Y,eAAeqF,YAAY,IAAM,GAC5C,MAAO,CACLjvB,KAAMo6F,EACN11D,UAAW,WACX5O,aAAcltB,EACd66B,SAAU,SAAC42D,GAAD,OACRA,EAAOK,mBAAmBN,IAC5Bn8E,SAAU,SAACo8E,EAAkB/yF,GAAnB,OACR+yF,EAAOM,mBAAmBP,EAAe9yF,IAC3Cq8B,WACArpB,iBACAkqB,uBAEG,MAAkB,UAAdE,EACF,CACL1kC,KAAMo6F,EACN11D,UAAW,QACXjB,SAAU,SAAC42D,GAAD,OACRA,EAAOK,mBAAmBN,IAC5Bn8E,SAAU,SAACo8E,EAAkB/yF,GAAnB,OACR+yF,EAAOM,mBAAmBP,EAAe9yF,IAC3Cq8B,WACArpB,iBACAkqB,wBAGF3+B,QAAQrG,MAAR,+BAC0BklC,EAD1B,sDACiFw1D,EADjF,wCAGO,SAGVryF,OAAO0R,SAEV,MAAO,CACLwV,YACA5vB,KAAM+6F,EACND,iBACA5qE,SAAU4qE,EAAe3qE,cACzBjV,YAAa4/E,EAAe3/E,iBAC5BsgF,+BAAgCX,EAAeW,iCAC/CT,2BAIR1+C,MACA,SACEo/C,EACAC,GAEA,OAAOD,EAA0BxrE,SAASqsB,cACxCo/C,EAA0BzrE,cAMrB0rE,EAAuB,SAClCC,GAEA,OAAO19F,iBAAO,EAAG09F,EAAiBC,mBAAmB,SAACt9F,GAEpD,OADyBq9F,EAAiBE,YAAYv9F,GACxCywB,cAIL+sE,EAA6B,SACxCd,EACAJ,GAEAI,EAAOe,kBAEP,IAAMvgD,EAAao/C,EAAen/C,gBACXD,EAAWpnB,OAAOxE,YAC1BvqB,SAAQ,SAAC01F,GACtB,IAAMz3D,EAAWkY,EAAWzhC,IAAIghF,GAC1B11D,EAAY/B,EAAS1Q,UAAU3M,cAEnB,WAAdof,EACF21D,EAAOE,mBACLH,EACAz7D,WAAWgE,EAASc,aAAe,GAEd,YAAdiB,EACT21D,EAAOI,oBAAoBL,EAAuC,SAAxBz3D,EAASc,YAEnD42D,EAAOM,mBAAmBP,EAAez3D,EAASc,iB,8BCzJxD,sGAAO,IAAM43D,EAAoC,iBAE3C,CACJ,mCAAoC,CAClCjyF,QAAS,yOAIAkyF,EAA6B,iBAEpC,CACJ,qBAAsB,CACpB,CACE1yF,KAAM,UACNO,QAAS,0NAEX,CACEP,KAAM,UACNO,QAAS,iQAEX,CACEP,KAAM,OACNO,QAAS,sJAGb,+BAAgC,CAC9B,CACEP,KAAM,UACNO,QAAS,2KAEX,CACEP,KAAM,OACNO,QAAS,4IAEX,CACEP,KAAM,OACNO,QAAS,0LAGb,mBAAoB,CAClB,CACEP,KAAM,OACNO,QAAS,uNAGb,6BAA8B,CAC5B,CACEP,KAAM,UACNO,QAAS,4OAKFoyF,EAAiC,SAACp8F,GAC7C,OAA0C,IAAtCA,EAAKiH,QAAQ,qBACR,CACLwC,KAAM,UACNO,QAAS,wPAMThK,EAAKgG,WAAW,eACX,CACLyD,KAAM,OACNO,QAAS,uYAGA,yBAAThK,EACK,CACLyJ,KAAM,OACNO,QAAS,+GAGA,iBAAThK,EACK,CACLyJ,KAAM,OACNO,QAAS,6GAGA,uBAAThK,EACK,CACLyJ,KAAM,OACNO,QAAS,+GAGA,cAAThK,EACK,CACLyJ,KAAM,OACNO,QAAS,+FAGA,sBAAThK,EACK,CACLyJ,KAAM,OACNO,QAAS,sJAGA,kCAAThK,EACK,CACLyJ,KAAM,UACNO,QAAS,0MAGA,mBAAThK,GAAsC,cAATA,EACxB,CACLyJ,KAAM,UACNO,QAAS,gQAGA,iBAAThK,EACK,CACLyJ,KAAM,OACNO,QAAS,kEAGA,2CAAThK,EACK,CACLyJ,KAAM,OACNO,QAAS,+MAGA,oBAAThK,EACK,CACLyJ,KAAM,UACNO,QAAS,6HAGiB,IAA1BhK,EAAKiH,QAAQ,SACR,CACLwC,KAAM,UACNO,QAAS,iGACToZ,WAAY,6BAGH,yBAATpjB,EACK,CACLyJ,KAAM,UACNO,QAAS,iQAIF,gCAAThK,GACS,iCAATA,GACS,yBAATA,GACS,iCAATA,GACS,0BAATA,EAEO,CACLyJ,KAAM,UACNO,QAAS,yHAGA,yBAAThK,EACK,CACLyJ,KAAM,OACNO,QAAS,qNAIN,O,mKC5JH0H,EAAkBC,EAAOD,GAGlB2qF,EAAyB,SAAC,GAQP,IAP9Bv6C,EAO6B,EAP7BA,gBACAjX,EAM6B,EAN7BA,YACApmC,EAK6B,EAL7BA,QAMA,OAAKq9C,EAEEjX,EACHn5B,EAAG67B,iBAAiB+uD,qBAClB73F,EAAQgrB,qBACRqyB,GAEFpwC,EAAG67B,iBAAiBgvD,kBAClB93F,EAAQgrB,qBACRqyB,GATuB,MA4CzB06C,EAAkB,SACtB1rE,EACAgxB,GAEA,OAAOhxB,EAAKwR,MAAK,qBAAGtiC,OAAoB8hD,MAI7B26C,EAA0B,SAAC,GAQqC,IAP3E1yE,EAO0E,EAP1EA,YACA8gB,EAM0E,EAN1EA,YAEAijD,GAI0E,EAL1ErpF,QAK0E,EAJ1EqpF,kBACAn0E,EAG0E,EAH1EA,MACAH,EAE0E,EAF1EA,uBACAC,EAC0E,EAD1EA,iBAEMijF,EAAuB,SAC3BhzE,EACAizE,GAEA,IAAMC,EAA+BhsC,YACnC5jB,YACEnC,EACArxB,EACAC,EACAiQ,GAEF/P,GAMAoQ,EAAY+I,WACZ6pE,IAE4BH,EAC1BI,EACA7yE,EAAY+I,YAGZ/I,EAAY8yE,QAAQ,KAIxB,MAAO,CACLC,iBAAkBpzE,EAClBkzE,+BACAG,iCAAkC/sC,YAChC4sC,KAlCoE,EA0EhD3/F,YAnCF,WACtB,IAAK6wF,EAAkB,CAGrB,IAAMhiD,EAAkBK,YAAyBtB,GAC3CiX,EAA0B/3B,EAAY+I,UACtCkqE,EAAgCR,EACpC1wD,EACAgW,GAEF,GACEk7C,IACCA,EAA8BrjF,MAAMsW,gBACnC+sE,EAA8BrjF,MAAM+yB,kBACtC,CACA,IAAMziB,EAAuB+jB,YAC3BgvD,EAA8BrlF,UAEhC,IAA8B,IAA1BsS,EACF,OAAOyyE,EACL3yE,EAAYO,aAAaL,IACzB,IAOR,MAAO,CACL6yE,iBAAkB,KAClBF,6BAA8B,KAC9BG,iCAAkC,SAtEoC,mBA0EnEv1F,EA1EmE,KA0E5DI,EA1E4D,KAyH1E,MAAO,CACLJ,EACA,CACEy1F,kBAtBsB,SAACj9F,GACzB+pB,EAAY8yE,QAAQ78F,GAYpB,OANA4H,EAAS,CACPk1F,iBAAkB,KAClBF,6BAA8B,KAC9BG,iCAAkC,OAG7B,aACLhzE,eAZe,CACf+yE,iBAAkB,KAClBF,6BAA8B,KAC9BG,iCAAkC,QAkBlCG,aAjDiB,SAACxzE,GACpB,IAAM7R,EAAW6kF,EAAqBhzE,GAAY,GAElD,OADA9hB,EAASiQ,GACF,aACLkS,eACGlS,IA6CHslF,wBAzC4B,SAACn9F,GAE/B,GADA+pB,EAAY8yE,QAAQ78F,GAChBwH,EAAMs1F,iBAAkB,CAC1B,IAAMjlF,EAAW6kF,EAAqBl1F,EAAMs1F,kBAAkB,GAE9D,OADAl1F,EAASiQ,GACF,aACLkS,eACGlS,GAIP,OAAO,aACLkS,eACGviB,S,gDCzLT,2DACMkK,EAAkBC,EAAOD,GAOlB0rF,EAA6B,SACxC5jF,EACAC,EACAsQ,EACAD,EACAJ,GAMA,GAJAK,EAAYszE,mBAAmBvzE,EAAoBO,sBAI9CX,EAAL,CAGA,IAAMO,EAAuB+jB,YAAwBlkB,GACrD,IAA8B,IAA1BG,EAAJ,CAOAF,EAAYugE,aAAargE,EAAsBP,GAG/C,IAAM4zE,EAA8BrzE,EAAuB,EAC3D,GAAIqzE,EAA8BxzE,EAAoBO,qBAAsB,CAC1E,IAAMkzE,EAAiCzzE,EAAoBQ,aACzDgzE,GAEF,IACG5rF,EAAGy8B,kBAAkBqvD,WAAWD,EAA+BzqE,WAGhE,OAGF,IAAM2qE,EAAsBF,EAA+B9yE,eACrDizE,EAAgBhsF,EACnBw7B,qBACC1zB,EACAC,EACAiQ,GACA,GAEDoG,YACApnB,QAAO,SAAA0kC,GACN,OACGqwD,GACD/rF,EAAG27B,kBACD7zB,EACAC,EACA2zB,GACA,KACIqwD,KAIZ,GAAIC,EAAc90F,OAAS,EAAG,CAC5B,IAAM+0F,EAAwB5zE,EAAYO,aACxCgzE,GAMCI,EAAcr0D,MACb,SAAA+D,GAAY,OAAIuwD,IAA0BvwD,MAG5CrjB,EAAYugE,aAAagT,EAA6BI,EAAc,WAtDxEh3F,QAAQrG,MAAR,uBACkBypB,EAAoBqG,cADtC,gF,6KCfSytE,EAAoB,SAC/Bz5B,EACA99B,EACAG,GAEA,IAAK29B,EAAa,OAAO,KAEzB,IAAMvB,EAAYC,YAAY39D,MACxB24F,EAAsB15B,EACzBz7D,QAAO,YAAe,IAAZkW,EAAW,EAAXA,KACT,IAAKynB,EAAgB,OAAO,EAO5B,KAFEA,EAAevrB,KAAKioD,oBACpBnkD,EAAKyqB,MAAK,SAAA7nB,GAAG,OAAIA,IAAQ6kB,EAAevrB,KAAKja,SACpB,OAAO,EARd,oBASKwlC,EAAe28B,aATpB,yBASTC,EATS,QAUlB,OAAIA,EAAWF,mBAGP,CAAN,GAAO,GAGoBnkD,EAAKyqB,MAAK,SAAA7nB,GAAG,OAAIA,IAAQyhD,EAAWpiE,aACjE,EAAiC,CAAN,GAAO,IARpC,2BAAqD,CAAC,IAAD,yCATjC,8BAoBpB,OAAO,KAER6H,QAAO,YAAe,IAAZkW,EAAW,EAAXA,KACT,OACyB,IAAvB4nB,EAAcnpC,MAAcuhB,EAAKyqB,MAAK,SAAA7nB,GAAG,OAAIglB,EAAc1C,IAAItiB,SAI/D0hD,EAAYL,YAAY39D,MAAQ09D,EAItC,OAHAl8D,QAAQC,KAAR,gDAC2Cu8D,EAAUC,QAAQ,GAD7D,QAGO06B,GAaIz6B,EAAgB,SAC3BC,EACAy6B,EACA/sE,EACAsV,EACAG,GAEA,IAAM88B,EAAermE,SAAmB,MADjB,EAEmBA,WACxC,MAHqB,mBAEhB0lE,EAFgB,KAEDY,EAFC,KAQjBw6B,EAA0C9gG,WAC9C,WACE,OAAKomE,EAEEI,IACLpvC,OAAOC,KAAK+uC,GAAiB76D,KAAI,SAAAvH,GAAE,OAAIoiE,EAAgBpiE,OAH5B,OAM/B,CAACoiE,IAIHpmE,aACE,WACE,GAAKomE,EAAL,CAKA,IAAMT,EAAYC,YAAY39D,MAC1Bo+D,EAAa9jE,UACf8jE,EAAa9jE,QAAQw+F,YACrB16B,EAAa9jE,QAAU,MAGzB,IACE,IAAMkkE,EAAe,IAAIu6B,IACnBC,EAAS7pE,OAAOC,KAAK+uC,GAE3B66B,EAAO34F,SAAQ,SAAAtE,GACb,IAAM2nC,EAAmBy6B,EAAgBpiE,GACzCyiE,EAAay6B,cAAcl9F,EAAI68F,EAAmBl1D,OAGpD,IAAMs6B,EAAYL,YAAY39D,MAAQ09D,EACtCl8D,QAAQC,KAAR,kBACau3F,EAAOt1F,OADpB,qBACuCs6D,EAAUC,QAAQ,GADzD,QAGAG,EAAa9jE,QAAUkkE,EACvB,MAAOrjE,GACPqG,QAAQrG,MAAM,+BAAgCA,OAGlD,CAACgjE,EAAiBy6B,IAKpB,IAAMj6B,EAAYP,EAAa9jE,QAgE/B,OA/DAvC,aACE,WACE,IAAI6mE,GAAgB,EACpB,GAAK/yC,EAIE,CACL,IAAKsyC,IAAoBQ,EAIvB,YAHAn9D,QAAQC,KACN,qFAKJ,IAAMi8D,EAAYC,YAAY39D,MAC9B2+D,EACGG,OAAOjzC,GACP3I,MAAK,SAACg2E,GACL,GAAIt6B,EACFp9D,QAAQC,KACN,+DAFJ,CAOA,IAAM03F,EAAuBD,EAC1B51F,KAAI,SAAAvH,GAAE,OAAIoiE,EAAgBpiE,MAC1ByH,OAAO0R,SAEJ8oD,EAAYL,YAAY39D,MAAQ09D,EACtCl8D,QAAQC,KAAR,gBAEI03F,EAAqBz1F,OAFzB,qBAGes6D,EAAUC,QAAQ,GAHjC,QAMAI,EACEq6B,EACES,EACAh4D,EACAG,aArCR+8B,EACEq6B,EAAkBG,EAAqB13D,EAAgBG,IA0C3D,OAAO,WAGLs9B,GAAgB,KAGpB,CACEi6B,EACA16B,EACAtyC,EACAsV,EACAG,EACAq9B,IAIGlB,I,mJChLH27B,EAAW,SAACC,GAAD,OACfA,EAAM/1F,KAAI,SAAAsS,GAAI,OAAIA,EAAKja,QAAMqV,KAFP,SAIlBsoF,EAAgB,SAAhBA,EAAiB,GAQf,IAPNC,EAOK,EAPLA,cACAjiF,EAMK,EANLA,SACAwmD,EAKK,EALLA,YAMA,OAAKy7B,EAAc71F,OAEZ61F,EAAcj2F,KAAI,SAAAsS,GACvB,IAAM4jF,EAAc,sBAAO17B,GAAP,CAAoBloD,IACxC,OACE,gBAAC,IAAD,CACE6jF,OAAQL,EAASI,GACjB99F,MAAOka,EAAKja,KACZmnB,IAAKlN,EAAKja,KACV+9F,aAAc,kBAAMpiF,EAAS,CAAE1B,OAAMkoD,iBACrC67B,aAAc/jF,EAAK3d,SAASyL,OAAS,gBAAC,IAAD,MAAqB,KAC1D+5E,WAAY7nE,EAAK3d,SAASyL,OAAS,gBAAC,IAAD,MAAuB,MAE1D,gBAAC41F,EAAD,CACEC,cAAe3jF,EAAK3d,SACpB6lE,YAAa07B,EACbliF,SAAUA,QAhBgB,MA8B9BsiF,EAAmB7hG,QAAkC,YAKhC,IAJzB8hG,EAIwB,EAJxBA,cACA14D,EAGwB,EAHxBA,eACAC,EAEwB,EAFxBA,kBACAW,EACwB,EADxBA,WAEA,OACE,gBAAC,IAAD,CACE15B,SACE84B,EACIi4D,EAAS,GAAD,mBAAKj4D,EAAe28B,aAApB,CAAiC38B,EAAevrB,QACxD,GAENkkF,gBAAiB,GACjBC,aAAc,cAEd,gBAAC,IAAD,CACEN,OAAO,GACP/9F,MAAOm+F,EACPH,aAAc,kBAAMt4D,EAAkB,SAExC,gBAACk4D,EAAD,CACEC,cAAex3D,EAAW45C,SAC1BrkE,SAAU8pB,EACV08B,YAAa,SAaRk8B,EAAkB,SAAC,GAKlB,IAJZl4D,EAIW,EAJXA,aACAC,EAGW,EAHXA,WACA5mC,EAEW,EAFXA,MACA0+F,EACW,EADXA,cAEA,OAAK93D,EAGD5mC,EAEK,KAIP,gBAACy+F,EAAD,CACEC,cAAeA,EACf14D,eAAgBW,EAAaX,eAC7BC,kBAAmBU,EAAaV,kBAChCW,WAAYA,IAZP,gBAAC,IAAD,Q,sKCxEEk4D,EAAoBliG,gBAAqC,CACpEgwB,QAAS,KACTmyE,QAAS,KACTC,SAAU,KACV18B,cAAe,KACf28B,sBAAuB,aACvBj/F,MAAO,KACP0wB,WAAY,GACZqvD,cAAe,aACfp5C,aAAc,CACZR,cAAe,IAAID,IACnBM,UAAW,aACXC,aAAc,aACdT,eAAgB,KAChBC,kBAAmB,gBAQjBi5D,EAAiC,SAAC32D,GACtC,OACEA,EAAiB/nC,KACjB,KACA+nC,EAAiB42D,iBACjB,KACA52D,EAAiBhqB,KAAK1I,KAAK,OAIlBupF,EAA0B,SAAC,GAEH,IADnCtiG,EACkC,EADlCA,SACkC,EACwBF,WAEvD,MAH+B,mBAC3ByiG,EAD2B,KACJC,EADI,OAIJ1iG,WAAyB,MAJrB,mBAI3BgwB,EAJ2B,KAIlBuzD,EAJkB,OAKJvjF,WAA+B,MAL3B,mBAK3BmiG,EAL2B,KAKlBQ,EALkB,OAMF3iG,WAAgC,MAN9B,mBAM3BoiG,EAN2B,KAMjBQ,EANiB,OAOR5iG,WAAuB,MAPf,mBAO3BoD,EAP2B,KAOpB89D,EAPoB,KAQ5BhiC,EAAYl/B,UAAsB,GARN,EAUEA,WA1DZ,IAgDU,mBAU3B8zB,EAV2B,KAUfqvD,EAVe,KAW5Bp5C,EAAeZ,cAEfk5D,EAAwBriG,eAC5B,WAGMyiG,GAAyBvjE,EAAU38B,SAEvC,sBAAC,sCAAA2Q,EAAA,6DACCguD,EAAS,MACThiC,EAAU38B,SAAU,EAFrB,kBAKgD+oC,cALhD,uBAKWG,EALX,EAKWA,kBAAmBzb,EAL9B,EAK8BA,QAL9B,UAMyB+b,cANzB,eAMSo2D,EANT,iBAO0Bl2D,cAP1B,QAOSm2D,EAPT,OASSK,EAAwB,GAC9Bh3D,EAAkBnjC,SAAQ,SAAAqjC,GACxB82D,EAAsB92D,EAAiB3nC,IAAM2nC,KAG/CliC,QAAQC,KAAR,iBACY+hC,EAAkB9/B,OAD9B,kCAGA+2F,EAAyBD,GACzBlf,EAAWvzD,GACX2yE,EAAWR,GACXS,EAAYR,GApBf,kDAsBG34F,QAAQrG,MAAR,wDAIA89D,EAAS,EAAD,IA1BX,QA6BChiC,EAAU38B,SAAU,EA7BrB,yDAAD,KAgCF,CAACkgG,EAAuBvjE,IAG1Bl/B,aACE,WAGE,IAAIyiG,IAAyBvjE,EAAU38B,QAAvC,CAEA,IAAMshF,EAAY1oE,YAAW,WAC3B1R,QAAQC,KAAK,2CACb24F,MACC,KACH,OAAO,kBAAM31C,aAAam3B,OAE5B,CAACwe,EAAuBI,EAAuBvjE,IAlEf,IAqE1BkK,EAAkCW,EAAlCX,eAAgBG,EAAkBQ,EAAlBR,cAClBm8B,EAA0CS,YAC9Cs8B,EACAH,EACAxuE,EACAsV,EACAG,GAGIs5D,EAAkB7iG,WACtB,iBAAO,CACL0lE,gBACA28B,wBACAryE,UACAmyE,UACAC,WACAh/F,QACA0wB,aACAqvD,gBACAp5C,kBAEF,CACE27B,EACAtiE,EACA4sB,EACAmyE,EACAC,EACAtuE,EACAiW,EACAs4D,IAIJ,OACE,gBAACH,EAAkBpjC,SAAnB,CAA4B97D,MAAO6/F,GAChC3iG,K,8BCrKP,kDAAI4iG,EAAwC,KAC/BpuC,EAA6B,WACxC,OAAIouC,IAEIA,EAA+BpuF,EAAOquF,IAAIC,SAChD,gCAEE,cACA,gB,6OCoCOC,EAAyBjjG,gBACpC,MAUWkjG,EAAwB,SAAC,GAKH,IAJjCjkE,EAIgC,EAJhCA,SACAkkE,EAGgC,EAHhCA,iBACAC,EAEgC,EAFhCA,UACAv5E,EACgC,EADhCA,QAEMw5E,EACJF,GAAoBA,EAAiBG,iBAAiB33F,OAAS,EAEjE,OACE,gBAAC,IAAD,CACEgyC,QAAS,CACP9zB,EACE,gBAAC,IAAD,CACElmB,MAAO,gBAAC,QAAD,cACP6L,SAAO,EACPvK,QAAS4kB,EACTkB,IAAI,UAEJ,KACJ,gBAAC,IAAD,CACEpnB,MACEy/F,EAAY,gBAAC,QAAD,gBAAyB,gBAAC,QAAD,uBAEvC9/F,UAAW8/F,EACXn+F,QAASm+F,EACTr4E,IAAI,WAGR8yB,mBAAmB,EACnBr9C,UAAQ,EACRyN,MAAI,EACJ6C,SAAS,MAET,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAmBhE,QAAM,GACvB,gBAAC,IAAD,KACGu2F,EACC,gBAAC,QAAD,mEAIA,gBAAC,QAAD,4DAGJ,gBAAC,IAAD,CAAgB1iG,QAAQ,cAAcqC,MAAOi8B,IAC5CokE,GAAaF,EACZ,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,gBAAC,IAAD,sBACA,gBAAC,IAAD,gBAGJ,gBAAC,IAAD,KACGA,EAAiBG,iBAAiB/3F,KACjC,gBAAGhD,EAAH,EAAGA,aAAcnF,EAAjB,EAAiBA,MAAjB,OACE,gBAAC,IAAD,CAAU2nB,IAAKxiB,GACb,gBAAC,IAAD,KAAiBA,GACjB,gBAAC,IAAD,KAAiBnF,EAAMyW,kBAM/B,SA6BD0pF,EAAqB,WAChC,IAAMC,EAAkBxjG,aAAiBijG,GADuB,EAEhCjjG,WAAe,GAFiB,mBAEzDi/B,EAFyD,KAE/CwkE,EAF+C,OAG5BzjG,YAAe,GAHa,mBAGzD0jG,EAHyD,KAG7CC,EAH6C,OAO5D3jG,WAAkC,MAP0B,mBAK9DmjG,EAL8D,KAM9DS,EAN8D,OAQlC5jG,WAAwC,MARN,mBAQzD6pB,EARyD,KAQhDg6E,EARgD,OAS9B7jG,WAChC,MAV8D,mBASzDojG,EATyD,KAS9CU,EAT8C,KAa1DC,EAA4B/jG,cAAA,uCAChC,WAAOwH,GAAP,iBAAA0L,EAAA,yDACOswF,EADP,sBAC8B,IAAI9vF,MAAM,kCADxC,UAI+B,KADvBknB,EAAgB4oE,EAAgBQ,oBAAoBx8F,IACxCmE,OAJpB,yCAKW,CAAEs4F,0BAA0B,IALvC,cAOER,EAAY,GACZI,EAAW,MACXC,EAAa,MACbF,EAAoB,MACpBD,GAAc,GAXhB,UAciCH,EAAgBU,eAAe,CAC5D18F,UACAozB,gBACA4/D,WAAY,SAACpmE,EAAO+vE,GAClBV,EAAarvE,EAAQ+vE,EAAS,QAlBpC,WAcQhB,EAdR,OAsBEM,EAAY,KACqC,IAA7CN,EAAiBG,iBAAiB33F,OAvBxC,wBAyBIg4F,GAAc,GACdC,EAAoB,MA1BxB,kBA2BW,CAAEK,0BAA0B,IA3BvC,iCAgCS,IAAIzwF,SAAQ,SAAAhK,GACjBq6F,GACE,kBAA8B,WAG5Br6F,EAAQu6F,EAA0Bv8F,QAGtCs8F,GACE,kBAA8B,WAE5BH,GAAc,GACdC,EAAoB,MACpBp6F,EAAQ,CAAEy6F,0BAA0B,QAKxCL,EAAoBT,GACpBQ,GAAc,OAnDlB,4CADgC,sDAuDhC,CAACH,IAkBH,MAAO,CACLO,4BACAK,4BAjBkC,WAClC,IAAMf,EACJF,GAAoBA,EAAiBG,iBAAiB33F,QAAU,EAClE,OAAK+3F,GAAeL,EAGlB,gBAACH,EAAD,CACEjkE,SAAUA,EACVkkE,iBAAkBA,EAClBC,UAAWA,EACXv5E,QAASA,IAPyB,S,8BC9N1C,oEAAO,IAAMw6E,EAAgB,SAC3BC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,GAAiB,cAAbA,EAA0B,CAC5B,GAAIJ,GAAa,GAAKC,GAAc,EAGlC,OAFAF,EAAI,GAAKzrF,KAAK0H,MAAM+jF,EAAI,SACxBA,EAAI,GAAKzrF,KAAK0H,MAAM+jF,EAAI,KAW1B,IAAIM,EAAQ/rF,KAAK0H,MAAgC,GAAxB+jF,EAAI,GAAKG,GAAoBF,GAClDM,EAAQhsF,KAAK0H,MAAgC,GAAxB+jF,EAAI,GAAKI,GAAoBF,GAEtD,KAAOI,EAAQC,GAAS,EAAK,GAAK,IAAM,EAAG,CAEzC,IAAMC,GACHR,EAAI,IAAOM,EAAQ,EAAKL,EAAYE,IAAgBF,EACjD9sC,GACH6sC,EAAI,IAAOO,EAAQ,EAAKL,EAAaE,IAAgBF,EAEpD3rF,KAAK2iC,IAAIspD,GAAUjsF,KAAK2iC,IAAIic,GAC1BqtC,EAAS,EACXF,IAEAA,IAGEntC,EAAS,EACXotC,IAEAA,IAKNP,EAAI,GAAMM,EAAQ,EAAKL,EAAYE,EACnCH,EAAI,GAAMO,EAAQ,EAAKL,EAAaE,OAGlCJ,EAAI,GADFC,GAAa,EACN1rF,KAAK0H,MAAM+jF,EAAI,IAGtBzrF,KAAK0H,OAAO+jF,EAAI,GAAKG,GAAeF,GAAaA,EACjDE,EAIFH,EAAI,GADFE,GAAc,EACP3rF,KAAK0H,MAAM+jF,EAAI,IAGtBzrF,KAAK0H,OAAO+jF,EAAI,GAAKI,GAAeF,GAAcA,EAClDE,GAKKK,EAA2B,SACtCT,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAiB,cAAbA,EAGKN,EACLC,EACAC,EAAY,EACZC,EAAa,EACbC,EACAC,EACA,eAGGL,EACLC,EACAC,EACAC,EACAC,EACAC,EACAC,K,sHCxESK,EAAiC,SAC5ChwF,GAEA,MAAO,CACLgyD,KAAMhyD,EAAOgyD,OAAQ,EACrB29B,SAAU3vF,EAAO2vF,UAAY,cAC7BJ,UAAWvvF,EAAOuvF,WAAa,GAC/BC,WAAYxvF,EAAOwvF,YAAc,GACjCC,YAAazvF,EAAOyvF,aAAe,EACnCC,YAAa1vF,EAAO0vF,aAAe,EACnCO,eACuBpkG,IAArBmU,EAAOiwF,UACHjwF,EAAOiwF,UACPjgF,YAAe,IAAK,IAAK,KAC/BkgF,eAAgCrkG,IAArBmU,EAAOkwF,UAA0BlwF,EAAOkwF,UAAY,GAC/DC,KAAMnwF,EAAOmwF,OAAQ,EACrB1pD,WAAY5iC,KAAK1T,IAAI6P,EAAOymC,YAAc,EAAG,MAC7C2pD,WAAYpwF,EAAOowF,aAAc,IAIxBC,EAA+B,SAC1CrqD,GAEA,OAAO,eAAKA,K,8BC/Cd,uDAKMvmC,EAAkBC,EAAOD,GAYlB6wF,EAA8B,CACzC,CACE94F,KAAM,QACNmvB,YAAa,aACb4pE,eAAgB,CAAC,MAAO,MAAO,MAAO,OACtCC,kBAAmB,kBAAM,IAAI/wF,EAAGgxF,gBAElC,CACEj5F,KAAM,QACNmvB,YAAa,aACb4pE,eAAgB,CAAC,MAAO,MAAO,OAAQ,QACvCC,kBAAmB,kBAAM,IAAI/wF,EAAG8pB,gBAElC,CACE/xB,KAAM,OACNmvB,YAAa,YACb4pE,eAAgB,CAAC,MAAO,OACxBC,kBAAmB,kBAAM,IAAI/wF,EAAGixF,eAElC,CACEl5F,KAAM,QACNmvB,YAAa,aACb4pE,eAAgB,CAAC,MAAO,QACxBC,kBAAmB,kBAAM,IAAI/wF,EAAGkxF,gBAElC,CACEn5F,KAAM,OACNmvB,YAAa,YACb4pE,eAAgB,CAAC,QACjBC,kBAAmB,kBAAM,IAAI/wF,EAAGmxF,eAElC,CACEp5F,KAAM,aACNmvB,YAAa,mBACb4pE,eAAgB,CAAC,MAAO,OACxBC,kBAAmB,kBAAM,IAAI/wF,EAAGoxF,wB,kMC5BvBC,EAAuB9lG,gBAAwC,CAC1EgwB,QAAS,KACT01C,cAAe,KACfqgC,8BAA+B,aAC/BC,kBAAmB,KACnB5iG,MAAO,KACP0wB,WAAY,GACZqvD,cAAe,aACfp5C,aAAc,CACZR,cAAe,IAAID,IACnBM,UAAW,aACXC,aAAc,aACdT,eAAgB,KAChBC,kBAAmB,gBAQjB48D,EAA8B,SAACC,GACnC,OACEA,EAAct/F,MACd,KACAs/F,EAAcC,OACd,KACAD,EAAcjoF,YACd,KACAioF,EAAcvkF,KAAK1I,KAAK,MAIfmtF,EAA6B,SAAC,GAEH,IADtClmG,EACqC,EADrCA,SACqC,EACmBF,WAErD,MAHkC,mBAC9BqmG,EAD8B,KACRC,EADQ,OAOjCtmG,WAAsC,MAPL,mBAKnCgmG,EALmC,KAMnCO,EANmC,OAQPvmG,WAAyB,MARlB,mBAQ9BgwB,EAR8B,KAQrBuzD,EARqB,OASXvjF,WAAuB,MATZ,mBAS9BoD,EAT8B,KASvB89D,EATuB,KAU/BhiC,EAAYl/B,UAAsB,GAVH,EAYDA,WA5DZ,IAgDa,mBAY9B8zB,EAZ8B,KAYlBqvD,EAZkB,KAa/Bp5C,EAAeZ,cAEf48D,EAAgC/lG,eACpC,WAGMqmG,GAAwBnnE,EAAU38B,SAEtC,sBAAC,kCAAA2Q,EAAA,6DACCguD,EAAS,MACThiC,EAAU38B,SAAU,EAFrB,kBAKsDmtB,cALtD,OAKSs2E,EALT,OAMWj2E,EAA4Bi2E,EAA5Bj2E,eAAgBC,EAAYg2E,EAAZh2E,QACxBu2E,EAAqB//B,kBAAQz2C,IAEvBs2E,EAAuB,GAC7Bt2E,EAAeznB,SAAQ,SAAA49F,GACrBG,EAAqBH,EAAct/F,OAASs/F,KAG9Cz8F,QAAQC,KAAR,iBACYqmB,EAAepkB,OAD3B,oCAGA26F,EAAwBD,GACxB9iB,EAAWvzD,GAlBd,kDAoBGvmB,QAAQrG,MAAR,0DAIA89D,EAAS,EAAD,IAxBX,QA2BChiC,EAAU38B,SAAU,EA3BrB,yDAAD,KA8BF,CAAC8jG,EAAsBnnE,IAGjBkK,EAAkCW,EAAlCX,eAAgBG,EAAkBQ,EAAlBR,cAClBm8B,EAAuCS,YAC3CkgC,EACAJ,EACAnyE,EACAsV,EACAG,GAGIi9D,EAAqBxmG,WACzB,iBAAO,CACL0lE,gBACAqgC,gCACAC,oBACAh2E,UACA5sB,QACA0wB,aACAqvD,gBACAp5C,kBAEF,CACE27B,EACAsgC,EACA5iG,EACA4sB,EACA8D,EACAiW,EACAg8D,IAIJ,OACE,gBAACD,EAAqBhnC,SAAtB,CAA+B97D,MAAOwjG,GACnCtmG,K,sKCxHMumG,EAAsBzmG,gBAAuC,CACxEgwB,QAAS,KACT01C,cAAe,KACfghC,wBAAyB,aACzBC,YAAa,KACbvjG,MAAO,KACP0wB,WAAY,GACZqvD,cAAe,aACfp5C,aAAc,CACZR,cAAe,IAAID,IACnBM,UAAW,aACXC,aAAc,aACdT,eAAgB,KAChBC,kBAAmB,gBAQVu9D,EAA4B,SAAC,GAEH,IADrC1mG,EACoC,EADpCA,SACoC,EAIhCF,WAED,MANiC,mBAElC6mG,EAFkC,KAGlCC,EAHkC,OAON9mG,WAAyB,MAPnB,mBAO7BgwB,EAP6B,KAOpBuzD,EAPoB,OAQVvjF,WAAuB,MARb,mBAQ7BoD,EAR6B,KAQtB89D,EARsB,OAYhClhE,WAA2C,MAZX,mBAUlC2mG,EAVkC,KAWlCI,EAXkC,KAc9B7nE,EAAYl/B,UAAsB,GAdJ,EAgBAA,WApDZ,IAoCY,mBAgB7B8zB,EAhB6B,KAgBjBqvD,EAhBiB,KAiB9Bp5C,EAAeZ,cAEfu9D,EAA0B1mG,eAC9B,WAGM6mG,GAA2B3nE,EAAU38B,SAEzC,sBAAC,kCAAA2Q,EAAA,6DACCguD,EAAS,MACThiC,EAAU38B,SAAU,EAFrB,kBAK0C0+C,cAL1C,OAKS0lD,EALT,OAMWK,EAAiCL,EAAjCK,oBAAqBh3E,EAAY22E,EAAZ32E,QAC7B+2E,EAAeC,GAETH,EAA0B,GAChCG,EAAoB1+F,SAAQ,SAAA64C,GAC1B0lD,EAAwB1lD,EAAmBn9C,IAAMm9C,KAGnD13C,QAAQC,KAAR,iBAEIs9F,EAAoBr7F,OAFxB,sCAKAm7F,EAA2BD,GAC3BtjB,EAAWvzD,GApBd,kDAsBGvmB,QAAQrG,MAAR,4DAIA89D,EAAS,EAAD,IA1BX,QA6BChiC,EAAU38B,SAAU,EA7BrB,yDAAD,KAgCF,CAACskG,EAAyB3nE,IAG5Bl/B,aACE,WAGE,IAAI6mG,IAA2B3nE,EAAU38B,QAAzC,CAEA,IAAMshF,EAAY1oE,YAAW,WAC3B1R,QAAQC,KAAK,mDACbg9F,MACC,KACH,OAAO,kBAAMh6C,aAAam3B,OAE5B,CAAC6iB,EAAyBG,EAAyB3nE,IAxEjB,IA2E5BkK,EAAkCW,EAAlCX,eAAgBG,EAAkBQ,EAAlBR,cAClBm8B,EAGAS,YACJ0gC,EACA/yE,EACAsV,EACAG,GAGI09D,EAAoBjnG,WACxB,iBAAO,CACL0lE,gBACAghC,0BACAC,cACA32E,UACA5sB,QACA0wB,aACAqvD,gBACAp5C,kBAEF,CACE27B,EACAihC,EACAvjG,EACA4sB,EACA8D,EACAiW,EACA28D,IAIJ,OACE,gBAACD,EAAoB3nC,SAArB,CAA8B97D,MAAOikG,GAClC/mG,K,qUCpIDiH,EAAWC,IAAgB,YASpB8/F,EAAsB,SAACC,GAClC95F,IAAOC,gBAAP,mDAC8C65F,EAAQC,kBAIjD,SAASC,EAAT,GAKI,IAJTC,EAIQ,EAJRA,UACAnmD,EAGQ,EAHRA,mBACA4O,EAEQ,EAFRA,QACA6nB,EACQ,EADRA,OACQ,EACkB53E,WAAuB,MADzC,mBACDoD,EADC,KACM89D,EADN,OAEsBlhE,WAAyB,MAF/C,mBAEDmnG,EAFC,KAEQI,EAFR,KAIFC,EAAcxnG,cAAA,sBAClB,4BAAAkT,EAAA,6DACEguD,EAAS,MADX,kBAG0BhgB,YAAWC,GAHrC,OAGUgmD,EAHV,OAIII,EAAWJ,GAJf,gDAMIjmC,EAAS,EAAD,IANZ,yDASA,CAAC/f,IAGHnhD,aACE,WACEwnG,MAEF,CAACA,IAGH,IAAMC,EAAez8D,YACnB08D,cACAvmD,GAEIwmD,EAAUxmD,EAAmBymD,iBAAiBj8F,OAAS,EAEvDk8F,GAAkBP,GAAaG,EAC/BK,EAAgB9nG,eACpB,WACM6nG,GAAgBjwB,MAEtB,CAACA,EAAQiwB,IAGX,OACE,gBAAC,IAAD,CACElqD,QAAS,CACP,gBAAC,IAAD,CACE5yB,IAAI,QACJpnB,MAAO,gBAAC,QAAD,aACP6L,SAAS,EACTvK,QAAS8qD,EACTzsD,SAAUgkG,IAEZ,gBAAC,IAAD,CAAYpoE,UAAWooE,EAAWv8E,IAAI,QACpC,gBAAC,IAAD,CACEpnB,MACG8jG,EAGC,gBAAC,QAAD,aAFA,gBAAC,QAAD,uBAKJj4F,SAAO,EACPvK,QAAS6iG,EACTxkG,UAAWukG,EACXn5F,kBAAmB,SAAA5L,GAAI,MAAI,CACzB,CACEa,MAAOwD,EACHrE,EAAKiB,EAAE,4BACPjB,EAAKiB,EAAE,0BACXT,UAAW6jG,EACXzqE,MAAO,WACDyqE,GAASD,EAAoBC,WAO7CtpD,mBAAmB,EACnB5vC,MAAI,EACJiS,eAAgB6vC,EAChBpnC,QAASm/E,GAET,gBAAC,IAAD,CAAmBh7F,QAAM,EAACtM,UAAQ,IAC9BinG,GACA,gBAAC,IAAD,CAAcj7F,KAAK,SACjB,gBAAC,QAAD,oIAMJ,gBAAC,IAAD,CAAMvG,WAAW,SAASzF,UAAQ,GAC/BmnG,EACC,gBAAC,IAAD,CAAaxmD,mBAAoBA,EAAoB/gD,KAAM,KACzD,KACJ,gBAAC,IAAD,CAAQ0M,QAAM,EAACtM,UAAWmnG,GACxB,gBAAC,IAAD,CAAMnnG,UAAQ,EAACJ,KAAK,SACjB+gD,EAAmBv9C,QAIzBu9C,EAAmBghD,SAClB,gBAAC,IAAD,KACGhhD,EAAmBghD,QAAQ52F,KAAI,SAAA46F,GAAM,OACpC,gBAAC,IAAD,CACEj+B,KAAMi+B,EACNp7E,IAAKo7E,EAAOniG,GACZmkE,aAAW,QAKnB,gBAAC,IAAD,CAAM3nE,UAAQ,GAAE2gD,EAAmBohD,kBACnC,gBAAC,IAAD,MACC4E,GACC,gBAAC,IAAD,CAActkG,OAAQskG,EAAQlpF,YAAa8pF,kBAAgB,KAE3DZ,IAAY/jG,GAAS,gBAAC,IAAD,OACrB+jG,GAAW/jG,GACX,gBAAC,IAAD,CAAkBymB,QAAS29E,GACzB,gBAAC,QAAD,yF,uwBC3BNQ,GAAmBtzF,EAAOszF,kBAAoB,GAE9CvzF,GAAkBC,EAAOD,GAEzBzO,GAAS,CACbiiG,cAAe,CACbziG,MAAO,IACP0/C,UAAW,SACXpkD,QAAS,OACT+P,cAAe,WAIbq3F,GAAyB,SAC7BplG,EACAqlG,EACAC,GACsB,IACdC,EAAwBD,EAAxBC,oBACFC,EAAkBH,EAAiB18F,QACvC,SAAA68F,GAAe,OAAIA,EAAgBC,eAAiBF,KACpD,GAEF,GAAKC,EAcL,OAAOA,EAdgB,IACbD,EAAwBD,EAAxBC,oBACRvoC,YAAa,CACX/yD,QAASjK,EAAKiB,EACZ,uJAAiEskG,yBAEnEtoC,SAAU,IAAIrsD,MAAJ,+CAC+B20F,EAD/B,MAGVroC,QAAS,8BAsBTwoC,GAAoC,CACxCC,kBAAmB,KACnBC,0BAA2B,KAC3BC,oBAAoB,EACpBC,2BAA4B,KAC5BC,mCAAoC,MAgtEvBC,IA3qEG,SAAC9mG,GAAkB,IAAD,EAI9B+mG,aACD,CACCC,kBAAkB,EAClBC,eAAgB,KAChBC,oBAAqB,KACrBC,WAAYC,cACZC,aAAc,GACdC,kBAAkB,EAClBC,aAAc,CAAEx8F,QAAS,GAAIkzB,OAAQ,WACrCupE,mCAAmC,EACnCC,iCAAiC,EACjCn/D,+BAAgC,KAChCo/D,+BAA+B,IAhBD,mBAC3Bn/F,EAD2B,KACpBI,EADoB,KAmB5BsjB,GAAUjuB,SAAgC,MAC1C8/B,GAAoB9/B,aAAiB2T,MApBT,GAyB9B3T,WAAuC,MAzBT,qBAuBhC2pG,GAvBgC,MAwBhCC,GAxBgC,SA0Bc5pG,WAErC,MA5BuB,qBA0B3B6pG,GA1B2B,MA0BTC,GA1BS,MA6B5BC,GAAmB/pG,SAAc,MACjC8nC,GAAcC,eA9Bc,GA+Bc/nC,YAC9C,GAhCgC,qBA+B3BgqG,GA/B2B,MA+BTC,GA/BS,SAkCYjqG,YAAwB,GAlCpC,qBAkC3BkqG,GAlC2B,MAkCVC,GAlCU,SAmCenqG,YAC/C,GApCgC,qBAmC3BoqG,GAnC2B,MAmCPC,GAnCO,SAsCSrqG,YAAwB,GAtCjC,qBAsC3BsqG,GAtC2B,MAsCVC,GAtCU,SAuCevqG,YAC/C,GAxCgC,qBAuC3BwqG,GAvC2B,MAuCPC,GAvCO,SA0CmBzqG,YACnD,GA3CgC,qBA0C3B0qG,GA1C2B,MA0CLC,GA1CK,SAgD9B3qG,YAAwB,GAhDM,qBA8ChC4qG,GA9CgC,MA+ChCC,GA/CgC,SAiDS7qG,YAAwB,GAjDjC,qBAiD3B8qG,GAjD2B,MAiDVC,GAjDU,SAkD4B/qG,WAE5D,WApDgC,qBAkD3BgrG,GAlD2B,MAkDFC,GAlDE,SAqDajrG,YAAwB,GArDrC,qBAqD3BkrG,GArD2B,MAqDRC,GArDQ,SAyD9BnrG,YAAwB,GAzDM,qBAuDhCorG,GAvDgC,MAwDhCC,GAxDgC,SA6D9BrrG,YAAwB,GA7DM,qBA2DhCsrG,GA3DgC,MA4DhCC,GA5DgC,SA8DWvrG,YAAwB,GA9DnC,qBA8D3BwrG,GA9D2B,MA8DTC,GA9DS,MA+D5B5qD,GAAc7gD,aAAiB+kC,KA/DH,GAgEU/kC,YAAwB,GAhElC,qBAgE3B0rG,GAhE2B,MAgEXC,GAhEW,SAiEM3rG,WAAewoG,IAjErB,qBAiE3BoD,GAjE2B,MAiEbC,GAjEa,MAkE5BC,GAAoB9rG,SAAc,MAClC+rG,GAAmC/rG,aACvC+qC,KAEIihE,GACJjC,GAAiBxnG,SACjBwnG,GAAiBxnG,QAAQ0pG,2BAxEO,GA6E9BC,aAAgCF,IAHlCG,GA1EgC,GA0EhCA,mBACAC,GA3EgC,GA2EhCA,cACAC,GA5EgC,GA4EhCA,mBAEIh9C,KAAuB88C,GAAmBxgG,OA9Ed,GAkF9B2gG,cAFFC,GAhFgC,GAgFhCA,0BACAC,GAjFgC,GAiFhCA,wBAjFgC,GAsF9BjJ,eAFFQ,GApFgC,GAoFhCA,0BACAK,GArFgC,GAqFhCA,4BAEIxf,GAAiC5kF,aACrC+qC,KAEIlD,GAAiB7nC,aAAiB0+D,MA1FN,GA8F9B1+D,WAAwC,YA9FV,qBA4FhCysG,GA5FgC,MA6FhCC,GA7FgC,MAuGhCzD,GAIE1+F,EAJF0+F,eACAC,GAGE3+F,EAHF2+F,oBACAK,GAEEh/F,EAFFg/F,aACAj/D,GACE//B,EADF+/B,+BAGAqiE,GAeE3qG,EAfF2qG,mBACAC,GAcE5qG,EAdF4qG,mBACAC,GAaE7qG,EAbF6qG,+BACAC,GAYE9qG,EAZF8qG,cACApxE,GAWE15B,EAXF05B,gBACAqxE,GAUE/qG,EAVF+qG,sBACA5wE,GASEn6B,EATFm6B,wBACA6wE,GAQEhrG,EARFgrG,6BACAC,GAOEjrG,EAPFirG,mBACAC,GAMElrG,EANFkrG,iBACAC,GAKEnrG,EALFmrG,0BACAC,GAIEprG,EAJForG,YACAtqG,GAGEd,EAHFc,KACAuqG,GAEErrG,EAFFqrG,6BACAC,GACEtrG,EADFsrG,eAGFttG,aACE,WACOktG,IAAkBK,KACvBvF,GAAiBxmG,KAAK,CAAC,6BAA8BokE,YAAY39D,QACjEulG,KACGriF,MAAK,kBAKJxgB,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZm/F,+BAA+B,UAGlCv+E,KAXH,uCAWQ,WAAM5gB,GAAN,2BAAA2I,EAAA,yDACJ80F,GAAiBxmG,KAAK,CACpB,qCACAokE,YAAY39D,QAGdwB,QAAQC,KAAK,iBAAkB+jG,eAG7BC,EAGE7sD,GAHF6sD,6BACAC,EAEE9sD,GAFF8sD,sBACAC,EACE/sD,GADF+sD,mCAGET,GAdA,iCAkBsCH,KAlBtC,cAkBIa,EAlBJ,gBAmBoBtB,GACpBsB,GApBA,eAsBWC,KAtBX,6BAwBFJ,KACAE,KACAD,IAAwB,IA1BtB,oBA6BIvF,EAAqCuF,IAAwB,GAC7DrF,EAAkBJ,GACtBplG,GACAd,EAAMmmG,iBACNC,GAjCA,oEAqCsC4E,GACtC1E,GAtCA,eAqCIuF,EArCJ,iBAwCoBtB,GACpBsB,GAzCA,gBA4CAE,GACE3F,GA7CF,wBAiDEgF,IAAa7C,IAAgB,GAjD/B,4CAXR,uDA+DGrwE,OAAM,iBAKX,IAGF,IAAM8zE,GAA2B,SAC/BhD,GAEAC,GAA2BD,GAC3BG,IAAkB,IAGd8C,GAAoBjuG,eACxB,SAACqpG,GACC1+F,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ8+F,eACAC,kBAAkB,SAGtB,CAAC3+F,IAEGujG,GAAqBluG,eACzB,WACE2K,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ++F,kBAAkB,SAGtB,CAAC3+F,IAGGmjG,GAAuB,uCAAG,4BAAA56F,EAAA,yDACzBi6F,GADyB,iEAMVgB,GAAqBhB,IANX,QAMxB5iG,EANwB,SAQ5B6jG,GAA0B,CACxBnF,eAAgB1+F,EAAM0+F,eACtBE,WAAY5+F,EAAM4+F,aAVQ,2CAAH,qDAcvBnd,GAAgBhsF,eACpB,WAAuC,IAAtCquG,EAAqC,uDAArB9jG,EAAM4+F,WACfmF,EAAYC,YAAcF,GAC3BC,GAAcA,EAAUE,UAK7BF,EAAUE,UAAUxiB,gBAJlByiB,GAAiB,QAMrB,CAAClkG,EAAM4+F,aAGTnpG,aACE,WACEgsF,OAEF,CAACA,KAGH,IAAM0iB,GAAqB,WAOzBj6F,GAAGsI,WAAWC,MAAM2xF,0BACpBnB,KAAkBtzE,OAAM,gBAGpBszE,GAAkB,WAAsB,IACpCoB,EAA2B5sG,EAA3B4sG,iBAAkB9rG,EAASd,EAATc,KAC1B,OAAK8rG,EAOEA,EACJC,kBAAkBC,YAA8BhsG,IAChDqoB,MAAK,SAAA4jF,GACJ,IAAMC,EAAwBD,EAAetjG,QAC3C,SAAAwjG,GAAa,OAAKA,EAAc3tG,OAAO8B,SAEnC8rG,EAAqBH,EAAetjG,QACxC,SAAAwjG,GAAa,OACXA,EAAc3tG,OAAO8B,QAAU6rG,EAAc3tG,OAAO6tG,aAElDC,EAA0BL,EAAetjG,QAC7C,SAAAwjG,GAAa,OACXA,EAAc3tG,OAAO8B,OAAS6rG,EAAc3tG,OAAO6tG,aAEvD1lG,QAAQC,KAAR,iBAAuBslG,EAAsBrjG,OAA7C,oBACIujG,EAAmBvjG,QACrBlC,QAAQrG,MAAR,sCAEI8rG,EAAmBvjG,OAFvB,8CAIEujG,GAGAE,EAAwBzjG,QAC1BlC,QAAQrG,MAAR,0DAEIgsG,EAAwBzjG,OAF5B,uFAIEyjG,OAlCN3lG,QAAQC,KACN,gEAEK8J,QAAQC,OAAO,IAAIC,MAAM,qCAqCpC27F,aAAuBpG,IAEvB,IAAMqG,GAAetvG,eACnB,WAGE,OAFA6gD,GAAY0uD,qBAAoB,GAChC1D,GAAgBrD,IACT79F,GAAS,SAAAJ,GACd,OAAK0+F,IAMDA,KACFrkB,GAA+Bp6C,uCAC7By+D,IAEFA,GAAe5zF,UAGV,2BACF9K,GADL,IAEE0+F,eAAgB,KAChBC,oBAAqB,KACrBC,WAAYqG,YAAiBjlG,EAAM4+F,WAAYF,OAdxC,eAAK1+F,MAgBb4gB,MAAK,iBAEV,CAAC89E,GAAgBrkB,GAAgC/jC,GAAal2C,IAG1D8kG,GAAkBzvG,cAAA,uCACtB,WAAOwH,EAAoBkoG,GAA3B,iBAAAx8F,EAAA,6DACMw8F,GACF7uD,GAAY8uD,wBAAwB,CAClCD,eACArH,oBAAqB4E,KAAqB1E,eAJhD,SAOQ+G,KAPR,cAYEpnG,IAAgB0nG,oBAGhB/uD,GAAY0uD,qBAAoB,GAflC,SAiBsB5kG,GAAS,SAAAJ,GAAK,kCAC7BA,GAD6B,IAEhC0+F,eAAgBzhG,EAChB0hG,oBAAqBwG,EACrB1G,kBAAkB,OArBtB,cAiBQz+F,EAjBR,OA0BEq6E,GAA+Br6C,qCAC7B/iC,GAGEkoG,GACFloG,EAAQqoG,eAAeH,EAAaI,gBA/BxC,UAoC6C/L,GACzCv8F,GArCJ,0BAoCUy8F,0BAIFp8D,IAAgBA,GAAeI,wBAxCvC,kBA2CS19B,GA3CT,4CADsB,wDA8CtB,CACEs9B,GACAl9B,EACA2kG,GACAzuD,GACA+jC,GACAqoB,GACAlJ,KAIEgM,GAA4B/vG,eAChC,SACEgwG,EACAN,GAEA,OAAOO,aACL,WACE,IAAMC,EAAaz7F,GAAG07F,cAAcC,uBAGpC,OAFAF,EAAWthD,gBAAgBohD,GAEpBP,GAAgBS,EAAYR,MAErC,SAAAW,GAAI,OAAI5mG,QAAQC,KAAR,+BAAqC2mG,EAArC,aAGZ,CAACZ,KAGGtB,GAAuBnuG,eAC3B,SAAC0vG,GACC,OAAO1C,KAA+B7hF,MAAK,SAAA0iF,GAA8B,IAErEyC,EAIEzC,EAJFyC,YACAC,EAGE1C,EAHF0C,cACA34B,EAEEi2B,EAFFj2B,OACA44B,EACE3C,EADF2C,oBAGF,IAAK54B,EAMH,OALAnuE,QAAQrG,MACN,6DACAssG,EACA7B,GAEKr6F,QAAQhK,UA4CjB,OAHAygG,IAAoB,GAGbwG,aAAM,KACVtlF,MAAK,kBAzCDmlF,GAAgBC,EAIdD,EAAYZ,GAAc,GAAMvkF,MAAK,SAAAulF,GAC1C,OAAKA,GAEUrjG,IAAOkZ,kBACpBzjB,GAAKiB,EACH,iJAKGwsG,EAAcb,GATQA,KAJtBl8F,QAAQhK,QAAQkmG,MAyCxBvkF,MAAK,SAAAukF,GAAY,OAAI93B,EAAO83B,MAC5Bx1E,OAAM,SAAA3B,GAEL,OA1BG+3E,GAAgBC,EAIdD,EAAYZ,GAAc,GAAOvkF,MAAK,SAAAulF,GAC3C,OAAKA,GAEUrjG,IAAOkZ,kBACpBzjB,GAAKiB,EACH,kKAKGwsG,EAAcb,GATQ,QAJtBl8F,QAAQhK,QAAQ,OAyBe2hB,MAAK,SAAAukF,GACzC,GAAIA,EACF,OAAO93B,EAAO83B,GAGhB,MAAMn3E,QAGTpN,MAAK,YAAkB,IAAf7e,EAAc,EAAdA,QACP,GAAKqkG,aAAqB7tG,GAAMwJ,GAAhC,CAMA,IAAM0jG,EAAoBv7F,GAAGU,WAAWO,aAAapJ,GACrD,OAAOyjG,GACLC,EAIAN,GACAvkF,MACA,SAAA5gB,GAEE,OADAylG,EAAkB36F,SACX7B,QAAQhK,QAAQe,MAEzB,SAAAguB,GAEE,MADAy3E,EAAkB36F,SACZkjB,KAlBR0xE,IAAoB,MAsBvB/vE,OAAM,SAAA92B,GACL,IAAMwtG,EAAeJ,EACjBA,EAAoBptG,GACpB,2IAUJ,OATA08D,YAAa,CACX/yD,QAAS,CACPjK,GAAKiB,EAAE,oCACPjB,GAAKiB,EAAE6sG,IACP33F,KAAK,MACP+mD,QAAS,qBACTD,SAAU38D,IAEZ6mG,IAAoB,GACbz2F,QAAQC,OAAOrQ,WAI9B,CAACN,GAAMkqG,GAA8B+C,KAGjCc,GAAW7wG,eAAkB,WACjC,OAAOqN,IAAOyjG,SACb,IAEGC,GAAuB/wG,eAC3B,WACMiuB,GAAQ1rB,SACV8nG,IAAmB,SAAAD,GAAkB,OAAKA,OAE9C,CAACC,KAGGoE,GAAmB,SAACuC,GAA6C,IAAzBC,IAAwB,yDAC/DhjF,GAAQ1rB,SAAY0uG,GAEzBhjF,GAAQ1rB,QAAQksG,iBAAiBuC,IAoT7BE,GAAqB,SACzBzI,EACAC,GAEAmD,IACE,SAAAD,GAAY,kCAELA,GAFK,IAGRnD,oBACAC,kCAkBFyI,GAA0BnxG,cAAA,sBAC9B,4BAAAkT,EAAA,yDACO+1F,GADP,iEAG0C+D,KAH1C,UAGQa,EAHR,SAKIhtD,GAAYz6B,OAAOgrF,mBACnBvD,EAA0BwD,mBAC1BnI,IAPJ,0CAUY2E,EAA0BwD,kBAC9BpI,GACAC,IAZR,yDAeMz/F,QAAQrG,MAAM,wCAAd,MACA6qG,GACEnrG,GAAKiB,EACH,uIAlBV,0DAwBA,CACEjB,GACAmrG,GACAhF,GACAC,GACA8D,GACAnsD,GAAYz6B,OAAOgrF,oBAIjBE,GAAiBtxG,eACrB,YAK6B,IAJ3BuxG,EAI0B,EAJ1BA,eACAC,EAG0B,EAH1BA,UACAC,EAE0B,EAF1BA,sBACAC,EAC0B,EAD1BA,kBAEA,GAAKzI,IACoC,IAArCA,GAAeppD,kBAAnB,CAEA,IAAM8xD,EAAkB5H,GAAiBxnG,QACzC,GAAKovG,EAAL,CAEAhG,IAAkB,GAClBiG,YAAuBrnG,EAAM4+F,YAE7B,IAAM0I,EAAajG,GAAajD,mBAC5BiD,GAAahD,2BACbgD,GAAanD,kBACXxQ,EAAqB2T,GAAajD,mBACpCiD,GAAa/C,mCACb+C,GAAalD,0BAEX1yE,EACJ67E,GAAc5I,GAAe6I,eAAeD,GACxC5I,GAAe8I,UAAUF,GACzB5I,GAAenpD,YAAY,GAC3BkyD,EACJ/Z,GACAgR,GAAegJ,uBAAuBha,GAClCgR,GAAeiJ,kBAAkBja,GACjC,KAENkZ,KAKAjxC,aAA+B+oC,IAE/BrkB,GACG/5C,qBACA1f,MAAK,kBACJwmF,EAAgBQ,cAAc,CAC5B3qG,QAASyhG,GACTjzE,SACAg8E,iBACAT,iBAAkBA,EAClBC,YAAaA,EACbC,wBAAyBA,EACzBC,oBAAqBA,EACrBU,4BACEvxD,GAAYuxD,4BACdC,0BAA2BxxD,GAAYwxD,+BAG1Cn4E,OAAM,SAAA92B,GACLqG,QAAQrG,MACN,kEACAA,MAGH+nB,MAAK,WACJwgF,IAAkB,UAGxB,CACEwF,GACAlI,GACArkB,GACAgnB,GACArhG,EAAM4+F,WACNtoD,GAAYuxD,4BACZvxD,GAAYwxD,4BAIVF,GAAgBjyE,aACpBJ,GACAT,KACAiyE,IAGIgB,GAAmBtyG,eACvB,kBAAMmyG,GAAc,CAAEZ,gBAAgB,MACtC,CAACY,KAGGI,GAAyBvyG,eAC7B,kBAAMmyG,GAAc,CAAEZ,gBAAgB,EAAOC,WAAW,MACxD,CAACW,KAGGK,GAAuBxyG,eAC3B,kBAAMmyG,GAAc,CAAEZ,gBAAgB,EAAMC,WAAW,MACvD,CAACW,KAGG70D,GAA2Dt9C,WAC/D,iBAAO,CACLqvD,sBACAojD,sCAAuC,kBACrCN,GAAc,CAAET,mBAAmB,KACrCtiD,6BAA8B,kBAC5B+iD,GAAc,CAAEX,WAAW,EAAMC,uBAAuB,QAE5D,CAACpiD,GAAoB8iD,KAGjBO,GAAa1yG,eACjB,SACE4D,GAMI,IAAD,yDAF0D,GAE1D,IAJD+uG,wBAIC,aAHDC,uBAGC,SADHzJ,EACG,uDADU5+F,EAAM4+F,WAEb0J,EAAqB,CACzBlvG,MAAOC,EACPkvG,gBAAiBlvG,EACjBmvG,sBAAuBC,IACvBjoF,IAAK,UAAYnnB,GAEbqvG,EAAsB,CAC1BtvG,MAAOC,EAAO,IAAMd,GAAKiB,EAAE,iBAC3B+uG,gBAAiBlvG,EACjBmvG,sBAAuBG,IACvBnoF,IAAK,iBAAmBnnB,EACxBuvG,aAAcP,GAGVQ,EAAsBR,EACxBS,YAAclK,EAAY0J,GAC1B1J,EACEmK,EAAgCX,EAClCU,YAAcD,EAAqBH,GACnCG,EAEJzoG,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAYmK,OAEdrJ,IAAoB,GACpBI,IAAmB,KAErB,CAACvnG,GAAM6H,EAAUJ,EAAM4+F,aAGnBoK,GAAqBvzG,eACzB,SAAC4D,GACC+G,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAYkK,YAAc9oG,EAAM4+F,WAAY,CAC1CxlG,MAAOC,EACPkvG,gBAAiBlvG,EACjBmvG,sBAAuBS,IACvBzoF,IAAK,mBAAqBnnB,SAG9BymG,IAAmB,KAErB,CAAC1/F,IAGG8oG,GAAqBzzG,eACzB,SAAC4D,GACC+G,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAYkK,YAAc9oG,EAAM4+F,WAAY,CAC1CxlG,MAAOC,EACPkvG,gBAAiBlvG,EACjBmvG,sBAAuBW,IACvB3oF,IAAK,mBAAqBnnB,SAG9BymG,IAAmB,KAErB,CAAC1/F,EAAU0/F,KAGPsJ,GAA+B3zG,eACnC,SACE4D,EACAgwG,EACAC,GAEAlpG,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAYkK,YAAc9oG,EAAM4+F,WAAY,CAC1CxlG,MAAOC,EAAO,IAAMd,GAAKiB,EAAE,oBAC3B+uG,gBAAiBlvG,EACjBkwG,iBAAkB,CAChBF,+BACAC,gCAEFd,sBAAuBgB,IACvBhpF,IAAK,8BAAgCnnB,SAGzCymG,IAAmB,KAErB,CAAC1/F,EAAU0/F,GAAoBvnG,KAgB3ByqG,GAAevtG,eACnB,WACE2K,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAYkK,YAAc9oG,EAAM4+F,WAAY,CAC1Cj9F,KAAM,gBAAC,IAAD,CAAU8nG,KAAK,MAAMC,YAAY,SACvCnB,gBAAiB,KACjBC,sBAAuBmB,IACvBnpF,IAAK,aACLopF,UAAU,WAIhB,CAACxpG,IAGGypG,GAAgBp0G,eACpB,WACE2K,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAYkK,YAAc9oG,EAAM4+F,WAAY,CAC1CxlG,MAAOb,GAAKiB,EAAE,iBACd+uG,gBAAiB,KACjBC,sBAAuBsB,IACvBtpF,IAAK,oBAIX,CAACjoB,GAAM6H,IAGH2pG,GAAep0E,aACnBJ,GACAL,KACA20E,IAGIG,GAA2Bv0G,eAC/B,WACEs0G,KACA/B,OAEF,CAAC+B,GAAc/B,KAGXthB,GAA8B,SAClCt+D,EACA5vB,GACI,IACIkmG,EAA+B1+F,EAA/B0+F,eAAgBE,EAAe5+F,EAAf4+F,WACxB,GAAKF,EAAL,CAEA,IAAMn7D,EAAgBnb,EAAUX,UAChC,GAAIi3E,EAAe7jB,iCAAiCt3C,GAAgB,CAElE,IAAMsJ,EAA2B6xD,EAAeuL,4BAC9C1mE,GAEIgK,EAAe0C,YAAwBz3C,GAEvC0xG,EAAWC,YACfvL,EACA/xD,GAEEq9D,GAEFA,EAAS1tD,OAAO4tD,2BACd78D,EAAal0C,KACbk0C,EAAa3H,cAEfxlC,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAYyL,YAAiBzL,EAAYsL,EAAS/uD,gBAIpDiuD,GACE7lE,EACAgK,EAAal0C,KACbk0C,EAAa3H,mBAKjB1mC,QAAQ4sB,KAAR,8BACyByX,EADzB,8CAME+mE,GAAyB,WACzBhtE,IAAgBA,GAAeI,wBACnCH,MAGIsqD,GAAyB,SAC7BtkD,EACA+I,EACAi+D,GAII,IACI7L,EAAmB1+F,EAAnB0+F,eACR,GAAKA,EAAL,CAEA8L,aAA8B,CAC5B1vG,KAAM,MACN2vG,aAAcF,IAIhB,IAAMG,GAAsBhM,EAAe7jB,iCACzCt3C,GAEInb,EAAYsiF,EACdhM,EAAeiM,kCAAkCpnE,EAAe,GAChEm7D,EAAeuL,4BAA4B1mE,GAE3CmnE,IACFtiF,EAAUwiF,YAAYrnE,GACtBnb,EAAU2iD,eACR,kEAIJ3iD,EAAUyiF,qBAAqBv+D,EAAgB,GAC/C+tC,GAA+Br6C,qCAC7B0+D,KAIEoM,GAA0Br1G,eAC9B,SAACs1G,GAAD,OAAkC,WAA2B,IAA1BrnG,IAAyB,yDAC1Dy+F,GAA0B4I,GAC1B3qG,GAAS,SAAAJ,GAAK,kCAAUA,GAAV,IAAiBy+F,iBAAkB/6F,UAEnD,CAACtD,IAKG4qG,GAAkBv1G,WACtB,kBAAMq1G,GAAwB,eAC9B,CAACA,KAEGG,GAAiBx1G,WACrB,kBAAMq1G,GAAwB,cAC9B,CAACA,KAEGI,GAAsBz1G,WAC1B,kBAAMq1G,GAAwB,oBAC9B,CAACA,KAGGK,GAAoC11G,eACxC,WAA2B,IAA1BiO,IAAyB,yDACxBtD,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZi/F,kCAAmCv7F,SAGvC,CAACtD,IAGGyjG,GAA4BpuG,eAChC,SAAC4a,GAGO,IACEquF,EAA+BruF,EAA/BquF,eAAgBE,EAAevuF,EAAfuuF,WACnBF,IAEDA,EAAeppD,mBAAqB,GACG,IAArCopD,EAAeppD,mBACjBopD,EAAe0M,gBAAgB7yG,GAAKiB,EAAE,uBAAoB,GAE5D2uG,GACEzJ,EAAenpD,YAAY,GAAG9tB,UAC9B,CACE4gF,iBAAiB,EACjBD,kBAAkB,GAEpBxJ,IAGFx+F,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ0+F,iBACAE,kBACEh+E,MAAK,WACP8+E,IAAoB,GACpBI,IAAmB,SAIzB,CAACqI,GAAY/nG,EAAU7H,KAGnB8yG,GAAyC51G,eAC7C,WACEgtG,KAA+B7hF,MAAK,SAAA0iF,GAClC,GAAKA,EAA0BgI,iBAE/B,OAAOhI,EACJgI,mBACA1qF,MAAK,SAAAukF,GACJ,GAAKA,EAEL,OAAOvB,GAAqBuB,GAAcvkF,MAAK,SAAA5gB,GACzCA,GACF6jG,GAA0B,CACxBnF,eAAgB1+F,EAAM0+F,eACtBE,WAAY5+F,EAAM4+F,mBAKzBjvE,OAAM,SAAA92B,GACL,IAAMwtG,EAAe/C,EAA0B2C,oBAC3C3C,EAA0B2C,oBAAoBptG,GAC9C,6FACJ08D,YAAa,CACX/yD,QAAS,CACPjK,GAAKiB,EAAE,oCACPjB,GAAKiB,EAAE6sG,IACP33F,KAAK,MACP+mD,QAAS,iCACTD,SAAU38D,YAKpB,CACEN,GACAkqG,GACAmB,GACAC,KAIE0H,GAAgB91G,eACpB,WAEIgC,EAAMmmG,iBAAiB18F,QACrB,qBAAGsqG,sBACHpqG,OAAS,EAEX+pG,KAEAE,OAGJ,CACE5zG,EAAMmmG,iBACNuN,GACAE,KAIE7H,GAA0C/tG,eAC9C,SACEooG,GACI,IACIsH,EAAiBtH,EAAjBsH,aACFpH,EAAkBJ,GACtBplG,GACAd,EAAMmmG,iBACNC,GAGGE,GAEL0E,GAA6B1E,GAAiBn9E,MAAK,WACjDgjF,GAAqBuB,GAClBvkF,MAAK,SAAA5gB,GACAA,GACF6jG,GAA0B,CACxBnF,eAAgB1+F,EAAM0+F,eACtBE,WAAY5+F,EAAM4+F,gBAGvBjvE,OAAM,SAAA92B,YAKb,CACEN,GACAqrG,GACAC,GACApsG,EAAMmmG,iBACN6E,KAIEgJ,GAAkCh2G,eACtC,WAA2B,IAA1BiO,IAAyB,yDACpBA,GAGFo8F,IAAmB,GAErB1/F,GAAS,SAAAJ,GAAK,kCAAUA,GAAV,IAAiBk/F,gCAAiCx7F,SAElE,CAACtD,IAGGsrG,GAAmCj2G,eACvC,WACOipG,KAELiN,YAAe3rG,EAAM4+F,YAErB6D,KAA+B7hF,MAAK,SAAA0iF,GAA8B,IACxDsI,EAAoBtI,EAApBsI,gBACHA,IAMDjM,GACFzgG,QAAQC,KAAK,yDAGfygG,IAAmB,GAEnBgM,EAAgBlN,GAAgBC,IAC7B/9E,MACC,YAAiC,IAA9BirF,EAA6B,EAA7BA,SAAU1G,EAAmB,EAAnBA,aACP0G,IACEvuE,IAAgBA,GAAe+2B,qBACnCqvC,GAAkBnrG,GAAKiB,EAAE,gCAErB2rG,IACF7uD,GAAY8uD,wBAAwB,CAClCD,eACArH,oBAAqB4E,KAAqB1E,eAG5C59F,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ2+F,oBAAqBwG,YAK7B,SAAA3vC,GACED,YAAa,CACX/yD,QAASjK,GAAKiB,EACZ,sFAEFg8D,WACAC,QAAS,6BAId9lC,OAAM,eACN/O,MAAK,kBAAMg/E,IAAmB,cAGrC,CACErnG,GACAonG,GACAjB,GACAC,GACA8D,GACAnlE,GACAl9B,EACAJ,EAAM4+F,WACN8E,GACAhB,GACApsD,KAIEw1D,GAAgBr2G,eACpB,WACOipG,IAEL+D,KAA+B7hF,MAAK,SAAA0iF,GAEhC7rG,EAAMmmG,iBAAiB18F,QACrB,qBAAG6qG,sBACH3qG,OAAS,IACVkiG,EAA0BsI,gBAE3BH,KAEAC,UAIN,CACEhN,GACA+D,GACAgJ,GACAh0G,EAAMmmG,iBACN8N,KAIEM,GAAcv2G,cAAA,sBAClB,kCAAAkT,EAAA,yDACO+1F,GADP,oDAEOC,GAFP,yCAGWmN,MAHX,uBAM0CrJ,KAN1C,UAMQa,EANR,OAOU14B,EAAkB04B,EAAlB14B,cAPV,0CASWkhC,MATX,WAYEH,YAAe3rG,EAAM4+F,YACrB8E,GAAkBnrG,GAAKiB,EAAE,oBAIrBmmG,GAjBN,wBAkBIzgG,QAAQC,KAAK,wDAlBjB,kCAqBEygG,IAAmB,GArBrB,UAwBUqM,EAAgB5wC,YAAY39D,MAxBtC,UAyB+BktE,EACzB8zB,GACAC,IA3BN,mBAyBYkN,WAMN3sG,QAAQC,KAAR,2BACsBk8D,YAAY39D,MAAQuuG,EAD1C,QAGI3uE,IAAgBA,GAAe+2B,qBACnCqvC,GAAkBnrG,GAAKiB,EAAE,iCAnC/B,mDAsCI+7D,YAAa,CACX/yD,QAASjK,GAAKiB,EACZ,sFAEFg8D,SAAQ,KACRC,QAAS,uBA3Cf,QA+CEmqC,IAAmB,GA/CrB,2DAiDA,CACED,GACAjB,GACAC,GACA8D,GACAiB,GACAnrG,GACA+kC,GACAwuE,GACA9rG,EAAM4+F,aAIJsN,GAAoBz2G,eACxB,WACE,GAAI6nC,IAAkBA,GAAe82B,kBAAmB,CACtD,IAAKsqC,GAAgB,OAAOz1F,QAAQhK,UAOpC,IALe6D,IAAOkZ,kBACpBzjB,GAAKiB,EACH,+EAGS,OAAOyP,QAAQhK,UAE9B,OAAO8lG,OAET,CAACrG,GAAgBphE,GAAgB/kC,GAAMwsG,KAYnCoH,GAAsB,SAC1BpI,GAEI,IADJ1zF,EACG,uDADerQ,EAElByhF,GAAcpxE,EAASuuF,YAGnBmF,EAAUE,WACZF,EAAUE,UAAUmI,qBAyClBp9E,GAA2C,SAC/CpvB,GAEA,OAAO,IAAIqJ,SAAQ,SAAAhK,GACjBogG,GAAyBz/F,GAIzB2/F,IADY,kBAAMtgG,SAKhBotG,GAAkB,SAACrN,GACvB5+F,GAAS,SAAAJ,GAAK,kCAAUA,GAAV,IAAiBg/F,oBAE/B,IAAMsN,EAAoBC,YAA2BvN,GAC/CwN,EAAmBC,YAA0BzN,GAC/CsN,IACmB,IAAIroF,OAAOyoF,aAAaJ,EAAmB,CAC9D3zE,KAAM6zE,IAEKG,QAAU,kBAAMnM,IAAgB,MAI3CoM,GAA0B,uCAAG,iDAAAjkG,EAAA,yDACjC1L,EADiC,EACjCA,QACA8gG,EAFiC,EAEjCA,gBACAoH,EAHiC,EAGjCA,aACA0H,EAJiC,EAIjCA,aAJiC,EAKjCC,kBALiC,gCAczB1sG,GAAS,SAAAJ,GAAK,kCAAUA,GAAV,IAAiBy+F,kBAAkB,OAdxB,WAiB7BxhG,EAjB6B,iCAiBNioG,GAAgBjoG,EAASkoG,GAjBnB,OAiBpBnlG,EAjBoB,mCAkBtBmlG,EAlBsB,kCAkBMvB,GAAqBuB,GAlB3B,QAkBRnlG,EAlBQ,kBAoB5BA,EApB4B,sDAqBzB0+F,GArByB,EAqBM1+F,GAA/B0+F,eAAgBE,EArBS,EAqBTA,WACnBF,EAtB4B,0DAwBjCA,EAAeqO,mBACfrO,EAAesO,WAAW,SACtBH,GAAanO,EAAelsE,QAAQq6E,GACxChJ,GAA0B,CACxBnF,eAAgBA,EAChBE,WAAYA,IA7BmB,UAgCkC6D,GACjE1E,GAjC+B,WAgC3BuF,EAhC2B,SAmCzB14B,EAAkB04B,EAAlB14B,iBAEau6B,EArCY,4CAuCFv6B,EAAc8zB,EAAgByG,GAvC5B,mBAuCrB0G,UAGFvuE,IAAgBA,GAAe+2B,qBA1CR,mDA8C7Bn1D,QAAQrG,MAAM,4CAAd,MA9C6B,2DAAH,sDAkEhC6hC,aACE6mE,GAAkBvpG,QACdupG,GAAkBvpG,QAAQi1G,cAC1B,cAGNC,aAAqB,CACnB30G,QACA0E,QAAS+C,EAAM0+F,eACfyO,iBACIntG,EAAM0+F,gBAAkB1+F,EAAM0+F,eAAeppD,kBAAoB,EACrE83D,qBAAsB5G,GACtB1hD,sBACAuoD,sBACI7N,GAAiBxnG,SACnBwnG,GAAiBxnG,QAAQs1G,sBAC3BC,gBAAiBxF,GACjByF,mBAAoBxF,GACpByF,qBAAsBzD,GACtB0D,uBAAwBzF,GACxB0F,eAAgB3K,GAChB4K,gBAAiB3C,GACjB4C,cAAetC,GACf3gC,cAAeohC,GACfJ,gBAAiBE,GACjBgC,WAAYxH,GACZyH,eAAgB7B,GAChB8B,aAAcv4G,eAAkB,kBAAMyrG,IAAiB,KAAO,IAC9DtZ,aAAcugB,GACdxgB,qBAAsBqhB,GACtBiF,qBAAsB/E,GACtBgF,+BAAgC9E,GAChC+E,qBAAsB5M,GAAkBvpG,QACpCupG,GAAkBvpG,QAAQ0L,KAC1B,aACJ0qG,cAAe34G,eACb,kBAAMguG,GAAyB,aAC/B,IAEF4K,qBAAsB54G,eACpB,kBAAMguG,GAAyB,qBAC/B,MAIJ,IAAM6K,GAAa7O,IAAoB0B,GAEvC,OACE,uBAAK/7F,UAAU,gBACV29F,IACDA,GAAe,CACbxqG,KAAMA,GACN0E,QAAS+C,EAAM0+F,eACf6P,gBAAiBhD,GACjBiD,iBAAkBhL,GAClB54B,cAAeohC,GACfJ,gBAAiBE,GACjBiC,eAAgB7B,GAChB4B,WAAYxH,GACZmI,gBAAiB,kBAAMvN,IAAiB,IACxC0M,gBAAiB3C,GACjBmC,qBAAsB,kBAAMtN,IAAmB,IAC/C6N,eAAgB3K,GAChB0L,eAAgB3E,GAChB4E,YAAa,kBAAMnO,IAAgB,IACnCoO,kBAAmB,kBAAM9N,IAAsB,IAC/C+N,eAAgB,kBAAM3O,IAAmB,IACzCkO,cAAe,kBAAM3K,GAAyB,YAC9C4K,qBAAsB,kBACpB5K,GAAyB,oBAC3B4I,gBAAiBA,GACjByC,mBAAoBx4D,GAAY8sD,0BAEpC,gBAAC,IAAD,CAAiB+B,aAAcxG,KAC/B,gBAAC,IAAD,CACEj7F,KAAMm8F,GACNkP,WAAY,CACVn5G,MAAO6F,GAAOiiG,cACdt4F,UAAW,kCAEb4pG,WAAY,CACVC,aAAa,GAEfzpD,QAASghD,IAET,gBAAC,IAAD,CACEnqG,MACE2D,EAAM0+F,eAAiB1+F,EAAM0+F,eAAej3E,UAAY,aAE1DynF,yBAAuB,EACvB1pD,QAASghD,KAEV9H,IACC,gBAAC,IAAD,CACEzhG,QAASyhG,GACT/W,qBAAsBqhB,GACtBphB,aAAcugB,GACd8F,qBAAsB/E,GACtBgF,+BAAgC9E,GAChC+F,mBApyCiB,SAACvpD,GAAgD,IAClE84C,EAAmB1+F,EAAnB0+F,eACR,GAAKA,EAAL,CAGA,IAAM0Q,EAA+BxpD,EAAqBvsD,KAE1D,GACEqlG,EAAe7jB,iCACbu0B,GAEF,CACA,IAAMviE,EAA2B6xD,EAAeuL,4BAC9CmF,GAGFhvG,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAYyQ,YACVrvG,EAAM4+F,WACN/xD,WAixCEyiE,eA3wCW,SAAC7jF,GAAsB,IAClCizE,EAAmB1+F,EAAnB0+F,eACAnmG,EAASd,EAATc,KACHmmG,IAEU57F,IAAOkZ,kBACpBzjB,EAAKiB,EACH,4EAKJ4G,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAY2Q,YAAgBvvG,EAAM4+F,WAAYnzE,QAC5C7K,MAAK,SAAA5gB,GACH0+F,EAAe8Q,mBAAqB/jF,EAAOhE,WAC7Ci3E,EAAe+Q,eAAe,IAChC/Q,EAAegR,aAAajkF,EAAOhE,WACnC6iF,UAyvCMqF,uBArvCmB,SAAClI,GAAsC,IAC1D/I,EAAmB1+F,EAAnB0+F,eACAnmG,EAASd,EAATc,KACHmmG,IAEU57F,IAAOkZ,kBACpBzjB,EAAKiB,EACH,sFAKJ4G,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAYgR,YAAwB5vG,EAAM4+F,WAAY6I,QACpD7mF,MAAK,SAAA5gB,GACHA,EAAM0+F,gBACR1+F,EAAM0+F,eAAemR,qBAAqBpI,EAAehgF,WAC3D6iF,UAouCMwF,iCA3sC6B,SACrCjjE,GACI,IACI6xD,EAAmB1+F,EAAnB0+F,eACAnmG,EAASd,EAATc,KACHmmG,IAEU57F,IAAOkZ,kBACpBzjB,EAAKiB,EACH,gFAKJ4G,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAYyQ,YACVrvG,EAAM4+F,WACN/xD,QAEAjsB,MAAK,SAAA5gB,GAGP,IAAMujC,EAAgBsJ,EAAyBplB,UAC/C4yD,GAA+Bl6C,sCAC7Bu+D,EACAn7D,GAGFm7D,EAAeqR,+BAA+BxsE,GAC9C+mE,KAIAjwB,GAA+Bn6C,uCAC7Bw+D,QAyqCIsR,uBAjuCmB,SAACC,GAAsC,IAC1D13G,EAASd,EAATc,KACHyH,EAAM0+F,iBAEI57F,IAAOkZ,kBACpBzjB,EAAKiB,EACH,uFAKJ4G,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAYsR,YAAwBlwG,EAAM4+F,WAAYqR,QACpDrvF,MAAK,SAAA5gB,GACHA,EAAM0+F,gBACR1+F,EAAM0+F,eAAeyR,qBAAqBF,EAAexoF,WAC3D6iF,UAitCM8F,eArqCW,SAACC,EAAiB39C,GAAqB,IAClDgsC,EAAmB1+F,EAAnB0+F,eACAnmG,EAASd,EAATc,KACR,GAAKmmG,GAEAA,EAAe6I,eAAe8I,IAAY39C,IAAY29C,EAE3D,GAAgB,KAAZ39C,EAQJ,GAAIgsC,EAAe6I,eAAe70C,GAChC49C,YAAe/3G,EAAKiB,EAAE,qDAAkD,CACtE+2G,iBAAiB,QAFrB,CAOA,IAAM9kF,EAASizE,EAAe8I,UAAU6I,GAClCG,EACJH,IAAY3R,EAAe8Q,iBAC7BpvG,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAY2Q,YAAgBvvG,EAAM4+F,WAAYnzE,QAC5C7K,MAAK,SAAA5gB,GACPyrB,EAAO+G,QAAQkgC,GACX89C,GACF9R,EAAe+Q,eAAe/8C,GAChC43C,aAxBAgG,YACE/3G,EAAKiB,EAAE,4DACP,CAAE+2G,iBAAiB,KA4pCfE,uBAloCmB,SAACJ,EAAiB39C,GAAqB,IAC1DgsC,EAAmB1+F,EAAnB0+F,eACAnmG,EAASd,EAATc,KACR,GAAKmmG,GAEAA,EAAegJ,uBAAuB2I,IAAY39C,IAAY29C,EAGnE,GAAgB,KAAZ39C,EAQJ,GAAIgsC,EAAegJ,uBAAuBh1C,GACxC49C,YACE/3G,EAAKiB,EAAE,+DACP,CAAE+2G,iBAAiB,QAHvB,CAQA,IAAM9I,EAAiB/I,EAAeiJ,kBAAkB0I,GACxDjwG,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAYgR,YAAwB5vG,EAAM4+F,WAAY6I,QACpD7mF,MAAK,SAAA5gB,GACPynG,EAAej1E,QAAQkgC,GACvB43C,aArBAgG,YACE/3G,EAAKiB,EAAE,4DACP,CAAE+2G,iBAAiB,KAwnCfG,iCA/jC6B,SAACL,EAAiB39C,GAAqB,IACpEgsC,EAAmB1+F,EAAnB0+F,eACAnmG,EAASd,EAATc,KACR,GAAKmmG,GAGFA,EAAe7jB,iCAAiCw1B,IACjD39C,IAAY29C,EAId,GAAgB,KAAZ39C,EAQJ,GAAIi+C,aAAqBj+C,EAASgsC,GAChC4R,YACE/3G,EAAKiB,EACH,6HAEF,CAAE+2G,iBAAiB,SAKvB,GAAKrmG,GAAG0mG,QAAQC,aAAan+C,GAA7B,CAUA,IAAM7lB,EAA2B6xD,EAAeuL,4BAC9CoG,GAEFjwG,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAYyQ,YACVrvG,EAAM4+F,WACN/xD,QAEAjsB,MAAK,SAAA5gB,GAGPkK,GAAG2rD,uBAAuBi7C,+BACxBpS,EACA7xD,EACAwjE,EACA39C,GAEF7lB,EAAyBra,QAAQkgC,GACjC2nB,GAA+Bl6C,sCAC7Bu+D,EACA2R,GAEFh2B,GAA+Bn6C,uCAC7Bw+D,GAEF4L,aAnCAgG,YACE/3G,EAAKiB,EACH,0IAEF,CAAE+2G,iBAAiB,SAtBrBD,YACE/3G,EAAKiB,EAAE,4DACP,CAAE+2G,iBAAiB,KAkjCfQ,uBAlmCmB,SAACV,EAAiB39C,GAAqB,IAC1DgsC,EAAmB1+F,EAAnB0+F,eACAnmG,EAASd,EAATc,KACR,GAAKmmG,GAEAA,EAAesS,uBAAuBX,IAAY39C,IAAY29C,EAGnE,GAAgB,KAAZ39C,EAQJ,GAAIgsC,EAAesS,uBAAuBt+C,GACxC49C,YACE/3G,EAAKiB,EAAE,4DACP,CAAE+2G,iBAAiB,QAHvB,CAQA,IAAMN,EAAiBvR,EAAeuS,kBAAkBZ,GACxDjwG,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAYsR,YAAwBlwG,EAAM4+F,WAAYqR,QACpDrvF,MAAK,SAAA5gB,GACPiwG,EAAez9E,QAAQkgC,GACvB43C,aArBAgG,YACE/3G,EAAKiB,EAAE,4DACP,CAAE+2G,iBAAiB,KAwlCf3lC,cAAeohC,GACfJ,gBAAiBE,GACjBiC,eAAgB,WACd7B,MAEFuC,gBAAiB,kBAAMvN,IAAiB,IACxC0N,kBAAmB,kBAAM9N,IAAsB,IAC/CsN,cAAe,kBAAM3K,GAAyB,YAC9C4K,qBAAsB,kBACpB5K,GAAyB,oBAE3ByN,gBAAiB,YA5vBL,WAAO,IACnB34G,EAASd,EAATc,KACR6H,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAYkK,YAAc9oG,EAAM4+F,WAAY,CAC1CxlG,MAAOb,EAAKiB,EAAE,kBACd+uG,gBAAiB,KACjBC,sBAAuB2I,IACvB3wF,IAAK,mBAqvBC4wF,GACAtR,IAAmB,IAErBuR,6BAA8B,kBAC5B/Q,IAAiC,IAEnChoB,qBAAsB,kBAAM0oB,IAAuB,IACnDjhE,+BAAgCA,GAChCuxE,kCAAmC,WAEjCj3B,GAA+Bn6C,uCAC7Bw+D,KAGJ6S,cAAe1R,GACfviE,eAAgBA,GAChByV,4BAA6BA,GAC7B5hB,gBAAiBA,GACjBnC,iBAAkBA,GAClB4C,wBAAyBA,MAG3B5xB,EAAM0+F,gBACN,gBAAC,IAAD,KACE,gBAAC,QAAD,kDAIN,gBAAC,IAAD,CACEhpG,IAAKguB,GACL8tF,kBAAmB/5G,EAAMkrG,iBACzB8O,aAAc/S,GACd8H,qBAAsBA,GACtBkL,cAAe,kBAAMxQ,IAAiB,IACtCyQ,cAAel6G,EAAMk6G,cACrBC,yBA1K2B,kBAC/BvF,GAAgB,CACd32E,OAAQ,oBACRlzB,QAAS,oBACTrD,KAAM,CACJ0yG,YAAa,kBAsKbC,wBAlK0B,kBAC9BzF,GAAgB,CACd32E,OAAQ,mBACRlzB,QAAS,sBAgKPksG,eAAgB1E,GAChBllD,mBAAoBA,GACpBitD,0BAA2BhK,GAC3BiK,iBAAkB/J,GAClBuF,mBAAoBxF,GACpBsF,sBACI9N,GAAiBxnG,SACnBwnG,GAAiBxnG,QAAQs1G,sBAE3B2E,mBAxiCqB,SAAC,GAIrB,IAHL7T,EAGI,EAHJA,mBACAC,EAEI,EAFJA,2BACAC,EACI,EADJA,mCAEAgD,IAAgB,SAAAD,GAAY,kCACvBA,GADuB,IAE1BjD,qBACAC,6BACAC,2CAgiCE4T,mBACIxT,IAAkBA,GAAeppD,kBAAoB,EAEzD+rD,aAAcA,KAEhB,gBAAC,IAAD,CACE8Q,aAAc16G,EAAMkrG,iBACpB/D,WAAY5+F,EAAM4+F,WAClBwT,WAAY,SAAC34G,GAAD,OApUUhB,EAoUyBgB,OAnUnD2G,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAYyL,YAAiBrqG,EAAM4+F,WAAYnmG,QAC7CmoB,MAAK,SAAA5gB,GAAK,OACZmsG,GAAoBnI,YAAchkG,EAAM4+F,YAAa5+F,MAL9B,IAACvH,GAqUtB45G,WAAY,SAACtO,GAAD,OAhTQ,SAACA,GACzB4H,YAAe3rG,EAAM4+F,YACrBx+F,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAY0T,YAAetyG,EAAM4+F,WAAYmF,QA4SLwO,CAAkBxO,IACxDyO,iBAAkB,SAACzO,GAAD,OAzSQ,SAACA,GAC/B4H,YAAe3rG,EAAM4+F,YACrBx+F,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAY6T,YAAqBzyG,EAAM4+F,WAAYmF,QAsS/C2O,CAAwB3O,IAE1B4O,WApSwB,WAC5BhH,YAAe3rG,EAAM4+F,YACrBx+F,GAAS,SAAAJ,GAAK,kCACTA,GADS,IAEZ4+F,WAAYgU,YAAmB5yG,EAAM4+F,kBAiSnCiU,aAAc,SAAC9O,GAAD,OAA0BoI,GAAoBpI,IAC5D+O,UA9RkB,SAACC,EAAmBC,GAC1C5yG,GAAS,SAAAJ,GACP,OAAO,2BACFA,GADL,IAEE4+F,WAAYqU,YACVjzG,EAAM4+F,WACNmU,EACAC,WAyRJ,gBAAC,KAAD,CACErzF,OACE3f,EAAM0+F,eAAiB1+F,EAAM0+F,eAAelnC,iBAAmB,IAGhE07C,YAAWlzG,EAAM4+F,YAAY59F,KAAI,SAAC+iG,EAAWtqG,GAC5C,IAAMitG,EAAeyM,YAAmBnzG,EAAM4+F,cAAgBnlG,EAC9D,OACE,gBAAC,IAAD,CAAqB+mB,IAAKujF,EAAUvjF,IAAK4yF,OAAQ1M,GAC/C,gBAAC,KAAD,CAA+B0M,OAAQ1M,GACrC,gBAAC,IAAD,KACG3C,EAAUyE,sBAAsB,CAC/BhsB,SAAUkqB,EACV6C,iBAAkBxF,EAAUwF,iBAC5BtsG,QAASyhG,GACThpG,IAAK,SAAAuuG,GAAS,OAAKF,EAAUE,UAAYA,GACzCld,WAAY,SAAA0f,GAAa,OACvBvC,GAAiBuC,EAAeC,IAClCpuB,qBAAsB,kBAAM0oB,IAAuB,IACnDuH,gBAAiBxE,EAAUwE,gBAC3B5B,sBACAhf,qBAAsBqhB,GACtBqK,aAAc,SAAC3mB,GAAD,OACZyb,GAAWzb,EAAW,CACpB0b,kBAAkB,EAClBC,iBAAiB,KAErB5G,yBACA1uD,+BACA60C,aAAc,SAAAvuF,GAAI,OAChB8uG,GAAW9uG,EAAM,CACf+uG,kBAAkB,EAClBC,iBAAiB,KAErBl3E,gBAAiB15B,EAAM05B,gBACvBnC,oBACA4C,2BACAi2D,0BACAnB,+BACAppD,eAAgBA,GAChBg2E,UAAW77G,EAAMmmG,iBAAiB18F,QAChC,qBAAGsqG,sBACHpqG,OACFisE,OAAQ,kBAAMk+B,MACdiD,iBAAkBhL,GAClBlB,+BAAgCA,GAChCC,cAAeA,GACfqK,2BAA4BA,GAC5BQ,qBAAsB,kBAAMtN,IAAmB,IAC/CiO,eAAgB,kBAAM7B,MACtBlB,gBAAiB,kBAAMA,MACvBE,oBAAqB,kBAAMA,MAC3BD,eAAgB,kBAAMA,MACtBmD,cAAe,kBAAM3K,GAAyB,YAC9C8P,iBAAkB,kBAAMnT,IAAqB,IAC7CoT,qBAAsB,kBAAMtT,IAAmB,IAC/CuT,gCAAiC,kBAC/Bp5B,GAA+Br6C,qCAC7B0+D,KAEJgV,iBAAkB,SAChBrkF,EACA20D,GAGAA,GAAG,IAEL2vB,iBAAkB,SAChBtkF,EACAqjC,EACAsxB,GAEI0a,IACFvqE,aAAyBuqE,GAAgB,CACvC,CAACrvE,EAAS5H,WAAYirC,IAG1BsxB,GAAG,aASnB,gBAAC,KAAD,CAAgBtuF,IAAK6rG,KACrB,gBAAC,IAAD,CAAanrD,KAAMk4D,KACnB,gBAAC,IAAD,CACE5qG,KAAMy8F,GACN36C,QAAS,kBAAM46C,IAAqB,MAEtC,gBAAC,IAAD,CACE18F,KAAM1D,EAAM++F,iBACZ6U,iBAAkB,IAClBpuD,QAASm+C,GACTkQ,aAAc,CACZ,mBAAoB,oBAEtBrxG,QAAS,wBAAM/I,GAAG,oBAAoBuG,EAAM8+F,kBAE3CsD,IACDnB,IACAmB,GAAmB,CACjB58C,QAAS,kBAAM07C,IAAiB,IAChC5oB,qBAAsB,WACpB4oB,IAAiB,GACjBF,IAAuB,IAEzB/jG,QAAS+C,EAAM0+F,eACf9zB,cAAeohC,OAEhB3J,IACDriG,EAAMy+F,kBACN4D,GAAmB,CACjB3+F,KAAM1D,EAAMy+F,iBACZ3mC,WAAYoqC,GACZ18C,QA1xBkB,WACxBplD,GAAS,SAAAJ,GAAK,kCAAUA,GAAV,IAAiBy+F,kBAAkB,QA0xB3CpxB,OAAQu/B,OAET/J,IACD9C,IACAtqG,eAAmBotG,GAAa,CAC9Bn/F,MAAM,EACN8hD,QAAS,kBAAMw6C,IAAgB,QAEhCtB,IAAkB2B,IACnB,gBAAC,IAAD,CACEpjG,QAASyhG,GACTh7F,MAAI,EACJ0a,QAAS,kBAAMkiF,IAAiC,IAChD96C,QAAS,kBAAM86C,IAAiC,IAChDnvE,gBAAiBA,GACjBnC,iBAAkBA,GAClB4C,wBAAyBA,OAG1B4wE,IACDA,GACE,CACEjiE,oBACEihE,GAAiCjhE,oBACnCuzE,SAAU,kBAAM5S,IAAiB,IACjC5oB,qBAAsB,kBAAM0oB,IAAuB,MAErD,SAACoG,GACC5H,GAAiBxnG,QAAUovG,OAG9B1I,IAAkBU,IAAyBE,IAC5C,gBAAC,KAAD,CACEriG,QAASyhG,GACTnmG,KAAMA,GACN44B,gBAAiBA,GACjB4iF,kBAAmB,SAAA3kF,GACjBmwE,GAAoB,MACpBF,GAAyB,MACzBC,GAAiBlwE,IAEnBo2B,QAAS,WACP+5C,GAAoB,MACpBF,GAAyB,MACzBC,GAAiB,KAEnB1/F,QAASw/F,KAGZuB,IACC,gBAAC,IAAD,CACEjC,eAAgBA,GAChB5mC,WAAY2oC,GACZ/8F,MAAI,EACJ8hD,QAAS,kBAAMo7C,IAAkB,IACjCtoB,qBAAsB,kBAAM0oB,IAAuB,MAGtDD,IACC,gBAAC,IAAD,CACEv7C,QAAS,WACPw7C,IAAuB,IAEzBt9F,MAAI,IAGPm9F,IACC,gBAAC,IAAD,CACEtoG,KAAMd,EAAMc,KACZitD,QAAS,SAAAwuD,GACPlT,IAAsB,GAClBkT,GAAiB7P,QAI1BlE,IACC,gBAAC,IAAD,CACEv8F,MAAI,EACJ8hD,QAAS,SAAAwuD,GACP9T,IAAmB,GACf8T,GAAiB7P,QAI1B5D,IACC,gBAAC,IAAD,CACE78F,MAAI,EACJ8hD,QAAS,kBAAMg7C,IAAgB,IAC/BxB,aAAcA,KAGjBh/F,EAAMi/F,mCACL,gBAAC,IAAD,CACEz5C,QAAS,kBAAM2lD,IAAkC,IACjDvN,iBAAkBnmG,EAAMmmG,iBACxBqW,iBAAkB,SAAAlW,GAChBoN,IAAkC,GAClC1zG,EAAMgrG,6BAA6B1E,GAAiBn9E,MAAK,WACvDyqF,WAKPrrG,EAAMk/F,iCACL,gBAAC,IAAD,CACE15C,QAAS,kBAAMimD,IAAgC,IAC/C7N,iBAAkBnmG,EAAMmmG,iBACxBqW,iBAAkB,SAAAlW,GAChB0N,IAAgC,GAChCh0G,EAAMgrG,6BAA6B1E,GAAiBn9E,MAAK,WACvD8qF,WAKPzJ,KACApI,KACD,gBAAC,IAAD,CACEqa,eAAgBl0G,EAAM0+F,eACtBnmG,KAAMd,EAAMc,KACZ47G,SAAU18G,EAAMc,KAAK47G,SACrB//C,oBAAqB92B,IAAkBA,GAAe82B,oBAExD,gBAAC,IAAD,MACA,gBAAC,KAAD,MACCp0D,EAAMm/F,+BACL2D,IACAA,OACCjB,GAAczgG,QACf,gBAAC,KAAD,CACEgzG,KAAMvS,GACNr8C,QAASs8C,GACTuS,mBAAoB,WAClBvS,KACAiG,Y,yICt3ENuM,E,OAAmBC,EAAgBrzG,QAPX,SAAAszG,GAC5B,MAAoC,OAAhCA,EAAeC,eACiB,kBAAhCD,EAAeC,cAAyC3xG,IAAO4xG,YAM/DC,EAAsBL,EAAiBpzG,QAC3C,SAAAszG,GAAc,OAAIA,EAAeI,iBAAmB,MAEhDC,EAAiBP,EAAiBpzG,QACtC,SAAAszG,GAAc,OAAIA,EAAeI,iBAAmB,MAGhDE,EAA6B,SAAAN,GACjC,IAAMI,EAAmBJ,EAAeI,kBAAoB,EACtDG,GAAW,IAAMP,EAAeI,kBAAkBj5C,QAAQ,GAC1Dq5C,EAAYJ,EAAmB,EAErC,OACE,kBAAC,IAAD,CACEn8G,MAAO+7G,EAAeC,aACtB/yG,YAAW,UAAK8yG,EAAeS,mBAApB,aACTT,EAAeU,aADN,YAEPF,EAAS,cAAUD,EAAV,KAAuB,IACpCh8G,UAAWi8G,EACXx0F,IAAKg0F,EAAeC,gBA2CXU,IAtCU,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,kBAA+B,EACzBj5F,qBAAWqe,KAAnC3e,EADiD,EACjDA,OAAQw5F,EADyC,EACzCA,YAEhB,OACE,kBAAC,IAAD,CAAQp/G,UAAQ,GACd,kBAAC,IAAD,CAAMsM,QAAM,GACV,kBAAC,IAAD,CACE3K,kBAAmB,kBAAC,QAAD,iCACnBa,MAAOojB,EAAOs4F,SACdh8G,SAAU,SAACuU,EAAG1V,EAAGyB,GACf48G,EAAY58G,GACZ28G,EAAkB38G,IAEpBqB,WAAS,GAET,kBAAC,IAAD,CAAcrB,MAAM,KAAKiJ,YAAY,sBACpCizG,EAAoB3zG,KAAI,SAAAwzG,GAAc,OACrCM,EAA2BN,MAE5BK,EAAe7zG,KAAI,SAAAwzG,GAAc,OAChCM,EAA2BN,QAIjC,kBAAC,IAAD,CAAMjyG,QAAM,GACV,kBAAC,IAAD,CACE0C,SAAO,EACP7L,MAAO,kBAAC,QAAD,8CACPsB,QAAS,kBACPoI,IAAOC,gBAAgB,yCAEzBjJ,WAAS,Q,+BC9EnB,0KAcO,IAAMyyG,EAA6B,SAACvN,GACzC,MAA4B,qBAAxBA,EAAatpE,OACR,6BAEF,IAGI+2E,EAA4B,SAACzN,GACxC,MAA4B,qBAAxBA,EAAatpE,OACR,iGAEF,IAGI4/E,EAAuB,SAAC5/E,GACnC,MAAe,wBAAXA,EAAyC,yBAC9B,qBAAXA,EAAsC,6BAC3B,yBAAXA,EACK,wDACM,UAAXA,EAA2B,8BAChB,sBAAXA,EACK,sCACM,sBAAXA,EACK,sEACF,IAGI6/E,EAAuB,SAAC7/E,GACnC,MAAe,qBAAXA,EAAsC,oCACnC,+BAGI8/E,EAAoB,SAAC9/E,GAChC,MAAkB,qBAAXA,I,6BC/CT,gEA4Be,aAACj+B,GAAsB,IAC5BkL,EAAiBlL,EAAjBkL,aACR,OAAKA,EAGH,kBAAC,IAAD,CACEjI,QAAS,kBAAMoI,IAAOC,gBAAgBF,YAAYF,KAClD5J,SAAUtB,EAAMsB,SAChBnD,MAAO6B,EAAM7B,MACbC,KAAM4B,EAAM5B,MAEZ,kBAAC,IAAD,OATsB,O,8BC9B5B,iGAWa4/G,EAAc,SAACh+G,GAC1B,OACE,gBAAC,IAAD,CACEiD,QAASjD,EAAMiD,QACfgH,YAAa,gBAAC,IAAD,KAAiBjK,EAAMiK,aACpCwE,gBAAc,EACdzM,GAAIhC,EAAMgC,MAKHi8G,EAAiB,SAACj+G,GAC7B,OACE,gBAAC,IAAD,CACEiD,QAASjD,EAAMiD,QACfgH,YAAa,gBAAC,IAAD,KAAiBjK,EAAMiK,aACpCyE,mBAAiB,EACjB1M,GAAIhC,EAAMgC,O,iCC7BhB,6BAGehE,QAAMymB,MAAK,SAAAzkB,GAAK,OAC7B,kBAAC,IAAYA,EACX,0BAAMoyE,EAAE,kN,kCCJZ,kDAAM3/D,EAAkBC,EAAOD,GAElBoqB,EAAyB,SAAC7pB,GAGrC,IAAMzJ,EAAM,IAAIkJ,EAAGmkC,gBACnB,IAAK,IAAI7tB,KAAO/V,EACdzJ,EAAIwtC,IAAIhuB,EAAK/V,EAAO+V,IAGtB,OAAOxf,K,+NCWH20G,EAAmB,CACvB,gBAAiB,CACfC,uBAAwB,SAACn2F,GAAD,OAAkB,KAC1Co2F,oBACE,6DAEJ,iBAAkB,CAChBD,uBAAwB,SAACn2F,GAAD,OACtB,GAAK,KAAOA,EAAMuB,QAAUvB,EAAMuB,QAAQ5f,OAAS,IACrDy0G,oBAAqB,IAEvB,YAAa,CACXD,uBAAwB,SAACn2F,GAAD,OAAkB,GAC1Co2F,oBAAqB,KAInBC,EAAkB,CACtB,CACE1kF,YAAa,sBACb5Q,IAAK,UAEP,CACE4Q,YAAa,qCACb5Q,IAAK,UAEP,CACE4Q,YAAa,qBACb5Q,IAAK,iBAEP,CACE4Q,YAAa,qBACb5Q,IAAK,iBAEP,CACE4Q,YAAa,mBACb5Q,IAAK,eAEP,CACE4Q,YAAa,wBACb5Q,IAAK,oBAEP,CACE4Q,YAAa,YACb5Q,IAAK,UAgBM,gBAMD,IALZf,EAKW,EALXA,MACAiF,EAIW,EAJXA,KACAqzC,EAGW,EAHXA,cACAg+C,EAEW,EAFXA,aACAC,EACW,EADXA,gBACW,EACiCvgH,aAC1C2T,KADMJ,EADG,EACHA,uBAAwBhB,EADrB,EACqBA,QAG1BiuG,EAASN,EAAiBl2F,EAAMjnB,MAChC09G,EAAgBD,EAAOL,uBAAuBn2F,GAC9C02F,EAAyB7nG,KAAK2iC,IAClCmlE,YAAoB32F,EAAM42F,UAAW54G,KAAKC,QAEtC44G,EAAyBJ,EAAgBC,EACzCI,EAA6BD,EAAyB,EACtDE,GACHD,GAA8BD,IAA2BJ,EACtDO,GACHF,GAA8BD,GAA0BJ,EAErDQ,EAAa,SAACl2F,GAClB,IAAMpjB,EAAMoiB,YAAoBC,EAAOe,GACnCpjB,GAAK0F,IAAOC,gBAAgB3F,IAG5Bu5G,EAAsBlhH,cAAA,uCAC1B,WAAOsqB,GAAP,iBAAApX,EAAA,yDACOX,GAAY0c,GAASqzC,GAAkBi+C,EAD9C,wDAGUv8G,EAAOuO,EAAPvO,GAHV,SAKIu8G,GAAgB,GALpB,SAM8BnwF,YACxB7c,EACAvP,EACAirB,EAAKjrB,GACL,CACEssB,iBAAkBhG,IAX1B,OAMUi4C,EANV,OAcID,EAAcC,GACdg+C,GAAgB,GAfpB,kDAiBI92G,QAAQrG,MAAM,4BAAd,MACAm9G,GAAgB,GAlBpB,0DAD0B,sDAsB1B,CAACtxF,EAAM1b,EAAwBhB,EAAS+vD,EAAei+C,IAGnD/oC,EAAmBvoD,GAAQA,EAAKqB,mBAAqBtG,EAAMhmB,GAEjE,OACE,gBAAC,OAAD,MACG,gBAAGlB,EAAH,EAAGA,KAAH,MACkB,UAAjBknB,EAAMiW,OACJ,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAMh6B,WAAW,SAASC,eAAe,YACvC,gBAAC,IAAD,KACE,gBAAC,QAAD,qCAEF,gBAAC,IAAD,MACA,gBAAC,IAAD,CACEvC,MAAO,gBAAC,QAAD,iBACPsB,QAAS,kBAAMg8G,EAAW,eAG9B,gBAAC,IAAD,CAAMh7G,WAAW,SAASC,eAAe,YACvC,gBAAC,IAAD,CAAc/F,MAAO,CAAE+F,eAAgB,aACrC,gBAAC,QAAD,uGAOa,YAAjB8jB,EAAMiW,OACR,gCACE,gBAAC,IAAD,CAAMh6B,WAAW,SAAS6G,QAAM,EAAC5G,eAAe,WAC5C46G,GAA8BC,IAC9B,gCACE,gBAAC,IAAD,CACE5gH,MAAO,CAAEsF,KAAM,GACfzC,MACE89G,GACML,EAAgBI,GAChBJ,EACF,IACA,EAEN9/G,QACEmgH,EACI,cACA,kBAGR,gBAAC,IAAD,OAGHA,GACC,gBAAC,IAAD,KACE,gBAAC,QAAD,8BACIjoG,KAAK0H,MAAMsgG,EAAyB,QAI3CE,GACC,gBAAC,IAAD,KACE,gBAAC,QAAD,8BAILC,GACC,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAM96G,eAAe,YACnB,gBAAC,IAAD,KACE,gBAAC,QAAD,sCAGJ,gBAAC,IAAD,CAAMA,eAAe,YACnB,gBAAC,IAAD,CAAc/F,MAAO,CAAE+F,eAAgB,aACrC,gBAAC,QAAD,qEAQS,aAAjB8jB,EAAMiW,OACR,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAMnzB,QAAM,EAAC5G,eAAe,YACzB+oB,KAAUjF,EAAMm3F,QAAU3pC,GACzB,gBAAC,IAAD,CACE7zE,MAAO,gBAAC,QAAD,uCACPsB,QAAS,kBAAMi8G,EAAoBl3F,EAAMhmB,KACzCV,SAAUg9G,IAGbrxF,KAAUjF,EAAMm3F,OAAS3pC,GACxB,gBAAC,IAAD,CACE7zE,MAAO,gBAAC,QAAD,2CACPsB,QAAS,kBAAMi8G,EAAoB,OACnC59G,SAAUg9G,IAGd,gBAAC,IAAD,MACCD,EACE50G,QAAO,SAAA2D,GAAM,QAAM4a,EAAM5a,EAAO2b,QAChCxf,KAAI,SAAA6D,GAAM,OACT,gBAAC,WAAD,CAAgB2b,IAAK3b,EAAO2b,KAC1B,gBAAC,IAAD,CACEpnB,MAAOb,EAAKiB,EAAEqL,EAAOusB,aACrBnsB,SAAO,EACPvK,QAAS,kBAAMg8G,EAAW7xG,EAAO2b,QAEnC,gBAAC,IAAD,UAGN,gBAAC,IAAD,CACEpnB,MAAO,gBAAC,QAAD,iBACPsB,QAAS,kBAAMg8G,EAAW,eAG7BT,GAAUA,EAAOJ,qBAChB,gBAAC,IAAD,CAAMtzG,QAAM,EAAC5G,eAAe,YAC1B,gBAAC,IAAD,KAAOs6G,EAAOJ,uBAKpB,gBAAC,IAAD,KACE,gBAAC,QAAD,6B,6BChQZ,6BAGepgH,QAAMymB,MAAK,SAAAzkB,GAAK,OAC7B,kBAAC,IAAYA,EACX,0BAAMoyE,EAAE,yf,8HCISgtC,E,4DACnBC,gBAAyC,G,KACzCC,cAAgB,E,KA2ChBC,W,uCAAa,WAAOj3F,EAAiBk3F,GAAxB,uBAAAtuG,EAAA,sDACLuuG,EAAY,EAAKH,cAAcznG,WACrC,EAAKynG,gBAEL,EAAKD,gBAAgBI,IAAa,EAE9Bz3F,EAAQ,KAND,UAQJ,EAAK8V,kBARD,sDAUwC,EAAKA,kBAA9CvsB,EAVC,EAUDA,uBAAwBjB,EAVvB,EAUuBA,aAVvB,iEAcP7I,QAAQC,KAAR,qCAA2C4gB,EAA3C,QAdO,UAeOgC,YACZ/Y,EACAjB,EAAaytB,IACbzV,GAlBK,QAePN,EAfO,OAoBH,EAAK03F,gBAAgB,EAAKA,eAAe13F,GApBtC,kDAsBPvgB,QAAQ4sB,KAAK,uCAAb,MAtBO,yBAyBHo6E,YAAM+Q,GAzBH,WA0BJ,EAAKH,gBAAgBI,GA1BjB,wBA2BPh4G,QAAQC,KAAR,kCAAwC4gB,EAAxC,MA3BO,8BA8BFN,GAA0B,YAAjBA,EAAMiW,OA9Bb,wBAgCXx2B,QAAQC,KAAR,yBAA+B4gB,EAA/B,eAhCW,0D,6GA/BT,IAAD,OAPDwV,EAOC,EAPDA,kBACA6hF,EAMC,EANDA,OACAD,EAKC,EALDA,eAMAp/G,KAAKs/G,OACLt/G,KAAKw9B,kBAAoBA,EACzBx9B,KAAKo/G,eAAiBA,EAEtBC,EAAOr5G,SAAQ,SAAA0hB,GACQ,YAAjBA,EAAMiW,WAEJjW,EAAMouD,WACNpuD,EAAMouD,UAAYpwE,KAAKC,MAzBL,SA0BlB+hB,EAAM42F,WACN52F,EAAM42F,UAAY54G,KAAKC,MA3BL,MA6BpBwB,QAAQC,KACN,iEACAsgB,GAGF,EAAKu3F,WACHv3F,EAAMhmB,GACN29G,EAAOh2G,OAAS,EArCP,IADJ,Y,6BA8CbrJ,KAAK++G,gBAAkB,O,mCClD3B,kCAAO,IAAM5Q,EAAQ,SAACoR,GAAD,OACnB,IAAIruG,SAAQ,SAAAsuG,GAAG,OAAI3mG,WAAW2mG,EAAKD,Q,kNCqCxBtrC,EAAiC,SAC5C/uE,EACAu6G,GAEA,IAAMviD,EAAI,SAAAr1B,GAAG,OAAIA,GACTvmC,EAA6Cm+G,EAA7Cn+G,KAAM4xE,EAAuCusC,EAAvCvsC,UAAWv3D,EAA4B8jG,EAA5B9jG,YAAaoS,EAAe0xF,EAAf1xF,WACtC7oB,EAAQu1B,QAAQn5B,GAChB,IAAMo+G,EAAoBx6G,EAAQ4tE,gBAClC4sC,EAAkBxuE,QAClBnjB,EAAW/nB,SAAQ,SAAAymB,GAAQ,OAAIizF,EAAkBrtE,UAAU5lB,MAC3DvnB,EAAQ8tE,eAAer3D,GACvB,IAAMgkG,EAAmBz6G,EAAQ+tE,eAQjC,OAPA0sC,EAAiBzuE,QACjBgiC,EAAUltE,SAAQ,SAAA+4C,GAAQ,OAAI4gE,EAAiBttE,UAAU0M,MACzD75C,EAAQmuE,wBAAwBosC,EAAcxxF,kBAC9C/oB,EAAQquE,uBAAuBksC,EAAcvxF,iBAC7ChpB,EAAQuuE,sBAAsBgsC,EAActxF,gBAC5CjpB,EAAQ2uE,eAAe4rC,EAAcrxF,aAE9BmvC,YAAwBL,EAAGD,YAA2BC,EAAGh4D,KAWrD06G,EAA6B,SAAC,GAM7B,IALZ16G,EAKW,EALXA,QACA26G,EAIW,EAJXA,WACApyD,EAGW,EAHXA,QACApnC,EAEW,EAFXA,QACAuW,EACW,EADXA,UAEQ3sB,EAAYvS,IAAM0mB,WAAW/S,KAA7BpB,QAEF6vG,EAAsBD,EAAWhgB,QAAQ52F,KAAI,SAAA46F,GAAM,OAAIA,EAAOniG,MAC9Dq+G,EAAqBF,EAAWG,OAAO/2G,KAAI,SAAAg3G,GAAK,OAAIA,EAAMv+G,MAJrD,EAKahE,IAAMooB,SAAS+5F,EAAWjyF,UALvC,mBAKJtsB,EALI,KAKEm5B,EALF,OAMyB/8B,IAAMooB,SAAS+5F,EAAW9xF,YANnD,mBAMJA,EANI,KAMQglD,EANR,OAO2Br1E,IAAMooB,SAAS+5F,EAAWlkG,aAPrD,mBAOJA,EAPI,KAOSq3D,EAPT,OAQuBt1E,IAAMooB,SACtCg6F,GATS,mBAQJ5sC,EARI,KAQOC,EARP,OAWqBz1E,IAAMooB,SAAmBi6F,GAX9C,mBAWJ7iC,EAXI,KAWMD,EAXN,OAYyCv/E,IAAMooB,SACxD+5F,EAAW5xF,kBAbF,mBAYJA,EAZI,KAYcolD,EAZd,OAeuC31E,IAAMooB,SACtD+5F,EAAW3xF,iBAhBF,mBAeJA,EAfI,KAeaqlD,EAfb,OAkBqC71E,IAAMooB,SACpD+5F,EAAW1xF,gBAnBF,mBAkBJA,EAlBI,KAkBYslD,EAlBZ,OAqB2B/1E,IAAMooB,SAAS+5F,EAAWzxF,aArBrD,mBAqBJA,GArBI,KAqBSylD,GArBT,QAsBqBn2E,IAAMooB,SACpC+5F,EAAWjxF,UAAa3e,GAAWA,EAAQ6c,UAAa,IAvB/C,qBAsBJ8B,GAtBI,MAsBM8kD,GAtBN,SAyBqBh2E,IAAMooB,SACpC+5F,EAAW9yF,UAAY4mD,YAAgBksC,EAAWjyF,WA1BzC,qBAyBJb,GAzBI,MAyBM4B,GAzBN,SA4B6BjxB,IAAMooB,SAC5C+5F,EAAWvxF,cA7BF,qBA4BJA,GA5BI,MA4BUwlD,GA5BV,MAgCLosC,GAAM,uCAAG,sBAAAtvG,EAAA,0DAEXqjE,EAA+B/uE,EAAS,CACtC5D,OACAysB,WAAYA,GAAc,GAC1BpS,YAAaA,GAAe,GAC5Bu3D,YACAjlD,mBAAoBA,EACpBC,kBAAmBA,EACnBC,iBAAkBA,EAClBC,YAAaA,IAAe,YAVnB,gCAaL/H,EAAQ,CAAE62D,WAAUtuD,YAAU7B,YAAUuB,kBAbnC,2CAAH,qDAiBN+sB,GAAU,CACd,kBAAC,IAAD,CACEh6C,MAAO,kBAAC,QAAD,aACPonB,IAAI,OACJvb,SAAS,EACTvK,QAAS8qD,EACTzsD,SAAU47B,IAEZ,kBAAC,IAAD,CACEv7B,MAAO,kBAAC,QAAD,aACP6L,SAAO,EACPvK,QAASu9G,GACTz3F,IAAI,OACJznB,SAAU47B,KAId,OACE,kBAAC,IAAD,CACEt4B,MAAO,kBAAC,QAAD,kBACPsZ,eAAgB6vC,EAChBpS,QAASA,GACTE,mBAAmB,EACnB5vC,MAAI,GAEJ,kBAAC,IAAD,CACErK,KAAMA,EACNm5B,QAASA,EACT1M,WAAYA,EACZglD,cAAeA,EACfp3D,YAAaA,EACbq3D,eAAgBA,EAChB9tE,QAASA,EACTguE,UAAWA,EACXC,aAAcA,EACd+J,SAAUA,EACVD,YAAaA,EACb5J,wBAAyBA,EACzBplD,iBAAkBA,EAClBslD,uBAAwBA,EACxBrlD,gBAAiBA,EACjBulD,sBAAuBA,EACvBtlD,eAAgBA,EAChB0lD,eAAgBA,GAChBzlD,YAAaA,GACbslD,YAAaA,GACb9kD,SAAUA,GACVD,YAAaA,GACb5B,SAAUA,GACV+mD,gBAAiBA,GACjBxlD,aAAcA,GACd8lD,kBAAgB,EAChB/lD,aAAcwxF,EAAWxxF,kB,6ICzJ3B8xF,EAAkB,SAACr/G,GACvB,GAAIA,EAAO,MAAO,6BAGPs/G,EAAoB,SAAC,GAKpB,IAJZ9iC,EAIW,EAJXA,QACAl9E,EAGW,EAHXA,SACAP,EAEW,EAFXA,kBACAQ,EACW,EADXA,WAEMmlC,EAAcC,cADT,EAEe/nC,WAA0C,IAFzD,mBAEJ2iH,EAFI,KAEGC,EAFH,OAGuBx6F,mBAAS,IAHhC,mBAGJy6F,EAHI,KAGOC,EAHP,OAImB16F,oBAAS,GAJ5B,mBAIJ26F,EAJI,KAIKC,EAJL,OAQPhjH,WAA+C,IARxC,mBAMTijH,EANS,KAOTC,EAPS,OASeljH,WAAe,MAT9B,mBASJoD,EATI,KASG89D,EATH,KAYLiiD,EAA2BC,YAAW,sBAAC,4BAAAlwG,EAAA,yDAC3CguD,EAAS,MACJ2hD,EAFsC,uBAGzCK,EAAgC,IAHS,0CAOzCF,GAAW,GAP8B,SAQRjjC,YAC/B8iC,GATuC,OAQnCQ,EARmC,OAWzCH,EAAgCG,GAXS,kDAazCniD,EAAS,EAAD,IACRz3D,QAAQrG,MAAM,6BAAd,MAdyC,yBAgBzC4/G,GAAW,GAhB8B,6EAkB1C,KAGHhjH,aACE,WACEmjH,MAEF,CAACA,EAA0BN,IAI7B,IAAMS,EAAuCtjH,cAAA,sBAC3C,4BAAAkT,EAAA,yDACEguD,EAAS,MACJ0e,EAAQj0E,OAFf,uBAGIi3G,EAAS,IAHb,0CAOII,GAAW,GAPf,SAQ0C9iC,YACpCN,GATN,OAQU2jC,EARV,OAWIX,EACEhjC,EACGr0E,KAAI,SAAA+f,GACH,IAAMk4F,EACJD,EAAwBj4F,GAC1B,OAAOk4F,EACH,CACE/4G,KAAM+4G,EAAkBp0F,UAAY,gBACpCpsB,MAAOwgH,EAAkBx/G,IAE3B,QAELyH,OAAO0R,UAvBhB,kDA0BI+jD,EAAS,EAAD,IACRz3D,QAAQrG,MAAM,6BAAd,MA3BJ,yBA6BI4/G,GAAW,GA7Bf,6EAgCA,CAACpjC,IAWH,OAPA5/E,aACE,WACEsjH,MAEF,CAACA,IAID,gBAAC,IAAD,CACEx/G,SAAU,+BACV3B,kBAAmBA,EACnBQ,WAAYA,EACZK,MAAO2/G,EACPjgH,SAAU,SAACQ,EAAOkjB,GACXA,IAELw8F,EAASx8F,GAET1jB,EAAS0jB,EAAO7a,KAAI,SAAA2Y,GAAM,OAAIA,EAAOlhB,UACrC8kC,MAEF/jB,WAAY8+F,EACZ7+F,cAAe,SAAC9gB,EAAOF,GACrB8/G,EAAa9/G,IAEf6lB,WAAYo6F,EACT13G,KAAI,SAACi4G,GACJ,OAAIA,EAAkBp0F,UAAYo0F,EAAkBx/G,GAC3C,CACLyG,KAAM+4G,EAAkBp0F,SACxBpsB,MAAOwgH,EAAkBx/G,IAItB,QAERyH,OAAO0R,SACV4lG,QAASA,EACT1+G,WAAS,EACTjB,MAAOq/G,EAAgBr/G,O,6BCpJ7B,wEASaggH,EAAc,SAAC70B,EAASkiB,GACnC,IAIM3wB,EAAYD,cACZ4jC,EAAY7qD,iBAAO,CAAE21B,KAAIkiB,UAI/B,OAHA5iD,qBAAU,WACR41D,EAAUlhH,QAAU,CAAEgsF,KAAIkiB,YAErBziD,sBACL1xC,KACE,WAAmB,IAAD,EACZmnG,EAAUlhH,QAAQkuG,QAAUA,GAAS3wB,EAAUv9E,UACjD,EAAAkhH,EAAUlhH,SAAQgsF,GAAlB,qBAEJkiB,EAfY,CACdiT,SAAS,EACTC,UAAU,IAgBV,CAAClT,EAAOn0F,Q,6GCfNtW,EAAS,CACbmnD,KAAM,CAEJhhD,OAAQ,KAoBG,SAASy3G,EAAgC5hH,GACtD,OACE,gBAAC,OAAD,MACG,gBAAGc,EAAH,EAAGA,KAAH,OACC,gBAAC,IAAD,CACE+gH,UAAQ,EACR7gH,MAAOhB,EAAMgB,MACbN,SAAUV,EAAMU,SAChBqhB,WAAY/hB,EAAM+hB,WAClBC,cAAehiB,EAAMgiB,cACrB7Z,QAASnI,EAAM6mB,WACfE,eAAgB,SAAC7E,GAAD,OAAgCA,EAAOzZ,MACvDqe,kBAAmB,SAAC5E,GAAD,QACfliB,EAAMgB,MAAMqiC,MACZ,SAAAz2B,GAAO,OAAIA,GAAWA,EAAQ5L,QAAUkhB,EAAOlhB,UAEhDhB,EAAM29E,cAAgB39E,EAAMgB,MAAM2I,QAAU3J,EAAM29E,cAErDmkC,kBAAmB,SAAC5/F,EAAQlhB,GAAT,OAAmBkhB,EAAOlhB,QAAUA,EAAMA,OAC7D+/G,QAAS/gH,EAAM+gH,QACf5+F,YAAa,SAAAC,GAAM,OACjB,gBAAC,IAAD,iBACMA,EADN,CAEE9f,WAAU,2BACL8f,EAAO9f,YADF,IAERT,YAAa7B,EAAM8B,UAAYhB,EAAKiB,EAAE/B,EAAM8B,YAE9CH,MAAO3B,EAAMG,kBACbQ,WAAYX,EAAMoB,OAASpB,EAAMW,WACjChC,QAAQ,SACRyC,QAASpB,EAAMoB,MACfE,SAAUtB,EAAM+gH,YAGpB1+G,UAAWrC,EAAMqC,UACjBf,SAAUtB,EAAM+gH,QAChBgB,UAAW,CACT5jH,MAAO6F,EAAOmnD,a,2GCpEpBnnD,EACG,CACLlF,QAAS,QACTkjH,UAAW,SAHTh+G,EAKO,CAETR,MAAO,IACP2G,OAAQ,KASC83G,EAAgB,SAAC,GAAD,IAAGtzF,EAAH,EAAGA,aAAcT,EAAjB,EAAiBA,SAAjB,OAC3BS,EACE,uBACE1K,IAAK0K,EACLxwB,MAAK,2BACA6F,GACAA,GAELqhB,IAAK6I,EACLtpB,MAAOspB,IAGT,gBAAC,IAAD,CACEvvB,QAAQ,WACRR,MAAK,2BACA6F,GADA,IAEHo4C,WAAY,SACZt9C,QAAS,UAGX,gBAAC,IAAD,KACE,gBAAC,QAAD,6B,yGCjBFojH,EAA+B,SAAC7iC,GAAD,MACQ,kBAA3CA,EAAY8iC,4BAuBRC,EAAU,SAAC75G,EAAqBy2C,GACpC,OAAQA,EAAOj+C,MACb,IAAK,mBACH,IAAM0gE,EAAeziB,EAAOshC,QAC5B,IAAK7e,EACH,OAAO,2BACFl5D,GADL,IAEE85G,kBAAmB,KACnBC,qBAAsB,KACtB5gD,mBAAoB,OAGxB,IAAM2gD,EAAoB5gD,EAAaie,QAAO,SAACC,EAAKN,GAElD,OADAM,EAAIN,EAAYr9E,IAAMq9E,EACfM,IACN,IAGG4iC,GADHh6G,EAAMm5D,oBAAsBD,GAAgBA,EAAa93D,OAAS,EAEjE83D,EAAa,GACbl5D,EAAMm5D,mBACV,OAAO,2BACFn5D,GADL,IAEE85G,oBACA1gD,uBAAsB4gD,GAClBL,EAA6BK,GAEjCD,qBAAsBC,EAClBA,EAAsBvgH,GACtB,KACJ0/D,mBAAoB6gD,IAExB,IAAK,cACH,OAAO,2BACFh6G,GADL,IAEEs5D,QAAS7iB,EAAOshC,UAEpB,IAAK,mBACH,OAAO,2BACF/3E,GADL,IAEEs5D,QAAS,KACT2gD,UAAW,EACXC,kBAAmB,KAEvB,IAAK,oBACH,IAAMC,EAAgBn6G,EAAMi6G,UAAY,EACxC,OAAO,2BACFj6G,GADL,IAEEk6G,kBAAkB,2BACbl6G,EAAMk6G,mBADM,IAEf,CAACC,GAAgB1jE,EAAOshC,YAG9B,IAAK,iBACH,OAAO,2BACF/3E,GADL,IAEEi6G,UAAWxjE,EAAOshC,UAEtB,IAAK,qBACH,IAAK/3E,EAAM85G,kBAAmB,OAAO95G,EACrC,IAAM82E,EAAc92E,EAAM85G,kBAAkBrjE,EAAOshC,SACnD,OAAO,2BACF/3E,GADL,IAEEo5D,qBAAsBugD,EAA6B7iC,GACnDijC,qBAAsBjjC,EAAYr9E,GAClC0/D,mBAAoB2d,IAExB,IAAK,iCACH,OAAO,2BACF92E,GADL,IAEEo5D,qBAAsB3iB,EAAOshC,UAEjC,IAAK,+BACH,OAAO,2BACF/3E,GADL,IAEEo5D,qBAAsBugD,EAA6BljE,EAAOshC,SAC1D+hC,kBAAkB,2BACb95G,EAAM85G,mBADM,IAEf,CAACrjE,EAAOshC,QAAQt+E,IAAKg9C,EAAOshC,UAE9BgiC,qBAAsBtjE,EAAOshC,QAAQt+E,GACrC0/D,mBAAoB1iB,EAAOshC,UAE/B,IAAK,qBACH,IAAMqiC,EAAoB,eAAQp6G,EAAM85G,0BACjCM,EAAqB3jE,EAAOshC,SACnC,IAAMsiC,EAAkBxtF,OAAOC,KAAKstF,GACpC,OAA+B,IAA3BC,EAAgBj5G,OACX,2BACFpB,GADL,IAEEo5D,sBAAsB,EACtB0gD,kBAAmBM,EACnBjhD,mBAAoB,KACpB4gD,qBAAsB,OAGnB,2BACF/5G,GADL,IAEEo5D,qBAAsBugD,EACpBS,EAAqBC,EAAgB,KAEvCP,kBAAmBM,EACnBjhD,mBAAoBihD,EAAqBC,EAAgB,IACzDN,qBAAsBM,EAAgB,KAE1C,QACE,OAAO,eAAKr6G,KA0QHs6G,IArQa,SAAC,GAAiC,IAA/B36F,EAA8B,EAA9BA,OAAQhqB,EAAsB,EAAtBA,SAC/B4/B,EAAoB9/B,aAAiB2T,KAErCmxG,EAAwB9kH,UAAa,GAHgB,EAgBvDA,aAA8CokH,EAAS,CACzDE,qBAAsB,KACtB5gD,mBAAoB,KACpB2gD,kBAAmB,KACnB1gD,sBAAsB,EACtBE,QAAS,KACT4gD,kBAAmB,GACnBD,UAAW,IAvB8C,0BAOvDF,EAPuD,EAOvDA,qBACA5gD,EARuD,EAQvDA,mBACA2gD,EATuD,EASvDA,kBACA1gD,EAVuD,EAUvDA,qBACAE,EAXuD,EAWvDA,QACA4gD,EAZuD,EAYvDA,kBACAD,EAbuD,EAavDA,UAEFO,EAfyD,KA0BrD7gD,EAAmBlkE,cAAA,sBACvB,4BAAAkT,EAAA,yDACO4xG,EAAsBviH,QAD7B,wBAEIuiH,EAAsBviH,SAAU,EAFpC,SAIMwiH,EAAS,CAAEhiH,KAAM,mBAAoBu/E,QAAS,OAJpD,SAKwCnB,YAChCrhD,EACA5V,GAPR,UAKY86F,EALZ,wDAUMA,EAAoB3lE,MAAK,SAACnsC,EAAG4R,GAAJ,OAAU5R,EAAEtP,KAAK07C,cAAcx6B,EAAElhB,SAC1DmhH,EAAS,CACPhiH,KAAM,mBACNu/E,QAAS0iC,IAbjB,yBAgBMF,EAAsBviH,SAAU,EAhBtC,2EAoBA,CAAC2nB,EAAQ4V,IAGLmkC,EAAoBjkE,cAAA,uCACxB,WAAOilH,GAAP,eAAA/xG,EAAA,6DAIE6xG,EAAS,CAAEhiH,KAAM,cAAeu/E,QAAS,OAJ3C,SAK+B4iC,YAC3BplF,EACA5V,EACA+6F,GARJ,UAKQE,EALR,wDAYEJ,EAAS,CACPhiH,KAAM,+BACNu/E,QAAS6iC,IAdb,2CADwB,sDAkBxB,CAACj7F,EAAQ4V,IAGLslF,EAAeplH,cAAA,uCACnB,WAAOmK,GAAP,qBAAA+I,EAAA,yDACOoxG,EADP,wDAGQe,EAAWl7G,GAAWA,EAAQwgB,IAAMxgB,EAAQwgB,IAAM,KAExDo6F,EAAS,CAAEhiH,KAAM,cAAeu/E,QAAS,OAL3C,SAMqBP,YAAuB73D,EAAQo6F,EAAsB,CACtEliC,SAxNS,GAyNTF,cAAeve,EACfse,SAAUojC,IATd,UAMQr5F,EANR,wDAYQs5F,EAEgCt5F,EAAK63C,QAEvC73C,EAAKq2D,aACP0iC,EAAS,CAAEhiH,KAAM,oBAAqBu/E,QAASt2D,EAAKq2D,cAGlDkjC,EAA6C,GAE/CA,EADE5hD,EACiB2hD,EAAe/5G,KAAI,SAAAi6G,GAAK,OAEzC1kC,WADA,CAC+B0kC,MAGdF,EAAe/5G,KAAI,SAAAi6G,GAAK,OAEzC7kC,WADA,CACwB6kC,MAG5BT,EAAS,CAAEhiH,KAAM,cAAeu/E,QAASijC,IAhC3C,4CADmB,sDAmCnB,CAACjB,EAAsB3gD,EAAsBz5C,IAGzCi6C,EAAoBnkE,eAAkB,SAACgiF,GAC3C+iC,EAAS,CAAEhiH,KAAM,qBAAsBu/E,QAASN,MAC/C,IAEG5d,EAA0BpkE,eAAkB,SAACkL,GACjD65G,EAAS,CAAEhiH,KAAM,iCAAkCu/E,QAASp3E,MAC3D,IAEGm5D,EAAiB,uCAAG,WAAOohD,GAAP,eAAAvyG,EAAA,yDACnBoxG,EADmB,wDAEpBmB,EAAWpmE,MAAM0lE,EAAS,CAAEhiH,KAAM,qBAFd,SAGS2iH,YAC/B5lF,EACA5V,EACAo6F,EACAmB,GAPsB,UAGlBE,EAHkB,2DAWxBZ,EAAS,CACPhiH,KAAM,+BACNu/E,QAASqjC,KAGPF,EAAWpmE,KAhBS,kCAgBG+lE,IAhBH,4CAAH,sDAmBjB9gD,EAAgB,uCAAG,4BAAApxD,EAAA,yDAClBoxG,EADkB,wDAEvBS,EAAS,CAAEhiH,KAAM,qBAFM,SAGU6iH,YAC/B9lF,EACA5V,EACAo6F,GANqB,UAGjBqB,EAHiB,wDAUvBZ,EAAS,CACPhiH,KAAM,+BACNu/E,QAASqjC,IAEXP,IAduB,4CAAH,qDAiBhB7gD,EAAiB,uCAAG,sBAAArxD,EAAA,yDACnBoxG,GAAyBD,EADN,wDAExBU,EAAS,CAAEhiH,KAAM,qBAFO,SAGlB8iH,YAAoB/lF,EAAmB5V,EAAQo6F,GAH7B,OAIxBS,EAAS,CAAEhiH,KAAM,qBAAsBu/E,QAASgiC,IAJxB,2CAAH,qDAOjB9/C,EAAsB,uCAAG,WAAOC,GAAP,SAAAvxD,EAAA,yDACxBoxG,EADwB,iEAEvBwB,YACJhmF,EACA5V,EACAo6F,EACA7/C,GAN2B,OAQ7B2gD,EAAa,CAAEz6F,IAAK65F,EAAY,EAAIC,EAAkBD,GAAa,OARtC,2CAAH,sDAatBuB,EAAqB/lH,cAAA,sBACzB,4BAAAkT,EAAA,yDACQmvE,EAAcoiC,EAAkBD,EAAY,GADpD,wDAGEO,EAAS,CAAEhiH,KAAM,iBAAkBu/E,QAASkiC,EAAY,IAH1D,SAIQY,EAAa,CAAEz6F,IAAK03D,IAJ5B,2CAMA,CAAC+iC,EAAcX,EAAmBD,IAG9BwB,EAAyBhmH,cAAA,sBAC7B,4BAAAkT,EAAA,yDACoB,IAAdsxG,EADN,uBAEIO,EAAS,CAAEhiH,KAAM,iBAAkBu/E,QAAS,IAFhD,SAGU8iC,IAHV,iCAKUa,EAAkBxB,EAAkBD,EAAY,GAL1D,wDAOIO,EAAS,CAAEhiH,KAAM,iBAAkBu/E,QAASkiC,EAAY,IAP5D,UAQUY,EAAa,CAAEz6F,IAAKs7F,IAR9B,4CAWA,CAACb,EAAcX,EAAmBD,IAG9B0B,EAAsBlmH,cAAA,sBAC1B,sBAAAkT,EAAA,6DACE6xG,EAAS,CAAEhiH,KAAM,iBAAkBu/E,QAAS,IAD9C,SAEQ8iC,IAFR,2CAIA,CAACA,IAsBH,OAjBAplH,aACE,WACE+kH,EAAS,CAAEhiH,KAAM,mBAAoBu/E,QAAS,OAC9CyiC,EAAS,CAAEhiH,KAAM,uBAEnB,CAACmnB,IAGHlqB,aACE,WACOskH,IACLS,EAAS,CAAEhiH,KAAM,qBACjBqiH,OAEF,CAACd,EAAsB3gD,EAAsByhD,IAI7C,gBAAC,IAAmBtmD,SAApB,CACE97D,MAAO,CACLygE,aAAgB4gD,EAEZjtF,OAAOhR,OAAOi+F,GACd,KACJ3gD,qBACAC,uBACAC,SAAU,CACRC,UACAC,aAAgB2gD,EAAkBD,EAAY,GAC1CuB,EACA,KACJhiD,iBACgB,IAAdygD,GAAqBC,EAAkBD,EAAY,GAC/CwB,EACA,KACNhiD,cAA6B,IAAdwgD,EAAkB,KAAO0B,GAE1C9hD,0BACAH,oBACAC,mBACAC,oBACAE,oBACAC,mBACAC,oBACAC,yBACAE,wBAAyB0gD,IAG1BllH,K,yICxZMimH,EAA0B,CACrC5gH,SAAU,WACVzE,QAAS,eACT0E,MAJkB,IAKlB2G,OALkB,IAMlBjG,eAAgB,SAChBD,WAAY,SACZyR,WAAY0uG,QACZh/F,UAAW,UAGPphB,EAAS,CACbqgH,gBAAgB,eACXF,GAELrxD,qBAAsB,CACpBvvD,SAAU,WACVuL,SAlBgB,IAmBhByG,UAnBgB,IAoBhB0P,cAAe,SACf8tC,cAAe,QAEjBuxD,kBAAmB,CACjBl/F,UAAW,UACX7hB,SAAU,WACVC,MAAO,GACP2G,OAAQ,GACRs0C,OAAQ,EACRte,MAAO,IAmEIi8B,IApDQ,SAACp8D,GAAkB,IAChCuO,EAA0DvO,EAA1DuO,cAAeiqB,EAA2Cx4B,EAA3Cw4B,gBAAiBjyB,EAA0BvG,EAA1BuG,aAAcf,EAAYxF,EAAZwF,QAChDsiB,EAAQ9pB,aAAiB6M,KAGzBqB,EAA+BC,YACnCnO,eACE,SAAAkD,GACMqN,GAAeA,EAAcrN,EAAMspD,QAAStpD,EAAMupD,WAExD,CAACl8C,KAIGg2G,EAAwBz8F,EAAM08F,eAA9BD,oBACFE,EAAoB38F,EAAM41B,aAAawI,YACvCA,EAAclmD,EAAMsO,SAAWi2G,EAAsBE,EAErDC,EAAc,2BACf1gH,EAAOqgH,iBADQ,IAElBjvD,OAAO,aAAD,OAAelP,IAClBlmD,EAAM7B,OAGX,OACE,qCACEyG,MAAO2B,EACPpI,MAAOumH,EACPn2G,cAAe,SAAA0G,GACbA,EAAEqtC,kBACE/zC,GAAeA,EAAc0G,EAAEu1C,QAASv1C,EAAEw1C,WAE5Cv+C,GAEJ,gBAAC,IAAD,MACA,gBAAC,IAAD,CACE/N,MAAO6F,EAAO8uD,qBACdztC,IAAK9e,EACL0d,IAAKuU,EAAgB0C,mBAAmB11B,EAASe,EAAc,MAEhEvG,EAAMq8D,YACL,uBAAKl+D,MAAO6F,EAAOsgH,mBACjB,gBAAC,IAAD,CACEjyG,UAAWrS,EAAMsO,SACjB4D,QAAS,SAAC+C,EAAG0vG,GAAJ,OAAc3kH,EAAMs8D,UAAYt8D,EAAMs8D,SAASqoD,U,sNCnErD,SAASC,EAAT,GAKJ,IAJTp/G,EAIQ,EAJRA,QACAuoD,EAGQ,EAHRA,QACA2pD,EAEQ,EAFRA,mBACAmN,EACQ,EADRA,qBACQ,EACgC7mH,YAAe,GAD/C,mBACD8mH,EADC,KACaC,EADb,OAEkD/mH,YACxD,GAHM,mBAEDgnH,EAFC,KAEsBC,EAFtB,KAKFriC,EAAiC5kF,aACrC+qC,KAEIjL,EAAoB9/B,aAAiB2T,KAErCuzG,EAA4BhnF,YAChCJ,EACAP,IACAolD,KAGIwiC,EAAwB,uCAAG,WAC/BrkH,EACAqtD,GAF+B,eAAAj9C,EAAA,yDAI/B6zG,GAAgB,GAJe,UAOvB52D,EAPuB,uBAQ3BupD,EAAmBvpD,GARQ,SASa+2D,EACtCpkH,EACA0E,EACAo9E,EACAz0B,GAbyB,OAS3Bi3D,EAT2B,+CAgBariC,YACtCjiF,EACA8hF,EACAp9E,GAnByB,QAgB3B4/G,EAhB2B,mBAuBzBA,EAvByB,wBAwB3BH,GAAyB,GACrBJ,GAAsBA,IAzBC,mBA0BpB,GA1BoB,kCA6BtB,GA7BsB,yBA+B7BE,GAAgB,GA/Ba,2EAAH,wDAmCxB/hC,EAAiCJ,EAA+Bh6C,oCAEtE,OACE,gBAAC,OAAD,MACG,gBAAG9nC,EAAH,EAAGA,KAAH,OACC,gBAAC,IAAD,CACEk7C,YAAU,EACVp3C,MAAO,gBAAC,QAAD,kCACP+2C,QAAS,CACP,gBAAC,IAAD,CACE5yB,IAAI,QACJpnB,MAAO,gBAAC,QAAD,cACP6L,SAAO,EACPvK,QAAS8qD,EACTzsD,SAAUwjH,KAGdhpE,iBAAkB,CAChB,gBAAC,IAAD,CAAY/yB,IAAI,OAAO7d,aAAa,uBACpC83E,EACE,gBAAC,IAAD,CACE94E,KAAM,gBAAC,IAAD,MACN6e,IAAI,SACJpnB,MAAO,gBAAC,QAAD,yBACPsB,QAAS,WACPkiH,EAAyBrkH,IAE3BQ,SAAUwjH,IAEV,MAENjpE,mBAAmB,EACnBE,UAAQ,EACR9vC,MAAI,EACJzN,UAAQ,EACR0f,eAAgB6vC,GAEhB,gBAAC,IAAD,CACE+2D,aAAcA,EACdO,UAAS,uCAAE,WAAMl3D,GAAN,SAAAj9C,EAAA,+EACTi0G,EAAyBrkH,EAAMqtD,IADtB,2CAAF,sDAGT3oD,QAASA,EACT8/G,uBAAuB,IAEzB,gBAAC,IAAD,CACEnhG,WAAW,kCACXpZ,QACE,gBAAC,QAAD,sKAMF4zC,KAAMqmE,U,0CC3IlB,WAUM3+C,EAAuBroE,gBAJK,CAChCooE,sBAAuB,SAAC98C,OAOX+8C,O,8PCIT5zD,EAAkBC,EAAOD,GAgBlB8yG,EAAqB,SAAC96F,GACjC,IAAM+6F,EAAoB/6F,EAAWxJ,OACrC,IAAKukG,EAAmB,MAAO,gBAE/B,IAlBoBr9E,EAoBhBs9E,GApBgBt9E,EAkBgBq9E,GAhB7Br9E,EACJpjC,QAAQ,iCAAkC,KAC1CA,QAAQ,iBAAkB,KAC1BA,QAAQ,mBAAmB,SAAS2gH,EAAGx0G,EAAG4R,GACzC,OAAO5R,EAAI,IAAM4R,KAElBoE,cACAniB,QAAQ,cAAc,SAAS2gH,EAAGx0G,EAAG4R,GACpC,OAAOA,EAAEslB,iBATI,GAwBjB,OAJIq9E,EAAmB,IAAM,KAAOA,EAAmB,IAAM,MAC3DA,EAAqB,IAAMA,GAGtBA,GAOIE,EAAkB,SAC7BngH,EACAogH,EACAjpF,GAEA,IAAMkpF,EAA+BD,EAAmBhkH,KAExD,IAAI+6B,EAAiBkpF,GAArB,CAMA,IAAMz/G,EAAuCZ,EAAQa,sBAI/Cy/G,EAA0BF,EAAmBz+G,KAC7C4+G,EAA6BH,EAAmBjsC,OAClDisC,EAAmBjsC,OAAO/3E,KAC1B,GACEokH,EAAmCJ,EAAmBjsC,OACxDisC,EAAmBjsC,OAAOx1D,WAC1B,GACE8hG,EACJF,GAAsBC,EAClB5/G,EAAiB8/G,0BACfH,EACAC,GAEF,GACAG,EAAmC//G,EAAiBggH,wBACxDN,GAGF,GAAIG,EAEFtpF,EAAiBkpF,GAAwBI,OAEpC,GAAIE,EAETxpF,EAAiBkpF,GAAwBM,MAFpC,CAOP,IAAI7pF,EAAc,KAClB,GAAgC,UAA5BspF,EAAmBp7G,KAGrB,MAAM,IAAIkH,MAAJ,4BACiBk0G,EAAmBp7G,KADpC,wBAFN8xB,EAAc,IAAI7pB,EAAG8pB,cAOvB/oB,YAAwB8oB,EAAaspF,GAErC,IAAM3qD,EAAUn/B,YAAiB+pF,GAAsB,SAAAjkH,GAAI,OACzDwE,EAAiBI,YAAY5E,MAE/B06B,EAAYvB,QAAQkgC,GACpB3+B,EAAYE,UAAqC,YAA3Bh3B,EAAQi3B,gBAC9BH,EAAY+pF,UAAUN,EAAoBC,GAC1C5/G,EAAiB0xB,YAAYwE,GAC7BA,EAAYjpB,SAEZspB,EAAiBkpF,GAAwB5qD,KAG9BqrD,EAAiB,uCAAG,yCAAAp1G,EAAA,6DAC/Bq1G,EAD+B,EAC/BA,MACA/gH,EAF+B,EAE/BA,QACA6gF,EAH+B,EAG/BA,OACA7rE,EAJ+B,EAI/BA,iBAOMgsG,EAAiB,GACjB7pF,EAAmB,GACnB8pF,EAAkC,GAExCF,EAAMG,aAAapgH,SAAQ,SAAAqgH,GACzBA,EAAYhvF,UAAUrxB,SAAQ,SAAAs/G,UAIhCW,EAAMG,aAAapgH,SAAQ,SAAAqgH,GACzB,IAAM5lH,EAAgB4lH,EAAY3zG,OAAOjS,KACzC,IAAKA,EAAM,MAAM,IAAI2Q,MAAM,mCAG3B,IAAMk1G,EAAerB,EAAmBoB,EAAY3zG,OAAOpR,MACrDq5D,EAAUn/B,YAAiB8qF,GAAc,SAAAhlH,GAAI,OACjD4Y,EAAiBkQ,eAAe9oB,MAE5BoR,EAASwH,EAAiBqsG,gBAC9BrhH,EACAzE,EACAk6D,EACAzgD,EAAiB0V,mBAEnBs2F,EAAeI,GAAgB3rD,EAE/BznD,YACER,EACA2zG,EAAY3zG,OACZ,kBACAxN,GAIFwN,EAAO+nB,QAAQkgC,GAGf0rD,EAAYhvF,UAAUrxB,SAAQ,SAAAs/G,GAC5BD,EAAgBngH,EAASogH,EAAoBjpF,MAO/C,IAAMC,EAAsBC,YAAuBF,GAC7CG,EAAmB,IAAIrqB,EAAGsqB,iBAAiBH,GACjDA,EAAoBvpB,SACpBL,EAAOgqB,gBAAgBF,GACvBA,EAAiBzpB,SAEjBszG,EAAYG,cAAcxgH,SAAQ,SAAAwgH,GAChC,GAAIA,EAAc34E,aAAc,CAAC,IACvBA,EAA+B24E,EAA/B34E,aAActC,EAAiBi7E,EAAjBj7E,aAEhB4B,EAAmBh7B,EAAG67B,iBAAiBV,oBAC3Cn7B,EAAGsI,WAAWC,MACd6wB,GAEF,GAAIp5B,EAAG67B,iBAAiBy4E,sBAAsBt5E,GAC5C,MAAM,IAAI/7B,MACR,sBAAwBm6B,EAAe,wBAI3C,IAAMunD,EAAW3lD,EAAiBzyB,MAI5BkvD,EAAkBl3D,EAAOg0G,eAC7BxhH,EACAqmC,EACAsC,GAEF24E,EAAcrqE,WAAWn2C,SAAQ,SAAAi+B,GAC/B6uD,EAASnpB,eACPC,EAAgB+8C,aAChB1iF,EAAS3iC,KACT2iC,EAAStjC,qBAMjBwlH,EAAejnH,KAAKwT,MAKtBuzG,EAAMG,aAAapgH,SAAQ,SAAAqgH,GACzB,IAAMC,EAAeD,EAAY3zG,OAAOpR,KAClCq5D,EAAUurD,EAAeI,GAE/BD,EAAYG,cAAcxgH,SAAQ,SAAAwgH,GAChC,GAAIA,EAAczgC,OAAQ,CACxB,IAAMuH,EAAa,IAAIn7E,EAAGy0G,WA6B1B,IAAK,IAAMN,KA5BXh5B,EAAW7yD,QAAQkgC,GAEnBznD,YACEo6E,EAAWnG,eACXq/B,EAAczgC,OACd,kBACA7gF,GAIFshH,EAAcv7F,WAAWjlB,SAAQ,SAAAgnE,GAC/B76D,EAAG00G,iBAAiBC,sBAClB5hH,EACAgV,EACAozE,EAAWnG,eACXna,EAAU1rE,KACV0rE,EAAUrsE,cACK,GACG,GACH,GACK,MAQGulH,EAAgB,CACzC,IAAMvrD,EAAUurD,EAAeI,GAC3BA,IAAiB3rD,GACnBxoD,EAAG00G,iBAAiBE,qBAClB7hH,EAAQgrB,qBACRhrB,EACAgV,EACAozE,EAAWnG,eACXm/B,EACA3rD,GAKNorB,EAAO4G,YAAYW,EAAYvH,EAAOsB,yBArJb,kBA0JxB,CACL8+B,mBA3J6B,2CAAH,sDAqKjBa,EAAgC,SAC3Cf,GAEA,OAAOgB,IACL72F,IACE61F,EAAMG,aAAan9G,KAAI,SAAAo9G,GACrB,OAAOA,EAAYG,cAChBv9G,KAAI,SAAAu9G,GACH,OAAIA,EAAc34E,aAMT,CAAEtC,aADLi7E,EAHFj7E,aAIqBC,cADnBg7E,EAFFh7E,cAGoC07E,iBADlCV,EADFU,kBAKG,QAER/9G,OAAO0R,cAGd,qBAAG0wB,iBASM47E,EAA0B,SACrCh1G,EACAi1G,GAEA,IAAMC,EAAuB/nH,oBAC3B6S,EAAG26B,WAAW36B,EAAGsI,WAAWC,OAAOyV,4BACnC,SAAAE,GACE,OAAOA,EAAUX,aAIrB,OAAO03F,EAAmBj+G,QAAO,YAAwB,IAArBqiC,EAAoB,EAApBA,cAClC,OAAQ67E,EAAqBrsF,SAASwQ,OAI7B87E,EAA0C,SACrDrB,GAEA,OAAOgB,IACL72F,IACE61F,EAAMG,aAAan9G,KAAI,SAAAo9G,GACrB,OAAOj2F,IACLi2F,EAAYG,cACTv9G,KAAI,SAAAu9G,GACH,OAAIA,EAAczgC,OACTygC,EAAce,WAGhB,QAERp+G,OAAO0R,eAIhB,qBAAG2wB,kBAIMg8E,EAAyB,SACpCr1G,EACAs1G,GAEA,OAAOA,EAAkBt+G,QAAO,YAAuB,IAApBoiC,EAAmB,EAAnBA,aAC3B4B,EAAmBh7B,EAAG67B,iBAAiBV,oBAC3Cn7B,EAAGsI,WAAWC,MACd6wB,GAEF,OAAOp5B,EAAG67B,iBAAiBy4E,sBAAsBt5E,OAIxCu6E,EAAkB,uCAAG,WAChCC,GADgC,iBAAA/2G,EAAA,yDAG3B+2G,EAAet+G,OAHY,yCAGG6H,QAAQhK,QAAQ,KAHnB,uBAKC4mD,cALD,cAK1BC,EAL0B,gBAOG78C,QAAQsc,IACzCstE,IAAK6sB,GAAgB1+G,KAAI,SAAAuiC,GACvB,IAAMqiB,EAAuBE,EAAmBC,sBAAsBjrB,MACpE,SAAA8qB,GACE,OAAOA,EAAqBvsD,OAASkqC,KAGzC,IAAKqiB,EACH,MAAM,IAAIz8C,MACR,4BAA8Bo6B,EAAgB,qBAIlD,OAAO0C,YAAa2f,OApBQ,cAO1B+5D,EAP0B,yBAwBzBA,GAxByB,2CAAH,sDA+BlBplC,EAAmC,SAC9CF,EACAp9E,EACA0iH,GAEmB,IADnBC,IACkB,yDAwBlB,OAvBAD,EAAqB5hH,SAAQ,SAAAu8E,GAAwB,IAC3CjhF,EAASihF,EAATjhF,KACR,IAAKA,EACH,OAAO4P,QAAQC,OAAO,IAAIC,MAAM,wCAElC,IAAM02G,EAA8B5iH,EAAQ49E,iCAC1CxhF,GAEE4D,EAAQgtG,4BAA4B5wG,GACpC4D,EAAQ0tG,kCAAkCtxG,EAAM,GAEpD4R,YACE40G,EACAvlC,EACA,kBACAr9E,GAGE2iH,GACFC,EAA4B/B,UAAU,2BAA4BzkH,MAI/DghF,EAA+Br6C,qCACpC/iC,IAgBS6iH,EAAY,uCAAG,mDAAAn3G,EAAA,6DAC1By4B,EAD0B,EAC1BA,iBACAi5C,EAF0B,EAE1BA,+BACAp9E,EAH0B,EAG1BA,QACA6gF,EAJ0B,EAI1BA,OACA7rE,EAL0B,EAK1BA,iBAL0B,SAONkvB,YAASC,GAPH,cAOpB48E,EAPoB,OAQpBwB,EAAoBT,EAA8Bf,GAClDmB,EAAqBE,EAAwCrB,GAC7D+B,EAAmBR,EAAuBr1G,EAAIs1G,GAC9CQ,EAAoBd,EAAwBh1G,EAAIi1G,GAX5B,UAYSM,EAAmB,GAAD,mBAChDM,EAAiB/+G,KAAI,qBAAGuiC,kBADwB,YAEhDy8E,EAAkBh/G,KAAI,qBAAGuiC,oBAdJ,eAYpBo8E,EAZoB,iBAgBpBplC,EACJF,EACAp9E,EACA0iH,GAnBwB,YAsBIJ,EAAuBr1G,EAAIs1G,GAC/Bp+G,OAvBA,uBAwBlB,IAAI+H,MACR,2CACE42G,EACG/+G,KACC,gBAAGuiC,EAAH,EAAGA,cAAeD,EAAlB,EAAkBA,aAAlB,gBACKA,EADL,aACsBC,EADtB,QAGD70B,KAAK,OA/BY,YAmCKwwG,EAC7Bh1G,EACAi1G,GAEyB/9G,OAvCD,uBAwClB,IAAI+H,MACR,4CACE62G,EAAkBh/G,KAAI,qBAAGuiC,iBAAmC70B,KAAK,OA1C7C,yBA8CLqvG,EAAkB,CACrC9gH,UACA+gH,QACAlgC,SACA7rE,qBAlDwB,eA8CpBguG,EA9CoB,yBAoDnBA,GApDmB,4CAAH,wD,0RC1anB/1G,EAAkBC,EAAOD,GAkBVg2G,E,kDACnB,WAAYzoH,GAAe,IAAD,8BACxB,cAAMA,IA0BR0oH,SAAW,WACT,EAAK1oH,MAAMg0B,OAAO20F,sBAAsB,EAAKpgH,MAAMqgH,aACnD,EAAK5oH,MAAMg0B,OAAO60F,uBAChB,EAAKtgH,MAAMugH,2BAEb,EAAK9oH,MAAMg0B,OAAO+0F,mBAChB,EAAKxgH,MAAMmZ,gBAAkB,EAAKnZ,MAAMmZ,gBAAgBkB,EAAI,EAC5D,EAAKra,MAAMmZ,gBAAkB,EAAKnZ,MAAMmZ,gBAAgBmB,EAAI,EAC5D,EAAKta,MAAMmZ,gBAAkB,EAAKnZ,MAAMmZ,gBAAgBoB,EAAI,GAE9D,EAAK9iB,MAAM2mB,WAnCX,EAAKpe,MAAQ,EAAKwvB,UAAU/3B,EAAMg0B,QAFV,E,sDAKhBA,GACR,MAAO,CACL40F,YAAa50F,EAAOg1F,wBACpBF,0BAA2B90F,EAAOi1F,sBAClCvnG,gBAAiB,CACfkB,EAAGoR,EAAOk1F,wBACVrmG,EAAGmR,EAAOm1F,0BACVrmG,EAAGkR,EAAOo1F,yBACVl4G,EAAG,M,gDAKiB+hD,KAEpB3yD,KAAKN,MAAMiM,MAAQgnD,EAAShnD,MAC7BgnD,EAAShnD,MAAQ3L,KAAKN,MAAMg0B,SAAWi/B,EAASj/B,SAEjD1zB,KAAKqI,SAASrI,KAAKy3B,UAAUk7B,EAASj/B,W,+BAiBhC,IAAD,OACCA,EAAW1zB,KAAKN,MAAhBg0B,OACF2nB,EAAU,CASd,kBAAC,IAAD,CACEh6C,MAAO,kBAAC,QAAD,WACPonB,IAAI,KACJvb,SAAS,EACTouC,iBAAiB,EACjB34C,QAAS3C,KAAKooH,YAQZW,EAJ6Br1F,EAChCs1F,gCACAz4F,YAGAtnB,KAAI,SAAA3H,GACH,IAAM2nH,EAAoBv1F,EAAOw1F,sBAAsB5nH,GACjDb,EAAOwoH,EAAkBpsE,cAEzB1P,EAAmBh7B,EAAG67B,iBAAiBV,oBAC3Cn7B,EAAGsI,WAAWC,MACdja,GAEF,GAAI0R,EAAG67B,iBAAiBy4E,sBAAsBt5E,GAC5C,OAAO,KAET,IAAMg8E,EAAqBh8E,EAAiBi8E,wBAC5C,GAAIC,YAAUl3G,EAAIg3G,GAAqB,OAAO,KAE9C,IAAMhtE,EAAagtE,EAAmB/sE,cACpC6sE,EAAkBtC,cAEd2C,EAAmBC,YACvBptE,GACA,SAAA8sE,GAAiB,OACfE,EAAmB/sE,cAAc6sE,EAAkBtC,iBACrD,SAACsC,EAAmB3nH,EAAMZ,GACxByoH,EAAmBx/C,eACjBs/C,EAAkBtC,aAClBrlH,EACAZ,MAKN,QACI4oH,EAAiBjgH,QACjB,kBAAC,IAAD,CACEof,IAAKnnB,EACL8jC,OAAQkkF,EACRzkF,UAAW,CAACokF,QAKnB9/G,OAAO0R,SAEV,OACE,kBAAC,IAAD,CACEvW,MAAO,kBAAC,QAAD,yBACP+2C,QAASA,EACTG,iBAAkB,CAChB,kBAAC,IAAD,CACE/yB,IAAI,uBACJpnB,MAAO,kBAAC,QAAD,6BACPU,WAAS,EACTY,QAAS,WACP,EAAKjD,MAAM8pH,kBACX,EAAK9pH,MAAM+tD,cAIjB9hD,KAAM3L,KAAKN,MAAMiM,KACjB4vC,mBAAmB,EACnBl1B,QAASrmB,KAAKooH,SACdxqG,eAAgB5d,KAAKN,MAAM+tD,QAC3Bj/C,SAAS,MAET,kBAAC,IAAD,CAAmBhE,QAAM,EAACtM,UAAQ,GAChC,kBAAC,IAAD,CACE2B,kBAAmB,kBAAC,QAAD,qBACnBkC,WAAS,EACTtB,KAAK,OACLC,MAAOV,KAAKiI,MAAMqgH,YAClBloH,SAAU,SAACuU,EAAGjU,GAAJ,OAAc,EAAK2H,SAAS,CAAEigH,YAAa5nH,OAEvD,kBAAC,IAAD,CACEqR,QAAS/R,KAAKiI,MAAMugH,0BACpBnnH,MAAO,kBAAC,QAAD,yCACPuQ,QAAS,SAAC+C,EAAG0vG,GAAJ,OACP,EAAKh8G,SAAS,CACZmgH,0BAA2BnE,OAIjC,kBAAC,IAAD,CACExkH,kBAAmB,kBAAC,QAAD,+BACnBkC,WAAS,EACTg+B,cAAY,EACZhiC,MAAOqkB,YAAoBpiB,KAAKiI,MAAMmZ,iBACtChhB,SAAU,SAAArC,GAAK,OACb,EAAKsK,SAAS,CACZ+Y,gBAAiByB,YAA4B9kB,SAIjD+rC,IAAKi/E,IACL,kBAAC,IAAD,KACE,kBAAC,QAAD,4GAMHA,EACA/oH,KAAKN,MAAM+pH,oBACV,kBAAC,IAAD,CACEpoH,MAAO,kBAAC,QAAD,+BACPU,WAAS,EACTY,QAAS,WACH,EAAKjD,MAAM+pH,oBACb,EAAK/pH,MAAM+pH,qBACb,EAAK/pH,MAAM+tD,mB,GA7KwB7hC,e,qFCvBpC,aAAClsB,GACd,OACE,gBAAC,IAAD,CACEiM,KAAMjM,EAAMiM,KACZovC,mBAAoBr7C,EAAMg0B,OAAOg2F,eACjC/uE,SAAUj7C,EAAM+tD,QAChBpnC,QAAS3mB,EAAM2mB,QACf/hB,MAAO,gBAAC,QAAD,wBACPu2C,sBAAuB,gBAAC,QAAD,sCACvBC,4BACE,gBAAC,QAAD,gEAEFlwC,aAAc,0CACdowC,4BAA6Bt7C,EAAMs7C,4BACnCC,0BAA2B,kBACzBjR,IAA0BI,uBACxB1qC,EAAMwF,QAAQgrB,qBACdxwB,EAAMwF,QACNxF,EAAMg0B,a,6BCjCT,SAASklF,EACdt3G,EACA4D,GAGA,IADA,IAAM2nC,EAAgB3nC,EAAQgrB,qBAAqBC,2BAC1ClxB,EAAI,EAAGA,EAAI4tC,EAAc/uC,OAAQmB,IACxC,GAAI4tC,EAAcrtC,GAAGP,GAAGywB,YAAcpuB,EAAM,OAAO,EAErD,OAAO4D,EAAQ49E,iCAAiCxhF,GARlD,mC,iFCqCqB0kE,EAGnB,aAAe,IAAD,gCAIdnnC,gBAAkB,SAACN,EAA0BE,GAC3C,GAAI,EAAKkrF,UAAUprF,GACjB,OAAOp3B,QAAQ4sB,KAAR,oCACwBwK,EADxB,oCAGT,EAAKorF,UAAUprF,GAAeE,GATlB,KAYdK,kBAAoB,SAACP,GACnB,IAAK,EAAKorF,UAAUprF,GAClB,OAAOp3B,QAAQ4sB,KAAR,sCAC0BwK,EAD1B,uCAGF,EAAKorF,UAAUprF,IAjBV,KAoBdqrF,gBAAkB,SAACrrF,GACjB,IAAME,EAAU,EAAKkrF,UAAUprF,GAC/B,OAAIE,EAAgB,aAAEn9B,KAAMi9B,GAAiBE,GACtC,MAvBK,KA0BdorF,oBAAsB,WACpB,OAAO/0F,OAAOC,KAAK,EAAK40F,WAAW1gH,KAAkB,SAAAs1B,GACnD,IAAME,EAAU,EAAKkrF,UAAUprF,GAC/B,OAAO,2BAAME,GAAb,IAAgCn9B,KAAMi9B,QA5BxCv+B,KAAK2pH,UAAY,K,6BCzCrB,WAaezjD,IAXI,SAAI4jD,GACrB,IAAMC,EAAczzD,iBAAO,MAEvB3iC,EAAWo2F,EAAY9pH,QAC3B,GAAiB,OAAb0zB,EAAmB,OAAOA,EAE9B,IAAIq2F,EAAcF,IAElB,OADAC,EAAY9pH,QAAU+pH,EACfA,I,6BCVT,yDAEaC,EAAiB,SAC5BjpD,GAEY,IAAD,yDADkB,CAAEljE,KAAM,IAAnCA,EACS,EADTA,KAEIosH,EAAOC,IAAInpD,EAAMrgD,OAAOiG,eAC9B,MAAM,mCAAN,OAA0CsjG,EAA1C,cAAoDpsH,EAApD,c,6BCPF,qBAeessH,IAJE,SAAC1qH,GAAD,OACf,gBAAC,IAAD,eAAU3B,MAAM,UAAUM,QAAQ,OAAUqB,M,mPCFxCgE,EAAS,CACb2mH,oBAAqB,CACnBnnH,MAAO,OACPD,SAAU,WACV6hB,UAAW,UACX+9B,UAAW,EACXrkD,QAAS,OACT2E,KAAM,GAERmnH,SAAU,CACR97G,SAAU,IACV+9C,SAAU,SACVC,aAAc,WACd1Q,WAAY,SACZ35C,SAAU,QAEZooH,gBAAiB,CACf/rH,QAAS,OACTmF,WAAY,SACZoG,WAAY,GACZD,YAAa,IAEf0gH,YAAa,CACX1gH,YAAa,EACbC,WAAY,IAkBH0gH,EAAb,oLACwBvxF,GACpB,OAAOl5B,KAAKN,MAAM27G,QAAUniF,EAAUmiF,SAF1C,+BAKY,IAAD,EACsBr7G,KAAKN,MAA1B9B,EADD,EACCA,SAAUy9G,EADX,EACWA,OAClB,OACE,uBACEx9G,MAAK,2BACA6F,EAAO2mH,qBACNhP,OAAS98G,EAAY,CAAEC,QAAS,UAGrCZ,OAdT,GAAyCF,aAyB5BgtH,EAAe,SAAC,GAAD,IAAGtQ,EAAH,EAAGA,WAAYx8G,EAAf,EAAeA,SAAf,OAC1B,gBAAC,IAAD,MACG,SAAA4gB,GACC,IAAMmsG,EAAwB,CAC5Bn8G,SAAU,OACV/P,WAAY,EACZD,QAAS47G,EAAa,OAAS,OAC/B/0F,SAAU,SACVu9B,UAAW,OACXxhC,gBAAiB5C,EAASosG,aAAaC,0BAGzC,OAAO,uBAAKhtH,MAAO8sH,GAAwB/sH,OAkB1C,SAASktH,EAAT,GAWe,IAVpBppH,EAUmB,EAVnBA,GACA25G,EASmB,EATnBA,OACA5tD,EAQmB,EARnBA,QACAs9D,EAOmB,EAPnBA,cACAnQ,EAMmB,EANnBA,WACAv5G,EAKmB,EALnBA,MACAuI,EAImB,EAJnBA,KACAioG,EAGmB,EAHnBA,SACAlvG,EAEmB,EAFnBA,QACAqoH,EACmB,EADnBA,YAEAttH,aACE,WACM29G,GACF2P,MAGJ,CAAC3P,EAAQ2P,IAEX,IAAM1sG,EAAc5gB,SAAoC,MAElDgO,EAAkB,SAAA9K,GACtBA,EAAMohD,kBACF1jC,EAAYre,SACdqe,EAAYre,QAAQ0L,KAAK/K,EAAMspD,QAAStpD,EAAMupD,UAI5C8gE,EAAqBvtH,eACzB,SAAAkD,GACMA,EAAMirD,aAA4C,IAA7BjrD,EAAMirD,YAAY/+C,QACzC2gD,MAGJ,CAACA,IAIG7hD,EAA+BC,YACnCnO,eACE,SAAAkD,GACM0d,EAAYre,SACdqe,EAAYre,QAAQ0L,KAAK/K,EAAMspD,QAAStpD,EAAMupD,WAGlD,CAAC7rC,KAIL,OACE,gBAAC,IAAD,MACG,SAAAE,GACC,IAAM9J,EAAa2mG,EAEf78F,EAASosG,aAAa7xD,kBADtBv6C,EAASosG,aAAal2G,UAG1B,OACE,gBAAC,WAAD,KACE,wBACE7W,MAAO,CACLY,WAAY,EACZwE,SAAU,WACVzE,QAAS,eACTsL,YAAa,EACbsX,gBAAkBi6F,EAEd78F,EAASosG,aAAazxD,wBADtB36C,EAASosG,aAAaxpG,kBAI5B,gBAAC,IAAD,eACEze,QAASA,EACTuoH,WAAYrZ,EAAWoZ,OAAqB1sH,EAC5C0P,cAAevC,EACfhK,GAAIA,EAAE,UAAMA,EAAN,gBAAoBnD,GACtBqN,EALN,CAMEuoC,aAAW,EAGXg3E,oBAAkB,IAElB,wBACEttH,MAAK,2BACA6F,EAAO6mH,iBADP,IAEH1gH,OAAQ2U,EAASosG,aAAa/gH,OAC9B9L,MAAO2W,EACPS,WAAYqJ,EAASosG,aAAaz1G,cAGnCvL,EACAA,GAAQvI,EAAQ,gBAAC,IAAD,MAAa,KAC7BA,GAAS,wBAAMxD,MAAO6F,EAAO4mH,UAAWjpH,KAG5CwwG,GACC,gBAAC,IAAD,eACElvG,QAAS8qD,EACTy9D,WAAYD,EACZh9G,cAAevC,GACXE,EAJN,CAKEuoC,aAAW,IAEX,gBAAC,IAAD,CACEt2C,MAAK,2BACA6F,EAAO8mH,aADP,IAEHtnH,MAAOsb,EAASosG,aAAa/gH,OAAS,EACtCA,OAAQ2U,EAASosG,aAAa/gH,SAEhCizD,UAAWpoD,MAKnB,gBAAC,IAAD,CACE/W,IAAK2gB,EACLlS,kBAAmB,SAAC5L,GAAD,MAAoB,CACrC,CACEa,MAAOb,EAAKiB,EAAE,cACd24B,MAAOqzB,EACPjvB,QAASqzE,GAEX,CACExwG,MAAOb,EAAKiB,EAAE,qBACd24B,MAAO2wF,GAET,CACE1pH,MAAOb,EAAKiB,EAAE,kBACd24B,MAAOwgF,a,mwBC3LZ9T,EAA4B,WACvC,MAAO,CACLviD,QAAS,GACT6mE,WAAY,IAIHra,EAAgB,SAC3B9oG,EAD2B,GAuBN,IApBnB5G,EAoBkB,EApBlBA,MACAuI,EAmBkB,EAnBlBA,KACA4mG,EAkBkB,EAlBlBA,gBACAC,EAiBkB,EAjBlBA,sBACAhoF,EAgBkB,EAhBlBA,IACA+oF,EAekB,EAflBA,iBACAX,EAckB,EAdlBA,aACAgB,EAakB,EAblBA,SAcIwZ,EAAmBC,IACvBrjH,EAAMs8C,SACN,SAAAE,GAAM,OAAIA,EAAOh8B,MAAQA,KAE3B,IAA0B,IAAtB4iG,EACF,OAAO,2BACFpjH,GADL,IAEEmjH,WAAYva,EAAe5oG,EAAMmjH,WAAaC,IAIlD,IAAMrf,EAAuB,CAC3B3qG,QACAuI,OACA4mG,kBACAC,wBACAhoF,MACA+oF,mBACAtF,UAAW,KACX2F,SAA8B,qBAAbA,KAAoCA,GAGvD,OAAO,2BACF5pG,GADL,IAEEs8C,QAAQ,GAAD,mBAAMt8C,EAAMs8C,SAAZ,CAAqBynD,IAC5Bof,WAAYva,EAAe5oG,EAAMmjH,WAAanjH,EAAMs8C,QAAQl7C,UAInDipG,EAAmB,SAC9BrqG,EACAsjH,GAEA,OAAO,2BACFtjH,GADL,IAEEmjH,WAAY70G,KAAK1T,IAAI,EAAG0T,KAAKzT,IAAIyoH,EAAUtjH,EAAMs8C,QAAQl7C,OAAS,OAIzDmiH,EAAoB,SAC/BvjH,EACAwjH,GAEA,IAAMC,EAAmBzf,EAAchkG,GACjC0jH,EAAmB1jH,EAAMs8C,QAAQp7C,OAAOsiH,GAC9C,OAAOnZ,EAAiB,2BAEjBrqG,GAFgB,IAGnBs8C,QAASonE,IAIXA,EAAiBjkH,QAAQgkH,IAAqB,IAIrC7Q,EAAqB,SAAC5yG,GACjC,OAAOujH,EAAkBvjH,GAAO,SAAA+jG,GAAS,OAAKA,EAAU6F,aAG7C0I,EAAiB,SAC5BtyG,EACA2jH,GAEA,OAAOJ,EAAkBvjH,GAAO,SAAA+jG,GAAS,OAAIA,IAAc4f,MAGhDlR,EAAuB,SAClCzyG,EACA2jH,GAEA,OAAOJ,EACLvjH,GACA,SAAA+jG,GAAS,OAAKA,EAAU6F,UAAY7F,IAAc4f,MAIzCzQ,EAAa,SAAClzG,GACzB,OAAOA,EAAMs8C,SAGF62D,EAAqB,SAACnzG,GACjC,OAAOA,EAAMmjH,YAGFnf,EAAgB,SAAChkG,GAC5B,OAAOA,EAAMs8C,QAAQt8C,EAAMmjH,aAGhBle,EAAmB,SAC9BjlG,EACA/C,GAEA,OAAOsmH,EAAkBvjH,GAAO,SAAA+jG,GAC9B,IAAM6f,EACJ7f,EAAUE,WAAaF,EAAUE,UAAU4f,aAC7C,OAAQD,GAAiBA,IAAkB3mH,MAQlC0uG,EAAiB,SAAC3rG,GAC7BA,EAAMs8C,QAAQv+C,SAAQ,SAAAgmG,GAElBA,EAAUE,YACTF,EAAUE,qBAAqB6f,KAC9B/f,EAAUE,qBAAqB8f,MAEjChgB,EAAUE,UAAU0H,qBASbtE,EAAyB,SAACrnG,GACrCA,EAAMs8C,QAAQv+C,SAAQ,SAAAgmG,GACpB,IAAMvnD,EAASunD,EAAUE,UAErBznD,aAAkBwnE,KACpBxnE,EAAOynE,uBAKA1U,EAAkB,SAACvvG,EAAwByrB,GACtD,OAAO83F,EAAkBvjH,GAAO,SAAA+jG,GAC9B,IAAMvnD,EAASunD,EAAUE,UAEzB,GACEznD,aAAkB0nE,KAClB1nE,aAAkB2nE,KAClB3nE,aAAkBunE,KAClBvnE,aAAkBsnE,IAClB,CACA,IAAMM,EAAe5nE,EAAOgrD,YAC5B,OAAQ4c,GAAgBA,IAAiB34F,EAG3C,OAAO,MAIEmkF,EAA0B,SACrC5vG,EACAynG,GAEA,OAAO8b,EAAkBvjH,GAAO,SAAA+jG,GAC9B,IAAMvnD,EAASunD,EAAUE,UAEzB,QAAIznD,aAAkBunE,QAEjBvnE,EAAOmrD,qBACRnrD,EAAOmrD,sBAAwBF,OAQ1ByI,EAA0B,SACrClwG,EACAiwG,GAEA,OAAOsT,EAAkBvjH,GAAO,SAAA+jG,GAC9B,IAAMvnD,EAASunD,EAAUE,UACzB,QAAIznD,aAAkB2nE,QAEjB3nE,EAAOy0D,qBACRz0D,EAAOy0D,sBAAwBhB,OAQ1BZ,EAAoC,SAC/CrvG,EACA6sC,GAEA,OAAO02E,EAAkBvjH,GAAO,SAAA+jG,GAC9B,IAAMvnD,EAASunD,EAAUE,UACzB,QAAIznD,aAAkBwnE,QAEjBxnE,EAAOytD,+BACRztD,EAAOytD,gCAAkCp9D,OAQpCs9D,EAAoC,SAC/CnqG,EACA6sC,GAEA,IAAK,IAAIsO,EAAW,EAAGA,EAAWn7C,EAAMs8C,QAAQl7C,SAAU+5C,EAAU,CAClE,IAAMqB,EAASx8C,EAAMs8C,QAAQnB,GAAU8oD,UACvC,GACEznD,aAAkBwnE,KAClBxnE,EAAOytD,gCAAkCp9D,EAEzC,MAAO,CAAE2P,SAAQrB,YAIrB,OAAO,MAGI83D,EAAgC,SAC3CoR,EACAC,EACAC,GAOA,OAAOC,EAAkBH,EAAiBC,EAFxCA,EAAiBC,EAAkBA,EAAkB,EAAIA,IAKhDC,EAAoB,SAC/BH,EACAtR,EACA0R,GAEA,IAAMC,EAAiB,YAAOxR,EAAWmR,IACnCM,EAAYD,EAAkB3R,GACpC2R,EAAkB5+C,OAAOitC,EAAW,GACpC2R,EAAkB5+C,OAAO2+C,EAAS,EAAGE,GAErC,IAAIC,EAAkBzR,EAAmBkR,GACrCQ,EAAqBD,EAYzB,OAV8B7R,IAAc6R,EAMjBC,EAAqBJ,EAJ9C1R,EAAY6R,GAAmBH,GAAWG,EAKIC,GAAsB,EAHpE9R,EAAY6R,GAAmBH,GAAWG,IAIIC,GAAsB,GAE/D,CAAEvoE,QAASooE,EAAmBvB,WAAY0B,K,4JCnUtCX,EAAb,4MA+CEp/B,4BAA8B,WAC5B0lB,YAA8B,CAC5B1vG,KAAM,QACN2vG,aAAc,yBAlDpB,EAsDE5iB,uBAAyB,SAACtkD,EAAe+I,GACvC,EAAK70C,MAAMowF,uBACTtkD,EACA+I,EACA,wBA1DN,oEAGwBrb,GAGpB,OAAOA,EAAUurD,WANrB,0CAUI,GAAIzkF,KAAKN,MAAM+kF,SAAU,CACvB,IAAM/wD,EAAS1zB,KAAKyvG,YACpBzvG,KAAKN,MAAMkvG,mBAAmBl7E,EAASA,EAAOhE,UAAY,SAZhE,yCAgBqB0oC,GACjB,IAAKA,EAAUqsB,UAAYzkF,KAAKN,MAAM+kF,SAAU,CAC9C,IAAM/wD,EAAS1zB,KAAKyvG,YACpBzvG,KAAKN,MAAMkvG,mBAAmBl7E,EAASA,EAAOhE,UAAY,SAnBhE,mCAwBI,OAAO1vB,KAAKN,MAAMwF,UAxBtB,sCA4BQlF,KAAKykD,QAAQzkD,KAAKykD,OAAOilC,kBA5BjC,+EAmC0B,IAAD,EACgB1pF,KAAKN,MAAlCwF,EADa,EACbA,QAASsrG,EADI,EACJA,gBACjB,OACGtrG,GACAsrG,GACAtrG,EAAQsqG,eAAegB,GAInBtrG,EAAQuqG,UAAUe,GAFhB,OA1Cb,+BA8DY,IAAD,SAC8BxwG,KAAKN,MAAlCwF,EADD,EACCA,QAASsrG,EADV,EACUA,gBACX98E,EAAS1zB,KAAKyvG,YACpB,OAAK/7E,GAAWxuB,EAMd,gBAAC,IAAD,CACEvH,IAAK,SAAA8mD,GAAM,OAAK,EAAKA,OAASA,GAC9BuqC,WAAYhvF,KAAKN,MAAMsvF,WACvBa,aAAc7vF,KAAKN,MAAMmwF,aACzBz2D,gBAAiBp5B,KAAKN,MAAM05B,gBAC5BnC,iBAAkBj3B,KAAKN,MAAMu3B,iBAC7B4C,wBAAyB75B,KAAKN,MAAMm6B,wBACpC80D,4BAA6B3uF,KAAKN,MAAMivF,4BACxCmB,uBAAwB9vF,KAAK8vF,uBAC7B/C,4BAA6B/sF,KAAK+sF,4BAClCxnD,eAAgBvlC,KAAKN,MAAM6lC,eAC3BrgC,QAASA,EACTkV,MAAO,CACLsZ,UAEFzZ,uBAAwB/U,EACxBgV,iBAAkBwZ,EAClBqyD,OAAQryD,EAAOq5F,YACfn9B,qBAAsB5vF,KAAKN,MAAMkwF,uBAtB5B,+CAAuB4gB,EAAvB,eAnEb,GAA2C9yG,aA+F9BkzG,EAA8B,SACzClxG,GADyC,OAEtC,gBAACysH,EAA0BzsH,K,gCCzGhC,sDAMe,SAASi6D,EAAT,GAA6D,IAApCpY,EAAmC,EAAnCA,QACtC,OAAO,uBAAKl0C,UAAWk0C,EAAUltC,IAAgBC,Q,mJCF9Bw9E,E,4MAInB1pF,OAAe,K,sDAGTpI,KAAKoI,QAAQpI,KAAKoI,OAAOlI,U,+BAGrB,IAAD,OACCub,EAAsBzb,KAAKN,MAA3B+b,kBACFE,EAAcF,EAChBA,EAAkBG,sBAClBrd,EAEJ,OACE,gBAAC,IAAD,CACEoB,OAAQK,KAAKN,MAAMmc,SAAW,OAAS,QACvCnT,cAAY,EACZhI,MAAOV,KAAKN,MAAMgB,MAClBb,kBAAmB8b,EACnBrb,mBACEmb,EAAoBA,EAAkBM,0BAAuBxd,EAE/D6B,SAAU,SAAC+H,GAAD,OAAkB,EAAKzI,MAAMU,SAAS+H,IAChDxK,IAAK,SAAAgL,GAAK,OAAK,EAAKP,OAASO,GAC7B5G,WAAS,Q,GA3ByBrE,aAiC7Bq4F,EAA2B,SAAC,GAIJ,IAHnCr1F,EAGkC,EAHlCA,MACA+a,EAEkC,EAFlCA,kBACA+7E,EACkC,EADlCA,sBAEA,OAAK92F,GAAU+a,EAAkByxD,aAI1BxsE,EAHE,gBAAC82F,EAAD,Q,0LCjCLrlF,EAAkBC,EAAOD,GAqHV66G,E,sKAMgB,IAA7B31G,EAA4B,wDAC5BrX,KAAKoI,QAAQpI,KAAKoI,OAAOlI,MAAMmX,K,+BAG3B,IAAD,SAiBHrX,KAAKN,MAfPgB,EAFK,EAELA,MACAN,EAHK,EAGLA,SACA6c,EAJK,EAILA,SACA/X,EALK,EAKLA,QACA+U,EANK,EAMLA,uBACAC,EAPK,EAOLA,iBACAm9E,EARK,EAQLA,kBACAC,EATK,EASLA,yBACA21B,EAVK,EAULA,SACA11B,EAXK,EAWLA,mBACA53F,EAZK,EAYLA,OACAie,EAbK,EAaLA,eACAyI,EAdK,EAcLA,QACA3kB,EAfK,EAeLA,GACGwrH,EAhBE,6NAmBDC,EA9G4B,SAAC,GAYnB,IAXlBjoH,EAWiB,EAXjBA,QACA+U,EAUiB,EAVjBA,uBACAC,EASiB,EATjBA,iBACA+yG,EAQiB,EARjBA,SACA51B,EAOiB,EAPjBA,kBAQM9lE,EAAOS,YACX/X,EACAC,EACAm9E,QAAqB94F,GAEjB6uH,EAAU77F,EAAKxB,eAAe9mB,KAAI,YAAiB,IAAdyJ,EAAa,EAAbA,OACzC,MAAO,CACLvK,KAAMuK,EAAOgd,UACbhvB,MAAOgS,EAAOgd,UACd/J,WAAYzgB,EACR,kBACE,gBAAC,IAAD,CACEuf,SA3BG,GA4BHd,IAAK0pG,IAAwB/5F,aAAapuB,EAASwN,WAGvDnU,MAGF+uH,EAASL,EACX,GACA17F,EAAKgB,cAActpB,KAAI,YAAgB,IAAbmmB,EAAY,EAAZA,MACxB,MAAO,CACLjnB,KAAMinB,EAAMM,UACZhvB,MAAO0uB,EAAMM,cAIrB,MAAM,GAAN,mBAAW09F,GAAX,CAAoB,CAAE3sH,KAAM,cAA5B,YAA8C6sH,IAqEpBC,CAA8B,CACpDroH,UACA+U,yBACAC,mBACA+yG,WACA51B,sBAEIm2B,EAGS,IAFbL,EAAgBhkH,QACd,SAAAqiB,GAAM,YAAoBjtB,IAAhBitB,EAAOrjB,MAAsBzH,IAAU8qB,EAAOrjB,QACxDkB,OASEtI,EArFyB,SAAC,GAY5B,IAXNmE,EAWK,EAXLA,QACA+U,EAUK,EAVLA,uBACAC,EASK,EATLA,iBACAo9E,EAQK,EARLA,yBACAntE,EAOK,EAPLA,WAQA,IAAKmtE,EAA0B,OAAO,EACtC,IAAKpyF,EAAS,OAAO,EAErB,IAAMwN,EAASwX,YACbjQ,EACAC,EACAiQ,GAEF,OAAKzX,IAOkBP,EAAG67B,iBAAiBvd,kBACzCvrB,EAAQgrB,qBACRxd,EAAO6gB,WAEcmZ,kCACrB4qD,GA4CwCm2B,CAA2B,CACjEvoH,UACAoyF,2BACAr9E,yBACAC,mBACAiQ,WAAYzpB,IAKT8sH,OAGHjvH,EAFAg5F,EAFA,gBAAC,QAAD,oDAOF,OACE,gBAAC,IAAD,eACE53F,OAAQA,EACR6B,SAAU,wBACVd,MAAOA,EACPN,SAAUA,EACV6c,SAAUA,EACVW,eAAgBA,EAChByI,QAASA,EACTE,WAAY4mG,EACZpsH,UAAWA,EACXpD,IAAK,SAAAgL,GAAK,OAAK,EAAKP,OAASO,GAC7BjH,GAAIA,GACAwrH,Q,GArEgCxvH,e,yICvH7B,SAASgwH,EAAavyB,GAkCnC,OAlC6C,kDAE3C,WACEj2F,EACAwuB,EACAC,EACAC,EACAC,EACAoL,GACC,IAAD,8BACA,cACE/5B,EACAwuB,EACAC,EACAC,EACAC,EACAoL,IAGGC,YAAc,IAAI1M,SAAYA,UAAaxQ,KAAKm5E,IACrD,EAAK97D,eAAeyqC,SAAS,EAAK5qC,aAXlC,EATyC,qDAwBzCl/B,KAAKk/B,YAAYj8B,SAAS61C,EAAI94C,KAAKm/B,UAAUqR,OAC7CxwC,KAAKk/B,YAAYj8B,SAAS81C,EAAI/4C,KAAKm/B,UAAUuR,OAC7C1wC,KAAKk/B,YAAYyuF,SAAY3tH,KAAKm/B,UAAUyuF,WAAar3G,KAAKgjC,GAAM,OA1B3B,oCA6BvBr0C,EAASgzB,EAAiBxlB,GAC5C,OAAOyoF,MA9BkC,GACVhmE,O,6BCmDrC,kCAAO,IAAM04F,EAA6B,SACxCntH,EACA+a,GAEA,OAAI/a,IAGF+a,GAAqBA,EAAkByxD,aACnCzxD,EAAkB4xD,kBAClB,M,oQC/DFl7D,EAAkBC,EAAOD,GAQzB27G,EAA0B,SAACrtH,GAAD,MACrB,WAATA,GAA8B,kBAATA,GACjBstH,EAA0B,SAACttH,GAAD,MACrB,WAATA,GAA8B,kBAATA,GAEjButH,EAAiC,SACrCz8G,EACA08G,EACA7zG,GAEA,OAAO9a,oBAAU2uH,EAAYl5F,QAAQ,SAAA5a,GACnC,IAAM+zG,EAAeD,EAAYvzG,IAAIP,GACrC,IAAK+zG,EAAaC,UAChB,OAAO,KAGT,GACE/zG,EAAMsW,gBACNtW,EAAMsW,eAAegc,kCACnBwhF,EAAavhF,mCAGf,OAAO,KAGT,IADA,IAAI1hB,EAAa,GACRhsB,EAAI,EAAGA,EAAIivH,EAAapjG,qBAAsB7rB,IACjDmb,EAAMsW,gBAAwB,IAANzxB,GACxBmb,EAAM+yB,kBAAoBluC,GAAK,GAC/BivH,EAAanjG,aAAa9rB,GAAGguE,cAEjChiD,EAAW/rB,KAAKgvH,EAAanjG,aAAa9rB,IAG5C,IAAM0yB,EAAYu8F,EAAajiF,WAE/B,MAAO,CACLxrC,KAAM0Z,EACN7Y,KAAM6Y,EACN6xB,cAAekiF,EAAat9F,cAC5Bsb,cAAe,CAAC36B,EAAQogB,GAAWxoB,OAAO0R,SAASlE,KA7CjC,KA8ClBka,aAAcq9F,EAAaE,uBAC3Bh2G,SAAU81G,EACVjjG,WAAYA,EACZ7Q,QACA+xB,UAAW+hF,EAAa/hF,gBAEzBhjC,OAAO0R,UAICwzG,EAA2B,SACtC5tH,GAEA,IAAMosC,EAAgB16B,EACnB26B,WAAW36B,EAAGsI,WAAWC,OACzByV,2BACGm+F,EAAeP,EAAwBttH,GACvC8tH,EAAeT,EAAwBrtH,GAE7C,OAAO2vB,IACL9wB,oBAAUutC,GAAe,SAAAxc,GACvB,IAAM9e,EAASs5B,YAAmBxa,GAC5BjW,EAAQ,CACZiW,YACAK,oBAAgBnyB,EAChB4uC,sBAAkB5uC,GAGpB,MAAM,GAAN,mBACMgwH,EACAP,EACEz8G,EACA8e,EAAUm+F,uBACVp0G,GAEF,IAPN,YAQMk0G,EACAN,EACEz8G,EACA8e,EAAUo+F,oBACVr0G,GAEF,UAOCs0G,EAA6B,SACxCjuH,EACA+vB,GAEA,IAAMud,EAA6B57B,EAAG67B,iBAAiBC,8BACrD97B,EAAGsI,WAAWC,MACd8V,GAEIH,EAAY0d,EAA2BG,eAEvC9zB,EAAQ,CAAEiW,YAAWK,eADJqd,EAA2B1V,eAG9Cs2F,EAAkB,sBAChBb,EAAwBrtH,GACxButH,EACE,GACA39F,EAAUu+F,8BAA8Bp+F,GACxCpW,GAEF,IAPgB,YAQhB2zG,EAAwBttH,GACxButH,EACE,GACA39F,EAAUw+F,2BAA2Br+F,GACrCpW,GAEF,KAIN,GADuB,KACnBoW,EAA+B,CACjC,IAIMH,EAJ6Ble,EAAG67B,iBAAiBC,8BACrD97B,EAAGsI,WAAWC,MAHK,IAMwBwzB,eAE7CygF,EAAkB,sBACbA,GADa,YAEZb,EAAwBrtH,GACxButH,EACE,GACA39F,EAAUu+F,8BAbG,IAcbx0G,GAEF,IARY,YASZ2zG,EAAwBttH,GACxButH,EACE,GACA39F,EAAUw+F,2BApBG,IAqBbz0G,GAEF,KAIR,OAAOu0G,GAIIG,EAA+B,SAC1CruH,EACA8qC,GAEA,IAAMwjF,EAA+B58G,EAAG67B,iBAAiBghF,gCACvD78G,EAAGsI,WAAWC,MACd6wB,GAEIlb,EAAY0+F,EAA6B7gF,eAEzC9zB,EAAQ,CAAEiW,YAAW8c,iBADF4hF,EAA6B12F,eAGtD,MAAM,GAAN,mBACMy1F,EAAwBrtH,GACxButH,EACE,GACA39F,EAAU4+F,gCAAgC1jF,GAC1CnxB,GAEF,IAPN,YAQM2zG,EAAwBttH,GACxButH,EACE,GACA39F,EAAU6+F,6BAA6B3jF,GACvCnxB,GAEF,MAKK+0G,EAA0B,SACrC1uH,GAEA,IAAM6tH,EAAeP,EAAwBttH,GACvC8tH,EAAeT,EAAwBrtH,GAEvCkuH,EAAqB,GACrBS,EAAuB,GACvBC,EAAkBhB,EAAyB5tH,GAE3CosC,EAAgB16B,EACnB26B,WAAW36B,EAAGsI,WAAWC,OACzByV,2BAuDH,OAtDA7wB,oBAAUutC,GAAe,SAAAxc,GACvB,IAAM9e,EAASs5B,YAAmBxa,GAGlC/wB,oBAAU+wB,EAAUC,4BAA4B,SAAAE,GAC9C,IAAME,EAAiBL,EAAUI,kBAAkBD,GAC7CpW,EAAQ,CAAEiW,YAAWK,kBAEvB69F,GACFI,EAAmBzvH,KAAK6+B,MACtB4wF,EACAX,EACEz8G,EACA8e,EAAUu+F,8BAA8Bp+F,GACxCpW,IAGFk0G,GACFK,EAAmBzvH,KAAK6+B,MACtB4wF,EACAX,EACEz8G,EACA8e,EAAUw+F,2BAA2Br+F,GACrCpW,OAMR9a,oBAAU+wB,EAAU4c,qBAAqB,SAAA1B,GACvC,IAAM4B,EAAmB9c,EAAUid,oBAAoB/B,GACjDnxB,EAAQ,CAAEiW,YAAW8c,oBAEvBohF,GACFa,EAAqBlwH,KAAK6+B,MACxBqxF,EACApB,EACEz8G,EACA8e,EAAU4+F,gCAAgC1jF,GAC1CnxB,IAGFk0G,GACFc,EAAqBlwH,KAAK6+B,MACxBqxF,EACApB,EACEz8G,EACA8e,EAAU6+F,6BAA6B3jF,GACvCnxB,UAMJ,GAAN,mBAAWi1G,GAAoBV,EAAuBS,IAG3CE,EAAoB,SAC/B/9F,EACAC,GAEA,IAAKA,EAAY,OAAOD,EAExB,IAAM0sB,EAAsBzsB,EAAW5K,cA4BvC,OAnBwB,SACtB2K,GAEA,IAAKC,EACH,OAAOD,EAGT,IAAK,IAAItyB,EAAI,EAAGA,EAAIsyB,EAAKloB,SAAUpK,EACjC,GAAIsyB,EAAKtyB,GAAGwB,KAAKmmB,gBAAkBq3B,EAAqB,CACtD,IAAMsxE,EAAah+F,EAAKtyB,GACxBsyB,EAAKw8C,OAAO9uE,EAAG,GACfsyB,EAAKi+F,QAAQD,GAIjB,OAAOh+F,EAIFk+F,CAAgBl+F,EAAKpoB,QA1BP,SAACumH,GACpB,OAEG,IADDA,EAAqBjvH,KAAKmmB,cAAclf,QAAQu2C,U,+CCnRtD,iFAgBaopB,EAAwC,SAAC,GAMxC,IALZC,EAKW,EALXA,gCACA7iD,EAIW,EAJXA,SACA9hB,EAGW,EAHXA,QACA4kE,EAEW,EAFXA,cACArE,EACW,EADXA,QAEMysD,EAAkB,SAAChnH,GACvB,IAAIR,EAAOm/D,EAAgC3+D,GAC3C,GAAIu6D,GAAWA,EAAQ75D,OAAQ,CAC7B,IAAMumH,EAAuB1sD,EAAQ/5D,QAAO,SAAAy5D,GAAK,OAAIA,EAAMn6C,MAAQ9f,KAC7DinH,EAAqBvmH,SACzBlB,EACE,gBAAC,IAAD,CACEA,KAAMA,EACN6mD,mBAAoB4gE,EAAqB,GAAG9sD,WAKpD,OAAO36D,GAGT,OACE,gBAAC,IAAD,CACEsgB,IAAK45B,YAA0BilB,GAC/Bt5D,SACEu5D,IACAjlB,YAA4BglB,EAAgC7mE,MAE9DkJ,YAAagmH,EAAgB,iBAC7BviH,cAAeuiH,EAAgB,iBAC/B1iH,SACE,gBAAC,IAAD,CACEwX,SAAUA,EACVd,IAAK2jD,EAAgCz2C,eAGzCluB,QAASA,EACT2K,sBAAoB,M,0ICjCbk6D,EAAoC,SAApCA,EAAoC,GAWE,IARjDtW,EAQgD,EARhDA,oBACAj0C,EAOgD,EAPhDA,SACAwH,EAMgD,EANhDA,SACAsiD,EAKgD,EALhDA,cACAQ,EAIgD,EAJhDA,cACAG,EAGgD,EAHhDA,gBACAD,EAEgD,EAFhDA,oBACAtB,EACgD,EADhDA,gBACgD,EAE9CsB,GAAuB,GAFuB,iBACzCooD,EADyC,KAClBC,EADkB,WAIhD,OAAO1/F,IACL0E,OAAOC,KAAKm8B,GAAqBjoD,KAAI,SAAAwf,GAMnC,IAAM0oC,EAAqBD,EAAoBzoC,GAC/C,IAAK0oC,EAAoB,OAAO,KAEhC,GAAuC,kBAA5BA,EAAmB1wD,KAAmB,CAE/C,IAAMsvH,EAA4B5+D,EAC5BzwD,EAAQ4hD,YAA4B6O,EAAmB1wD,MACvDuN,EAAWu5D,IAAkB7mE,EACnC,OACE,gBAAC,IAAD,CACE+nB,IAAK/nB,EACLiJ,YAAa8e,EACbza,SAAUA,EACVtM,GAAI,oBAAsBquH,EAAuBtvH,KACjDwM,SACE,gBAAC,IAAD,CACEwX,SAAUA,EACVd,IAAKosG,EAAuBl/F,eAGhCluB,QAAS,WACPsa,EAAS8yG,EAAuBtvH,KAAMsvH,IAExCpyH,IAAKqQ,EAAW05D,OAAkBnpE,IAKtC,IAAMyxH,EAAiE7+D,EACvE,GAAI4V,EACF,MAAO,CACL,gBAAC,IAAD,CAAWt+C,IAAK+5B,YAAwB/5B,IAAOA,IAC/CpN,OACAmsD,EAAkC,CAChCtW,oBAAqB8+D,EACrB/yG,WACAwH,WACAsiD,eAAe,EACfQ,gBACAG,kBACAD,oBAAqBqoD,EACrB3pD,qBAIJ,IAAM76D,EAAgBukH,IAAuBpnG,EACvCwnG,EAAU9pD,EAAgB19C,GAChC,OACE,gBAAC,IAAD,CACEA,IAAKA,EACL9e,YAAa8e,EACblb,6BAA6B,EAC7BjC,cAAeA,EACf2B,SACEgjH,EAAU,gBAAC,IAAD,CAAUxrG,SAAUA,EAAUd,IAAKssG,IAAc,KAE7DrjH,kBAAmB,kBACjB46D,EAAkC,CAChCtW,oBAAqB8+D,EACrB/yG,WACAwH,WACA8iD,gBACAG,kBACAD,oBAAqBn8D,EACjBwkH,OACAvxH,EACJ4nE,6B,qKCtGZziE,EAAS,CACb4K,UAAW,CACT9P,QAAS,OACT+P,cAAe,SACfpL,KAAM,IAmBGgV,EAA2B,SACtCuF,GADsC,OAMO,IAH7C9e,iBAAO,EAAG8e,EAAmBoN,sBAAsB,SAAA7rB,GAEjD,OAD0Bye,EAAmBqN,aAAa9rB,GAChCguE,gBACzB9jE,QAAO,SAAA+mH,GAAS,OAAIA,KAAW7mH,QAEf8mH,E,uKAIT,IAAD,SASHnwH,KAAKN,MAPPge,EAFK,EAELA,mBACAlF,EAHK,EAGLA,gBACAtT,EAJK,EAILA,QACAkV,EALK,EAKLA,MACAH,EANK,EAMLA,uBACAC,EAPK,EAOLA,iBACAwB,EARK,EAQLA,0BAGF,IAAKA,EAIH,OAHAvU,QAAQrG,MACN,oEAEK,KAKT,IAAM4tC,EAAkBhxB,EAAmBoN,qBACrC5R,EAAa,CACjB4R,mBAAoB,kBAAM4jB,GAC1B3jB,aAAc,SAAAqb,GACZ,OAAO5tB,EAAgB4tB,IAAU,KAIrC,OACE,uBAAKvoC,MAAO6F,EAAO4K,WAChB1P,iBAAO,EAAG8e,EAAmBoN,sBAAsB,SAAA7rB,GAClD,IAAMwc,EAAoBiC,EAAmBqN,aAAa9rB,GACpDmxH,EAAqB10G,EAA0Bm7E,sBACnDp7E,EAAkB8X,WAGpB,OAAI9X,EAAkBwxD,aAAqB,KAEzC,gBAACmjD,EAAD,CACE1yG,mBAAoBA,EACpBxE,WAAYA,EACZuC,kBAAmBA,EACnBgP,eAAgBxrB,EAChByB,MAAO8X,EAAgBvZ,GACvBmB,SAAU,SAAAM,GAAK,OAAI,EAAKhB,MAAM2wH,kBAAkBpxH,EAAGyB,IACnDwE,QAASA,EACTkV,MAAOA,EACPH,uBAAwBA,EACxBC,iBAAkBA,EAClBuO,IAAKxpB,EACLyc,0BAA2BA,QAI/BvD,EAAyBuF,IACzB,gBAAC,IAAD,KACE,gBAAC,QAAD,6C,GA5D4ChgB,c,sICpClDyU,EAAkBC,EAAOD,GAMzBm+G,EAAoB,SAAC70C,GAGzB,IAFA,IAESx8E,EAAI,EAAGA,EAAIw8E,EAAapyE,SAAUpK,EACzC,IAAiE,IAH5B,iCAGFyI,QAAQ+zE,EAAax8E,IACtD,OAAO,EAGX,OAAO,GAYI07F,EAAqB,SAChC5/C,GAEA,IAAKA,EACH,MAAO,GAkDT,OAAO3qB,IACLxxB,iBAAO,EAAGm8C,EAAmBjpB,SAAS,SAAA7yB,GACpC,OAjDsC,SAApCsxH,EACJ5/F,EACA0nD,EACAm4C,EACAC,GAIA,IAAM71B,EAAc41B,EAChBF,EAAkB3/F,GAClB8/F,EACEC,EAAqB,CAAEpvH,KAAMqvB,EAAUiqE,eAE7C,OAAIviB,EAAS9kD,YAAcphB,EAAG4mE,SAASiC,UAC/B,CACJ01C,GADF,mBAEKC,IAAQt4C,EAAS0B,sBAAsBxpD,aAAa,SAAAqgG,GAAS,OAC9DL,EACED,EAAkBM,GAAlB,UACOjgG,EADP,YACmBigG,GADnB,UAEOjgG,EAFP,YAjCH,IAmC6CigG,EAnC1BnsH,QAAQ,MAAO,QAAQA,QAAQ,KAAM,OAAS,IAiC9D,KAGA4zE,EAAS5N,SAASmmD,IAClB,EACAh2B,QAIGviB,EAAS9kD,YAAcphB,EAAG4mE,SAASh3D,MACtC,CACJ2uG,GADF,mBAEKC,IACD,IAAI5uG,MAAMs2D,EAAS4B,oBAAoBlI,KAAK,KAC5C,SAACtwE,EAAG2kC,GAAJ,OACEmqF,EAAkC,GAAD,OAC5B5/F,EAD4B,YAChByV,EADgB,KAE/BiyC,EAAS6B,WAAW9zC,IACpB,EACAw0D,QAMD,CAAC81B,GAMDH,CACLx1E,EAAmB4gC,UAAU18E,GAC7B87C,EAAmBhpB,MAAM9yB,IACzB,GACA,U,iDCzFR,2DACMkT,EAAkBC,EAAOD,GAElB0+G,EAAyC,SACpDt8E,GAEA,OAAOj1C,oBAAUi1C,EAAe1pB,iBAAiB,SAAApP,GAAiB,OAChEA,EAAkBwxD,cAClB96D,EAAGy8B,kBAAkBC,SAASpzB,EAAkB8X,YAChDphB,EAAGy8B,kBAAkBqvD,WAAWxiF,EAAkB8X,WAC9C,KACA9X,KACJtS,OAAO0R,Y,+LCAUo4E,E,4MAKnBhrF,MAAQ,CACN6oH,YAAY,G,sDAIR9wH,KAAKoI,QAAQpI,KAAKoI,OAAOlI,U,+BAGrB,IAAD,SACoBF,KAAKN,MAAxBwF,EADD,EACCA,QAASkV,EADV,EACUA,MACTsZ,EAAWtZ,EAAXsZ,OAEFunB,EAA4B,kBAChC/1C,GAAWwuB,EACPsW,IAA0BI,uBACxBllC,EAAQgrB,qBACRhrB,EACAwuB,GAEF,IAEN,OACE,gBAAC,WAAD,KACE,gBAAC,IAAD,CACEqnB,mBAAoBrnB,EAASA,EAAOg2F,eAAiB,KACrDzuE,0BAA2BA,EAC3Bx/B,kBAAmBzb,KAAKN,MAAM+b,kBAC9B/a,MAAOV,KAAKN,MAAMgB,MAClBN,SAAUJ,KAAKN,MAAMU,SACrByb,SAAU7b,KAAKN,MAAMmc,SACrB+B,eAAgB5d,KAAKN,MAAMke,eAC3ByI,QAASrmB,KAAKN,MAAM2mB,QACpB1oB,IAAK,SAAAgL,GAAK,OAAK,EAAKP,OAASO,GAC7BoyF,aAAc,kBAAM,EAAK1yF,SAAS,CAAEyoH,YAAY,KAChD72G,uBAAwBja,KAAKN,MAAMua,uBACnCC,iBAAkBla,KAAKN,MAAMwa,iBAC7BE,MAAOA,IAERpa,KAAKiI,MAAM6oH,YAAcp9F,GACxB,gBAAC,IAAD,CACEpvB,MAAO,gBAAC,QAAD,wBACPqH,MAAI,EACJovC,mBAAoBrnB,EAAOg2F,eAC3B/uE,SAAU,kBAAM,EAAKtyC,SAAS,CAAEyoH,YAAY,KAC5CzqG,QAAS,WACP,EAAKhe,SAAS,CAAEyoH,YAAY,IACxB,EAAK1oH,QAAQ,EAAKA,OAAOqyF,yBAE/B5/C,sBAAuB,gBAAC,QAAD,sCACvBC,4BACE,gBAAC,QAAD,gEAIFlwC,aAAc,0CACdqwC,0BAA2BA,S,GA5DSv9C,aAoEnCw4F,EAA4B,SACvCx2F,GAEA,OAAOw7F,YACLx7F,EACA,yBACA,oB,8BCtFJ,yRAgBMyS,EAAkBC,EAAOD,GAElBgmE,EAAiB,wBAEjB8R,EAAqB,WAChC,IAAK7lD,IAAUG,IAAI4zC,GAAiB,OAAO,EAC3C,IAAMM,EAAmBr0C,IAAU1pB,IAAIy9D,GACjC44C,EAAcltF,IAAcmtF,sBAChCv4C,EACA,eAEF,OAAoB,OAAhBs4C,GAEGA,EAAc,GAGVlvE,EAAyB,WACpC,IAAKzd,IAAUG,IAAI4zC,GAAiB,OAAO,EAC3C,IAAMM,EAAmBr0C,IAAU1pB,IAAIy9D,GACjC84C,EAAkBptF,IAAcmtF,sBACpCv4C,EACA,mBAEF,OAAwB,OAApBw4C,GAEGA,EAAkB,GAGdnvE,EAAsB,WACjC,IAAK1d,IAAUG,IAAI4zC,GAAiB,OAAO,EAC3C,IAAMM,EAAmBr0C,IAAU1pB,IAAIy9D,GACjC+4C,EAAertF,IAAcmtF,sBACjCv4C,EACA,gBAEF,OAAqB,OAAjBy4C,GAEGA,EAAe,GAGXxlC,EAA2B,SAACzrC,GACvC,IAAMioC,EAAa,IAAI/1E,EAAGu6E,WACpBykC,EAAc,IAAIh/G,EAAGitC,iBACrBgyE,EAAiB,IAAIj/G,EAAGitC,iBAE9BqQ,YAAkBxP,GAAWj6C,SAAQ,SAAApF,GAAK,OACxCsnF,EAAWyE,YAAY/rF,EAAOsnF,EAAWb,qBAE3Cx3B,YAAgC5P,GAAWj6C,SAAQ,SAAAw6C,GAC7CA,EAAmBlV,YACrB8lF,EAAep4C,OACbx4B,EAAmBh2B,YACnB4mG,EAAetzH,QAGjBqzH,EAAYn4C,OAAOx4B,EAAmBh2B,YAAa2mG,EAAYrzH,WAInEsmC,IAAUqS,IAAI0hC,EAAgB,CAC5B+P,WAAY71E,YAAoB61E,GAChC6oC,YAAa7oC,EAAWb,iBACxB8pC,YAAa9+G,YAAoB8+G,GACjCD,aAAcC,EAAYrzH,OAC1BszH,eAAgB/+G,YAAoB++G,GACpCH,gBAAiBG,EAAetzH,SAGlCoqF,EAAWn1E,SACXo+G,EAAYp+G,SACZq+G,EAAer+G,UAGJ44E,EAAsC,SACjDzmF,EACA+6C,GAEA,IAAK+P,YAAiB/P,KAAegqC,IAAsB,OAAO,EAElE,IAAMxR,EAAmBr0C,IAAU1pB,IAAIy9D,GACjCk5C,EAAoBxtF,IAAcytF,qBACtC74C,EACA,cAEF,IAAK44C,EAAmB,OAAO,EAE/B,IAAMnpC,EAAa,IAAI/1E,EAAGu6E,WAiB1B,OAhBAx5E,YACEg1E,EACAmpC,EACA,kBACAnsH,GAEFyqD,YAAyB1P,GAAWj6C,SAAQ,SAAA0pD,GAC1CA,EAAaw4B,WAAWuF,aACtBvF,EACA,EACAA,EAAWb,iBACX33B,EAAajP,gBAGjBynC,EAAWn1E,UAEJ,GAGI64E,EAA4C,SACvD1mF,EACA+6C,GAEA,IACIgQ,YAAuBhQ,KACtBkQ,YAA4BlQ,KAC7B4B,MAA6BC,IAE/B,OAAO,EAET,IAAM22B,EAAmBr0C,IAAU1pB,IAAIy9D,GACjCo5C,EAAqB1tF,IAAcytF,qBACvC74C,EACA,eAEI+4C,EAAwB3tF,IAAcytF,qBAC1C74C,EACA,kBAEF,IAAK84C,IAAuBC,EAAuB,OAAO,EAE1D,IAAML,EAAc,IAAIh/G,EAAGitC,iBACrBgyE,EAAiB,IAAIj/G,EAAGitC,iBAoD9B,OAnDAlsC,YACEi+G,EACAI,EACA,kBACArsH,GAEFgO,YACEk+G,EACAI,EACA,kBACAtsH,GAEF2qD,YAAgC5P,GAAWj6C,SAAQ,SAAAw6C,GAC7CA,EAAmBlV,YACrBkV,EAAmBjB,WAAWkyE,mBAC5BL,EACA,EACAA,EAAetzH,OACf0iD,EAAmBC,aAGrBD,EAAmBjB,WAAWkyE,mBAC5BN,EACA,EACAA,EAAYrzH,OACZ0iD,EAAmBC,gBAIzBqP,YAAqC7P,GAAWj6C,SAC9C,SAAAq7C,GACMA,EAAwB/V,YAC1B+V,EAAwB9B,WAAWkyE,mBACjCL,EACA,EACAA,EAAetzH,OACfujD,EAAwB9B,WAAWzhD,QAGrCujD,EAAwB9B,WAAWkyE,mBACjCN,EACA,EACAA,EAAYrzH,OACZujD,EAAwB9B,WAAWzhD,WAK3CszH,EAAer+G,SACfo+G,EAAYp+G,UAEL,GAGI+4E,EAAmD,SAC9D5mF,EACAm8C,GAEA,IAAKQ,MAA6BC,IAAuB,OAAO,EAEhE,IAAM22B,EAAmBr0C,IAAU1pB,IAAIy9D,GACjCo5C,EAAqB1tF,IAAcytF,qBACvC74C,EACA,eAEI+4C,EAAwB3tF,IAAcytF,qBAC1C74C,EACA,kBAEF,GAAK84C,GAAuBC,EAA5B,CAEA,IAAML,EAAc,IAAIh/G,EAAGitC,iBACrBgyE,EAAiB,IAAIj/G,EAAGitC,iBAgC9B,OA/BAlsC,YACEi+G,EACAI,EACA,kBACArsH,GAEFgO,YACEk+G,EACAI,EACA,kBACAtsH,GAGEm8C,EAAwB/V,YAC1B+V,EAAwB9B,WAAWkyE,mBACjCL,EACA,EACAA,EAAetzH,OACfujD,EAAwB9B,WAAWzhD,QAGrCujD,EAAwB9B,WAAWkyE,mBACjCN,EACA,EACAA,EAAYrzH,OACZujD,EAAwB9B,WAAWzhD,QAGvCszH,EAAer+G,SACfo+G,EAAYp+G,UAEL,M,+CC1PT,sDAyBamsC,EAAiB,SAC5B6a,GAEA,IAAM8pB,EAAa,CACjBtiC,QAAQ7hD,EAA+BikF,GACrC,IAAMzlC,EAAOylC,EAAQC,UACrB,OAAO1lC,GAAQx+C,EAAM6hD,QAAQrD,IAE/BwzE,MAAMhyH,EAA+BikF,GAC/BjkF,EAAMgyH,OAAOhyH,EAAMgyH,MAAM/tC,IAE/BliC,KAAK/hD,EAA+BikF,GAC9BA,EAAQG,WAGZpkF,EAAM+hD,KAAKkiC,KAef,IAAMguC,EAAkB1yE,qBAAW8a,EAAc8pB,GAXjD,SACEI,EACAN,GAEA,MAAO,CACLjiC,kBAAmBuiC,EAAQtoB,aAC3Bha,OAAQgiC,EAAQhiC,OAAO,CAAEwiC,SAAS,IAClC5iC,QAASoiC,EAAQpiC,aAIGtC,EACtB,YACE,OAAOrhD,EAD6C,EAAnDA,UACe,CACd8jD,kBAFkD,EAAzCA,kBAGTC,OAHkD,EAAtBA,OAI5BJ,QAJkD,EAAdA,aAS1C,OAAO,SAAC7hD,GAAD,OAAmC,gBAACiyH,EAAoBjyH,M,8BChEjE,6EAEMyS,EAAkBC,EAAOD,GAQlB28E,EAA0B,WACrC,IAAMjiD,EAAgB16B,EACnB26B,WAAW36B,EAAGsI,WAAWC,OACzByV,2BAEH,OAAOC,IACLxxB,iBAAO,EAAGiuC,EAAc/uC,QAAQ,SAAAmB,GAC9B,IACM2yH,EADY/kF,EAAcrtC,GAAGP,GACD4yH,eAElC,OAAOD,EACJ78F,OACAxE,YACAtnB,KAAI,SAAAxI,GACH,IAAM2X,EAAWw5G,EAAgBl3G,IAAIja,GACrC,MAAO,CACLA,OACAkwB,SAAUvY,EAASwY,cACnBjV,YAAavD,EAASwD,4B,0VCI5BzJ,EAAkBC,EAAOD,GAEzBzO,EAAS,CAEbouH,eAAgB,CACdtzH,QAAS,OACTmF,WAAY,SACZC,eAAgB,UAElBmuH,oBAAqB,CACnB5uH,KAAM,GAERyG,KAAM,CACJ1G,MAAO,GACP2G,OAAQ,GACRC,YAAa,EACbkoH,WAAY,EACZvzH,WAAY,GAEdwzH,aAAc,CACZvzH,UAAW,GAEbid,YAAa,CACXmgC,WAAY,aA2BVo2E,EAAqB,SACzBz2G,EACAgP,EACAC,GAGA,OAAIjP,EAAkBwxD,cAGlBxiD,IAAmBC,GAKJynG,E,4MAInBC,mBAA2B,G,EAC3BnqH,MAAQ,CACNoqH,SAAS,G,EAiDXC,eAAiB,SAAC9xH,GAChB,GAAI,EAAKyH,MAAMoqH,UACEtnH,IAAOkZ,kBACpBzjB,EAAKiB,EACH,qGAGS,OAPoB,MAUW,EAAK/B,MAA3C8qB,EAV2B,EAU3BA,YAAa8gB,EAVc,EAUdA,YAAapmC,EAVC,EAUDA,QAC5Bq9C,EAAkB/3B,EAAY+I,UACpC,IAAKgvB,EAAiB,OAAO,KAE7B,IAAMlyB,EAAYib,EACdn5B,EAAG67B,iBAAiBukF,iCAClBrtH,EAAQgrB,qBACRqyB,GACArU,eACF/7B,EAAG67B,iBAAiBwkF,8BAClBttH,EAAQgrB,qBACRqyB,GACArU,eAEN,EAAKxuC,MAAMivF,4BAA4Bt+D,EAAWkyB,I,kEAtE/B,IAAD,OACdviD,KAAKN,MAAMwd,cACbrE,YAAW,WACT,EAAK3Y,UACJ,O,8BAIE,IAAD,EACwCF,KAAKN,MAA3C8qB,EADF,EACEA,YAAa8gB,EADf,EACeA,YAAapmC,EAD5B,EAC4BA,QAW1B,IAPNlF,KAAKyyH,2BACH31B,YAAuB,CACrBv6C,gBAAiB/3B,EAAY+I,UAC7B+X,cACApmC,YAEFlF,KAAKN,MAAMyqB,aAGTnqB,KAAKoyH,oBAAsBpyH,KAAKoyH,mBAAmBlyH,OACrDF,KAAKoyH,mBAAmBlyH,U,iDAM5BqqB,EACAJ,GAEA,IAAKI,EAAqB,OAAO,EAEjC,IAAMG,EAAuBP,EACzBskB,YAAwBlkB,IACvB,EAEL,OAAO3rB,iBAAO,EAAG2rB,EAAoBO,sBAAsB,SAAA7rB,GACzD,IAAKsrB,EAAqB,OAAO,EACjC,IAAM9O,EAAoB8O,EAAoBQ,aAAa9rB,GAE3D,OAAOizH,EAAmBz2G,EAAmBxc,EAAGyrB,MAC/CvhB,QAAO,SAAA+mH,GAAS,OAAIA,KAAW7mH,S,qCA+BlC,OACE,uBAAKxL,MAAK,2BAAO6F,EAAOouH,gBAAmB9xH,KAAKN,MAAM7B,QACpD,gBAAC,IAAD,KACGmC,KAAKN,MAAM4rC,YACV,gBAAC,QAAD,uEAIA,gBAAC,QAAD,uE,+BASA,IAAD,SAUHtrC,KAAKN,MARP8qB,EAFK,EAELA,YACAtlB,EAHK,EAGLA,QACA+U,EAJK,EAILA,uBACAC,EALK,EAKLA,iBACAw4G,EANK,EAMLA,aACAvoG,EAPK,EAOLA,WACAmhB,EARK,EAQLA,YACAlxB,EATK,EASLA,MAGImoC,EAAkB/3B,EAAY+I,UAC9BhJ,EAAsBuyE,YAAuB,CACjDv6C,kBACAjX,cACApmC,YAEF,IAAKqlB,EAAqB,OAAOvqB,KAAK2yH,eAEtC,IAAM3hD,EAAWzmD,EAAoBm+C,cAC/BkqD,EAA8B/1B,YAClCt6C,GAEIswE,EAAc5gE,YAA0B1P,GACxC73B,EAAuBP,EACzBskB,YAAwBlkB,IACvB,EAELszE,YACE5jF,EACAC,EACAsQ,EACAD,EACAJ,GAGF,IAAI2oG,EAAsB,EAC1B,OACE,gBAAC,OAAD,MACG,gBAAGtyH,EAAH,EAAGA,KAAH,OACC,gBAAC,IAAD,CAAYuO,mBAAiB,GAC3B,gBAAC,IAAD,CAAQvE,QAAM,GACZ,gBAAC,IAAD,CAAM7G,WAAW,cACf,uBACEggB,IAAK4G,EAAoBuG,kBACzB/L,IAAI,GACJlnB,MAAO6F,EAAOkG,OAEhB,gBAAC,IAAD,CAAM/L,MAAO6F,EAAOiY,aACjB4O,EAAoB3O,kBAEtBq8B,YAA0B1tB,IACzB,gBAAC,IAAD,CACE5nB,QAAS,WACP,EAAK2vH,eAAe9xH,KAGtB,gBAAC,IAAD,QAILoyH,GACC,gBAAC,IAAD,UAC8Cr0H,IAA3Cq0H,EAA4B/uG,WAC3B,gBAAC,IAAD,CAAc3Z,KAAM0oH,EAA4B1oH,MAC7C1J,EAAKiB,EAAEmxH,EAA4BnoH,UAGtC,gBAAC,IAAD,CACEP,KAAM0oH,EAA4B1oH,KAClC2Z,WAAY+uG,EAA4B/uG,YAEvCrjB,EAAKiB,EAAEmxH,EAA4BnoH,WAK3CooH,EAAYxpH,OACX,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAmBmB,QAAM,GACtBqoH,EAAY5pH,KAAI,SAAA2+D,GAAU,OACzB,gBAAC,IAAD,CACEn/C,IAAKm/C,EACLA,WAAYA,SAKlB,KACJ,gBAAC,IAAD,MACA,uBACEn/C,IAAK85B,EACL1kD,MAAO6F,EAAOquH,oBACdrwH,GAAG,oCAEH,gBAAC,IAAD,CAAmBxD,UAAQ,GACxBU,iBAAO,EAAG2rB,EAAoBO,sBAAsB,SAAA7rB,GACnD,IAAMwc,EAAoB8O,EAAoBQ,aAC5C9rB,GAEF,IACGizH,EACCz2G,EACAxc,EACAyrB,GAGF,OAAO,KAET,IAAMqoG,EAAwBt3G,EAAkB8X,UAC1C68F,EAAqB4C,IAA0Bn8B,sBACnDk8B,GAKIE,EACoB,IAAxBH,EAGF,OAFAA,IAGE,gBAAC1C,EAAD,CACE7lG,oBAAqBA,EACrBC,YAAaA,EACb/O,kBAAmBA,EACnBgP,eAAgBxrB,EAChByB,MAAO8pB,EAAYO,aAAa9rB,GAChCmB,SAAU,SAAAM,GACJ8pB,EAAYO,aAAa9rB,KAAOyB,IAClC8pB,EAAYugE,aAAa9rF,EAAGyB,GAC5B,EAAK2H,SAAS,CACZgqH,SAAS,MAIfntH,QAASA,EACTkV,MAAOA,EACPH,uBAAwBA,EACxBC,iBAAkBA,EAClBuO,IAAKxpB,EACLyc,0BAA2Bs3G,IAC3B55F,gBAAiB,EAAK15B,MAAM05B,gBAC5BnC,iBAAkB,EAAKv3B,MAAMu3B,iBAC7B4C,wBACE,EAAKn6B,MAAMm6B,wBAEbl8B,IAAK,SAAAgL,GACCsqH,IACF,EAAKb,mBAAqBzpH,UAUhC,IAHL,EAAK8pH,2BACJloG,EACAJ,IAEA,gBAAC,IAAD,KACE,gBAAC,QAAD,wCAGH,EAAKzqB,MAAM4rC,aACV,gBAAC,IAAD,CACEjqC,MAAO,gBAAC,QAAD,yBACP6xH,cAAc,QACd/7C,QAAS3sD,EAAYwhE,aACrBnuF,MAAO6F,EAAOuuH,aACd76C,SAAU,SAACziE,EAAG6pB,GACZhU,EAAYuhE,YAAYvtD,GACxB,EAAKgH,kBAKb,gBAAC,IAAD,MACIktF,GAAgB1hD,GAChB,gBAAC,IAAD,CACEpmE,aAAc2f,EAAoBm+C,cAClCrnE,MACE,EAAK3B,MAAM4rC,YACT,gBAAC,QAAD,gCAEA,gBAAC,QAAD,yC,GA7RiC5tC,e,qYCnCnDyU,EAAkBC,EAAOD,GAEzBzO,EAAS,CACb2d,UAAW,CACT5iB,WAAY,IAwCV0nE,EAAkB,SAAC19C,GACvB,OAAOtW,EAAGsI,WAAWC,MAClB0rD,wCAAwC39C,GACxC49C,WAGgB8sD,E,4MAInBlrH,MAAQ,CACNupB,WAAY,GACZ4hG,mBAAoB,GACpBhwD,cAAe,CAAEgqD,QAAS,GAAIE,OAAQ,GAAIjhF,aAAc,GAAIhtB,KAAM,K,EAEpEsnD,WAAajpE,c,EACb6oE,YAAc7oE,c,EACd8oE,cAAgB9oE,c,EAGhB21H,qBAA6DhiE,YAC3D9iB,YAA0B,EAAK7uC,MAAM4rC,aACrC,EAAK5rC,MAAM0a,O,EAEbk5G,yBAA4D7iE,YAC1D,EAAK4iE,sB,EAEP5sD,2BAA6BxV,YAC3B,EAAKqiE,yBACL,EAAK5zH,MAAM6zH,uB,EAGbC,qBAAuB,K,EACvBC,gBAAkB,K,EAClBC,eAAiB,K,EACjBC,aAAe,K,EAEfC,wBAA0B,WACxB,EAAKP,qBAAuBhiE,YAC1B9iB,YAA0B,EAAK7uC,MAAM4rC,aACrC,EAAK5rC,MAAM0a,OAEb,EAAKk5G,yBAA2B7iE,YAAW,EAAK4iE,sBAChD,EAAK7tF,e,EAKPquF,oBAA4DxiE,YAC1DzkB,YAAyB,EAAKltC,MAAM4rC,aACpC,EAAK5rC,MAAM0a,O,EA4Cb05G,QAAU,SAACtiG,GACU,KAAfA,GAEJ,EAAKnpB,SAAS,CACZ+6D,cAAe,CACbgqD,QAAS,EAAKqG,gBACV,EAAKA,gBAAgBhvD,OAArB,WAAgCjzC,IAAcvoB,KAAI,SAAAjK,GAAM,MAAK,CAC3Dk/C,KAAMl/C,EAAOk/C,KACbglB,QAASD,YAAYjkE,EAAQwyB,OAE/B,GACJ87F,OAAQ,EAAKoG,eACT,EAAKA,eAAejvD,OAApB,WAA+BjzC,IAAcvoB,KAAI,SAAAjK,GAAM,MAAK,CAC1Dk/C,KAAMl/C,EAAOk/C,KACbglB,QAASD,YAAYjkE,EAAQwyB,OAE/B,GACJ6a,aAAc,EAAKmnF,qBACf,EAAKA,qBAAqB/uD,OAA1B,WAAqCjzC,IAAcvoB,KAAI,SAAAjK,GAAM,MAAK,CAChEk/C,KAAMl/C,EAAOk/C,KACbglB,QAASD,YAAYjkE,EAAQwyB,OAE/B,GACJnS,KAAM,EAAKs0G,aACP,EAAKA,aAAalvD,OAAlB,WAA6BjzC,IAAcvoB,KAAI,SAAAjK,GAAM,MAAK,CACxDk/C,KAAMl/C,EAAOk/C,KACbglB,QAASD,YAAYjkE,EAAQwyB,OAE/B,O,EAKVuiG,WAAa,SAAC9xG,GACZ,EAAK5Z,SAAS,CACZ+qH,mBAAmB,GAAD,mBAAM,EAAKnrH,MAAMmrH,oBAAjB,CAAqCnxG,IACvDuP,WAAY,KAEd,EAAKm1C,WAAW1mE,SAAW,EAAK0mE,WAAW1mE,QAAQC,S,EAGrD8zH,kBAAoB,WAAsB,IAAD,EACc,EAAKt0H,MAAlDua,EAD+B,EAC/BA,uBAAwBC,EADO,EACPA,iBAE1B+5G,EAAuB,IAAIjtF,IAQjC,OAPAzX,YACEtV,EACAC,GACA6V,eAAe/pB,SAAQ,YAAiB,IAAd0M,EAAa,EAAbA,OAC1B6nC,YAAkB7nC,EAAO0e,WAAWprB,SAAQ,SAAAic,GAAG,OAAIgyG,EAAQ/yG,IAAIe,SAG1DF,MAAMC,KAAKiyG,I,EAGpBC,6BAA+B,SAAC1zH,GAAgC,IACtD4yH,EAAuB,EAAKnrH,MAA5BmrH,mBAER,OAAOr5E,YAAsB,CAC3BC,WAAYx5C,EAAKiB,EAAE,+CACnBw4C,WAAY,EAAK+5E,kBACjB9iG,aAAckiG,EACdhzH,SAAU,SAAAgzH,GACR,EAAK/qH,SAAS,CAAE+qH,2B,kEAtGlBpzH,KAAKN,MAAMwd,cACXqD,eACAvgB,KAAK2mE,WAAW1mE,SAEhBD,KAAK2mE,WAAW1mE,QAAQC,QAEtBF,KAAKwmE,cAAcvmE,SAAWD,KAAKumE,YAAYtmE,SACjDD,KAAKumE,YAAYtmE,QAAQgP,SAASjP,KAAKwmE,cAAcvmE,SATrC,MAWwB+xB,YACxChyB,KAAKN,MAAMua,uBACXja,KAAKN,MAAMwa,kBAFL6V,EAXU,EAWVA,eAAgBwC,EAXN,EAWMA,cAKxBvyB,KAAKwzH,qBAAuB,IAAIpvD,IAC9Br5B,YAA4B/qC,KAAK6zH,qBADP,2BAGrBvxD,KAHqB,IAIxBvtC,KAAM,CACJ,CAAEzzB,KAAM,gBAAiB+iE,OAAQ,GACjC,CAAE/iE,KAAM,gBAAiB+iE,OAAQ,OAIvCrkE,KAAKyzH,gBAAkB,IAAIrvD,IAAKr0C,EAAT,2BAClBuyC,KADkB,IAErB6xD,MAAO,SAACj2E,EAAMja,GAAP,OAAoBia,EAAKxrC,OAAOgd,WACvCqF,KAAM,CAAC,WAET/0B,KAAK0zH,eAAiB,IAAItvD,IAAK7xC,EAAT,2BACjB+vC,KADiB,IAEpB6xD,MAAO,SAACj2E,EAAMja,GAAP,OAAoBia,EAAK9uB,MAAMM,WACtCqF,KAAM,CAAC,WAET/0B,KAAK2zH,aAAe,IAAIvvD,IAAKpkE,KAAKg0H,oBAAd,eACf1xD,Q,+BAwEG,IAAD,SAeHtiE,KAAKN,MAbP7B,EAFK,EAELA,MACAoc,EAHK,EAGLA,uBACAC,EAJK,EAILA,iBACAhV,EALK,EAKLA,QACAquH,EANK,EAMLA,sBACAa,EAPK,EAOLA,oBACA72B,EARK,EAQLA,iBACA82B,EATK,EASLA,eACA/oF,EAVK,EAULA,YACA8/E,EAXK,EAWLA,WACAkJ,EAZK,EAYLA,YACAC,EAbK,EAaLA,qBACAvtD,EAdK,EAcLA,YAdK,EAgBmDhnE,KAAKiI,MAAvDupB,EAhBD,EAgBCA,WAAY4hG,EAhBb,EAgBaA,mBAAoBhwD,EAhBjC,EAgBiCA,cAIlCoxD,EAAkBv6G,IAA2B/U,EApB5C,EAsBmC8sB,YACxC/X,EACAC,GAFM6V,EAtBD,EAsBCA,eAAgBwC,EAtBjB,EAsBiBA,cAIlBkiG,IAAgBjjG,EAElBkjG,EAAsB,GACtBC,EAA4B,GAC5BC,EAA2B,GAC3BC,EAAgB,GAEhBJ,GACFC,EAAsBtxD,EAAcgqD,QACpCuH,EAA4BvxD,EAAckqD,OAC1CsH,EAA2BxxD,EAAc/2B,aACzCwoF,EAAgBzxD,EAAc/jD,OAE9Bq1G,EAAsB3kG,EAAe9mB,KAAI,SAAAyJ,GAAM,MAAK,CAClDwrC,KAAMxrC,EACNwwD,QAAS,OAEXyxD,EAA4BpiG,EAActpB,KAAI,SAAAyJ,GAAM,MAAK,CACvDwrC,KAAMxrC,EACNwwD,QAAS,QAGb,IAAM4xD,EAAuBJ,EAAoBvrH,QAAO,SAAAioD,GAAY,OAClEngC,YAAmBmgC,EAAalT,KAAMk1E,MAGlCnsD,EAA4B2tD,EAAyBn+G,MACzD,EA3PoC,IA+PhCs+G,EAAwBN,EAC1Bl+G,KAAK1T,IACH+xH,EAAyBvrH,OAjQO,GAkQhC,GAEF,EAEE69D,IACHutD,KACCK,EAAqBzrH,UACrBsrH,EAA0BtrH,UAC1B49D,EAA0B59D,UAC1BwrH,EAAcxrH,OAEZ89D,GAAiB,WAChBstD,IAEDK,EAAqBzrH,OAAS,EAChCgrH,EAAeS,EAAqB,GAAG52E,KAAKxrC,OAAOgd,WAC1CilG,EAA0BtrH,OAAS,EAC5CgrH,EAAeM,EAA0B,GAAGz2E,KAAK9uB,MAAMM,WAC9CmlG,EAAcxrH,OAAS,EAChC,EAAK0qH,WAAWc,EAAc,GAAG32E,MACxB+oB,EAA0B59D,OAAS,GAC5C+qH,EACEntD,EAA0B,GAAG/oB,KAAKz9C,KAClCwmE,EAA0B,GAAG/oB,QAKnC,OACE,gBAAC,OAAD,CAAMz1B,IAAI,SACP,gBAAGjoB,EAAH,EAAGA,KAAH,OACC,gBAAC,IAAD,MACG,SAAAge,GAAQ,OACP,uBACE3gB,MAAK,aACHujB,gBAAiB5C,EAAS+S,KAAK61C,qBAC/BvkB,UAAW,GACRhlD,IAGL,gBAAC,IAAD,CACE6C,MAAO8wB,EACPpxB,SAAU,SAAAoxB,GACR,IAAMwjG,EAAgB,EAAK/sH,MAAMupB,WAC3BA,GAAY,EAAKsiG,QAAQtiG,GAC/B,EAAKnpB,SAAS,CACZmpB,iBAKEwjG,GAAiBxjG,GAClBwjG,IAAkBxjG,IAEf+iG,GAAsBA,KAG9Br1G,gBAAiBioD,GACjB/6D,kBAAmB,kBACjB,EAAK8nH,6BAA6B1zH,IAEpC3C,MAAO6F,EAAO2d,UACd1jB,IAAK,EAAKgpE,cAEV8tD,GACA,gBAAC,IAAD,CAAM/zH,MAAO0qH,EAAYhrH,SAAUk0H,GACjC,gBAAC,IAAD,CACEjzH,MAAO,gBAAC,QAAD,gBACPX,MAAQ,YAEV,gBAAC,IAAD,CACEW,MACEiqC,EACE,gBAAC,QAAD,yBAEA,gBAAC,QAAD,sBAGJ5qC,MAAQ,uBAId,gBAAC,IAAD,CAAY/C,IAAK,EAAK4oE,cAClBkuD,GAA8B,YAAfrJ,GACf,gBAAC,IAAD,CACE/rG,KAAM+zG,EACNhzH,SAAU,SAAAgzH,GAAkB,OAC1B,EAAK/qH,SAAS,CACZ+qH,0BAKPlsD,IACC,gBAAC,IAAD,MACIutD,GAA8B,YAAfrJ,IACf,gBAAC,WAAD,KACG0J,EAAqB7rH,KACpB,WAAuCm9B,GAAvC,IAAS9W,EAAT,EAAG4uB,KAAyBglB,EAA5B,EAA4BA,QAA5B,OACE+xD,YAAqB,CACnB/vH,QAASA,EACToqB,kBAAmBA,EACnB7K,SArUf,GAsUe9hB,QAAS,kBACP0xH,EACE/kG,EAAkB5c,OAAOgd,YAE7Bs/B,mBAAoBkU,EAAQ75D,OACxB65D,EAAQ,GAAGJ,QACX,GACJyE,cAAeg2B,EACXp7C,YACEo7C,QAEFh/F,EACJmD,GAAI,eAAiB0kC,OAI1BuuF,EAA0BtrH,OAAS,GAClC,gBAAC,IAAD,KACE,gBAAC,QAAD,uBAGHsrH,EAA0B1rH,KACzB,gBAASkmB,EAAT,EAAG+uB,KAAwBglB,EAA3B,EAA2BA,QAA3B,OACEgyD,YAA2B,CACzB/lG,iBAAkBA,EAClB1K,SA/Vf,GAgWe9hB,QAAS,kBACP0xH,EACEllG,EAAiBC,MAAMM,YAE3Bs/B,mBAAoBkU,EAAQ75D,OACxB65D,EAAQ,GAAGJ,QACX,GACJyE,cAAeg2B,EACXp7C,YACEo7C,QAEFh/F,QAKbk2H,GACgB,YAAfrJ,GACAyJ,EAAcxrH,OAAS,GACrB,gBAAC,IAAD,KACE,gBAAC,QAAD,qBAGU,YAAf+hH,GACCyJ,EAAc5rH,KAAI,gBAASgZ,EAAT,EAAGi8B,KAAH,EAAcglB,QAAd,OAChB,gBAAC,IAAD,CACEz6C,IAAKxG,EACLtY,YAAa,gBAAC,IAAD,CAAMtI,MAAO4gB,IAC1Btf,QAAS,WACP,EAAKoxH,WAAW9xG,IAElB3U,sBAAoB,OAGzBmnH,GAAextD,EAA0B59D,OAAS,GACjD,gBAAC,IAAD,KACGiiC,EACC,gBAAC,QAAD,mBAEA,gBAAC,QAAD,iBAILmpF,GACCxtD,EAA0Bh+D,KACxB,gBAASshB,EAAT,EAAG2zB,KAA2BglB,EAA9B,EAA8BA,QAA9B,OACEmE,YAAsC,CACpCC,gCAAiC/8C,EACjC9F,SAhZb,GAiZa9hB,QAAS,kBACPyxH,EACE7pG,EAAoB9pB,KACpB8pB,IAEJg9C,cAAegsD,EACXjxE,YACEixE,QAEFh1H,EACJ2kE,gBAGNuxD,GAA8B,sBAAfrJ,GACf,gCACG5jD,YAAkC,CACjCtW,oBAAqB,EAAKoiE,yBAC1Br2G,SAAUm3G,EACV3vG,SAnaX,GAoaWsiD,eAAe,EACfQ,cAAegsD,EACXjxE,YACEixE,QAEFh1H,EACJkpE,oBAAqB,EAClBhB,2BACHiB,gBAAiB,EAAKlB,cACtBL,oBAEDa,GACC,gBAAC,IAAD,CAA2BpjE,eAAe,UACxC,gBAAC,IAAD,CACEsJ,SAAO,EACPtD,KAAM,gBAAC,IAAD,MACNjH,QAASqkE,EACT3lE,MACEiqC,EACE,gBAAC,QAAD,gDAIA,gBAAC,QAAD,iDAUbypF,EAAwB,GACvB,gBAAC,IAAD,CACEprH,YACE,gBAAC,QAAD,wDACOorH,2BAGT/zH,UAAQ,EACRoM,cACE,gBAAC,QAAD,uEASRqnH,GACe,YAAfrJ,IACCr7F,EAAe1mB,QACd,gBAAC,IAAD,KACGmrH,EACC,gBAAC,QAAD,iFAKA,gBAAC,QAAD,uIAQNttD,IACA,gBAAC,IAAD,KACE,gBAAC,QAAD,4H,GApemCxpE,mB,+CChHzD,qDAQay3H,EAAgB,SAACz1H,GAC5B,IAAM01H,EAAU11H,EAAM21H,aACtB,OACE,gBAAC,IAAD,CAAMn3H,UAAQ,EAACsM,QAAM,GAClB4qH,EAAQnsH,KAAI,SAAAqsH,GAAU,OACrB51H,EAAM61H,gBAAgBD,GAClB51H,EAAM61H,gBAAgBD,KACtB,W,6WC4BN5xH,EAAS,CACb8xH,aAAc,CAAE/2G,QAAS,KAGrBg3G,EAAmB,SAAC,GAAD,IACvBj1H,EADuB,EACvBA,KACA2sC,EAFuB,EAEvBA,iBACAuoF,EAHuB,EAGvBA,iBACA/yH,EAJuB,EAIvBA,QACA3B,EALuB,EAKvBA,SALuB,OAavB,gBAAC,IAAD,CACEiM,SACE,gBAAC,IAAD,CACE0W,IAAKwpB,EAAiBtc,aACtBpM,SAAU,GACVJ,gBAAc,IAGlBoE,IAAK0kB,EAAiB1sC,KACtBkJ,YAAW,UAAKwjC,EAAiBxc,SAAtB,YACT+kG,EAAmBl1H,EAAKiB,EAAE,uCAAqC,IAEjE2L,cAAe+/B,EAAiBxxB,YAChCzN,mBAAoB,EACpBvL,QAASA,EACT9E,MAAOmD,EAAW0C,EAAO8xH,kBAAej3H,EACxCyC,SAAUA,EACVU,GAAI,iBAAmByrC,EAAiB1sC,KAAKgE,QAAQ,KAAM,QAahD,SAASkxH,EAAT,GAOJ,IANTzwH,EAMQ,EANRA,QACAyG,EAKQ,EALRA,KACA8hD,EAIQ,EAJRA,QACAxwC,EAGQ,EAHRA,SACAuT,EAEQ,EAFRA,WACAolG,EACQ,EADRA,qBACQ,EACoCl4H,YAAe,GADnD,mBACDm4H,EADC,KACeC,EADf,OAE4Bp4H,WAAe,IAF3C,mBAED8zB,EAFC,KAEWqvD,EAFX,OAG4BnjF,WAClC,aAJM,mBAGD0tH,EAHC,KAGW2K,EAHX,KAMF10G,EAAY3jB,SAAkC,MAC9CsR,EAAatR,SAAc,MAPzB,EASgCA,YAAe,GAT/C,mBASD8mH,EATC,KASaC,GATb,QAUgD/mH,WAAe,GAV/D,qBAUDs4H,GAVC,MAUqBC,GAVrB,MAWF3zC,GAAiC5kF,aACrC+qC,KAEIjL,GAAoB9/B,aAAiB2T,KAErCuzG,GAA4BhnF,YAChCJ,GACAP,IACAolD,KAGI3sD,GAAWxwB,EAAQgrB,qBACnBid,GAAsDzvC,WAC1D,WACE,OAAOwH,GAAWwwB,GACdwgG,YAA2BxgG,GAAUxwB,GACrC,KAEN,CAACA,EAASwwB,GAAUsgG,KAGhB11G,GAA2BC,cAWjC,GAVA7iB,aACE,WACEmb,YAAW,WACLyH,IAA4Be,EAAUphB,SACxCohB,EAAUphB,QAAQC,UACnB,MAEL,CAACogB,MAGE3U,IAASzG,EAAS,OAAO,KAE9B,IAAMixH,GAAiCx5B,cAEjCy5B,GAA2BC,YAC/BlpF,GACA3b,GAEI8kG,GAAYF,GAAyBjtH,QACzC,gBAAG1I,EAAH,EAAGA,KAAH,OAAe01H,GAA+B11H,MAE1C81H,GAAsBH,GAAyBjtH,QACnD,gBAAG1I,EAAH,EAAGA,KAAH,QAAgB01H,GAA+B11H,MAa3C+1H,GAAiB54F,YACrBJ,GACAV,KAZsB,SACtBt8B,EADsB,GAGlB,IADFC,EACC,EADDA,KAAMg2H,EACL,EADKA,YAMR,OAJIN,GAA+B11H,IACjCi2H,YAAel2H,EAAKiB,EAAE00H,GAA+B11H,GAAMiK,UAGtDuS,EAASxc,EAAMg2H,MAQlBE,GAAyB,SAC7BxpF,GAD6B,OAE1ByoF,EAAqB56F,SAASmS,EAAiB1sC,OAE9Cm2H,GAAoB,SAACzpF,GAEzB,OACmC,KAAhCA,EAAiB3c,YAChB2c,EAAiB3c,aAAeA,KACjCmmG,GAAuBxpF,IAItB0pF,KACFrlG,IAAe8kG,GAAUjtH,SAAWktH,GAAoBltH,OAEtD+tG,GAAkB,uCAAG,WACzB52G,EACAqtD,GAFyB,SAAAj9C,EAAA,6DAIzB6zG,IAAgB,GAJS,kBAMaG,GAClCpkH,EACA0E,EACAo9E,GACAz0B,GAVqB,0CAgBrBooE,GAAwBvwH,KAAKC,OAC7BowH,EAAc,aACV/mH,EAAW/O,SAAS+O,EAAW/O,QAAQ0P,iBAlBtB,mBAmBd,GAnBc,kCAqBhB,GArBgB,yBAuBvB80G,IAAgB,GAvBO,2EAAH,wDA2BxB,OACE,gBAAC,OAAD,MACG,gBAAGjkH,EAAH,EAAGA,KAAH,OACC,gBAAC,IAAD,CACE8D,MAAO,gBAAC,QAAD,yCACP+2C,QAAS,CACP,gBAAC,IAAD,CACE5yB,IAAI,QACJpnB,MAAO,gBAAC,QAAD,cACP6L,SAAS,EACTvK,QAAS8qD,KAGbjS,iBAAkB,CAChB,gBAAC,IAAD,CAAY5wC,aAAa,aAAa6d,IAAI,UAE5C9c,MAAI,EACJ4vC,mBAAmB,EACnBE,UAAQ,EACRv9C,UAAQ,EACRw9C,YAAU,EACVh6C,GAAG,uBAEH,gBAAC,IAAD,CAAQ8I,QAAM,EAACtM,UAAQ,GACrB,gBAAC,IAAD,CAAMwC,MAAO0qH,EAAYhrH,SAAU21H,GACjC,gBAAC,IAAD,CACE10H,MAAO,gBAAC,QAAD,4BACPX,MAAM,cAER,gBAAC,IAAD,CAAKW,MAAO,gBAAC,QAAD,6BAAqCX,MAAM,YAEzC,cAAf0qH,GACC,gBAAC,WAAD,KACE,gBAAC,IAAD,CACE1qH,MAAO8wB,EACPtS,gBAAiB,WACXo3G,GAAUjtH,OACZmtH,GAAeh2H,EAAM81H,GAAU,IACtBT,GAAkBU,GAAoBltH,QAC/CmtH,GAAeh2H,EAAM+1H,GAAoB,KAG7Cn2H,SAAUygF,EACVljF,IAAK0jB,IAENw1G,IACC,gBAAC,IAAD,KACE,gBAAC,QAAD,wGAMJ,gBAAC,IAAD,CAAYl5H,IAAKqR,GACf,gBAAC,IAAD,KACGsnH,GAAUrtH,KAAI,SAACkkC,EAAkB/G,GAAnB,OACb,gBAACqvF,EAAD,CACEj1H,KAAMA,EACNioB,IAAK2d,EACL+G,iBAAkBA,EAClBuoF,iBAAkBiB,GAChBxpF,GAEFxqC,QAAS,kBAAM6zH,GAAeh2H,EAAM2sC,IACpCnsC,UAAW41H,GAAkBzpF,QAGhC0oF,KAAoBU,GAAoBltH,QACvC,gBAAC,IAAD,oDAIDwsH,GACCU,GAAoBttH,KAAI,SAACkkC,EAAkB/G,GAAnB,OACtB,gBAACqvF,EAAD,CACEj1H,KAAMA,EACNioB,IAAK2d,EACL+G,iBAAkBA,EAClBuoF,iBAAkBiB,GAChBxpF,GAEFxqC,QAAS,kBAAM6zH,GAAeh2H,EAAM2sC,IACpCnsC,UAAW41H,GAAkBzpF,SAIrC,gBAAC,IAAD,CAAMvpC,eAAe,SAASD,WAAW,UACrCkyH,EAWA,gBAAC,IAAD,CACEptG,IAAI,sBACJ7e,KAAM,gBAAC,IAAD,MACNsD,SAAS,EACTvK,QAAS,WACPmzH,GAAkB,IAEpBz0H,MAAO,gBAAC,QAAD,0CAjBT,gBAAC,IAAD,CACEonB,IAAI,sBACJ7e,KAAM,gBAAC,IAAD,MACNsD,SAAS,EACTvK,QAAS,WACPmzH,GAAkB,IAEpBz0H,MAAO,gBAAC,QAAD,2CAcb,gBAAC,IAAD,CAAMuC,eAAe,SAASD,WAAW,UACvC,gBAAC,IAAD,CACEiG,KAAM,gBAAC,IAAD,MACNsD,SAAS,EACTvK,QAAS,kBACPoI,IAAOC,gBACLF,YAAY,uCAGhBzJ,MAAO,gBAAC,QAAD,sCAMD,WAAf+pH,GACC,gBAAC,IAAD,CACElmH,QAASA,EACTs/G,aAAcA,EACdO,UAAS,uCAAE,WAAMl3D,GAAN,SAAAj9C,EAAA,+EACTwmG,GAAmB52G,EAAMqtD,IADhB,2CAAF,sDAGTm3D,uBAAqB,KAI3B,gBAAC,IAAD,CACEnhG,WAAW,kCACXpZ,QACE,gBAAC,QAAD,kFAKF4zC,KAA+B,IAAzB23E,W,6BCrWlB,mGAcaE,EAA6B,SACxCxgG,EACAxwB,GAEA,IAAM+qB,EAAiByF,EAASvF,2BAEhC,OAAOC,IACLxxB,iBAAO,EAAGqxB,EAAenyB,QAAQ,SAAAmB,GAC/B,IAAMoxB,EAAYJ,EAAezwB,GAAGP,GAEpC,OAAOoxB,EACJ4c,oBACA1c,YACAtnB,KAAI,SAAAsiC,GAAY,MAAK,CACpBA,eACA4B,iBAAkB9c,EAAUid,oBAAoB/B,OAEjDtiC,KAAI,gBAAGsiC,EAAH,EAAGA,aAAc4B,EAAjB,EAAiBA,iBAAjB,MAAyC,CAC5C9c,YACA8c,mBACA1sC,KAAM8qC,EACNkrF,YAAatpF,EAAiB2pF,iBAC9BnmG,SAAUwc,EAAiBvc,cAC3BjV,YAAawxB,EAAiBvxB,iBAC9BiV,aAAcsc,EAAiBrc,kBAC/BN,WAAY2c,EAAiB89B,yBAM1BorD,EAAmC,SAC9C9kG,EACAC,GAEA,IAAKA,EAAY,OAAOD,EAExB,IAAM0sB,EAAsBzsB,EAAW5K,cAEvC,OAAO2K,EAAKpoB,QAAO,SAAA+sH,GACjB,OAGuC,IAFrCA,EAA2BvlG,SACxB/J,cACAlf,QAAQu2C,KAG0B,IAFrCi4E,EAA2Bv6G,YACxBiL,cACAlf,QAAQu2C,Q,8BC5DjB,qGAGM9rC,EAAkBC,EAAOD,GAUlB4kH,EAAsB,SACjC7xH,EACAwN,EACAjS,EACAg2H,GAEA,GAdiC,SAAC/jH,EAAkBjS,GAAnB,OACjCiS,EACGiqC,sBACApsB,YACApnB,QACC,SAAA0kC,GAAY,OAAIn7B,EAAOkqC,YAAY/O,GAAcgP,gBAAkBp8C,KACnE4I,OAQA2tH,CAAoBtkH,EAAQjS,KACfsK,IAAOkZ,kBACpB,2NAGW,OAAO,EAGtB,IAAM3iB,EAAOk6B,YAAiBi7F,GAAa,SAAAn1H,GAAI,OAC7CoR,EAAOukH,iBAAiB31H,MAQ1B,OANA6Q,EAAG2rD,uBAAuBo5D,gCACxBhyH,EACAwN,EACAjS,EACAa,IAEK,GAGI61H,EAA2B,SAACzkH,GAAD,OACtCA,EACGiqC,sBACApsB,YACAtnB,KAAI,SAAA4kC,GAAY,OAAIn7B,EAAOkqC,YAAY/O,GAAcgP,oB,mGCKrC2nC,E,WAQnB,cAA+D,IAAD,OAAhDC,EAAgD,EAAhDA,SAAUK,EAAsC,EAAtCA,kBAAsC,yBAL9DsyC,eAAgB,EAK8C,KAJ9DC,cAAe,EAI+C,KAH9DC,aAAc,EAGgD,KAF9DC,cAAe,EAE+C,KAa9DC,0BAA4B,SAACC,GAC3B,EAAKF,aAAeE,EAAI71F,QACxB,EAAK01F,YAAcG,EAAI31F,OACvB,EAAKu1F,aAAeI,EAAI91F,QACxB,EAAKy1F,cAAgBK,EAAI51F,UAjBmC,KAoB9D61F,uBAAyB,WAEvB,OAAO,EAAKH,cAAgB,EAAKF,cAtB2B,KAyB9DhnC,WAAa,SAAConC,GACZ,EAAKD,0BAA0BC,IA1B6B,KA6B9Dh1H,QAAU,SAACg1H,GACT,EAAKD,0BAA0BC,IA9B6B,KAiC9D/0H,UAAY,SAAC+0H,GAGX,GAFA,EAAKD,0BAA0BC,IAE3B,EAAKE,WAAc,EAAKA,YAA5B,CAIA,IAAIF,EAAI52H,SAAU42H,EAAI52H,OAAOygC,QAFD,6CAE5B,CAPkC,MAuB9B,EAAKs2F,mBAXP1rE,EAZgC,EAYhCA,SACA2rE,EAbgC,EAahCA,OACAtiD,EAdgC,EAchCA,OACAwP,EAfgC,EAehCA,MACA1I,EAhBgC,EAgBhCA,QACAiJ,EAjBgC,EAiBhCA,OACAE,EAlBgC,EAkBhCA,OACAN,EAnBgC,EAmBhCA,SACAU,EApBgC,EAoBhCA,UACAF,EArBgC,EAqBhCA,SACAN,EAtBgC,EAsBhCA,SAGEyyC,IAjHO,KAkHLJ,EAAIK,OACNL,EAAI9/G,iBACJ,EAAKy/G,cAAgBS,EAAO,GAAI,GAAKA,EAAO,GAAI,IAlHvC,KAmHAJ,EAAIK,OACbL,EAAI9/G,iBACJ,EAAKy/G,cAAgBS,EAAO,EAAG,GAAKA,EAAO,EAAG,IAxHrC,KAyHAJ,EAAIK,OACbL,EAAI9/G,iBACJ,EAAKy/G,cAAgBS,GAAQ,EAAG,GAAKA,GAAQ,EAAG,IAzHtC,KA0HDJ,EAAIK,QACbL,EAAI9/G,iBACJ,EAAKy/G,cAAgBS,EAAO,EAAG,GAAKA,EAAO,EAAG,MAG9C3rE,GA7Hc,IA6HDurE,EAAIK,OA5HN,KA4HiCL,EAAIK,QAClDL,EAAI9/G,iBACJu0C,KAEEqpB,GAAU,EAAKmiD,0BA3HT,KA2HqCD,EAAIK,QACjDL,EAAI9/G,iBACJ49D,KAEEwP,GAAS,EAAK2yC,0BA5HR,KA4HoCD,EAAIK,QAChDL,EAAI9/G,iBACJotE,KAEE1I,GAAW,EAAKq7C,0BAjIV,KAiIsCD,EAAIK,QAClDL,EAAI9/G,iBACJ0kE,KAEEiJ,GAAU,EAAKoyC,0BAlIT,KAkIqCD,EAAIK,QACjDL,EAAI9/G,iBACJ2tE,KAGAE,GACA,EAAKkyC,0BACLD,EAAI51F,UAzII,KA0IR41F,EAAIK,QAEJL,EAAI9/G,iBACJ6tE,KAEEA,GAAU,EAAKkyC,0BAhJT,KAgJqCD,EAAIK,QACjDL,EAAI9/G,iBACJ6tE,KAEEN,GAAY,EAAKwyC,0BAvJX,KAuJuCD,EAAIK,QACnDL,EAAI9/G,iBACJutE,KAEEE,GAtJQ,KAsJIqyC,EAAIK,QAClBL,EAAI9/G,iBACJytE,KAGEQ,GAAa,EAAK8xC,0BApKR,MAoKoCD,EAAIK,QACpDL,EAAI9/G,iBACJiuE,EAAU6xC,IAER7xC,GAtKgB,MAsKH6xC,EAAIK,QACnBL,EAAI9/G,iBACJiuE,EAAU6xC,IAGR/xC,GAAY,EAAKgyC,0BA9KP,MA8KmCD,EAAIK,QACnDL,EAAI9/G,iBACJ+tE,EAAS+xC,IAEP/xC,GAhLW,MAgLC+xC,EAAIK,QAClBL,EAAI9/G,iBACJ+tE,EAAS+xC,OAjIXz3H,KAAK43H,mBAAqB9yC,EAC1B9kF,KAAK23H,UAAYlzC,E,mEAIjB,OAAOzkF,KAAK03H,2B,0CAIZ,OAAO13H,KAAKo3H,kB,oQClDHtxC,EAAyB,SACpC1qC,EADoC,GAGlB,IADhB4qC,EACe,EADfA,eAEF,MAAO,CACL+xC,YAAa,GACb93H,QAASoS,YAAoB+oC,GAC7B48E,YAAa,GACbC,QAASjyC,IAQA2C,EAAU,SAAC9C,GACtB,QAASA,EAAQmyC,YAAY3uH,QAOlBq/E,EAAU,SAAC7C,GACtB,QAASA,EAAQkyC,YAAY1uH,QAQlB6iF,EAAgB,SAC3BrG,EACAzqC,GAEA,IAAM88E,EAAc,sBAAOryC,EAAQkyC,aAAf,CAA4BlyC,EAAQ5lF,UAKxD,OAJIi4H,EAAe7uH,OAASw8E,EAAQoyC,SAClCC,EAAenqD,OAAO,EAAGmqD,EAAe7uH,OAASw8E,EAAQoyC,SAGpD,CACLF,YAAaG,EACbj4H,QAASoS,YAAoB+oC,GAC7B48E,YAAa,GACbC,QAASpyC,EAAQoyC,UAYR1yC,EAAO,SAClBM,EACAzqC,GAEkB,IADlBl2C,EACiB,4DADK3G,EAEtB,IAAKsnF,EAAQkyC,YAAY1uH,OACvB,OAAOw8E,EAGT,IAAMsyC,EAAatyC,EAAQkyC,YAAYlyC,EAAQkyC,YAAY1uH,OAAS,GAQpE,OAPA6J,YACEkoC,EACA+8E,EACA,kBACAjzH,GAGK,CACL6yH,YAAalyC,EAAQkyC,YAAYthH,MAAM,GAAI,GAC3CxW,QAASk4H,EACTH,YAAY,GAAD,mBAAMnyC,EAAQmyC,aAAd,CAA2BnyC,EAAQ5lF,UAC9Cg4H,QAASpyC,EAAQoyC,UAYRxyC,EAAO,SAClBI,EACAzqC,GAEkB,IADlBl2C,EACiB,4DADK3G,EAEtB,IAAKsnF,EAAQmyC,YAAY3uH,OACvB,OAAOw8E,EAGT,IAAMsyC,EAAatyC,EAAQmyC,YAAYnyC,EAAQmyC,YAAY3uH,OAAS,GAQpE,OAPA6J,YACEkoC,EACA+8E,EACA,kBACAjzH,GAGK,CACL6yH,YAAY,GAAD,mBAAMlyC,EAAQkyC,aAAd,CAA2BlyC,EAAQ5lF,UAC9CA,QAASk4H,EACTH,YAAanyC,EAAQmyC,YAAYvhH,MAAM,GAAI,GAC3CwhH,QAASpyC,EAAQoyC,W,2WC5Hf9lH,EAAkBC,EAAOD,GAOlBimH,EAA0B,SAAC,GAYjC,IAXLn+G,EAWI,EAXJA,uBACAC,EAUI,EAVJA,iBACAu3E,EASI,EATJA,iBACAvsF,EAQI,EARJA,QACAqvC,EAOI,EAPJA,eASAA,EAAe9Z,QAAQ,cACvB8Z,EAAe8jF,gBAAgBlmH,EAAGk5D,eAAeitD,QACjDplH,YACEqhC,EAAew4E,YACft7B,EACA,kBACAvsF,GAIF,IAAMsnF,EAAwB,IAAIr6E,EAAGs6E,sBACnCt6E,EAAGsI,WAAWC,MACdT,EACAC,GAEFsyE,EAAsBhB,OAAOj3C,EAAew4E,aAC5C,IAAMwL,EAAgB/rC,EAAsBK,mBAGtC2rC,EAAoCD,EACvCE,kCACAtuF,oBACA5Z,YACGmoG,EAA6BH,EAChCI,iBACAxuF,oBACA5Z,YACG+8F,EAA+BkL,EAElCrvH,QACC,SAACyvH,GAAD,OAC8C,IAA5CF,EAAYhxH,QAAQkxH,MAEvB3vH,KAAI,SAAA0oB,GAAS,OACZknG,YAAqB5+G,EAAwBC,EAAkByX,MAEhExoB,OAAO0R,SAIJi+G,EAAwCxL,EAAOnkH,QAAO,SAAAimB,GAC1D,OAAQopG,EAAmB1uF,MAAK,SAAAivF,GAA2B,OACzD3pG,EAAM2T,KAAKg2F,SAGTC,EAAqCF,EAAgB7vH,KAAI,SAAAmmB,GAAK,OAClEA,EAAMM,aAIFupG,EAAsCP,EAAYvvH,QAAO,SAAAghB,GAC7D,OAAQ2uG,EAAgBhvF,MAAK,SAAA1a,GAAK,OAAIA,EAAM2T,KAAK5Y,SAI7Cc,EAAaspB,EAAe1pB,gBAClCI,EAAWimB,QACX,sBAAI8nF,GAAJ,YAA4BC,IAAsBjzH,SAAQ,SAAAmkB,GACxD,IAAM+uG,EAAe,IAAI/mH,EAAGy8B,kBAC5BsqF,EAAa57B,QAAQ,cACrB47B,EAAaz+F,QAAQtQ,GACrB+uG,EAAahtD,aACX/5D,EAAGsd,gBACDxV,EACAC,EACAiQ,GACA,IAGJc,EAAWonB,UAAU6mF,GAEgBX,EAClCY,gCAAgChvG,GAChCggB,oBACA5Z,YAEWvqB,SAAQ,SAAA6nC,GACpB,IAAMqrF,EAAe,IAAI/mH,EAAGy8B,kBAC5BsqF,EAAa57B,QAAQ,YACrB47B,EAAaz+F,QAAQoT,GACrBqrF,EAAahtD,aACX/5D,EAAG27B,kBACD7zB,EACAC,EACA2zB,GACA,IAGJ5iB,EAAWonB,UAAU6mF,SAMzB5L,EACGnkH,QAAO,SAAAimB,GAAK,OAAK4pG,EAAoBh+F,SAAS5L,EAAMM,cACpD1pB,SAAQ,SAAAopB,GACHA,GACFmlB,EAAepiB,kBAAkB6mD,OAAO5pD,EAAO,MAIrDo9D,EAAsBz5E,UAMXo6E,EAAwC,SACnD3hD,EACA+I,GAEA,IAAMmK,EAAS,IAAIvsC,EAAG42E,YAkBtB,OAdArqC,EAAO4+C,QAAQllD,YAA0B5M,EAAe+I,IACxDmK,EAAOo/C,mBACLvpD,EAAe1pB,gBAAgB/sB,OALE,EACL,GAS9BwB,oBAAUi1C,EAAe1pB,iBAAiB,SAACpP,EAAmB2qB,GAC5DsY,EAAOqsC,aAX0B,EAYF3kD,EAC7B3qB,EAAkBiU,cAIfgvB,GAMI06E,EAA6B,SAAC5jF,GACzC,OAAOrjC,EAAG0mG,QAAQC,aAAatjE,IAMpB6jF,EAAwB,SAAC7tF,GACpC,OAAOr5B,EAAG0mG,QAAQC,aAAattE,IAMpB8tF,EAAkC,SAC7Cp0H,EACAsmC,GAEA,OAAQtmC,EAAQ49E,iCAAiCt3C,IAMtC+tF,EAAuC,SAClDr0H,EACAsmC,EACA+I,GAEA,OAAIrvC,EAAQ49E,iCAAiCt3C,KACVtmC,EAAQgtG,4BACvC1mE,GAG+BguF,uBAC/BjlF,EAAe7kB,YAWR+pG,EAA0B,SACrCv0H,EACAsmC,EACA+I,GAEA,MACoB,KAAlB/I,GACA6tF,EAAsB7tF,IACO,KAA7B+I,EAAe7kB,WACf0pG,EAA2B7kF,EAAe7kB,YAC1C6pG,EACEr0H,EACAsmC,EACA+I,IAE+B,KAAjCA,EAAe3jB,eACkB,KAAjC2jB,EAAeq3B,eAON8tD,EAA8B,SACzCnlF,GAEA,OAAOA,EAAe1pB,gBAAgB/sB,OAAS,K,+WC1M3CqU,EAAkBC,EAAOD,GA4BzBzO,EAAS,CACbquH,oBAAqB,CACnB5uH,KAAM,IA4BJw2H,EAAoB,SAAC3sD,GACzB,IAAM4sD,EAAgB5sD,EAAU9hD,eAC5BwuE,EAAQ,GACZ,IACwB,KAAlBkgC,IAAsBlgC,EAAQ/mF,KAAKC,MAAMgnH,IACxC73G,MAAMoiB,QAAQu1D,KAAQA,EAAQ,IACnC,MAAO/kF,GACPxN,QAAQrG,MAAM,qCAAsC6T,GAGtD,OAAO+kF,GAGYmgC,E,4MAInB5xH,MAAQ,CACN6xH,4BAA6B,I,EAG/BC,cAAgB,WAAO,IAEf9uG,EADqB,EAAKvrB,MAAxB60C,eAC0B1pB,gBAE5BquG,EAAe,IAAI/mH,EAAGy8B,kBAC5BsqF,EAAa57B,QAAQ,cACrBryE,EAAWonB,UAAU6mF,GACrBA,EAAanmH,SACb,EAAKyyB,cACL,EAAK9lC,MAAMs6H,uB,EAGbC,iBAAmB,SAAC7zF,GAAmB,IAE/Bnb,EADqB,EAAKvrB,MAAxB60C,eAC0B1pB,gBAElC1Y,EAAG+nH,kCAAkCjvG,EAAYmb,GACjD,EAAKZ,cACL,EAAK9lC,MAAMs6H,uB,EAGbG,oBAAsB,SAAC/zF,GAErB,EAAK/9B,UAAS,SAAAJ,GAAK,MAAK,CACtB6xH,4BAA4B,2BACvB7xH,EAAM6xH,6BADgB,IAEzB,CAAC1zF,IAAQ,S,EAKfg0F,uBAAyB,SAACh0F,GACG,EAAK1mC,MAAxB60C,eAC0B1pB,gBACLrrB,GAAG4mC,GAGtBi0F,mBAAmB,IAC7B,EAAKhyH,UAAS,SAAAJ,GAAK,MAAK,CACtB6xH,4BAA4B,2BACvB7xH,EAAM6xH,6BADgB,IAEzB,CAAC1zF,IAAQ,S,EAKfk0F,gBAAkB,SAACv+C,EAAkBC,GAAsB,IAAD,EACR,EAAKt8E,MAA7C60C,EADgD,EAChDA,eAAgBqB,EADgC,EAChCA,oBAClB3qB,EAAaspB,EAAe1pB,gBAE9B+qB,EACE,EAAKl2C,MAAM66H,+BACb,EAAK76H,MAAM66H,8BACT3kF,EACArB,EACAwnC,EACAC,GACA,SAAAw+C,GACOA,IACLroH,EAAGsoH,8BAA8BxvG,EAAY8wD,EAAUC,GACvD,EAAKx2C,cACL,EAAK9lC,MAAMs6H,0BAIb,EAAKt6H,MAAMg7H,2BACb,EAAKh7H,MAAMg7H,0BACTnmF,EACAwnC,EACAC,GACA,SAAAw+C,GACOA,IACLroH,EAAGsoH,8BAA8BxvG,EAAY8wD,EAAUC,GACvD,EAAKx2C,cACL,EAAK9lC,MAAMs6H,2B,EAMrBW,4BAA8B,SAAC3tD,GAC7B,OAAO,SAAC4tD,GACN5tD,EAAUd,aAAav5D,KAAKmX,UAAU8wG,IACtC,EAAKp1F,gB,uDAIC,IAAD,SAOHxlC,KAAKN,MALPwF,EAFK,EAELA,QACAqvC,EAHK,EAGLA,eACAqB,EAJK,EAILA,oBACAilF,EALK,EAKLA,iBACAjwH,EANK,EAMLA,aAGIqgB,EAAaspB,EAAe1pB,gBAIlC,KAFI+qB,GACFiB,YAAkCtC,EAAe7kB,WAEjD,OACE,gBAAC,IAAD,KACE,gBAAC,QAAD,wMAWN,IAFGkmB,GACDL,YAAmChB,EAAe7kB,WAElD,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACExlB,KAAK,OACL2Z,WAAW,6DAEX,gBAAC,QAAD,mRAQF,gBAAC,IAAD,KACE,gBAAC,QAAD,2MAUR,IAAMi3G,EAAsB,SAAA10F,GAC1B,QAASy0F,KAAuBjlF,GAAuBxP,EAAQ,GAE3D20F,EAAqC,SAAA30F,GAGzC,OAAQwP,GAAuBxP,GAAS,GAEpC40F,EAAkC,SAAChuD,EAAW5mC,GAClD,QAAK20F,EAAmC30F,OAGpC4mC,EAAUjxD,wBACV,EAAK9T,MAAM6xH,4BAA4B1zF,KAGvC60F,EAAwB5iF,cAC1BzC,GAGJ,OACE,gBAAC,OAAD,MACG,gBAAGp1C,EAAH,EAAGA,KAAH,OACC,gBAAC,IAAD,CAAQtC,UAAQ,EAACsM,QAAM,GACrB,gBAAC,IAAD,CAAMtM,UAAQ,GACZ,uBAAKL,MAAO6F,EAAOquH,qBAChBzyH,oBACC2rB,GACA,SAAC+hD,EAAgC/tE,GAAjC,OACE,gBAAC,WAAD,CAAgBwpB,IAAKxpB,GACnB,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAiB+sB,YAAU,GACzB,gBAAC,QAAD,gCAAmB/sB,EAAIg8H,MAEzB,gBAAC,IAAD,CAAQzwH,QAAM,EAACtM,UAAQ,GACrB,gBAAC,IAAD,CACEwK,cAAY,EACZ/I,OAAO,OACP6B,SAAU,4CACVd,MAAOssE,EAAUt9C,UACjBtvB,SAAU,SAAA+H,IAjOR,SAAC3H,EAAgBm6D,GAC7C,OAAKA,IAUAxoD,EAAG0mG,QAAQC,aAAan+C,KAC3B49C,YACE/3G,EAAKiB,EACH,0IAEF,CAAE+2G,iBAAiB,KAEd,IAhBPD,YACE/3G,EAAKiB,EACH,iHAEF,CAAE+2G,iBAAiB,KAEd,IA0NwB0iB,CAAsB16H,EAAM2H,KAEjC6kE,EAAUvyC,QAAQtyB,GAClB,EAAKq9B,cACL,EAAK9lC,MAAMs6H,wBAEbh5H,SAAU85H,EAAoB77H,GAC9B8C,WAAS,KAGb,gBAAC,IAAD,CACEuK,QACE,gBAAC,IAAD,KACE,gBAAC,IAAD,OAGJF,kBAAmB,SAAC5L,GAAD,MAAoB,CACrC,CACEa,MAAOb,EAAKiB,EAAE,eACd+8B,SAAUs8F,EAAoB77H,GAC9Bm7B,MAAO,kBAAM,EAAK6/F,iBAAiBh7H,KAErC,CAAEwB,KAAM,aACR,CACEY,MAAOb,EAAKiB,EAAE,+BACd+8B,SAAUs8F,EAAoB77H,GAC9B83D,SAAUikE,EACRhuD,EACA/tE,GAEFm7B,MAAO,kBAAM,EAAK+/F,oBAAoBl7H,KAExC,CACEoC,MAAOb,EAAKiB,EAAE,oCACd+8B,SAAUs8F,EAAoB77H,GAC9B83D,QAASikE,EACPhuD,EACA/tE,GAEFm7B,MAAO,kBAAM,EAAKggG,uBAAuBn7H,KAE3C,CACEoC,MAAOb,EAAKiB,EAAE,gBACd24B,MAAO,kBAAM,EAAKkgG,gBAAgBr7H,EAAGA,EAAI,IACzCu/B,SACGs8F,EAAoB77H,IACrBA,EAAI,GAAK,IACR67H,EAAoB77H,EAAI,IAE7B,CACEoC,MAAOb,EAAKiB,EAAE,kBACd24B,MAAO,kBAAM,EAAKkgG,gBAAgBr7H,EAAGA,EAAI,IACzCu/B,SACGs8F,EAAoB77H,IACrBA,EAAI,EAAIgsB,EAAWntB,SAClBg9H,EAAoB77H,EAAI,SAKnC,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAmBuL,QAAM,GACvB,gBAAC,IAAD,CAA2BtM,UAAQ,GAChC68H,EAAmC97H,IAClC,gBAAC,IAAD,CACEY,kBAAmB,gBAAC,QAAD,aACnBa,MAAOssE,EAAUz5C,UACjBnzB,SAAU,SAACuU,EAAG1V,EAAGyB,GACfssE,EAAUswB,QAAQ58F,GAClBssE,EAAUmuD,aAAY,GACtBnuD,EAAUI,gBAAgB,IAC1B,EAAK5nC,cACL,EAAK9lC,MAAMs6H,uBAEbh5H,SAAU85H,EAAoB77H,GAC9B8C,WAAS,GAET,gBAAC,IAAD,CACErB,MAAM,aACNiJ,YAAa,iBAEf,gBAAC,IAAD,CACEjJ,MAAM,WACNiJ,YAAa,4CAEf,gBAAC,IAAD,CACEjJ,MAAM,aACNiJ,YAAa,gBAEf,gBAAC,IAAD,CACEjJ,MAAM,SACNiJ,YAAa,uBAEf,gBAAC,IAAD,CACEjJ,MAAM,qBACNiJ,YAAa,8CAEf,gBAAC,IAAD,CACEjJ,MAAM,MACNiJ,YAAa,6BAEf,gBAAC,IAAD,CACEjJ,MAAM,QACNiJ,YAAa,6BAEf,gBAAC,IAAD,CACEjJ,MAAM,QACNiJ,YAAa,sBAEf,gBAAC,IAAD,CACEjJ,MAAM,QACNiJ,YAAa,sBAEf,gBAAC,IAAD,CACEjJ,MAAM,YACNiJ,YAAa,2BAEf,gBAAC,IAAD,CACEjJ,MAAM,UACNiJ,YAAa,6BAEf,gBAAC,IAAD,CACEjJ,MAAM,cACNiJ,YAAa,iCAEf,gBAAC,IAAD,CACEjJ,MAAM,kBACNiJ,YAAa,6BAEf,gBAAC,IAAD,CACEjJ,MAAM,sBACNiJ,YAAa,kCAIlBwI,EAAGy8B,kBAAkBC,SACpBm+B,EAAUz5C,YAEV,gBAAC,IAAD,CACEruB,QAASA,EACTxE,MAAOssE,EAAU9hD,eACjB9qB,SAAU,SAACM,GACTssE,EAAUd,aAAaxrE,GACvB,EAAK8kC,cACL,EAAK9lC,MAAMs6H,uBAEbh5H,SAAU85H,EAAoB77H,KAGT,aAAxB+tE,EAAUz5C,WACT,gBAAC,IAAD,CACEruB,QAASA,EACTsrB,WAAYxF,YACVC,EACAhsB,GAEFyB,MAAOssE,EAAU9hD,eACjB9qB,SAAU,SAACM,GACTssE,EAAUd,aAAaxrE,GACvB,EAAK8kC,cACL,EAAK9lC,MAAMs6H,uBAEbh5H,SAAU85H,EAAoB77H,KAGT,YAAxB+tE,EAAUz5C,WACT,gBAAC,IAAD,CACE1zB,kBAAmB,gBAAC,QAAD,sBACnBa,MACkC,QAAhCssE,EAAUK,kBACN,MACA,KAENjtE,SAAU,SAACuU,EAAG1V,EAAGyB,GACfssE,EAAUmuD,aAAY,GACtBnuD,EAAUI,gBAAgB1sE,GAC1B,EAAK8kC,cACL,EAAK9lC,MAAMs6H,uBAEbj4H,WAAS,GAET,gBAAC,IAAD,CACErB,MAAM,MACNiJ,YAAa,aAEf,gBAAC,IAAD,CAAcjJ,MAAM,KAAKiJ,YAAa,aAGjB,gBAAxBqjE,EAAUz5C,WACT,gBAAC,IAAD,CACE1zB,kBAAmB,gBAAC,QAAD,sBACnBa,MACkC,SAAhCssE,EAAUK,kBACN,OACA,QAENjtE,SAAU,SAACuU,EAAG1V,EAAGyB,GACfssE,EAAUmuD,aAAY,GACtBnuD,EAAUI,gBAAgB1sE,GAC1B,EAAK8kC,cACL,EAAK9lC,MAAMs6H,uBAEbj4H,WAAS,GAET,gBAAC,IAAD,CACErB,MAAM,OACNiJ,YAAa,cAEf,gBAAC,IAAD,CACEjJ,MAAM,QACNiJ,YAAa,iBAKI,uBAAxBqjE,EAAUz5C,WACT,gBAAC,IAAD,CACE6nG,UAAWzB,EAAkB3sD,GAC7Bd,aAAc,EAAKyuD,4BACjB3tD,KAIL+tD,EAAmC97H,IAClC,gBAAC,IAAD,CACEyJ,cAAY,EACZ7I,kBAAmB,gBAAC,QAAD,cACnBuB,oBAAkB,EAClBV,MAAOssE,EAAUpxD,iBACjBxb,SAAU,SAAA+H,GACR6kE,EAAUgG,eAAe7qE,GACzB,EAAKq9B,eAEPzjC,WAAS,EACTf,UACE,IAILg6H,EAAgChuD,EAAW/tE,IAC1C,gBAAC,IAAD,CACEyJ,cAAY,EACZ7I,kBACE,gBAAC,QAAD,yBAEFuB,oBAAkB,EAClBV,MAAOssE,EAAUjxD,qBACjB3b,SAAU,SAAA+H,GACR6kE,EAAUqtD,mBAAmBlyH,GAC7B,EAAKq9B,eAEP5jC,WAAS,EACTG,WAAS,EACTf,UACE,UASO,IAAtBiqB,EAAWntB,OACV,gBAAC,IAAD,KACE,gBAAC,QAAD,0CAEA,KACJ,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAM8F,eAAe,WAAW4G,QAAM,IAClCqwH,GACA,gBAAC,IAAD,CACE3tH,SAAO,EACP7L,MAAO,gBAAC,QAAD,wBACPsB,QAAS,EAAKo3H,cACdnwH,KAAM,gBAAC,IAAD,YAOjBgB,EACC,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAYA,aAAcA,KAG5B,gBAAC,IAAD,c,GA5d8ClN,e,6JC/EvC29H,E,4MACnBpzH,MAAQ,CACNyoB,eAAgBV,YAAqB,EAAKtwB,MAAMwF,U,uDAGxC,IAAD,EAOHlF,KAAKN,MALPsB,EAFK,EAELA,SACAN,EAHK,EAGLA,MACAN,EAJK,EAILA,SACAP,EALK,EAKLA,kBACAy7H,EANK,EAMLA,mBAEM5qG,EAAmB1wB,KAAKiI,MAAxByoB,eAEFw6D,EAAa,SAACzqF,GAClB,QAAK66H,IAEwC,IAAtCA,EAAmB5zH,QAAQjH,IAGpC,OACE,gBAAC,IAAD,CACEZ,kBAAmBA,GAAqB,gBAAC,QAAD,oBACxCa,MAAOA,EACPN,SAAU,SAACuU,EAAG1V,EAAGyB,GACfN,EAASM,IAEXM,SAAUA,EACVe,WAAS,GAET,gBAAC,IAAD,CACErB,MAAM,GACNiJ,YAAa,kBACb3I,SAAUkqF,EAAW,MAEtBx6D,EAAeznB,KAAI,SAACmP,GACnB,MAAsB,KAAlBA,EAAS9W,KAEJ,KAIP,gBAAC,IAAD,CACEmnB,IAAKrQ,EAAS9W,KACdZ,MAAO0X,EAAS9W,KAChBqI,YAAayO,EAASuY,SACtB3vB,SAAUkqF,EAAW9yE,EAAS9W,gB,GA/CI5D,c,4ICH3B69H,E,4MAInBtzH,MAAQ,CACNklC,iBAAkB+oF,YAChB,EAAKx2H,MAAMwF,QAAQgrB,qBACnB,EAAKxwB,MAAMwF,U,uDAIL,IAAD,EAC2ClF,KAAKN,MAA/CsB,EADD,EACCA,SAAUwvB,EADX,EACWA,WAAY9vB,EADvB,EACuBA,MAAON,EAD9B,EAC8BA,SAC7B+sC,EAAqBntC,KAAKiI,MAA1BklC,iBAKFquF,IAAkBruF,EAAiBpK,MAAK,qBAAGtiC,OAAoBC,KAErE,OACE,gBAAC,IAAD,CACEb,kBAAmB,gBAAC,QAAD,sBACnBa,MAAOA,EACPN,SAAU,SAACuU,EAAG1V,EAAGyB,GACfN,EAASM,IAEXM,SAAUA,EACVe,WAAS,GAERorC,EAAiBlkC,KAAI,SAACmP,GAAD,OACpB,gBAAC,IAAD,CACEqQ,IAAKrQ,EAAS3X,KACdC,MAAO0X,EAAS3X,KAChBkJ,YAAayO,EAASuY,SACtB3vB,SAC0B,KAAxBoX,EAASoY,YAAqBpY,EAASoY,aAAeA,QAI1DgrG,GAAiB96H,GACjB,gBAAC,IAAD,CAAcA,MAAOA,EAAOiJ,YAAajJ,S,GAzCDhD,c,iIC4CnC+9H,IAhDW,SAAC,GAGI,IAF7BL,EAE4B,EAF5BA,UACAlvD,EAC4B,EAD5BA,aAEMwvD,EAAkB,kBAAMxvD,EAAakvD,IAE3C,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAQx3H,eAAe,WAAW4G,QAAM,GACrC4wH,EAAUnyH,KAAI,SAACi1C,EAAM9X,GAAP,OACb,gBAAC,IAAD,CAAM3d,IAAK2d,EAAOxiC,eAAe,WAAW4G,QAAM,GAChD,gBAAC,IAAD,CACE9B,cAAY,EACZhI,MAAOw9C,EACP99C,SAAU,SAAA+H,GACRizH,EAAUh1F,GAASj+B,EACnBuzH,KAEF35H,WAAS,IAEX,gBAAC,IAAD,CACEkC,QAAS,qBACTtB,QAAS,WACPy4H,EAAUrtD,OAAO3nC,EAAO,GACxBs1F,MAGF,gBAAC,IAAD,WAKN,gBAAC,IAAD,CAAM93H,eAAe,WAAW4G,QAAM,GACpC,gBAAC,IAAD,CACE0C,SAAO,EACPvK,QAAS,WACPy4H,EAAUl8H,KAAK,cACfw8H,KAEFr6H,MAAO,gBAAC,QAAD,yBACPuI,KAAM,gBAAC,IAAD,a,wOCjCZuI,EAAkBC,EAAOD,GAczBwpH,EAAuB,SAC3Bn7H,EACAo1C,EACArB,GAEA,IAAMqnF,EAAWrnF,EAAeq3B,cAChC,IAAKgwD,EACH,OAAOp7H,EAAKiB,EACV,sEAGJ,IAAMw5H,EAAwB5iF,cAA2BzC,GAEnDimF,EAAoBv8H,oBACxBi1C,EAAe1pB,iBACf,SAACmiD,EAAW5mC,GACV,GAAIj0B,EAAGy8B,kBAAkBqvD,WAAWjxB,EAAUz5C,WAC5C,OAAO,KAGT,IAAMuoG,EAAc,gBAAY11F,EAAQ60F,EAApB,KACpB,OAA0C,IAAtCW,EAASl0H,QAAQo0H,GAA+BA,EAE7C,QAET3yH,OAAO0R,SAET,OAAIghH,EAAkBxyH,OAElB7I,EAAKiB,EAAE,kEACPo6H,EAAkBllH,KAAK,WAH3B,GAUIolH,EAAsB,SAACt7H,GAC3B,OAAIA,IAAS0R,EAAGk5D,eAAeK,UACvB,CAAC,4BACEjrE,IAAS0R,EAAGk5D,eAAeC,WAC9B,CAAC,8BACE7qE,IAAS0R,EAAGk5D,eAAeG,iBAC9B,CAAC,oCAGH,CAAC,iCAGHwwD,EAAyB,SAACv7H,GAC9B,OAAIA,IAAS0R,EAAGk5D,eAAeK,UACvB,CAAC,gDACEjrE,IAAS0R,EAAGk5D,eAAeC,WAC9B,CAAC,8CACE7qE,IAAS0R,EAAGk5D,eAAeG,iBAC9B,CAAC,0DAGH,CAAC,qDAGYywD,E,uKAIT,IAAD,SASHj8H,KAAKN,MAPP60C,EAFK,EAELA,eACA2nF,EAHK,EAGLA,yBACAC,EAJK,EAILA,uBACAvxH,EALK,EAKLA,aACAwxH,EANK,EAMLA,0BACAxmF,EAPK,EAOLA,oBACAymF,EARK,EAQLA,sBAGI57H,EAAO8zC,EAAe62B,kBAI5B,QAFIx1B,GACFiB,YAAkCtC,EAAe7kB,WAG/C,gBAAC,IAAD,KACE,gBAAC,QAAD,sJAUHkmB,GACDL,YAAmChB,EAAe7kB,WAGhD,gBAAC,IAAD,KACE,gBAAC,IAAD,CACExlB,KAAK,OACL2Z,WAAW,6DAEX,gBAAC,QAAD,mRAQF,gBAAC,IAAD,KACE,gBAAC,QAAD,2MAWN,gBAAC,OAAD,MACG,gBAAGrjB,EAAH,EAAGA,KAAH,OACC,gBAAC,IAAD,CAAmBgK,QAAM,GACtB4xH,EAA4BA,IAA8B,KAC3D,gBAAC,IAAD,CAA2Bz4H,WAAW,SAASzF,UAAQ,GACrD,gBAAC,IAAD,CAAMyF,WAAW,SAASzF,UAAQ,GAChC,gBAAC,IAAD,CACEwC,MAAOD,EACPZ,kBAAmB,gBAAC,QAAD,sBACnBkC,WAAS,EACTf,WAAYk7H,EACZ97H,SAAU,SAACuU,EAAG1V,EAAGyB,GAEf6zC,EAAe8jF,gBAAgB33H,GAC3By7H,GAAwBA,EAAuB,QACnD,EAAK32F,gBAGP,gBAAC,IAAD,CACE9kC,MAAOyR,EAAGk5D,eAAeitD,OACzB3uH,YAAa,gBAEf,gBAAC,IAAD,CACEjJ,MAAOyR,EAAGk5D,eAAeK,UACzB/hE,YAAa,mBAEf,gBAAC,IAAD,CACEjJ,MAAOyR,EAAGk5D,eAAeC,WACzB3hE,YAAa,oBAEf,gBAAC,IAAD,CACEjJ,MAAOyR,EAAGk5D,eAAeG,iBACzB7hE,YAAa,6BAInB,gBAAC,IAAD,CACEjB,cAAY,EACZ7I,kBAAmB,gBAAC,QAAD,sCACnB2B,SAAUu6H,EAAoBt7H,GAC9BC,MAAO6zC,EAAe3jB,cACtBxwB,SAAU,SAAA+H,GACRosC,EAAes+D,YAAY1qG,GACvBg0H,GAAwBA,IAC5B,EAAK32F,eAEPzjC,WAAS,KAGb,gBAAC,IAAD,CAAM7D,UAAQ,GACZ,gBAAC,IAAD,CACE2B,kBAAmB,gBAAC,QAAD,mBACnB2B,SAAU,mEACVO,WAAS,EACTrB,MAAO6zC,EAAetI,WACtB7rC,SAAU,SAAA+H,GACRosC,EAAe+nF,SAASn0H,GACpBg0H,GAAwBA,IAC5B,EAAK32F,eAEPjf,WACE81G,EACIA,IAAwBpzH,KAAI,SAAA3H,GAAI,MAAK,CACnC6G,KAAM7G,EACNZ,MAAOY,MAET,GAEN24B,aAAa,KAGjB,gBAAC,IAAD,CAAM/7B,UAAQ,GACZ,gBAAC,IAAD,CACEwK,cAAY,EACZ7I,kBACE,gBAAC,QAAD,yCAEF2B,SAAUw6H,EAAuBv7H,GACjCsB,WAAS,EACTH,WAAS,EACTlB,MAAO6zC,EAAe34B,iBACtBxb,SAAU,SAAA+H,GACRosC,EAAey+B,eAAe7qE,GAC1Bg0H,GAAwBA,IAC5B,EAAK32F,kBAIX,gBAAC,IAAD,CAAMtnC,UAAQ,GACXuC,IAAS0R,EAAGk5D,eAAeitD,QAC5B73H,IAAS0R,EAAGk5D,eAAeK,UACzB,gBAAC,IAAD,CACEhjE,cAAY,EACZ7I,kBAAmB,gBAAC,QAAD,iCACnB2B,SAAU,8EACVO,WAAS,EACTrB,MAAO6zC,EAAeq3B,cACtBxrE,SAAU,SAAA+H,GACRosC,EAAegoF,YAAYp0H,GACvBg0H,GAAwBA,IAC5B,EAAK32F,eAEPzkC,UAAW46H,EACTn7H,EACAo1C,EACArB,KAGF,MAEL3pC,EACC,gBAAC,IAAD,CAAM1M,UAAQ,GACZ,gBAAC,IAAD,CAAY0M,aAAcA,KAG5B,gBAAC,IAAD,c,GAhL8ClN,e,8MC9FtDgG,EAAS,CACb4K,UAAW,CACTzK,QAAS,EACTX,MAAO,GACP2G,OAAQ,IAEVD,KAAM,CACJ1G,MAAO,GACP2G,OAAQ,KAIS2yH,E,uKAEjB,OACE,kBAAC,gBAAc1tH,SAAf,MACG,gBAAG2tH,EAAH,EAAGA,cAAH,OACC,kBAAC,sBAAoB3tH,SAArB,MACG,gBAAG4tH,EAAH,EAAGA,oBAAH,OACC,kBAAC,IAAD,CACE/5H,QAAS,WACP85H,EAAcv6G,OAAOw6G,EAAoBC,YAE3C9+H,MAAO6F,EAAO4K,WAEd,kBAAC,IAAD,CAAOwuD,UAAU,QAAQj/D,MAAO6F,EAAOkG,kB,GAbdgiB,c,6KCTnCloB,EAAS,CACb4K,UAAW,CACT9P,QAAS,OACT2E,KAAM,IAIG8oH,EAAb,4MA+CE2Q,kBA/CF,sBA+CsB,sBAAAhsH,EAAA,+EAKV,EAAKlR,MAAMg8G,kCALD,sDAOhBv0G,QAAQ4sB,KACN,iIADF,MAPgB,wDA/CtB,EA6DEm4F,iBAAmB,WAKb,EAAKxsH,MAAM+kF,UACb,EAAK/kF,MAAMg8G,mCAnEjB,2DAII,OAAO17G,KAAKN,MAAMwF,UAJtB,kCAQI,OAAO,OARX,sCAYQlF,KAAKykD,QAAQzkD,KAAKykD,OAAOilC,kBAZjC,yFAmBwBxwD,GAGpB,SAAKl5B,KAAKN,MAAM+kF,WAAavrD,EAAUurD,YAtB3C,yCA6BqBrsB,GAIbA,EAAUqsB,WAAazkF,KAAKN,MAAM+kF,UACpCzkF,KAAKN,MAAMg8G,oCAlCjB,6CA0CQ17G,KAAKN,MAAM+kF,UACbzkF,KAAKN,MAAMg8G,oCA3CjB,oDAuE8D,IAAD,EACpB17G,KAAKN,MAAlCwF,EADiD,EACjDA,QAASsrG,EADwC,EACxCA,gBACjB,OAAKtrG,GAAYsrG,GAEZtrG,EAAQ49E,iCAAiC0tB,GAGvCtrG,EAAQgtG,4BAA4B1B,GALF,OAzE7C,iDAkFIqsB,EACAhvF,GAEI7tC,KAAKykD,QACPzkD,KAAKykD,OAAO4tD,2BAA2BwqB,EAAoBhvF,KAtFjE,+BAyFY,IAAD,SAC8B7tC,KAAKN,MAAlCwF,EADD,EACCA,QAASsrG,EADV,EACUA,gBACX17D,EAA2B90C,KAAKkyG,8BAEtC,IAAKp9D,IAA6B5vC,EAEhC,OAAO,kDAA0BsrG,EAA1B,WANF,MAULxwG,KAAKN,MAAM8xG,kBAAoB,GADzBF,EATD,EASCA,6BAA8BC,EAT/B,EAS+BA,6BAGtC,OACE,uBAAK1zG,MAAO6F,EAAO4K,WACjB,gBAAC,IAAD,CACEma,IAAKqsB,EAAyB1vC,IAC9BF,QAASA,EACT4vC,yBAA0BA,EAC1Bk6C,WAAYhvF,KAAKN,MAAMsvF,WACvB51D,gBAAiBp5B,KAAKN,MAAM05B,gBAC5BnC,iBAAkBj3B,KAAKN,MAAMu3B,iBAC7B4C,wBAAyB75B,KAAKN,MAAMm6B,wBACpC80D,4BAA6B3uF,KAAKN,MAAMivF,4BACxCmB,uBAAwB9vF,KAAKN,MAAMowF,uBACnCwhB,6BAA8BA,EAC9BC,6BAA8BA,EAC9BurB,iBAAkB98H,KAAK48H,kBACvBj/H,IAAK,SAAA8mD,GAAM,OAAK,EAAKA,OAASA,GAC9Blf,eAAgBvlC,KAAKN,MAAM6lC,sBArHrC,GAA6D7nC,aA4HhD+zG,EAAgD,SAC3D/xG,GAD2D,OAExD,gBAACusH,EAA4CvsH,K,gNC/G5CgE,EAAS,CACbq5H,cAAe,CACb55H,KAAM,IAIJ65H,EAA0B,SAAC7tG,GAAD,OAC9BA,EAAiBC,MAAMM,WACnButG,EAA2B,SAAC9tG,GAAD,OAC/BA,EAAiB/c,QA0BE8qH,E,4MAYnBvI,0BAAkD,G,EAClDwI,gCAAwD,G,EACxDl1H,MAAe,CACbm1H,wBAAyB,KACzBC,yBAA0B,KAC1B7rG,WAAY,I,EA8Bd8rG,SAAW,WAAO,IAAD,EAC8B,EAAK59H,MAA1C69H,EADO,EACPA,mBAAoB1rG,EADb,EACaA,aAEtBvwB,EAAOk6B,YACX,SACA,SAAAl6B,GAAI,OAAIuwB,EAAa0S,IAAIjjC,IAASi8H,EAAmBh5F,IAAIjjC,MAG3DuwB,EAAa2rG,UAAUl8H,EAAMuwB,EAAaC,SAC1C,EAAK2rG,yBAED,EAAK/9H,MAAMg+H,cACb,EAAKh+H,MAAMg+H,gB,EAIfC,UAAY,SAACxuG,GAAwC,IAC3CC,EAAkBD,EAAlBC,MAAOhd,EAAW+c,EAAX/c,OADmC,EAEL,EAAK1S,MAA1C69H,EAF0C,EAE1CA,mBAAoB1rG,EAFsB,EAEtBA,aAEb9mB,IAAOkZ,kBACpB,sEAIF,EAAKvkB,MAAMk+H,cAAczuG,GAAkB,SAAA0uG,GACpCA,IAEDzrH,EACFmrH,EAAmBr7G,OAAOkN,EAAMM,WAEhCmC,EAAa3P,OAAOkN,EAAMM,WAG5B,EAAK+tG,yBACD,EAAK/9H,MAAMo+H,gBACb,EAAKp+H,MAAMo+H,sB,EAKjBC,YAAc,SAAC5uG,GACb,EAAK9mB,SACH,CACE+0H,wBAAyBjuG,IAE3B,WACM,EAAK6uG,cAAc,EAAKA,aAAa/jE,sB,EAK/CgkE,aAAe,SAAC9uG,GAA2D,IACjEC,EAAkBD,EAAlBC,MAAOhd,EAAW+c,EAAX/c,OADyD,EAE3B,EAAK1S,MAA1C69H,EAFgE,EAEhEA,mBAAoB1rG,EAF4C,EAE5CA,aAEtBvjB,EAAqC8D,EACvCmrH,EACA1rG,EAEE8oC,EAAUn/B,YACdpM,EAAMM,WACN,SAAApuB,GAAI,OAAIgN,EAAUi2B,IAAIjjC,KACtB,IAGI48H,EAAW5vH,EAAUkvH,UACzB7iE,EACArsD,EAAU6vH,YAAY/uG,EAAMM,WAAa,GAY3C,OATAxc,YACEgrH,EACA7rH,YAAoB+c,GACpB,mBAEF8uG,EAASzjG,QAAQkgC,GAEjB,EAAK8iE,yBAEE,CAAEruG,MAAO8uG,EAAU9rH,W,EAG5BgsH,UAAY,SAACjvG,EAAoCwrC,GAAqB,IAC5DvrC,EAAUD,EAAVC,MAD2D,EAEtB,EAAK1vB,MAA1C69H,EAF2D,EAE3DA,mBAAoB1rG,EAFuC,EAEvCA,aAE5B,EAAKxpB,SAAS,CACZ+0H,wBAAyB,OAGvBhuG,EAAMM,YAAcirC,IAEpB9oC,EAAa0S,IAAIo2B,IAAY4iE,EAAmBh5F,IAAIo2B,GACtD49C,YAAe,+CAAgD,CAC7DC,iBAAiB,IAKjB,EAAK94G,MAAM2+H,eAAe1jE,IAC5B,EAAKj7D,MAAM4+H,cAAcnvG,EAAkBwrC,GAAS,SAAA4jE,GAC7CA,IAELnvG,EAAMqL,QAAQkgC,GAEd,EAAK8iE,yBACD,EAAK/9H,MAAM8+H,gBACb,EAAK9+H,MAAM8+H,uB,EAMnBC,kBAAoB,SAACtvG,GAAwC,IACnDC,EAAUD,EAAVC,MADkD,EAEb,EAAK1vB,MAA1C69H,EAFkD,EAElDA,mBAAoB1rG,EAF8B,EAE9BA,aAEtBF,EAAYvC,EAAMM,UAEpB6tG,EAAmBh5F,IAAI5S,GACzB4mF,YACE,oHACA,CAAEC,iBAAiB,IAKRztG,IAAOkZ,kBACpB,sKAIFs5G,EAAmBvkD,OAAO5pD,EAAOmuG,EAAmBzrG,SACpDD,EAAa3P,OAAOyP,GACpB,EAAK8rG,2B,EAGPA,uBAAyB,WACnB,EAAK/9H,MAAM6lC,gBACb,EAAK7lC,MAAM6lC,eAAeI,wBAC5B,EAAKH,e,EAGPk5F,oBAAsB,SAACC,GACrB,QAAK,EAAK12H,MAAMo1H,2BAGd,EAAKp1H,MAAMo1H,yBAAyBjrH,SACpCusH,EAAuBvsH,UAMtB,EAAKnK,MAAMo1H,yBAAyBjrH,SACrCusH,EAAuBvsH,QACkD,IAAzE,EAAK+qH,gCAAgCz1H,QAAQi3H,M,EASjDC,iBAAmB,SAACD,GAA8C,IACxDtB,EAA6B,EAAKp1H,MAAlCo1H,yBACR,GAAKA,EAAL,CAF+D,IAK3D/uH,EACA0sG,EACA0R,EAP2D,EAIlB,EAAKhtH,MAA1C69H,EAJuD,EAIvDA,mBAAoB1rG,EAJmC,EAInCA,aAKtBgtG,EACJxB,EAAyBjrH,SAAWusH,EAAuBvsH,OAEvD0sH,GACHzB,EAAyBjrH,QAC1BusH,EAAuBvsH,QAErB,IADFmrH,EAAmBY,YAAYQ,EAAuBvvG,MAAMM,WAG9D,GAAImvG,EAKF7jB,GAJA1sG,EAAY+uH,EAAyBjrH,OACjCmrH,EACA1rG,GAEkBssG,YACpBd,EAAyBjuG,MAAMM,WAEjCg9F,EAAUp+G,EAAU6vH,YAAYQ,EAAuBvvG,MAAMM,eACxD,KAAIovG,EAaT,OAXA9jB,GADA1sG,EAAYujB,GACUssG,YACpBd,EAAyBjuG,MAAMM,WAEjCg9F,EAAW,EAAKzkH,MAAMupB,WAElBljB,EAAU6vH,YACR,EAAKxJ,0BACH,EAAKA,0BAA0BtrH,OAAS,GACxC+lB,MAAMM,WACN,EALJphB,EAAUwjB,QASZ46F,EAAU1R,IAAW0R,GAAW,GAEpCp+G,EAAU2tE,KAAK++B,EAAW0R,GAC1B,EAAK+Q,yBACD,EAAKO,cAAc,EAAKA,aAAa/jE,oB,EAG3C8kE,yBAA2B,SAACv+H,GAAD,OAAoB,SAC7C2uB,EACAiX,GAF6C,MAG1C,CACH,CACE/kC,MAAOb,EAAKiB,EAAE,kBACd24B,MAAO,kBAAM,EAAK6jG,aAAa9uG,KAEjC,CAAE1uB,KAAM,aACR,CACEY,MAAOb,EAAKiB,EAAE,mBACd24B,MAAO,kBAAM,EAAK16B,MAAMs/H,YAAY7vG,EAAiBC,SAEvD,CAAE3uB,KAAM,aACR,CACEY,MAAOb,EAAKiB,EAAE,eACd24B,MAAO,kBAAM,EAAK2jG,YAAY5uG,KAEhC,CACE9tB,MAAOb,EAAKiB,EAAE,4BACd+8B,SAAUy+F,EAAyB9tG,GACnCiL,MAAO,kBAAM,EAAKqkG,kBAAkBtvG,IACpC4nC,SAA4C,IAAnC,EAAKr3D,MAAMu/H,qBAEtB,CACE59H,MAAOb,EAAKiB,EAAE,eACd24B,MAAO,kBAAM,EAAKujG,UAAUxuG,KAE9B,CAAE1uB,KAAM,aACR,CACEY,MAAOb,EAAKiB,EAAE,2BACd24B,MAAO,EAAKkjG,a,oEAjRMpkG,EAAkBgmG,GAQtC,OACEl/H,KAAKiI,MAAMm1H,0BACT8B,EAAU9B,yBACZp9H,KAAKiI,MAAMo1H,2BACT6B,EAAU7B,0BACZr9H,KAAKiI,MAAMupB,aAAe0tG,EAAU1tG,aAKpCxxB,KAAKN,MAAM69H,qBAAuBrkG,EAAUqkG,oBAC5Cv9H,KAAKN,MAAMmyB,eAAiBqH,EAAUrH,gB,+BAkQhC,IAAD,SACsC7xB,KAAKN,MAA1C69H,EADD,EACCA,mBAAoB1rG,EADrB,EACqBA,aACpBL,EAAexxB,KAAKiI,MAApBupB,WAEF2tG,EAAyCvtG,YAC7CC,GACA5oB,KAAI,SAAAmmB,GAAK,MAAK,CAAEA,QAAOhd,QAAQ,MAC3BgtH,EAA+CxtG,YACnD2rG,GACAt0H,KAAI,SAAAmmB,GAAK,MAAK,CAAEA,QAAOhd,QAAQ,MACjCpS,KAAK20H,0BAA4BjjG,YAAiBytG,EAAkB,CAClE3tG,eAEFxxB,KAAKm9H,gCAAkCzrG,YACrC0tG,EACA,CACE5tG,eAGJ,IAAMopC,EAAWlpC,YAAiB,GAAD,mBAC3BytG,GAD2B,YACNC,IACzB,CAAE5tG,eAME6tG,EAAUxtG,EAAazsB,IAAM,IAAMm4H,EAAmBn4H,IAEtDg4H,EAA0Bp9H,KAAKiI,MAAMm1H,wBACvCxiE,EAAS73B,KACP7T,YAAuBlvB,KAAKiI,MAAMm1H,0BAEpC,KAEJ,OACE,kBAAC,IAAD,KACE,yBAAKv/H,MAAO6F,EAAOq5H,eACjB,kBAAC,IAAD,MACG,gBAAGlzH,EAAH,EAAGA,OAAQ3G,EAAX,EAAWA,MAAX,OACC,kBAAC,OAAD,MACG,gBAAG1C,EAAH,EAAGA,KAAH,OACC,kBAAC,IAAD,CACEioB,IAAK42G,EACL1hI,IAAK,SAAAqgI,GAAY,OAAK,EAAKA,aAAeA,GAC1CpjE,SAAUA,EACV13D,MAAOA,EACP2G,OAAQA,EACR2wD,YAAawiE,EACbviE,UAAW,SAACtrC,EAAkBiX,GAC5B,MAAO,cAAgBA,GAEzBi0B,WAAY4iE,EACZ3iE,WAAY,SAAAnrC,GAAgB,OAC1B,EAAKzvB,MAAMs/H,YAAY7vG,EAAiBC,QAE1C2rC,aAAc,EAAKuiE,SACnBziE,gBAAiB,kBAAC,QAAD,wBACjBC,aAAa,uBACbZ,cAAe,GACfxB,eAAgB,SAAAvpC,GACd,EAAK9mB,SAAS,CACZg1H,yBAA0BluG,KAG9BorC,YAAa6iE,EACbtkE,SAAU,EAAKslE,UACfhyH,kBAAmB,EAAK2yH,yBAAyBv+H,GACjDw6D,sBAAuB,EAAK4jE,iBAC5B3jE,uBAAwB,EAAKyjE,oBAC7B3kE,aApZwB,iCA2ZpC,kBAAC,IAAD,CACEr5D,MAAO8wB,EACPtS,gBAAiB,aACjB9e,SAAU,SAAA+H,GAAI,OACZ,EAAKE,SAAS,CACZmpB,WAAYrpB,Y,GA3XuBzK,IAAMkuB,WAAlCsxG,EACZoC,aAAe,CACpB1B,cAAe,SAACzuG,EAAoC88D,GAArC,OACbA,GAAG,IACLqyC,cAAe,SACbnvG,EACAwrC,EACAsxB,GAHa,OAIVA,GAAG,M,uGCHGszC,IApDiB,SAAC,GAOnB,IANZr6H,EAMW,EANXA,QACAkqB,EAKW,EALXA,MACA/I,EAIW,EAJXA,QACAs0B,EAGW,EAHXA,SACA1gC,EAEW,EAFXA,uBACAC,EACW,EADXA,iBAEMsrB,EAAcC,cACdyV,EAAkBC,YAAsC,CAC5DC,mBAAoBhsB,EACpBurB,aAGF,OACE,kBAAC,IAAD,CACEt0B,QAASA,EACToC,IAAK2G,EAAMhqB,IACXi2C,QAAS,CACP,kBAAC,IAAD,CACE5yB,IAAI,SACJpnB,MAAO,kBAAC,QAAD,eACPi6C,iBAAe,EACf34C,QAASu4C,IAEX,kBAAC,IAAD,CACEzyB,IAAI,QACJpnB,MAAO,kBAAC,QAAD,cACP6L,SAAO,EACPouC,iBAAe,EACf34C,QAAS0jB,KAGbnoB,UAAQ,EACRq9C,mBAAmB,EACnB39B,eAAgBs9B,EAChBvvC,MAAI,EACJrH,MAAK,eAAU8qB,EAAMM,UAAhB,WAEL,kBAAC,IAAD,CACExqB,QAASA,EACTkqB,MAAOA,EACPnV,uBAAwBA,EACxBC,iBAAkBA,EAClB0hC,cACEpW,O,sKCnCGg6F,EAAuB9hI,gBAAwC,CAC1EgwB,QAAS,KACTmyE,QAAS,KACTC,SAAU,KACV18B,cAAe,KACfq8D,yBAA0B,aAC1B3+H,MAAO,KACP0wB,WAAY,GACZqvD,cAAe,aACfp5C,aAAc,CACZR,cAAe,IAAID,IACnBM,UAAW,aACXC,aAAc,aACdT,eAAgB,KAChBC,kBAAmB,gBAQjB24F,EAAyB,SAACpoG,GAC9B,OAAOA,EAASh2B,KAAO,KAAOg2B,EAASjY,KAAK1I,KAAK,OAGtCgpH,EAA6B,SAAC,GAEH,IADtC/hI,EACqC,EADrCA,SACqC,EACOF,WAEzC,MAHkC,mBAC9BkiI,EAD8B,KACdC,EADc,OAIPniI,WAAyB,MAJlB,mBAI9BgwB,EAJ8B,KAIrBuzD,EAJqB,OAKPvjF,WAA+B,MALxB,mBAK9BmiG,EAL8B,KAKrBQ,EALqB,OAML3iG,WAAgC,MAN3B,mBAM9BoiG,EAN8B,KAMpBQ,EANoB,OAOX5iG,WAAuB,MAPZ,mBAO9BoD,EAP8B,KAOvB89D,EAPuB,KAQ/BhiC,EAAYl/B,UAAsB,GARH,EAUDA,WApDZ,IA0Ca,mBAU9B8zB,EAV8B,KAUlBqvD,EAVkB,KAW/Bp5C,EAAeZ,cAEf44F,EAA2B/hI,eAC/B,WAGMkiI,GAAkBhjG,EAAU38B,SAEhC,sBAAC,sCAAA2Q,EAAA,6DACCguD,EAAS,MACThiC,EAAU38B,SAAU,EAFrB,kBAKwCspC,cALxC,uBAKWlS,EALX,EAKWA,UAAW3J,EALtB,EAKsBA,QALtB,UAMyB+b,cANzB,eAMSo2D,EANT,iBAO0Bl2D,cAP1B,QAOSm2D,EAPT,OASS8/B,EAAiB,GACvBvoG,EAAUrxB,SAAQ,SAAAsxB,GAChBsoG,EAAetoG,EAASjyB,KAAOiyB,KAGjCnwB,QAAQC,KAAR,iBACYiwB,EAAUhuB,OADtB,qCAGAw2H,EAAkBD,GAClB3+C,EAAWvzD,GACX2yE,EAAWR,GACXS,EAAYR,GApBf,kDAsBG34F,QAAQrG,MAAR,wDAIA89D,EAAS,EAAD,IA1BX,QA6BChiC,EAAU38B,SAAU,EA7BrB,yDAAD,KAgCF,CAAC2/H,EAAgBhjG,IAGXkK,EAAkCW,EAAlCX,eAAgBG,EAAkBQ,EAAlBR,cAClBm8B,EAAkCS,YACtC+7D,EACAF,EACAluG,EACAsV,EACAG,GAGI64F,EAAqBpiI,WACzB,iBAAO,CACL0lE,gBACAq8D,2BACA/xG,UACAmyE,UACAC,WACAh/F,QACA0wB,aACAqvD,gBACAp5C,kBAEF,CACE27B,EACAtiE,EACA4sB,EACAmyE,EACAC,EACAtuE,EACAiW,EACAg4F,IAIJ,OACE,gBAACD,EAAqBhjE,SAAtB,CAA+B97D,MAAOo/H,GACnCliI,K,+HChID8F,EAAS,CACb4K,UAAW,CAAEnL,KAAM,GACnBuhE,KAAM,CAAE9hB,UAAW,WAGRm9E,EAAmB,YAMN,IALxBn7D,EAKuB,EALvBA,YACAE,EAIuB,EAJvBA,iBACAhkE,EAGuB,EAHvBA,MACAymB,EAEuB,EAFvBA,QACAy4G,EACuB,EADvBA,SAEA,OAAKp7D,EAY6B,IAAvBA,EAAYv7D,OAEnB,gBAAC,IAAD,KACE,gBAAC,QAAD,4HASJ,gBAAC,IAAD,KACE,uBAAKxL,MAAO6F,EAAO4K,WACjB,gBAAC,IAAD,MACG,YAAwB,IAArBpL,EAAoB,EAApBA,MAAO2G,EAAa,EAAbA,OACT,IAAK3G,IAAU2G,EAAQ,OAAO,KAE9B,IAAM27D,EAAcjvD,KAAK1T,IAAI0T,KAAKomE,OAAOz5E,EAAQ,GAAK88H,GAAW,GAC3Dv6D,EAAclvD,KAAK1T,IAAI0T,KAAKomE,MAAMz5E,EAAQsiE,GAAc,IACxDrK,EAAW5kD,KAAK1T,IACpB,EACA0T,KAAK0pH,KAAKr7D,EAAYv7D,OAASm8D,IAmBjC,OACE,gBAAC,IAAD,CACEtiE,MAAOA,EACP2G,OAAQA,EACR27D,YAAaA,EACbC,YAAaA,EACbrK,UAAWqK,EACXtK,SAAUA,EACVuK,aAxBJ,YAA8D,IAAtCw6D,EAAqC,EAArCA,YAAaz3G,EAAwB,EAAxBA,IAAK48C,EAAmB,EAAnBA,SAAUxnE,EAAS,EAATA,MAC5C4iD,EAAc4kB,EAAWG,EAAc06D,EACvCh7D,EACJzkB,EAAcmkB,EAAYv7D,OACtBu7D,EAAYnkB,GACZ,KAEN,OACE,uBAAKh4B,IAAKA,EAAK5qB,MAAOA,GACnBqnE,EACGJ,EAAiBI,EAAYO,GAC7B,OAcN5nE,MAAO6F,EAAOghE,YA7DrB5jE,EAGD,gBAAC,IAAD,CAAkBymB,QAASA,GACzB,gBAAC,QAAD,iFAJa,gBAAC,IAAD,Q,iCC9BvB,6BAGe,aAAA7nB,GAAK,OAClB,kBAAC,IAAD,iBAAaA,EAAb,CAAoBygI,QAAQ,eAC1B,uBAAGz+H,GAAG,SAAS0+H,OAAO,OAAOC,YAAY,IAAItuD,KAAK,OAAOuuD,SAAS,WAChE,uBAAG5+H,GAAG,SAAS4+H,SAAS,WACtB,6BACE5+H,GAAG,QACHqwE,KAAK,UACL/hC,OAAO,0CAET,uBAAGtuC,GAAG,UAAUqwE,KAAK,WACnB,0BACErwE,GAAG,iBACHke,UAAU,oFACVk5B,EAAE,aACFC,EAAE,cACF71C,MAAM,aACN2G,OAAO,eAET,0BACEnI,GAAG,iBACHke,UAAU,wFACVk5B,EAAE,aACFC,EAAE,aACF71C,MAAM,aACN2G,OAAO,eAET,0BACEnI,GAAG,iBACHke,UAAU,uFACVk5B,EAAE,aACFC,EAAE,aACF71C,MAAM,aACN2G,OAAO,eAET,0BACEnI,GAAG,iBACHke,UAAU,uFACVk5B,EAAE,aACFC,EAAE,cACF71C,MAAM,aACN2G,OAAO,qB,6BC3CnB,6BAGe,aAAAnK,GAAK,OAClB,kBAAC,IAAD,iBAAaA,EAAb,CAAoBygI,QAAQ,eAC1B,uBAAGz+H,GAAG,SAAS0+H,OAAO,OAAOC,YAAY,IAAItuD,KAAK,OAAOuuD,SAAS,WAChE,uBAAG5+H,GAAG,QACJ,6BACEA,GAAG,QACHsuC,OAAO,kCACP+hC,KAAK,YAEP,6BACErwE,GAAG,WACHsuC,OAAO,mDACP+hC,KAAK,YAEP,4BACErwE,GAAG,UACH6+H,GAAG,KACHC,GAAG,MACHl+G,EAAE,SACFyvD,KAAK,OACLquD,OAAO,UACPC,YAAY,a,6BCxBtB,6BAGe,aAAA3gI,GAAK,OAClB,kBAAC,IAAD,iBAAaA,EAAb,CAAoBygI,QAAQ,eAC1B,uBAAGz+H,GAAG,SAAS0+H,OAAO,OAAOC,YAAY,IAAItuD,KAAK,OAAOuuD,SAAS,WAChE,uBACE5+H,GAAG,UACHke,UAAU,iCACV0gH,SAAS,WAET,uBAAG5+H,GAAG,QAAQke,UAAU,iCACtB,6BACEle,GAAG,QACHqwE,KAAK,UACL/hC,OAAO,gKAET,0BACEtuC,GAAG,iBACHqwE,KAAK,UACLnyD,UAAU,sFACVk5B,EAAE,aACFC,EAAE,aACF71C,MAAM,YACN2G,OAAO,eAET,0BACEnI,GAAG,iBACHqwE,KAAK,UACLnyD,UAAU,wFACVk5B,EAAE,aACFC,EAAE,aACF71C,MAAM,YACN2G,OAAO,eAET,0BACEnI,GAAG,iBACHqwE,KAAK,UACLnyD,UAAU,yFACVk5B,EAAE,aACFC,EAAE,aACF71C,MAAM,YACN2G,OAAO,eAET,0BACEnI,GAAG,iBACHqwE,KAAK,UACLnyD,UAAU,uFACVk5B,EAAE,aACFC,EAAE,cACF71C,MAAM,YACN2G,OAAO,gBAGX,uBAAGnI,GAAG,QAAQ+c,QAAQ,MAAMmB,UAAU,iCACpC,0BACEle,GAAG,iBACHqwE,KAAK,UACLnyD,UAAU,sFACVk5B,EAAE,aACFC,EAAE,aACF71C,MAAM,YACN2G,OAAO,cAET,6BACEnI,GAAG,QACHqwE,KAAK,UACL/hC,OAAO,2FAET,0BACEtuC,GAAG,iBACHqwE,KAAK,UACLnyD,UAAU,qFACVk5B,EAAE,aACFC,EAAE,aACF71C,MAAM,aACN2G,OAAO,cAET,0BACEnI,GAAG,iBACHqwE,KAAK,UACLnyD,UAAU,yFACVk5B,EAAE,YACFC,EAAE,aACF71C,MAAM,aACN2G,OAAO,cAET,0BACEnI,GAAG,iBACHqwE,KAAK,UACLnyD,UAAU,mFACVk5B,EAAE,aACFC,EAAE,aACF71C,MAAM,YACN2G,OAAO,eAET,0BACEnI,GAAG,iBACHqwE,KAAK,UACLnyD,UAAU,uFACVk5B,EAAE,aACFC,EAAE,aACF71C,MAAM,YACN2G,OAAO,qB,6BCvGnB,6BAGe,aAAAnK,GAAK,OAClB,kBAAC,IAAD,iBAAaA,EAAb,CAAoBygI,QAAQ,sBAC1B,uBAAGz+H,GAAG,SAASke,UAAU,6BAA6B0gH,SAAS,WAC7D,0BACE5+H,GAAG,WACHowE,EAAE,8kBACFC,KAAK,YAEP,0BACErwE,GAAG,YACHowE,EAAE,2SACFC,KAAK,YAEP,0BACErwE,GAAG,aACHowE,EAAE,qSACFC,KAAK,UACL0uD,YAAY,OAEd,0BACE/+H,GAAG,YACHowE,EAAE,0EACFC,KAAK,YAEP,0BACErwE,GAAG,YACHowE,EAAE,0EACFC,KAAK,gB,6BC9Bb,6BAGe,aAAAryE,GAAK,OAClB,kBAAC,IAAD,iBAAaA,EAAb,CAAoBygI,QAAQ,sBAC1B,uBAAGz+H,GAAG,SAASqwE,KAAK,WAClB,0BACErwE,GAAG,WACHowE,EAAE,0kBACFC,KAAK,YAEP,0BACErwE,GAAG,YACHowE,EAAE,6SACFC,KAAK,YAEP,0BACErwE,GAAG,aACHowE,EAAE,qSACFC,KAAK,UACL0uD,YAAY,OAEd,0BACE/+H,GAAG,UACHowE,EAAE,4jBACFC,KAAK,gB,6BCzBb,6BAGe,aAAAryE,GAAK,OAClB,kBAAC,IAAD,iBAAaA,EAAb,CAAoBygI,QAAQ,sBAC1B,uBAAGz+H,GAAG,cACJ,0BACEA,GAAG,WACHowE,EAAE,0kBACFC,KAAK,UACLsuD,YAAY,WAEd,0BACE3+H,GAAG,YACHowE,EAAE,6SACFC,KAAK,UACLsuD,YAAY,WAEd,0BACE3+H,GAAG,aACHowE,EAAE,sSACFC,KAAK,UACL0uD,YAAY,KACZJ,YAAY,WAEd,uBAAG3+H,GAAG,WAAWqwE,KAAK,UAAUsuD,YAAY,SAASn0H,aAAW,QAC9D,0BACExK,GAAG,UACHowE,EAAE,6OAEJ,0BACEpwE,GAAG,UACHowE,EAAE,0PAEJ,0BACEpwE,GAAG,UACHowE,EAAE,kJAEJ,0BACEpwE,GAAG,UACHowE,EAAE,0O,6BCxCZ,6BAGe,aAAApyE,GAAK,OAClB,kBAAC,IAAD,iBAAaA,EAAb,CAAoBygI,QAAQ,eAC1B,uBAAGz+H,GAAG,SAAS0+H,OAAO,OAAOC,YAAY,IAAItuD,KAAK,OAAOuuD,SAAS,WAChE,uBAAG5+H,GAAG,WAAW4+H,SAAS,WACxB,0BACE5+H,GAAG,iBACHqwE,KAAK,UACLj5B,EAAE,IACFC,EAAE,IACF71C,MAAM,KACN2G,OAAO,eAET,0BACEnI,GAAG,iBACHqwE,KAAK,UACLj5B,EAAE,aACFC,EAAE,aACF71C,MAAM,aACN2G,OAAO,eAET,6BACEnI,GAAG,QACHqwE,KAAK,UACL/hC,OAAO,oLAET,6BACEtuC,GAAG,QACHqwE,KAAK,UACL/hC,OAAO,mK,6BC/BjB,6BAGe,aAAAtwC,GAAK,OAClB,kBAAC,IAAD,iBAAaA,EAAb,CAAoBygI,QAAQ,eAC1B,uBAAGz+H,GAAG,SAAS0+H,OAAO,OAAOC,YAAY,IAAItuD,KAAK,OAAOuuD,SAAS,WAChE,uBAAG5+H,GAAG,aAAa4+H,SAAS,WAC1B,0BACE5+H,GAAG,iBACHqwE,KAAK,UACLj5B,EAAE,IACFC,EAAE,IACF71C,MAAM,KACN2G,OAAO,eAET,6BACEnI,GAAG,QACHqwE,KAAK,UACL/hC,OAAO,4QAET,0BACEtuC,GAAG,iBACHqwE,KAAK,UACLj5B,EAAE,KACFC,EAAE,aACF71C,MAAM,aACN2G,OAAO,oB,yNCTXnG,EAAS,CACb4K,UAAW,CACT9P,QAAS,OACT2E,KAAM,IAQGipH,EAAb,4MAMEnkH,MAAQ,CACNy4H,8BAA8B,GAPlC,EA+DEC,uBAAyB,SAACC,GACxB,IAAM1oB,EAAiB,EAAKgB,oBACvBhB,IAELA,EAAe2oB,oBAAoBD,EAAcrxB,YACjD,EAAKlnG,SACH,CACEq4H,8BAA8B,IAEhC,kBAAM,EAAKh3C,qBAxEjB,EA4EEo3C,6BAA+B,WAC7B,EAAKz4H,SAAS,CACZq4H,8BAA8B,KA9EpC,EAkFE3zC,4BAA8B,WAC5B0lB,YAA8B,CAC5B1vG,KAAM,QACN2vG,aAAc,4BArFpB,EAyFE5iB,uBAAyB,SAACtkD,EAAe+I,GACvC,EAAK70C,MAAMowF,uBACTtkD,EACA+I,EACA,2BA7FN,oEAUwBrb,GAGpB,OAAOA,EAAUurD,WAbrB,mCAiBI,OAAOzkF,KAAKN,MAAMwF,UAjBtB,sCAqBQlF,KAAKykD,QAAQzkD,KAAKykD,OAAOilC,kBArBjC,uFA4B0C,IAAD,EACA1pF,KAAKN,MAAlCwF,EAD6B,EAC7BA,QAASsrG,EADoB,EACpBA,gBACjB,OAAKtrG,GAAYsrG,GAEZtrG,EAAQ+zG,uBAAuBzI,GAG7BtrG,EAAQg0G,kBAAkB1I,GALQ,OA9B7C,kCAsC0B,IACdtrG,EAAYlF,KAAKN,MAAjBwF,QACR,IAAKA,EAAS,OAAO,KAErB,IAAMqqG,EAAavvG,KAAK+gI,0BACxB,OAAKxxB,EAEErqG,EAAQuqG,UAAUF,GAFD,OA3C5B,gDAgDsC,IAC1BrqG,EAAYlF,KAAKN,MAAjBwF,QACR,IAAKA,EAAS,OAAO,KAErB,IAAMgzG,EAAiBl4G,KAAKk5G,oBAC5B,IAAKhB,EAAgB,OAAO,KAE5B,IAAM3I,EAAa2I,EAAe8oB,sBAClC,OAAK97H,EAAQsqG,eAAeD,GAIrBA,EAHE,OAzDb,+BAiGY,IAAD,SAC8BvvG,KAAKN,MAAlCwF,EADD,EACCA,QAASsrG,EADV,EACUA,gBACX0H,EAAiBl4G,KAAKk5G,oBACtBxlF,EAAS1zB,KAAKyvG,YAEpB,OAAKyI,GAAmBhzG,EAMtB,yBAAKrH,MAAO6F,EAAO4K,WAChBolB,GACC,kBAAC,IAAD,CACE/1B,IAAK,SAAA8mD,GAAM,OAAK,EAAKA,OAASA,GAC9BuqC,WAAYhvF,KAAKN,MAAMsvF,WACvBa,aAAc7vF,KAAKN,MAAMmwF,aACzBz2D,gBAAiBp5B,KAAKN,MAAM05B,gBAC5BnC,iBAAkBj3B,KAAKN,MAAMu3B,iBAC7B4C,wBAAyB75B,KAAKN,MAAMm6B,wBACpC80D,4BAA6B3uF,KAAKN,MAAMivF,4BACxCmB,uBAAwB9vF,KAAK8vF,uBAC7B/C,4BAA6B/sF,KAAK+sF,4BAClCxnD,eAAgBvlC,KAAKN,MAAM6lC,eAC3BrgC,QAASA,EACTkV,MAAO,CACLsZ,SACAwkF,kBAEFj+F,uBAAwB/U,EACxBgV,iBAAkBwZ,EAClBqyD,OAAQmyB,EAAe6U,YACvBt9B,eAAgBzvF,KAAK8gI,6BACrBlxC,qBAAsB5vF,KAAKN,MAAMkwF,wBAGnCl8D,GACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,QAAD,qFAKF,kBAAC,IAAD,CAAM9vB,eAAe,UACnB,kBAAC,IAAD,CACEvC,MAAO,kBAAC,QAAD,yBACP6L,SAAO,EACPvK,QAAS3C,KAAK8gI,iCAKtB,kBAAC,IAAD,CACEx8H,MAAO,kBAAC,QAAD,sCACP28H,UAAW,CACT,kBAAC,QAAD,oIAKFt1H,KAAM3L,KAAKiI,MAAMy4H,6BACjBx7H,QAASA,EACT+X,SAAUjd,KAAK2gI,uBACfpxB,WAAYvvG,KAAK+gI,0BACjBtzE,QAAS,kBAAM,EAAKplD,SAAS,CAAEq4H,8BAA8B,QA1D1D,0DAAgClwB,EAAhC,eAxGb,GAAmD9yG,IAAMkuB,WAyK5CslF,EAAsC,SACjDxxG,GADiD,OAE9C,kBAAC0sH,EAAkC1sH,K,6KC5KzB,SAASwhI,EAAT,GAQJ,IAPTv1H,EAOQ,EAPRA,KACAsR,EAMQ,EANRA,SACAsyF,EAKQ,EALRA,WACA9hD,EAIQ,EAJRA,QACAvoD,EAGQ,EAHRA,QACAZ,EAEQ,EAFRA,MACA28H,EACQ,EADRA,UAEME,EAAoB5xB,GAAc,GADhC,EAE4C7xG,WAClDyjI,GAHM,mBAEDC,EAFC,KAEmBC,EAFnB,KAKF1+H,EAAUjF,eACd,WACO0jI,GAKLnkH,EAH+C,CAC7CsyF,WAAY6xB,MAIhB,CAACnkH,EAAUmkH,IAGP/lF,EAAU,CACd,gBAAC,IAAD,CACE5yB,IAAI,SACJpnB,MAAO,gBAAC,QAAD,eACP6L,SAAS,EACTvK,QAAS8qD,IAEX,gBAAC,IAAD,CACEhlC,IAAI,SACJpnB,MAAO,gBAAC,QAAD,eACP6L,SAAO,EACPouC,iBAAe,EACf34C,QAASA,EACT3B,UAAWogI,KAITE,EAAc1iI,iBAAO,EAAGsG,EAAQq4C,mBAAmB,SAAAt+C,GACvD,OAAOiG,EAAQs4C,YAAYv+C,GAAGywB,aAGhC,OACE,gBAAC,IAAD,CACE2rB,QAASA,EACT1vC,KAAMA,EACNrH,MAAOA,EACPsZ,eAAgB6vC,EAChBlS,mBAAmB,EACnB/sC,SAAS,KACT6X,QAAS1jB,GAET,gBAAC,IAAD,KACGs+H,GACCA,EAAUh4H,KAAI,SAAAs4H,GAAQ,OACpB,gBAAC,IAAD,KACE,gBAAC,IAAD,KAAiBA,OAGvB,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,gBAAC,QAAD,uCAGJ,gBAAC,IAAD,CACEr1H,aAAW,mBACX5K,KAAK,oBACLZ,MAAO0gI,EACPhhI,SAAU,SAAAQ,GAAK,OAAIygI,EAAsBzgI,EAAMC,OAAOH,SAErD4gI,EAAYr4H,KAAI,SAAA3H,GAAI,OACnB,gBAAC,IAAD,CACEmnB,IAAKnnB,EACLZ,MAAOY,EACP4Q,QAAS,gBAAC,IAAD,CAAOnU,MAAM,YACtBsD,MAAOC,Y,4NCpFfoC,EAAS,CACb4K,UAAW,CACT9P,QAAS,OACT2E,KAAM,IAQG6oH,EAAb,4MAKE/jH,MAAQ,CACNy4H,8BAA8B,GANlC,EA0FEC,uBAAyB,SAACC,GACxB,IAAMlxB,EAAiB,EAAKE,oBACvBF,IAELA,EAAemxB,oBAAoBD,EAAcrxB,YACjD,EAAKlnG,SACH,CACEq4H,8BAA8B,IAEhC,kBAAM,EAAKh3C,qBAnGjB,EAuGEo3C,6BAA+B,WAC7B,EAAKz4H,SAAS,CACZq4H,8BAA8B,KAzGpC,EA6GE9sB,eAAiB,WACf,IAAMlgF,EAAS,EAAKk8E,oBACdnrD,EAAS,EAAKA,OAEhBA,GAAU/wB,GACZxgB,YACEwgB,EAAO8tG,8BACP/8E,EAAOg9E,+BApHf,2DAUI,OAAOzhI,KAAKN,MAAMwF,UAVtB,4CAawBg0B,GAKpB,SAAKl5B,KAAKN,MAAM+kF,WAAavrD,EAAUurD,YAlB3C,0CA0BI,GAAIzkF,KAAKN,MAAM+kF,SAAU,CAAC,IAChB+rB,EAAoBxwG,KAAKN,MAAzB8wG,gBACF98E,EAAS1zB,KAAKyvG,YACpBzvG,KAAKN,MAAMkvG,mBACTl7E,EAASA,EAAOhE,UAAY,KAC5B8gF,MA/BR,yCAoCqBp4C,GACjB,IAAKA,EAAUqsB,UAAYzkF,KAAKN,MAAM+kF,SAAU,CAAC,IACvC+rB,EAAoBxwG,KAAKN,MAAzB8wG,gBACF98E,EAAS1zB,KAAKyvG,YACpBzvG,KAAKN,MAAMkvG,mBACTl7E,EAASA,EAAOhE,UAAY,KAC5B8gF,MA1CR,sCAgDQxwG,KAAKykD,QAAQzkD,KAAKykD,OAAOilC,kBAhDjC,uFAuD0C,IAAD,EACA1pF,KAAKN,MAAlCwF,EAD6B,EAC7BA,QAASsrG,EADoB,EACpBA,gBACjB,OAAKtrG,GAAYsrG,GAEZtrG,EAAQyqG,uBAAuBa,GAG7BtrG,EAAQ0qG,kBAAkBY,GALQ,OAzD7C,kCAiE0B,IACdtrG,EAAYlF,KAAKN,MAAjBwF,QACR,IAAKA,EAAS,OAAO,KAErB,IAAMqqG,EAAavvG,KAAK+gI,0BACxB,OAAKxxB,EAEErqG,EAAQuqG,UAAUF,QAFzB,IAtEJ,gDA2EsC,IAC1BrqG,EAAYlF,KAAKN,MAAjBwF,QACR,IAAKA,EAAS,OAAO,KAErB,IAAMwqG,EAAiB1vG,KAAK4vG,oBAC5B,IAAKF,EAAgB,OAAO,KAE5B,IAAMH,EAAaG,EAAesxB,sBAClC,OAAK97H,EAAQsqG,eAAeD,GAIrBA,EAHE,OApFb,+BAyHY,IAAD,SACwCvvG,KAAKN,MAA5CwF,EADD,EACCA,QAASsrG,EADV,EACUA,gBAAiB/rB,EAD3B,EAC2BA,SAC5BirB,EAAiB1vG,KAAK4vG,oBACtBl8E,EAAS1zB,KAAKyvG,YAEpB,OAAKC,GAAmBxqG,EAMtB,uBAAKrH,MAAO6F,EAAO4K,WAChBolB,GACC,gBAAC,IAAD,CACEs7D,WAAYhvF,KAAKN,MAAMsvF,WACvB51D,gBAAiBp5B,KAAKN,MAAM05B,gBAC5BnC,iBAAkBj3B,KAAKN,MAAMu3B,iBAC7B4C,wBAAyB75B,KAAKN,MAAMm6B,wBACpC0L,eAAgBvlC,KAAKN,MAAM6lC,eAC3ByV,4BAA6Bh7C,KAAKN,MAAMs7C,4BACxCr9C,IAAK,SAAA8mD,GAAM,OAAK,EAAKA,OAASA,GAC9Bv/C,QAASA,EACTwuB,OAAQA,EACRguG,iBAAkBhyB,EAAeiyB,sBACjCC,kCAAmC,kBACjCl/B,YACErwF,YACEq9F,EAAe8xB,iCAIrBlmB,aAAct7G,KAAKN,MAAM47G,aACzBmO,mBAAoBzpH,KAAK8gI,6BACzBr8C,SAAUA,KAGZ/wD,GACA,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,gBAAC,QAAD,qFAKF,gBAAC,IAAD,CAAM9vB,eAAe,UACnB,gBAAC,IAAD,CACEvC,MAAO,gBAAC,QAAD,yBACP6L,SAAO,EACPvK,QAAS3C,KAAK8gI,iCAKtB,gBAAC,IAAD,CACEx8H,MAAO,gBAAC,QAAD,sCACP28H,UAAW,CACT,gBAAC,QAAD,yIAIA,gBAAC,QAAD,+QAOFt1H,KAAM3L,KAAKiI,MAAMy4H,6BACjBx7H,QAASA,EACTqqG,WAAYvvG,KAAK+gI,0BACjB9jH,SAAUjd,KAAK2gI,uBACflzE,QAAS,kBAAM,EAAKplD,SAAS,CAAEq4H,8BAA8B,QAhE1D,wDAAgClwB,EAAhC,eAhIb,GAAmD9yG,aAuMtC0zG,EAAsC,SACjD1xG,GADiD,OAE9C,gBAACssH,EAAkCtsH,K,qhBC5JlCyS,EAAkBC,EAAOD,GAIzBzO,EAAS,CACb4K,UAAW,CACT9P,QAAS,OACT2E,KAAM,EACNF,SAAU,WACVspD,SAAU,WAIRs1E,GAA2B,CAC/BryF,UAAW,MACXkU,MAAO,aACPF,gBAAiB,GACjBC,OAAQ,CACNjU,UAAW,MACXkU,MAAO,mBACPD,OAAQ,eACRD,gBAAiB,KAIfs+E,GAAsC,CAC1CtyF,UAAW,MACXkU,MAAO,mBACPD,OAAQ,eACRD,gBAAiB,IAwDEu+E,G,kDAcnB,WAAYriI,GAAe,IAAD,8BACxB,cAAMA,IA8FRsiI,gBAAkB,WACX,EAAKC,eACL,EAAKA,aAAa59E,WAAW,eAAgB,MAAO,GAAI,WAC3D,EAAKh8C,SAAS,CACZ65H,wBAAwB,MAnGJ,EAwG1BC,eAAiB,WACV,EAAKF,eACL,EAAKA,aAAa59E,WAAW,aAAc,QAAS,GAAI,WAC3D,EAAKh8C,SAAS,CACZ+5H,uBAAuB,MA5GH,EAiH1BC,qBAAuB,WAChB,EAAKJ,cACV,EAAKA,aAAa59E,WAAW,qBAAsB,MAAO,GAAI,WAnHtC,EAsH1Bi+E,oBAAsB,WACf,EAAKL,eACL,EAAKA,aAAa59E,WAAW,iBAAkB,MAAO,GAAI,QAC7D,EAAKh8C,SAAS,CACZk6H,sBAAsB,MA1HF,EA+H1BC,iBAAmB,WACZ,EAAKP,eACL,EAAKA,aAAa59E,WAAW,cAAe,MAAO,GAAI,QAC1D,EAAKh8C,SAAS,CACZo6H,mBAAmB,MAnIC,EAwI1BC,iBAAmB,WACjB,EAAKr6H,SAAS,CACZqwC,wBAAwB,2BACnB,EAAKzwC,MAAMywC,yBADO,IAErBoqD,YAAa,EAAK76F,MAAMywC,wBAAwBoqD,gBA5I5B,EAiJ1B6/B,WAAa,WACX,EAAKt6H,SAAS,CACZqwC,wBAAwB,2BACnB,EAAKzwC,MAAMywC,yBADO,IAErBgsB,MAAO,EAAKz8D,MAAMywC,wBAAwBgsB,KAC1Cm+B,MAAO,EAAK56F,MAAMywC,wBAAwBgsB,UAtJtB,EA2J1Bk+D,cAAgB,WAA2B,IAA1Bj3H,IAAyB,yDACxC,EAAKtD,SAAS,CAAEw6H,cAAel3H,KA5JP,EA+J1Bm3H,oBAAsB,WAA2B,IAA1Bn3H,IAAyB,yDAC9C,EAAKtD,SAAS,CAAE06H,0BAA2Bp3H,KAhKnB,EAmK1Bq3H,iBAAmB,WACjB,GAAK,EAAKC,mBAAmBC,uBAA7B,CAGA,IAAMC,EAA6B,EAAKF,mBACrC11D,uBAAuB,GACvBS,gBACH,EAAKo1D,iBAAiBD,KA1KE,EA6K1BE,iBAAmB,SAAC/vC,GAClB,EAAKjrF,SAAS,CAAEi7H,YAAahwC,EAAOiwC,sBAAuB,aA9KnC,EAiL1BC,UAAY,SAAClwC,GACX,EAAKjrF,SAAS,CAAEi7H,YAAahwC,EAAOiwC,sBAAuB,gBAlLnC,EAqL1BE,sBAAwB,SAAC9vG,GACvB,EAAKtrB,SAAS,CAAEq7H,wBAAyB/vG,KAtLjB,EAyL1BgwG,oBAAsB,WAA2B,IAA1Bh4H,IAAyB,yDAC9C,EAAKtD,SAAS,CAAEu7H,0BAA2Bj4H,KA1LnB,EA6L1Bk4H,WAAa,SAACC,EAAyB/jE,GAAkC,IAC/D76D,EAAY,EAAKxF,MAAjBwF,QACJ4+H,EACF,EAAKz7H,SAAS,CACZ07H,wBAAyB,CACvBrxH,OAAQoxH,EACR1xH,OAAQlN,EAAQklB,eAAe05G,EAAap0G,YAE9Cs0G,uBAAwBjkE,GAAc,eAGxC,EAAK13D,SAAS,CACZ07H,wBAAyB,KACzBC,uBAAwB,gBA1MJ,EA+M1BZ,iBAAmB,SAACj5G,EAAoB41C,GAAkC,IAAD,EAC3C,EAAKrgE,MAAzBwF,EAD+D,EAC/DA,QAASwuB,EADsD,EACtDA,OACbA,EAAOtJ,eAAeD,GACxB,EAAK05G,WAAWnwG,EAAOrJ,UAAUF,GAAa41C,GACvC76D,EAAQklB,eAAeD,IAC9B,EAAK05G,WAAW3+H,EAAQmlB,UAAUF,GAAa41C,IApNzB,EAuN1BkkE,UAAY,SAAC70G,GACX,EAAK/mB,SAAS,CAAE67H,YAAa90G,KAxNL,EA2N1B+0G,2BAA6B,SAC3BzrF,GAEA,EAAKrwC,SAAS,CACZqwC,6BA/NsB,EAmO1B6sC,KAAO,WACL,EAAK09C,mBAAmB5yE,iBACxB,EAAKhoD,SACH,CACEw9E,QAASN,YAAK,EAAKt9E,MAAM49E,QAAS,EAAKnmF,MAAMgiI,oBAE/C,WAGM,EAAKj9E,QAAQ,EAAKA,OAAO2/E,eAC7B,EAAK16C,oBA7Oe,EAkP1BjE,KAAO,WACL,EAAKw9C,mBAAmB5yE,iBACxB,EAAKhoD,SACH,CACEw9E,QAASJ,YAAK,EAAKx9E,MAAM49E,QAAS,EAAKnmF,MAAMgiI,oBAE/C,WAGM,EAAKj9E,QAAQ,EAAKA,OAAO2/E,eAC7B,EAAK16C,oBA5Pe,EAiQ1B26C,kBAAoB,SAACC,GACdA,EAKH,EAAKj8H,SAAS,CACZk8H,oBAAqB,CAACD,KALxB,EAAKj8H,SAAS,CACZk8H,oBAAqB,MApQD,EA6Q1BC,uCAAyC,WAClC,EAAK//E,SAKV,EAAKp8C,SAAS,CACZo8H,kCAAmC,EAAKhgF,OAAOigF,kCAG7C,EAAKC,cACP,EAAKA,aAAat8H,SAAS,CAAEu8H,qBAAqB,MAxR5B,EA2R1BC,0BAA4B,WAC1B,GAAK,EAAK58H,MAAMs8H,oBAAoBl7H,QAAW,EAAKo7C,OAApD,CAIA,IAAMqgF,EAAiB,EAAK78H,MAAMs8H,oBAAoB,GAChD9rH,EAAiB,EAAKgsC,OAAOigF,gCACnC,EAAKK,aAAatsH,EAAgBqsH,GAClC,EAAKz8H,SAAS,CACZk8H,oBAAqB,CAACO,OApSA,EAwS1BE,uBAAyB,SAAC76G,GAAwB,IACxCs6B,EADuC,eACvCA,OACJA,GACF,EAAKsgF,aACH,CAACtgF,EAAOigB,KAAKugE,aAAatsF,MAAO8L,EAAOigB,KAAKugE,aAAarsF,OAC1DzuB,IA7SoB,EAiT1B46G,aAAe,SAAC/iC,EAAuB73E,GACrC,GAAKA,GAAe,EAAKs6B,OAAzB,CAEA,IAAM5f,EAAY,EAAK4f,OAAOygF,aAAaljC,EAAK,CAAC73E,IACjD,EAAKg7G,kBAAkBtgG,KArTC,EAwT1BsgG,kBAAoB,SAACtgG,GACnBA,EAAU7+B,SAAQ,SAAA2tB,GAChB,IAAMyxG,EAAiBC,YACrB1xG,EACA,EAAKj0B,MAAMg0B,OACX,EAAKh0B,MAAMwF,SAETkgI,GACF,EAAK/8H,SAAS,CACZi9H,sBAAuBF,EACvBG,2BAA2B,OAKjC,EAAKl9H,SACH,CACEw9E,QAASqG,YAAc,EAAKjkF,MAAM49E,QAAS,EAAKnmF,MAAMgiI,oBAExD,kBAAM,EAAKh4C,oBA3UW,EA+U1B87C,qBAAuB,SAAC3gG,GACtB,EAAKx8B,SAAS,CACZk8H,oBAAqBzpC,IACnBj2D,EAAU57B,KAAI,SAAA0qB,GAAQ,OAAIA,EAASq6C,sBAGvC,EAAKy3D,8BACL,EAAK/7C,iBAtVmB,EAyV1Bg8C,yBAA2B,SAAC/xG,GAC1B,EAAKyvG,iBAAiBzvG,EAASq6C,kBA1VP,EA6V1B23D,kBAAoB,SAAC9gG,GACnB,EAAKx8B,SACH,CACEw9E,QAASqG,YAAc,EAAKjkF,MAAM49E,QAAS,EAAKnmF,MAAMgiI,oBAExD,kBAAM,EAAK+D,kCAlWW,EAsW1BG,oBAAsB,SAAC/gG,GACrB,EAAKx8B,SACH,CACEw9E,QAASqG,YAAc,EAAKjkF,MAAM49E,QAAS,EAAKnmF,MAAMgiI,oBAExD,kBAAM,EAAK+D,kCA3WW,EA+W1BI,oBAAsB,SAAChhG,GACrB,EAAKx8B,SACH,CACEw9E,QAASqG,YAAc,EAAKjkF,MAAM49E,QAAS,EAAKnmF,MAAMgiI,oBAExD,kBAAM,EAAK+D,kCApXW,EAwX1B//F,qBAAuB,SAACb,GACtB,EAAKW,eAzXmB,EA6X1BsgG,mBAAqB,SACnBjhG,EACA2kD,GAEA,EAAKy5C,mBAAmB8C,gBAAgBlhG,EAAW2kD,GAE/C,EAAK/kC,QAAQ,EAAKA,OAAOuhF,aAAanhG,GAC1C,EAAKohG,2BACL,EAAKR,8BACL,EAAK/7C,iBAtYmB,EA6Y1Bw8C,yBAA2B,SAACC,GAA2B,IAC7C1B,EAAsC,EAAKx8H,MAA3Cw8H,kCACHA,IAIL,EAAKM,aAAaN,EAAmC0B,GACrD,EAAK99H,SAAS,CAAEo8H,kCAAmC,SApZ3B,EAuZ1B2B,iBAAmB,SAAC1zH,GAClB,IAAM0yH,EAAiBiB,YACrB3zH,EACA,EAAKhT,MAAMg0B,OACX,EAAKh0B,MAAMwF,SAETkgI,GACF,EAAK/8H,SAAS,CACZi9H,sBAAuBF,EACvBG,2BAA2B,IAI/B,EAAKW,yBAAyBxzH,EAAOgd,YApab,EAua1B42G,eAAiB,SAACr4D,EAAmBs4D,GACnC,EAAKl+H,SAAS,CACZm+H,uBAAuB,EACvBC,aAAcx4D,EACdy4D,yBAA0B,SAAC7I,EAAU8I,GACnC,EAAKt+H,SACH,CACEm+H,uBAAuB,IAEzB,WACM3I,IACe,OAAb8I,GACF,EAAK1D,mBAAmB2D,yBAAyB34D,GACjD,EAAKvuE,MAAMgiI,iBAAiBmF,0BAC1B54D,IAIF,EAAKvuE,MAAMgiI,iBAAiBoF,qBAC1B74D,EACA04D,IAKNJ,EAAK1I,GAGD,EAAKp5E,QAAQ,EAAKA,OAAO2/E,eAE7B,EAAK2C,wBAGL,EAAKtB,8BACL,EAAK/7C,uBAzcW,EAgd1Bs9C,eAAiB,SACf1uB,EACA39C,EACA4rE,GAEA,EAAK7mI,MAAMgiI,iBAAiBoF,qBAAqBxuB,EAAS39C,GAC1D4rE,GAAK,IAtdmB,EAyd1BU,gBAAkB,SAACzmI,GAAD,OAAoB,SACpC8uB,EACAi3G,GACI,IACI7zH,EAAmB4c,EAAnB5c,OAAQN,EAAWkd,EAAXld,OADb,EAEyB,EAAK1S,MAAzBwF,EAFL,EAEKA,QAASwuB,EAFd,EAEcA,OAEXwzG,EAASn8H,IAAOo8H,sBACpB3mI,EAAKiB,EACH,6HAIJ,GAAe,WAAXylI,EAAJ,CACA,IAAME,EAAoC,QAAXF,EAK/B,EAAKjE,mBAAmBoE,0BAA0B30H,EAAOgd,WAErDtd,EACFD,EAAG2rD,uBAAuBwpE,2BACxBpiI,EACAwN,EAAOgd,WACa,EACpB03G,GAGFj1H,EAAG2rD,uBAAuBypE,6BACxBriI,EACAwuB,EACAhhB,EAAOgd,WACa,EACpB03G,GAIJb,GAAK,GAGL,EAAKd,8BACL,EAAK/7C,mBAngBmB,EAsgB1B89C,4BAA8B,SAAC7sE,GAAqB,IAAD,EACrB,EAAKj7D,MAAzBwF,EADyC,EACzCA,QAASwuB,EADgC,EAChCA,OAEjB,OACEA,EAAOtJ,eAAeuwC,IACtBz1D,EAAQklB,eAAeuwC,IACvBjnC,EAAOvB,kBAAkBoS,IAAIo2B,IAC7Bz1D,EAAQitB,kBAAkBoS,IAAIo2B,IAE9B49C,YAAe,yDAA0D,CACvEC,iBAAiB,KAEZ,KACGrmG,EAAG0mG,QAAQC,aAAan+C,KAClC49C,YACE,oIACA,CAAEC,iBAAiB,KAEd,IAxhBe,EA8hB1BivB,sBAAwB,SAAC9sE,GAAqB,IACpCopE,EAA4B,EAAK97H,MAAjC87H,wBAEJA,GACF,EAAK2D,gBAAgB3D,EAAyBppE,GAAS,gBAliBjC,EAsiB1B+sE,gBAAkB,SAChBp4G,EACAqrC,EACA4rE,GACI,IACI7zH,EAAmB4c,EAAnB5c,OAAQN,EAAWkd,EAAXld,OADb,EAEyB,EAAK1S,MAAzBwF,EAFL,EAEKA,QAASwuB,EAFd,EAEcA,OAKbhhB,EAAOgd,YAAcirC,IACnBvoD,EACFD,EAAG2rD,uBAAuB6pE,2BACxBziI,EACAwN,EAAOgd,UACPirC,GACoB,GAGtBxoD,EAAG2rD,uBAAuB8pE,6BACxB1iI,EACAwuB,EACAhhB,EAAOgd,UACPirC,GACoB,IAK1BjoD,EAAO+nB,QAAQkgC,GACf4rE,GAAK,IArkBmB,EAwkB1BsB,eAAiB,SACf14G,EACAo3G,GACI,IACIn3G,EAAkBD,EAAlBC,MAAOhd,EAAW+c,EAAX/c,OADZ,EAEyB,EAAK1S,MAAzBwF,EAFL,EAEKA,QAASwuB,EAFd,EAEcA,OAEXwzG,EAASn8H,IAAOkZ,kBACpB,0GAGE7R,EACFD,EAAG2rD,uBAAuBwpE,2BACxBpiI,EACAkqB,EAAMM,WACc,IAClBw3G,GAGJ/0H,EAAG2rD,uBAAuBypE,6BACxBriI,EACAwuB,EACAtE,EAAMM,WACc,IAClBw3G,GAINX,GAAK,IApmBmB,EAumB1BuB,eAAiB,SACf34G,EACAwrC,EACA4rE,GACI,IACIn3G,EAAkBD,EAAlBC,MAAOhd,EAAW+c,EAAX/c,OADZ,EAEyB,EAAK1S,MAAzBwF,EAFL,EAEKA,QAASwuB,EAFd,EAEcA,OAKbtE,EAAMM,YAAcirC,IAClBvoD,EACFD,EAAG2rD,uBAAuB6pE,2BACxBziI,EACAkqB,EAAMM,UACNirC,GACoB,GAGtBxoD,EAAG2rD,uBAAuB8pE,6BACxB1iI,EACAwuB,EACAtE,EAAMM,UACNirC,GACoB,IAK1B4rE,GAAK,IAroBmB,EAwoB1BttD,gBAAkB,WACU,EAAKgqD,mBAAmB11D,uBAChCvnE,SAAQ,SAAA2tB,GACpBA,EAASo0G,YACb,EAAKroI,MAAMgiI,iBAAiBsG,eAAer0G,MAG7C,EAAKsvG,mBAAmB5yE,iBACpB,EAAK5L,QAAQ,EAAKA,OAAOwjF,2BAE7B,EAAK5/H,SACH,CACEk8H,oBAAqB,GACrB1+C,QAASqG,YAAc,EAAKjkF,MAAM49E,QAAS,EAAKnmF,MAAMgiI,oBAExD,WACE,EAAKh4C,gBACL,EAAK+7C,kCAzpBe,EA8pB1ByC,WAAa,WACP,EAAKzjF,QAAQ,EAAKA,OAAOyjF,cA/pBL,EAkqB1BC,cAAgB,SAAChvF,GACX,EAAKsL,QAAQ,EAAKA,OAAO0jF,cAAchvF,IAnqBnB,EAsqB1BivF,OAAS,WACH,EAAK3jF,QAAQ,EAAKA,OAAOgP,OAAO,KAvqBZ,EA0qB1B40E,QAAU,WACJ,EAAK5jF,QAAQ,EAAKA,OAAOgP,QAAQ,KA3qBb,EA8qB1B60E,eAAiB,SACfxvF,EACAC,GAEI,IADJwvF,EACG,wDACC,EAAKjqH,aACP,EAAKA,YAAY3S,KAAKmtC,EAAGC,EAAG,CAC1BwvF,0CAA2CA,KArrBvB,EAyrB1BC,iBAAmB,SAAChoI,EAAgBkzB,EAAkB7rB,GACpD,IAAI4gI,EAAmB,GAwGvB,OAnGEA,EAHA5gI,EAAQ0gI,yCACkC,IAA1C,EAAKtgI,MAAMs8H,oBAAoBl7H,OAEf,sBACXo/H,GADW,CAEd,CACEpnI,MAAOb,EAAKiB,EAAE,cACd24B,MAAO,kBAAM,EAAKm+C,SAClB/5C,QAAS4F,IAAUG,IAryBI,aAsyBvBngC,YAAa,eAEf,CAAE3D,KAAM,aACR,CACEY,MAAOb,EAAKiB,EAAE,sBACd24B,MAAO,kBAAM,EAAKoqG,6CAIN,sBACXiE,GADW,CAEd,CACEpnI,MAAOb,EAAKiB,EAAE,aACd24B,MAAO,kBAAM,EAAK89C,iBAClB15C,QAAS,EAAKykG,mBAAmBC,uBACjC9+H,YAAa,eAEf,CACE/C,MAAOb,EAAKiB,EAAE,YACd24B,MAAO,kBAAM,EAAK4qD,gBAClBxmD,QAAS,EAAKykG,mBAAmBC,uBACjC9+H,YAAa,eAEf,CACE/C,MAAOb,EAAKiB,EAAE,cACd24B,MAAO,kBAAM,EAAKm+C,SAClB/5C,QAAS4F,IAAUG,IAh0BI,aAi0BvBngC,YAAa,eAEf,CACE/C,MAAOb,EAAKiB,EAAE,kBACd24B,MAAO,WACL,EAAKsuG,uBAGT,CAAEjoI,KAAM,aACR,CACEY,MAAOb,EAAKiB,EAAE,eACd24B,MAAO,kBAAM,EAAK6+C,mBAClBz6C,QAAS,EAAKykG,mBAAmBC,uBACjC9+H,YAAa,UAEf,CAAE3D,KAAM,aACR,CACEY,MAAOb,EAAKiB,EACV,gCAAgBknI,YACd,EAAK1gI,MAAMs8H,oBAAoB,GAC/B,OAGJnqG,MAAO,kBACL,EAAKgpG,iBACH,EAAKn7H,MAAMs8H,oBAAoB,GAC/B,gBAGN,CACEljI,MAAOb,EAAKiB,EAAE,8BACd24B,MAAO,kBACL,EAAKgpG,iBACH,EAAKn7H,MAAMs8H,oBAAoB,GAC/B,eAGN,CACEljI,MAAOb,EAAKiB,EAAE,uBACd24B,MAAO,kBACL,EAAKgpG,iBACH,EAAKn7H,MAAMs8H,oBAAoB,GAC/B,eAGN,CACEljI,MAAOb,EAAKiB,EAAE,qBACd24B,MAAO,kBACL,EAAKgpG,iBAAiB,EAAKn7H,MAAMs8H,oBAAoB,GAAI,eAKjEkE,EAAgB,sBACXA,GADW,CAEd,CAAEhoI,KAAM,aACR,CACEY,MAAOb,EAAKiB,EAAE,0BACd24B,MAAO,kBAAM,EAAK16B,MAAM47G,aAAa5nF,EAAOhE,aAE9C,CACEruB,MAAOb,EAAKiB,EAAE,8BACd24B,MAAO,kBAAM,EAAK0oG,qBAAoB,QA9xBlB,EAqyB1B5qD,cAAgB,WAA0D,IAAD,yDAAP,GAA/C0wD,EAAsD,EAAtDA,sBACXC,EAAsB,EAAK5F,mBAC9B11D,uBACAtkE,KAAI,SAAA0qB,GAAQ,OAAIthB,YAAoBshB,MAEvC,GAAI,EAAK8wB,OAAQ,CACf,IAAMxhD,EAAW2lI,EACb,EAAKnkF,OAAOigF,gCACZ,EAAKjgF,OAAOqkF,qCAChB1kG,IAAUqS,IA/4BiB,YA+4Ba,CACtCqC,EAAG71C,EAAS,GACZ81C,EAAG91C,EAAS,GACZ4hC,UAAWgkG,MAjzBS,EAszB1B7jD,aAAe,WAAwC,IAAvCn9E,EAAsC,uDAAP,GAC7C,EAAKqwE,cAAcrwE,GACnB,EAAKoxE,mBAxzBmB,EA2zB1ByvD,mBAAqB,WACnB,IAAMG,EAAsB,EAAK5F,mBAC9B11D,uBACAtkE,KAAI,SAAA0qB,GAAQ,OAAIthB,YAAoBshB,MAEvC,GAAK,EAAK8wB,OAAV,CAEA,IAAMskF,EAAeF,EAAoB5/H,KAAI,SAAA+/H,GAC3C,IAAMr1G,EAAW,IAAIxhB,EAAG82H,gBACxB/1H,YAAwBygB,EAAUq1G,GAClCr1G,EAAS4c,KAAK5c,EAAS6c,OAAS,EAAI04F,KACpCv1G,EAAS8c,KAAK9c,EAAS+c,OAAS,EAAIw4F,KACpC,IAAMlf,EAAc,EAAKtqH,MAAMgiI,iBAC5ByH,sBAAsBx1G,GACtBy1G,sBAEH,OADAz1G,EAAS5gB,SACFi3G,KAET,EAAKmb,kBAAkB4D,GACvB,EAAK9F,mBAAmB5yE,iBACxB,EAAK4yE,mBAAmB8C,gBAAgBgD,GAAc,KA/0B9B,EAk1B1BxwD,MAAQ,WAA0D,IAAD,yDAAP,GAA/CqwD,EAAsD,EAAtDA,sBACT,GAAK,EAAKnkF,OAAV,CAEA,IAAMxhD,EAAW2lI,EACb,EAAKnkF,OAAOigF,gCACZ,EAAKjgF,OAAOqkF,qCAEVrwD,EAAmBr0C,IAAU1pB,IA17BN,aA27BvB2uH,EAAmBxlG,IAAcytF,qBACrC74C,EACA,aAEI3/B,EAAIjV,IAAcmtF,sBAAsBv4C,EAAkB,KAC1D1/B,EAAIlV,IAAcmtF,sBAAsBv4C,EAAkB,KAChE,GAAU,OAAN3/B,GAAoB,OAANC,GAAmC,OAArBswF,EAAhC,CAEA,IAAMN,EAAeM,EAAiBpgI,KAAI,SAAA+/H,GACxC,IAAMr1G,EAAW,IAAIxhB,EAAG82H,gBACxB/1H,YAAwBygB,EAAUq1G,GAClCr1G,EAAS4c,KAAK5c,EAAS6c,OAASsI,EAAI71C,EAAS,IAC7C0wB,EAAS8c,KAAK9c,EAAS+c,OAASqI,EAAI91C,EAAS,IAC7C,IAAM+mH,EAAc,EAAKtqH,MAAMgiI,iBAC5ByH,sBAAsBx1G,GACtBy1G,sBAEH,OADAz1G,EAAS5gB,SACFi3G,KAET,EAAKmb,kBAAkB4D,GACvB,EAAK9F,mBAAmB5yE,iBACxB,EAAK4yE,mBAAmB8C,gBAAgBgD,GAAc,MA/2B9B,EAk3B1BO,0BAA4B,WAAO,IAAD,EACJ,EAAK5pI,MAAzBg0B,EADwB,EACxBA,OAAQxuB,EADgB,EAChBA,QAChBwuB,EAAO41G,0BAA0BpkI,IAp3BT,EAu3B1BqkI,uBAAyB,WACnB,EAAK5E,cAAc,EAAKA,aAAa6E,mBAx3BjB,EA23B1BzC,sBAAwB,WAClB,EAAK0C,aAAa,EAAKA,YAAYjkG,eA53Bf,EA+3B1BygG,yBAA2B,WACrB,EAAKyD,gBAAgB,EAAKA,eAAelkG,eAh4BrB,EAm4B1BigG,4BAA8B,WACxB,EAAKkE,mBAAmB,EAAKA,kBAAkBnkG,eAp4B3B,EAu4B1BokG,mBAAqB,SAACl3H,GAAsB,IAClCxN,EAAY,EAAKxF,MAAjBwF,QAEF2kI,EAAiB,IAAI13H,EAAG23H,qBAC9Bp3H,EAAOgqB,gBAAgBmtG,GACvB,IAAME,EAAsBF,EACzBG,eACA7/F,oBACA5Z,YACHs5G,EAAe92H,SAEf+gB,IAAoBm2G,aAClB/kI,EACA6kI,GACA,eACA,WACM,EAAKtlF,QACP,EAAKA,OAAOylF,0BAA0Bx3H,EAAOgd,eAx5B3B,EA65B1BskG,kBAAoB,WAAsB,IAAD,EACX,EAAKt0H,MAAzBwF,EAD+B,EAC/BA,QAASwuB,EADsB,EACtBA,OAEXugG,EAAuB,IAAIjtF,IAKjC,OAJAzX,YAAiBrqB,EAASwuB,GAAQ3D,eAAe/pB,SAAQ,YAAiB,IAAd0M,EAAa,EAAbA,OAC1D6nC,YAAkB7nC,EAAO0e,WAAWprB,SAAQ,SAAAic,GAAG,OAAIgyG,EAAQ/yG,IAAIe,SAG1DF,MAAMC,KAAKiyG,IAr6BM,EAw6B1BC,6BAA+B,SAAC1zH,GAAgC,IACtD4yH,EAAuB,EAAKnrH,MAA5BmrH,mBAER,OAAOr5E,YAAsB,CAC3BC,WAAYx5C,EAAKiB,EAAE,+CACnBw4C,WAAY,EAAK+5E,kBACjB9iG,aAAckiG,EACdhzH,SAAU,SAAAgzH,GACR,EAAK/qH,SAAS,CAAE+qH,2BA76BpB,EAAK6P,mBAAqB,IAAI31D,IAC9B,EAAKrlE,MAAQ,CACX46H,eAAe,EACfE,2BAA2B,EAC3BoH,gBAAgB,EAChB3D,uBAAuB,EACvBE,yBAA0B,KAC1BD,aAAc,KACdnD,YAAa,KACbC,sBAAuB,aACvBQ,wBAAyB,KACzBC,uBAAwB,aACxBN,wBAAyB,KACzBa,oBAAqB,GACrBE,kCAAmC,KACnCP,YAAa,KAEbxrF,wBAAyBh5C,EAAMkiI,oCAC/B/7C,QAASC,YAAuBpmF,EAAMgiI,iBAAkB,CACtD17C,eAAgB,KAGlBk8C,wBAAwB,EACxB0B,2BAA2B,EAC3BxB,uBAAuB,EACvBK,mBAAmB,EACnBF,sBAAsB,EAEtBgD,2BAA2B,EAC3BD,sBAAuB,CACrBzhH,WAAY,0BACZpZ,QAAS,GACT6zC,mBAAoB,IAGtB80E,mBAAoB,IAtCE,E,+DA0CPh7D,EAAkB22B,GAC/B/uF,KAAKiI,MAAM49E,UAAYkJ,EAAUlJ,SAC/B7lF,KAAKN,MAAM6lC,gBACbvlC,KAAKN,MAAM6lC,eAAeI,0B,mDAI9B,OAAO3lC,KAAKiI,MAAMywC,0B,sCAGH,IAAD,OACd14C,KAAKN,MAAMsvF,WACT,gBAAC,IAAD,CACEi0C,mBAAoBjjI,KAAKijI,mBACzBjB,gBAAiBhiI,KAAKgiI,gBACtBK,qBAAsBriI,KAAKqiI,qBAC3BF,eAAgBniI,KAAKmiI,eACrBlpD,gBAAiBj5E,KAAKi5E,gBACtBqpD,oBAAqBtiI,KAAKsiI,oBAC1BE,iBAAkBxiI,KAAKwiI,iBACvBE,iBAAkB1iI,KAAK0iI,iBACvBC,WAAY3iI,KAAK2iI,WACjByH,YAAa,mBAAQ,EAAKniI,MAAMywC,wBAAwBgsB,MACxD2lE,kBAAmB,mBACf,EAAKpiI,MAAMywC,wBAAwBoqD,YAEvC8/B,cAAe5iI,KAAK4iI,cACpBuF,cAAenoI,KAAKmoI,cACpBD,WAAYloI,KAAKkoI,WACjBx/C,QAASA,YAAQ1oF,KAAKiI,MAAM49E,SAC5B8C,QAASA,YAAQ3oF,KAAKiI,MAAM49E,SAC5BN,KAAMvlF,KAAKulF,KACXE,KAAMzlF,KAAKylF,KACX2iD,OAAQpoI,KAAKooI,OACbC,QAASroI,KAAKqoI,QACd54C,eAAgBzvF,KAAK8iI,yB,gDAKD5pG,GAEtBl5B,KAAKN,MAAMg0B,SAAWwF,EAAUxF,QAChC1zB,KAAKN,MAAMgiI,mBAAqBxoG,EAAUwoG,kBAC1C1hI,KAAKN,MAAMwF,UAAYg0B,EAAUh0B,UAEjClF,KAAKijI,mBAAmB5yE,iBACxBrwD,KAAK4iI,eAAc,GACnB5iI,KAAKyjI,sBAAsB,MAC3BzjI,KAAK8iI,qBAAoB,M,+BA01BnB,IAAD,SASH9iI,KAAKN,MAPPwF,EAFK,EAELA,QACAwuB,EAHK,EAGLA,OACAguG,EAJK,EAILA,iBACAtoG,EALK,EAKLA,gBACAnC,EANK,EAMLA,iBACA4C,EAPK,EAOLA,wBACA4qD,EARK,EAQLA,SAEI6lD,EAAoBtqI,KAAKijI,mBAAmB11D,uBAE5ChpB,EAAU,CACdpI,WAAY,CACV17C,KAAM,YACN6D,MAAO,kBACP6gD,aAAc,kBACZ,gBAAC,OAAD,MACG,gBAAG3kD,EAAH,EAAGA,KAAH,OACC,gBAAC,IAAD,CACEA,KAAMA,EACN0E,QAASA,EACTwuB,OAAQA,EACRmR,UAAWylG,EACX7G,sBAAuB,EAAKA,sBAC5B8G,mBAAoB,EAAKnH,iBACzBj+F,oBAAqB,SAAAN,GAAS,OAC5B,EAAKohG,4BAEPtoI,IAAK,SAAA6sI,GAAgB,OAClB,EAAKb,kBAAoBa,GAE5BjlG,eAAgB,EAAK7lC,MAAM6lC,sBAMrC,cAAe,CACb9kC,KAAM,YACN6D,MAAO,cACP6gD,aAAc,kBACZ,gBAAC,IAAD,CACEjgD,QAASA,EACTk0B,gBAAiBA,EACjBS,wBAAyBA,EACzB5C,iBAAkBA,EAClBwzG,mBAAoB,EAAKpH,iBACzBqH,YAAa,EAAKlH,UAClBmH,cAAe,EAAKrE,eACpBsE,cAAe,EAAK5D,eACpB6D,gBAAiBn3G,EACjB6R,eAAgB,EAAK7lC,MAAM6lC,eAC3B5nC,IAAK,SAAAmtI,GAAU,OAAK,EAAKrB,YAAcqB,GACvC9vF,4BAA6B,EAAKt7C,MAAMs7C,gCAI9C,iBAAkB,CAChBv6C,KAAM,YACN6D,MAAO,sBACP6gD,aAAc,kBACZ,gBAAC,IAAD,CACEtgB,UAAW68F,EACX4I,kBAAmBA,EACnBS,kBAAmB,EAAKjF,mBACxBnoI,IAAK,SAAAqtI,GAAa,OAAK,EAAKtB,eAAiBsB,OAInD,mBAAoB,CAClBvqI,KAAM,UACNykD,YAAY,EACZC,aAAc,kBACZ,gBAAC,IAAD,CACEjgD,QAASA,EACTwuB,OAAQA,EACRguG,iBAAkBA,EAClBhpF,wBAAyB,EAAKzwC,MAAMywC,wBACpCuyF,gCAAiC,EAAK9G,2BACtClB,mBAAoB,EAAKA,mBACzB3mD,kBAAmB,EAAKrD,gBACxBiyD,iBAAkB,EAAK/F,kBACvBgG,oBAAqB,EAAK3F,qBAC1B4F,wBAAyB,EAAK1F,yBAC9B2F,iBAAkB,EAAK1F,kBACvB2F,mBAAoB,EAAK1F,oBACzB2F,mBAAoB,EAAK1F,oBACzBtB,oBAAqB,EAAKt8H,MAAMs8H,oBAChCt2H,cAAe,EAAKq6H,eACpB/yD,OAAQ,kBAAM,EAAK2C,cAAc,CAAE0wD,uBAAuB,KAC1D7jD,MAAO,kBAAM,EAAKC,aAAa,CAAE4jD,uBAAuB,KACxDvsD,QAAS,kBAAM,EAAK9D,MAAM,CAAEqwD,uBAAuB,KACnDtjD,OAAQ,EAAKC,KACbC,OAAQ,EAAKC,KACbG,UAAW,EAAKyiD,QAChB3iD,SAAU,EAAK0iD,OACfoD,iBAAkB,SAAA/mF,GAChB,EAAKA,OAASA,GAEhBgnF,gBAAiBhnD,MAIvB,eAAgB,CACdhkF,KAAM,YACN6D,MAAO,eACP0/C,gBAAiB,CACf,gBAAC,OAAD,CAAMv7B,IAAI,SACP,cAAGjoB,KAAH,OACC,gBAAC,IAAD,CACE4L,kBAAmB,SAAC5L,GAAD,OACjB,EAAK0zH,6BAA6B1zH,SAK1C,gBAAC,IAAD,CAAaioB,IAAI,WAEnB08B,aAAc,kBACZ,gBAAC,OAAD,MACG,gBAAG3kD,EAAH,EAAGA,KAAH,OACC,gBAAC,IAAD,CACE8yB,aAAc+5F,IAAwB/5F,aAAao4G,KACjDre,KAEFnoH,QAASA,EACTgV,iBAAkBwZ,EAClBA,OAAQA,EACRqyD,OAAQryD,EAAOq5F,YACf3zF,gBAAiBA,EACjBS,wBAAyBA,EACzB5C,iBAAkBA,EAClBstG,oBAAqB,EAAKt8H,MAAMs8H,oBAChCoH,aAAc,EAAKjsI,MAAMisI,cAAgB,EAAK9H,WAC9C+H,eAAgB,EAAK3E,gBAAgBzmI,GACrCqrI,gBAAiB,EAAKrE,4BACtBsE,gBAAiB,EAAK1F,iBACtB2F,iBAAkB,EAAK1H,kBACvB2H,eAAgB,EAAKtE,gBACrBuE,oBAAqB,EAAKjH,uBAC1BkH,eAAgB,kBAAM,EAAK5C,6BAC3BlW,mBAAoB,EAAKnrH,MAAMmrH,mBAC/B+Y,2BAA4B,SAAA/Y,GAAkB,OAC5C,EAAK/qH,SAAS,CACZ+qH,wBAGJgZ,iBAAkB,EAAKpY,kBACvBr2H,IAAK,SAAA0uI,GAAW,OAAK,EAAK1H,aAAe0H,GACzC9mG,eAAgB,EAAK7lC,MAAM6lC,eAC3ByV,4BACE,EAAKt7C,MAAMs7C,mCAOvB,qBAAsB,CACpBv6C,KAAM,YACN6D,MAAO,qBACP6gD,aAAc,kBACZ,gBAAC,IAAD,CACEo4E,mBAAoBr4H,EAAQitB,kBAC5BN,aAAc6B,EAAOvB,kBACrB6sG,YAAa,EAAKiF,UAClBrG,cAAe,EAAKiK,eACpBvJ,cAAe,EAAKwJ,eACpBzJ,eAAgB,EAAKmJ,4BACrBjiG,eAAgB,EAAK7lC,MAAM6lC,oBAKnC,OACE,uBAAK1nC,MAAO6F,EAAO4K,WACjB,gBAAC,IAAD,CACEpJ,QAASA,EACTwuB,OAAQA,EACRi4G,aAAc3rI,KAAKN,MAAMisI,cAAgB3rI,KAAK6jI,WAC9CjpF,sBAAuB,SAAAloC,GACrB,EAAKmxH,WAAWnxH,EAAQ,cAE1B45H,sBAAuBtsI,KAAK8iI,oBAC5ByJ,qBAAsBvsI,KAAK2jI,oBAC3B6I,kBAAmBxsI,KAAKikI,UACxBwG,mBAAoBzqI,KAAKqjI,iBACzBqH,YAAa1qI,KAAKwjI,YAEpB,gBAAC,IAAD,MACG,SAAArjF,GAAW,OACV,gBAAC,IAAmBrxC,SAApB,MACG,gBAAG29H,EAAH,EAAGA,2BAA4BC,EAA/B,EAA+BA,2BAA/B,OACC,gBAAC,IAAD,CACEnoF,QAASA,EACTC,0BAA2C,UAAhBrE,EAC3BiE,aACkB,UAAhBjE,EACIssF,EAA2B,uBAC3B3K,GACA2K,EAA2B,iBAC3B5K,GAEN98E,eAAgB,SAAAxpC,GAAI,OAClBmxH,EACkB,UAAhBvsF,EACI,qBACA,eACJ5kC,IAGJ5d,IAAK,SAAAskI,GAAY,OAAK,EAAKA,aAAeA,WAMnDjiI,KAAKiI,MAAM87H,yBACV,gBAAC,IAAD,CACEp4H,MAAI,EACJ+G,OAAQ1S,KAAKiI,MAAM87H,wBAAwBrxH,OAC3CqtD,WAAY//D,KAAKiI,MAAM+7H,uBACvB9+H,QAASA,EACTk0B,gBAAiBA,EACjBS,wBAAyBA,EACzB5C,iBAAkBA,EAClBgkB,0BAA2B,WAAO,IACxB8oF,EAA4B,EAAK97H,MAAjC87H,wBACR,OAAKA,EAEE/5F,IAA0BK,uBAC/BnlC,EAAQgrB,qBACRhrB,EACAwuB,EACAqwG,EAAwBrxH,QANW,IASvCioC,SAAU,WACJ,EAAK1yC,MAAM87H,yBACb,EAAK6F,mBACH,EAAK3hI,MAAM87H,wBAAwBrxH,QAGvC,EAAKmxH,WAAW,OAElBgI,gBAAiB7rI,KAAKwnI,4BACtB1uE,SAAU,SAAA6B,GACR,EAAK8sE,sBAAsB9sE,IAE7Bt0C,QAAS,WACH,EAAKpe,MAAM87H,yBACb,EAAK6F,mBACH,EAAK3hI,MAAM87H,wBAAwBrxH,QAGvC,EAAKmxH,WAAW,MAChB,EAAKyF,4BACL,EAAKC,yBAED,EAAK7pI,MAAM6lC,gBACb,EAAK7lC,MAAM6lC,eAAeI,yBAE9BqV,4BAA6Bh7C,KAAKN,MAAMs7C,4BACxC2xF,4BAA6B,kBAAM,EAAKrD,iCAGzCtpI,KAAKiI,MAAMi8H,aACZ,gBAAC,IAAD,CACEh/H,QAASA,EACTkqB,MAAOpvB,KAAKiI,MAAMi8H,YAClBhqH,iBAAkBwZ,EAClBzZ,uBAAwB/U,EACxBy1C,SAAU,kBAAM,EAAKspF,UAAU,OAC/B59G,QAAS,kBAAM,EAAK49G,UAAU,SAGlC,gBAAC,IAAD,CACEpgH,WAAW,mCACXpZ,QACE,gBAAC,QAAD,oGAKF6zC,mBACE,gBAAC,QAAD,qGAKFD,OAAQr+C,KAAKiI,MAAMs8H,oBAAoBl7H,SAEzC,gBAAC,IAAD,CACEwa,WAAW,4BACXpZ,QACE,gBAAC,QAAD,yEAIF4zC,OAAQr+C,KAAKiI,MAAMi6H,yBAErB,gBAAC,IAAD,CACEr+G,WAAW,wCACXpZ,QACE,gBAAC,QAAD,yIAKF4zC,OAAQr+C,KAAKiI,MAAMm6H,wBAErB,gBAAC,IAAD,CACEv+G,WAAW,2BACXpZ,QACE,gBAAC,QAAD,0GAKF4zC,OAAQr+C,KAAKiI,MAAMw6H,oBAErB,gBAAC,IAAD,CACE5+G,WAAW,8BACXpZ,QACE,gBAAC,QAAD,uHAKF4zC,OAAQr+C,KAAKiI,MAAMs6H,uBAEpBviI,KAAKiI,MAAM46H,eACV,gBAAC,IAAD,CACEnqF,wBAAyB14C,KAAKiI,MAAMywC,wBACpCuyF,gCAAiCjrI,KAAKmkI,2BACtCxpF,SAAU,kBAAM,EAAKioF,eAAc,IACnCv8G,QAAS,kBAAM,EAAKu8G,eAAc,QAGnC5iI,KAAKiI,MAAMy7H,yBACZ,gBAAC,IAAD,CACE/3H,MAAI,EACJovC,mBACE/6C,KAAKiI,MAAMy7H,yBACX1jI,KAAKiI,MAAMy7H,wBAAwBha,eAErC/uE,SAAU,kBAAM,EAAK8oF,sBAAsB,OAC3Cp9G,QAAS,kBAAM,EAAKo9G,sBAAsB,OAC1C5oF,sBACE,gBAAC,QAAD,yCAEFC,4BACE,gBAAC,QAAD,wFAKFlwC,aAAc,6CACdtG,MAAO,gBAAC,QAAD,2BACPs2C,sBAAuB,WACrB,GAAK,EAAKqoF,mBAAmBC,uBAA7B,CAGA,IAAM0J,EAAuB,EAAK3J,mBAC/B11D,uBAAuB,GACvBS,gBACGt7D,EAASwX,YACbhlB,EACAwuB,EACAk5G,GAEEl6H,IACF,EAAKmxH,WAAWnxH,EAAQ,aACxB,EAAK+wH,sBAAsB,SAG/BzoF,4BAA6Bh7C,KAAKN,MAAMs7C,4BACxCC,0BAA2B,WACzB,IAAMyoF,EAA0B,EAAKz7H,MAClCy7H,wBACH,IAAKA,EACH,MAAO,GAET,IAAMmJ,EAAwB3iH,YAC5BhlB,EACAwuB,EACAgwG,EAAwB11D,iBAE1B,OAAO6+D,EACH7iG,IAA0BK,uBACxBnlC,EAAQgrB,qBACRhrB,EACAwuB,EACAm5G,GAEF,QAIP7sI,KAAKiI,MAAMu+H,uBACZ,gBAAC,IAAD,CACE76H,MAAI,EACJk/H,gBAAiBn3G,EACjB+yG,aAAczmI,KAAKiI,MAAMw+H,aACzBh5E,QAASztD,KAAKiI,MAAMy+H,6BAGrB1mI,KAAKiI,MAAMq7H,aACZ,gBAAC,IAAD,CACEp+H,QAASA,EACTk0B,gBAAiBA,EACjBnC,iBAAkBA,EAClB4C,wBAAyBA,EACzBy5D,MAAOtzF,KAAKiI,MAAMq7H,YAClB5B,iBAAkBA,EAClB3hE,WAAY//D,KAAKiI,MAAMs7H,sBACvB91E,QAAS,kBACP,EAAKplD,SAAS,CACZi7H,YAAa,QAGjBtoF,4BAA6Bh7C,KAAKN,MAAMs7C,8BAG3Ch7C,KAAKiI,MAAM86H,2BACV,gBAAC,IAAD,CACEp3H,MAAI,EACJzG,QAASA,EACTwuB,OAAQA,EACR+5B,QAAS,kBAAM,EAAKq1E,qBAAoB,IACxCz8G,QAAS,kBAAM,EAAKy8G,qBAAoB,IACxCtZ,gBAAiB,kBAAM,EAAKma,qBAAoB,IAChDla,mBAAoBzpH,KAAKN,MAAM+pH,uBAGhCzpH,KAAKiI,MAAM27H,2BACZ,gBAAC,IAAD,CACEj4H,MAAI,EACJzG,QAASA,EACTwuB,OAAQA,EACRrN,QAAS,kBAAM,EAAKs9G,qBAAoB,IACxCl2E,QAAS,kBAAM,EAAKk2E,qBAAoB,IACxC3oF,4BAA6Bh7C,KAAKN,MAAMs7C,8BAG5C,gBAAC,OAAD,MACG,gBAAGx6C,EAAH,EAAGA,KAAH,OACC,gBAAC,WAAD,KACE,gBAAC,IAAD,CACE69C,KAAM,EAAKp2C,MAAMs9H,0BACjB1hH,WAAY,EAAK5b,MAAMq9H,sBAAsBzhH,WAC7CpZ,QAASjK,EAAKiB,EAAE,EAAKwG,MAAMq9H,sBAAsB76H,SACjD6zC,mBAAoB99C,EAAKiB,EACvB,EAAKwG,MAAMq9H,sBAAsBhnF,sBAGrC,gBAAC,IAAD,CACE3gD,IAAK,SAAA2gB,GAAW,OAAK,EAAKA,YAAcA,GACxClS,kBAAmB,SAAC5L,EAAMi3D,GAAP,OACjB,EAAK+wE,iBAAiBhoI,EAAMkzB,EAAQ+jC,e,GA/4Cb/5D,aAApBqkI,GACZzC,aAAe,CACpBtwC,WAAY,gB,2UCrHV78E,EAAkBC,EAAOD,GAEzBzO,EAAS,CACbq5H,cAAe,CACb55H,KAAM,IAIJ2pI,EAA0B,CAC9Bh6G,OAAQ,YACR,iCAAkC,iBAClC,kCAAmC,sBACnC,iCAAkC,iBAClC,2BAA4B,kBAC5B,mBAAoB,UACpB,iBAAkB,YAClB,+BAAgC,gBAChC,6BAA8B,eAC9B,mBAAoB,aACpB,gCAAiC,iBACjC,wBAAyB,WACzB,6BAA8B,eAC9B,qBAAsB,YAGXi6G,EAAgC,yBAEvCC,EAA2B,SAAC19G,GAAD,OAC/BA,EAAkB5c,OAAOgd,WAErBu9G,EAA4B,SAAC39G,GAAD,OAChCA,EAAkBld,QAEd86H,EAAgB,SAAAC,GACpB,IAAIC,EAAsB,GAC1B,GAAIhpG,IAAUG,IAAI4zC,KAAiB,CACjC,IAAMM,EAAmBr0C,IAAU1pB,IAAIy9D,KACvCi1D,EACEvpG,IAAc+0C,sBAAsBH,EAAkB,SAAW,GAGrE,OAAO00D,EACH,SAAWC,EAAsB,sBACjC,SAAWA,GA6CIC,E,4MAEnBC,iCAA0D,G,EAC1DrlI,MAAQ,CACN28H,qBAAqB,EACrB2I,yBAA0B,KAC1B/7G,WAAY,GACZg8G,gBAAiB,M,EAmCnBC,UAAY,SAACj9G,GAAwB,IAAD,EAO9B,EAAK9wB,MALPwF,EAFgC,EAEhCA,QACAgV,EAHgC,EAGhCA,iBACAyxH,EAJgC,EAIhCA,aACAG,EALgC,EAKhCA,gBACAC,EANgC,EAMhCA,iBAGIzqI,EAAOk6B,YACXsxG,EAAwBt8G,IAAe,aACvC,SAAAlvB,GAAI,OACF4Y,EAAiBkQ,eAAe9oB,IAAS4D,EAAQklB,eAAe9oB,MAG9DoR,EAASwH,EAAiBqsG,gBAC9BrhH,EACAsrB,EACAlvB,EACA4Y,EAAiB0V,mBAEnBld,EAAOg7H,QAAQjzF,YAAkB,EAAK/6C,MAAM0zH,qBAE5C,EAAK/qH,SACH,CACEu8H,qBAAqB,IAEvB,WACM+G,IACFA,EAAaj5H,GACbo5H,EAAgBp5H,GAChBq5H,EAAiBzqI,Q,EAMzBqsI,wBAA0B,SAACj7H,GAAsB,IACvCo5H,EAAoB,EAAKpsI,MAAzBosI,gBAERp5H,EAAOg7H,QAAQjzF,YAAkB,EAAK/6C,MAAM0zH,qBAC5C0Y,EAAgBp5H,I,EAGlBk7H,eAAiB,WACf,EAAKvlI,SAAS,CAAEu8H,qBAAqB,K,EAGvCiJ,cAAgB,SAACrtI,EAAgB8uB,GAA0C,IACjE5c,EAAmB4c,EAAnB5c,OAAQN,EAAWkd,EAAXld,OADwD,EAElC,EAAK1S,MAAnCwF,EAFgE,EAEhEA,QAASgV,EAFuD,EAEvDA,iBAEFnP,IAAOkZ,kBACpBzjB,EAAKiB,EACH,6EAUJ,EAAK/B,MAAMksI,eAAet8G,GAAmB,SAAAuuG,GACtCA,IAEDzrH,EACFlN,EAAQ4oI,aAAap7H,EAAOgd,WAE5BxV,EAAiB4zH,aAAap7H,EAAOgd,WAGvC,EAAKq+G,mBAAkB,Q,EAI3BC,YAAc,SAAC1+G,GAA0C,IAC/C5c,EAAW4c,EAAX5c,OACR0xB,IAAUqS,IAAI0hC,IAAgB,CAC5B13E,KAAMiS,EAAO6gB,UACbjyB,KAAMoR,EAAOgd,UACbhd,OAAQL,YAAoBK,M,EAIhCu7H,WAAa,SAACztI,EAAgB8uB,GAC5B,EAAK0+G,YAAY1+G,GACjB,EAAKu+G,cAAcrtI,EAAM8uB,I,EAG3B4+G,iBAAmB,SAAC5+G,GAClB,EAAK0+G,YAAY1+G,GACjB,EAAK6+G,gBAAgB7+G,I,EAGvB6+G,gBAAkB,SAAC7+G,GACjB,EAAK8+G,UAAU,EAAKC,OAAO/+G,K,EAG7B++G,OAAS,SAAC/+G,GACR,IAAK8U,IAAUG,IAAI4zC,KAAiB,OAAO,KAD0B,IAGrDm2D,EAAwBh/G,EAAhC5c,OAAqBN,EAAWkd,EAAXld,OACvBqmE,EAAmBr0C,IAAU1pB,IAAIy9D,KACjCo2D,EAAe1qG,IAAcg1C,sBACjCJ,EACA,UAEIn3E,EAAOuiC,IAAc+0C,sBAAsBH,EAAkB,QAC7Dh4E,EAAOojC,IAAc+0C,sBAAsBH,EAAkB,QACnE,GAAKn3E,GAASb,GAAS8tI,EAAvB,CAXqE,MAaf,EAAK7uI,MAAnDwF,EAb6D,EAa7DA,QAASgV,EAboD,EAapDA,iBAAkBgyH,EAbkC,EAalCA,eAE7BvxE,EAAUn/B,YACdl6B,GACA,SAAAA,GAAI,OACF4Y,EAAiBkQ,eAAe9oB,IAAS4D,EAAQklB,eAAe9oB,KAClE,IAGIktI,EAAYp8H,EACdlN,EAAQqhH,gBACNrhH,EACAzE,EACAk6D,EACAz1D,EAAQupI,kBAAkBH,EAAY5+G,WAAa,GAErDxV,EAAiBqsG,gBACfrhH,EACAzE,EACAk6D,EACAzgD,EAAiBu0H,kBAAkBH,EAAY5+G,WAAa,GAclE,OAXAxc,YACEs7H,EACAD,EACA,kBACArpI,GAEFspI,EAAU/zG,QAAQkgC,GAElB,EAAKozE,mBAAkB,GACnB7B,GAAgBA,EAAesC,GAE5B,CAAE97H,OAAQ87H,EAAWp8H,Y,EAG9Bg8H,UAAY,SAAC9+G,GACX,EAAKjnB,SACH,CACEklI,yBAA0Bj+G,IAE5B,WACM,EAAK0uG,cAAc,EAAKA,aAAa/jE,sB,EAK/Cy0E,QAAU,SAACp/G,EAAsCqrC,GAAqB,IAC5DjoD,EAAW4c,EAAX5c,OACR,EAAKrK,SAAS,CACZklI,yBAA0B,OAGxBP,EAAyB19G,KAAuBqrC,GAEhD,EAAKj7D,MAAMmsI,gBAAgBlxE,IAC7B,EAAKj7D,MAAMssI,eAAe18G,EAAmBqrC,GAAS,SAAA4jE,GAC/CA,IAEL7rH,EAAO+nB,QAAQkgC,GACf,EAAKozE,mBAAkB,Q,EAK7BrP,oBAAsB,SAACiQ,GAErB,IAAMC,EAA6B,EAAKtB,iCAAiCnkI,QACvE,SAAAmmB,GAAiB,OAGR,IAFP,EAAK5vB,MAAM6kI,oBAAoB78H,QAC7B4nB,EAAkB5c,OAAOgd,cAG/B,GACEk/G,EAA2Bn9F,OACzB,SAAAo9F,GAAc,OACZA,EAAez8H,SAAWu8H,EAA6Bv8H,UAG3D,OAAO,EAGT,IAAM08H,EAAoC,EAAKxB,iCAAiCnkI,QAC9E,SAAAmmB,GAAiB,OAAIA,EAAkBld,UAGzC,SACEw8H,EAA2Bn9F,OACzB,SAAAo9F,GAAc,OAAKA,EAAez8H,YAEpCu8H,EAA6Bv8H,QAGvB,IAFN08H,EAAkCpnI,QAChCinI,K,EAQN/P,iBAAmB,SAAC+P,GAAqD,IAAD,EAChC,EAAKjvI,MAAnCwF,EAD8D,EAC9DA,QAASgV,EADqD,EACrDA,iBAEX40H,EAAoC,EAAKxB,iCAAiCnkI,QAC9E,SAAAmmB,GAAiB,OAAIA,EAAkBld,UAEnC28H,EAAmC,EAAKzB,iCAAiCnkI,QAC7E,SAAAmmB,GAAiB,OAAKA,EAAkBld,UAGpC48H,EACJL,EAA6Bv8H,QAGvB,IAFN08H,EAAkCpnI,QAChCinI,GAG+B,EAAKrB,iCAAiCnkI,QACvE,SAAAmmB,GAAiB,OAGR,IAFP,EAAK5vB,MAAM6kI,oBAAoB78H,QAC7B4nB,EAAkB5c,OAAOgd,cAGJ1pB,SAAQ,SAAAipI,GACjC,IAAI3gI,EACA0sG,EACA0R,EACJ,GACEuiB,EAAuB78H,SAAWu8H,EAA6Bv8H,OAM/D4oG,GAJA1sG,EAAYqgI,EAA6Bv8H,OACrClN,EACAgV,GAEkBu0H,kBACpBQ,EAAuBv8H,OAAOgd,WAEhCg9F,EAAUp+G,EAAUmgI,kBAClBE,EAA6Bj8H,OAAOgd,eAEjC,IACJu/G,EAAuB78H,SACxB48H,EAcA,OAXAh0B,GADA1sG,EAAY4L,GACUu0H,kBACpBQ,EAAuBv8H,OAAOgd,WAEhCg9F,EAAW,EAAKzkH,MAAMupB,WAElBljB,EAAUmgI,kBACRM,EACEA,EAAiC1lI,OAAS,GAC1CqJ,OAAOgd,WACP,EALJphB,EAAUshB,kBASZ88F,EAAU1R,IAAW0R,GAAW,GACpCp+G,EAAU4gI,WAAWl0B,EAAW0R,MAElC,EAAKqhB,mBAAkB,I,EAGzBoB,mBAAqB,SAAC7/G,GAA0C,IACtD5c,EAAW4c,EAAX5c,OADqD,EAEvB,EAAKhT,MAAnCwF,EAFqD,EAErDA,QAASgV,EAF4C,EAE5CA,iBAEXiQ,EAAqBzX,EAAOgd,UAC7BxV,EAAiBkQ,eAAeD,KAEjCjlB,EAAQklB,eAAeD,GACzBouF,YACE,oHACA,CAAEC,iBAAiB,IAKRztG,IAAOkZ,kBACpB,yKAOF/J,EAAiBk1H,6BACfjlH,EACAjlB,EACAA,EAAQ0qB,mBAEV,EAAKm+G,mBAAkB,M,EAGzBvE,gBAAkB,WAChB,EAAKhkG,cACD,EAAKw4F,cAAc,EAAKA,aAAa/jE,mB,EAG3Co1E,mBAAqB,SAAC7B,GACpB,EAAKnlI,SAAS,CACZmlI,qB,EAIJ8B,kBAAoB,SAAC58H,EAAkB2M,GACrC3M,EAAOg7H,QAAQjzF,YAAkBp7B,IAIjC,EAAK0uH,mBAAkB,I,EAGzBwB,cAAgB,SAACjgH,GACf,EAAK5vB,MAAMqsI,iBACTz8G,EAAoBA,EAAkB5c,OAAOgd,UAAY,K,EAI7D8/G,oBAAsB,SAAClgH,GAAD,OACpB,EAAK5vB,MAAM4zB,aAAa,EAAK5zB,MAAMwF,QAASoqB,EAAkB5c,S,EAEhE+8H,0BAA4B,SAACjvI,GAAD,OAAoB,SAC9C8uB,EACA8W,GACI,IACI1zB,EAAW4c,EAAX5c,OACFge,EAAiBve,EAAG67B,iBAAiBvd,kBACzC,EAAK/wB,MAAMwF,QAAQgrB,qBACnBxd,EAAO6gB,WAET,MAAO,CACL,CACElyB,MAAOb,EAAKiB,EAAE,aACd24B,MAAO,kBAAM,EAAK4zG,YAAY1+G,KAEhC,CACEjuB,MAAOb,EAAKiB,EAAE,YACd24B,MAAO,kBAAM,EAAK6zG,WAAWztI,EAAM8uB,KAErC,CACEjuB,MAAO6rI,EAAc59G,EAAkBld,QACvCosB,QAAS4F,IAAUG,IAAI4zC,KACvB/9C,MAAO,kBAAM,EAAKi0G,OAAO/+G,KAE3B,CACEjuB,MAAOb,EAAKiB,EAAE,kBACd24B,MAAO,kBAAM,EAAK8zG,iBAAiB5+G,KAErC,CAAE7uB,KAAM,aACR,CACEY,MAAOb,EAAKiB,EAAE,oBACd24B,MAAO,kBAAM,EAAK16B,MAAMisI,aAAaj5H,KAEvC,CACErR,MAAOb,EAAKiB,EAAE,8BACd24B,MAAO,kBAAM,EAAK16B,MAAMisI,aAAaj5H,EAAQ,eAE/C,CACErR,MAAOb,EAAKiB,EAAE,uBACd24B,MAAO,kBAAM,EAAK16B,MAAMisI,aAAaj5H,EAAQ,eAE/C,CACErR,MAAOb,EAAKiB,EAAE,qBACd24B,MAAO,kBAAM,EAAK16B,MAAMisI,aAAaj5H,EAAQ,YAC7C8rB,SAAU9N,EAAegc,kCAAkC,WAE7D,CAAEjsC,KAAM,aACR,CACEY,MAAOb,EAAKiB,EAAE,eACd24B,MAAO,kBAAM,EAAKg0G,UAAU9+G,KAE9B,CACEjuB,MAAOb,EAAKiB,EAAE,6BACd+8B,SAAUyuG,EAA0B39G,GACpC8K,MAAO,kBAAM,EAAK+0G,mBAAmB7/G,KAEvC,CACEjuB,MAAOb,EAAKiB,EAAE,aACdm1D,QAAS7c,YAAsB,CAC7BC,WAAY,UACZC,WAAY,EAAKv6C,MAAM0sI,iBACvBl7G,aAAcqpB,YAAkB7nC,EAAO0e,WACvChxB,SAAU,SAAA+wB,GACR,EAAKm+G,kBAAkB58H,EAAQye,IAEjCgpB,cAAe,mBACfD,WAAY,kBAAM,EAAKm1F,mBAAmB38H,OAG9C,CACErR,MAAOb,EAAKiB,EAAE,eACd24B,MAAO,kBAAM,EAAKyzG,cAAcrtI,EAAM8uB,KAExC,CAAE7uB,KAAM,aACR,CACEY,MAAOb,EAAKiB,EAAE,kCACd24B,MAAO,kBAAM,EAAK16B,MAAMusI,oBAAoBv5H,EAAOgd,aAErD,CAAEjvB,KAAM,aACR,CACEY,MAAOb,EAAKiB,EAAE,4BACd24B,MAAO,kBAAM,EAAKwzG,sB,EAKxBG,kBAAoB,SAAC2B,GACf,EAAKhwI,MAAM6lC,gBACb,EAAK7lC,MAAM6lC,eAAeI,wBAExB+pG,EAAuB,EAAKlG,kBAC3B,EAAKhkG,e,oEA1cUtM,EAAkBgmG,GAQtC,OACEl/H,KAAKiI,MAAM28H,sBAAwB1F,EAAU0F,qBAC7C5kI,KAAKiI,MAAMslI,2BACTrO,EAAUqO,0BACZvtI,KAAKiI,MAAMupB,aAAe0tG,EAAU1tG,YACpCxxB,KAAKiI,MAAMulI,kBAAoBtO,EAAUsO,kBAKzCxtI,KAAKN,MAAM6kI,sBAAwBrrG,EAAUqrG,qBAC7CvkI,KAAKN,MAAM0zH,qBAAuBl6F,EAAUk6F,qBAK5CpzH,KAAKN,MAAMwF,UAAYg0B,EAAUh0B,SACjClF,KAAKN,MAAMwa,mBAAqBgf,EAAUhf,qB,+BAobpC,IAAD,SAUHla,KAAKN,MARPwF,EAFK,EAELA,QACAwuB,EAHK,EAGLA,OACAxZ,EAJK,EAILA,iBACAkf,EALK,EAKLA,gBACAnC,EANK,EAMLA,iBACA4C,EAPK,EAOLA,wBACAu5F,EARK,EAQLA,mBACArtC,EATK,EASLA,OATK,EAWiC/lF,KAAKiI,MAArCupB,EAXD,EAWCA,WAAYg8G,EAXb,EAWaA,gBAEdmC,EAAQpgH,YAAiBrqB,EAASgV,GACxCla,KAAKstI,iCAAmCh8G,YACtCq+G,EAAM5/G,eACN,CACEyB,aACAN,aAAckiG,IAGlB,IAAMwc,EAAkB5vI,KAAKstI,iCAAiCnkI,QAC5D,SAAAmmB,GAAiB,OAGR,IAFP,EAAK5vB,MAAM6kI,oBAAoB78H,QAC7B4nB,EAAkB5c,OAAOgd,cAGzB69G,EAA2BvtI,KAAKstI,iCAAiCvqG,KACrE1T,YAAwBrvB,KAAKiI,MAAMslI,2BAM/BlO,EAAUn6H,EAAQE,IAAM,IAAM8U,EAAiB9U,IAErD,OACE,kBAAC,IAAD,CAAYoJ,UAAQ,GAClB,kBAAC,IAAD,CACE6Q,KAAMrf,KAAKN,MAAM0zH,mBACjBhzH,SAAUJ,KAAKN,MAAMysI,6BAEvB,yBAAKtuI,MAAO6F,EAAOq5H,eACjB,kBAAC,IAAD,MACG,gBAAGlzH,EAAH,EAAGA,OAAQ3G,EAAX,EAAWA,MAAX,OACC,kBAAC,OAAD,MACG,gBAAG1C,EAAH,EAAGA,KAAH,OACC,kBAAC,IAAD,CACEioB,IAAK42G,EACL1hI,IAAK,SAAAqgI,GAAY,OAAK,EAAKA,aAAeA,GAC1CpjE,SAAU,EAAK0yE,iCACfpqI,MAAOA,EACP2G,OAAQA,EACR2wD,YAAawyE,EACb7yE,iBAAkB,EAAKq1E,oBACvB/0E,UAAW,SAACnrC,EAAmB8W,GAC7B,MAAO,eAAiBA,GAE1Bi0B,WAAY4yE,EACZ3yE,WAAY,SAAAhrC,GAAiB,OAC3B,EAAK5vB,MAAMisI,aAAar8G,EAAkB5c,SAE5CqoD,aAAc,EAAK6yE,eACnB/yE,gBAAiB,kBAAC,QAAD,yBACjBC,aAAa,wBACbZ,cAAe01E,EACfl3E,eAAgB,EAAK62E,cACrBh1E,YAAagzE,EACbz0E,SAAU,EAAK41E,QACftiI,kBAAmB,EAAKqjI,0BAA0BjvI,GAClDw6D,sBAAuB,EAAK4jE,iBAC5B3jE,uBAAwB,EAAKyjE,oBAC7B9lE,4BAAiD,UAApBz2C,cAC7B43C,aAAcgzE,WAO1B,kBAAC,IAAD,CACErsI,MAAO8wB,EACPtS,gBAAiB,aACjB9e,SAAU,SAAA+H,GAAI,OACZ,EAAKE,SAAS,CACZmpB,WAAYrpB,OAIjBnI,KAAKiI,MAAM28H,qBACV,kBAAC,IAAD,CACEn3E,QAAS,kBACP,EAAKplD,SAAS,CACZu8H,qBAAqB,KAGzBiL,kBAAmB7vI,KAAKytI,UACxBqC,uBAAwB9vI,KAAK2tI,wBAC7BzoI,QAASA,EACTwuB,OAAQA,EACRxZ,iBAAkBA,EAClB6rE,OAAQA,EACR3sD,gBAAiBA,EACjBnC,iBAAkBA,EAClB4C,wBAAyBA,IAG5B2zG,GACC,kBAAC,IAAD,CACEhzF,WAAYgzF,EAAgBp8G,UAC5B5gB,OAAQ,SAAA6O,GACN,EAAKiwH,kBAAkB9B,EAAiBnuH,GACxC,EAAKgwH,mBAAmB,OAE1B10F,SAAU,kBAAM,EAAK00F,mBAAmB,c,GAzkBX3xI,IAAMkuB,a,6ICtIlCs9G,EAAqB,EA8Bb6G,E,WACnB,cAWI,IAAD,OAVD7jF,EAUC,EAVDA,SACA2rE,EASC,EATDA,OACAtiD,EAQC,EARDA,OACAwP,EAOC,EAPDA,MACA1I,EAMC,EANDA,QACAiJ,EAKC,EALDA,OACAE,EAIC,EAJDA,OACAN,EAGC,EAHDA,SACAU,EAEC,EAFDA,UACAF,EACC,EADDA,SACC,yBA4DHsqD,kBAAoB,WAElB,OAAO,EAAKC,aAAe,EAAKC,gBA9D/B,KAiEHC,WAAa,SAAA1Y,GACX,GAAK,EAAK9rE,UAAV,CAEA,IAAIh0C,GAAiB,EAEjB8/G,EAAI71F,UAAS,EAAKquG,aAAc,GAChCxY,EAAI31F,SAAQ,EAAKK,YAAa,GA/GrB,KAgHTs1F,EAAIK,QAAoB,EAAKoY,gBAAiB,GA/GpC,KAgHVzY,EAAIK,QAAqB,EAAKsY,cAAe,GA1GnC,KA2GV3Y,EAAIK,QAAqB,EAAKuY,cAAe,GAGjD,IAAI5Y,EAAI52H,SAAU42H,EAAI52H,OAAOygC,QADD,6CAiE5B,OA5DI,EAAKu2F,SAtHE,KAuHLJ,EAAIK,MACN,EAAKsY,aACD,EAAKvY,OAAO,GAAIqR,GAChB,EAAKrR,OAAO,GAAI,GAxHX,KAyHAJ,EAAIK,MACb,EAAKsY,aACD,EAAKvY,OAAO,EAAGqR,GACf,EAAKrR,OAAO,EAAG,GA/HV,KAgIAJ,EAAIK,MACb,EAAKsY,aACD,EAAKvY,QAAQqR,EAAoB,GACjC,EAAKrR,QAAQ,EAAG,GAjIV,KAkIDJ,EAAIK,QACb,EAAKsY,aACD,EAAKvY,OAAOqR,EAAoB,GAChC,EAAKrR,OAAO,EAAG,KAnIL,IAsIdJ,EAAIK,OApIO,KAoIoBL,EAAIK,QACrC,EAAK5rE,WACLv0C,GAAiB,GAEf,EAAKq4H,qBAnIC,KAmIsBvY,EAAIK,OAClC,EAAKviD,SAEH,EAAKy6D,qBAnIC,KAmIsBvY,EAAIK,OAClC,EAAK/yC,QAEH,EAAKirD,qBAvIC,KAuIsBvY,EAAIK,OAClC,EAAKz7C,UAEH,EAAK2zD,qBAvIC,KAuIsBvY,EAAIK,QAC9B,EAAKsY,aACP,EAAK5qD,SAEL,EAAKF,UAGL,EAAK0qD,qBA/IC,KA+IsBvY,EAAIK,OAClC,EAAKtyC,SAEH,EAAKwqD,qBArJC,KAqJsBvY,EAAIK,OAClC,EAAK5yC,WAGH,EAAK8qD,qBA7JK,MA6JkBvY,EAAIK,OAClC,EAAKlyC,YA5Ja,MA8JhB6xC,EAAIK,OACN,EAAKlyC,YAGH,EAAKoqD,qBArKK,MAqKkBvY,EAAIK,OAClC,EAAKpyC,WApKQ,MAsKX+xC,EAAIK,OACN,EAAKpyC,WAGH/tE,GACE8/G,EAAI9/G,gBAAgB8/G,EAAI9/G,kBACrB,QAFT,IA7IC,KAmJH24H,SAAW,SAAA7Y,GAIJA,EAAI71F,UAAS,EAAKquG,aAAc,GAChCxY,EAAI31F,SAAQ,EAAKK,YAAa,GAhMtB,KAiMTs1F,EAAIK,QAAoB,EAAKoY,gBAAiB,GAhMpC,KAiMVzY,EAAIK,QAAqB,EAAKsY,cAAe,GA3LnC,KA4LV3Y,EAAIK,QAAqB,EAAKuY,cAAe,GAEjD,IAAI14H,GAAiB,EAMrB,GArMkB,IAiMd8/G,EAAIK,OA/LO,KA+LoBL,EAAIK,QACrCngH,GAAiB,GAGfA,EAEF,OADI8/G,EAAI9/G,gBAAgB8/G,EAAI9/G,kBACrB,GArKR,KAyKH44H,aAAe,SAAA9Y,GACR,EAAK9rE,YAELnnD,gBAjMgB,IAkMfizH,EAAI3qH,OACN,EAAK0jI,uBAAwB,EAE7B,EAAKA,uBAAwB,KAhLhC,KAqLHC,WAAa,SAAAhZ,GACN,EAAK9rE,YAELnnD,eA7MgB,IA6MDizH,EAAI3qH,SACtB,EAAK0jI,uBAAwB,KAzL9B,KA6LHE,YAAc,SAAAjZ,KA7LX,KA+LHkZ,MAAQ,aA9LN3wI,KAAKksD,SAAWA,GAAYlsD,KAAK2wI,MACjC3wI,KAAK63H,OAASA,GAAU73H,KAAK2wI,MAC7B3wI,KAAKu1E,OAASA,GAAUv1E,KAAK2wI,MAC7B3wI,KAAK+kF,MAAQA,GAAS/kF,KAAK2wI,MAC3B3wI,KAAKq8E,QAAUA,GAAWr8E,KAAK2wI,MAC/B3wI,KAAKslF,OAASA,GAAUtlF,KAAK2wI,MAC7B3wI,KAAKwlF,OAASA,GAAUxlF,KAAK2wI,MAC7B3wI,KAAK4lF,UAAYA,GAAa5lF,KAAK2wI,MACnC3wI,KAAK0lF,SAAWA,GAAY1lF,KAAK2wI,MACjC3wI,KAAKklF,SAAWA,GAAYllF,KAAK2wI,MACjC3wI,KAAK2rD,WAAY,EACjB3rD,KAAKowI,cAAe,EACpBpwI,KAAKkwI,gBAAiB,EACtBlwI,KAAKiwI,aAAc,EACnBjwI,KAAKqwI,cAAe,EACpBrwI,KAAKwwI,uBAAwB,EAC7BxwI,KAAK4wI,Q,mEAIL,OAAO5wI,KAAKgwI,sB,0CAIZ,OAAOhwI,KAAKowI,e,yCAIZ,OAAOpwI,KAAKowI,e,4CAIZ,OAAOpwI,KAAKmiC,a,mDAIZ,OAAOniC,KAAKowI,e,iDAIZ,OAAOpwI,KAAKmiC,a,mCAIZ,OAAI39B,cACKxE,KAAKgwI,sBAEPhwI,KAAKgwI,qBAAwBhwI,KAAKmiC,YAAeniC,KAAKowI,gB,uCAS7D,OAAOpwI,KAAKqwI,cAAgBrwI,KAAKwwI,wB,8BAyIjCxwI,KAAK2rD,WAAY,I,6BAIjB3rD,KAAK2rD,WAAY,EAIjB3rD,KAAKiwI,aAAc,EACnBjwI,KAAKmiC,YAAa,I,8BAIM,qBAAbtB,WAEXA,SAAS1U,iBAAiB,UAAWnsB,KAAKmwI,YAAY,GACtDtvG,SAAS1U,iBAAiB,QAASnsB,KAAKswI,UAAU,GAClDzvG,SAAS1U,iBAAiB,WAAYnsB,KAAK0wI,aAAa,GACxD7vG,SAAS1U,iBAAiB,YAAansB,KAAKuwI,cAAc,GAC1D1vG,SAAS1U,iBAAiB,UAAWnsB,KAAKywI,YAAY,M,gCAI9B,qBAAb5vG,WAEXA,SAASxU,oBAAoB,UAAWrsB,KAAKmwI,YAAY,GACzDtvG,SAASxU,oBAAoB,QAASrsB,KAAKswI,UAAU,GACrDzvG,SAASxU,oBAAoB,WAAYrsB,KAAK0wI,aAAa,GAC3D7vG,SAASxU,oBAAoB,YAAarsB,KAAKuwI,cAAc,GAC7D1vG,SAASxU,oBAAoB,UAAWrsB,KAAKywI,YAAY,Q,kHCxQhDI,G,OAAyB,SAACjwI,GACrC,IAAKA,EAAO,OAAO,EADyC,IAGpDkwI,EAAkBlwI,EAAlBkwI,cACR,OAAOA,GAAiBA,EAAcznI,QAAU,IAiG7B0nI,EAQnB,cAA4E,IAAD,OAA7DC,EAA6D,EAA7DA,OAAQ7I,EAAqD,EAArDA,cAAe8I,EAAsC,EAAtCA,cAAehM,EAAuB,EAAvBA,aAAuB,yBAP3EiM,kBAAmC,KAOwC,KAN3EC,kBAAmC,KAMwC,KAY3EC,YAAc,aAZ6D,KAgB3EC,aAAe,SAACC,EAAiBC,EAAiB53F,GAChD,GAA+B,OAA3B,EAAKu3F,mBAAyD,OAA3B,EAAKC,kBAG1C,OAFA,EAAKD,kBAAoBI,OACzB,EAAKH,kBAAoBI,GAI3B,IAAM/uC,EAAS8uC,EAAU,EAAKJ,kBACxB/7E,EAASo8E,EAAU,EAAKJ,kBACxBK,EAAchvC,EAAS,EAAKivC,iBAC5BC,EAAcv8E,EAAS,EAAKs8E,iBAClC,EAAKE,cAAcC,UAAUJ,GAAcE,GAC3C,EAAKR,kBAAoBI,EACzB,EAAKH,kBAAoBI,EAEzB,EAAKM,eAAe,EAAKJ,iBAAmB93F,IA/B6B,KAkC3Em4F,UAAY,WACV,EAAKZ,kBAAoB,KACzB,EAAKC,kBAAoB,MApCgD,KAuC3EY,QAAU,WACR,EAAKC,kCAvCLhyI,KAAK6xI,eAAiB1J,EACtBnoI,KAAKyxI,eAAiBR,EACtBjxI,KAAK2xI,cAAgB1M,EACrBjlI,KAAKgyI,+BA9F2B,SAAC,GAKX,IAJxBhB,EAIuB,EAJvBA,OACAiB,EAGuB,EAHvBA,aACAC,EAEuB,EAFvBA,YACAC,EACuB,EADvBA,WAEIC,EAAY,KAEhB,SAASvzI,IACPmyI,EAAO7kH,iBAAiB,YAAa8vD,GAGvC,SAASA,EAAKtnE,GACZ,GAAKk8H,EAAuBl8H,GAA5B,CAGA,IAAIuoD,EAAIvoD,EAAEm8H,cAENuB,EAAKn1E,EAAE,GAAGhT,QAAUgT,EAAE,GAAGhT,QACzBooF,EAAKp1E,EAAE,GAAG/S,QAAU+S,EAAE,GAAG/S,QACzBooF,EAAWh8H,KAAKi8H,KAAKH,EAAKA,EAAKC,EAAKA,GACxC,IAAKF,EAQH,OAPAA,EAAY,CACVK,EAAG,CACDF,SAAUA,EACVG,KAAM,IAAIhtI,YAGdusI,IAGF,IAAItsI,EAAM,IAAID,KAEd,KADeC,EAAMysI,EAAUK,EAAEC,KAClB,IAAf,CAGA,IAAMC,EAAY,CAChB75F,GAAIokB,EAAE,GAAGhT,QAAUgT,EAAE,GAAGhT,SAAW,EACnCnR,GAAImkB,EAAE,GAAG/S,QAAU+S,EAAE,GAAG/S,SAAW,GAE/ByoF,EAAcL,EAAWH,EAAUK,EAAEF,SAE3CL,EAAYS,EAAU75F,EAAG65F,EAAU55F,EAAG65F,GACtCR,EAAUK,EAAI,CACZF,SAAUA,EACVG,KAAM/sI,KAIV,SAAS7G,EAAI6V,GACXq8H,EAAO3kH,oBAAoB,YAAa4vD,GACnCm2D,IAILD,IACAC,EAAY,MAYd,OATApB,EAAO7kH,iBAAiB,aAActtB,GACtCmyI,EAAO7kH,iBAAiB,WAAYrtB,GAEpC,WACEkyI,EAAO3kH,oBAAoB,aAAcxtB,GACzCmyI,EAAO3kH,oBAAoB,YAAa4vD,GACxC+0D,EAAO3kH,oBAAoB,WAAYvtB,IA6BD+zI,CAA4B,CAChE7B,SACAiB,aAAcjyI,KAAKoxI,YACnBc,YAAalyI,KAAKqxI,aAClBc,WAAYnyI,KAAK8xI,c,6BCxHvB,aAEe,aAAAjH,GAAe,OAC5BjsI,iBAAO,EAAGisI,EAAgBiI,kBAAkB,SAAA7zI,GAC1C,MAAO,CACLyB,MAAOmqI,EAAgBkI,WAAW9zI,GAAGywB,UACrCruB,MAAOwpI,EAAgBkI,WAAW9zI,GAAGywB,WAAa,mB,6BCLxD,sDAGMhsB,EAAS,CACbsvI,cAAe,CAAEx0I,QAAS,OAAQ2E,KAAM,EAAGF,SAAU,aAW1CgwI,EAAmB,SAAC,GAAD,IAAGr1I,EAAH,EAAGA,SAAH,OAC9B,gBAAC,IAAD,CAASk2D,QAAM,IACZ,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,WAAhB,OACC,uBAAKn2D,MAAO6F,EAAOsvI,cAAer1I,IAAKq2D,KAClCD,KACCA,EAAYD,QACdl2D,EAAS,CACPsF,MAAO6wD,EAAYD,OAAO5wD,MAC1B2G,OAAQkqD,EAAYD,OAAOjqD,e,6BCrBvC,oRAiDMqpI,EAA8B,SAClCC,EACA33C,GAEA,OAAO23C,EAAsBpwG,MAC3B,SAAAw4D,GAAc,OAAIA,EAAe96F,OAAS+6F,MAS/B,SAAS43C,EAAY1zI,GAAe,IACzC48F,EAAuC58F,EAAvC48F,iBAAkB+2C,EAAqB3zI,EAArB2zI,iBAEpB90F,EAAc7gD,aAAiB+kC,KAC/BjF,EAAoB9/B,aAAiB2T,KACrCiiI,EAA2B/0F,EAAYz6B,OAAOwvH,yBAC9CC,EAA8Bh1F,EAAYg1F,4BAE1CC,EAAoB91I,WACxB,kBAAM09F,YAAyB17F,EAAMwF,WACrC,CAACxF,EAAMwF,UAGHsgC,EAAcC,cAedguG,EAAY71G,YAChBJ,EACAN,KAfiB,WACjB,IAAMy9B,EAAUn/B,YAAiB,UAAU,SAAAl6B,GAAI,OAC7Cg7F,EAAiBo3C,eAAepyI,MAElCg7F,EAAiBq3C,gBACfh5E,EACA2hC,EAAiBC,mBAGnB/2D,IACA6tG,OA8BF,OACE,gBAAC,OAAD,MACG,gBAAG7yI,EAAH,EAAGA,KAAH,OACC,gBAAC,IAAD,CAAQtC,UAAQ,EAACsM,QAAM,EAACwqD,eAAa,GACK,IAAvCsnC,EAAiBC,kBAChB,gBAAC,WAAD,KACE,gBAAC,IAAD,KACGD,EAAiBC,kBAAoB,GACpC,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACE14E,WAAW,mBACX3Z,KAAK,WAEL,gBAAC,QAAD,uPAWPtL,iBAAO,EAAG09F,EAAiBC,mBAAmB,SAACt9F,GAC9C,IAAM08F,EAAmBW,EAAiBE,YAAYv9F,GAChDu8F,EAAaG,EAAOi4C,gBACpBr4C,EAAiB23C,EACrBM,EACAh4C,GAGF,OACE,gBAAC,WAAD,CAAgB/yE,IAAKxpB,GACnB,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAiB+sB,YAAU,GACzB,gBAAC,QAAD,sBAEF,gBAAC,IAAD,CACErsB,OAAO,OACP+I,cAAY,EACZlH,SAAU,6BACVd,MAAOi7F,EAAOjsE,UACdtvB,SAAU,SAAAu6D,GACJA,IAAYghC,EAAOjsE,YAEvBisE,EAAOlhE,QAAQkgC,GACfn1B,IACA6tG,MAEFtxI,WAAS,IAEX,gBAAC,IAAD,KACE,gBAAC,QAAD,eAEF,gBAAC,IAAD,CACEpC,OAAO,OACPe,MAAO86F,EACPp7F,SAAU,SAACuU,EAAG1V,EAAG40I,GAAP,OA1ET,SAACl4C,EAAkBk4C,GAC1Cl4C,EAAOm4C,cAAcD,GACrB,IAAMt4C,EAAiB23C,EACrBM,EACAK,GAGEt4C,GACFkB,YAA2Bd,EAAQJ,EAAeA,gBAGpD/1D,IACA6tG,IA+DwBU,CAAiBp4C,EAAQk4C,IAE3B9xI,WAAS,EACTP,SAAU,mCAETgyI,EAAkBvqI,KAAI,SAAAsyF,GAAc,OACnC,gBAAC,IAAD,CACE9yE,IAAK8yE,EAAe96F,KACpBC,MAAO66F,EAAe96F,KACtBkJ,YAAa4xF,EAAe5qE,SAC5B3vB,SACmB,WAAjBtB,EAAMmB,QACN06F,EAAeW,qCAKvB,gBAAC,IAAD,CACE5vF,QACE,gBAAC,IAAD,KACE,gBAAC,IAAD,OAGJF,kBAAmB,SAAC5L,GAAD,MAAoB,CACrC,CACEa,MAAOb,EAAKiB,EAAE,eACd24B,MAAO,kBA3Gb94B,EA2GgCq6F,EAAOjsE,UA1G3D4sE,EAAiB03C,aAAa1yI,GAC9BkkC,SACA6tG,IAHmB,IAAC/xI,IA6GI,CAAEb,KAAM,aACR,CACEA,KAAM,WACNY,MAAOb,EAAKiB,EAAE,6BACdsQ,QAASuhI,EACTl5G,MAAO,kBACLm5G,GACGD,UAMb,gBAAC,IAAD,CAAM9oI,QAAM,EAACtM,UAAQ,GACnB,gBAAC,IAAD,CAAQsM,QAAM,GACTgxF,GAAcD,EACf,gBAAC,WAAD,KACE,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEh7F,OAAQg7F,EAAe5/E,gBAI7B,gBAAC,IAAD,CACEkpB,UAAW,CAAC82D,GACZv2D,OAAQm2D,EAAeE,iBACvBv2F,QAASxF,EAAMwF,QACfk0B,gBAAiB15B,EAAM05B,gBACvBnC,iBAAkBv3B,EAAMu3B,iBACxB4C,wBACEn6B,EAAMm6B,wBAERyL,2BACEguG,EACI,SAAA53C,GAAa,OACXl7F,EAAKiB,EACH,0DAAgCi6F,yBAEpCn9F,KAIR,YAOhB,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAMqF,eAAe,WAAW4G,QAAM,GACpC,gBAAC,IAAD,CACE0C,SAAO,EACP7L,MAAO,gBAAC,QAAD,sBACPsB,QAAS8wI,EACT7pI,KAAM,gBAAC,IAAD,WAMd,gBAAC,IAAD,CAAQ1L,UAAQ,EAACsM,QAAM,EAAC5G,eAAe,UACrC,gBAAC,IAAD,CACEU,MAAO,gBAAC,QAAD,8BACPqX,YACE,gBAAC,QAAD,qDAEFogC,YAAa,gBAAC,QAAD,sBACbnxC,aACmB,WAAjBlL,EAAMmB,OACF,mBACA,wCAENm7C,MAAOy3F,W,6BC1RR,KACbQ,aAAc,CACZ/wI,MAAO,GACP0K,YAAa,EACb0H,aAAc,GAEhB4+H,iBAAkB,CAChBhxI,MAAO,IAETixI,WAAY,CACVjxI,MAAO,GACP2G,OAAQ,M,sKC4BSuqI,E,uKACT,IAAD,EAeHp0I,KAAKN,MAbP20I,EAFK,EAELA,aACArlG,EAHK,EAGLA,eACAC,EAJK,EAILA,eACAC,EALK,EAKLA,YACAolG,EANK,EAMLA,qBACAC,EAPK,EAOLA,kBACAC,EARK,EAQLA,gBACAC,EATK,EASLA,gBACAC,EAVK,EAULA,aACAC,EAXK,EAWLA,wBACAC,EAZK,EAYLA,qBACAC,EAbK,EAaLA,6BACAC,EAdK,EAcLA,0BAdK,EAsBH/lG,YACFslG,EACArlG,EACAC,EACAC,GARAC,EAlBK,EAkBLA,kBACAvqB,EAnBK,EAmBLA,UACA0qB,EApBK,EAoBLA,kBACAE,EArBK,EAqBLA,UAQF,OACE,gBAAC,WAAD,KACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEztC,WAAS,EACTlC,kBAAmB,gBAAC,QAAD,kBACnBa,MAAOV,KAAKN,MAAMsvC,eAClB5uC,SAAU,SAACuU,EAAG1V,EAAGyB,GAAP,OACR8zI,EAAgBxxH,SAAStiB,EAAO,KAAO,KAGxC9B,iBAAO,EAAGy1I,EAAajlG,sBAAsB,SAAAnwC,GAC5C,IAAM2lB,EAAYyvH,EAAahlG,aAAapwC,GAC5C,OACE,gBAAC,IAAD,CACEwpB,IAAKxpB,EACLyB,MAAOzB,EACP0K,YAAa,mCAAoBib,EAAU8K,UAAfzwB,YAKnCkwC,GAAqBvqB,EAAU2qB,qBAAuB,GACrD,gBAAC,IAAD,CACExtC,WAAS,EACTlC,kBAAmB,gBAAC,QAAD,kBACnBa,MAAOV,KAAKN,MAAMuvC,eAClB7uC,SAAU,SAACuU,EAAG1V,EAAGyB,GAAP,OACR+zI,EAAgBzxH,SAAStiB,EAAO,KAAO,KAGxC9B,iBAAO,EAAGgmB,EAAU2qB,sBAAsB,SAAAtwC,GACzC,OACE,gBAAC,IAAD,CACEyB,MAAOzB,EACPwpB,IAAKxpB,EACL0K,YAAa,6BAAe1K,YAMrCqwC,GACC,gBAAC,IAAD,CACEvtC,WAAS,EACTlC,kBAAmB,gBAAC,QAAD,cACnBa,MAAOV,KAAKN,MAAMwvC,YAClB9uC,SAAU,SAACuU,EAAG1V,EAAGyB,GAAP,OACRg0I,EAAa1xH,SAAStiB,EAAO,KAAO,KAGrC9B,iBAAO,EAAG4wC,EAAUG,mBAAmB,SAAA1wC,GACtC,OACE,gBAAC,IAAD,CACEyB,MAAOzB,EACPwpB,IAAKxpB,EACL0K,YAAa,yBAAW1K,aAOpC,gBAAC,IAAD,CACEoC,MAAOwzI,EACP3hB,cAAc,QACd/7C,QAASm9D,EACTl9D,SAAU,SAACziE,EAAG5C,GAAJ,OAAgB4iI,EAAwB5iI,MAEpD,gBAAC,IAAD,CACE1Q,MAAOyzI,EACP5hB,cAAc,QACd/7C,QAASo9D,EACTn9D,SAAU,SAACziE,EAAG5C,GAAJ,OAAgB6iI,EAAqB7iI,W,GAvGbrU,c,6BCxC7B,KACbw2I,iBAAkB,CAChBhxI,MAAO,IAETixI,WAAY,CACVjxI,MAAO,M,2HCGE6xI,EAAb,oLAGwB77G,GAGpB,OAAOA,EAAUurD,WANrB,mCAUI,OAAOzkF,KAAKN,MAAMwF,UAVtB,kCAcI,OAAO,OAdX,sCAkBQlF,KAAKykD,QAAQzkD,KAAKykD,OAAOilC,kBAlBjC,sFAyBqBtxB,GAEfp4D,KAAKykD,QACLzkD,KAAKN,MAAM+kF,UACXrsB,EAAUqsB,WAAazkF,KAAKN,MAAM+kF,UAElCzkF,KAAKykD,OAAOuwF,yBA/BlB,+BAkCY,IAAD,OACC9vI,EAAYlF,KAAKN,MAAjBwF,QACR,OAAKA,EAGH,kBAAC,IAAD,CACE8pF,WAAYhvF,KAAKN,MAAMsvF,WACvB2sB,iBAAkB37G,KAAKN,MAAMi8G,iBAC7BC,iBAAkB57G,KAAKN,MAAMk8G,iBAC7BxiF,gBAAiBp5B,KAAKN,MAAM05B,gBAC5BnC,iBAAkBj3B,KAAKN,MAAMu3B,iBAC7Bt5B,IAAK,SAAA8mD,GAAM,OAAK,EAAKA,OAASA,GAC9Bv/C,QAASA,IAVQ,SApCzB,GAA8CxH,IAAMkuB,WAoDvCwtF,EAAiC,SAC5C15G,GAD4C,OAEzC,kBAACq1I,EAA6Br1I,K,sKCjDtBqsH,EAAb,4MAqDEnY,eAAiB,WACf,IAAMlgF,EAAS,EAAK+7E,YACdhrD,EAAS,EAAKA,OAEhBA,GAAU/wB,GACZxgB,YACEwgB,EAAO8tG,8BACP/8E,EAAOg9E,+BA5Df,2DAII,OAAOzhI,KAAKN,MAAMwF,UAJtB,4CAOwBg0B,GAKpB,SAAKl5B,KAAKN,MAAM+kF,WAAavrD,EAAUurD,YAZ3C,0CAoBI,GAAIzkF,KAAKN,MAAM+kF,SAAU,CAAC,IAChB+rB,EAAoBxwG,KAAKN,MAAzB8wG,gBACRxwG,KAAKN,MAAMkvG,mBAAmB4B,MAtBpC,yCA0BqBp4C,GACjB,IAAKA,EAAUqsB,UAAYzkF,KAAKN,MAAM+kF,SAAU,CAAC,IACvC+rB,EAAoBxwG,KAAKN,MAAzB8wG,gBACRxwG,KAAKN,MAAMkvG,mBAAmB4B,MA7BpC,sCAkCQxwG,KAAKykD,QAAQzkD,KAAKykD,OAAOilC,kBAlCjC,0CAsCQ1pF,KAAKykD,QAAQzkD,KAAKykD,OAAO8kF,2BAtCjC,kCAyC0B,IAAD,EACgBvpI,KAAKN,MAAlCwF,EADa,EACbA,QAASsrG,EADI,EACJA,gBACjB,OACGtrG,GACAsrG,GACAtrG,EAAQsqG,eAAegB,GAInBtrG,EAAQuqG,UAAUe,GAFhB,OAhDb,+BAiEY,IAAD,SACwCxwG,KAAKN,MAA5CwF,EADD,EACCA,QAASsrG,EADV,EACUA,gBAAiB/rB,EAD3B,EAC2BA,SAC5B/wD,EAAS1zB,KAAKyvG,YACpB,OAAK/7E,GAAWxuB,EAMd,gBAAC,IAAD,CACE8pF,WAAYhvF,KAAKN,MAAMsvF,WACvB51D,gBAAiBp5B,KAAKN,MAAM05B,gBAC5BnC,iBAAkBj3B,KAAKN,MAAMu3B,iBAC7B4C,wBAAyB75B,KAAKN,MAAMm6B,wBACpC0L,eAAgBvlC,KAAKN,MAAM6lC,eAC3B5nC,IAAK,SAAA8mD,GAAM,OAAK,EAAKA,OAASA,GAC9Bv/C,QAASA,EACTwuB,OAAQA,EACRguG,iBAAkBhuG,EAAOiuG,sBACzBC,kCAAmC,kBACjCl/B,YACErwF,YAAoBqhB,EAAO8tG,iCAG/BlmB,aAAct7G,KAAKN,MAAM47G,aACzB72B,SAAUA,EACVzpC,4BAA6Bh7C,KAAKN,MAAMs7C,8BArBnC,+CAAuBw1D,EAAvB,eAtEb,GAA0C9yG,aAiG7BgzG,EAA6B,SACxChxG,GADwC,OAErC,gBAACqsH,EAAyBrsH,K,6BC9G/B,oEAAO,IAAMu1I,EAAe,SAACC,EAAcC,GACzC,IAAIC,EAAK9xE,YAAY39D,MACrBuvI,IAEAC,EADS7xE,YAAY39D,MACPyvI,IAGHznC,EAAc,SACzB0nC,EACAF,GAEA,IAAMC,EAAK9xE,YAAY39D,MACvB,OAAO0vI,IAAYxsH,MAAK,SAAA7pB,GACtB,IAAMs2I,EAAKhyE,YAAY39D,MAGvB,OAFAwvI,EAASG,EAAKF,GAEPp2I,O,gCClBX,6BAGetB,QAAMymB,MAAK,SAAAzkB,GAAK,OAC7B,kBAAC,IAAYA,EACX,0BAAMoyE,EAAE,m2C,kECyBGyjE,IAvBY,SAAC,GAMR,IALlB3xC,EAKiB,EALjBA,cAKiB,IAJjB4xC,mBAIiB,SACTlxI,EAAkBs/F,EAAlBt/F,MAAOu/F,EAAWD,EAAXC,OACT4xC,EAAcD,EAChBE,IACAC,IACJ,OACE,gBAACF,EAAD,CAAav3I,UAAQ,EAACyF,WAAW,WAAW6G,QAAM,GAChD,gBAAC,IAAD,CAAMtM,UAAQ,EAACC,qBAAmB,GAC/BmG,GAEH,gBAAC,IAAD,CAAMpG,UAAQ,EAACJ,KAAK,QAAQK,qBAAmB,GAC7C,gBAAC,QAAD,0BAAW0lG,gB,0FCnBbngG,EAAS,CACb2qD,eAAgB,CACdlrD,KAAM,EACN3E,QAAS,OACToF,eAAgB,UAElBgG,KAAM,CACJuzC,WAAY,6CACZt5C,QAAS,EACTmpD,aAAc,IASL4oF,EAAc,SAAC,GAAyC,IAAvC/2F,EAAsC,EAAtCA,mBAAoB/gD,EAAkB,EAAlBA,KAChD,OACE,uBAAKD,MAAO6F,EAAO2qD,gBACjB,gBAAC,IAAD,CACExwD,MAAK,2BAAO6F,EAAOkG,MAAd,IAAoBC,OAAQ/L,IACjC6lB,IACEk7B,EAAmBymD,iBAAiBviE,MAAK,SAAA19B,GAAG,OAC1CA,EAAIwwI,SAAS,qBACVh3F,EAAmBymD,iBAAiB,GAE3CvgF,IAAK85B,EAAmBv9C,U,+BChChC,6CAKaw0I,EAAc,SAACj4G,EAAsBswE,GAChD,IAAM4nC,EAAgBz/E,mBAEtB/K,qBAAU,WACRwqF,EAAc91I,QAAU49B,KAG1B0tB,qBACE,WAKE,GAAc,OAAV4iD,EAAgB,CAClB,IAAMzsG,EAAKs0I,aALb,WACMD,EAAc91I,SAAS81I,EAAc91I,YAIZkuG,GAC7B,OAAO,kBAAM8nC,cAAcv0I,OAG/B,CAACysG,M,8BClBL,oEAMO,IAAM+nC,EAAyB,SAAC11I,GACrC,IAAM21I,EAAa31I,EACnB,OAAI21I,EACK,SAACtuG,GAAD,OAAiBsuG,EAAW10I,EAAEomC,IAGhC,MASI2kE,EAAgC,SAC3ChsG,GAEA,IAAM21I,EAAa31I,EACnB,OAAI21I,EACK,SAACtuG,GAAD,OAAiBsuG,EAAW10I,EAAEomC,IAGhC,SAACA,GAAD,OAAiBA,K,iBChC1B,IAAMiC,EAAO7U,EAAQ,KA0BfmhH,EAA0B,SAC9BjkI,EACAke,EACAgmH,GAEA,IAAKA,EAAkBD,wBACrB,MAAO,CACLt1I,OAAO,EACP2J,QACE,mEAIN,IAAM6rI,EAAcD,EAAkBD,wBAAwBjkI,EAAIke,GAClE,OAAIyZ,EAAKwsG,GACA,CACLx1I,OAAO,EACP2J,QAAS,iEACTgzD,SAAU64E,GAIP,CACLx1I,OAAO,EACP2J,QAAS,8BAoEbtL,EAAOC,QAAU,CACfg3I,0BACAG,cA9DoB,SACpB90I,EACA0Q,EACAujB,EACA2gH,GAEA,IAAKA,EAAkBG,gBACrB,MAAO,CACL/rI,QACE,oEACF3J,OAAO,GAIX,IAAIuvB,EAAY,KAChB,IAEE,KADAA,EAAYgmH,EAAkBG,gBAAgB/0I,EAAG0Q,IAE/C,MAAO,CACL1H,QAAQ,gGACR3J,OAAO,GAGX,MAAOo0B,GACP,MAAO,CACLzqB,QAAQ,kJACR3J,OAAO,EACP+rG,WAAW,EACXpvC,SAAUvoC,GAId,IACE,IAAMuhH,EAAcL,EAClBjkI,EACAke,EACAgmH,GAEF,GAAII,EAAY31I,MAEd,OADAuvB,EAAUtd,SACH0jI,EAET,MAAOvhH,GACP,MAAO,CACLzqB,QAAQ,0JACR3J,OAAO,EACP+rG,WAAW,EACXpvC,SAAUvoC,GAOd,OAHAQ,EAASsf,gBAAgB3kB,GACzBA,EAAUtd,SAEH,CACLtI,QAAS,4CACT3J,OAAO,M,iHCzGL41I,EAAwC,CAC5CzwC,aAAc,QACd3kG,KAAM,aACNq1I,iBAAkB,iBAAO,CACvBpjC,iBAAkB,kBAAMriG,QAAQC,OAAO,+BACvCmkE,OAAQ,kBAAMpkE,QAAQC,OAAO,+BAC7B68F,YAAa,kBAAM98F,QAAQhK,SAAQ,IACnC2rE,cAAe,SAAC3tE,GAAD,OACbgM,QAAQC,OAAO,+BACjB0iG,gBAAiB,SAAC3uG,GAAD,OACfgM,QAAQC,OAAO,+BACjB49F,kBAAmB,SAAC7pG,GAAD,OAAwBgM,QAAQhK,cA6BjD0vI,EAAmC,SACvCC,EACAhxC,EACAixC,GAEA,IAAMC,EAAalxC,EAChB58F,KAAI,SAAA+tI,GACH,MAAO,CACLA,yBACAnsC,0BAA2BmsC,EAAuBC,gCAC9CD,EAAuBC,gCAAgCH,GACvD,SAGP3tI,QAAO,sBAAG0hG,6BAEb,OAA0B,IAAtBksC,EAAW1tI,OACN,CACL2tI,uBAAwBH,EACxBhsC,0BAA2B,OAG3BksC,EAAW1tI,OAAS,GACtBlC,QAAQ4sB,KACN,6FAIGgjH,EAAW,KAGCG,E,4MAInBjvI,M,2BACK2uI,EACD,EAAKl3I,MAAMm3I,uBACX,EAAKn3I,MAAMmmG,iBACX,EAAKnmG,MAAMo3I,e,IAEbvrC,0BAA2B,KAC3B4rC,aAAc,O,EAGhBC,WAAa,SAACD,GACZ,EAAK9uI,SAAS,CACZ8uI,kB,EAIJ/2D,aAAe,WACb,EAAK/3E,SAAS,CACZ8uI,aAAc,Q,EAIlBE,8BAAgC,SAC9BrxC,GAIA,KACGA,GACDA,IAAoB,EAAK/9F,MAAM+uI,yBAE3B,EAAK/uI,MAAMsjG,0BACb,OAAOr6F,QAAQhK,QAAQ,EAAKe,MAAMsjG,2BAItC,IAAM+rC,EACJtxC,GACA,EAAK/9F,MAAM+uI,wBACXN,EACInrC,EAA4B+rC,EAAmBX,iBAAiB,CACpEY,UAAW,EAAKH,WAChBI,YAAa,EAAKp3D,eAGpB,OAAO,IAAIlvE,SAAQ,SAAAhK,GACjB,EAAKmB,SACH,CACE2uI,uBAAwBM,EACxB/rC,8BAEF,WACErkG,EAAQqkG,U,EAMhBksC,oBAAsB,WACpB,OAAO,EAAKxvI,MAAM+uI,wBAA0BN,G,uDAGpC,IAAD,EACgC12I,KAAKN,MAApC9B,EADD,EACCA,SAAUioG,EADX,EACWA,iBADX,EAE6C7lG,KAAKiI,MAAjDkvI,EAFD,EAECA,aAActsC,EAFf,EAEeA,0BAEtB,OACE,gBAAC,WAAD,KACGjtG,EAAS,CACRioG,mBACA6E,6BAA8B1qG,KAAKq3I,8BACnCxsC,4BACAF,mBAAoB3qG,KAAKy3I,sBAE1BN,GAAgBA,S,GA9E4Bz5I,c,gKC7EhCg6I,E,WA0BnB,cA+BI,IAAD,OA9BDxyI,EA8BC,EA9BDA,QACAwuB,EA6BC,EA7BDA,OACAmR,EA4BC,EA5BDA,UACAogG,EA2BC,EA3BDA,aACA0S,EA0BC,EA1BDA,kBACAC,EAyBC,EAzBDA,uBACAxM,EAwBC,EAxBDA,wBACAyM,EAuBC,EAvBDA,eACAC,EAsBC,EAtBDA,cACAC,EAqBC,EArBDA,eACAC,EAoBC,EApBDA,kBACAC,EAmBC,EAnBDA,eAmBC,oBACDj4I,KAAKkF,QAAUA,EACflF,KAAK6kC,UAAYA,EACjB7kC,KAAK0zB,OAASA,EACd1zB,KAAKilI,aAAeA,EACpBjlI,KAAK23I,kBAAoBA,EACzB33I,KAAK43I,uBAAyBA,EAC9B53I,KAAKorI,wBAA0BA,EAC/BprI,KAAK63I,eAAiBA,EACtB73I,KAAK83I,cAAgBA,EACrB93I,KAAK+3I,eAAiBA,EACtB/3I,KAAKg4I,kBAAoBA,EACzBh4I,KAAKi4I,eAAiBA,EAEtBj4I,KAAKk4I,gBAAkB,GAEvBl4I,KAAK6zB,cAAgB,IAAIrB,YAEzBxyB,KAAKm4I,mBAAqB,IAAI/yF,IAE9BplD,KAAKo4I,iBAAmB,CACtBC,gBAAiB,SAAC1kH,EAAUmgC,GAC1B,IAAMma,EAAYt6C,EAASk6C,WACrByqE,EAAgB,EAAKJ,gBAAgBjqE,GAC3C,OAAKqqE,EAQEA,EAAcD,gBAAgB1kH,EAAUmgC,IAP7CA,EAAO51C,KAAOyV,EAAS6c,OACvBsjB,EAAO1wD,IAAMuwB,EAAS+c,OACtBojB,EAAOj0B,MAAQlM,EAAS6c,OACxBsjB,EAAO3V,OAASxqB,EAAS+c,OAClBojB,IAKXykF,yBAA0B,SAAC5kH,EAAUmgC,GACnC,IAAMma,EAAYt6C,EAASk6C,WACrByqE,EAAgB,EAAKJ,gBAAgBjqE,GAC3C,OAAKqqE,EAQEA,EAAcC,yBAAyB5kH,EAAUmgC,IAPtDA,EAAO51C,KAAOyV,EAAS6c,OACvBsjB,EAAO1wD,IAAMuwB,EAAS+c,OACtBojB,EAAOj0B,MAAQlM,EAAS6c,OACxBsjB,EAAO3V,OAASxqB,EAAS+c,OAClBojB,IAMX0kF,gBAAiB,SAAA7kH,GACf,IAAM8kH,EAAO,EAAKL,iBAAiBC,gBACjC1kH,EACA,EAAKwkH,oBAEP,MAAO,CACLr/F,EAAG2/F,EAAKv6H,KACR66B,EAAG0/F,EAAKr1I,IACRF,MAAOu1I,EAAKv1I,QACZ2G,OAAQ4uI,EAAK5uI,Y,+DAOnB,OAAO7J,KAAK6zB,gB,4CAIZ,OAAO7zB,KAAKo4I,mB,+BAIZ,IAAK,IAAIn5I,EAAI,EAAGA,EAAIe,KAAK0zB,OAAOo/G,iBAAkB7zI,IAAK,CACrD,IAAMq0F,EAAQtzF,KAAK0zB,OAAOq/G,WAAW9zI,GAC/BgvE,EAAYqlB,EAAM5jE,UAEpB4oH,EAAgBt4I,KAAKk4I,gBAAgBjqE,GACpCqqE,IACHt4I,KAAKk4I,gBAAgBjqE,GAAaqqE,EAAgB,IAAII,IAAc,CAClExzI,QAASlF,KAAKkF,QACdwuB,OAAQ1zB,KAAK0zB,OACbmR,UAAW7kC,KAAK6kC,UAChBogG,aAAcjlI,KAAKilI,aACnB3xC,MAAOA,EACPqkD,kBAAmB33I,KAAK23I,kBACxBC,uBAAwB53I,KAAK43I,uBAC7BxM,wBAAyBprI,KAAKorI,wBAC9ByM,eAAgB73I,KAAK63I,eACrBC,cAAe93I,KAAK83I,cACpBC,eAAgB/3I,KAAK+3I,eACrBC,kBAAmBh4I,KAAKg4I,kBACxBC,eAAgBj4I,KAAKi4I,iBAEvBj4I,KAAK6zB,cAAci2C,SAASwuE,EAAcK,qBAO5CL,EAAchlD,MAAQA,EACtBglD,EAAc74G,SAAU,EACxB64G,EAAcK,mBAAmBC,OAAS35I,EAC1Cq5I,EAAcO,SAGhB74I,KAAK84I,2BACL94I,KAAK+4I,+B,iDAIL/4I,KAAK6zB,cAAcj2B,SAASm/C,MAAK,SAACnsC,EAAG4R,GAGnC,OAFA5R,EAAEgoI,OAAShoI,EAAEgoI,QAAU,EACvBp2H,EAAEo2H,OAASp2H,EAAEo2H,QAAU,EAChBhoI,EAAEgoI,OAASp2H,EAAEo2H,Y,gDASEzuH,GACxB,IAAK,IAAIlrB,KAAKe,KAAKk4I,gBAAiB,CAClC,GAAIl4I,KAAKk4I,gBAAgB1kH,eAAev0B,GAChBe,KAAKk4I,gBAAgBj5I,GAC7BirI,0BAA0B//G,M,mDAS5C,IAAK,IAAIlrB,KAAKe,KAAKk4I,gBACjB,GAAIl4I,KAAKk4I,gBAAgB1kH,eAAev0B,GAAI,CAC1C,IAAMq5I,EAAgBt4I,KAAKk4I,gBAAgBj5I,GACtCq5I,EAAc74G,QAIZ64G,EAAc74G,SAAU,GAH7Bz/B,KAAK6zB,cAAc6L,YAAY44G,EAAcK,oBAC7CL,EAAcvlI,gBACP/S,KAAKk4I,gBAAgBj5I,O,+BAQlC,IAAK,IAAIA,KAAKe,KAAKk4I,gBACbl4I,KAAKk4I,gBAAgB1kH,eAAev0B,IACtCe,KAAKk4I,gBAAgBj5I,GAAG8T,SAK5B/S,KAAK6zB,cAAcmlH,c,aC5NR,SAASC,EAAcC,EAAvB,GAAiE,IAAxBpgG,EAAuB,EAAvBA,EAAGC,EAAoB,EAApBA,EAAG71C,EAAiB,EAAjBA,MAAO2G,EAAU,EAAVA,OAC7DsvI,EAAWD,EAAepgG,EAAGC,GAC7BqgG,EAASF,EAAepgG,EAAI51C,EAAO61C,EAAIlvC,GAC7C,MAAO,CACLivC,EAAGqgG,EAAS,GACZpgG,EAAGogG,EAAS,GACZj2I,MAAOk2I,EAAO,GAAKD,EAAS,GAC5BtvI,OAAQuvI,EAAO,GAAKD,EAAS,I,oBCQpBE,EAA+B,CAC1C,UACA,aACA,cACA,WACA,MACA,OACA,SACA,SAGWC,EAAkC,CAC7CC,QAAS,CAAC,EAAG,GACbC,WAAY,CAAC,EAAG,GAChBC,YAAa,CAAC,EAAG,GACjBC,SAAU,CAAC,EAAG,GACdC,IAAK,CAAC,GAAK,GACXC,KAAM,CAAC,EAAG,IACVC,OAAQ,CAAC,GAAK,GACdC,MAAO,CAAC,EAAG,KAGAC,EAAa,SAACC,GAAD,MACX,QAAbA,GAAmC,WAAbA,GAEXC,EAAa,SAACD,GAAD,MACX,SAAbA,GAAoC,UAAbA,GASJE,E,WAmBnB,cAMI,IALF9B,EAKC,EALDA,iBACA1/F,EAIC,EAJDA,wBAIC,yBApBHyhG,sBAAoC,KAoBjC,KAnBHC,wBAAmD,GAmBhD,KAlBHC,eAA0C,GAkBvC,KAjBHC,mBAA6D,GAiB1D,KAdHC,YAAsB,EAcnB,KAbHC,YAAsB,EAanB,KARHC,2BAA+C,CAAC,EAAG,GASjDz6I,KAAKo4I,iBAAmBA,EACxBp4I,KAAK04C,wBAA0BA,E,uEAGNA,GACzB14C,KAAK04C,wBAA0BA,I,+CAGR/kB,GACvB,IAAM+mH,EAAsB16I,KAAKq6I,eAAe1mH,EAASvuB,KACzD,OAAIs1I,IAEI16I,KAAKq6I,eACX1mH,EAASvuB,KACPpF,KAAKo4I,iBAAiBC,gBAAgB1kH,EAAU,IAAIyxB,Q,wDAGxBzxB,GAChC,IAAMgnH,EAA+B36I,KAAKo6I,wBACxCzmH,EAASvuB,KAEX,OAAIu1I,IAEI36I,KAAKo6I,wBACXzmH,EAASvuB,KACPpF,KAAKo4I,iBAAiBG,yBACxB5kH,EACA,IAAIyxB,Q,yDAI2BzxB,GACjC,IAAMinH,EAAkB56I,KAAKs6I,mBAAmB3mH,EAASvuB,KACzD,OAAIw1I,IAEI56I,KAAKs6I,mBAAmB3mH,EAASvuB,KAAO,CAC9C0zC,EAAGnlB,EAAS6c,OACZuI,EAAGplB,EAAS+c,W,gDAIU7L,GACxB,IAAIg2G,EAAuB76I,KAAKm6I,sBAChC,GAAIU,EACF,OAAOA,EAET,IAAKh2G,EAAUx7B,OAAQ,OAAO,MAC9BwxI,EAAuB,IAAIz1F,KACN01F,aACnB96I,KAAK+6I,yBAAyBl2G,EAAU,KAE1C,IAAK,IAAI5lC,EAAI,EAAGA,EAAI4lC,EAAUx7B,OAAQpK,IACpC47I,EAAqBG,MAAMh7I,KAAK+6I,yBAAyBl2G,EAAU5lC,KAGrE,OADAe,KAAKm6I,sBAAwBU,EACtBA,I,+BAIPh2G,EACA29D,EACArtC,EACA8lF,EACAC,GAEAl7I,KAAKu6I,aAAe/3C,EACpBxiG,KAAKw6I,aAAerlF,EAEpB,IAAMgmF,EAAqBt2G,EAAU17B,QACnC,SAAAwqB,GAAQ,OAAKA,EAASo0G,cAGlB8S,EAAuB76I,KAAKo7I,0BAChCD,GAEF,GAAKN,EAAL,CAGA,IAAMQ,EACJ/B,EAAgC2B,GAC5BK,EACJT,EAAqB38H,KACrB28H,EAAqB33I,QAAUm4I,EAAyB,GACpDE,EACJV,EAAqBz3I,IACrBy3I,EAAqBhxI,SAAWwxI,EAAyB,GACrDG,EAAmBx7I,KAAKy6I,2BAC9Be,EAAiB,GAAKF,EAAmBt7I,KAAKu6I,YAC9CiB,EAAiB,GAAKD,EAAmBv7I,KAAKw6I,YAE5Cx6I,KAAK04C,wBAAwBmqD,MAC7B7iG,KAAK04C,wBAAwBgsB,KAE7B+9B,YACE+4C,EACAx7I,KAAK04C,wBAAwBupD,UAC7BjiG,KAAK04C,wBAAwBwpD,WAC7BliG,KAAK04C,wBAAwBypD,YAC7BniG,KAAK04C,wBAAwB0pD,YAC7BpiG,KAAK04C,wBAAwB2pD,WAI/Bm5C,EAAiB,GAAKjlI,KAAK0H,MAAMu9H,EAAiB,IAClDA,EAAiB,GAAKjlI,KAAK0H,MAAMu9H,EAAiB,KAEpD,IAAIC,EAAqBD,EAAiB,GAAKF,EAC3CI,EAAqBF,EAAiB,GAAKD,EAE1CxB,EAAWkB,KACdQ,EAAqB,GAElBxB,EAAWgB,KACdS,EAAqB,GAGvB,IAYMC,EAXiB,YAArBV,GACqB,eAArBA,GACqB,SAArBA,GAUGQ,EACDA,EACEG,EAViB,YAArBX,GACqB,aAArBA,GACqB,QAArBA,GAQkCS,EAAqBA,EAErDG,EAC+B,IAAjChB,EAAqB33I,SAChB23I,EAAqB33I,QAAUy4I,GAChCd,EAAqB33I,QACrBy4I,EACFG,EACgC,IAAlCjB,EAAqBhxI,UAChBgxI,EAAqBhxI,SAAW+xI,GACjCf,EAAqBhxI,SACrB+xI,EAEAG,EAjLyB,SAACl3G,GAClC,IAAK,IAAI5lC,EAAI,EAAGA,EAAI4lC,EAAUx7B,OAAQpK,IACpC,GAAI4lC,EAAU5lC,GAAG2uH,WAAa,KAAO,EAAG,OAAO,EAEjD,OAAO,EA6KsBouB,CAA2Bb,IAMlDD,GAAgBa,MAIf9B,EAAWgB,IACXlB,EAAWkB,IACVU,EAAqBd,EAAqBhxI,SACxC+xI,EAAqBf,EAAqB33I,QAE9C44I,EAASD,EAETA,EAASC,GAObD,EAAStlI,KAAK1T,IACqB,IAAjCg4I,EAAqB33I,QACjB,EAAI23I,EAAqB33I,QACzB,KACJ24I,GAEFC,EAASvlI,KAAK1T,IACsB,IAAlCg4I,EAAqBhxI,SACjB,EAAIgxI,EAAqBhxI,SACzB,KACJiyI,GAYF,IATA,IAAMG,EACJpB,EAAqBh7G,MACrBy5G,EAAgC2B,GAAkB,GAChDJ,EAAqB33I,QACnBg5I,EACJrB,EAAqB18F,OACrBm7F,EAAgC2B,GAAkB,GAChDJ,EAAqBhxI,SAEhB5K,EAAI,EAAGA,EAAIk8I,EAAmB9xI,OAAQpK,IAAK,CAClD,IAAMk9I,EAAmBhB,EAAmBl8I,GAExC07I,EAA+B36I,KAAKo8I,kCACtCD,GAEEE,EAAgCr8I,KAAKs8I,mCACvCH,GAKII,EACqC,IAAzC5B,EAA6Bz3I,QACzBy3I,EAA6Bz3I,QAC7B,EACAs5I,EACsC,IAA1C7B,EAA6B9wI,SACzB8wI,EAA6B9wI,SAC7B,EAQA4yI,GAAUN,EAAiBvuB,WAAa,IAAO,KAAO,IAC5D,GACGstB,GACAa,GACU,KAAVU,GAA0B,MAAVA,EA6BjBN,EAAiBO,eAAeb,EAASU,GACzCJ,EAAiBQ,gBAAgBb,EAASU,GAC1CL,EAAiBS,kBAAiB,GAElCT,EAAiB5rG,MACd8rG,EAA8BvjG,EAAImjG,GAAeJ,EAASI,GAE7DE,EAAiB1rG,MACd4rG,EAA8BtjG,EAAImjG,GAAeJ,EAASI,OApC7D,CACAC,EAAiBO,eAAeZ,EAASS,GACzCJ,EAAiBQ,gBAAgBd,EAASW,GAC1CL,EAAiBS,kBAAiB,GAKlC,IAAMtL,GACHqJ,EAA6BrJ,UAAY2K,GAAeJ,EACzDI,EACI1K,GACHoJ,EAA6BpJ,UAAY2K,GAAeJ,EACzDI,EAIIW,EACJf,GACCO,EAA8BvjG,EAC7B6hG,EAA6BrJ,WAC3BwL,EACJjB,GACCQ,EAA8BtjG,EAC7B4hG,EAA6BpJ,WACjC4K,EAAiB5rG,KAAK+gG,EAAUuL,GAChCV,EAAiB1rG,KAAK8gG,EAAUuL,Q,kCAiBpC98I,KAAKm6I,sBAAwB,KAC7Bn6I,KAAKo6I,wBAA0B,GAC/Bp6I,KAAKq6I,eAAiB,GACtBr6I,KAAKs6I,mBAAqB,GAC1Bt6I,KAAKu6I,YAAc,EACnBv6I,KAAKw6I,YAAc,M,KCxSjBuC,EAA0B,CAC9BxD,QAAS,cACTC,WAAY,cACZC,YAAa,cACbC,SAAU,cACVC,IAAK,YACLC,KAAM,YACNC,OAAQ,YACRC,MAAO,aAMYkD,E,WAoBnB,cASW,IAAD,OARR/Z,EAQQ,EARRA,mBACAmV,EAOQ,EAPRA,iBACA6E,EAMQ,EANRA,SACAC,EAKQ,EALRA,YACAC,EAIQ,EAJRA,SACAC,EAGQ,EAHRA,YACA3jG,EAEQ,EAFRA,oBACA+E,EACQ,EADRA,WACQ,yBAfV3qB,cAAgB,IAAIrB,YAeV,KAdV6qH,oBAAsB,IAAI7qH,YAchB,KAbV8qH,mBAAqB,GAaX,KAZVC,cAA6D,GAYnD,KAXVC,aAAe,IAAIhrH,WAYjBxyB,KAAKo4I,iBAAmBA,EACxBp4I,KAAKi9I,SAAWA,EAChBj9I,KAAKk9I,YAAcA,EACnBl9I,KAAKm9I,SAAWA,EAChBn9I,KAAKo9I,YAAcA,EACnBp9I,KAAKy5C,oBAAsBA,EAC3Bz5C,KAAKijI,mBAAqBA,EAC1BjjI,KAAKy9I,YAAcj/F,EAEnBx+C,KAAK6zB,cAAci2C,SAAS9pE,KAAKq9I,qBAVzB,oBAY6BhE,GAZ7B,yBAYGqE,EAZH,QAaAC,EAAe,IAAInrH,WACzB,EAAK+qH,cAAcG,GAA0BC,EAC7C,EAAKC,YACHD,GACA,SAAA/8I,GACE,EAAKq8I,SAASr8I,EAAM4hG,OAAQ5hG,EAAMu0D,OAAQuoF,MAE5C,WACE,EAAKR,gBAEPH,EAAwBW,KAX5B,2BAAoE,IAZ5D,8BA0BR19I,KAAK49I,YACH59I,KAAKw9I,cACL,SAAA58I,GACE,EAAKu8I,SAASv8I,EAAM4hG,OAAQ5hG,EAAMu0D,WAEpC,WACE,EAAKioF,gBAEP,wC,0DAIU5+F,GACZx+C,KAAKy9I,YAAcj/F,I,kCAInBq/F,EACAhmB,EACAimB,EACA74H,GAEA44H,EAAaE,aAAc,EAC3BF,EAAaG,YAAa,EAC1BH,EAAa54H,OAASA,EACtBg5H,IAAQC,QAAQL,GAChBA,EAAaM,GAAG,UAAWtmB,GAC3BgmB,EAAaM,GAAG,SAAUL,GAC1B99I,KAAK6zB,cAAci2C,SAAS+zE,K,yCAI5B,OAAO79I,KAAK6zB,gB,oCAIZwqB,EACA+/F,EACAC,EACAvgJ,EACAwgJ,EACAC,GAEAH,EAAaltG,QACRmN,GAKL+/F,EAAaI,UAAU,UACvBJ,EAAaK,UAAU,EAAG,QAAU,GACpCL,EAAarsE,KAAKxuD,MAAQ,GA3HC,IA4HvB+6H,EACFF,EAAaM,SAASL,EAAe,GAAIA,EAAe,GAAIvgJ,EAAMA,GA5H5C,IA6HbwgJ,GACTF,EAAaO,WACXN,EAAe,GAAKvgJ,EAAO,EAC3BugJ,EAAe,GAAKvgJ,EAAO,EAC3BA,EAAO,GAIXsgJ,EAAaQ,UACbR,EAAaS,QAAU,IAAIrsH,YACzB6rH,EAAe,GAAKE,EACpBF,EAAe,GAAKE,EACpBzgJ,EAAwB,EAAjBygJ,EACPzgJ,EAAwB,EAAjBygJ,IAtBPH,EAAaS,QAAU,IAAIrsH,YAAe,EAAG,EAAG,EAAG,K,+BAyCrD,IAfQ,IAAD,EAhKU,UAsKExyB,KAAKy9I,YArKjB,CACLqB,cAAe,GACfC,gBAAiB,GACjBC,cAAe,EACfT,eAAgB,IAIb,CACLO,cAAe,GACfC,gBAAiB,EACjBC,cAAe,EACfT,eAAgB,GAqJdO,EAFK,EAELA,cACAC,EAHK,EAGLA,gBACAC,EAJK,EAILA,cACAT,EALK,EAKLA,eAEIt+F,EAAYjgD,KAAKijI,mBAAmB11D,uBACtC0xE,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,GAAc,EAGTpgJ,EAAI,EAAGA,EAAIghD,EAAU52C,OAAQpK,IAAK,CACzC,GAAIe,KAAKs9I,mBAAmBj0I,SAAWpK,EAAG,CACxC,IAAMqgJ,EAAe,IAAI9sH,WACzB8sH,EAAaT,QAAU,IAAIrsH,YAAe,EAAG,EAAG,EAAG,GACnDxyB,KAAKs9I,mBAAmBp+I,KAAKogJ,GAC7Bt/I,KAAKq9I,oBAAoBvzE,SAASw1E,GAGpC,IAAM3rH,EAAWssB,EAAUhhD,GACrBsgJ,EAAev/I,KAAKo4I,iBAAiBI,gBAAgB7kH,GACrD6rH,EAAqBvG,EACzBj5I,KAAKy5C,oBACL8lG,GAGFv/I,KAAKs9I,mBAAmBr+I,GAAGiyC,QAC3B,IAAMuuG,EAA0B9rH,EAASo0G,WAAa,SAAW,QACjE/nI,KAAKs9I,mBAAmBr+I,GAAGu/I,UAAUiB,GACrCz/I,KAAKs9I,mBAAmBr+I,GAAGw/I,UAAU,EAAGgB,EAAyB,GACjEz/I,KAAKs9I,mBAAmBr+I,GAAG8yE,KAAKxuD,MAAQ,GACxCvjB,KAAKs9I,mBAAmBr+I,GAAGskB,MAAQ,GACnCvjB,KAAKs9I,mBAAmBr+I,GAAGy/I,SACzBc,EAAmB1mG,EACnB0mG,EAAmBzmG,EACnBymG,EAAmBt8I,MACnBs8I,EAAmB31I,QAErB7J,KAAKs9I,mBAAmBr+I,GAAG2/I,UAEvBjrH,EAASo0G,aAGRsX,GAOCE,EAAazmG,EAAImmG,IAAIA,EAAKM,EAAazmG,GACvCymG,EAAaxmG,EAAImmG,IAAIA,EAAKK,EAAaxmG,GACvCwmG,EAAazmG,EAAIymG,EAAar8I,MAAQi8I,IACxCA,EAAKI,EAAazmG,EAAIymG,EAAar8I,OACjCq8I,EAAaxmG,EAAIwmG,EAAa11I,OAASu1I,IACzCA,EAAKG,EAAaxmG,EAAIwmG,EAAa11I,UAXrCo1I,EAAKM,EAAazmG,EAClBomG,EAAKK,EAAaxmG,EAClBomG,EAAKI,EAAazmG,EAAIymG,EAAar8I,MACnCk8I,EAAKG,EAAaxmG,EAAIwmG,EAAa11I,OACnCw1I,GAAc,IAWlB,KAAOr/I,KAAKs9I,mBAAmBj0I,OAAS42C,EAAU52C,QAChDrJ,KAAKq9I,oBAAoB39G,YAAY1/B,KAAKs9I,mBAAmBx2H,OAI/D,IApEO,EAoEDu3B,EAC0D,IAA9D4B,EAAU92C,QAAO,SAAAwqB,GAAQ,OAAKA,EAASo0G,cAAY1+H,OArE9C,cAwEwBgwI,GAxExB,IAwEP,2BAA6D,CAAC,IAAnD4B,EAAkD,QACrD0C,EAAe39I,KAAKu9I,cAActC,GAClCyE,EACJpG,EAAgC2B,GAI5B0E,EADJ5F,EAAWkB,IAAqBhB,EAAWgB,GACX6D,EAAgBC,EAC5Cl7I,EAAUm7I,EAAgBW,EAAa,EACvCC,EAAkB5/I,KAAKy5C,oBAC3BwlG,EAAKp7I,EAAU67I,EAAkB,IAAMP,EAAKF,EAAK,EAAIp7I,GACrDq7I,EAAKr7I,EAAU67I,EAAkB,IAAMN,EAAKF,EAAK,EAAIr7I,IAEvD+7I,EAAgB,IAAMD,EAAa,EACnCC,EAAgB,IAAMD,EAAa,EAEnC3/I,KAAK6/I,cACHxhG,EACAs/F,EACAiC,EACAD,EA3OuB,EA6OvBpB,IA9FG,8BAkGP,IAAMuB,EAAkB9/I,KAAKy5C,oBAAoBwlG,GAAME,EAAKF,GAAM,EAAGC,GACrEY,EAAgB,IAAMf,EAAkB,EACxCe,EAAgB,IAAsB,EAAhBd,EAEtBh/I,KAAK6/I,cACHxhG,EACAr+C,KAAKw9I,aACLsC,EACAf,EAxPsB,EA0PtBR,O,KCvSejxE,E,WACnB,cAAwD,IAA1C8qE,EAAyC,EAAzCA,iBAAkB3+F,EAAuB,EAAvBA,oBAAuB,oBACrDz5C,KAAKo4I,iBAAmBA,EACxBp4I,KAAKy5C,oBAAsBA,EAE3Bz5C,KAAK+/I,oBAAsB,KAC3B//I,KAAKggJ,mBAAqB,IAAIxtH,WAC9BxyB,KAAKggJ,mBAAmBnB,QAAU,IAAIrsH,YAAe,EAAG,EAAG,EAAG,GAE9DxyB,KAAKigJ,kBAAoB,IAAIztH,WAC7BxyB,KAAK6e,YAAc,IAAI2T,OAAU,GAAI,CACnCrwB,SAAU,GACV4vE,KAAM,SACN/zE,MAAO,WAETgC,KAAKggJ,mBAAmBl2E,SAAS9pE,KAAKigJ,mBACtCjgJ,KAAKggJ,mBAAmBl2E,SAAS9pE,KAAK6e,a,wDAG5B8U,GACV3zB,KAAK+/I,oBAAsBpsH,I,oCAI3B,OAAO3zB,KAAK+/I,sB,oCAGApsH,GACZ,OAAO3zB,KAAKggJ,qB,+BAIZ,GAAiC,OAA7BhgJ,KAAK+/I,oBAAT,CAKA,IAAMC,EAAqB/G,EACzBj5I,KAAKy5C,oBACLz5C,KAAKo4I,iBAAiBI,gBAAgBx4I,KAAK+/I,sBAG7C//I,KAAKggJ,mBAAmBjpF,SAAU,EAClC/2D,KAAKggJ,mBAAmB9uG,QACxBlxC,KAAKggJ,mBAAmBxB,UAAU,UAClCx+I,KAAKggJ,mBAAmBjuE,KAAKxuD,MAAQ,GACrCvjB,KAAKggJ,mBAAmBz8H,MAAQ,GAChCvjB,KAAKggJ,mBAAmBvB,UAAU,EAAG,EAAU,GAC/Cz+I,KAAKggJ,mBAAmBtB,SACtBsB,EAAmBlnG,EACnBknG,EAAmBjnG,EACnBinG,EAAmB98I,MACnB88I,EAAmBn2I,QAErB7J,KAAKggJ,mBAAmBpB,UAExB,IAAMsB,EACJlgJ,KAAK+/I,oBAAoB/xE,gBAAzBhuE,QAGAgjB,SAAShjB,KAAK+/I,oBAAoBvvG,QAClC,QACAxtB,SAAShjB,KAAK+/I,oBAAoBrvG,QALlC1wC,YAQAA,KAAK+/I,oBAAoBlyE,WACzB,QACA7tE,KAAK+/I,oBAAoBI,YACzB,KACFngJ,KAAK6e,YAAY1W,KAAO+3I,EAExBlgJ,KAAK6e,YAAYi6B,EAAIviC,KAAK0H,MACxB+hI,EAAmBlnG,EACjB94C,KAAK6e,YAAY3b,MAAQ,EACzB88I,EAAmB98I,MAAQ,GAE/BlD,KAAK6e,YAAYk6B,EAAIxiC,KAAK0H,MACxB+hI,EAAmBjnG,EAAI/4C,KAAK6e,YAAYhV,QAI1C7J,KAAKigJ,kBAAkB/uG,QACvBlxC,KAAKigJ,kBAAkBzB,UAAU,EAAU,IAC3Cx+I,KAAKigJ,kBAAkBG,gBACrBpgJ,KAAK6e,YAAYi6B,EAJH,EAKd94C,KAAK6e,YAAYk6B,EALH,EAMd/4C,KAAK6e,YAAY3b,MAAQW,GACzB7D,KAAK6e,YAAYhV,OAPH,EAQd,GAEF7J,KAAKigJ,kBAAkBrB,eAzDrB5+I,KAAKggJ,mBAAmBjpF,SAAU,M,eCjCnBspF,E,WAuBnB,WAAYjI,GAAwB,yBAlBpCkI,gBAAwC,GAkBL,KAjBnChG,mBAA+D,GAiB5B,KAhBnCD,eAA0C,GAgBP,KAdnCE,YAAsB,EAca,KAbnCC,YAAsB,EAaa,KARnC+F,uBAAiC,EAQE,KAFnCC,YAAgC,CAAC,EAAG,GAGlCxgJ,KAAKygJ,kBAAoBrI,E,yDAGd8C,EAAuBwF,GAMlC,IAAMjE,EAC8C,IAAjDlmI,KAAKoqI,MAAM3gJ,KAAKw6I,YAAax6I,KAAKu6I,aAAsBhkI,KAAKgjC,GAC9D,GACAmnG,EACF,OAAOxF,EAAwC,GAAzB3kI,KAAK0H,MAAMw+H,EAAQ,IAAWA,I,+CAG7B9oH,GACvB,IAAMitH,EAAc5gJ,KAAKq6I,eAAe1mH,EAASvuB,KACjD,OAAIw7I,IAEI5gJ,KAAKq6I,eACX1mH,EAASvuB,KACPpF,KAAKygJ,kBAAkBpI,gBAAgB1kH,EAAU,IAAIyxB,Q,yDAGxBzxB,GACjC,IAAMinH,EAAkB56I,KAAKs6I,mBAAmB3mH,EAASvuB,KACzD,OAAIw1I,IAEI56I,KAAKs6I,mBAAmB3mH,EAASvuB,KAAO,CAC9C0zC,EAAGnlB,EAAS6c,OACZuI,EAAGplB,EAAS+c,W,gDAIU/c,GACxB,IAAM+sH,EAAe1gJ,KAAKsgJ,gBAAgB3sH,EAASvuB,KACnD,YAAqB7G,IAAjBmiJ,EAAmCA,EAE/B1gJ,KAAKsgJ,gBAAgB3sH,EAASvuB,KAAOuuB,EAASi6F,a,+BAItD/oF,EACA29D,EACArtC,EACA+lF,GAEA,IAAMC,EAAqBt2G,EAAU17B,QACnC,SAAAwqB,GAAQ,OAAKA,EAASo0G,cAGxB,IAAK/nI,KAAKugJ,sBAAuB,CAC/BvgJ,KAAKugJ,uBAAwB,EAC7B,IAAIM,EAAgB,IAAIz7F,IACxBy7F,EAAc/F,aACZ96I,KAAK+6I,yBAAyBI,EAAmB,KAEnD,IAAK,IAAIl8I,EAAI,EAAGA,EAAIk8I,EAAmB9xI,OAAQpK,IAC7C4hJ,EAAc7F,MACZh7I,KAAK+6I,yBAAyBI,EAAmBl8I,KAGrDe,KAAKwgJ,YAAY,GAAKK,EAAcvP,UACpCtxI,KAAKwgJ,YAAY,GAAKK,EAActP,UAIpCvxI,KAAKw6I,aAAeqG,EAAch3I,SAAW,EAG/C7J,KAAKu6I,aAAe/3C,EACpBxiG,KAAKw6I,aAAerlF,EAEpB,IAAK,IAAIl2D,EAAI,EAAGA,EAAIk8I,EAAmB9xI,OAAQpK,IAAK,CAClD,IAAMk9I,EAAmBhB,EAAmBl8I,GAEtC2hJ,EAAc5gJ,KAAK+6I,yBAAyBoB,GAC5CuE,EAAe1gJ,KAAK8gJ,0BAA0B3E,GAC9CE,EAAgCr8I,KAAKs8I,mCACzCH,GAGI4E,EAAc/gJ,KAAKghJ,aAAa9F,EAAcwF,GACpDvE,EAAiB8E,UAAWF,EAAc,IAAO,KAAO,KAExD,IAAMG,GAAkBH,EAAcL,GAAgBnqI,KAAKgjC,GAAM,IAC3D4nG,EAAO5qI,KAAK8iC,KAAK6nG,GACjBE,EAAO7qI,KAAKijC,KAAK0nG,GACjB1+C,EAASo+C,EAAYtP,UAAYtxI,KAAKwgJ,YAAY,GAClDrrF,EAASyrF,EAAYrP,UAAYvxI,KAAKwgJ,YAAY,GACxDrE,EAAiB5rG,KACfvwC,KAAKwgJ,YAAY,IACdnE,EAA8BvjG,EAAI8nG,EAAYtP,WAC/C6P,EAAO3+C,EACP4+C,EAAOjsF,GAEXgnF,EAAiB1rG,KACfzwC,KAAKwgJ,YAAY,IACdnE,EAA8BtjG,EAAI6nG,EAAYrP,WAC/C6P,EAAO5+C,EACP2+C,EAAOhsF,M,kCAMbn1D,KAAKsgJ,gBAAkB,GACvBtgJ,KAAKs6I,mBAAqB,GAC1Bt6I,KAAKq6I,eAAiB,GACtBr6I,KAAKu6I,YAAc,EACnBv6I,KAAKw6I,YAAc,EACnBx6I,KAAKugJ,uBAAwB,M,KCtIZc,E,WAWnB,cAMI,IALFjJ,EAKC,EALDA,iBACA1/F,EAIC,EAJDA,wBAIC,yBAVHyhG,sBAAoC,KAUjC,KATHmH,QAAkB,EASf,KARHC,QAAkB,EAShBvhJ,KAAKo4I,iBAAmBA,EACxBp4I,KAAK04C,wBAA0BA,EAC/B14C,KAAKwhJ,kBAAoB,GACzBxhJ,KAAKu6I,YAAc,EACnBv6I,KAAKw6I,YAAc,EACnBx6I,KAAKyhJ,gBAAkB,CAAC,EAAG,G,uEAGF/oG,GACzB14C,KAAK04C,wBAA0BA,I,qCAI/B6hG,EACAC,EACAkH,GAEA,OAAIA,GAAcnrI,KAAK2iC,IAAIqhG,GAAehkI,KAAK2iC,IAAIshG,GAAqB,EAEjED,I,qCAIPA,EACAC,EACAkH,GAEA,OAAIA,GAAcnrI,KAAK2iC,IAAIshG,GAAejkI,KAAK2iC,IAAIqhG,GAAqB,EAEjEC,I,gDAGiB31G,GACxB,GAAI7kC,KAAKm6I,sBACP,OAAOn6I,KAAKm6I,sBAEd,IAAKt1G,EAAUx7B,OAAQ,OAAO,KAC9B,IAAIwxI,EAAuB,IAAIz1F,IAC/BplD,KAAKo4I,iBAAiBC,gBAAgBxzG,EAAU,GAAIg2G,GAEpD,IADA,IAAMH,EAAsB,IAAIt1F,IACvBnmD,EAAI,EAAGA,EAAI4lC,EAAUx7B,OAAQpK,IACpCe,KAAKo4I,iBAAiBC,gBAAgBxzG,EAAU5lC,GAAIy7I,GACpDG,EAAqBG,MAAMN,GAG7B,OADA16I,KAAKm6I,sBAAwBU,EACtBA,I,gCAGC8G,EAAgBC,GACxB5hJ,KAAKshJ,QAAUK,EACf3hJ,KAAKuhJ,QAAUK,I,6BAIf/8G,EACA29D,EACArtC,EACAusF,EACAG,GAEA7hJ,KAAKu6I,aAAe/3C,EACpBxiG,KAAKw6I,aAAerlF,EAEpB,IAAMgmF,EAAqBt2G,EAAU17B,QACnC,SAAAwqB,GAAQ,OAAKA,EAASo0G,cAIlB8S,EAAuB76I,KAAKo7I,0BAChCD,GAEF,GAAKN,EAAL,CACA,IAAMiH,EAAa9hJ,KAAKshJ,QAAUzG,EAAqBvJ,UACjDyQ,EAAY/hJ,KAAKuhJ,QAAU1G,EAAqBtJ,UAEhDyQ,EAAiBF,EACnBjH,EAAqB38H,KACrB28H,EAAqBh7G,MACnBoiH,EAAiBF,EACnBlH,EAAqBz3I,IACrBy3I,EAAqB18F,OACnB+jG,EAAiBliJ,KAAKyhJ,gBAC5BS,EAAe,GAAKF,EAAiBhiJ,KAAKu6I,YAC1C2H,EAAe,GAAKD,EAAiBjiJ,KAAKw6I,YAExCx6I,KAAK04C,wBAAwBmqD,MAC7B7iG,KAAK04C,wBAAwBgsB,OAC5Bm9E,EAED9/C,YACEmgD,EACAliJ,KAAK04C,wBAAwBupD,UAC7BjiG,KAAK04C,wBAAwBwpD,WAC7BliG,KAAK04C,wBAAwBypD,YAC7BniG,KAAK04C,wBAAwB0pD,YAC7BpiG,KAAK04C,wBAAwB2pD,WAM/B6/C,EAAe,GAAK3rI,KAAK0H,MAAMikI,EAAe,IAC9CA,EAAe,GAAK3rI,KAAK0H,MAAMikI,EAAe,KAKhD,IAHA,IAAMzG,EAAqByG,EAAe,GAAKF,EACzCtG,EAAqBwG,EAAe,GAAKD,EAEtChjJ,EAAI,EAAGA,EAAIk8I,EAAmB9xI,OAAQpK,IAAK,CAClD,IAAMk9I,EAAmBhB,EAAmBl8I,GAExC27I,EAAkB56I,KAAKwhJ,kBAAkBrF,EAAiB/2I,KACzDw1I,IACHA,EAAkB56I,KAAKwhJ,kBAAkBrF,EAAiB/2I,KAAO,CAC/D0zC,EAAGqjG,EAAiB3rG,OACpBuI,EAAGojG,EAAiBzrG,SAGxByrG,EAAiB5rG,KACfqqG,EAAgB9hG,EACd94C,KAAKmiJ,eACH1G,EACAC,EACAgG,IAGNvF,EAAiB1rG,KACfmqG,EAAgB7hG,EACd/4C,KAAKoiJ,eACH3G,EACAC,EACAgG,Q,gCAOR1hJ,KAAKm6I,sBAAwB,KAC7Bn6I,KAAKwhJ,kBAAoB,GACzBxhJ,KAAKu6I,YAAc,EACnBv6I,KAAKw6I,YAAc,M,KCzJF6H,E,WAKnB,cAA+D,IAAjDpd,EAAgD,EAAhDA,aAAcvsF,EAAkC,EAAlCA,wBAAkC,yBAJ9D4pG,SAAW,IAAI9vH,WAKbxyB,KAAKilI,aAAeA,EACpBjlI,KAAK04C,wBAA0BA,EAE/B14C,KAAKsiJ,SAASzD,QAAU,IAAIrsH,YAAe,EAAG,EAAG,EAAG,G,uEAG3BkmB,GACzB14C,KAAK04C,wBAA0BA,I,sCAI/B,OAAO14C,KAAKsiJ,W,+BAIZ,IAAM5pG,EAA0B14C,KAAK04C,wBAErC,GAAKA,EAAwBgsB,KAA7B,CAKA,IAAMi+B,EAAYjqD,EAAwBiqD,UACpCC,EAAYlqD,EAAwBkqD,UAE1C5iG,KAAKsiJ,SAASvrF,SAAU,EACxB/2D,KAAKsiJ,SAASpxG,QACdlxC,KAAKsiJ,SAAS9D,UAAU77C,GACxB3iG,KAAKsiJ,SAAS7D,UAAU,EAAG97C,EAAW,GACtC3iG,KAAKsiJ,SAAS/+H,MAAQq/E,EAEtB,IAAM2/C,EAAkBviJ,KAAKilI,aAAapsF,mBAAmB,EAAG,GAC1D2pG,EAAgBxiJ,KAAKilI,aAAapsF,mBACtC74C,KAAKilI,aAAawd,WAClBziJ,KAAKilI,aAAayd,aAGdC,GACFjqG,EAAwBypD,YACxBzpD,EAAwBupD,UACxBvpD,EAAwBupD,WAC1BvpD,EAAwBupD,UACpB2gD,GACFlqG,EAAwB0pD,YACxB1pD,EAAwBwpD,WACxBxpD,EAAwBwpD,YAC1BxpD,EAAwBwpD,WAEpBy/C,EACJprI,KAAKomE,OACF4lE,EAAgB,GAAKI,GAAWjqG,EAAwBupD,WAEzDvpD,EAAwBupD,UAC1B0gD,EACIf,EACJrrI,KAAKomE,OACF4lE,EAAgB,GAAKK,GAAWlqG,EAAwBwpD,YAEzDxpD,EAAwBwpD,WAC1B0gD,EAEIC,EACJtsI,KAAK0pH,MACFuiB,EAAc,GAAKG,GAAWjqG,EAAwBupD,WAEvDvpD,EAAwBupD,UAC1B0gD,EACIG,EACJvsI,KAAK0pH,MACFuiB,EAAc,GAAKI,GAAWlqG,EAAwBwpD,YAEvDxpD,EAAwBwpD,WAC1B0gD,EAEF,GAAyC,cAArClqG,EAAwB2pD,SAA0B,CAQpD,IAPA,IAAM0gD,EAASxsI,KAAK0H,OACjB4kI,EAAOlB,GAAUjpG,EAAwBupD,WAEtC+gD,EAASzsI,KAAK0H,OACjB6kI,EAAOlB,GAAUlpG,EAAwBwpD,YAEtC+gD,EAAYF,EAASC,EAClB/jJ,EAAI,EAAGA,EAAIgkJ,IAAahkJ,EAAG,CAClC,IAAIikJ,OAAU,EACVC,OAAU,EACVlkJ,EAAI8jJ,GAENG,EACEvB,EACAjpG,EAAwBupD,UAAY,EACpChjG,EAAIy5C,EAAwBupD,UAC9BkhD,EAAavB,IAGbsB,EAAaL,EACbM,EACEvB,EACAlpG,EAAwBwpD,WAAa,GACpCjjG,EAAI8jJ,GAAUrqG,EAAwBwpD,YAE3C,IAAIkhD,OAAQ,EACRC,OAAQ,EACRpkJ,EAAI+jJ,GAENI,EAAWzB,EACX0B,EACEzB,EACAlpG,EAAwBwpD,WAAa,EACrCjjG,EAAIy5C,EAAwBwpD,aAG9BkhD,EACEzB,EACAjpG,EAAwBupD,UAAY,GACnChjG,EAAI+jJ,GAAUtqG,EAAwBupD,UACzCohD,EAAWP,GAEb,IAAMjkJ,EAAQmB,KAAKilI,aAAaxrF,oBAC9BypG,EACAC,GAEIrkJ,EAAMkB,KAAKilI,aAAaxrF,oBAAoB2pG,EAAUC,GAC5DrjJ,KAAKsiJ,SAASgB,OAAOzkJ,EAAM,GAAIA,EAAM,IACrCmB,KAAKsiJ,SAASiB,OAAOzkJ,EAAI,GAAIA,EAAI,IAEnC,IAAK,IAAIG,EAAI,EAAGA,EAAIgkJ,IAAahkJ,EAAG,CAClC,IAAIikJ,OAAU,EACVC,OAAU,EACVlkJ,EAAI+jJ,GAENE,EAAavB,EACbwB,EACEvB,EACAlpG,EAAwBwpD,WAAa,GACpC8gD,EAAS,EAAI/jJ,GAAKy5C,EAAwBwpD,aAG7CghD,EACEvB,EACAjpG,EAAwBupD,UAAY,GACnChjG,EAAI+jJ,GAAUtqG,EAAwBupD,UACzCkhD,EAAavB,GAEf,IAAIwB,OAAQ,EACRC,OAAQ,EACRpkJ,EAAI8jJ,GAENK,EACEzB,EACAjpG,EAAwBupD,UAAY,EACpChjG,EAAIy5C,EAAwBupD,UAC9BohD,EAAWP,IAGXM,EAAWP,EACXQ,EACEzB,EACAlpG,EAAwBwpD,WAAa,GACpC+gD,EAAY,EAAIhkJ,GAAKy5C,EAAwBwpD,YAElD,IAAMrjG,EAAQmB,KAAKilI,aAAaxrF,oBAC9BypG,EACAC,GAEIrkJ,EAAMkB,KAAKilI,aAAaxrF,oBAAoB2pG,EAAUC,GAC5DrjJ,KAAKsiJ,SAASgB,OAAOzkJ,EAAM,GAAIA,EAAM,IACrCmB,KAAKsiJ,SAASiB,OAAOzkJ,EAAI,GAAIA,EAAI,SAE9B,CACL,IAAK,IAAIg6C,EAAI6oG,EAAQ7oG,EAAI+pG,EAAM/pG,GAAKJ,EAAwBupD,UAAW,CACrE,IAAMpjG,EAAQmB,KAAKilI,aAAaxrF,oBAAoBX,EAAG8oG,GACjD9iJ,EAAMkB,KAAKilI,aAAaxrF,oBAAoBX,EAAGgqG,GAErD9iJ,KAAKsiJ,SAASgB,OAAOzkJ,EAAM,GAAIA,EAAM,IACrCmB,KAAKsiJ,SAASiB,OAAOzkJ,EAAI,GAAIA,EAAI,IAGnC,IAAK,IAAIi6C,EAAI6oG,EAAQ7oG,EAAI+pG,EAAM/pG,GAAKL,EAAwBwpD,WAAY,CACtE,IAAMrjG,EAAQmB,KAAKilI,aAAaxrF,oBAAoBkoG,EAAQ5oG,GACtDj6C,EAAMkB,KAAKilI,aAAaxrF,oBAAoBopG,EAAM9pG,GAExD/4C,KAAKsiJ,SAASgB,OAAOzkJ,EAAM,GAAIA,EAAM,IACrCmB,KAAKsiJ,SAASiB,OAAOzkJ,EAAI,GAAIA,EAAI,KAIrCkB,KAAKsiJ,SAAS1D,eAxKZ5+I,KAAKsiJ,SAASvrF,SAAU,M,cCvBTysF,E,WAOnB,cAA8D,IAAhDt+I,EAA+C,EAA/CA,QAASwuB,EAAsC,EAAtCA,OAAQ+lB,EAA8B,EAA9BA,oBAA8B,yBAH7DgqG,cAAgB,IAAIjxH,WAIlBxyB,KAAKkF,QAAUA,EACflF,KAAK0zB,OAASA,EACd1zB,KAAKy5C,oBAAsBA,EAE3Bz5C,KAAKyjJ,cAAc5E,QAAU,IAAIrsH,YAAe,EAAG,EAAG,EAAG,GACzDxyB,KAAK0jJ,gBAAkB,CACrB5qG,EAAG,EACHC,EAAG,EACH71C,MAAOlD,KAAKkF,QAAQy+I,yBACpB95I,OAAQ7J,KAAKkF,QAAQ0+I,2B,4DAKvB,OAAO5jJ,KAAKyjJ,gB,+BAIZzjJ,KAAK0jJ,gBAAgBxgJ,MAAQlD,KAAKkF,QAAQy+I,yBAC1C3jJ,KAAK0jJ,gBAAgB75I,OAAS7J,KAAKkF,QAAQ0+I,0BAE3C,IAAMC,EAAqB5K,EACzBj5I,KAAKy5C,oBACLz5C,KAAK0jJ,iBAGP1jJ,KAAKyjJ,cAAcvyG,QACnBlxC,KAAKyjJ,cAAcjF,UAAU,GAC7Bx+I,KAAKyjJ,cAAchF,UACjB,EACA/7H,YACE,IAAO1iB,KAAK0zB,OAAOk1F,wBAA0B,IAC7C,IAAO5oH,KAAK0zB,OAAOo1F,yBAA2B,IAC9C,IAAO9oH,KAAK0zB,OAAOm1F,0BAA4B,KAEjD,GAEF7oH,KAAKyjJ,cAAclgI,MAAQ,EAC3BvjB,KAAKyjJ,cAAc1xE,KAAKxuD,MAAQ,EAChCvjB,KAAKyjJ,cAAc/E,SACjBmF,EAAmB/qG,EACnB+qG,EAAmB9qG,EACnB8qG,EAAmB3gJ,MACnB2gJ,EAAmBh6I,QAErB7J,KAAKyjJ,cAAc7E,c,KCpDFkF,E,WAYnB,cAAwE,IAA1D5+I,EAAyD,EAAzDA,QAAS+/H,EAAgD,EAAhDA,aAAcvsF,EAAkC,EAAlCA,wBAAkC,yBARvE+qG,cAAgB,IAAIjxH,WAQmD,KAPvEkxH,gBAAkB,CAChB5qG,EAAG,EACHC,EAAG,EACH71C,MAAO,EACP2G,OAAQ,GAIR7J,KAAKkF,QAAUA,EACflF,KAAKilI,aAAeA,EACpBjlI,KAAK04C,wBAA0BA,EAE/B14C,KAAKyjJ,cAAc5E,QAAU,IAAIrsH,YAAe,EAAG,EAAG,EAAG,G,uEAGhCkmB,GACzB14C,KAAK04C,wBAA0BA,I,sCAI/B,OAAO14C,KAAKyjJ,gB,+BAIZ,GAAKzjJ,KAAK04C,wBAAwBoqD,WAAlC,CAKA,IAAM5/F,EAAQlD,KAAKkF,QAAQy+I,yBACrB95I,EAAS7J,KAAKkF,QAAQ0+I,0BAC5B5jJ,KAAK0jJ,gBAAgB5qG,EAAI94C,KAAKilI,aAAa8e,WAAa7gJ,EAAQ,EAChElD,KAAK0jJ,gBAAgB3qG,EAAI/4C,KAAKilI,aAAa+e,WAAan6I,EAAS,EACjE7J,KAAK0jJ,gBAAgBxgJ,MAAQA,EAC7BlD,KAAK0jJ,gBAAgB75I,OAASA,EAE9B,IAAMg6I,EAAqB5K,EACzBj5I,KAAKilI,aAAaxrF,oBAClBz5C,KAAK0jJ,iBAGP1jJ,KAAKyjJ,cAAc1sF,SAAU,EAC7B/2D,KAAKyjJ,cAAcvyG,QACnBlxC,KAAKyjJ,cAAcjF,UAAU,GAC7Bx+I,KAAKyjJ,cAAchF,UAAU,EAAG,EAAU,GAC1Cz+I,KAAKyjJ,cAAclgI,MAAQ,EAC3BvjB,KAAKyjJ,cAAc1xE,KAAKxuD,MAAQ,EAChCvjB,KAAKyjJ,cAAc/E,SACjBmF,EAAmB/qG,EACnB+qG,EAAmB9qG,EACnB8qG,EAAmB3gJ,MACnB2gJ,EAAmBh6I,QAErB7J,KAAKyjJ,cAAc7E,eA5BjB5+I,KAAKyjJ,cAAc1sF,SAAU,M,KCjCdktF,E,WAInB,cAA8C,IAAhCvwH,EAA+B,EAA/BA,OAAQwwH,EAAuB,EAAvBA,aAAuB,oBAC3ClkJ,KAAK0zB,OAASA,EACd1zB,KAAKkkJ,aAAeA,E,qDAIpBlkJ,KAAKkkJ,aAAa9iI,gBAAkB4B,SAClCA,SACEP,YACEziB,KAAK0zB,OAAOk1F,wBACZ5oH,KAAK0zB,OAAOm1F,0BACZ7oH,KAAK0zB,OAAOo1F,0BAEd,IAEF,Q,KCrBeq7B,E,WAKnB,WAAYC,GAAiB,oBAC3BpkJ,KAAKqkJ,eAAiB3+I,KAAKC,MAC3B3F,KAAKskJ,UAAY,IAAOF,EACxBpkJ,KAAKukJ,cAAe,E,2DAIpB,IAAM5+I,EAAMD,KAAKC,MACX6+I,EAAQ7+I,EAAM3F,KAAKqkJ,eAEzB,SAAIG,EAAQxkJ,KAAKskJ,WAAatkJ,KAAKukJ,gBACjCvkJ,KAAKqkJ,eAAiB1+I,EAAO6+I,EAAQxkJ,KAAKskJ,UAC1CtkJ,KAAKukJ,cAAe,GACb,K,wCAOTvkJ,KAAKukJ,cAAe,M,KCvBXE,EAAiB,WAC5B,IAAMC,EAASlyH,UAAeA,SAAY6lE,OACtCqsD,GAAQA,EAAOplC,QAORqlC,EAAkB,WAI7B9rI,YAAW,WACT,IAAM6rI,EAASlyH,UAAeA,SAAY6lE,OACtCqsD,GAAQA,EAAO7lJ,UAElB,K,QCjBgB+lJ,E,WAQnB,cAAsE,IAAxDlgB,EAAuD,EAAvDA,8BAA+BxhI,EAAwB,EAAxBA,MAAO2G,EAAiB,EAAjBA,OAAiB,oBACnE7J,KAAK6kJ,+BAAiCngB,EACtC1kI,KAAK8kJ,oBAAsB,IAAItyH,YAC/BxyB,KAAK8kJ,oBAAoBvhI,MAAQ,GACjCvjB,KAAK8kJ,oBAAoBjG,QAAU,IAAIrsH,YAAe,EAAG,EAAG,EAAG,GAC/DxyB,KAAK+kJ,qBAAuB,IAAIvyH,WAChCxyB,KAAKglJ,eAAiB,IAAIxyH,OAAU,GAAI,CACtCrwB,SAAU,GACV4vE,KAAM,SACN/zE,MAAO,SAETgC,KAAK8kJ,oBAAoBh7E,SAAS9pE,KAAK+kJ,sBACvC/kJ,KAAK8kJ,oBAAoBh7E,SAAS9pE,KAAKglJ,gBACvChlJ,KAAK05C,OAAOx2C,EAAO2G,G,mDAGd3G,EAAe2G,GACpB7J,KAAKg5C,OAAS91C,EACdlD,KAAKi5C,QAAUpvC,I,sCAIf,OAAO7J,KAAK8kJ,sB,+BAIZ,IADO,EAGQ9kJ,KAAK6kJ,iCAHb,mBAGA/rG,EAHA,KAGGC,EAHH,KAIP/4C,KAAKglJ,eAAe78I,KAApB,UAA8B2wC,EAAE8qB,QAAQ,GAAxC,YAA8C7qB,EAAE6qB,QAAQ,IACxD5jE,KAAKglJ,eAAe/hJ,SAAS61C,EAAI,EACjC94C,KAAKglJ,eAAe/hJ,SAAS81C,EAAIxiC,KAAK0H,MACpCje,KAAKi5C,QANS,EAMWj5C,KAAKglJ,eAAen7I,QAG/C7J,KAAK+kJ,qBAAqB7zG,QAC1BlxC,KAAK+kJ,qBAAqBvG,UAAU,EAAU,IAC9Cx+I,KAAK+kJ,qBAAqB3E,iBACxB,EACApgJ,KAAKi5C,QAAUp1C,GAAc7D,KAAKglJ,eAAen7I,OACjD7J,KAAKglJ,eAAe9hJ,MAAQW,GAbT,EAcnB7D,KAAKglJ,eAAen7I,OAAShG,GAdV,KAiBrB7D,KAAK+kJ,qBAAqBnG,c,KChDTqG,E,WAInB,cAAgD,IAAlCjU,EAAiC,EAAjCA,OAAQkU,EAAyB,EAAzBA,eAAyB,oBAC7CllJ,KAAKgxI,OAASA,EACdhxI,KAAKklJ,eAAiBA,E,qDAItB,GAAIllJ,KAAKklJ,iBAKP,OAJAllJ,KAAKgxI,OAAOnzI,MAAMonB,OAAS,YACM,SAA7BjlB,KAAKgxI,OAAOnzI,MAAMonB,SACpBjlB,KAAKgxI,OAAOnzI,MAAMonB,OAAS,iBAK/BjlB,KAAKgxI,OAAOnzI,MAAMonB,OAAS,c,6CCRVkgI,EAOnB,cAA6C,IAAD,OAA9BnU,EAA8B,EAA9BA,OAAQoU,EAAsB,EAAtBA,YAAsB,yBAN5CC,YAAsB,EAMsB,KAL5CC,YAAsB,EAKsB,KAS5CC,cAAgB,SAAC3kJ,GAGf,GAA6B,IAAzBA,EAAM2pD,QAAQlhD,OAAlB,CAEA,IAAMqhD,EAAQ9pD,EAAM2pD,QAAQ,GAC5B,EAAK86F,YAAc36F,EAAMR,QACzB,EAAKo7F,YAAc56F,EAAMP,QAIzB,EAAKq7F,SACL,EAAKC,oBAAsB5sI,YAAW,WAChC,EAAK6sI,cACP,EAAKA,aAAa,CAChBx7F,QAAS,EAAKm7F,YACdl7F,QAAS,EAAKm7F,gBAzCV,OAgBgC,KA8B5CK,aAAe,SAAC/kJ,GAGd,GAA6B,IAAzBA,EAAM2pD,QAAQlhD,OAAlB,CAOA,IAAMqhD,EAAQ9pD,EAAM2pD,QAAQ,IAE1Bh0C,KAAK2iC,IAAIwR,EAAMR,QAAU,EAAKm7F,aAzDd,IA0DhB9uI,KAAK2iC,IAAIwR,EAAMP,QAAU,EAAKm7F,aA1Dd,KA4DhB,EAAKE,cAXL,EAAKA,UAlCmC,KAkD5CA,OAAS,WACPp7F,aAAa,EAAKq7F,sBAnDwB,KAsD5C1T,QAAU,WACR,EAAK6T,QAAQv5H,oBAAoB,aAAc,EAAKk5H,eACpD,EAAKK,QAAQv5H,oBAAoB,YAAa,EAAKs5H,cACnD,EAAKC,QAAQv5H,oBAAoB,WAAY,EAAKm5H,SAxDlDxlJ,KAAK4lJ,QAAU5U,EACfhxI,KAAK0lJ,aAAeN,EAEpBpU,EAAO7kH,iBAAiB,aAAcnsB,KAAKulJ,eAC3CvU,EAAO7kH,iBAAiB,YAAansB,KAAK2lJ,cAC1C3U,EAAO7kH,iBAAiB,WAAYnsB,KAAKwlJ,S,kCCF7C,IAAM9hJ,EAAS,CACbmiJ,WAAY,CAAE1iJ,KAAM,EAAGF,SAAU,WAAYspD,SAAU,UACvDu5F,WAAY,CAAE7gI,OAAQ,SAGlBg6B,EAAaC,YAAqB6tF,KA0CnBgZ,E,4MACnBC,iBAAmB,E,EACnBC,iBAAmB,E,EACnBC,YAAc,E,EACdC,YAAc,E,EACdC,WAAa,IAAIjC,EAAW,I,EAuB5BkC,YAAa,E,EACbC,kBAAmB,E,EAqZnBrV,cAAgB,WACd,OAAO,EAAKvxI,MAAMg5C,wBAAwBS,Y,EAG5CgvF,cAAgB,SAAChvF,GACf,EAAKz5C,MAAMurI,gCAAX,2BACK,EAAKvrI,MAAMg5C,yBADhB,IAEES,WAAY5iC,KAAK1T,IAAI0T,KAAKzT,IAAIq2C,EAAY,IAAK,S,EAQnD+rF,aAAe,SACbljC,EACA02B,GAEA,OAAO,EAAK6tB,gBAAgBrhB,aAAaljC,EAAK02B,I,EAGhD8tB,aAAe,SAAC1tG,EAAWC,GACzB,EAAKmtG,YAAcptG,EACnB,EAAKqtG,YAAcptG,G,EAGrB0tG,qBAAuB,SAAC3tG,EAAWC,GACjC,EAAKmtG,YAAcptG,EACnB,EAAKqtG,YAAcptG,EACnB,EAAKmrG,aAAawC,KAAKxmJ,QAOlB,EAAKymJ,kBAAkBzB,kBAC1B,EAAK1F,mBAAmBoH,wBAAwB9tG,EAAGC,GAIlD,EAAK4tG,kBAAkBl9D,qBACvB,EAAKk9D,kBAAkBzB,mBAExB,EAAKxlJ,MAAMujI,mBAAmB5yE,iBAC9B,EAAK3wD,MAAMyrI,oBAAoB,M,EAInC0b,WAAa,SAACrkD,EAAgBrtC,EAAgBrc,EAAWC,GACvD,GAAI,EAAK4tG,kBAAkBzB,iBAAkB,CAC3C,IAAM1T,EAAchvC,EAAS,EAAKyuC,gBAC5BS,EAAcv8E,EAAS,EAAK87E,gBAElC,EAAKhM,aAAa2M,UAAUJ,GAAcE,GAEtC,EAAKhyI,MAAMonJ,uBACb,EAAKpnJ,MAAMonJ,sBAAsB,EAAK7hB,mBAGxC,EAAKua,mBAAmBuH,yBAAyBjuG,EAAGC,I,EAIxDiuG,qBAAuB,WAGrB,IAH4B,IACpBtzH,EAAW,EAAKh0B,MAAhBg0B,OACFg6C,EAAmB,GAChBzuE,EAAI,EAAGA,EAAIy0B,EAAOo/G,iBAAkB7zI,IAC3CyuE,EAAiBh6C,EAAOq/G,WAAW9zI,GAAGywB,WAAagE,EAChDq/G,WAAW9zI,GACXgoJ,gBAEL,OAAOv5E,G,EAGTw5E,UAAY,WAGV,GAAI,EAAK1H,mBAAmB2H,+BAAgC,CAC1D,IAAIC,EAAoB,EAAK5H,mBAAmB6H,wBAEhD,EAAK3nJ,MAAMujI,mBAAmB8C,gBAC5BqhB,EACA,EAAKT,kBAAkBl9D,oBACvB,EAAKu9D,wBAEPI,EAAoB,EAAK1nJ,MAAMujI,mBAAmB11D,uBAClD,EAAK7tE,MAAMyrI,oBAAoBic,K,EAInCE,mBAAqB,SAAC3zH,GACpB,EAAKuwH,aAAawC,KAAKxmJ,S,EAGzBqnJ,wBAA0B,SAACC,GAMzB,EAAKC,gBAAL,2BACKD,GADL,IAEEjf,yCAAyC,M,EAI7Ckf,gBAAkB,YAYV,IAXN9E,EAWK,EAXLA,QACAC,EAUK,EAVLA,QACA9pG,EASK,EATLA,EACAC,EAQK,EARLA,EACAwvF,EAOK,EAPLA,wCAQA,EAAKyd,iBAAmBrD,EACxB,EAAKsD,iBAAmBrD,EACpB,EAAKljJ,MAAMuO,eACb,EAAKvO,MAAMuO,cAAc6qC,EAAGC,IAAKwvF,I,EAIrC7C,yBAA2B,SAAC/xG,GAC1B,EAAKj0B,MAAM0rI,wBAAwBz3G,I,EAGrC+zH,gBAAkB,SAAC/zH,GACjB,EAAKosH,oBAAoB4H,YAAYh0H,I,EAGvCi0H,gBAAkB,SAChBj0H,EACAk0H,EACAC,GAEA,IAAI,EAAKnB,kBAAkBzB,iBAA3B,CAMA,GAAI,EAAKyB,kBAAkBr9D,uBAEzB,IADA,IAAMghD,EAAoB,EAAK5qI,MAAMujI,mBAAmB11D,uBAC/CtuE,EAAI,EAAGA,EAAIqrI,EAAkBjhI,OAAQpK,IAAK,CACjD,IAAM00B,EAAW22G,EAAkBrrI,GACnC,EAAKS,MAAMgiI,iBACRyH,sBAAsBx1G,GACtBy1G,2BAGL,EAAK1pI,MAAMujI,mBAAmBn1D,eAC5Bn6C,EACA,EAAKgzH,kBAAkBl9D,oBACvB,EAAKu9D,wBAGH,EAAKtnJ,MAAMyrI,qBACb,EAAKzrI,MAAMyrI,oBACT,EAAKzrI,MAAMujI,mBAAmB11D,wBAKpC,EAAKw6E,eAAeC,UAAUH,EAAQC,K,EAGxCG,eAAiB,SAACt0H,GACZA,IAAa,EAAKosH,oBAAoBmI,eACxC,EAAKnI,oBAAoB4H,YAAY,O,EAGzCQ,gBAAkB,SAChBx0H,EACA6uE,EACArtC,GAEA,IAAMq8E,EAAchvC,EAAS,EAAKyuC,gBAC5BS,EAAcv8E,EAAS,EAAK87E,gBAKlC,GAAI,EAAK0V,kBAAkBzB,iBAMzB,OALA,EAAKjgB,aAAa2M,UAAUJ,GAAcE,QAEtC,EAAKhyI,MAAMonJ,uBACb,EAAKpnJ,MAAMonJ,sBAAsB,EAAK7hB,eAKrC,EAAKvlI,MAAMujI,mBAAmBt1D,mBAAmBh6C,IACpD,EAAK2zH,mBAAmB3zH,GAG1B,IAAM22G,EAAoB,EAAK5qI,MAAMujI,mBAAmB11D,uBACxD,EAAKw6E,eAAeK,OAClB9d,EACAkH,EACAE,EACA,EAAKiV,kBAAkB0B,mBACvB,EAAK1B,kBAAkB2B,wB,EAI3BC,mBAAqB,WACnB,EAAKR,eAAeS,UAEpB,IAAMle,EAAoB,EAAK5qI,MAAMujI,mBAAmB11D,uBACxD,EAAK7tE,MAAM2rI,iBAAiBf,I,EAG9Bme,UAAY,SACVjmD,EACArtC,EACA8lF,GAEA,IAAMzJ,EAAchvC,EAAS,EAAKyuC,gBAC5BS,EAAcv8E,EAAS,EAAK87E,gBAE5B3G,EAAoB,EAAK5qI,MAAMujI,mBAAmB11D,uBAKlD2tE,EAHsB,UAA1B,EAAKx7I,MAAM8+C,YACXu7F,EAAWkB,IACXhB,EAAWgB,IAEU,EAAK0L,kBAAkB+B,6BAC9C,EAAKC,iBAAiBC,SACpBte,EACAkH,EACAE,EACAuJ,EACAC,I,EAIJ2N,aAAe,WACb,EAAKF,iBAAiBG,YAEtB,IAAMxe,EAAoB,EAAK5qI,MAAMujI,mBAAmB11D,uBACxD,EAAK7tE,MAAM4rI,mBAAmBhB,I,EAGhCye,UAAY,SAACvmD,EAAgBrtC,GAC3B,IAAMq8E,EAAchvC,EAAS,EAAKyuC,gBAC5BS,EAAcv8E,EAAS,EAAK87E,gBAE5B3G,EAAoB,EAAK5qI,MAAMujI,mBAAmB11D,uBACxD,EAAKy7E,iBAAiBC,SACpB3e,EACAkH,EACAE,EACA,EAAKiV,kBAAkB+B,+B,EAI3BQ,aAAe,WACb,EAAKF,iBAAiBG,YAEtB,IAAM7e,EAAoB,EAAK5qI,MAAMujI,mBAAmB11D,uBACxD,EAAK7tE,MAAM6rI,mBAAmBjB,I,EAGhCrC,yBAA2B,WACzB,EAAK8X,oBAAoB4H,YAAY,O,EAGvCyB,cAAgB,SAACtwG,EAAWC,GAC1B,IACMswG,EADoB,EAAK3pJ,MAAMujI,mBAAmB11D,uBACJpkE,QAClD,SAAAwqB,GAAQ,OAAKA,EAASo0G,cAExBshB,EAA0BrjJ,SAAQ,SAAA2tB,GAChCA,EAAS4c,KAAK5c,EAAS6c,OAASsI,GAChCnlB,EAAS8c,KAAK9c,EAAS+c,OAASqI,MAElC,EAAKr5C,MAAM2rI,iBAAiBge,I,EAsB9BvgB,mCAAqC,WACnC,OAAO,EAAK7D,aAAapsF,mBACvB,EAAKmtG,iBACL,EAAKC,mB,EAITvhB,8BAAgC,WAC9B,OAAO,EAAKO,aAAapsF,mBACvB,EAAKqtG,YACL,EAAKC,c,EAITmD,gBAAkB,WAChB,OAAO,EAAKrkB,c,EAGdskB,aAAe,WAET,EAAKlD,YACL,EAAKC,mBAGL,EAAKF,WAAWoD,iBAClB,EAAKpoI,gBAAgBy3H,SACrB,EAAK5T,aAAa4T,SAClB,EAAK4Q,aAAa5Q,SAClB,EAAKn0E,KAAKm0E,SACV,EAAK6Q,kBAAkB7Q,SACvB,EAAKkH,oBAAoBlH,SACzB,EAAKvO,kBAAkBuO,SACvB,EAAK2G,mBAAmB3G,SACxB,EAAK8Q,aAAa9Q,SAClB,EAAK/1C,WAAW+1C,SAChB,EAAK+Q,UAAU/Q,SACf,EAAKqL,aAAarL,OAAO,EAAKhlH,gBAEhC,EAAKg2H,UAAYC,sBAAsB,EAAKP,gB,EAG9CQ,oBAAsB,WAChB,EAAKF,WAAWG,qBAAqB,EAAKH,WAC9C,EAAKvD,kBAAmB,EAExB7B,K,EAGFwF,sBAAwB,WACtB,EAAK3D,kBAAmB,EACxB,EAAKiD,eAEL5E,K,kEAnvBI3kJ,KAAK6lJ,aAAe7lJ,KAAKkkJ,cAC3BlkJ,KAAKkqJ,iC,2CAQHlqJ,KAAK6lJ,aAAe7lJ,KAAKkkJ,cAC3BlkJ,KAAKkqJ,iC,qDAIuB,IAAD,OACrBrE,EAAe7lJ,KAAf6lJ,WACR,GAAKA,EAAL,CAF6B,IAOrB3gJ,EAAYlF,KAAKN,MAAjBwF,QAIRlF,KAAKkkJ,aAAe1xH,qBAClB,CACEtvB,MAAOlD,KAAKN,MAAMwD,MAClB2G,OAAQ7J,KAAKN,MAAMmK,OACnBsgJ,uBAAuB,EACvBC,WAAW,IAIfvE,EAAWwE,YAAYrqJ,KAAKkkJ,aAAawC,MAEzC1mJ,KAAKsqJ,iBAAmB,IAAInF,EAAiB,CAC3CnU,OAAQhxI,KAAKkkJ,aAAawC,KAC1BtB,YAAa,SAAAxkJ,GAAK,OAChB,EAAKlB,MAAMuO,cAAcrN,EAAMspD,QAAStpD,EAAMupD,YAGlDnqD,KAAKkkJ,aAAawC,KAAK6D,QAAU,SAAC3pJ,GAChC,IAAMu4C,EAAa,EAAK83F,gBACxB,GAAI,EAAK0V,kBAAkB6D,aACzB,EAAKC,gBAAgB7pJ,EAAMu0D,OAAS,UAC/B,GAAI,EAAKwxF,kBAAkB+D,2BAA4B,CAC5D,IAAMloD,EAAS5hG,EAAMu0D,QAAU,EAAIhc,GACnC,EAAK8rF,aAAa2M,UAAUpvC,EAAQ,OAC/B,CACL,IAAMA,EAAS5hG,EAAM4hG,QAAU,EAAIrpD,GAC7Bgc,EAASv0D,EAAMu0D,QAAU,EAAIhc,GACnC,EAAK8rF,aAAa2M,SAASpvC,EAAQrtC,GAGjC,EAAKz1D,MAAMonJ,uBACb,EAAKpnJ,MAAMonJ,sBAAsB,EAAK7hB,cAExCrkI,EAAM+W,kBAER3X,KAAKkkJ,aAAawC,KAAKiE,aAAa,YAAa,GACjD3qJ,KAAKkkJ,aAAawC,KAAKv6H,iBAAiB,SAAS,SAAAxX,GAC/C,EAAKgyI,kBAAkBzmJ,WAEzBF,KAAKkkJ,aAAawC,KAAKv6H,iBAAiB,QAAQ,SAAAxX,GAC9C,EAAKgyI,kBAAkBxmJ,UAEzBH,KAAKkkJ,aAAawC,KAAKv6H,iBAAiB,aAAa,SAAAxX,GACnD,EAAKgyI,kBAAkBzmJ,WAEzBF,KAAKkkJ,aAAawC,KAAKv6H,iBAAiB,YAAY,SAAAxX,GAClD,EAAKgyI,kBAAkBxmJ,UAGzBH,KAAK6zB,cAAgB,IAAIrB,YAEzBxyB,KAAK4qJ,eAAiB,IAAIp4H,YAC1BxyB,KAAK4qJ,eAAe/L,QAAU,IAAIrsH,YAChC,EACA,EACAxyB,KAAKN,MAAMwD,MACXlD,KAAKN,MAAMmK,QAEbo0I,IAAQC,QAAQl+I,KAAK4qJ,gBACrB5qJ,KAAK4qJ,eAAezM,GAAG,aAAa,SAAAv9I,GAAK,OACvC,EAAK6lJ,qBAAqB7lJ,EAAM8oB,KAAKtX,OAAO0mC,EAAGl4C,EAAM8oB,KAAKtX,OAAO2mC,MAEnE/4C,KAAK4qJ,eAAezM,GAClB,cACA,SAAC0M,GAA6C,IAEnBjqJ,EACrBiqJ,EADFnhI,KAAQohI,cAUV,OARA,EAAKrD,gBAAgB,CACnB9E,QAAS/hJ,EAAM+hJ,QACfC,QAAShiJ,EAAMgiJ,QACf9pG,EAAGl4C,EAAMspD,QACTnR,EAAGn4C,EAAMupD,QACTo+E,yCAAyC,KAGpC,KAGXvoI,KAAK4qJ,eAAezM,GAAG,cAAc,SAAAv9I,GAC/BiwI,YAAuBjwI,EAAM8oB,MAAQ9oB,EAAM8oB,KAAKohI,gBAIpD,EAAKrE,qBAAqB7lJ,EAAM8oB,KAAKtX,OAAO0mC,EAAGl4C,EAAM8oB,KAAKtX,OAAO2mC,MAEnE/4C,KAAK4qJ,eAAezM,GAAG,aAAa,SAAAv9I,GAClC,IAAMmqJ,EAAUnqJ,EAAM8oB,KAAKtX,OAAO0mC,GAAK,EACjCkyG,EAAUpqJ,EAAM8oB,KAAKtX,OAAO2mC,GAAK,EACvC,EAAKytG,aAAauE,EAASC,MAE7BhrJ,KAAK4qJ,eAAezM,GAAG,WAAW,SAAAv9I,GAAK,OACrC,EAAKimJ,WACHjmJ,EAAM4hG,OACN5hG,EAAMu0D,OACNv0D,EAAM8oB,KAAKtX,OAAO0mC,EAClBl4C,EAAM8oB,KAAKtX,OAAO2mC,MAGtB/4C,KAAK4qJ,eAAezM,GAAG,UAAU,SAAAv9I,GAAK,OAAI,EAAKsmJ,eAC/ClnJ,KAAK6zB,cAAci2C,SAAS9pE,KAAK4qJ,gBAEjC5qJ,KAAKilI,aAAe,IAAI1sF,IAAa,CACnCC,aAActzC,EAAUA,EAAQy+I,yBAA2B,EAAI,EAC/DlrG,aAAcvzC,EAAUA,EAAQ0+I,0BAA4B,EAAI,EAChE1gJ,MAAOlD,KAAKN,MAAMwD,MAClB2G,OAAQ7J,KAAKN,MAAMmK,OACnB6uC,wBAAyB14C,KAAKN,MAAMg5C,0BAEtC14C,KAAK6zB,cAAci2C,SAAS9pE,KAAKilI,aAAa0T,oBAE9C34I,KAAK0kE,KAAO,IAAI29E,EAAK,CACnBpd,aAAcjlI,KAAKilI,aACnBvsF,wBAAyB14C,KAAKN,MAAMg5C,0BAEtC14C,KAAK6zB,cAAci2C,SAAS9pE,KAAK0kE,KAAKumF,iBAEtCjrJ,KAAK2mJ,kBAAoB,IAAI5W,IAA4B,CACvD7jF,SAAUlsD,KAAKN,MAAM48E,kBACrBu7C,OAAQ73H,KAAKopJ,cACb7zE,OAAQv1E,KAAKN,MAAM61E,OACnBwP,MAAO/kF,KAAKN,MAAMqlF,MAClB1I,QAASr8E,KAAKN,MAAM28E,QACpBiJ,OAAQtlF,KAAKN,MAAM4lF,OACnBE,OAAQxlF,KAAKN,MAAM8lF,OACnBI,UAAW5lF,KAAKN,MAAMkmF,UACtBF,SAAU1lF,KAAKN,MAAMgmF,WAGvB1lF,KAAKkrJ,aAAe,IAAIna,IAAa,CACnCC,OAAQhxI,KAAKkkJ,aAAawC,KAC1Bve,cAAenoI,KAAKmoI,cACpB8I,cAAejxI,KAAKixI,cACpBhM,aAAcjlI,KAAKilI,eAGrBjlI,KAAKypJ,aAAe,IAAIxE,EAAa,CACnCjU,OAAQ6U,EACRX,eAAgB,kBAAM,EAAKyB,kBAAkBzB,oBAG/CllJ,KAAKumJ,gBAAkB,IAAI4E,IAAe,CACxCtmH,UAAW7kC,KAAKN,MAAMgiI,iBACtBhpF,wBAAyB14C,KAAKN,MAAMg5C,0BAGtC14C,KAAKorJ,uBAAuBprJ,KAAKN,OACjCM,KAAKupJ,kB,qCAULvpJ,KAAKorJ,uBAAuBprJ,KAAKN,S,6CAGZA,GAEjBM,KAAK+/I,qBACP//I,KAAK6zB,cAAc6L,YAAY1/B,KAAK+/I,oBAAoBkL,iBAEtDjrJ,KAAKsqI,mBACPtqI,KAAK6zB,cAAc6L,YAAY1/B,KAAKsqI,kBAAkBqO,oBAEpD34I,KAAK0pJ,oBACP1pJ,KAAKilI,aACF0T,mBACAj5G,YAAY1/B,KAAK0pJ,kBAAkB/Q,oBACtC34I,KAAK0pJ,kBAAkB32I,UAErB/S,KAAKw/I,qBACPx/I,KAAK6zB,cAAc6L,YAAY1/B,KAAKw/I,mBAAmByL,iBACvDjrJ,KAAKw/I,mBAAmBzsI,UAEtB/S,KAAK2pJ,cACP3pJ,KAAK6zB,cAAc6L,YAAY1/B,KAAK2pJ,aAAasB,iBAE/CjrJ,KAAK8iG,YACP9iG,KAAK6zB,cAAc6L,YAAY1/B,KAAK8iG,WAAWmoD,iBAE7CjrJ,KAAK4pJ,WACP5pJ,KAAK6zB,cAAc6L,YAAY1/B,KAAK4pJ,UAAUqB,iBAGhDjrJ,KAAKohB,gBAAkB,IAAI6iI,EAAgB,CACzCvwH,OAAQh0B,EAAMg0B,OACdwwH,aAAclkJ,KAAKkkJ,eAErBlkJ,KAAK0pJ,kBAAoB,IAAIhS,EAAkB,CAC7CxyI,QAASxF,EAAMwF,QACfwuB,OAAQh0B,EAAMg0B,OACdmR,UAAWnlC,EAAMgiI,iBACjBuD,aAAcjlI,KAAKilI,aACnB4S,eAAgB73I,KAAK0nJ,gBACrB3P,eAAgB/3I,KAAKmoJ,gBACrBnQ,kBAAmBh4I,KAAKuoJ,mBACxBtQ,eAAgBj4I,KAAK4nJ,gBACrB9P,cAAe93I,KAAKioJ,eACpBtQ,kBAAmB33I,KAAKsnJ,mBACxB1P,uBAAwB53I,KAAKunJ,wBAC7Bnc,wBAAyBprI,KAAK0lI,2BAEhC1lI,KAAKw/I,mBAAqB,IAAI6L,IAAmB,CAC/CxmH,UAAWnlC,EAAMgiI,iBACjB0W,iBAAkBp4I,KAAK0pJ,kBAAkB4B,sBACzCzyG,mBAAoB74C,KAAKilI,aAAapsF,qBAExC74C,KAAKsqI,kBAAoB,IAAI0S,EAAkB,CAC7C/Z,mBAAoBjjI,KAAKN,MAAMujI,mBAC/Bga,SAAUj9I,KAAKyoJ,UACfvL,YAAal9I,KAAK6oJ,aAClB1L,SAAUn9I,KAAK+oJ,UACf3L,YAAap9I,KAAKkpJ,aAClB9Q,iBAAkBp4I,KAAK0pJ,kBAAkB4B,sBACzC7xG,oBAAqBz5C,KAAKilI,aAAaxrF,oBACvC+E,WAAYx+C,KAAKN,MAAM8+C,aAEzBx+C,KAAK+/I,oBAAsB,IAAIwL,EAAoB,CACjDnT,iBAAkBp4I,KAAK0pJ,kBAAkB4B,sBACzC7xG,oBAAqBz5C,KAAKilI,aAAaxrF,sBAEzCz5C,KAAK2oJ,iBAAmB,IAAIzO,EAAiB,CAC3C9B,iBAAkBp4I,KAAK0pJ,kBAAkB4B,sBACzC5yG,wBAAyB14C,KAAKN,MAAMg5C,0BAEtC14C,KAAKgpJ,iBAAmB,IAAI3I,EAC1BrgJ,KAAK0pJ,kBAAkB4B,uBAEzBtrJ,KAAK+nJ,eAAiB,IAAI1G,EAAe,CACvCjJ,iBAAkBp4I,KAAK0pJ,kBAAkB4B,sBACzC5yG,wBAAyB14C,KAAKN,MAAMg5C,0BAEtC14C,KAAK2pJ,aAAe,IAAInG,EAAa,CACnCt+I,QAASxF,EAAMwF,QACfwuB,OAAQh0B,EAAMg0B,OACd+lB,oBAAqBz5C,KAAKilI,aAAaxrF,sBAEzCz5C,KAAK8iG,WAAa,IAAIghD,EAAW,CAC/B5+I,QAASxF,EAAMwF,QACf+/H,aAAcjlI,KAAKilI,aACnBvsF,wBAAyB14C,KAAKN,MAAMg5C,0BAEtC14C,KAAK4pJ,UAAY,IAAIhF,EAAU,CAC7B1hJ,MAAOlD,KAAKN,MAAMwD,MAClB2G,OAAQ7J,KAAKN,MAAMmK,OACnB66H,8BAA+B1kI,KAAK0kI,gCAGtC1kI,KAAK6zB,cAAci2C,SAAS9pE,KAAKw/I,mBAAmByL,iBACpDjrJ,KAAKilI,aACF0T,mBACA7uE,SAAS9pE,KAAK0pJ,kBAAkB/Q,oBACnC34I,KAAK6zB,cAAci2C,SAAS9pE,KAAK2pJ,aAAasB,iBAC9CjrJ,KAAK6zB,cAAci2C,SAAS9pE,KAAK8iG,WAAWmoD,iBAC5CjrJ,KAAK6zB,cAAci2C,SAAS9pE,KAAKsqI,kBAAkBqO,oBACnD34I,KAAK6zB,cAAci2C,SAAS9pE,KAAK+/I,oBAAoBkL,iBACrDjrJ,KAAK6zB,cAAci2C,SAAS9pE,KAAK4pJ,UAAUqB,mB,6CAM3CjrJ,KAAKqmJ,YAAa,EAElBrmJ,KAAK2mJ,kBAAkB5U,UACvB/xI,KAAKw/I,mBAAmBzsI,SACxB/S,KAAK0pJ,kBAAkB32I,SACvB/S,KAAKumJ,gBAAgBxU,UACrB/xI,KAAKkrJ,aAAanZ,UAClB/xI,KAAKsqJ,iBAAiBvY,UAClB/xI,KAAK6pJ,WAAWG,qBAAqBhqJ,KAAK6pJ,WAC9CpF,IACAzkJ,KAAKkkJ,aAAalL,Y,gDAGM9/G,GAEtBA,EAAUh2B,QAAUlD,KAAKN,MAAMwD,OAC/Bg2B,EAAUrvB,SAAW7J,KAAKN,MAAMmK,SAEhC7J,KAAKkkJ,aAAaxqG,OAAOxgB,EAAUh2B,MAAOg2B,EAAUrvB,QACpD7J,KAAKilI,aAAavrF,OAAOxgB,EAAUh2B,MAAOg2B,EAAUrvB,QACpD7J,KAAK4pJ,UAAUlwG,OAAOxgB,EAAUh2B,MAAOg2B,EAAUrvB,QACjD7J,KAAK4qJ,eAAe/L,QAAU,IAAIrsH,YAChC,EACA,EACA0G,EAAUh2B,MACVg2B,EAAUrvB,QAIZ7J,KAAKomJ,WAAWoF,kBAChBxrJ,KAAKupJ,gBAILrwH,EAAUwf,0BAA4B14C,KAAKN,MAAMg5C,0BAEjD14C,KAAK0kE,KAAKy/D,2BAA2BjrG,EAAUwf,yBAC/C14C,KAAK+nJ,eAAe5jB,2BAClBjrG,EAAUwf,yBAEZ14C,KAAK2oJ,iBAAiBxkB,2BACpBjrG,EAAUwf,yBAEZ14C,KAAK8iG,WAAWqhC,2BACdjrG,EAAUwf,yBAEZ14C,KAAKilI,aAAad,2BAChBjrG,EAAUwf,yBAEZ14C,KAAKumJ,gBAAgBpiB,2BACnBjrG,EAAUwf,0BAIVxf,EAAUslB,aAAex+C,KAAKN,MAAM8+C,YACtCx+C,KAAKsqI,kBAAkBmhB,cAAczrJ,KAAKN,MAAM8+C,YAIhDx+C,KAAKN,MAAMg0B,SAAWwF,EAAUxF,QAChC1zB,KAAKN,MAAMgiI,mBAAqBxoG,EAAUwoG,kBAC1C1hI,KAAKN,MAAMwF,UAAYg0B,EAAUh0B,SAEjClF,KAAKorJ,uBAAuBlyH,GAK1BA,EAAUuyG,iBAAmBzrI,KAAKN,MAAM+rI,gBAC1CzrI,KAAK+pJ,uBAEF7wH,EAAUuyG,gBAAkBzrI,KAAKN,MAAM+rI,gBAC1CzrI,KAAKiqJ,0B,gDAUiB9/H,GACpBnqB,KAAK0pJ,mBACP1pJ,KAAK0pJ,kBAAkBxf,0BAA0B//G,K,6BAG9CzpB,GACLV,KAAKmoI,cAAcnoI,KAAKixI,gBAAkBvwI,K,qCAM7BA,GACb,IAAMgrJ,EAA2B1rJ,KAAK0kI,gCACtC1kI,KAAKmoI,cAAcnoI,KAAKixI,gBAAkBvwI,GAC1C,IAAMirJ,EAA0B3rJ,KAAK0kI,gCAErC1kI,KAAKilI,aAAa2M,SAChB8Z,EAAyB,GAAKC,EAAwB,GACtDD,EAAyB,GAAKC,EAAwB,IAEpD3rJ,KAAKN,MAAMonJ,uBACb9mJ,KAAKN,MAAMonJ,sBAAsB9mJ,KAAKilI,gB,+BAiSjCnsF,EAAWC,GAClB/4C,KAAKilI,aAAah2H,SAAS6pC,EAAGC,K,mCAI9B,IAAMD,EAAI94C,KAAKN,MAAMwF,QAAQy+I,yBAA2B,EAClD5qG,EAAI/4C,KAAKN,MAAMwF,QAAQ0+I,0BAA4B,EACzD5jJ,KAAKilI,aAAah2H,SAAS6pC,EAAGC,K,mCAGnBlU,GACNA,EAAUx7B,SAEfrJ,KAAKilI,aAAa2mB,iBAAiB/mH,EAAUA,EAAUx7B,OAAS,IAC5DrJ,KAAKN,MAAMonJ,uBACb9mJ,KAAKN,MAAMonJ,sBAAsB9mJ,KAAKilI,iB,+BA2DhC,IAAD,OACP,OAAKjlI,KAAKN,MAAMwF,QAGd,kBAAC,EAAD,CACEq8C,QAAS,kBAAM,GACfmwE,MAAO,SAAA/tC,GAAY,IACT4iE,EAA8C,EAA9CA,gBAAiBthB,EAA6B,EAA7BA,aAAc4gB,EAAe,EAAfA,WACvC,GAAKU,GAAoBV,GAAe5gB,EAAxC,CAFgB,MAICthD,EAAQkoE,kBAAjB/yG,EAJQ,EAIRA,EAAGC,EAJK,EAILA,EACL+yG,EAAajG,EAAWr2I,wBACxBwyF,EAAMijC,EAAapsF,mBACvBC,EAAIgzG,EAAW5tI,KACf66B,EAAI+yG,EAAW1oJ,KAEjBmjJ,EAAgBwF,gDACd/pD,EACA,EAAKtiG,MAAM6kI,uBAGf9iF,KAAM,SAAAkiC,GAAY,IACR4iE,EAA8C,EAA9CA,gBAAiBthB,EAA6B,EAA7BA,aAAc4gB,EAAe,EAAfA,WACvC,GAAKU,GAAoBV,GAAe5gB,EAExC,GAAIthD,EAAQG,UAGVyiE,EAAgByF,+BAHlB,CAJe,MAWEroE,EAAQkoE,kBAAjB/yG,EAXO,EAWPA,EAAGC,EAXI,EAWJA,EACL+yG,EAAajG,EAAWr2I,wBACxBwyF,EAAMijC,EAAapsF,mBACvBC,EAAIgzG,EAAW5tI,KACf66B,EAAI+yG,EAAW1oJ,KAEXyhC,EAAY0hH,EAAgB0F,iCAChCjqD,GAEFukD,EAAgB2F,2BAChB,EAAKxsJ,MAAMwrI,iBAAiBrmG,OAG7B,YAAoC,IAAjC6c,EAAgC,EAAhCA,kBAAmBC,EAAa,EAAbA,OAQrB,OAJI,EAAK4kG,kBAAoB5kG,GAC3B,EAAK4kG,gBAAgByF,2BAGhBtqG,EACL,yBACE/jD,IAAK,SAAAkoJ,GAAU,OAAK,EAAKA,WAAaA,GACtChoJ,MAAO6F,EAAOmiJ,iBAvDQ,S,GA1xBSj6H,c,gHClB9B05B,EA7Cf,uKACY,IAAD,EAUHtlD,KAAKN,MARPysJ,EAFK,EAELA,OACAC,EAHK,EAGLA,QACAC,EAJK,EAILA,QACAC,EALK,EAKLA,SACAC,EANK,EAMLA,eACAC,EAPK,EAOLA,gBACAC,EARK,EAQLA,cACAC,EATK,EASLA,eAGF,OACE,gBAAC,IAAD,CAAclnG,WAAS,GACrB,gBAAC5L,EAAA,EAAD,CACEj3C,QAASwpJ,EACTxoI,IAAI,mCACJ3iB,UAAWqrJ,EACXpoJ,QAAS,uBAEX,gBAAC21C,EAAA,EAAD,CACEj3C,QAASypJ,EACTzoI,IAAI,iCACJ3iB,UAAWsrJ,EACXroJ,QAAS,wBAEX,gBAAC0oJ,EAAA,EAAD,MACA,gBAAC/yG,EAAA,EAAD,CACEj3C,QAAS4pJ,EACT5oI,IAAI,oCACJ3iB,UAAWwrJ,EACXvoJ,QAAS,uCAEX,gBAAC21C,EAAA,EAAD,CACEj3C,QAAS8pJ,EACT9oI,IAAI,sCACJ3iB,UAAW0rJ,EACXzoJ,QAAS,+BAtCnB,GAA6BvG,iB,8DCCvBgG,EAAS,CACb4K,UAAW,CACTnL,KAAM,EACN3E,QAAS,QAEX+yB,KAAM,CACJ1hB,UAAW,SACX1M,KAAM,IAOWypJ,E,mLAEjBC,EACAC,EACA/nJ,GACmC,IAAD,OAClC,OAAO+nJ,EAAyBD,GAAU5jJ,KAAI,SAAA8jJ,GAC5C,IAAKA,EAAsB,OAAO,KAClC,IAAMC,EAAoBjoJ,EAAKsW,OAAO0xI,EAAqBtkI,KAErDwkI,EAAmBF,EAAqBE,iBAE9C,OACE,gBAAC5+I,EAAA,EAAD,CACEoa,IAAKukI,EAAkBr2I,KAAK,KAC5BhN,YAAaojJ,EAAqB1rJ,MAClCiK,gBAAiByhJ,EAAqBzhJ,cACtC3I,QAAS,kBACP,EAAKjD,MAAMwtJ,kBACTH,EACAC,IAGJpgJ,kBACEqgJ,EACI,kBACE,EAAKE,qBACHzyI,IAAImyI,EAAUE,EAAqBtkI,IAAK,MACxCwkI,EACAD,SAEJzuJ,S,+BAQZ,OAAOyB,KAAKN,MAAMmtJ,SAChB,gBAACx+I,EAAA,EAAD,CAAMxQ,MAAO6F,EAAO6tB,MACjBvxB,KAAKmtJ,qBACJntJ,KAAKN,MAAMmtJ,SACX7sJ,KAAKN,MAAMotJ,yBACX,KAGF,S,GA/CoCpvJ,a,6CCTtC0vJ,EAAoB,SAApBA,EAAqB/0E,GACzB,IAAKA,EAAU,OAAO,KAEtB,IAAMg1E,EAA2B,CAC/B5sJ,KAAM43E,EAASi1E,MACf5sJ,MAAO,MAgBT,MAbuB,WAAnB23E,EAASi1E,MAAoBD,EAAoB3sJ,MAAQ23E,EAASk1E,KAC1C,WAAnBl1E,EAASi1E,MAChBD,EAAoB3sJ,MAAQ23E,EAASm1E,OACX,YAAnBn1E,EAASi1E,MAChBD,EAAoB3sJ,MAAQ23E,EAASo1E,MACX,cAAnBp1E,EAASi1E,MAChBD,EAAoB3sJ,MAAQgtJ,IAC1Br1E,EAASs1E,UACTP,GAEwB,UAAnB/0E,EAASi1E,QAChBD,EAAoB3sJ,MAAQ23E,EAASu1E,eAAe3kJ,IAAImkJ,IAEnDC,GAiDHQ,EAAa,SAAC70H,EAAD,GAA0D,IAAjD80H,EAAgD,EAAhDA,OAAgB/yG,GAAgC,EAAxCvqC,OAAwC,EAAhCuqC,oBAC1C,GAAKA,EAAL,CAD0E,MA/B5C,SAC9BgzG,EACAhzG,GAEA,IADoD,EAC9CizG,EAA0BD,EAAShnI,QACnChiB,EAAO,CAAC,aAAc,QAASipJ,GACjC31E,EAAWt9B,EAAmBkzG,WAAWC,MAAMF,GAC/CG,GAAO,EAJyC,cAMzBJ,GANyB,IAMpD,2BAAqC,CAAC,IAA3BtyE,EAA0B,QAKnC,KADA0yE,GAAQA,GAIR,GAAuB,cAAnB91E,EAASi1E,MACXvoJ,EAAK7F,KAAK,YAAau8E,GACvBpD,EAAWA,EAASs1E,UAAUlyE,OACzB,IAAuB,UAAnBpD,EAASi1E,MAKf,MAAO,CAAEvoJ,KAAM,KAAMszE,SAAU,MAJlCtzE,EAAK7F,KAAK,iBAAkBu8E,GAC5BpD,EAAWA,EAASu1E,eAAe5qI,SAASy4D,EAAc,OAnBV,8BAyBpD,MAAO,CAAE12E,OAAMszE,YAOY+1E,CACzBp1H,EAAKq1H,UACLtzG,GAFMh2C,EAJkE,EAIlEA,KAAMszE,EAJ4D,EAI5DA,SAId,IAAKtzE,EAEH,OADAoC,QAAQrG,MAAM,wCAAyCk4B,IAChD,EAET,IAAKq/C,EAEH,OADAlxE,QAAQrG,MAAM,2BAA4Bk4B,IACnC,EAGT,GAAkB,SAAdA,EAAK13B,KAAiB,CAExB,GADAyD,EAAK7F,KAAK,UAEW,WAAnB85B,EAAKs1H,WACc,WAAnBt1H,EAAKs1H,WACc,YAAnBt1H,EAAKs1H,WACc,cAAnBt1H,EAAKs1H,WACc,UAAnBt1H,EAAKs1H,UAKL,OADAnnJ,QAAQrG,MAAM,sBAAwBk4B,EAAKs1H,YACpC,EAHHt1H,EAAKs1H,YAAcj2E,EAASi1E,OAAOQ,EAAO/oJ,EAAM,CAACi0B,EAAKs1H,iBAKvD,GAAkB,UAAdt1H,EAAK13B,KAAkB,CAEhC,GAAuB,WAAnB+2E,EAASi1E,OAAgD,kBAAnBt0H,EAAKs1H,UAC7Ct1H,EAAKs1H,UAAY,GAAKt1H,EAAKs1H,eACxB,GACgB,WAAnBj2E,EAASi1E,OACiB,kBAAnBt0H,EAAKs1H,WAGZ,GADAt1H,EAAKs1H,UAAYruH,WAAWjH,EAAKs1H,WAC7BC,MAAMv1H,EAAKs1H,WAEb,OADAnnJ,QAAQrG,MAAR,+CACO,OAEJ,GACc,YAAnBu3E,EAASi1E,OACiB,mBAAnBt0H,EAAKs1H,UAEZt1H,EAAKs1H,UACuB,kBAAnBt1H,EAAKs1H,UACyB,UAAjCt1H,EAAKs1H,UAAU1nI,eAAgD,MAAnBoS,EAAKs1H,YAC/Ct1H,EAAKs1H,eACV,GAAuB,cAAnBj2E,EAASi1E,OAA4C,UAAnBj1E,EAASi1E,MAElD,OADAnmJ,QAAQrG,MAAM,0CACP,EAGTiE,EAAK7F,KAAK,YACV4uJ,EAAO/oJ,EAAM,CAACi0B,EAAKs1H,YAGrB,OAAO,IASM,WAAC5uJ,GAAD,OACb,gBAAC,IAAD,CACE8uJ,WAAW,EACXltJ,MAAM,EACNqiB,IAAKjkB,EAAMq7C,oBAxHIA,EAwH2Br7C,EAAMq7C,mBAtH/CA,GACAA,EAAmBkzG,YACnBlzG,EAAmBkzG,WAAWC,MAI1BR,IAAU3yG,EAAmBkzG,WAAWC,MAAOd,GAF7C,MAkH+D,KACtEqB,iBAAiB,EACjBC,kBAAkB,EAClBC,mBAAmB,EACnBn+I,OAAQ,SAAAwoB,GAAI,OAAI60H,EAAW70H,EAAMt5B,IACjCkvJ,uBAAwB,GACxBpnI,MAAM,UACNqnI,kBAAkB,kBA/HJ,IAAC9zG,G,SCCJ,WAACr7C,GAAD,OACb,gBAAC,WAAD,KACE,gBAACjC,EAAA,EAAD,KACE,gBAAC,QAAD,kBAEF,gBAAC,IAAD,CACE+wJ,WAAW,EACXltJ,MAAM,EACNqiB,KAtCYmrI,EAsCGpvJ,EAAMovJ,cArCpBA,EACE,CACL,aAAcA,EAAch2G,EAC5B,aAAcg2G,EAAc/1G,EAC5Bg2G,MAAOD,EAAcrS,MACrBuS,MAAOF,EAAcx7D,MACrB,UAAWw7D,EAAclW,OACzB,aAAckW,EAAcG,QAPH,MAsCvBR,iBAAiB,EACjBC,kBAAkB,EAClBC,mBAAmB,EACnBn+I,OAAQ,SAAAwoB,GAAI,OA9BC,SAACA,EAAD,GAAsC,IAA7B80H,EAA4B,EAA5BA,OAA4B,EAApBt9I,OAClC,GAAkB,eAAdwoB,EAAK13B,KACPwsJ,EAAO,CAAC,QAAS,CAAC7tH,WAAWjH,EAAKs1H,kBAC7B,GAAkB,eAAdt1H,EAAK13B,KACdwsJ,EAAO,CAAC,QAAS,CAAC7tH,WAAWjH,EAAKs1H,kBAC7B,GAAkB,UAAdt1H,EAAK13B,KACdwsJ,EAAO,CAAC,YAAa,CAAC7tH,WAAWjH,EAAKs1H,kBACjC,GAAkB,UAAdt1H,EAAK13B,KACdwsJ,EAAO,CAAC,YAAa,CAAC90H,EAAKs1H,iBACtB,GAAkB,YAAdt1H,EAAK13B,KACdwsJ,EAAO,CAAC,aAAc,CAAC7tH,WAAWjH,EAAKs1H,iBAClC,IAAkB,eAAdt1H,EAAK13B,KAET,OAAO,EADZwsJ,EAAO,CAAC,QAAS,GAAG90H,EAAKs1H,YAG3B,OAAO,EAeaT,CAAW70H,EAAMt5B,IACjCkvJ,uBAAwB,GACxBpnI,MAAM,YAER,gBAAC/pB,EAAA,EAAD,KACE,gBAAC,QAAD,6BAEF,gBAACyxJ,EAAD,CACEn0G,mBACEr7C,EAAMovJ,cAAgBpvJ,EAAMovJ,cAAcb,WAAa,KAIzDz9I,OAAQ,SAACzL,EAAM6D,GAAP,OACNlJ,EAAM8Q,OAAO,CAAC,cAAc6K,OAAOtW,GAAO6D,IAE5CklJ,OAAQ,SAAC/oJ,EAAM+4B,GAAP,OAAgBp+B,EAAMouJ,OAAO,CAAC,cAAczyI,OAAOtW,GAAO+4B,OA1DtD,IAAAgxH,G,kBCQZK,EAAiB,SAAA77D,GACrB,OAAKA,EACE,CACL,2BAA4BA,EAAM87D,gBAClC,cAAe97D,EAAM+7D,YACrB,oBAAqB/7D,EAAMg8D,QAC3B,oBAAqBh8D,EAAMi8D,SAC3B,oBAAqBj8D,EAAMk8D,SAC3B,aAAcl8D,EAAMm8D,YAPH,MAWf7vI,EAAY,SAAA8vI,GAChB,OAAKA,EAEE,CACL,aAAcA,EAAaC,aACvBD,EAAaC,aAAaF,WAC1B,KACJG,OACEF,EAAaG,SAAWH,EAAaG,QAAQ3B,MACzCR,IAAUgC,EAAaG,QAAQ3B,MAAOiB,GACtC,MATkB,MAuDPW,E,4MAInB7nJ,MAAQ,CACNk+H,cAAe,I,uDAGP,IAAD,SAC0BnmI,KAAKN,MAA9BgwJ,EADD,EACCA,aAAc5B,EADf,EACeA,OACtB,OAAK4B,EAGH,gBAAC,WAAD,KACE,gBAACjyJ,EAAA,EAAD,KACE,gBAAC,QAAD,iBAEF,gBAAC,IAAD,CACE+wJ,WAAW,EACXltJ,MAAM,EACNqiB,IAAK/D,EAAU8vI,GACfjB,iBAAiB,EACjBC,kBAAkB,EAClBC,mBAAmB,EACnBn+I,OAAQ,SAAAwoB,GAAI,OAlEH,SAACA,EAAD,GAAsC,IAA7B80H,EAA4B,EAA5BA,OAA4B,EAApBt9I,OAClC,GAA8B,IAA1BwoB,EAAKq1H,UAAUhlJ,QAA8B,eAAd2vB,EAAK13B,KACtCwsJ,EAAO,CAAC,eAAgB,gBAAiB,CAAC7tH,WAAWjH,EAAKs1H,iBACrD,MAAIt1H,EAAKq1H,UAAUhlJ,QAAU,GAkC7B,OAAO,EAjCc,WAAtB2vB,EAAKq1H,UAAU,KACC,6BAAdr1H,EAAK13B,KACPwsJ,EACE,CAAC,UAAW,QAAS90H,EAAKq1H,UAAU,GAAI,qBACxC,CAACpuH,WAAWjH,EAAKs1H,aAEI,gBAAdt1H,EAAK13B,KACdwsJ,EACE,CAAC,UAAW,QAAS90H,EAAKq1H,UAAU,GAAI,iBACxC,CAACpuH,WAAWjH,EAAKs1H,aAEI,oBAAdt1H,EAAK13B,KACdwsJ,EACE,CAAC,UAAW,QAAS90H,EAAKq1H,UAAU,GAAI,QACxC,EAAEr1H,EAAKs1H,YAEc,sBAAdt1H,EAAK13B,KACdwsJ,EACE,CAAC,UAAW,QAAS90H,EAAKq1H,UAAU,GAAI,cACxC,CAACpuH,WAAWjH,EAAKs1H,aAEI,sBAAdt1H,EAAK13B,KACdwsJ,EACE,CAAC,UAAW,QAAS90H,EAAKq1H,UAAU,GAAI,cACxC,CAACpuH,WAAWjH,EAAKs1H,aAEI,eAAdt1H,EAAK13B,MACdwsJ,EACE,CAAC,UAAW,QAAS90H,EAAKq1H,UAAU,GAAI,gBACxC,CAACpuH,WAAWjH,EAAKs1H,cAMzB,OAAO,EA2BiBT,CAAW70H,EAAM,EAAKt5B,QACtCkvJ,uBAAwB,GACxBpnI,MAAM,YAER,gBAAC/pB,EAAA,EAAD,KACE,gBAAC,QAAD,uEAIDiyJ,EAAaK,UAAYL,EAAaK,SAAS7B,OAC9C,gBAAC,IAAD,CACEn0H,qBAAmB,EACnB1d,gBAAiB,kBACf,gBAAC2d,EAAA,EAAD,CACEx4B,SAAU,oCACVd,MAAO,EAAKuH,MAAMk+H,cAClB/lI,SAAU,SAAAM,GACR,EAAK2H,SAAS,CACZ89H,cAAezlI,KAGnB6lB,WAAYuO,OAAOC,KAAK26H,EAAaK,SAAS7B,OAAOjlJ,KACnD,SAAAkhB,GAAU,MAAK,CACbhiB,KAAMgiB,EACNzpB,MAAOypB,MAGX8P,aAAW,EACXl4B,WAAS,KAGbyb,aAAc,SAAA3f,GAAK,OACjB,gBAACi5B,EAAA,EAAD,CACEj5B,MAAOA,EACPwD,MAAO,gBAAC,QAAD,eACP6L,SAAO,EACPvK,QAAS,WACPmrJ,EAAO,CAAC,gBAAiB,CAAC,EAAK7lJ,MAAMk+H,uBAnDzB,S,GAVqBzoI,aC/DtCovJ,EAA2B,SACtCkD,GAEA,MAAO,CACL,CACE3uJ,MAAO,mBACPonB,IAAK,aACLwnI,gBAAiB,SAACpD,EAAD,OAAaiB,EAAb,EAAaA,OAAQt9I,EAArB,EAAqBA,OAArB,OACf,gBAAC0+I,EAAD,CACEn0G,mBAAoB8xG,EACpBiB,OAAQA,EACRt9I,OAAQA,MAId,CACEnP,MAAO,SACPonB,IAAK,CAAC,cAAe,UACrBwnI,gBAAiB,kBAAM,MACvB3kJ,eAAe,EACf2hJ,iBAAkB,SAAAiD,GAChB,OAAKA,EAEEA,EAAUjnJ,KAAI,SAACymJ,EAActpH,GAAf,MAA0B,CAC7C/kC,MAAOquJ,EAAaS,MACpB1nI,IAAK2d,EACL6pH,gBAAiB,SAACpD,EAAD,OAAaiB,EAAb,EAAaA,OAAQt9I,EAArB,EAAqBA,OAArB,OACf,gBAAC,EAAD,CACEk/I,aAAc7C,EACdiB,OAAQA,EACRt9I,OAAQA,KAGZlF,eAAe,EACf2hJ,iBAAkB,SAAAyC,GAAY,MAAI,CAChC,CACEruJ,MAAO,kBACPonB,IAAI,aACJwnI,gBAAiB,SAACpD,EAAD,OAAaiB,EAAb,EAAaA,OAAQt9I,EAArB,EAAqBA,OAArB,OACf,gBAAC0+I,EAAD,CACEn0G,mBAAoB8xG,EACpBiB,OAAQA,EACRt9I,OAAQA,MAId,CACEnP,MAAO,YACPonB,IAAI,aACJwnI,gBAAiB,kBAAM,MACvB3kJ,eAAe,EACf2hJ,iBAAkB,SAAApoH,GAChB,OAAKA,GAAcA,EAAUqpH,MAEtBp5H,OAAOC,KAAK8P,EAAUqpH,OAAOjlJ,KAAI,SAAAkhB,GACtC,OACG0a,EAAUqpH,MAAM/jI,SAC6B5rB,WAAvCsmC,EAAUqpH,MAAM/jI,GAAY9gB,OAI9B,CACLhI,MAAM,GAAD,OAAK8oB,EAAL,aACH0a,EAAUqpH,MAAM/jI,GAAY9gB,OADzB,KAGLof,IAAK,CAAC,QAAS0B,GACf8lI,gBAAiB,kBAAM,MACvBhD,iBAAkB,SAAAjiB,GAAa,OAC7BA,EACIA,EACG7hI,QAAO,SAAA2lJ,GAAa,QAAMA,KAC1B7lJ,KAAI,SAAC6lJ,EAAe1oH,GACnB,MAAO,CACL/kC,MAAM,IAAD,OAAMytJ,EAAcptJ,IACzB+mB,IAAK2d,EACL6pH,gBAAiB,SACfpD,EADe,OAEbiB,EAFa,EAEbA,OAAQt9I,EAFK,EAELA,OAFK,OAIf,gBAAC4/I,EAAD,CACEtB,cAAejC,EACfiB,OAAQA,EACRt9I,OAAQA,SAKlB,KA5BC,QAPgC,WA/B5B,O,SCpChB,kBAAGq8I,EAAH,EAAGA,SAAUr8I,EAAb,EAAaA,OAAb,OACb,gBAAC,WAAD,KACE,gBAAC1M,EAAA,EAAD,KACE,gBAAC,QAAD,8IAKF,gBAAC,IAAD,CACE0qJ,UAAW,EACXltJ,MAAM,EACNqiB,IAAKkpI,EACLr8I,OAAQ,SAAAwoB,GACN,OAAOxoB,EAAOwoB,EAAKq1H,UAAUhzI,OAAO2d,EAAK13B,MAAO03B,EAAKs1H,YAEvDM,uBAAwB,GACxBpnI,MAAM,c,sJCrBN9jB,GAAS,CACb2sJ,OAAQ,CACN7xJ,QAAS,OACTmF,WAAY,WAuBK2sJ,G,4MACnBroJ,MAAQ,CACNsoJ,eAAgB,I,EAGlBC,mBAAqB,SACnBlvJ,EACAmvJ,EACAC,GAG4B,IAF5B72E,EAE2B,uDAFX,EAChB90E,EAC2B,uDADZ,GAEP4rJ,EAAqB,EAAKjxJ,MAA1BixJ,iBAEFC,EACJH,GAAiBC,EAAQ3iD,MAA+B,IAAvB0iD,EAAc1iD,KAC1C2iD,EAAQ3iD,KAAO0iD,EAAc1iD,KAAQ,IACtC,IACA8iD,EACJF,GAAoBD,EAAQ3iD,MAAkC,IAA1B4iD,EAAiB5iD,KAChD2iD,EAAQ3iD,KAAO4iD,EAAiB5iD,KAAQ,IACzC,IACA+iD,EAAc,EAAKC,oBAAoBhsJ,GAE7C,MAAM,CACJ,CACEzD,OACAysG,KAAM2iD,EAAQ3iD,KAAR,UAAkB2iD,EAAQ3iD,KAAKnqC,QAAQ,GAAvC,MAAgD,IACtDgtF,cAAc,GAAD,OAAKA,EAAchtF,QAAQ,GAA3B,KACbitF,aAAa,GAAD,OAAKA,EAAajtF,QAAQ,GAA1B,KACZiW,QACAm3E,iBAAkBl8H,OAAOC,KAAK27H,EAAQO,aAAa5nJ,OACnDtE,OACA+rJ,gBATJ,mBAWMA,EACA,GACAngC,IAAQ+/B,EAAQO,aAAa,SAACC,EAAYC,GAAb,OAC3B,EAAKX,mBACHW,EACAT,EACAQ,EACAr3E,EAAQ,EAJV,UAKK90E,EALL,YAKa80E,EALb,YAKsBs3E,U,EAMhCJ,oBAAsB,SAAChsJ,GACrB,OAAO,EAAKkD,MAAMsoJ,eAAexrJ,I,EAGnCqsJ,eAAiB,SAACrsJ,GAChB,EAAKsD,UAAS,SAAAJ,GAAK,MAAK,CACtBsoJ,eAAe,2BACVtoJ,EAAMsoJ,gBADG,IAEZ,CAACxrJ,IAAQkD,EAAMsoJ,eAAexrJ,U,EAKpCssJ,cAAgB,YAAmC,IAAhCjrH,EAA+B,EAA/BA,MACjB,OAAIA,EAAQ,EACH,iBAEAA,EAAQ,IAAM,EAAI,eAAiB,e,EAI9CkrH,uBAAyB,YAAgD,IAA7CC,EAA4C,EAA5CA,QAC1B,OACE,uBAAK1zJ,MAAO6F,GAAO2sJ,QACjB,uBAAKxyJ,MAAO,CAAEqF,MAAuB,EAAhBquJ,EAAQ13E,SAC5B03E,EAAQP,eACP,gBAAChtJ,EAAA,EAAD,CAAYrB,QAAS,kBAAM,EAAKyuJ,eAAeG,EAAQxsJ,QACpDwsJ,EAAQT,YAAc,gBAAC,KAAD,MAAmB,gBAAC,KAAD,OAG5C,uBAAKjzJ,MAAO,CAAEqF,MAAO,MAEtBquJ,EAAQjwJ,O,uDAKL,IAAD,OACCqvJ,EAAqB3wJ,KAAKN,MAA1BixJ,iBACR,IAAKA,EAAkB,OAAO,KAE9B,IAAMa,EAAWxxJ,KAAKwwJ,mBAAmB,MAAO,KAAMG,GAEtD,OACE,gBAAC9hJ,EAAA,EAAD,MACG,SAAA2P,GAAQ,OACP,gBAAC,IAAD,MACG,gBAAG3U,EAAH,EAAGA,OAAQ3G,EAAX,EAAWA,MAAX,OACC,gBAAC,IAAD,CACEuuJ,aAAc,GACd5nJ,OAAQA,EACRwD,UAAS,mBAAcmR,EAASkzI,oBAChCC,gBAAiB,oBACjBx2F,SAAUq2F,EAASnoJ,OACnBuoJ,UAAW,gBAAGxrH,EAAH,EAAGA,MAAH,OAAeorH,EAASprH,IACnCg1B,UAAW,GACXy2F,WAAY,aACZC,aAAc,EAAKT,cACnBnuJ,MAAOA,GAEP,gBAAC,IAAD,CACE7B,MAAO,gBAAC,QAAD,qBACP0wJ,QAAQ,OACR7uJ,MAAe,GAARA,EACPmK,UAAW,cACXq4D,aAAc,EAAK4rF,yBAErB,gBAAC,IAAD,CACEjwJ,MAAO,gBAAC,QAAD,kBACP0wJ,QAAQ,OACR7uJ,MAAe,GAARA,EACPmK,UAAW,gBAEb,gBAAC,IAAD,CACEhM,MAAO,gBAAC,QAAD,oBACP0wJ,QAAQ,gBACR7uJ,MAAe,GAARA,EACPmK,UAAW,gBAEb,gBAAC,IAAD,CACEhM,MAAO,gBAAC,QAAD,mBACP0wJ,QAAQ,eACR7uJ,MAAe,GAARA,EACPmK,UAAW,2B,GApIc3P,a,WCzBrCgG,GAAS,CACbsuJ,eAAgB,CACd7uJ,KAAM,IAWW8uJ,G,uKACT,IAAD,EAC0DjyJ,KAAKN,MAA9DwyJ,EADD,EACCA,QAASC,EADV,EACUA,OAAQC,EADlB,EACkBA,eAAgBC,EADlC,EACkCA,oBAEzC,OACE,gBAAC5jJ,EAAA,EAAD,KACE,gBAAC,IAAD,CAAM9K,WAAW,SAASC,eAAe,WACrCyuJ,GAAuBD,GACvB,gBAAC30J,EAAA,EAAD,KACE,gBAAC,QAAD,kDACyB20J,EAAeE,MAAMC,iBAIhDF,GAAuBD,GACvB,gBAACt7H,EAAA,EAAD,CAAcz1B,MAAO,gBAAC,QAAD,gBAAwBsB,QAASuvJ,KAEtDG,IAAwBD,GACxB,gBAACt7H,EAAA,EAAD,CACEz1B,MAAO,gBAAC,QAAD,wBACPsB,QAASuvJ,IAGZG,GACC,gBAACv7H,EAAA,EAAD,CACEz1B,MAAO,gBAAC,QAAD,uBACPsB,QAASwvJ,KAIdE,GACC,gBAAC,IAAD,CAAM1uJ,WAAW,UACf,gBAACqyE,GAAA,EAAD,CAAgBn4E,MAAO,CAAEsF,KAAM,GAAK9E,QAAS,mBAGjD,uBAAKR,MAAO6F,GAAOsuJ,gBAChBI,GACC,gBAAC,GAAD,CACEzB,iBAAkByB,EAAeI,yBAGnCJ,GACA,gBAACtuJ,EAAA,EAAD,KACE,gBAAC,QAAD,wF,GA3CwBpG,a,iRCkBzB+0J,GAAb,iDACEp2C,KAAmB,GADrB,KAEEiR,OAAsB,IAAItmF,IAF5B,KAGE0rH,UAA6B,IAAI1rH,IAHnC,KAIE2rH,YAA+B,IAAI3rH,IAJrC,KAKE4rH,aAA2B,GAL7B,KAMEC,gBAA0B,EAN5B,0DAQiB,IAAD,GACZ,EAAA7yJ,KAAKq8G,MAAKmT,QAAV,oBAAqBxvH,KAAK4yJ,eAC1B5yJ,KAAK4yJ,aAAavpJ,OAAS,EAC3BrJ,KAAK6yJ,gBAAiB,EACtB7yJ,KAAK0yJ,UAAU1sJ,SAAQ,SAAA8sJ,GAAC,OAAIA,SAZhC,6BAeShuH,GACL9kC,KAAK4yJ,aAAapjC,QAAQ1qF,GACrB9kC,KAAKstH,OAAO/oF,IAAIO,EAAI1V,SACvBpvB,KAAKstH,OAAOpsG,IAAI4jB,EAAI1V,OACpBpvB,KAAK2yJ,YAAY3sJ,SAAQ,SAAA8sJ,GAAC,OAAIA,QAE3B9yJ,KAAK6yJ,iBACRh6I,WAAW7Y,KAAK+yJ,YAAYrnB,KAAK1rI,MAAO,KACxCA,KAAK6yJ,gBAAiB,KAvB5B,yBA2BKjyJ,EAAwBg+B,GACX,UAAVh+B,GAAmBZ,KAAK2yJ,YAAYzxI,IAAI0d,GAC9B,QAAVh+B,GAAiBZ,KAAK0yJ,UAAUxxI,IAAI0d,KA7B5C,0BAgCMh+B,EAAwBg+B,GACZ,UAAVh+B,GAAmBZ,KAAK2yJ,YAAY5/I,OAAO6rB,GACjC,QAAVh+B,GAAiBZ,KAAK0yJ,UAAU3/I,OAAO6rB,OAlC/C,KAsCMo0H,GAAsB,CAC1BC,WAAY,OACZhuI,OAAQ,OACR7Z,UAAW,cAGP1H,GAAS,CACb6tB,KAAM,CAEJqxB,UAAW,SAEX/yC,UAAW,UAEboS,IAAK,CAAEnY,YAAa,GACpBopJ,gBAAgB,2BACXF,IADU,IAEb9vJ,MAAO,OACPke,gBAAiB,UACjB4rC,aAAc,MACd8H,OAAQ,sBACR/2D,MAAO,QACPoX,WAAY,2BACZhT,SAAU,GACV0B,QAAS,KAIPsvJ,GAAM,SAAC,GAAD,IAAGvpJ,EAAH,EAAGA,KAAMvI,EAAT,EAASA,MAAT,OACV,gBAAC+xJ,GAAA,EAAD,CACExpJ,KAAMA,EACN/L,MAAO6F,GAAOue,IACdnkB,KAAK,QACLuD,MAAO,wBAAMxD,MAAOm1J,IAAsB3xJ,MAIxCgyJ,GAAU,CACdjsJ,KAAM,gBAAC,KAAD,CAAUrJ,MAAM,UAAUoE,SAAS,UACzCuI,QAAS,gBAAC,KAAD,CAAa3M,MAAM,YAAYoE,SAAS,UACjDrB,MAAO,gBAAC,KAAD,CAAW/C,MAAM,QAAQoE,SAAS,WAG9BmxJ,GAAkB,SAAC,GAIzB,IAHLC,EAGI,EAHJA,YAIM/tH,EAAcC,eAEZ42E,EAAiBk3C,EAAjBl3C,KAAMiR,EAAWimC,EAAXjmC,OACd5vH,aACE,WAEE,IAAM81J,EAAW,WACfhuH,KAGF,OADA+tH,EAAYpV,GAAG,MAAOqV,GACf,WACLD,EAAYE,IAAI,MAAOD,MAG3B,CAAChuH,EAAa+tH,IAGhB,IAAMxuF,EAAwBrnE,SAAa,GACrCg2J,EAAoBh2J,WACxB,kBACE,IAAIi2J,IAAkB,CACpBC,cAAe,GACf/wG,UAAW,GACXgxG,YAAY,EAIZC,UAAW,SAAA1tH,GAAK,OAAIi2E,EAAKhzG,OAAS+8B,OAEtC,CAACi2E,IA9BC,EAiCoC3+G,YAAe,GAjCnD,oBAiCGq2J,EAjCH,KAiCiBC,EAjCjB,OAkCmCt2J,YAAe,GAlClD,oBAkCGu2J,EAlCH,KAkCgBC,EAlChB,OAyCkDx2J,YAAe,GAzCjE,oBAyCGy2J,EAzCH,KAyCwBC,EAzCxB,KA0CEC,EAAe32J,SAAa,IAAIspC,KAAO/mC,QAC7CvC,aACE,WAEE,GAAKy2J,EAAL,CAGA,IAAMX,EAAW,kBAAMhuH,KAEvB,OADA+tH,EAAYpV,GAAG,QAASqV,GACjB,WACLD,EAAYE,IAAI,QAASD,OAG7B,CAACW,EAAqB3uH,EAAa+tH,IAGrC,IAAMe,EAAej4C,EAClBlzG,QAAO,gBAAGorJ,EAAH,EAAGA,SAAH,QAAoBR,GAAgBQ,MAC3CprJ,QAAO,gBAAGimB,EAAH,EAAGA,MAAH,OAAgBilI,EAAa9vH,IAAInV,MAE3C,OACE,gBAAC,IAAD,CAAQlxB,UAAQ,EAACs2J,kBAAgB,EAAChqJ,QAAM,GACtC,gBAAC,IAAD,CAAMtM,UAAQ,EAACsM,QAAM,GACnB,gBAAC,IAAD,MACG,YAAwB,IAArBtH,EAAoB,EAApBA,MAAO2G,EAAa,EAAbA,OACT,OAAK3G,GAAU2G,GAGXk7D,EAAsB9kE,UAAYiD,IACpCwwJ,EAAkBe,WAClB1vF,EAAsB9kE,QAAUiD,GAIhC,gBAAC,IAAD,CACEwxJ,yBAA0BhB,EAC1B7pJ,OAAQA,EACR3G,MAAOA,EACPrF,MAAO6F,GAAO6tB,KACd4pC,SAAUm5F,EAAajrJ,OACvB+xD,UAAWs4F,EAAkBt4F,UAC7BC,YAAa,gBAAGj1B,EAAH,EAAGA,MAAO3d,EAAV,EAAUA,IAAKkM,EAAf,EAAeA,OAAQ92B,EAAvB,EAAuBA,MAAvB,OACX,gBAAC,IAAD,CACEsH,MAAOuuJ,EACPxzB,YAAa,EACbz3G,IAAKA,EACLkM,OAAQA,EACR0wC,SAAUj/B,IAET,gBAAGuuH,EAAH,EAAGA,cAAH,OACC,uBACElsI,IAAKA,EACL5qB,MAAK,2BACAA,GADA,IAEHgG,QAAS,EACTrF,QAAS,OACTmF,WAAY,eAEdhG,IAAKg3J,GAEL,gBAAC,IAAD,CAAQz2J,UAAQ,GACbm1J,GAAQiB,EAAaluH,GAAO3lC,OAAS4yJ,GAAO,MAE/C,gBAAC,IAAD,MACA,gBAAC,IAAD,CAAQn1J,UAAQ,EAACsM,QAAM,GACrB,gBAAC,IAAD,CAAMtM,UAAQ,GACZ,uBAAKL,MAAO6F,GAAOwvJ,iBAChBoB,EAAaluH,GAAO37B,UAGxBwpJ,GACC,gCACE,gBAAC,IAAD,MACA,gBAAC,IAAD,CAAM/1J,UAAQ,GACXo2J,EAAaluH,GAAOhX,MACnB,gBAAC,GAAD,CACExlB,KAAM,gBAAC,KAAD,MACNvI,MACE,gBAAC,QAAD,2BACUizJ,EAAaluH,GAAOhX,WAIhC,KACJ,gBAAC,GAAD,CACExlB,KAAM,gBAAC,KAAD,MACNvI,MACE,gBAAC,QAAD,+BAEGkV,KAAK0H,MAC4B,IAAhCq2I,EAAaluH,GAAOwuH,WAEpB,IACA,oBApEE,SAqFpC,gBAAClpI,GAAA,EAAD,KACE,gBAAC,IAAD,CAAM9nB,eAAe,gBAAgBD,WAAW,SAASzF,UAAQ,GAC/D,gBAAC22J,EAAA,EAAD,CACExzJ,MACE4yJ,EACE,gBAAC,QAAD,qBAEA,gBAAC,QAAD,qBAGJhiJ,YAAa,gBAAC,KAAD,MACbD,cAAe,gBAAC,KAAD,MACfD,QAASkiJ,EACTriJ,QAAS,SAACnQ,EAAG+8B,GAAJ,OAjIjB01H,EAiIgD11H,QA/HhDk1H,EAAkBe,cAiIZ,gBAACI,EAAA,EAAD,CACExzJ,MAAO,gBAAC,QAAD,sBACP4Q,YAAa,gBAAC,KAAD,MACbD,cAAe,gBAAC,KAAD,MACfD,SAAUgiJ,EACVniJ,QAAS,SAACnQ,EAAGf,GAAJ,OAAcszJ,GAAiBtzJ,MAE1C,gBAACsD,EAAA,EAAD,CACEC,QAAS,gCACTtB,QAAS,kBAAMyxJ,GAAuB,IACtCnoJ,KAAK,QACLnO,KAAK,SAEL,gBAAC,KAAD,SAKLq2J,GACC,gBAACjgF,GAAA,EAAD,CACEvoE,MAAI,EACJrH,MAAO,gBAAC,QAAD,qCACPsZ,eAAgB,kBAAMw2I,GAAuB,IAC7C/4G,QAAS,CACP,gBAACk3B,GAAA,EAAD,CACE9pD,IAAI,QACJpnB,MAAO,gBAAC,QAAD,cACP6L,SAAS,EACTvK,QAAS,kBAAMyxJ,GAAuB,OAG1C/tI,QAAS,kBAAM+tI,GAAuB,KAEtC,gBAAC,IAAD,KACI,WACA,IADM,EACA7iI,EAAO,GADP,cAEc+7F,EAAOxpG,UAFrB,yBAEKsL,EAFL,QAGJmC,EAAKryB,KACH,gBAAC,IAAD,CAAMupB,IAAK2G,GACT,gBAACylI,EAAA,EAAD,CACExzJ,MAAO+tB,EACPrd,SAAUsiJ,EAAa9vH,IAAInV,GAC3Bxd,QAAS,SAACnQ,EAAGsQ,GACPA,EAASsiJ,EAAathJ,OAAOqc,GAC5BilI,EAAanzI,IAAIkO,GAEtBoW,UAVV,+BAFM,8BAiBN,OAAOjU,EAjBP,O,mBCvRRswG,GAA2B,CAC/BryF,UAAW,SACXkU,MAAO,CACLlU,UAAW,MACXkU,MAAO,aACPD,OAAQ,qBACRD,gBAAiB,IAEnBC,OAAQ,CACNjU,UAAW,MACXkU,MAAO,WACPD,OAAQ,UACRD,gBAAiB,IAEnBA,gBAAiB,IAOEsxG,G,4MACnB7sJ,MAAQ,CACN8sJ,kBAAmB,KACnBC,0BAA2B,GAC3BC,SAAS,G,EAGXC,SAA0B,K,EAE1BC,aAAe,WACT,EAAKD,UAAU,EAAKA,SAAS7wG,WAAW,WAAY,MAAO,GAAI,Q,EAGrE+wG,YAAc,WACR,EAAKF,UAAU,EAAKA,SAAS7wG,WAAW,UAAW,QAAS,GAAI,Q,uDAG5D,IAAD,SAWHrkD,KAAKN,MATPmtJ,EAFK,EAELA,SACAwI,EAHK,EAGLA,UACAvH,EAJK,EAILA,OACAt9I,EALK,EAKLA,OACA8kJ,EANK,EAMLA,gBACAC,EAPK,EAOLA,eACAnD,EARK,EAQLA,eACAC,EATK,EASLA,oBACAkB,EAVK,EAULA,YAVK,EAgBHvzJ,KAAKiI,MAHP8sJ,EAbK,EAaLA,kBACAC,EAdK,EAcLA,0BACAC,EAfK,EAeLA,QAGI1wG,EAAU,CACdixG,WAAY,CACV/0J,KAAM,UACN6D,MAAO,kBACP0/C,gBAAiB,GACjBmB,aAAc,kBACZ,gBAAC12C,EAAA,EAAD,KACE,gBAAC,IAAD,CAAQjE,QAAM,EAACtM,UAAQ,EAAC82D,eAAa,GACnC,gBAAC,IAAD,CAAMpxD,eAAe,UACnB,gBAACkzB,EAAA,EAAD,CACEz1B,MAAO,gBAAC,QAAD,gBACPsB,QAAS0yJ,EACTnoJ,SAAO,KAGX,gBAAC,EAAD,CACE2/I,SAAUA,EACVC,yBAA0BA,EAC1BI,kBAAmB,SACjB6H,EACAC,GAFiB,OAIjB,EAAK3sJ,SAAS,CACZ0sJ,oBACAC,qCAQd,qBAAsB,CACpBv0J,KAAM,UACNykD,YAAY,EACZC,aAAc,kBACZ,gBAAC12C,EAAA,EAAD,KACE,gBAACgnJ,GAAA,EAAD,KACE,gBAAC,IAAD,KACGV,EACCE,EACE,gBAACS,EAAD,CACE7I,SAAUnyI,IAAImyI,EAAUmI,EAA2B,MACnDxkJ,OAAQ,SAACzL,EAAM6D,GAAP,OACN4H,EAAOwkJ,EAA0B35I,OAAOtW,GAAO6D,MAInDmsJ,EAAkB9E,gBAChBv1I,IAAImyI,EAAUmI,EAA2B,MACzC,CACElH,OAAQ,SAAC/oJ,EAAM+4B,GAAP,OACNgwH,EAAOkH,EAA0B35I,OAAOtW,GAAO+4B,IACjDttB,OAAQ,SAACzL,EAAM6D,GAAP,OACN4H,EACEwkJ,EAA0B35I,OAAOtW,GACjC6D,OAIN,gBAAC9E,EAAA,EAAD,KACE,gBAAC,QAAD,uFAQN,gBAACA,EAAA,EAAD,KACG+oJ,EACC,gBAAC,QAAD,iDAEA,gBAAC,QAAD,8FASV,gBAACnhI,GAAA,EAAD,KACE,gBAAC,IAAD,CAAM9nB,eAAe,gBAAgBD,WAAW,SAASzF,UAAQ,GAC/D,gBAACyM,EAAA,EAAD,CAAYC,aAAa,wBACzB,2BACE,gBAACiqJ,EAAA,EAAD,CACE5iJ,YAAa,gBAAC,IAAD,MACbD,cAAe,gBAAC,IAAD,MACfD,QAASkjJ,EACTrjJ,QAAS,SAAC+C,EAAG6pB,GAAJ,OACP,EAAKn2B,SAAS,CACZ4sJ,QAASz2H,aAU3Bm3H,SAAU,CACRl1J,KAAM,YACN6D,MAAO,gBACP6gD,aAAc,kBACZ,gBAAC,GAAD,CACE+sG,QAASoD,EACTnD,OAAQoD,EACRnD,eAAgBA,EAChBC,oBAAqBA,MAI3BlrJ,QAAS,CACP1G,KAAM,YACN6D,MAAO,eACP6gD,aAAc,kBACZ,gBAAC12C,EAAA,EAAD,KACE,gBAAC,GAAD,CAAiB8kJ,YAAaA,GAAe,SAMrD,OACE,gBAAC9wH,GAAA,EAAmB3zB,SAApB,MACG,gBAAG29H,EAAH,EAAGA,2BAA4BC,EAA/B,EAA+BA,2BAA/B,OACC,gBAACxoF,EAAA,EAAD,CACEvmD,IAAK,SAAA4mD,GAAO,OAAK,EAAK2wG,SAAW3wG,GACjCA,QAASA,EACTH,aACEqoF,EAA2B,aAAe5K,GAE5C98E,eAAgB,SAAAxpC,GAAI,OAClBmxH,EAA2B,WAAYnxH,a,GA1KR7d,a,oBC1DxBk4J,G,uKACT,IAAD,OACDC,IAAiB71J,KAAKN,MAAMo2J,YAAYzsJ,OAC9C,OACE,gBAACP,GAAA,EAAD,CACE/G,WAAS,EACTrB,MAAOm1J,EAAe71J,KAAKN,MAAMq2J,WAAa,EAC9C31J,SAAU,SAACuU,EAAG1V,EAAGyB,GAAP,OACR,EAAKhB,MAAMs2J,iBAAiBhzI,SAAStiB,EAAO,KAAO,IAErDM,UAAW60J,GAEV71J,KAAKN,MAAMo2J,YAAY7sJ,KAAI,SAAAvH,GAAE,OAC5B,gBAACgI,GAAA,EAAD,CACEhJ,MAAOgB,EACP+mB,IAAK/mB,EACLiI,YAAa,iCAAkBjI,aAGjCm0J,GACA,gBAACnsJ,GAAA,EAAD,CACEhJ,MAAO,EACPiJ,YAAa,qG,GAtBqBjM,a,oBCsBxCu4J,GAA8B,SAAC,GAAD,IAAG7mI,EAAH,EAAGA,MAAO3kB,EAAV,EAAUA,QAAV,MACxB,eAAV2kB,IACC3kB,EAAQuwB,SAAS,8BAChBvwB,EAAQuwB,SAAS,yDAyBAk7H,G,4MACnBjuJ,MAAQ,CACNkuJ,oBAAqB,EAAKz2J,MAAMgqG,sBAAsB0sD,iBACtDC,oBAAqB,KACrBP,YAAa,EAAKp2J,MAAMgqG,sBAAsB4sD,yBAC9CC,kCAAmC,KACnCC,iBAAkB,GAClBC,gBAAiB,GACjBpE,oBAAqB,GACrB0D,WAAY,EACZ15C,KAAM,I,EAGRq6C,kBAAwD,G,EACxDC,cAA0C,IAAIn6G,I,EA0C9Co6G,yBAA2B,WAAO,IACxBltD,EAA0B,EAAKhqG,MAA/BgqG,sBACA6sD,EAAsC,EAAKtuJ,MAA3CsuJ,kCACR,IACEA,GAC2C,YAA3C7sD,EAAsB0sD,iBAFxB,CAMIG,GAAmCA,IAGvC,IAAMM,EAAsBntD,EAAsBotD,kBAAkB,CAClEC,gBAAiB,SAAA9gI,GACf,EAAK5tB,SACH,CACEguJ,oBAAqBpgI,IAEvB,kBAAM,EAAKyzD,oBAGfstE,mBAAoB,YAA0B,IAAvBt1J,EAAsB,EAAtBA,GAAIo0J,EAAkB,EAAlBA,YACzB,EAAKa,cAAc5jJ,OAAOrR,GAC1B,EAAK2G,UACH,YAKO,IAJL0tJ,EAII,EAJJA,WACAS,EAGI,EAHJA,iBACAC,EAEI,EAFJA,gBACApE,EACI,EADJA,oBAQA,OAJImE,EAAiB90J,WAAY80J,EAAiB90J,GAC9C+0J,EAAgB/0J,WAAY+0J,EAAgB/0J,GAC5C2wJ,EAAoB3wJ,WAAY2wJ,EAAoB3wJ,GAEjD,CACLo0J,cACAC,WACEA,IAAer0J,EACXq0J,EACAD,EAAYzsJ,OACZysJ,EAAYA,EAAYzsJ,OAAS,GACjC0sJ,EACNS,mBACAC,kBACApE,0BAGJ,kBAAM,EAAK3oE,oBAGfutE,mBAAoB,YAA0B,IAAvBv1J,EAAsB,EAAtBA,GAAIo0J,EAAkB,EAAlBA,YACzB,EAAKztJ,SACH,CACEytJ,cACAC,WAAYr0J,IAEd,kBAAM,EAAKgoF,oBAGfwtE,qBAAsB,WACpB,EAAK7uJ,SACH,CACE8tJ,oBAAqBzsD,EAAsB0sD,mBAE7C,kBAAM,EAAK1sE,oBAGfytE,sBAAuB,YAA4B,IAAzBz1J,EAAwB,EAAxBA,GAAI01J,EAAoB,EAApBA,cAC5B,EAAKC,eAAe31J,EAAI01J,MAG5B,EAAK/uJ,SAAS,CACZkuJ,kCAAmCM,M,EAIvCQ,eAAiB,SAAC31J,EAAgBgoB,GAChC,GAAqB,SAAjBA,EAAK+U,QACP,EAAKp2B,SAAS,CACZmuJ,iBAAiB,2BACZ,EAAKvuJ,MAAMuuJ,kBADA,IAEd,CAAC90J,GAAKgoB,EAAKs2D,iBAGV,GAAqB,oBAAjBt2D,EAAK+U,QACd,EAAKp2B,SAAS,CACZouJ,gBAAgB,2BACX,EAAKxuJ,MAAMwuJ,iBADD,IAEb,CAAC/0J,GAAKgoB,EAAKs2D,iBAGV,GAAqB,qBAAjBt2D,EAAK+U,QACd,EAAKp2B,UAAS,SAAAJ,GAAK,MAAK,CACtBoqJ,oBAAoB,2BAAMpqJ,EAAMoqJ,qBAAb,IAAkC,CAAC3wJ,IAAK,aAExD,GAAqB,qBAAjBgoB,EAAK+U,QACd,EAAKp2B,UAAS,SAAAJ,GAAK,MAAK,CACtBoqJ,oBAAoB,2BAAMpqJ,EAAMoqJ,qBAAb,IAAkC,CAAC3wJ,IAAK,aAExD,GAAqB,qBAAjBgoB,EAAK+U,cAET,GAAqB,gBAAjB/U,EAAK+U,QAA2B,CAEzC,GAAIw3H,GAA4BvsI,EAAKs2D,SAAU,OAC/C,EAAKs3E,gBAAgB51J,GAAI61J,OAAO7tI,EAAKs2D,cAErC74E,QAAQ4sB,KACN,iDACArK,EAAK+U,U,EAKX+4H,MAAQ,SAAC91J,GAC2B,EAAKhC,MAA/BgqG,sBACc+tD,YAAY/1J,EAAI,CAAE+8B,QAAS,U,EAGnDi5H,OAAS,SAACh2J,GAC0B,EAAKhC,MAA/BgqG,sBACc+tD,YAAY/1J,EAAI,CAAE+8B,QAAS,W,EAGnDk5H,SAAW,SAACj2J,GACwB,EAAKhC,MAA/BgqG,sBACc+tD,YAAY/1J,EAAI,CAAE+8B,QAAS,a,EAGnDm5H,MAAQ,SAACl2J,EAAgBqD,EAAqB6D,GAS5C,OARkC,EAAKlJ,MAA/BgqG,sBACc+tD,YAAY/1J,EAAI,CACpC+8B,QAAS,MACT15B,OACA6D,aAGFiQ,YAAW,kBAAM,EAAK8+I,SAASj2J,KAAK,MAC7B,G,EAGTm2J,MAAQ,SAACn2J,EAAgBqD,EAAqB+4B,GAS5C,OARkC,EAAKp+B,MAA/BgqG,sBACc+tD,YAAY/1J,EAAI,CACpC+8B,QAAS,OACT15B,OACA+4B,SAGFjlB,YAAW,kBAAM,EAAK8+I,SAASj2J,KAAK,MAC7B,G,EAGTo2J,eAAiB,SAACp2J,GACkB,EAAKhC,MAA/BgqG,sBACc+tD,YAAY/1J,EAAI,CAAE+8B,QAAS,oB,EAGnDs5H,cAAgB,SAACr2J,GACmB,EAAKhC,MAA/BgqG,sBACc+tD,YAAY/1J,EAAI,CAAE+8B,QAAS,mB,EAGnDu5H,qBAAuB,WAAO,IAAD,EACS,EAAK/vJ,MAAjC8tJ,EADmB,EACnBA,WACR,OAA4C,IAFjB,EACPD,YACDpuJ,QAAQquJ,I,8DA9MZ,IAAD,OACd/1J,KAAKN,MAAMsvF,WACT,gBAAC,EAAD,CACEm9D,OAAQ,kBAAM,EAAKqL,MAAM,EAAKvvJ,MAAM8tJ,aACpC3J,QAAS,kBAAM,EAAKsL,OAAO,EAAKzvJ,MAAM8tJ,aACtC1J,QAASrsJ,KAAKg4J,uBACd1L,SAAUtsJ,KAAKg4J,uBACfxL,gBAAiBxsJ,KAAKg4J,uBACtBzL,eAAgB,WACV,EAAKmK,kBAAkB,EAAKzuJ,MAAM8tJ,aACpC,EAAKW,kBAAkB,EAAKzuJ,MAAM8tJ,YAAYZ,gBAElDzI,eAAgB1sJ,KAAKg4J,uBACrBvL,cAAe,WACT,EAAKiK,kBAAkB,EAAKzuJ,MAAM8tJ,aACpC,EAAKW,kBAAkB,EAAKzuJ,MAAM8tJ,YAAYX,oB,0CAOtDp1J,KAAK42J,6B,6CAID52J,KAAKiI,MAAMsuJ,mCACbv2J,KAAKiI,MAAMsuJ,sC,sCAIC70J,GACd,IAAI1C,EAASgB,KAAK22J,cAAcj8I,IAAIhZ,GAKpC,OAJK1C,IACHA,EAAS,IAAIyzJ,GACbzyJ,KAAK22J,cAAclgH,IAAI/0C,EAAI1C,IAEtBA,I,+BA4KC,IAAD,SASHgB,KAAKiI,MAPPouJ,EAFK,EAELA,oBACAF,EAHK,EAGLA,oBACAJ,EAJK,EAILA,WACAD,EALK,EAKLA,YACAU,EANK,EAMLA,iBACAC,EAPK,EAOLA,gBACApE,EARK,EAQLA,oBAGF,OACE,gBAAC5jJ,EAAA,EAAD,KAC2B,YAAxB0nJ,IAAsCE,GACrC,gBAAC4B,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,MACA,gBAACz6J,EAAA,EAAD,KACE,gBAAC,QAAD,kCAImB,YAAxB04J,GAAqCE,GACpC,gBAAC4B,GAAA,EAAD,KACE,gBAACx6J,EAAA,EAAD,KACE,gBAAC,QAAD,kHAOmB,YAAxB04J,GACC,gBAAC,IAAD,CAAQ3rJ,QAAM,EAACtM,UAAQ,GACrB,gBAAC,GAAD,CACE63J,WAAYA,EACZD,YAAaA,EACbE,iBAAkB,SAAAt0J,GAAE,OAClB,EAAK2G,SACH,CACE0tJ,WAAYr0J,IAEd,kBAAM,EAAKgoF,sBAIhB1pF,KAAKg4J,wBACJ,gBAAC,GAAD,CACEr6J,IAAK,SAAAw6J,GAAe,OACjB,EAAKzB,kBAAkBX,GAAcoC,GAExCtL,SAAU2J,EAAiBT,GAC3B5J,OAAQ,kBAAM,EAAKqL,MAAMzB,IACzB3J,QAAS,kBAAM,EAAKsL,OAAO3B,IAC3BV,UAAW,kBAAM,EAAKsC,SAAS5B,IAC/BvlJ,OAAQ,SAACzL,EAAM+4B,GAAP,OAAgB,EAAK85H,MAAM7B,EAAYhxJ,EAAM+4B,IACrDgwH,OAAQ,SAAC/oJ,EAAM+4B,GAAP,OAAgB,EAAK+5H,MAAM9B,EAAYhxJ,EAAM+4B,IACrDw3H,gBAAiB,kBAAM,EAAKwC,eAAe/B,IAC3CR,eAAgB,kBAAM,EAAKwC,cAAchC,IACzC3D,eAAgBqE,EAAgBV,GAChC1D,oBAAqBA,EAAoB0D,GACzCxC,YAAavzJ,KAAKs3J,gBAAgBvB,MAGpC/1J,KAAKg4J,wBACL,gBAACl0J,EAAA,EAAD,KACE,gBAAC,QAAD,mF,GAlSsBpG,a,6CChD/B,IAAM06J,GAAb,4MAMEnwJ,MAAQ,CACNowJ,qBAAqB,GAPzB,oEAUwBn/H,GAIpB,OAAOl5B,KAAKN,MAAM+kF,UAAYvrD,EAAUurD,WAd5C,mCAkBI,OAAOzkF,KAAKN,MAAMwF,UAlBtB,kCAsBI,OAAO,OAtBX,sCA0BQlF,KAAKykD,QAAQzkD,KAAKykD,OAAOilC,kBA1BjC,+FAkCI1pF,KAAKs4J,0BAlCT,0CAsCIt4J,KAAKs4J,0BAtCT,8CA2CMt4J,KAAKu4J,sBACLv4J,KAAKN,MAAM+kF,WACVzkF,KAAKiI,MAAMowJ,sBAEZr4J,KAAKu4J,qBAAqB73E,uBAC1B1gF,KAAKqI,SAAS,CACZgwJ,qBAAqB,OAjD7B,+BAsDY,IAAD,SACoCr4J,KAAKN,MAAxCwF,EADD,EACCA,QAASwkG,EADV,EACUA,sBACjB,OAAKxkG,GAAYwkG,EAGf,gBAAC,WAAD,KACE,gBAAC,GAAD,CACExkG,QAASA,EACT8pF,WAAYhvF,KAAKN,MAAMsvF,WACvB0a,sBAAuBA,EACvB/rG,IAAK,SAAA8mD,GAAM,OAAK,EAAKA,OAASA,KAEhC,gBAAC+7B,GAAA,EAAD,CACE7iF,IAAK,SAAA66J,GAAmB,OACrB,EAAKD,qBAAuBC,GAE/Bj4E,qBAAsB,WAChB,EAAK7gF,MAAM6gF,sBACb,EAAK7gF,MAAM6gF,wBAEf7+E,GAAG,WACH4C,MAAO,gBAAC,QAAD,iBACP+gC,KAAK,SApBoC,SAxDnD,GAA6C3nC,aAmFhCq0G,GAAgC,SAC3CryG,GAD2C,OAExC,gBAAC,GAA4BA,K,sIC/F5B+4J,E,uKAEF,OAAOz4J,KAAKN,MAAM9B,a,GAFmBguB,aAc1B8sI,4BAAgBC,IAAaC,KAA7BF,CACbD,G,kKChBI/0J,EAAS,CACbi5B,SAAU,CAAE5yB,WAAY,EAAG4a,cAAe,WAG7B,kBACb/mB,EADa,EACbA,SACAg/B,EAFa,EAEbA,UAFa,OAOb,4BACGh/B,EACAg/B,GAAa,gBAACo6C,EAAA,EAAD,CAAkBl5E,KAAM,GAAID,MAAO6F,EAAOi5B,a,6CCL/Ck8H,EAAkB,SAC7B/rI,EACAgsI,GAEA,SAAIA,GAA2B,KAAbhsI,MACTA,GAAY,YAAY2I,KAAK3I,IAAaA,EAASzjB,OAAS,IAG1D0vJ,EACX,oFAEWC,EAAgB,SAAC,GAKhB,IAJZt4J,EAIW,EAJXA,MACAN,EAGW,EAHXA,SACAW,EAEW,EAFXA,UACA+3J,EACW,EADXA,WAKA,OACE,gBAACh5J,EAAA,EAAD,CACE6B,WAAS,EACTjB,MAAOA,EACPb,kBAAmB,gBAAC,QAAD,iBACnBkC,WAAS,EACT3B,SAAUA,EACVW,WATF83J,EAAgBn4J,EAAOo4J,QAAcv6J,EAAYw6J,IASVh4J,KCR9Bk4J,EAAoB,SAACn4J,GAChC,GAAKA,EAEL,MAAmB,uBAAfA,EAAM0gC,KACD,kBAAC,QAAD,+BACU,uBAAf1gC,EAAM0gC,KACD,kBAAC,QAAD,+BACU,wBAAf1gC,EAAM0gC,KAEN,kBAAC,QAAD,gEAEe,8BAAf1gC,EAAM0gC,KACD,kBAAC,QAAD,yDACU,+BAAf1gC,EAAM0gC,KAEN,kBAAC,QAAD,iEAEe,+BAAf1gC,EAAM0gC,KAEN,kBAAC,QAAD,8FAFJ,GAUW03H,EAAuB,SAACp4J,GACnC,GAAKA,EAEL,MAAmB,2BAAfA,EAAM0gC,KAEN,kBAAC,QAAD,4GAKe,wBAAf1gC,EAAM0gC,KACD,kBAAC,QAAD,iCACU,uBAAf1gC,EAAM0gC,KAEN,kBAAC,QAAD,4EAFJ,GASmB23H,E,4MACnBlxJ,MAAQ,CACNmxJ,KAAM,CACJp4F,MAAO,GACPq4F,SAAU,GACVvsI,SAAU,K,EAIdwsI,kBAAoB,WAClB,OACG,EAAK55J,MAAM65J,yBACZV,EAAgB,EAAK5wJ,MAAMmxJ,KAAKtsI,UAAU,I,EAI9C0sI,iBAAmB,WACjB,GAAK,EAAKF,oBAAV,CADuB,IAGfF,EAAS,EAAKnxJ,MAAdmxJ,KACR,EAAK15J,MAAMgR,gBAAgB0oJ,K,uDAGnB,IAAD,SAC0Dp5J,KAAKN,MAA9D+tD,EADD,EACCA,QAAS8rG,EADV,EACUA,wBAAyBE,EADnC,EACmCA,YAAa34J,EADhD,EACgDA,MAEvD,OACE,kBAACozE,EAAA,EAAD,CACE5vE,MAAO,kBAAC,QAAD,sCACP+2C,QAAS,CACP,kBAACk3B,EAAA,EAAD,CACElxE,MAAO,kBAAC,QAAD,aACPL,SAAUu4J,EACV9wI,IAAI,QACJvb,SAAS,EACTvK,QAAS8qD,IAEX,kBAACisG,EAAA,EAAD,CAAY98H,UAAW28H,EAAyB9wI,IAAI,kBAClD,kBAACqO,EAAA,EAAD,CACEz1B,MAAO,kBAAC,QAAD,0BACP6L,SAAO,EACPlM,UAAWhB,KAAKs5J,oBAChB32J,QAAS3C,KAAKw5J,qBAIpBh+G,iBAAkB,CAChB,kBAAC+2B,EAAA,EAAD,CACElxE,MAAO,kBAAC,QAAD,iCACP6L,SAAS,EACTub,IAAI,uBACJ9lB,QAAS82J,KAGbpzI,QAASrmB,KAAKw5J,iBACd57I,eAAgB,WACT27I,GAAyB9rG,KAEhCj/C,SAAS,KACT+sC,mBAAmB,EACnB5vC,MAAI,GAEJ,kBAAC,IAAD,CAAmBzN,UAAQ,GACzB,kBAACqgB,EAAA,EAAD,KACE,kBAACo7I,EAAA,EAAD,CACEC,mBAAoB,mRAGxB,kBAAC,EAAD,CACEl5J,MAAOV,KAAKiI,MAAMmxJ,KAAKtsI,SACvB1sB,SAAU,SAACuU,EAAGjU,GACZ,EAAK2H,SAAS,CACZ+wJ,KAAK,2BACA,EAAKnxJ,MAAMmxJ,MADZ,IAEFtsI,SAAUpsB,OAIhBo4J,YAAU,IAEZ,kBAACh5J,EAAA,EAAD,CACEY,MAAOV,KAAKiI,MAAMmxJ,KAAKp4F,MACvBnhE,kBAAmB,kBAAC,QAAD,cACnBkB,UAAWk4J,EAAkBn4J,GAC7BiB,WAAS,EACTd,UAAQ,EACRb,SAAU,SAACuU,EAAGjU,GACZ,EAAK2H,SAAS,CACZ+wJ,KAAK,2BACA,EAAKnxJ,MAAMmxJ,MADZ,IAEFp4F,MAAOtgE,SAKf,kBAACZ,EAAA,EAAD,CACEY,MAAOV,KAAKiI,MAAMmxJ,KAAKC,SACvBx5J,kBAAmB,kBAAC,QAAD,iBACnBkB,UAAWm4J,EAAqBp4J,GAChCL,KAAK,WACLsB,WAAS,EACTd,UAAQ,EACRb,SAAU,SAACuU,EAAGjU,GACZ,EAAK2H,SAAS,CACZ+wJ,KAAK,2BACA,EAAKnxJ,MAAMmxJ,MADZ,IAEFC,SAAU34J,e,GA1GqBkrB,a,SC3C5BiuI,E,4MACnB5xJ,MAAQ,CACNmxJ,KAAM,CACJp4F,MAAO,GACPq4F,SAAU,K,EAIdS,UAAY,WACV,QAAS,EAAKp6J,MAAMq6J,iBAAmB,EAAKr6J,MAAMs6J,2B,EAGpDC,SAAW,WACT,GAAK,EAAKH,YAAV,CADe,IAGPV,EAAS,EAAKnxJ,MAAdmxJ,KACR,EAAK15J,MAAM6Q,QAAQ6oJ,K,EAGrBc,kBAAoB,WAAO,IACjBd,EAAS,EAAKnxJ,MAAdmxJ,KACR,EAAK15J,MAAMy6J,iBAAiBf,I,uDAGpB,IAAD,SASHp5J,KAAKN,MAPP+tD,EAFK,EAELA,QACA2sG,EAHK,EAGLA,oBACAL,EAJK,EAILA,gBACAj5J,EALK,EAKLA,MACAu5J,EANK,EAMLA,wBACAC,EAPK,EAOLA,2BACAN,EARK,EAQLA,yBAEI3+G,EAAU,CACd,kBAACk3B,EAAA,EAAD,CACElxE,MAAO,kBAAC,QAAD,aACPL,UAAWhB,KAAK85J,YAChBrxI,IAAI,OACJvb,SAAS,EACTvK,QAAS8qD,IAEX,kBAACisG,EAAA,EAAD,CAAY98H,UAAWm9H,EAAiBtxI,IAAI,SAC1C,kBAACqO,EAAA,EAAD,CACEz1B,MAAO,kBAAC,QAAD,cACP6L,SAAO,EACPvK,QAAS3C,KAAKi6J,SACdj5J,UAAWhB,KAAK85J,gBAKtB,OACE,kBAAC5lF,EAAA,EAAD,CACE5vE,MAAO,kBAAC,QAAD,uCACP+2C,QAASA,EACTG,iBAAkB,CAChB,kBAAC++G,EAAD,CACE39H,UAAWo9H,EACXvxI,IAAI,mBAEJ,kBAAC8pD,EAAA,EAAD,CACElxE,MAAO,kBAAC,QAAD,6BACP6L,SAAS,EACTlM,SAAU+4J,GAAmBC,EAC7Br3J,QAAS3C,KAAKk6J,sBAIpB7zI,QAASrmB,KAAKi6J,SACdr8I,eAAgB,WACTm8I,GAAoBC,GAA0BvsG,KAErDj/C,SAAS,KACT+sC,mBAAmB,EACnB5vC,MAAI,GAEJ,kBAAC,IAAD,CAAmBzN,UAAQ,GACzB,kBAAC+L,EAAA,EAAD,CACEC,KAAK,OACLE,kBAAmB,kBACjB,kBAACmoE,EAAA,EAAD,CACElxE,MAAO,kBAAC,QAAD,0BACPL,SAAU+4J,GAAmBC,EAC7B9sJ,SAAO,EACPvK,QAASy3J,MAIb,kBAAC,QAAD,oCAEF,kBAACt6J,EAAA,EAAD,CACE6B,WAAS,EACTjB,MAAOV,KAAKiI,MAAMmxJ,KAAKp4F,MACvBnhE,kBAAmB,kBAAC,QAAD,cACnBkB,UAAWk4J,EAAkBn4J,GAC7BiB,WAAS,EACT3B,SAAU,SAACuU,EAAGjU,GACZ,EAAK2H,SAAS,CACZ+wJ,KAAK,2BACA,EAAKnxJ,MAAMmxJ,MADZ,IAEFp4F,MAAOtgE,SAKf,kBAACZ,EAAA,EAAD,CACEY,MAAOV,KAAKiI,MAAMmxJ,KAAKC,SACvBx5J,kBAAmB,kBAAC,QAAD,iBACnBkB,UAAWm4J,EAAqBp4J,GAChCL,KAAK,WACLsB,WAAS,EACT3B,SAAU,SAACuU,EAAGjU,GACZ,EAAK2H,SAAS,CACZ+wJ,KAAK,2BACA,EAAKnxJ,MAAMmxJ,MADZ,IAEFC,SAAU34J,UAMpB,kBAACwzE,EAAA,EAAD,CACE34B,mBAAmB,EACnB5vC,KAAM0uJ,EACN/1J,MAAO,kBAAC,QAAD,4BACP+2C,QAAS,CACP,kBAACk3B,EAAA,EAAD,CACElxE,MAAO,kBAAC,QAAD,cACPonB,IAAI,QACJ9lB,QAAS23J,MAIb,kBAAC,IAAD,CAAQp8J,UAAQ,GACd,kBAACT,EAAA,EAAD,KACE,kBAAC,QAAD,sK,GAxI2BmuB,a,kCCF5B4uI,EAAuB,SAAC15J,GACnC,GAAKA,EAEL,MAAmB,uBAAfA,EAAM0gC,KACD,0DACU,4BAAf1gC,EAAM0gC,KAA2Cu3H,OAArD,GAImB0B,G,4MACnBxyJ,MAAQ,CACNmxJ,KAAM,CACJtsI,SAAU,EAAKptB,MAAMuQ,QAAQ6c,UAAY,GACzCnR,YAAa,EAAKjc,MAAMuQ,QAAQ0L,aAAe,GAC/CmkD,oBAAqB,EAAKpgE,MAAMuQ,QAAQ6vD,oB,EAI5C46F,QAAU,WACR,GAAK,EAAKC,WAAV,CADc,IAGNvB,EAAS,EAAKnxJ,MAAdmxJ,KACR,EAAK15J,MAAM8Q,OAAO4oJ,K,EAGpBuB,SAAW,WACT,OACG,EAAKj7J,MAAMk7J,gBAAkB/B,EAAgB,EAAK5wJ,MAAMmxJ,KAAKtsI,W,uDAIxD,IAAD,SACoC9sB,KAAKN,MAAxC+tD,EADD,EACCA,QAASmtG,EADV,EACUA,eAAgB95J,EAD1B,EAC0BA,MAC3Bu6C,EAAU,CACd,kBAACk3B,EAAA,EAAD,CACElxE,MAAO,kBAAC,QAAD,aACPL,SAAU45J,EACVnyI,IAAI,OACJvb,SAAS,EACTvK,QAAS8qD,IAEX,kBAACisG,EAAA,EAAD,CAAY98H,UAAWg+H,EAAgBnyI,IAAI,QACzC,kBAACqO,EAAA,EAAD,CACEz1B,MAAO,kBAAC,QAAD,aACP6L,SAAO,EACPvK,QAAS3C,KAAK06J,QACd15J,UAAWhB,KAAK26J,eAKtB,OACE,kBAACzmF,EAAA,EAAD,CACE5vE,MAAO,kBAAC,QAAD,mCACP+2C,QAASA,EACTz9B,eAAgB,WACTg9I,GAAgBntG,KAEvBj/C,SAAS,KACT6X,QAASrmB,KAAK06J,QACdn/G,mBAAmB,EACnB5vC,MAAI,GAEJ,kBAAC,IAAD,CAAmBzN,UAAQ,GACzB,kBAAC,EAAD,CACEwC,MAAOV,KAAKiI,MAAMmxJ,KAAKtsI,SACvB1sB,SAAU,SAACuU,EAAGjU,GACZ,EAAK2H,SAAS,CACZ+wJ,KAAK,2BACA,EAAKnxJ,MAAMmxJ,MADZ,IAEFtsI,SAAUpsB,OAIhBK,UAAWy5J,EAAqB15J,KAElC,kBAAChB,EAAA,EAAD,CACEY,MAAOV,KAAKiI,MAAMmxJ,KAAKz9I,YACvB9b,kBAAmB,kBAAC,QAAD,YACnBkC,WAAS,EACTH,WAAS,EACTC,KAAM,EACNC,QAAS,EACTN,SAAU,wCACVpB,SAAU,SAACuU,EAAGjU,GACZ,EAAK2H,SAAS,CACZ+wJ,KAAK,2BACA,EAAKnxJ,MAAMmxJ,MADZ,IAEFz9I,YAAajb,SAKrB,kBAACm0J,EAAA,EAAD,CACExzJ,MAAO,kBAAC,QAAD,sDACP0Q,QAAS/R,KAAKiI,MAAMmxJ,KAAKt5F,kBACzBluD,QAAS,SAAC+C,EAAGjU,GACX,EAAK2H,SAAS,CACZ+wJ,KAAK,2BACA,EAAKnxJ,MAAMmxJ,MADZ,IAEFt5F,kBAAmBp/D,e,GA3FGkrB,aCdnBivI,G,4MACnB5yJ,MAAQ,CACNmxJ,KAAM,CACJp4F,MAAO,EAAKthE,MAAMsQ,aAAagxD,Q,EAInC85F,eAAiB,WACf,IAAI,EAAKp7J,MAAMq7J,sBAAf,CADqB,IAGb3B,EAAS,EAAKnxJ,MAAdmxJ,KACR,EAAK15J,MAAM+Q,cAAc2oJ,K,uDAGjB,IAAD,SAC2Cp5J,KAAKN,MAA/C+tD,EADD,EACCA,QAASstG,EADV,EACUA,sBAAuBj6J,EADjC,EACiCA,MAClCu6C,EAAU,CACd,kBAACk3B,EAAA,EAAD,CACElxE,MAAO,kBAAC,QAAD,aACPL,SAAU+5J,EACVtyI,IAAI,OACJvb,SAAS,EACTvK,QAAS8qD,IAEX,kBAACisG,EAAA,EAAD,CAAY98H,UAAWm+H,EAAuBtyI,IAAI,gBAChD,kBAACqO,EAAA,EAAD,CACEz1B,MAAO,kBAAC,QAAD,aACP6L,SAAO,EACPvK,QAAS3C,KAAK86J,eACd95J,SAAU+5J,MAKhB,OACE,kBAAC7mF,EAAA,EAAD,CACE5vE,MAAO,kBAAC,QAAD,0BACP+2C,QAASA,EACTz9B,eAAgB,WACTm9I,GAAuBttG,KAE9BpnC,QAASrmB,KAAK86J,eACdtsJ,SAAS,KACT+sC,mBAAmB,EACnB5vC,MAAI,GAEJ,kBAAC,IAAD,CAAmBzN,UAAQ,GACzB,kBAAC4B,EAAA,EAAD,CACEY,MAAOV,KAAKiI,MAAMmxJ,KAAKp4F,MACvBnhE,kBAAmB,kBAAC,QAAD,cACnBkB,UAAWk4J,EAAkBn4J,GAC7BiB,WAAS,EACTd,UAAQ,EACRb,SAAU,SAACuU,EAAGjU,GACZ,EAAK2H,SAAS,CACZ+wJ,KAAK,2BACA,EAAKnxJ,MAAMmxJ,MADZ,IAEFp4F,MAAOtgE,e,GAzDsBkrB,a,iCCThC,SAASovI,GAAT,GAGJ,IAFTvtG,EAEQ,EAFRA,QACAjwB,EACQ,EADRA,kBAEMy9H,IACFz9H,KACAA,EAAkBxtB,gBAClBwtB,EAAkBxtB,aAAakrJ,cAUnC,OATAplB,cACE,WACEt4G,EAAkB1sB,2BAA2B8mB,OAAM,iBAIrDqjI,EAAa,KAAO,MAIpB,kBAAC/mF,EAAA,EAAD,CACE74B,QAAS,CACP4/G,EACE,kBAACnkI,EAAA,EAAD,CACEz1B,MAAO,kBAAC,QAAD,cACPonB,IAAI,QACJvb,SAAO,EACPvK,QAAS8qD,IAGX,kBAAC8kB,EAAA,EAAD,CACElxE,MAAO,kBAAC,QAAD,yBACPonB,IAAI,QACJvb,SAAS,EACTvK,QAAS8qD,KAIfj/C,SAAS,KACT+sC,mBAAmB,EACnB5vC,MAAI,EACJzN,UAAQ,GAEN+8J,EAkBA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMr3J,eAAe,SAASD,WAAW,UACvC,kBAAC,KAAD,MACA,kBAAC,IAAD,MACA,kBAAClG,EAAA,EAAD,KACE,kBAAC,QAAD,uCAtBN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMmG,eAAe,SAASD,WAAW,UACvC,kBAACqzE,EAAA,EAAD,CAAkBl5E,KAAM,KACxB,kBAAC,IAAD,MACA,kBAACL,EAAA,EAAD,+CAEF,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMmG,eAAe,UACnB,kBAAC2a,EAAA,EAAD,KACE,kBAAC,QAAD,kH,aClBO48I,G,4MAInBlzJ,MAAQ,CACNu1B,kBAAmB1tB,IACnBsrJ,iBAAiB,EACjBC,yBAAyB,EACzBtB,iBAAiB,EACjBR,yBAAyB,EACzB+B,uBAAuB,EACvBV,gBAAgB,EAChBW,UAAW,KACXlB,yBAAyB,EACzBmB,oCAAoC,EACpCxB,0BAA0B,EAC1ByB,uBAAuB,EACvBV,uBAAuB,G,EAEzBW,iCAAkC,E,EAqElCC,uB,sBAAyB,8BAAA/qJ,EAAA,6DACfgrJ,EAAmB,EAAKl8J,MAAxBk8J,eADe,kBAIMA,EAAeC,kBAJrB,UAIf7rJ,EAJe,8BAMnB,EAAK3H,UAAS,gBAAGm1B,EAAH,EAAGA,kBAAH,MAA4B,CACxCA,kBAAkB,2BACbA,GADY,IAEfztB,eAAe,EACfE,QAAS,KACTG,OAAQ,KACRC,OAAQ,KACRF,aAAc,WAbC,kBAgBZ,MAhBY,cAmBrB,EAAK9H,UAAS,gBAAGm1B,EAAH,EAAGA,kBAAH,MAA4B,CACxCA,kBAAkB,2BACbA,GADY,IAEfztB,eAAe,EACfC,qBAvBiB,kBA0BdA,GA1Bc,wCA4BrB7I,QAAQrG,MAAM,mDAAd,MA5BqB,+D,EAiCzBg7J,uC,sBAAyC,sBAAAlrJ,EAAA,+EAE/B,EAAKmrJ,oBAF0B,sDAIrC50J,QAAQrG,MACN,2DADF,MAJqC,wD,EAWzCi7J,kB,sBAAoB,gCAAAnrJ,EAAA,6DACVgrJ,EAAmB,EAAKl8J,MAAxBk8J,eADU,SAKS,EAAKD,yBALd,UAKZ3rJ,EALY,+DAWlBywD,YAAcm7F,EAAe3qJ,uBAAwBjB,EAAaytB,KAAK5U,MACrE,SAAAzY,GAAM,OACJ,EAAK/H,UAAS,gBAAGm1B,EAAH,EAAGA,kBAAH,MAA4B,CACxCA,kBAAkB,2BACbA,GADY,IAEfptB,kBAGN,SAAAtP,GACEqG,QAAQrG,MAAM,mCAAoCA,MAGtD8/D,YACEg7F,EAAe3qJ,uBACfjB,EAAaytB,KACb5U,MACA,SAAA1Y,GAAY,OACV,EAAK9H,UAAS,gBAAGm1B,EAAH,EAAGA,kBAAH,MAA4B,CACxCA,kBAAkB,2BACbA,GADY,IAEfrtB,wBAGN,SAAArP,GACEqG,QAAQrG,MAAM,0CAA2CA,MAG7D6/D,YAAci7F,EAAe3qJ,uBAAwBjB,EAAaytB,KAAK5U,MACrE,SAAAxY,GAAM,OACJ,EAAKhI,UAAS,gBAAGm1B,EAAH,EAAGA,kBAAH,MAA4B,CACxCA,kBAAkB,2BACbA,GADY,IAEfntB,kBAGN,SAAAvP,GACEqG,QAAQrG,MAAM,mCAAoCA,MAGtD,EAAKk7J,mBAlDa,UAsDQJ,EAAeK,eACvCL,EAAe3qJ,wBAvDC,QAsDZirJ,EAtDY,OA0DlB,EAAK7zJ,UAAS,gBAAGm1B,EAAH,EAAGA,kBAAH,MAA4B,CACxCA,kBAAkB,2BACbA,GADY,IAEfvtB,QAASisJ,QA7DK,4C,EAkEpBF,iB,sBAAmB,8BAAAprJ,EAAA,yDACTZ,EAAiB,EAAK/H,MAAMu1B,kBAA5BxtB,aADS,0EAIM2tE,YAAc3tE,EAAaytB,KAJjC,OAITvtB,EAJS,OAKf,EAAK7H,UAAS,gBAAGm1B,EAAH,EAAGA,kBAAH,MAA4B,CACxCA,kBAAkB,2BACbA,GADY,IAEfttB,eARW,kDAYf/I,QAAQrG,MAAM,mCAAd,MAZe,0D,EAgBnBq7J,UAAY,WACN,EAAKz8J,MAAMk8J,gBAAgB,EAAKl8J,MAAMk8J,eAAeQ,SACzD,EAAKC,2B,EAGPC,S,uCAAW,WAAOlD,GAAP,eAAAxoJ,EAAA,yDACDgrJ,EAAmB,EAAKl8J,MAAxBk8J,eADC,wDAIT,EAAKvzJ,SAAS,CACZ0xJ,iBAAiB,IAEnB,EAAK2B,iCAAkC,EAP9B,kBASDE,EAAeW,MAAMnD,GATpB,wBAUD,EAAK0C,yCAVJ,QAWP,EAAKU,iBAAgB,GAXd,kDAaP,EAAKn0J,SAAS,CAAEkzJ,UAAS,OAblB,QAeT,EAAKlzJ,SAAS,CACZ0xJ,iBAAiB,IAEnB,EAAK2B,iCAAkC,EAlB9B,0D,wDAqBXe,Q,uCAAU,WAAOrD,EAAgB76G,GAAvB,eAAA3tC,EAAA,yDACAgrJ,EAAmB,EAAKl8J,MAAxBk8J,eADA,wDAIR,EAAKvzJ,SAAS,CACZuyJ,gBAAgB,IAElB,EAAKc,iCAAkC,EAP/B,kBASAE,EAAec,gBACnBd,EAAe3qJ,uBACfmoJ,EACA76G,EAAY69D,UAZR,wBAcA,EAAK0/C,yCAdL,QAeN,EAAKa,uBAAsB,GAfrB,kDAiBN,EAAKt0J,SAAS,CAAEkzJ,UAAS,OAjBnB,QAmBR,EAAKlzJ,SAAS,CACZuyJ,gBAAgB,IAElB,EAAKc,iCAAkC,EAtB/B,0D,0DAyBVkB,iB,uCAAmB,WACjBxD,EACA76G,GAFiB,eAAA3tC,EAAA,yDAITgrJ,EAAmB,EAAKl8J,MAAxBk8J,eAJS,wDAOjB,EAAKvzJ,SAAS,CACZkxJ,yBAAyB,IAE3B,EAAKmC,iCAAkC,EAVtB,kBAYTE,EAAeiB,sBAAsBzD,GAZ5B,iCAePwC,EAAekB,WACnBlB,EAAe3qJ,uBACfmoJ,EACA76G,EAAY69D,UAlBD,mFA0BT,EAAK0/C,yCA1BI,QA2Bf,EAAKU,iBAAgB,GACrBO,YAAe3D,EAAKp4F,OA5BL,kDA8Bf,EAAK34D,SAAS,CAAEkzJ,UAAS,OA9BV,QAgCjB,EAAKlzJ,SAAS,CACZkxJ,yBAAyB,IAE3B,EAAKmC,iCAAkC,EAnCtB,iE,0DAsCnBsB,kB,uCAAoB,WAAO5D,GAAP,eAAAxoJ,EAAA,yDACVgrJ,EAAmB,EAAKl8J,MAAxBk8J,eADU,wDAIlB,EAAKvzJ,SAAS,CACZ2xJ,0BAA0B,IALV,kBAQV4B,EAAeqB,eAAe7D,GARpB,OAShB,EAAK8D,mBAAkB,GATP,kDAWhB,EAAK70J,SAAS,CAAEkzJ,UAAS,OACzBhjD,YACE,gIAbc,QAgBlB,EAAKlwG,SAAS,CACZ2xJ,0BAA0B,IAjBV,0D,wDAqBpBmD,yB,sBAA2B,4BAAAvsJ,EAAA,yDACjBgrJ,EAAmB,EAAKl8J,MAAxBk8J,eADiB,iEAInBA,EAAewB,gCAJI,OAKzB,EAAKC,oCAAmC,GALf,2C,EAQ3BC,wB,sBAA0B,4BAAA1sJ,EAAA,yDAChBgrJ,EAAmB,EAAKl8J,MAAxBk8J,eADgB,wDAIxB,EAAKvzJ,SAAS,CACZuyJ,gBAAgB,IAElB,EAAKc,iCAAkC,EAPf,kBAShBE,EAAe2B,qBACnB3B,EAAe3qJ,wBAVK,wBAYhB,EAAK6qJ,yCAZW,0DActB,EAAKzzJ,SAAS,CAAEkzJ,UAAS,OAdH,QAgBxB,EAAKlzJ,SAAS,CACZuyJ,gBAAgB,IAElB,EAAKc,iCAAkC,EAnBf,0D,EAsB1B8B,e,uCAAiB,WAAOpE,GAAP,eAAAxoJ,EAAA,yDACPgrJ,EAAmB,EAAKl8J,MAAxBk8J,eADO,wDAIf,EAAKvzJ,SAAS,CACZ0yJ,uBAAuB,IAEzB,EAAKW,iCAAkC,EAPxB,kBASPE,EAAe6B,YACnB7B,EAAe3qJ,uBACfmoJ,GAXW,wBAaP,EAAK0C,yCAbE,QAcb,EAAK4B,uBAAsB,GAdd,kDAgBb,EAAKr1J,SAAS,CAAEkzJ,UAAS,OAhBZ,QAkBf,EAAKlzJ,SAAS,CACZ0yJ,uBAAuB,IAEzB,EAAKW,iCAAkC,EArBxB,0D,wDAwBjB2B,mCAAqC,WAA2B,IAA1B1xJ,IAAyB,yDAC7D,EAAKtD,SAAS,CACZmzJ,mCAAoC7vJ,K,EAIxCuxJ,kBAAoB,WAA2B,IAA1BvxJ,IAAyB,yDAC5C,EAAKtD,SAAS,CACZgyJ,wBAAyB1uJ,EACzB4vJ,UAAW,Q,EAIfiB,gBAAkB,WAA2B,IAA1B7wJ,IAAyB,yDAC1C,EAAKtD,SAAS,CACZ+yJ,gBAAiBzvJ,EACjB0vJ,yBAAyB,EACzBE,UAAW,Q,EAIfoB,sBAAwB,WAA2B,IAA1BhxJ,IAAyB,yDAChD,EAAKtD,SAAS,CACZizJ,sBAAuB3vJ,EACvB4vJ,UAAW,Q,EAIfoC,wBAA0B,WAA2B,IAA1BhyJ,IAAyB,yDAClD,EAAKtD,SAAS,CACZ+yJ,iBAAiB,EACjBC,wBAAyB1vJ,EACzB4vJ,UAAW,Q,EAIfmC,sBAAwB,WAA2B,IAA1B/xJ,IAAyB,yDAChD,EAAKtD,SAAS,CACZozJ,sBAAuB9vJ,EACvB4vJ,UAAW,Q,kEA5YM,IAAD,OAClBv7J,KAAKq8J,0BAGLr8J,KAAKN,MAAMk8J,eAAegC,wBACxB59J,KAAK87J,wCAYP97J,KAAKN,MAAMk8J,eAAeiC,yBAAwB,WAC5C,EAAKnC,iCACPv0J,QAAQC,KACN,8DAEF,EAAK00J,0CAEL30J,QAAQC,KACN,6FAKFpH,KAAKN,MAAMk8J,eAAekC,wBAG5B32J,QAAQC,KACN,mEAEFpH,KAAK07J,iCAAkC,EACvC17J,KAAK87J,yCACL97J,KAAK07J,iCAAkC,K,gDAOhB,IAAD,OACxB17J,KAAKqI,UAAS,cAAGm1B,kBAAH,MAA4B,CACxCA,kBAAkB,2BACb1tB,KADY,IAEfQ,SAAU,EAAK6rJ,UACfxrJ,gBAAiB,EAAKqrJ,iBACtBzrJ,QAAS,kBAAM,EAAKisJ,iBAAgB,IACpChsJ,OAAQ,kBAAM,EAAKmsJ,uBAAsB,IACzClsJ,cAAe,kBAAM,EAAKitJ,uBAAsB,IAChDhtJ,gBAAiB,kBAAM,EAAKitJ,yBAAwB,IACpD9sJ,qBAAsB,EAAKkrJ,kBAC3BjrJ,yBAAyB,WAAD,4BAAE,sBAAAF,EAAA,sEAClB,EAAK+qJ,yBADa,2CAAF,kDAAC,GAGzB5qJ,wBAAyB,EAAKosJ,yBAC9BnsJ,uBAAwB,EAAKssJ,wBAC7BrsJ,uBAAwB,kBACtB,EAAKvR,MAAMk8J,eAAe3qJ,kC,+BAkVxB,IAAD,OACP,OACE,gBAACwxB,GAAA,EAAmB3zB,SAApB,MACG,gBAAWyvC,EAAX,EAAGz6B,OAAH,OACC,gBAAC,WAAD,KACE,gBAACzS,EAAA,EAAyBmrD,SAA1B,CACE97D,MAAO,EAAKuH,MAAMu1B,mBAEjB,EAAK99B,MAAM9B,UAEb,EAAKqK,MAAMmzJ,iBACV,gBAAC,EAAD,CACE3tG,QAAS,kBAAM,EAAK+uG,iBAAgB,IACpCpC,oBAAqB,kBAAM,EAAKuD,yBAAwB,IACxDptJ,QAAS,EAAK+rJ,SACdvC,gBAAiB,EAAK9xJ,MAAM8xJ,gBAC5Bj5J,MAAO,EAAKmH,MAAMszJ,UAClBpB,iBAAkB,EAAK6C,kBACvB3C,wBAAyB,EAAKpyJ,MAAMoyJ,wBACpCC,2BAA4B,kBAAM,EAAK4C,mBAAkB,IACzDlD,yBAA0B,EAAK/xJ,MAAM+xJ,2BAGxC,EAAK/xJ,MAAMu1B,kBAAkBvtB,SAC5B,EAAKhI,MAAMqzJ,uBACT,gBAAC,GAAD,CACErrJ,QAAS,EAAKhI,MAAMu1B,kBAAkBvtB,QACtCw9C,QAAS,kBAAM,EAAKkvG,uBAAsB,IAC1CnsJ,OAAQ,SAAA4oJ,GAAI,OAAI,EAAKqD,QAAQrD,EAAM76G,IACnCq8G,eAAgB,EAAK3yJ,MAAM2yJ,eAC3B95J,MAAO,EAAKmH,MAAMszJ,YAGvB,EAAKtzJ,MAAMu1B,kBAAkBxtB,cAC5B,EAAK/H,MAAMwzJ,uBACT,gBAAC,GAAD,CACEzrJ,aAAc,EAAK/H,MAAMu1B,kBAAkBxtB,aAC3Cy9C,QAAS,kBAAM,EAAKiwG,uBAAsB,IAC1CjtJ,cAAe,EAAK+sJ,eACpBzC,sBAAuB,EAAK9yJ,MAAM8yJ,sBAClCj6J,MAAO,EAAKmH,MAAMszJ,YAGvB,EAAKtzJ,MAAMozJ,yBACV,gBAAC,EAAD,CACE5tG,QAAS,kBAAM,EAAKkwG,yBAAwB,IAC5ClE,YAAa,kBAAM,EAAK+C,iBAAgB,IACxC9rJ,gBAAiB,SAAA0oJ,GAAI,OACnB,EAAKwD,iBAAiBxD,EAAM76G,IAE9Bg7G,wBAAyB,EAAKtxJ,MAAMsxJ,wBACpCz4J,MAAO,EAAKmH,MAAMszJ,YAGrB,EAAKtzJ,MAAMuzJ,oCACV,gBAACR,GAAD,CACEx9H,kBAAmB,EAAKv1B,MAAMu1B,kBAC9BiwB,QAAS,WACP,EAAK4vG,oCAAmC,GACxC,EAAKp1J,MAAMu1B,kBACR1sB,2BACA8mB,OAAM,0B,GAle4Bl6B,a,oBCoCxCqgK,GAtEa,SAAC,GAAgC,IAA9B/0I,EAA6B,EAA7BA,OAAQykC,EAAqB,EAArBA,QAAqB,EAC5B/vD,IAAMooB,SAA6B,MADP,oBACnD7V,EADmD,KAC1C+tJ,EAD0C,OAE9BtgK,IAAMooB,SAAqB,MAFG,oBAEnD5V,EAFmD,KAE3C+tJ,EAF2C,OAGhCvgK,IAAMooB,SAAiB,MAHS,oBAGnDhlB,EAHmD,KAG5C89D,EAH4C,KAKpDs/F,EAAexgK,IAAMguD,YAAN,sBACnB,4BAAA96C,EAAA,yDACOoY,EADP,wDAEEg1I,EAAW,MAFb,kBAI0BlgF,YAAqB90D,GAJ/C,OAIU/Y,EAJV,OAKI+tJ,EAAW/tJ,GALf,kDAOI2uD,EAAS,EAAD,IAPZ,0DAUA,CAAC51C,IAGGm1I,EAAkBzgK,IAAMguD,YAAN,sBACtB,4BAAA96C,EAAA,yDACOoY,EADP,wDAEEi1I,EAAU,MAFZ,kBAIyBtgF,YAAc30D,GAJvC,OAIU9Y,EAJV,OAKI+tJ,EAAU/tJ,GALd,kDAOI0uD,EAAS,EAAD,IAPZ,0DAUA,CAAC51C,IAGHtrB,IAAM6tD,WACJ,WACE2yG,IACAC,MAEF,CAACn1I,EAAQk1I,EAAcC,IASzB,OACE,kBAACjqF,EAAA,EAAD,CACEvoE,MAAM,EACN6C,SAAS,KACT6sC,QAAS,CACP,kBAACk3B,EAAA,EAAD,CACE9pD,IAAI,QACJpnB,MAAO,kBAAC,QAAD,cACP6L,SAAS,EACTvK,QAAS8qD,MAIb,kBAAC2wG,GAAA,EAAD,CACEnuJ,QAASA,EACTnP,MAAOA,EACPymB,QAtBU,WACdq3C,EAAS,MACTs/F,IACAC,KAoBIjuJ,OAAQA,M,UCtED,eAA0B,IAAvBtS,EAAsB,EAAtBA,SAAsB,EAIlCF,WAAwB,MAJU,oBAEpC2gK,EAFoC,KAGpCC,EAHoC,KAMhCx4F,EAAwBpoE,eAC5B,SAACsrB,GACCs1I,EAA8Bt1I,KAEhC,CAACs1I,IAGGC,EAAyB7gK,eAC7B,WACE4gK,EAA8B,QAEhC,CAACA,IAGGE,EAAyC9gK,WAC7C,iBAAO,CACLooE,sBAAuBA,KAEzB,CAACA,IAGH,OACE,gBAAC,WAAD,KACE,gBAACC,GAAA,EAAqBvJ,SAAtB,CAA+B97D,MAAO89J,GACnC5gK,GAEFygK,GACC,gBAAC,GAAD,CACEr1I,OAAQq1I,EACR5wG,QAAS8wG,M,sECTEE,G,4MAInBC,0BAAuD,EAAKh/J,MAAMi/J,6BAChE,CACEC,YAAa,EAAKC,aAAanzB,KAAlB,mB,EAGjBozB,kBAA0C,G,EAC1CC,iBAAmC,K,EACnC92J,MAAQ,CACN+/B,+BAAgC,KAChCC,qCAAsC,EAAK+2H,sCAAsCtzB,KAA3C,iBAGtCxjG,uCAAwC,EAAK+2H,wCAAwCvzB,KAA7C,iBAGxCtjG,sCAAuC,EAAK82H,uCAAuCxzB,KAA5C,iBAGvCvjG,uCAAwC,EAAKg3H,wCAAwCzzB,KAA7C,iBAGxCnjG,mBAAoB,EAAK62H,oBAAoB1zB,KAAzB,iBACpBrjG,kCAAmC,kBACjC,EAAK3oC,MAAM2/J,gCACb/2H,kCAAmC,kBACjC,EAAK5oC,MAAMgjF,gCACbl6C,oBAAqB,kBAAM,EAAKs2H,oB,8DAG0B,IAA7C5oH,EAA4C,EAA5CA,YAAalsC,EAA+B,EAA/BA,QAC1BhK,KAAK8+J,kBAAkB5oH,GAAeopH,KACnCC,IAAIv1J,EAAS,OACbw1J,a,4CAYH,OARIx/J,KAAK++J,iBACP53J,QAAQC,KACN,mEAGFD,QAAQC,KAAK,0CAGRpH,KAAK++J,iBACR/+J,KAAK++J,iBAAiBl2I,MAAK,WACzB1hB,QAAQC,KAAK,oDAEf8J,QAAQhK,Y,4DAGwBhC,GAAqC,IAAD,OAChE1E,EAASR,KAAKN,MAAdc,KACFi0C,EAA2Bz0C,KAAK0+J,0BACtC,IAAKx5J,IAAYuvC,EAA0B,OAAOvjC,QAAQhK,UAE1D,IAAMu4J,EAAkBz/J,KAAK++J,kBAAoB7tJ,QAAQhK,UA+BzD,OA7BAlH,KAAK++J,iBAAmBU,EACrB52I,MAAK,kBACJof,aACE/iC,EACAuvC,EACAj0C,MAGHqoB,MAAK,kBACJ,EAAKxgB,SAAS,CACZ2/B,+BAAgC,UAGnCpQ,OAAM,SAACoQ,GACN,EAAK3/B,SAAS,CACZ2/B,mCAEFw1B,YAAa,CACX/yD,QAASjK,EAAKiB,EACZ,wQAEFg8D,SAAUz1B,EACV01B,QAAS,8CAGZ70C,MAAK,WACJ,EAAKk2I,iBAAmB,QAGrB/+J,KAAK++J,mB,8DAG0B75J,GACtCgjC,aAAuChjC,K,6DAIvCA,EACAsmC,GAEApD,aAAsCljC,EAASsmC,K,8DAGTtmC,GAItC,OAHIA,GACFlF,KAAKi/J,wCAAwC/5J,GAExClF,KAAKg/J,sCAAsC95J,K,+BAIlD,OACE,gBAACujC,GAAA,EAAiC+zB,SAAlC,CAA2C97D,MAAOV,KAAKiI,OACpDjI,KAAKN,MAAM9B,c,GAnH2CF,a,uKCC/D,IAAMgiK,GAAMC,aAAO,CACjBC,QAAQ,GAAD,mBAAMC,cAAYD,SAAlB,CAA2BE,WAmBfC,G,uKACT,IAAD,EASH//J,KAAKN,MAPPsgK,EAFK,EAELA,uBACApE,EAHK,EAGLA,eACAh+J,EAJK,EAILA,SACA+gK,EALK,EAKLA,6BACAU,EANK,EAMLA,+BACA38E,EAPK,EAOLA,+BACAwe,EARK,EAQLA,gBAEF,OACE,gBAAC,EAAD,KACE,gBAAC9kC,GAAA,EAAD,KACE,gBAAC6jG,GAAA,EAAD,CAAqBD,uBAAwBA,GAC3C,gBAACv9H,GAAA,EAAmB3zB,SAApB,MACG,YAAiB,IAAdgV,EAAa,EAAbA,OACI0D,EAAQ04I,YAAS,CACrBC,UAAWr8I,EAAOq8I,UAClB/jD,SAAUt4F,EAAOs4F,WAEnB,OACE,gBAACgkD,GAAA,EAAD,CAAgBhkD,SAAUt4F,EAAOs4F,SAAS33G,QAAQ,IAAK,MACrD,gBAAC,KAAqB+3D,SAAtB,CAA+B97D,MAAO8mB,EAAMld,eAC1C,gBAAC+1J,EAAA,EAAD,CAAgBX,IAAKA,IACnB,gBAACY,EAAA,EAAD,CAAe94I,MAAOA,EAAMhJ,UAC1B,gBAAC,GAAD,CACEo9I,eAAgBA,GAEhB,gBAAC2E,GAAD,KACE,gBAAC,OAAD,CAAMzvG,QAAM,IACT,gBAAGtwD,EAAH,EAAGA,KAAH,OACC,gBAAC,GAAD,CACEA,KAAMA,EACNm+J,6BACEA,EAEFU,+BACEA,EAEF38E,+BACEA,GAGF,gBAAC/jD,GAAA,EAAD,KACE,gBAAC,KAAD,KACE,gBAAC,KAAD,KACE,gBAAC,KAAD,KACE,gBAAC,KAAD,KACE,gBAAC,KAAD,KACE,gBAAC,KAAD,KACE,gBAAC6hI,GAAA,EAAuBhkG,SAAxB,CACE97D,MAAOwgG,GAENtjG,EAAS,CAAE4C,qC,GAtDzB9C,c,6BC5DvC,IAsLe,GACb4D,KAAM,iBACN6+J,UAAW,iBACXM,UAzLgB,CAChBC,KAAM,UACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,4BAET,CACED,WAAY,SACZC,MAAO,YAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,YAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,yBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,uBAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,WAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,kBAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,uBAGXt9I,OAAQ,CACN,oBAAqB,UACrB,oBAAqB,UACrB,6BAA8B,UAC9B,iCAAkC,UAClC,0BAA2B,UAC3B,8BAA+B,aCrCpB,GACbliB,KAAM,UACN6+J,UAAW,UACXM,UAhJgB,CAChBC,KAAM,UACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZz+J,UAAW,SACX0+J,MAAO,gBAET,CACED,WAAY,SACZz+J,UAAW,YACX0+J,MAAO,qBAET,CACED,WAAY,SACZz+J,UAAW,mBACX0+J,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZz+J,UAAW,SACX0+J,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZz+J,UAAW,SACX0+J,MAAO,gBAET,CACED,WAAY,SACZz+J,UAAW,SACX0+J,MAAO,iBAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,WAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,4DAET,CACED,WAAY,SACZC,MAAO,aAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,sDAET,CACED,WAAY,SACZC,MAAO,uCAGXt9I,OAAQ,CACN,oBAAqB,UACrB,oBAAqB,UACrB,6BAA8B,UAC9B,iCAAkC,UAClC,0BAA2B,UAC3B,8BAA+B,UAC/B,qCAAsC,UACtC,kCAAmC,aCyCxB,GACbliB,KAAM,WACN6+J,UAAW,WACXM,UArLgB,CAChBC,KAAM,KACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,4BAET,CACED,WAAY,SACZC,MAAO,YAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,YAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,yBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,WAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,kBAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,uBAGXt9I,OAAQ,CACN,oBAAqB,UACrB,oBAAqB,UACrB,6BAA8B,UAC9B,iCAAkC,UAClC,0BAA2B,UAC3B,8BAA+B,aCxCpB,GACbliB,KAAM,iBACN6+J,UAAW,iBACXM,UAzIgB,CAChBC,KAAM,UACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZz+J,UAAW,SACX0+J,MAAO,WAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZz+J,UAAW,OACX0+J,MAAO,WAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,mCAET,CACED,WAAY,SACZC,MAAO,sCAET,CACED,WAAY,SACZC,MAAO,oCAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,8BAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZz+J,UAAW,OACX0+J,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,8BAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,sCAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,2BAGXt9I,OAAQ,CACN,oBAAqB,UACrB,oBAAqB,UACrB,6BAA8B,UAC9B,iCAAkC,UAClC,0BAA2B,UAC3B,8BAA+B,aCGpB,GACbliB,KAAM,kBACN6+J,UAAW,kBACXM,UAxIgB,CAChBC,KAAM,KACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZz+J,UAAW,OACX0+J,MAAO,WAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,mCAET,CACED,WAAY,SACZC,MAAO,sCAET,CACED,WAAY,SACZC,MAAO,oCAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,8BAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZz+J,UAAW,OACX0+J,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,oCAET,CACED,WAAY,SACZC,MAAO,kCAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,sCAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,2BAGXt9I,OAAQ,CACN,oBAAqB,UACrB,oBAAqB,UACrB,6BAA8B,UAC9B,iCAAkC,UAClC,0BAA2B,UAC3B,8BAA+B,aC0EpB,GACbliB,KAAM,cACN6+J,UAAW,cACXM,UA9MgB,CAChBC,KAAM,UACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,QAET,CACE3jH,WAAY,SACZ2jH,MAAO,mCAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,kBAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,WAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,UAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,YAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,kCAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,4BAET,CACE1+J,UAAW,SACX0+J,MAAO,sBAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,oCAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,uBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,iDAET,CACE1+J,UAAW,YACX0+J,MAAO,qBAET,CACE1+J,UAAW,YACX0+J,MAAO,oBAET,CACE1+J,UAAW,mBACX0+J,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,4BAET,CACED,WAAY,SACZC,MAAO,2BAET,CACED,WAAY,SACZz+J,UAAW,SACX0+J,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,gDAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,sCAET,CACED,WAAY,SACZC,MAAO,yCAET,CACED,WAAY,SACZC,MAAO,kCAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,qCAET,CACED,WAAY,SACZC,MAAO,uBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,8BAET,CACED,WAAY,SACZC,MAAO,0CAGXt9I,OAAQ,CACN,oBAAqB,UACrB,oBAAqB,UACrB,6BAA8B,UAC9B,iCAAkC,UAClC,0BAA2B,UAC3B,8BAA+B,aC6CpB,GACbliB,KAAM,SACN6+J,UAAW,SACXM,UAvPgB,CAChBC,KAAM,KACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZz+J,UAAW,SACX0+J,MAAO,WAET,CACED,WAAY,SACZz+J,UAAW,OACX0+J,MAAO,8BAET,CACED,WAAY,SACZz+J,UAAW,cACX0+J,MAAO,yBAET,CACED,WAAY,SACZz+J,UAAW,cACX0+J,MAAO,+BAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,mBAET,CACE1+J,UAAW,OACX0+J,MAAO,WAET,CACE1+J,UAAW,OACX0+J,MAAO,WAET,CACE1+J,UAAW,OACX0+J,MAAO,oBAET,CACE1+J,UAAW,OACX0+J,MAAO,qBAET,CACE1+J,UAAW,OACX0+J,MAAO,oBAET,CACED,WAAY,SACZz+J,UAAW,OACX0+J,MAAO,gBAET,CACED,WAAY,SACZz+J,UAAW,OACX0+J,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZz+J,UAAW,OACX0+J,MAAO,oBAET,CACED,WAAY,SACZz+J,UAAW,OACX0+J,MAAO,gCAET,CACED,WAAY,SACZz+J,UAAW,OACX0+J,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,2BAET,CACED,WAAY,SACZC,MAAO,6BAET,CACED,WAAY,SACZC,MAAO,yBAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,mCAET,CACED,WAAY,SACZC,MAAO,uBAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,yBAET,CACE1+J,UAAW,OACX0+J,MAAO,eAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,kBAET,CACE1+J,UAAW,SACX0+J,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,cAET,CACED,WAAY,SACZC,MAAO,iBAET,CACE1+J,UAAW,OACX0+J,MAAO,eAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACE1+J,UAAW,YACX0+J,MAAO,oBAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,mBAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,mBAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,kBAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,8BAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,4BAET,CACED,WAAY,SACZC,MAAO,cAGXt9I,OAAQ,CACN,oBAAqB,UACrB,oBAAqB,UACrB,6BAA8B,UAC9B,iCAAkC,UAClC,0BAA2B,UAC3B,8BAA+B,aCPpB,GACbliB,KAAM,YACN6+J,UAAW,YACXM,UA5OgB,CAChBC,KAAM,UACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZz+J,UAAW,OACX0+J,MAAO,8BAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZz+J,UAAW,OACX0+J,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,2BAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,uBAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZz+J,UAAW,OACX0+J,MAAO,yBAET,CACEC,WAAY,SACZD,MAAO,eAET,CACED,WAAY,SACZC,MAAO,kBAET,CACE1+J,UAAW,SACX0+J,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,mBAET,CACE1+J,UAAW,OACX0+J,MAAO,eAET,CACE1+J,UAAW,YACX0+J,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,+BAGXt9I,OAAQ,CACN,oCAAqC,UACrC,0BAA2B,UAC3B,oBAAqB,UACrB,wBAAyB,UACzB,+BAAgC,UAChC,qCAAsC,UACtC,8BAA+B,UAC/B,oCAAqC,UACrC,8BAA+B,UAC/B,0BAA2B,UAC3B,sBAAuB,UACvB,oBAAqB,UACrB,oBAAqB,UACrB,kCAAmC,UACnC,6BAA8B,UAC9B,sCAAuC,UACvC,sCAAuC,UACvC,iCAAkC,UAClC,6BAA8B,UAC9B,qCAAsC,UACtC,6BAA8B,UAC9B,sCAAuC,UACvC,kCAAmC,UACnC,iCAAkC,UAClC,uCAAwC,UACxC,yBAA0B,UAC1B,qBAAsB,UACtB,2BAA4B,UAC5B,uBAAwB,UACxB,gCAAiC,UACjC,4BAA6B,UAC7B,4BAA6B,UAC7B,yBAA0B,UAC1B,qBAAsB,UACtB,6BAA8B,UAC9B,qCAAsC,UACtC,mCAAoC,UACpC,+BAAgC,UAChC,0BAA2B,UAC3B,kCAAmC,UACnC,+BAAgC,UAChC,iCAAkC,UAClC,+BAAgC,UAChC,2BAA4B,UAC5B,8BAA+B,UAC/B,oCAAqC,UACrC,yCAA0C,UAC1C,2CAA4C,UAC5C,6BAA8B,UAC9B,+CAAgD,UAChD,gDAAiD,UACjD,0CAA2C,UAC3C,+CAAgD,UAChD,mDAAoD,UACpD,8CAA+C,UAC/C,oDAAqD,UACrD,yCAA0C,UAC1C,sCAAuC,UACvC,wCAAyC,UACzC,sCAAuC,UACvC,wCAAyC,UACzC,qCAAsC,UACtC,yBAA0B,UAC1B,iCAAkC,UAClC,6BAA8B,UAC9B,iCAAkC,UAClC,0CAA2C,UAC3C,yCAA0C,aCqK/B,GACbliB,KAAM,WACN6+J,UAAW,WACXM,UA7YgB,CAChBC,KAAM,UACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZC,MAAO,QAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZz+J,UAAW,UACX0+J,MAAO,WAET,CACED,WAAY,SACZz+J,UAAW,UACX0+J,MAAO,kCAET,CACED,WAAY,SACZC,MAAO,QAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,YAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,cAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,yBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,QAET,CACED,WAAY,SACZC,MAAO,QAET,CACED,WAAY,SACZC,MAAO,YAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,kCAET,CACED,WAAY,SACZC,MAAO,iCAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,QAET,CACED,WAAY,SACZC,MAAO,iDAET,CACED,WAAY,SACZC,MAAO,uBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,eAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,iCAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,8CAET,CACED,WAAY,SACZC,MAAO,aAET,CACED,WAAY,SACZC,MAAO,eAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,6BAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,mBAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,kBAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,sBAET,CACED,WAAY,SACZ1jH,WAAY,SACZ2jH,MAAO,yBAET,CACED,WAAY,SACZC,MACE,wEAEJ,CACED,WAAY,SACZC,MACE,6GAEJ,CACED,WAAY,SACZC,MACE,4IAEJ,CACED,WAAY,SACZC,MACE,iLAEJ,CACED,WAAY,SACZC,MACE,uFAEJ,CACED,WAAY,SACZC,MACE,wFAEJ,CACED,WAAY,SACZC,MACE,yGAEJ,CACED,WAAY,SACZC,MAAO,+DAET,CACED,WAAY,SACZC,MAAO,iDAET,CACED,WAAY,SACZC,MACE,mFAEJ,CACED,WAAY,SACZC,MACE,iFAEJ,CACED,WAAY,SACZC,MACE,kHAEJ,CACED,WAAY,SACZC,MACE,2EAEJ,CACED,WAAY,SACZC,MACE,oGAEJ,CACED,WAAY,SACZC,MAAO,kDAET,CACED,WAAY,SACZC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G,aACEqD,IACoB,kBAApBA,GAAS9yH,QACT8yH,GAASY,OACL,CAAEjwG,QAASqvG,GAASY,OAAQ3nK,QAAS+mK,GAAS/mK,cAC9ClM,MAMbuyK,EACC,gBAAC,GAAD,CACEnlK,MAAI,EACJyjK,iCACEhuG,GACIA,GAAmB6sG,2BACnB1vK,EAENkvD,QAAS,kBAAMsjH,GAAuB,IACtC7wD,OAAM,uCAAE,WACN+tD,GADM,SAAAr9J,EAAA,+EAIEihK,GAAoBrxK,EAAM,CAC9BytK,0BALE,uBAQJ8C,GAAuB,GARnB,uEAAF,wDAYN,UAgBC+B,IATmB,SAAC,GAAD,IAChClrJ,EADgC,EAChCA,OACGxpB,EAF6B,iCAIhC,gBAACmkH,GAAA,EAAD,CAAqB36F,OAAQA,GAC3B,gBAAC,GAAqBxpB,M,qKCr7BpB20K,EAAa,CACjB,YACA,UACA,WACA,YACA,UACA,SACA,SACA,OACA,YACA,WACA,SACA,SACA,WACA,YACA,aACA,SACA,WACA,aACA,aACA,aACA,WACA,SACA,WACA,QACA,aACA,SACA,SACA,UACA,YACA,QACA,WACA,YACA,WACA,SACA,cACA,UACA,eACA,SACA,aACA,QACA,YACA,YACA,OACA,QACA,QACA,UACA,WACA,QACA,UACA,YACA,YACA,UACA,QACA,SACA,UACA,UACA,QACA,WACA,UACA,WACA,UACA,YACA,MACA,UACA,SACA,WACA,WACA,UACA,WACA,WACA,cACA,SACA,aACA,SACA,aACA,YACA,YACA,UACA,OACA,QACA,UACA,QACA,YACA,MACA,QACA,YACA,UACA,QACA,YACA,YACA,cACA,aACA,aACA,OACA,UACA,OACA,SACA,aACA,MACA,YACA,UACA,SACA,UACA,UACA,SACA,OACA,WACA,UACA,OACA,UACA,QACA,SACA,OACA,SACA,YACA,SACA,QACA,QACA,SACA,YACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,WACA,OACA,QACA,cACA,UACA,OACA,MACA,QACA,UACA,aACA,QACA,UACA,WACA,SACA,SACA,WACA,YACA,YACA,UACA,aACA,WACA,QACA,WACA,WACA,OACA,QACA,YACA,SACA,aACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,aACA,QACA,SACA,SACA,SACA,YACA,SACA,WACA,OACA,WACA,WACA,YACA,cACA,SACA,WACA,UACA,WACA,YACA,YACA,WACA,YACA,SACA,OACA,cACA,cACA,SACA,aACA,WACA,OACA,SACA,SACA,QACA,SACA,UACA,UACA,QACA,SACA,WACA,aACA,UACA,QACA,SACA,QACA,MACA,OACA,UACA,QACA,QACA,SACA,UACA,WACA,OACA,QACA,YACA,SACA,SACA,OACA,UACA,WACA,OACA,UACA,YACA,OACA,WACA,SACA,WACA,WACA,OACA,SACA,WACA,YACA,UACA,OACA,WACA,YACA,aACA,YACA,SACA,UACA,YACA,WACA,cACA,WACA,WACA,aACA,WACA,SACA,WACA,YACA,YACA,WACA,SACA,UACA,QACA,eACA,aACA,WACA,YACA,aACA,gBACA,cACA,WACA,YACA,YACA,SACA,QACA,cACA,QACA,SACA,WACA,OACA,YACA,WACA,SACA,SACA,SACA,MACA,OACA,QACA,UACA,gBACA,QACA,QACA,eACA,SACA,OACA,UACA,WACA,WACA,cACA,YACA,QACA,UACA,SACA,WACA,UACA,QACA,QACA,cACA,UACA,QACA,YACA,aACA,cACA,MACA,YACA,YACA,YACA,YACA,WACA,eACA,eACA,UACA,UACA,QACA,QACA,UACA,WACA,aACA,UACA,OACA,OACA,QACA,YACA,UACA,WACA,YACA,SACA,YACA,SACA,YACA,WACA,WACA,QACA,QACA,OACA,WACA,aACA,QACA,QACA,WACA,SACA,YACA,QACA,YACA,MACA,aACA,OACA,SACA,UACA,WACA,UACA,UACA,UACA,MACA,SACA,QACA,SACA,OACA,UACA,QACA,MACA,QACA,WACA,QACA,SACA,OACA,WACA,QACA,SACA,WACA,UACA,UACA,SACA,SACA,aACA,SACA,QACA,OACA,UACA,MACA,YACA,YACA,UACA,YACA,UACA,QACA,QACA,UACA,OACA,WACA,WACA,QACA,UACA,WACA,aACA,cACA,OACA,WACA,MACA,aACA,QACA,QACA,UACA,SACA,SACA,aACA,QACA,QACA,UACA,OACA,SACA,YACA,MACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,WACA,SACA,OACA,YACA,WACA,OACA,aACA,WACA,SACA,SACA,QACA,OACA,SACA,OACA,SACA,QACA,WACA,WACA,QACA,YACA,WACA,SACA,OACA,SACA,QACA,SACA,QACA,OACA,WACA,SACA,YACA,UACA,SACA,WACA,SACA,UACA,SACA,YACA,WACA,QACA,QACA,WACA,WACA,OACA,WACA,SACA,UACA,WACA,aACA,QACA,UACA,UACA,QACA,OACA,QACA,aACA,QACA,QACA,UACA,gBACA,SACA,WACA,QACA,UACA,UACA,WACA,SACA,WACA,UACA,OACA,cACA,YACA,MACA,UACA,aACA,WACA,SACA,OACA,SACA,SACA,YACA,WACA,aACA,MACA,OACA,UACA,QACA,SACA,SACA,UACA,WACA,SACA,QACA,UACA,OACA,SACA,QACA,WACA,aACA,OACA,MACA,QACA,WACA,MACA,UACA,cACA,YACA,UACA,WACA,SACA,YACA,YACA,WACA,YACA,WACA,aACA,eACA,cACA,eACA,aACA,SACA,cACA,cACA,WACA,SACA,WACA,cACA,YACA,cACA,cACA,cACA,WACA,aACA,QACA,aACA,QACA,QACA,SACA,SACA,QACA,UACA,UACA,QACA,SACA,SACA,SACA,WACA,YACA,QACA,UACA,QACA,OACA,QACA,OACA,QACA,OACA,cACA,SACA,SACA,SACA,UACA,gBACA,QACA,UACA,gBACA,UACA,OACA,aACA,UACA,QACA,OACA,OACA,YACA,SACA,SACA,OACA,OACA,QACA,QACA,SACA,QACA,OACA,QACA,OACA,WACA,SACA,SACA,YACA,UACA,WACA,SACA,SACA,SACA,SACA,OACA,UACA,QACA,WACA,OACA,QACA,UACA,QACA,SACA,SACA,MACA,QACA,QACA,QACA,QACA,YACA,QACA,OACA,YACA,QACA,UACA,UACA,QACA,YACA,QACA,UACA,UACA,cACA,OACA,WACA,QACA,YACA,YACA,UACA,WACA,OACA,SACA,UACA,YACA,UACA,WACA,gBACA,MACA,QACA,OACA,SACA,QACA,UACA,OACA,SACA,UACA,SACA,WACA,OACA,QACA,QACA,SACA,WACA,QACA,WACA,YACA,QACA,OACA,WACA,YACA,QACA,QACA,UACA,SACA,SACA,QACA,YACA,QACA,UACA,QACA,aACA,cACA,SACA,QACA,UACA,UACA,QACA,QACA,OACA,SACA,aACA,QACA,QACA,SACA,QACA,SACA,UACA,UACA,aACA,OACA,OACA,WACA,YACA,SACA,WACA,QACA,aACA,UACA,MACA,OACA,OACA,QACA,SACA,QACA,QACA,YACA,QACA,aACA,cACA,UACA,SACA,YACA,OACA,QACA,QACA,UACA,OACA,aACA,SACA,WACA,aACA,QACA,SACA,WACA,WACA,YACA,UACA,aACA,YACA,WACA,aACA,UACA,MACA,UACA,OACA,aACA,UACA,OACA,WACA,UACA,SACA,WACA,UACA,WACA,WACA,aACA,cACA,OACA,gBACA,YACA,YACA,QACA,cACA,UACA,UACA,cACA,OACA,SACA,UACA,YACA,WACA,UACA,eACA,OACA,WACA,WACA,WACA,SACA,WACA,QACA,UACA,WACA,cACA,YACA,SACA,SACA,WACA,WACA,OACA,UACA,QACA,SACA,QACA,QACA,UACA,YACA,WACA,SACA,OACA,SACA,YACA,SACA,SACA,YACA,OACA,aACA,WACA,SACA,WACA,WACA,UACA,UACA,SACA,WACA,SACA,UACA,QACA,QACA,UACA,SACA,MACA,WACA,aACA,UACA,SACA,SACA,aACA,QACA,cACA,YACA,SACA,QACA,SACA,SACA,OACA,OACA,SACA,UACA,QACA,UACA,WACA,QACA,SACA,cACA,eACA,QACA,WACA,QACA,SACA,WACA,YACA,QACA,MACA,cACA,SACA,QACA,eACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,YACA,YACA,MACA,YACA,aACA,QACA,UACA,WACA,aACA,cACA,YACA,YACA,WACA,WACA,cACA,aACA,OACA,QACA,YACA,WACA,QACA,OACA,QACA,UACA,SACA,WACA,QACA,SACA,OACA,SACA,QACA,QACA,QACA,QACA,OACA,SACA,QACA,SACA,WACA,QACA,MACA,OACA,QACA,OACA,QACA,aACA,QACA,SACA,QACA,aACA,SACA,SACA,QACA,YACA,SACA,aACA,gBACA,UACA,aACA,SACA,SACA,YACA,SACA,SACA,YACA,UACA,YACA,WACA,SACA,UACA,SACA,QACA,UACA,QACA,QACA,YACA,WACA,QACA,QACA,SACA,SACA,OACA,MACA,OACA,SACA,QACA,QACA,SACA,aACA,UACA,WACA,SACA,QACA,SACA,QACA,OACA,QACA,WACA,SACA,OACA,QACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,WACA,SACA,QACA,SACA,SACA,OACA,QACA,OACA,QACA,WACA,SACA,gBACA,SACA,OACA,QACA,OACA,UACA,YACA,UACA,cACA,QACA,SACA,QACA,YACA,WACA,WACA,SACA,WACA,UACA,SACA,OACA,WACA,UACA,SACA,YACA,YACA,SACA,UACA,QACA,WACA,OACA,QACA,aACA,YACA,SACA,QACA,cACA,SACA,QACA,cACA,SACA,QACA,SACA,WACA,UACA,UACA,SACA,WACA,aACA,SACA,QACA,UACA,aACA,cACA,SACA,aACA,WACA,SACA,QACA,QACA,SACA,QACA,SACA,cACA,UACA,OACA,QACA,SACA,QACA,QACA,aACA,QACA,cACA,aACA,QACA,QACA,QACA,WACA,OACA,OACA,MACA,WACA,QACA,OACA,WACA,YACA,QACA,SACA,OACA,UACA,UACA,QACA,UACA,YACA,SACA,QACA,UACA,WACA,WACA,SACA,QACA,WACA,cACA,OACA,YACA,QACA,aACA,cACA,cACA,WACA,aACA,OACA,SACA,OACA,QACA,WACA,YACA,MACA,OACA,SACA,QACA,SACA,WACA,WACA,SACA,aACA,SACA,OACA,QACA,WACA,WACA,YACA,OACA,SACA,WACA,MACA,UACA,aACA,QACA,SACA,gBACA,YACA,UACA,aACA,WACA,YACA,aACA,cACA,UACA,YACA,SACA,YACA,eACA,SACA,SACA,UACA,UACA,YACA,SACA,YACA,aACA,SACA,SACA,UACA,aACA,WACA,YACA,SACA,YACA,SACA,QACA,UACA,SACA,SACA,OACA,SACA,SACA,UACA,QACA,YACA,UACA,WACA,QACA,QACA,WACA,UACA,OACA,WACA,WACA,UACA,SACA,SACA,SACA,aACA,WACA,UACA,SACA,QACA,YACA,QACA,QACA,QACA,YACA,WACA,YACA,QACA,UACA,UACA,UACA,YACA,SACA,UACA,UACA,OACA,OACA,WACA,SACA,OACA,UACA,QACA,MACA,YACA,aACA,QACA,YACA,SACA,OACA,SACA,OACA,UACA,QACA,SACA,QACA,OACA,OACA,UACA,QACA,YACA,YACA,SACA,QACA,WACA,UACA,SACA,WACA,WACA,QACA,MACA,WACA,QACA,WACA,QACA,OACA,UACA,QACA,QACA,UAGIC,EAAQ,CACZ,UACA,WACA,YACA,MACA,SACA,WACA,QACA,WACA,aACA,gBACA,SACA,YACA,YACA,eACA,YACA,MACA,WACA,UACA,QACA,SACA,YACA,QACA,QACA,SACA,OACA,YACA,UACA,YACA,WACA,OACA,WACA,aACA,MACA,OACA,MACA,SACA,aACA,YACA,OACA,QACA,MACA,OACA,UACA,OACA,OACA,WACA,QACA,SACA,aACA,MACA,OACA,SACA,OACA,OACA,MACA,UACA,OACA,MACA,OACA,WACA,WACA,SACA,UACA,OACA,QACA,QACA,OACA,QACA,OACA,QACA,QACA,WACA,MACA,OACA,QACA,QACA,OACA,QACA,OACA,OACA,OACA,OACA,QACA,OACA,SACA,SACA,WACA,MACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,WACA,OACA,QACA,SACA,WACA,SACA,SACA,UACA,QACA,SACA,OACA,QACA,aACA,WACA,SACA,OACA,MACA,SACA,SACA,MACA,UACA,MACA,OACA,OACA,YACA,WACA,OACA,OACA,OACA,MACA,OACA,SACA,QACA,OACA,SACA,SACA,WACA,OACA,QACA,SACA,SACA,UACA,SACA,WACA,SACA,QACA,UACA,WACA,OACA,SACA,SACA,OACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,OACA,SACA,OACA,SACA,QACA,YACA,UACA,aACA,cACA,YACA,aACA,UACA,OACA,SACA,OACA,QACA,UACA,QACA,MACA,OACA,QACA,UACA,QACA,SACA,QACA,UACA,WACA,SACA,OACA,QACA,QACA,OACA,QACA,QACA,MACA,MACA,UACA,UACA,QACA,UACA,MACA,QACA,OACA,WACA,OACA,SACA,SACA,SACA,OACA,cACA,SACA,cACA,YACA,OACA,SACA,YACA,YACA,OACA,YACA,aACA,WACA,eACA,WACA,OACA,SACA,MACA,OACA,OACA,QACA,SACA,OACA,WACA,QACA,SACA,QACA,QACA,UACA,OACA,OACA,QACA,OACA,MACA,QACA,aACA,OACA,YACA,SACA,MACA,SACA,OACA,QACA,MACA,SACA,QACA,QACA,UACA,WACA,YACA,YACA,aACA,SACA,MACA,OACA,OACA,OACA,UACA,OACA,OACA,OACA,OACA,UACA,QACA,SACA,OACA,OACA,OACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,UACA,MACA,MACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,QACA,WACA,SACA,UACA,OACA,QACA,QACA,QACA,OACA,YACA,OACA,QACA,QACA,SACA,UACA,QACA,QACA,OACA,aACA,WACA,QACA,QACA,QACA,QACA,OACA,SACA,QACA,SACA,QACA,SACA,MACA,OACA,UACA,OACA,SACA,OACA,QACA,SACA,UACA,MACA,OACA,SACA,OACA,OACA,UACA,UACA,OACA,UACA,OACA,QACA,OACA,OACA,OACA,QACA,SACA,OACA,WACA,MACA,OACA,QACA,SACA,QACA,UACA,MACA,SACA,OACA,UACA,SACA,WACA,WACA,MACA,SACA,aACA,YACA,WACA,YACA,OACA,SACA,OACA,MACA,MACA,QACA,QACA,YACA,QACA,OACA,QACA,QACA,OACA,SACA,MACA,OACA,OACA,UACA,QACA,OACA,QACA,OACA,YACA,UACA,OACA,UACA,OACA,OACA,OACA,WACA,QACA,UACA,MACA,OACA,SACA,UACA,UACA,QACA,UACA,QACA,OACA,QACA,MACA,SACA,OACA,OACA,SACA,OACA,OACA,OACA,MACA,SACA,QACA,YACA,UACA,QACA,OACA,UACA,SACA,OACA,SACA,OACA,OACA,QACA,OACA,UACA,OACA,UACA,SACA,QACA,OACA,SACA,OACA,OACA,OACA,WACA,OACA,SACA,OACA,SACA,QACA,QACA,OACA,UACA,SACA,SACA,WACA,QACA,OACA,SACA,OACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,WACA,SACA,MACA,UACA,cACA,QACA,QACA,SACA,MACA,SACA,UACA,QACA,OACA,OACA,OACA,MACA,UACA,QACA,SACA,OACA,UACA,QACA,YACA,UACA,QACA,OACA,MACA,SACA,SACA,OACA,MACA,OACA,SACA,UACA,MACA,OACA,MACA,OACA,MACA,OACA,SACA,QACA,QACA,SACA,QACA,aACA,SACA,UACA,QACA,OACA,aACA,WACA,OACA,SACA,SACA,QACA,SACA,YACA,UACA,SACA,WACA,MACA,SACA,SACA,QACA,QACA,UACA,SACA,WACA,QACA,UACA,OACA,OACA,aACA,UACA,OACA,UACA,SACA,WACA,YACA,QACA,QACA,QACA,SACA,SACA,SACA,UACA,OACA,UACA,OACA,YACA,OACA,QACA,MACA,OACA,MACA,WACA,UACA,SACA,UACA,SACA,SACA,SACA,WACA,WACA,iBACA,UACA,UACA,OACA,SACA,SACA,OACA,SACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,MACA,OACA,OACA,OACA,OACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,OACA,QACA,YACA,QACA,QACA,QACA,SACA,UACA,WACA,QACA,MACA,WACA,OACA,YACA,OACA,YACA,OACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,OACA,OACA,WACA,OACA,OACA,SACA,OACA,OACA,QACA,OACA,QACA,MACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,OACA,OACA,UACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,QACA,QACA,QACA,UACA,SACA,QACA,OACA,SACA,MACA,SACA,WACA,QACA,QACA,OACA,QACA,YACA,UACA,QACA,QACA,OACA,OACA,OACA,QACA,SACA,SACA,WACA,UACA,QACA,OACA,QACA,QACA,QACA,WACA,QACA,SACA,SACA,UACA,SACA,YACA,YACA,QACA,aACA,OACA,SACA,MACA,UACA,WACA,UACA,OACA,QACA,SACA,QACA,OACA,OACA,OACA,QACA,MACA,WACA,OACA,QACA,SACA,WACA,OACA,YACA,OACA,UACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,UACA,SACA,QACA,OACA,MACA,QACA,OACA,MACA,OACA,WACA,SACA,QACA,aACA,aACA,MACA,QACA,OACA,MACA,OACA,QACA,QACA,QACA,SACA,QACA,YACA,OACA,YACA,OACA,QACA,QACA,OACA,UACA,WACA,QACA,SACA,MACA,SACA,OACA,OACA,QACA,WACA,YACA,OACA,MACA,WACA,QACA,MACA,OACA,YACA,OACA,OACA,QACA,SACA,OACA,OACA,UACA,QAC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wBxjL,K,6KCrFZsxF,E,sKAIbhyF,KAAKoI,QAAQpI,KAAKoI,OAAOlI,U,+BAGrB,IAAD,SAC8BF,KAAKN,MAAlC+b,EADD,EACCA,kBAAmB/a,EADpB,EACoBA,MACrBib,EAAcF,EAChBA,EAAkBG,sBAClBrd,EAEJ,OACE,kBAAC,IAAD,CACEoB,OAAQK,KAAKN,MAAMmc,SAAW,OAAS,QACvC9Z,WAAS,EACTlC,kBAAmB8b,EACnBrb,mBACEmb,EAAoBA,EAAkBM,0BAAuBxd,EAE/DmC,MAAOA,EACP/C,IAAK,SAAAgL,GAAK,OAAK,EAAKP,OAASO,GAC7BvI,SAAU,SAACuU,EAAG1V,EAAGyB,GAAP,OAAiB,EAAKhB,MAAMU,SAASM,KAE/C,kBAAC,IAAD,CAAcA,MAAM,OAAOiJ,YAAa,wBACxC,kBAAC,IAAD,CAAcjJ,MAAM,QAAQiJ,YAAa,2BACzC,kBAAC,IAAD,CACEjJ,MAAM,SACNiJ,YAAa,kE,GA7BiBiiB,aAoC3ByqE,EAAoB,SAAC,GAGG,IAFnC31F,EAEkC,EAFlCA,MACAwjL,EACkC,EADlCA,sBAEA,OAAOxjL,GAGL,kBAACwjL,EAAD,CAAuBW,SAAO,GAC5B,kBAAC,QAAD,iC,oKC9CAC,EAAW,CACf,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,WACA,WACA,OACA,OACA,UACA,UACA,YACA,QACA,SACA,QACA,QACA,YACA,QACA,QACA,OACA,QACA,OACA,MACA,SACA,SACA,SACA,SACA,WACA,MACA,OACA,SACA,eACA,iBACA,YACA,aACA,eACA,MACA,WACA,WACA,SACA,YACA,iBACA,iBACA,eACA,OACA,KACA,QACA,OACA,aACA,WACA,cACA,aACA,KACA,KACA,KACA,KACA,KACA,KA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CnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,2BAA4B,CAC3B,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,KAGF,SAASmhN,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEthN,EAAKohN,GAC9B,OAAOn5M,QAAQhK,UAAU2hB,MAAK,WAC7B,IAAIlU,EAAI,IAAIvD,MAAM,uBAAyBi5M,EAAM,KAEjD,MADA11M,EAAE6sB,KAAO,mBACH7sB,KAIR,IAAIkpE,EAAM50E,EAAIohN,GAAM3oN,EAAKm8E,EAAI,GAC7B,OAAOysI,EAAoB31M,EAAEkpE,EAAI,IAAIh1D,MAAK,WACzC,OAAOyhM,EAAoBptJ,EAAEx7D,EAAI,MAGnC0oN,EAAoBr1L,KAAO,WAC1B,OAAOD,OAAOC,KAAK9rB,IAEpBmhN,EAAoB1oN,GAAK,KACzBvC,EAAOC,QAAUgrN,G,ydCvLFI,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","file":"static/js/1.417590f8.chunk.js","sourcesContent":["// @flow\nimport * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\ntype Props = {|\n  /** The text to display. */\n  children: ?React.Node,\n  /** Size of the text. `body` if not specified. */\n  size?: 'body' | 'body2' | 'title' | 'bold-title',\n  /** Color of the text */\n  color?: 'error' | 'primary' | 'secondary',\n  /** The text alignment. */\n  align?: 'inherit' | 'left' | 'center' | 'right' | 'justify',\n  /** Don't shrink the text if there is not enough place in a flex container. */\n  noShrink?: boolean,\n  /** Remove the margin around the text. */\n  noMargin?: boolean,\n  /** By default the text is a paragraph (`p`). It can be shown inline  */\n  displayInlineAsSpan?: boolean,\n  /** A limited set of styling is supported. */\n  style?: {|\n    // Margins\n    marginLeft?: number,\n    marginRight?: number,\n\n    // Allow to specify that the text should break words\n    overflow?: 'hidden',\n    overflowWrap?: 'break-word',\n    whiteSpace?: 'nowrap' | 'pre-wrap',\n    textOverflow?: 'ellipsis',\n\n    // Allow to expand the text\n    flex?: 1,\n\n    // Allow to change color\n    opacity?: number,\n  |},\n|};\n\ntype Interface = {||};\n\n// A Text to be displayed in the app. Prefer using this\n// than a `<p>`/`<span>` or `<div>` as this will help to maintain\n// consistency of text in the whole app.\nconst Text = React.forwardRef<Props, Interface>(\n  (\n    {\n      children,\n      style,\n      size,\n      color,\n      align,\n      noShrink,\n      noMargin,\n      displayInlineAsSpan,\n      ...otherProps // Used by possible parent element (such as Tooltip) to pass down props.\n    },\n    ref\n  ) => (\n    <Typography\n      variant={\n        size === 'bold-title'\n          ? 'h5'\n          : size === 'title'\n          ? 'h6'\n          : size === 'body2'\n          ? 'body2'\n          : 'body1'\n      }\n      ref={ref}\n      color={color}\n      component={displayInlineAsSpan ? 'span' : undefined}\n      style={{\n        ...style,\n        display: displayInlineAsSpan ? 'inline-block' : undefined,\n        flexShrink: noShrink ? 0 : undefined,\n        marginTop: noMargin ? 0 : 6,\n        marginBottom: noMargin ? 0 : 6,\n      }}\n      align={align || 'inherit'}\n      {...otherProps}\n    >\n      {children}\n    </Typography>\n  )\n);\n\nexport default Text;\n","// @flow\n// Note: this file does not use export/imports and use Flow comments to allow its usage from Node.js\n\nconst mapFor = /*:: <T>*/ (\n  start /*: number */,\n  end /*: number */,\n  func /*: (number) => T */\n) /*:Array<T> */ => {\n  const result = [];\n  for (let i = start; i < end; i++) {\n    result.push(func(i));\n  }\n  return result;\n};\n\nconst mapReverseFor = /*:: <T>*/ (\n  start /*: number */,\n  end /*: number */,\n  func /*: (number) => T */\n) /*:Array<T> */ => {\n  const result = [];\n  for (let i = end - 1; i >= start; i--) {\n    result.push(func(i));\n  }\n  return result;\n};\n\n/*flow-include\ntype CppVector<T> = {\n  +size: () => number,\n  +at: (number) => T,\n}\n*/\n\nconst mapVector = /*:: <T, U>*/ (\n  cppVector /*: CppVector<T> */,\n  func /*: (T, number) => U */\n) /*:Array<U> */ => {\n  return mapFor(0, cppVector.size(), i => func(cppVector.at(i), i));\n};\n\nmodule.exports = {\n  mapFor,\n  mapReverseFor,\n  mapVector,\n};\n","// @flow\nimport * as React from 'react';\nimport { I18n } from '@lingui/react';\nimport MUITextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport { MarkdownText } from './MarkdownText';\n\ntype ValueProps =\n  // Support \"text\" and \"password\" type:\n  | {|\n      type?: 'text' | 'password' | 'search',\n      value: string,\n      onChange?: (\n        event: {| target: {| value: string |} |},\n        text: string\n      ) => void,\n    |}\n  // Support \"number\" type (note that onChange returns a string):\n  | {|\n      type: 'number',\n      value: number | string,\n      onChange?: (event: {||}, value: string) => void,\n    |}\n  // Support an \"uncontrolled\" field:\n  | {| defaultValue: string |}\n  // Support an empty field with just a hint text:\n  | {| hintText?: React.Node |};\n\n// We support a subset of the props supported by Material-UI v0.x TextField\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  // Value and change handling:\n  ...ValueProps,\n\n  // DOM events:\n  onFocus?: ({\n    currentTarget: {\n      value: string,\n    },\n    preventDefault: () => void,\n  }) => void,\n  onBlur?: ({\n    currentTarget: {\n      value: string,\n    },\n  }) => void,\n\n  // Advanced DOM events, for exceptional usage:\n  onClick?: () => void,\n  onKeyPress?: (event: SyntheticKeyboardEvent<>) => void,\n  onKeyUp?: (event: SyntheticKeyboardEvent<>) => void,\n  onKeyDown?: (event: SyntheticKeyboardEvent<>) => void,\n\n  // Error handling/Validation:\n  errorText?: React.Node,\n  required?: boolean,\n\n  // Accessibility:\n  disabled?: boolean,\n  readOnly?: boolean,\n\n  // Labels:\n  floatingLabelFixed?: boolean,\n  floatingLabelText?: React.Node,\n  name?: string,\n  hintText?: MessageDescriptor,\n  helperMarkdownText?: ?string,\n  id?: string,\n\n  // Keyboard focus:\n  autoFocus?: boolean,\n\n  // String text field:\n  maxLength?: number,\n\n  // Number text field:\n  precision?: number,\n  max?: number,\n  min?: number,\n  step?: number,\n\n  // Support for multiline:\n  multiline?: boolean,\n  rows?: number,\n  rowsMax?: number,\n\n  // Support for adornments:\n  endAdornment?: ?React.Node,\n\n  // Styling:\n  margin?: 'none' | 'dense',\n  fullWidth?: boolean,\n  style?: {|\n    fontSize?: 14 | 18 | '1.3em',\n    fontStyle?: 'normal' | 'italic',\n    width?: number | '30%' | '60%' | '100%',\n    flex?: 1,\n    top?: number,\n    padding?: number,\n  |},\n  inputStyle?: {|\n    // Allow to customize color (replace by color prop?) // TO VERIFY\n    color?: string,\n    WebkitTextFillColor?: string,\n    fontSize?: '1em',\n\n    // Allow to display monospaced font\n    fontFamily?: '\"Lucida Console\", Monaco, monospace',\n    lineHeight?: 1.4 | 1.5,\n    padding?: 0,\n  |},\n  underlineFocusStyle?: {| borderColor: string |}, // TODO\n  underlineShow?: boolean,\n|};\n\n/**\n * Compute the `variant`, `margin` and `hiddenLabel` props for a material-ui `TextField`\n * to give it the proper style according to its usage.\n *\n * 1. A traditional `TextField` is by default \"filled\"\n *    (see material-ui component doc: https://material-ui.com/components/text-fields/\n *     and [Material Design specification](https://material.io/components/text-fields/#specs)).\n *\n *   The filled background gives them more emphasize compared compared to a single underline\n *   (as done in previous GDevelop versions). They have a label indicating what they refer to.\n *\n * 2. Sometimes, a floating label would not provide more information and is considered to be\n *   obvious (thanks to the existing value, dialog title or button label).\n *\n *   In this case, not specifying a label is fine (`floatingLabelText` is undefined or empty).\n *   This will lead to a filled text field without the extra space for the label.\n *\n *   A `placeholder` should still be passed so that the user can know what the field is about\n *     when not filled.\n *   Example: this is particularly adapted to file/folder pickers (see `LocalFilePicker`,\n *     `LocalFolderPicker`) or a `SearchPanel`.\n *\n * 3. `TextField` in `MiniToolbar` are usually less changed by the user than other text fields\n *   (for example, they are the animation name or the object name in a Sprite editor.\n *   These are not changed a lot compared to behaviours or object properties).\n *\n *   They also are already in a MiniToolbar that has an \"emphasis\" with the slightly\n *   different background color of `MiniToolbar`. Finally, `MiniToolbar` is also small in height.\n *\n *   In these cases, use `none` for `margin`.\n *   This will generate a text field without filled background (just an underline).\n *\n * 4. `TextField` can be used with `margin=\"none\"` and also the underline hidden,\n *   in the very special case of an embedded text field in another form control (like `SearchBar`).\n */\nexport const computeTextFieldStyleProps = (props: {\n  margin?: 'none' | 'dense',\n  floatingLabelText?: React.Node,\n}) => {\n  return {\n    // Use \"filled\" variant by default, unless `margin` is \"none\" (see 1. and 2.)\n    variant: props.margin === 'none' ? 'standard' : 'filled',\n    // Use \"dense\" fields by default, unless `margin` is \"none\" (see 3.)\n    margin: props.margin === 'none' ? 'none' : 'dense',\n    // For variant \"standard\", if there is no label, no extra space is taken. For variant \"filled\",\n    // even when no label is passed, there is a space for it. Remove this space if no\n    // label is provided. (see 2.)\n    hiddenLabel: props.margin !== 'none' && !props.floatingLabelText,\n  };\n};\n\n/**\n * A text field based on Material-UI text field.\n */\nexport default class TextField extends React.Component<Props, {||}> {\n  _input = React.createRef<HTMLInputElement>();\n\n  focus() {\n    if (this._input.current) {\n      this._input.current.focus();\n    }\n  }\n\n  blur() {\n    if (this._input.current) {\n      this._input.current.blur();\n    }\n  }\n\n  getInputNode(): ?HTMLInputElement {\n    if (this._input.current) {\n      return this._input.current;\n    }\n\n    return null;\n  }\n\n  render() {\n    const { props } = this;\n    const onChange = props.onChange || undefined;\n\n    const helperText = props.helperMarkdownText ? (\n      <MarkdownText source={props.helperMarkdownText} />\n    ) : null;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <MUITextField\n            // Value and change handling:\n            type={props.type !== undefined ? props.type : undefined}\n            value={props.value !== undefined ? props.value : undefined}\n            defaultValue={\n              props.defaultValue !== undefined ? props.defaultValue : undefined\n            }\n            onChange={\n              onChange\n                ? event => onChange(event, event.target.value)\n                : undefined\n            }\n            // Error handling:\n            error={!!props.errorText}\n            helperText={props.errorText || helperText}\n            disabled={props.disabled}\n            required={props.required}\n            InputLabelProps={{\n              shrink: props.floatingLabelFixed ? true : undefined,\n            }}\n            label={props.floatingLabelText}\n            name={props.name}\n            placeholder={props.hintText ? i18n._(props.hintText) : undefined}\n            id={props.id}\n            // Keyboard focus:\n            autoFocus={props.autoFocus}\n            // Multiline:\n            multiline={props.multiline}\n            rows={props.rows}\n            rowsMax={props.rowsMax}\n            // Styling:\n            {...computeTextFieldStyleProps(props)}\n            fullWidth={props.fullWidth}\n            InputProps={{\n              disableUnderline:\n                props.underlineShow === undefined\n                  ? false\n                  : !props.underlineShow,\n              style: {\n                fontSize: props.style ? props.style.fontSize : undefined,\n                fontStyle: props.style ? props.style.fontStyle : undefined,\n                ...props.inputStyle,\n              },\n              readOnly: props.readOnly,\n              inputProps: {\n                onKeyPress: props.onKeyPress,\n                onKeyUp: props.onKeyUp,\n                onKeyDown: props.onKeyDown,\n                onClick: props.onClick,\n                // String field props:\n                maxLength: props.maxLength,\n                // Number field props:\n                max: props.max,\n                min: props.min,\n                step: props.step,\n              },\n              // Input adornment:\n              endAdornment: props.endAdornment ? (\n                <InputAdornment position=\"end\">\n                  {props.endAdornment}\n                </InputAdornment>\n              ) : (\n                undefined\n              ),\n            }}\n            style={\n              props.style\n                ? {\n                    width: props.style.width || undefined,\n                    flex: props.style.flex || undefined,\n                    top: props.style.top || undefined,\n                  }\n                : undefined\n            }\n            onFocus={props.onFocus}\n            onBlur={props.onBlur}\n            inputRef={this._input}\n            spellCheck=\"false\"\n          />\n        )}\n      </I18n>\n    );\n  }\n}\n\n// The \"top\" offset to add to the position of the TextField when\n// it's used inside a ListItem \"primaryText\"\nexport const noMarginTextFieldInListItemTopOffset = 0;\n","// @flow\nimport * as React from 'react';\nimport BackgroundText from './BackgroundText';\n\nconst styles = {\n  containerStyle: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    padding: 10,\n  },\n};\n\ntype Props = {|\n  style?: Object,\n  messageStyle?: Object,\n  children: ?React.Node,\n|};\n\n/**\n * Show a message when there is no content to display.\n * Also take a look at EmptyPlaceholder for a more visible placerholder.\n */\nconst EmptyMessage = (props: Props) => (\n  <div style={{ ...styles.containerStyle, ...props.style }}>\n    <BackgroundText style={props.messageStyle}>{props.children}</BackgroundText>\n  </div>\n);\n\nexport default EmptyMessage;\n","// @flow\nimport * as React from 'react';\nimport MUIIconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { I18n } from '@lingui/react';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport { adaptAcceleratorString } from '../UI/AcceleratorString';\nimport { tooltipEnterDelay } from './Tooltip';\n\ntype IconProps =\n  | {|\n      children: React.Node,\n    |}\n  // Support a few specific icons from icomoon-font.css\n  | {|\n      className:\n        | 'icon-youtube'\n        | 'icon-twitter'\n        | 'icon-facebook'\n        | 'icon-discord'\n        | 'icon-reddit',\n    |};\n\n// We support a subset of the props supported by Material-UI v0.x IconButton\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  ...IconProps,\n  onClick?: (ev: any) => void | Promise<void>,\n  onContextMenu?: () => void,\n  disabled?: boolean,\n  edge?: 'start' | 'end' | false,\n\n  style?: {|\n    padding?: number,\n    width?: number,\n    height?: number,\n    transform?: string,\n    transition?: string,\n    opacity?: number,\n    margin?: number,\n    marginRight?: number,\n    marginLeft?: number,\n    marginTop?: number,\n    marginBottom?: number,\n  |},\n  size?: 'small',\n\n  tooltip?: MessageDescriptor,\n  acceleratorString?: string,\n|};\n\n/**\n * A button showing just an icon, based on Material-UI icon button.\n * Supports displaying a tooltip.\n */\nexport default class IconButton extends React.Component<Props, {||}> {\n  render() {\n    const { tooltip, acceleratorString, ...otherProps } = this.props;\n    const iconButton = <MUIIconButton {...otherProps} />;\n\n    return tooltip && !this.props.disabled ? (\n      <I18n>\n        {({ i18n }) => (\n          <Tooltip\n            title={\n              i18n._(tooltip) +\n              (acceleratorString\n                ? ' ' + adaptAcceleratorString(acceleratorString)\n                : '')\n            }\n            placement=\"bottom\"\n            enterDelay={tooltipEnterDelay}\n          >\n            {iconButton}\n          </Tooltip>\n        )}\n      </I18n>\n    ) : (\n      iconButton\n    );\n  }\n}\n","// @flow\nimport { isMacLike, isMobile } from '../Utils/Platform';\n\nexport const adaptAcceleratorString = (accelerator: string): string => {\n  if (isMobile()) {\n    return ''; // Do not display accelerators on mobile devices\n  } else if (isMacLike()) {\n    return accelerator\n      .replace(/CmdOrCtrl\\+/, '⌘')\n      .replace(/CommandOrControl\\+/, '⌘')\n      .replace(/Super\\+/, '⌘')\n      .replace(/Shift\\+/, '⇧')\n      .replace(/Alt\\+/, '⌥')\n      .replace(/Option\\+/, '⌥')\n      .replace(/Delete/, '⌦')\n      .replace(/Backspace/, '⌫');\n  } else {\n    return accelerator\n      .replace(/CmdOrCtrl\\+/, 'Ctrl+')\n      .replace(/CommandOrControl\\+/, 'Ctrl+')\n      .replace(/Super\\+/, 'Win+')\n      .replace(/Option\\+/, 'Alt+')\n      .replace(/Delete/, 'DEL');\n  }\n};\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\n\nclass UrlsCache {\n  projectCache: { [number]: { [string]: string } } = {};\n\n  _getProjectCache(project: gdProject) {\n    const cache = this.projectCache[project.ptr];\n    if (!cache) {\n      return (this.projectCache[project.ptr] = {});\n    }\n\n    return cache;\n  }\n\n  getCachedUrl(project: gdProject, url: string): ?string {\n    const cache = this._getProjectCache(project);\n    return cache[url];\n  }\n\n  cacheUrl(project: gdProject, url: string): string {\n    const cache = this._getProjectCache(project);\n    return (cache[url] = url);\n  }\n\n  burstUrl(project: gdProject, url: string) {\n    const cache = this._getProjectCache(project);\n    delete cache[url];\n  }\n\n  cacheLocalFileUrl(\n    project: gdProject,\n    filename: string,\n    systemFilename: string,\n    disableCacheBurst: boolean\n  ): string {\n    const cache = this._getProjectCache(project);\n\n    if (!disableCacheBurst) {\n      // The URL is cached with an extra \"cache-bursting\" parameter.\n      // If the cache is emptied or changed, local files will have another\n      // value for this parameter, forcing the browser to reload the images.\n      return (cache[filename] = `${systemFilename}?cache=${Date.now()}`);\n    } else {\n      return (cache[filename] = systemFilename);\n    }\n  }\n}\n\ntype LoadingOptions = {|\n  disableCacheBurst?: boolean,\n  isResourceForPixi?: boolean,\n|};\n\nconst addSearchParameterToUrl = (\n  url: string,\n  urlEncodedParameterName: string,\n  urlEncodedValue: string\n) => {\n  if (url.startsWith('data:') || url.startsWith('blob:')) {\n    // blob/data protocol does not support search parameters, which are useless anyway.\n    return url;\n  }\n\n  const separator = url.indexOf('?') === -1 ? '?' : '&';\n  return url + separator + urlEncodedParameterName + '=' + urlEncodedValue;\n};\n\nconst isLocalFile = (urlOrFilename: string) => {\n  return !(\n    urlOrFilename.startsWith('http://') ||\n    urlOrFilename.startsWith('https://') ||\n    urlOrFilename.startsWith('ftp://') ||\n    urlOrFilename.startsWith('blob:') ||\n    urlOrFilename.startsWith('data:')\n  );\n};\n\n/**\n * A class globally used in the whole IDE to get URLs to resources of games\n * (notably images).\n */\nexport default class ResourcesLoader {\n  static _cache = new UrlsCache();\n\n  /**\n   * Remove the specified resources resolved URLs from the cache. Useful if the\n   * file represented by these resources has changed. This force these local files to be loaded again.\n   */\n  static burstUrlsCacheForResources(\n    project: gdProject,\n    resourcesNames: Array<string>\n  ) {\n    const resourcesManager = project.getResourcesManager();\n    resourcesNames.forEach(resourceName => {\n      if (resourcesManager.hasResource(resourceName)) {\n        ResourcesLoader._cache.burstUrl(\n          project,\n          resourcesManager.getResource(resourceName).getFile()\n        );\n      }\n    });\n  }\n\n  /**\n   * Re-create a new cache for URLs. Call this to force local\n   * file to be loaded again.\n   */\n  static burstAllUrlsCache() {\n    ResourcesLoader._cache = new UrlsCache();\n  }\n\n  /**\n   * Get the fully qualified URL/filename for a URL/filename relative to the project.\n   */\n  static getFullUrl(\n    project: gdProject,\n    urlOrFilename: string,\n    { isResourceForPixi, disableCacheBurst }: LoadingOptions\n  ): string {\n    if (!!electron && isLocalFile(urlOrFilename)) {\n      const cachedUrl = ResourcesLoader._cache.getCachedUrl(\n        project,\n        urlOrFilename\n      );\n      if (cachedUrl) return cachedUrl;\n\n      // Support local filesystem with Electron\n      const file = project.getProjectFile();\n      const projectPath = path.dirname(file);\n      const resourceAbsolutePath = path\n        .resolve(projectPath, urlOrFilename)\n        .replace(/\\\\/g, '/');\n\n      console.info('Caching resolved local filename:', resourceAbsolutePath);\n      return this._cache.cacheLocalFileUrl(\n        project,\n        urlOrFilename,\n        'file://' + resourceAbsolutePath,\n        !!disableCacheBurst\n      );\n    }\n\n    let urlWithParameters = urlOrFilename;\n    if (isResourceForPixi) {\n      // To avoid strange/hard to understand CORS issues, we add a dummy parameter.\n      // By doing so, we force browser to consider this URL as different than the one traditionally\n      // used to render the resource in the editor (usually as an `<img>` or as a background image).\n      // If we don't add this distinct parameter, it can happen that browsers fail to load the image\n      // as it's already in the **browser cache** but with slightly different request parameters -\n      // making the CORS checks fail (even if it's coming from the browser cache).\n      //\n      // It's happening sometimes (according to loading order probably) in Chrome and (more often)\n      // in Safari. It might be linked to Amazon S3 + CloudFront that \"doesn't support the Vary: Origin header\".\n      // To be safe, we entirely avoid the issue with this parameter, making the browsers consider\n      // the resources for use in Pixi.js and for the rest of the editor as entirely separate.\n      //\n      // See:\n      // - https://stackoverflow.com/questions/26140487/cross-origin-amazon-s3-not-working-using-chrome\n      // - https://stackoverflow.com/questions/20253472/cors-problems-with-amazon-s3-on-the-latest-chomium-and-google-canary\n      // - https://stackoverflow.com/a/20299333\n      //\n      // Search for \"cors-cache-workaround\" in the codebase for the same workarounds.\n      urlWithParameters = addSearchParameterToUrl(\n        urlWithParameters,\n        'gdUsage', // Arbitrary parameter name to designate that this is being used for Pixi.js\n        'pixi'\n      );\n    }\n\n    const cachedUrl = ResourcesLoader._cache.getCachedUrl(\n      project,\n      urlWithParameters\n    );\n    if (cachedUrl) return cachedUrl;\n\n    console.info('Caching resolved url:', urlWithParameters);\n    return this._cache.cacheUrl(project, urlWithParameters);\n  }\n\n  /**\n   * Get the fully qualified URL/filename associated with the given resource, with potential\n   * changes to accomodate browsers CORS/cache.\n   */\n  static getResourceFullUrl(\n    project: gdProject,\n    resourceName: string,\n    options: LoadingOptions\n  ) {\n    if (project.getResourcesManager().hasResource(resourceName)) {\n      const resourceRelativePath = project\n        .getResourcesManager()\n        .getResource(resourceName)\n        .getFile();\n      return ResourcesLoader.getFullUrl(project, resourceRelativePath, options);\n    }\n\n    return resourceName;\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport TextField from './TextField';\n\ntype State = {|\n  focused: boolean,\n  text: ?any,\n|};\n\ntype Props = {|\n  onChange: string => void,\n  value: string,\n  commitOnBlur?: boolean,\n  onFocus?: ({\n    currentTarget: {\n      value: string,\n    },\n    preventDefault: () => void,\n  }) => void,\n  onBlur?: ({\n    currentTarget: {\n      value: string,\n    },\n  }) => void,\n  type?: 'text' | 'number',\n\n  // Some TextField props that can be reused:\n  onClick?: () => void,\n  onKeyPress?: (event: SyntheticKeyboardEvent<HTMLInputElement>) => void,\n  onKeyUp?: (event: SyntheticKeyboardEvent<HTMLInputElement>) => void,\n  onKeyDown?: (event: SyntheticKeyboardEvent<HTMLInputElement>) => void,\n  margin?: 'none' | 'dense',\n  disabled?: boolean,\n  errorText?: React.Node,\n  floatingLabelFixed?: boolean,\n  floatingLabelText?: React.Node,\n  fullWidth?: boolean,\n  hintText?: React.Node,\n  helperMarkdownText?: ?string,\n  id?: string,\n  inputStyle?: Object,\n  max?: number,\n  min?: number,\n  multiline?: boolean,\n  name?: string,\n  step?: number,\n  style?: Object,\n  rows?: number,\n  rowsMax?: number,\n  autoFocus?: boolean,\n|};\n\n/**\n * This component works like a material-ui TextField, except that\n * the value passed as props is not forced into the text field when the user\n * is typing. This is useful if the parent component can do modifications on the value:\n * the user won't be interrupted or have the value changed until he blurs the field.\n */\nexport default class SemiControlledTextField extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    focused: false,\n    text: null,\n  };\n\n  _field: ?TextField = null;\n\n  forceSetValue(text: string) {\n    this.setState({ text });\n  }\n\n  forceSetSelection(selectionStart: number, selectionEnd: number) {\n    const input = this.getInputNode();\n    if (input) {\n      input.selectionStart = selectionStart;\n      input.selectionEnd = selectionEnd;\n    }\n  }\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  getInputNode(): ?HTMLInputElement {\n    if (this._field) return this._field.getInputNode();\n  }\n\n  render() {\n    const {\n      value,\n      onChange,\n      commitOnBlur,\n      onFocus,\n      onBlur,\n      type,\n      ...otherProps\n    } = this.props;\n\n    return (\n      // $FlowFixMe\n      <TextField\n        {...otherProps}\n        type={type || 'text'}\n        ref={field => (this._field = field)}\n        value={this.state.focused ? this.state.text : value}\n        onFocus={event => {\n          this.setState({\n            focused: true,\n            text: this.props.value,\n          });\n\n          if (onFocus) onFocus(event);\n        }}\n        onChange={(event, newValue) => {\n          this.setState({\n            text: newValue,\n          });\n\n          if (!commitOnBlur) onChange(newValue);\n        }}\n        onBlur={event => {\n          onChange(event.currentTarget.value);\n          this.setState({\n            focused: false,\n            text: null,\n          });\n\n          if (onBlur) onBlur(event);\n        }}\n      />\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { I18n } from '@lingui/react';\nimport TextField from '@material-ui/core/TextField';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport { computeTextFieldStyleProps } from './TextField';\nimport { MarkdownText } from './MarkdownText';\n\ntype ValueProps = {|\n  value: number | string,\n  // event and index should not be used, and be removed eventually\n  onChange?: (\n    event: {| target: {| value: string |} |},\n    index: number,\n    text: string // Note that even for number values, a string is returned\n  ) => void,\n|};\n\n// We support a subset of the props supported by Material-UI v0.x SelectField\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  ...ValueProps,\n  fullWidth?: boolean,\n  children: React.Node,\n  disabled?: boolean,\n\n  style?: {\n    flex?: 1,\n    width?: 'auto',\n  },\n  inputStyle?: {| fontSize: 14 |},\n  margin?: 'none' | 'dense',\n\n  floatingLabelText?: React.Node,\n  helperMarkdownText?: ?string,\n\n  // If a hint text is specified, will be shown as an option for the empty\n  // value (\"\"), disabled.\n  hintText?: MessageDescriptor,\n|};\n\nconst INVALID_VALUE = '';\n\n/**\n * A select field based on Material-UI select field.\n * To be used with `SelectOption`.\n */\nexport default class SelectField extends React.Component<Props, {||}> {\n  _input = React.createRef<HTMLInputElement>();\n\n  focus() {\n    if (this._input.current) this._input.current.focus();\n  }\n\n  render() {\n    const { props } = this;\n    const onChange = props.onChange || undefined;\n\n    // Dig into children props to see if the current value is valid or not.\n    let hasValidValue = true;\n    const childrenValues = React.Children.map(props.children, child => {\n      if (child === null || !child.props) return null;\n\n      return child.props.value;\n    });\n    if (!childrenValues) {\n      console.error(\n        'SelectField has been passed no or invalid children. Only SelectOption and null are supported.'\n      );\n    } else {\n      hasValidValue =\n        childrenValues.filter(childValue => childValue === props.value)\n          .length !== 0;\n    }\n    const displayedValue = hasValidValue ? props.value : INVALID_VALUE;\n\n    const helperText = props.helperMarkdownText ? (\n      <MarkdownText source={props.helperMarkdownText} />\n    ) : null;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <TextField\n            select\n            {...computeTextFieldStyleProps(props)}\n            disabled={props.disabled}\n            fullWidth={props.fullWidth}\n            label={props.floatingLabelText}\n            helperText={helperText}\n            value={displayedValue}\n            onChange={\n              onChange\n                ? event => {\n                    onChange(event, -1, event.target.value);\n                  }\n                : undefined\n            }\n            InputProps={{ style: props.inputStyle }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            SelectProps={{\n              native: true,\n            }}\n            style={props.style}\n            inputRef={this._input}\n          >\n            {!hasValidValue ? (\n              <option value={INVALID_VALUE} disabled>\n                {props.hintText\n                  ? i18n._(props.hintText)\n                  : i18n._(t`Choose an option`)}\n              </option>\n            ) : null}\n            {props.children}\n          </TextField>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { I18n } from '@lingui/react';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\n\n// We support a subset of the props supported by Material-UI v0.x MenuItem\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  value: string | number | boolean,\n  primaryText: MessageDescriptor,\n  disabled?: boolean,\n|};\n\n/**\n * A native select option to be used with `SelectField`.\n */\nexport default class SelectOption extends React.Component<Props, {||}> {\n  render() {\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <option value={this.props.value} disabled={this.props.disabled}>\n            {i18n._(this.props.primaryText)}\n          </option>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Info from '@material-ui/icons/Info';\nimport Warning from '@material-ui/icons/Warning';\nimport Error from '@material-ui/icons/Error';\nimport { Spacer, Line, Column } from './Grid';\nimport FlatButton from './FlatButton';\nimport Text from './Text';\nimport GDevelopThemeContext from './Theme/ThemeContext';\nimport { ResponsiveLineStackLayout } from './Layout';\n\nconst styles = {\n  icon: { width: 28, height: 28, marginRight: 10, marginLeft: 10 },\n  content: { flex: 1 },\n};\n\ntype Props = {|\n  kind: 'info' | 'warning' | 'error',\n  children: React.Node,\n  onHide?: () => void,\n  renderLeftIcon?: () => React.Node,\n  renderRightButton?: () => React.Node,\n|};\n\n/**\n * Show an hint, warning or other message. If you want to allow the user\n * to permanently hide the hint/alert/message, see DismissableAlertMessage.\n */\nconst AlertMessage = ({\n  kind,\n  children,\n  onHide,\n  renderRightButton,\n  renderLeftIcon,\n}: Props) => {\n  const gdevelopTheme = React.useContext(GDevelopThemeContext);\n\n  return (\n    <Paper variant=\"outlined\">\n      <Column expand>\n        <ResponsiveLineStackLayout\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          noMargin\n        >\n          <Line noMargin alignItems=\"center\">\n            {renderLeftIcon ? (\n              <React.Fragment>\n                {renderLeftIcon()}\n                <Spacer />\n                <Spacer />\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {kind === 'info' && <Info style={styles.icon} />}\n                {kind === 'warning' && (\n                  <Warning\n                    style={{\n                      ...styles.icon,\n                      color: gdevelopTheme.message.warning,\n                    }}\n                  />\n                )}\n                {kind === 'error' && (\n                  <Error\n                    style={{\n                      ...styles.icon,\n                      color: gdevelopTheme.message.error,\n                    }}\n                  />\n                )}\n              </React.Fragment>\n            )}\n            <Text style={styles.content}>{children}</Text>\n          </Line>\n          <ResponsiveLineStackLayout noMargin alignItems=\"center\">\n            {renderRightButton && renderRightButton()}\n            {onHide && (\n              <FlatButton\n                label={<Trans>Hide</Trans>}\n                onClick={() => onHide()}\n              />\n            )}\n          </ResponsiveLineStackLayout>\n        </ResponsiveLineStackLayout>\n      </Column>\n    </Paper>\n  );\n};\n\nexport default AlertMessage;\n","// @flow\nimport * as React from 'react';\nimport FlatButton from '../FlatButton';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport Window from '../../Utils/Window';\nimport { getHelpLink } from '../../Utils/HelpLink';\nimport { Trans } from '@lingui/macro';\n\ntype PropsType = {\n  helpPagePath: ?string,\n  label?: React.Node,\n};\n\n/**\n * The button that can be used in any dialog to open a help page\n */\nconst HelpButton = (props: PropsType) => {\n  if (!props.helpPagePath) return null;\n  const helpLink = getHelpLink(props.helpPagePath);\n  if (!helpLink) return null;\n\n  return (\n    <FlatButton\n      onClick={() => {\n        if (props.helpPagePath) {\n          Window.openExternalURL(helpLink);\n        }\n      }}\n      target=\"_blank\"\n      label={props.label || <Trans>Help</Trans>}\n      icon={<HelpOutline />}\n    />\n  );\n};\n\nexport default HelpButton;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = {\n  containerStyle: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    padding: 10,\n  },\n};\n\nexport default props => (\n  <div style={{ ...styles.containerStyle, ...props.style }}>\n    <CircularProgress size={40} />\n  </div>\n);\n","// @flow\nimport * as React from 'react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport MUIList from '@material-ui/core/List';\nimport MUIListItem from '@material-ui/core/ListItem';\nimport MUIListItemIcon from '@material-ui/core/ListItemIcon';\nimport MUIListItemText from '@material-ui/core/ListItemText';\nimport MUIListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport IconButton from '@material-ui/core/IconButton';\nimport Refresh from '@material-ui/icons/Refresh';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport Remove from '@material-ui/icons/Remove';\nimport ElementWithMenu from './Menu/ElementWithMenu';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Add from '@material-ui/icons/Add';\nimport Search from '@material-ui/icons/Search';\nimport { type MenuItemTemplate } from './Menu/Menu.flow';\nimport { useLongTouch } from '../Utils/UseLongTouch';\nimport { Collapse } from '@material-ui/core';\nconst useDenseLists = true;\nexport const listItemWith32PxIconHeight = 32;\nexport const listItemWithoutIconHeight = 29;\n\nconst styles = {\n  listItemText: {\n    // Reduce the default spacing between list items\n    // to densify the lists.\n    margin: '1px 0',\n    // Always break the words if necessary. Otherwise a long word\n    // without spaces would be overflowing the list.\n    // This seems to be necessary for all lists (we don't ever want\n    // an overflow - and it's strange in a way that Material-UI is\n    // not handling this by default?)\n    wordBreak: 'break-word',\n  },\n};\n\ntype DoubleClickMouseEvent = {| button: 0 | 1 | 2 |};\n\n// Support for a bunch of different secondary actions\ntype ListItemRightButtonProps =\n  | {|\n      displayReloadButton: boolean,\n      reloadButtonTooltip: string,\n      onReload?: () => void,\n    |}\n  | {|\n      displayMenuButton: boolean,\n      buildMenuTemplate: (i18n: I18nType) => Array<MenuItemTemplate>,\n    |}\n  | {|\n      displayLinkButton: boolean,\n      onOpenLink: () => void,\n    |}\n  | {|\n      displayRemoveButton: true,\n      onRemove: () => void,\n    |}\n  | {|\n      displayAddIcon: true,\n    |}\n  | {|\n      displaySearchIcon: true,\n    |}\n  | {||};\n\n// We support a subset of the props supported by Material-UI v0.x ListItem\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype ListItemProps = {|\n  onClick?: () => void | Promise<void>,\n  onDoubleClick?: (event: DoubleClickMouseEvent) => void,\n  primaryText: ?React.Node,\n  secondaryText?: React.Node,\n  disableAutoTranslate?: boolean,\n  selected?: boolean,\n  autoGenerateNestedIndicator?: boolean, // TODO: Rename?\n  renderNestedItems?: () => Array<React$Element<any> | null>,\n  open?: boolean,\n  initiallyOpen?: boolean,\n  disabled?: boolean,\n  rightIconColor?: string,\n  nestedListStyle?: {|\n    padding: 0,\n  |},\n\n  style?: {|\n    color?: string,\n    backgroundColor?: string,\n    borderBottom?: string,\n    opacity?: number,\n  |},\n\n  leftIcon?: React.Node,\n  ...ListItemRightButtonProps,\n\n  secondaryTextLines?: 1 | 2,\n\n  id?: ?string,\n|};\n\nexport type ListItemRefType = any; // Should be a material-ui ListIten\n\n/**\n * A ListItem to be used in a List.\n *\n * Also used outside of a List by virtualized lists.\n */\nexport const ListItem = React.forwardRef<ListItemProps, ListItemRefType>(\n  (props: ListItemProps, ref) => {\n    const [isOpen, setIsOpen] = React.useState(!!props.initiallyOpen);\n    const elementWithMenu = React.useRef<?ElementWithMenu>(null);\n\n    const openContextMenu = React.useCallback(\n      () => {\n        if (elementWithMenu.current) {\n          elementWithMenu.current.open();\n        }\n      },\n      [elementWithMenu]\n    );\n    const longTouchForContextMenuProps = useLongTouch(openContextMenu);\n\n    const renderListItemSecondaryAction = () => {\n      if (props.displayReloadButton) {\n        return (\n          <MUIListItemSecondaryAction>\n            <Tooltip title={props.reloadButtonTooltip}>\n              <IconButton\n                size=\"small\"\n                edge=\"end\"\n                aria-label=\"reload\"\n                onClick={props.onReload}\n              >\n                <Refresh />\n              </IconButton>\n            </Tooltip>\n          </MUIListItemSecondaryAction>\n        );\n      }\n      if (props.buildMenuTemplate) {\n        return props.displayMenuButton ? (\n          <MUIListItemSecondaryAction>\n            <ElementWithMenu\n              ref={elementWithMenu}\n              element={\n                <IconButton size=\"small\" edge=\"end\" aria-label=\"menu\">\n                  <MoreVert style={{ color: props.rightIconColor }} />\n                </IconButton>\n              }\n              buildMenuTemplate={props.buildMenuTemplate}\n            />\n          </MUIListItemSecondaryAction>\n        ) : (\n          <ElementWithMenu\n            ref={elementWithMenu}\n            element={\n              <div /> /* We still need a dummy div for context menu placement */\n            }\n            buildMenuTemplate={props.buildMenuTemplate}\n          />\n        );\n      }\n      if (props.displayLinkButton) {\n        return (\n          <MUIListItemSecondaryAction>\n            <IconButton\n              size=\"small\"\n              edge=\"end\"\n              aria-label=\"open link\"\n              onClick={props.onOpenLink}\n            >\n              <OpenInNew style={{ color: props.rightIconColor }} />\n            </IconButton>\n          </MUIListItemSecondaryAction>\n        );\n      }\n      if (props.displayRemoveButton) {\n        return (\n          <MUIListItemSecondaryAction>\n            <IconButton\n              size=\"small\"\n              edge=\"end\"\n              aria-label=\"remove\"\n              onClick={props.onRemove}\n            >\n              <Remove style={{ color: props.rightIconColor }} />\n            </IconButton>\n          </MUIListItemSecondaryAction>\n        );\n      }\n\n      return null;\n    };\n\n    const { renderNestedItems } = props;\n\n    if (!renderNestedItems) {\n      return (\n        <MUIListItem\n          button\n          dense={useDenseLists}\n          disableRipple\n          ContainerComponent={\n            'div' /* Otherwise, when ListItemSecondaryAction is defined, we would get a li, that is not playing well in virtualized list, that are using ListItem without List */\n          }\n          onClick={props.onClick}\n          onDoubleClick={props.onDoubleClick}\n          disabled={props.disabled}\n          selected={props.selected}\n          style={props.style}\n          onContextMenu={props.buildMenuTemplate ? openContextMenu : undefined}\n          {...longTouchForContextMenuProps}\n          alignItems={props.secondaryTextLines === 2 ? 'flex-start' : undefined}\n          ref={ref}\n          id={props.id}\n        >\n          {props.leftIcon && (\n            <MUIListItemIcon>{props.leftIcon}</MUIListItemIcon>\n          )}\n          <MUIListItemText\n            style={styles.listItemText}\n            primary={props.primaryText}\n            secondary={props.secondaryText}\n            className={props.disableAutoTranslate ? 'notranslate' : ''}\n          />\n          {renderListItemSecondaryAction()}\n          {props.displayAddIcon && (\n            <Add style={{ color: props.rightIconColor }} />\n          )}\n          {props.displaySearchIcon && (\n            <Search style={{ color: props.rightIconColor }} />\n          )}\n        </MUIListItem>\n      );\n    } else {\n      const isItemOpen = props.open === undefined ? isOpen : props.open;\n      return (\n        <React.Fragment>\n          <MUIListItem\n            button\n            dense={useDenseLists}\n            disableRipple\n            onClick={() => {\n              setIsOpen(!isItemOpen);\n              if (props.onClick) {\n                props.onClick();\n              }\n            }}\n            disabled={props.disabled}\n            style={props.style}\n            ref={ref}\n            id={props.id}\n          >\n            {props.leftIcon && (\n              <MUIListItemIcon>{props.leftIcon}</MUIListItemIcon>\n            )}\n            <MUIListItemText\n              style={styles.listItemText}\n              primary={props.primaryText}\n              secondary={props.secondaryText}\n              className={props.disableAutoTranslate ? 'notranslate' : ''}\n            />\n            {props.autoGenerateNestedIndicator ? (\n              isItemOpen ? (\n                <ExpandLess />\n              ) : (\n                <ExpandMore />\n              )\n            ) : null}\n            {renderListItemSecondaryAction()}\n          </MUIListItem>\n          <Collapse in={isItemOpen} timeout=\"auto\" unmountOnExit>\n            <MUIList\n              component=\"div\"\n              disablePadding\n              style={{\n                paddingLeft: 16,\n                ...props.nestedListStyle,\n              }}\n              dense={useDenseLists}\n            >\n              {renderNestedItems()}\n            </MUIList>\n          </Collapse>\n        </React.Fragment>\n      );\n    }\n  }\n);\n\n// We support a subset of the props supported by Material-UI v0.x List\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype ListProps = {|\n  children: React.Node,\n  style?: {|\n    overflowY?: 'scroll',\n    flex?: 1,\n    padding?: number,\n  |},\n|};\n\n/**\n * List based on Material-UI List.\n */\nexport class List extends React.Component<ListProps, {||}> {\n  render() {\n    return (\n      <MUIList style={this.props.style} dense={useDenseLists}>\n        {this.props.children}\n      </MUIList>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  maxWidth: {\n    maxWidth: '100%',\n  },\n};\n\ntype Props = {|\n  children: ?React.Node,\n  maxWidth?: boolean,\n  width?: number | string,\n  /** Sometimes required on Safari */\n  noFullHeight?: boolean,\n  noExpand?: boolean,\n|};\n\n/**\n * This is the component to be used to display the standard\n * background of editor/windows/dialogs.\n */\nconst Background = (props: Props) => (\n  <Paper\n    square\n    style={{\n      ...styles.container,\n      height: props.noFullHeight ? undefined : '100%',\n      width: props.width ? props.width : undefined,\n      flex: props.noExpand ? undefined : 1,\n      ...(props.maxWidth ? styles.maxWidth : undefined),\n    }}\n  >\n    {props.children}\n  </Paper>\n);\n\nexport default Background;\n","// @flow\nimport * as React from 'react';\nimport { type GDevelopTheme } from '.';\nimport GDevelopThemeContext from './ThemeContext';\n\ntype Props = {|\n  children: (gdevelopTheme: GDevelopTheme) => React.Node,\n|};\n\n/**\n * Expose the Material UI theme.\n */\nconst ThemeConsumer = (props: Props) => (\n  <GDevelopThemeContext.Consumer>\n    {gdevelopTheme => props.children(gdevelopTheme)}\n  </GDevelopThemeContext.Consumer>\n);\n\nexport default ThemeConsumer;\n","// @flow\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst styles = {\n  container: {\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  children: React.Node,\n  /**\n   * If true, scrollbar won't be shown if the content is not clipped.\n   */\n  autoHideScrollbar?: ?boolean,\n  style?: ?Object,\n|};\n\nexport type ScrollViewInterface = {|\n  scrollTo: (target: ?React$Component<any, any>) => void,\n  scrollToBottom: () => void,\n|};\n\nexport default React.forwardRef<Props, ScrollViewInterface>(\n  ({ children, autoHideScrollbar, style }: Props, ref) => {\n    const scrollView = React.useRef((null: ?HTMLDivElement));\n    React.useImperativeHandle(ref, () => ({\n      /**\n       * Scroll the view to the target component.\n       */\n      scrollTo: (target: ?React$Component<any, any>) => {\n        const scrollViewElement = scrollView.current;\n        if (!scrollViewElement) return;\n\n        const targetElement = ReactDOM.findDOMNode(target);\n        if (targetElement instanceof HTMLElement) {\n          const yPosition = targetElement.getBoundingClientRect().top;\n\n          const scrollViewYPosition = scrollViewElement.getBoundingClientRect()\n            .top;\n          scrollViewElement.scrollTop += yPosition - scrollViewYPosition;\n        } else {\n          console.error(\n            'Tried to scroll to something that is not a HTMLElement'\n          );\n        }\n      },\n      /**\n       * Scroll the view to the bottom.\n       */\n      scrollToBottom: () => {\n        const scrollViewElement = scrollView.current;\n        if (!scrollViewElement) return;\n\n        scrollViewElement.scrollTop = scrollViewElement.scrollHeight;\n      },\n    }));\n\n    return (\n      <div\n        style={{\n          ...styles.container,\n          overflowY: autoHideScrollbar ? 'auto' : 'scroll',\n          ...style,\n        }}\n        ref={scrollView}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n","// @flow\nimport * as React from 'react';\nimport { type Profile } from '../Utils/GDevelopServices/Authentication';\nimport { User as FirebaseUser } from 'firebase/auth';\nimport { type Badge } from '../Utils/GDevelopServices/Badge';\nimport {\n  type Limits,\n  type Usages,\n  type Subscription,\n} from '../Utils/GDevelopServices/Usage';\n\nexport type AuthenticatedUser = {|\n  authenticated: boolean,\n  firebaseUser: ?FirebaseUser,\n  profile: ?Profile,\n  badges: ?Array<Badge>,\n  limits: ?Limits,\n  usages: ?Usages,\n  subscription: ?Subscription,\n  onLogout: () => void,\n  onLogin: () => void,\n  onEdit: () => void,\n  onChangeEmail: () => void,\n  onCreateAccount: () => void,\n  onBadgesChanged: () => Promise<void>,\n  onRefreshUserProfile: () => Promise<void>,\n  onRefreshFirebaseProfile: () => Promise<void>,\n  onSendEmailVerification: () => Promise<void>,\n  onAcceptGameStatsEmail: () => Promise<void>,\n  getAuthorizationHeader: () => Promise<string>,\n|};\n\nexport const initialAuthenticatedUser = {\n  authenticated: false,\n  firebaseUser: null,\n  profile: null,\n  badges: null,\n  subscription: null,\n  usages: null,\n  limits: null,\n  onLogout: () => {},\n  onLogin: () => {},\n  onEdit: () => {},\n  onChangeEmail: () => {},\n  onCreateAccount: () => {},\n  onBadgesChanged: async () => {},\n  onRefreshUserProfile: async () => {},\n  onRefreshFirebaseProfile: async () => {},\n  onSendEmailVerification: async () => {},\n  onAcceptGameStatsEmail: async () => {},\n  getAuthorizationHeader: () => Promise.reject(new Error('Unimplemented')),\n};\n\nconst AuthenticatedUserContext = React.createContext<AuthenticatedUser>(\n  initialAuthenticatedUser\n);\n\nexport default AuthenticatedUserContext;\n","// @flow\n\nexport default (\n  name /*:string */,\n  exists /*:(string) => boolean */,\n  prefix /*: string */ = ''\n) => {\n  if (!exists(name)) return name;\n\n  let potentialName = prefix + name;\n  for (let i = 2; exists(potentialName); ++i) {\n    potentialName = prefix + name + i;\n  }\n\n  return potentialName;\n};\n","// @flow\nimport * as React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Reduce checkbox size to avoid overlapping with other checkboxes.\nconst useStyles = makeStyles({\n  root: {\n    marginLeft: 9,\n    marginRight: 9,\n    padding: 0,\n  },\n});\n\n// We support a subset of the props supported by Material-UI v0.x Checkbox\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  label?: ?React.Node,\n  checked: boolean,\n  onCheck?: (e: {||}, checked: boolean) => void,\n  checkedIcon?: React.Node,\n  uncheckedIcon?: React.Node,\n  disabled?: boolean,\n\n  style?: {|\n    display?: 'inline-block',\n    marginRight?: number,\n    margin?: number,\n  |},\n|};\n\n/**\n * A text field based on Material-UI text field.\n */\nexport default (props: Props) => {\n  const { onCheck } = props;\n  const classes = useStyles();\n  const checkbox = (\n    <Checkbox\n      className={classes.root}\n      disabled={props.disabled}\n      checked={props.checked}\n      onChange={\n        onCheck ? event => onCheck(event, event.target.checked) : undefined\n      }\n      icon={props.uncheckedIcon}\n      checkedIcon={props.checkedIcon}\n      color=\"primary\"\n      style={props.label ? undefined : props.style}\n    />\n  );\n  return props.label ? (\n    <FormControlLabel\n      control={checkbox}\n      label={props.label}\n      style={props.style}\n    />\n  ) : (\n    checkbox\n  );\n};\n","// @flow\n\nconst gd: libGDevelop = global.gd;\n\n/**\n * Tool function to save a serializable object to a JS object.\n * Most gd.* objects are \"serializable\", meaning they have a serializeTo\n * and unserializeFrom method.\n *\n * @param {*} serializable\n * @param {*} methodName The name of the serialization method. \"unserializeFrom\" by default\n */\nexport function serializeToJSObject(\n  serializable: gdSerializable,\n  methodName: string = 'serializeTo'\n) {\n  const serializedElement = new gd.SerializerElement();\n  serializable[methodName](serializedElement);\n\n  // JSON.parse + toJSON is 30% faster than gd.Serializer.toJSObject.\n  const object = JSON.parse(gd.Serializer.toJSON(serializedElement));\n  serializedElement.delete();\n\n  return object;\n}\n\n/**\n * Tool function to save a serializable object to a JSON.\n * Most gd.* objects are \"serializable\", meaning they have a serializeTo\n * and unserializeFrom method.\n *\n * @param {*} serializable\n * @param {*} methodName The name of the serialization method. \"unserializeFrom\" by default\n */\nexport function serializeToJSON(\n  serializable: gdSerializable,\n  methodName: string = 'serializeTo'\n): string {\n  const serializedElement = new gd.SerializerElement();\n  serializable[methodName](serializedElement);\n\n  // toJSON is 20% faster than gd.Serializer.toJSObject + JSON.stringify.\n  const json = gd.Serializer.toJSON(serializedElement);\n  serializedElement.delete();\n\n  return json;\n}\n\n/**\n * Tool function to restore a serializable object from a JS object.\n * Most gd.* objects are \"serializable\", meaning they have a serializeTo\n * and unserializeFrom method.\n * @param {*} serializable A gd.* object to restore\n * @param {*} object The JS object to be used to restore the serializable.\n * @param {*} methodName The name of the unserialization method. \"unserializeFrom\" by default\n * @param {*} optionalProject The project to pass as argument for unserialization\n */\nexport function unserializeFromJSObject(\n  serializable: gdSerializable,\n  object: Object,\n  methodName: string = 'unserializeFrom',\n  optionalProject: ?gdProject = undefined\n) {\n  const serializedElement = gd.Serializer.fromJSObject(object);\n  if (!optionalProject) {\n    serializable[methodName](serializedElement);\n  } else {\n    // It's not uncommon for unserializeFrom methods of gd.* classes\n    // to require the project to be passed as first argument.\n    serializable[methodName](optionalProject, serializedElement);\n  }\n  serializedElement.delete();\n}\n","// @flow\nexport const selectableArea = 'selectable';\nexport const selectedArea = 'selected';\nexport const icon = 'icon';\n\nexport const largeSelectableArea = 'large-selectable';\nexport const largeSelectedArea = 'large-selected';\n\nexport const executableEventContainer = 'executable-event-container';\nexport const actionsContainer = 'actions-container';\nexport const conditionsContainer = 'conditions-container';\nexport const subInstructionsContainer = 'sub-instructions-container';\nexport const smallWidthContainer = 'small-width-container';\nexport const instructionParameter = 'instruction-parameter';\nexport const instructionInvalidParameter = 'instruction-invalid-parameter';\nexport const instructionMissingParameter = 'instruction-missing-parameter';\nexport const instructionWarningParameter = 'instruction-warning-parameter';\nexport const disabledText = 'disabled-text';\n\nexport const background = 'background';\n\nexport const eventsTree = 'events-tree';\nexport const eventsTreeWithSearchResults = 'with-search-results';\n\nexport const dropIndicator = 'drop-indicator';\nexport const cantDropIndicator = 'cant-drop-indicator';\n\nexport const linkContainer = 'link-container';\n\nexport const nameAndIconContainer = 'name-and-icon-container';\n","// @flow\nimport * as React from 'react';\nimport MUITabs from '@material-ui/core/Tabs';\nimport MUITab from '@material-ui/core/Tab';\n\n// We support a subset of the props supported by Material-UI v0.x Tabs\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype TabsProps<TabName> = {|\n  value?: TabName,\n  onChange: TabName => void,\n  children: React.Node, // Should be Tab\n|};\n\n/**\n * Tabs based on Material-UI Tabs.\n */\nexport class Tabs<TabName> extends React.Component<TabsProps<TabName>, {||}> {\n  render() {\n    return (\n      <MUITabs\n        variant=\"fullWidth\"\n        textColor=\"primary\"\n        value={this.props.value}\n        onChange={(e, newValue) => this.props.onChange(newValue)}\n      >\n        {this.props.children}\n      </MUITabs>\n    );\n  }\n}\n\n// We support a subset of the props supported by Material-UI v0.x Tabs\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype TabProps = {|\n  label: React.Node,\n  value: string,\n  tabIndex?: string,\n  disabled?: boolean,\n  id?: ?string,\n|};\n\n/**\n * A Tab based on Material-UI Tab.\n */\nexport class Tab extends React.Component<TabProps, {||}> {\n  render() {\n    return <MUITab {...this.props} />;\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport Popper from '@material-ui/core/Popper';\nimport muiZIndex from '@material-ui/core/styles/zIndex';\nimport Functions from '@material-ui/icons/Functions';\nimport RaisedButton from '../../../UI/RaisedButton';\nimport SemiControlledTextField from '../../../UI/SemiControlledTextField';\nimport { mapVector } from '../../../Utils/MapFor';\nimport ExpressionSelector from '../../InstructionEditor/InstructionOrExpressionSelector/ExpressionSelector';\nimport ExpressionParametersEditorDialog, {\n  type ParameterValues,\n} from './ExpressionParametersEditorDialog';\nimport { hasNonCodeOnlyParameters } from './ExpressionParametersEditor';\nimport { formatExpressionCall } from './FormatExpressionCall';\nimport { type EnumeratedExpressionMetadata } from '../../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\nimport { type ParameterFieldProps } from '../ParameterFieldCommons';\nimport BackgroundHighlighting, {\n  type Highlight,\n} from './BackgroundHighlighting';\nimport debounce from 'lodash/debounce';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Paper from '@material-ui/core/Paper';\nimport { TextFieldWithButtonLayout } from '../../../UI/Layout';\nimport {\n  type ExpressionAutocompletion,\n  insertAutocompletionInExpression,\n  getAutocompletionsFromDescriptions,\n} from '../../../ExpressionAutocompletion';\nimport {\n  type AutocompletionsState,\n  getAutocompletionsInitialState,\n  setNewAutocompletions,\n  handleAutocompletionsKeyDown,\n  getVisibleAutocompletions,\n  getRemainingCount,\n} from './ExpressionAutocompletionsHandler';\nimport ExpressionAutocompletionsDisplayer from './ExpressionAutocompletionsDisplayer';\nimport { ResponsiveWindowMeasurer } from '../../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport {\n  shouldCloseOrCancel,\n  shouldSubmit,\n} from '../../../UI/KeyboardShortcuts/InteractionKeys';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'flex-start',\n  },\n  textFieldContainer: {\n    flex: 1,\n    minWidth: 200,\n  },\n  textFieldAndHightlightContainer: {\n    position: 'relative',\n  },\n  expressionSelectorPopoverContentSmall: {\n    display: 'flex',\n    maxHeight: 250,\n  },\n  expressionSelectorPopoverContent: {\n    display: 'flex',\n    maxHeight: 350,\n  },\n  input: {\n    fontFamily: '\"Lucida Console\", Monaco, monospace',\n    lineHeight: 1.4,\n  },\n  backgroundHighlightingWithFloatingLabel: {\n    marginTop: 22, //Properly align with the text field\n    paddingLeft: 12,\n    paddingRight: 12,\n    boxSizing: 'border-box',\n  },\n  backgroundHighlightingInline: {\n    marginTop: 0, //Properly align with the text field\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  backgroundHighlightingInlineWithFloatingLabel: {\n    marginTop: 22, //Properly align with the text field\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n};\n\ntype State = {|\n  popoverOpen: boolean,\n  parametersDialogOpen: boolean,\n  selectedExpressionInfo: ?EnumeratedExpressionMetadata,\n  validatedValue: string,\n  errorText: ?string,\n  errorHighlights: Array<Highlight>,\n  autocompletions: AutocompletionsState,\n|};\n\ntype Props = {|\n  expressionType: 'number' | 'string',\n  /** An optional callback that can be used to provide additional autocompletions. */\n  onGetAdditionalAutocompletions?: (\n    currentExpression: string\n  ) => Array<ExpressionAutocompletion>,\n  /** An optional callback that can be used to show a custom error message. */\n  onExtractAdditionalErrors?: (\n    currentExpression: string,\n    currentExpressionNode: gdExpressionNode\n  ) => ?string,\n  renderExtraButton?: ({|\n    style: Object,\n  |}) => React.Node,\n  ...ParameterFieldProps,\n|};\n\nconst MAX_ERRORS_COUNT = 10;\n\nconst extractErrors = (\n  expressionNode: gdExpressionNode\n): {|\n  errorText: ?string,\n  errorHighlights: Array<Highlight>,\n|} => {\n  const expressionValidator = new gd.ExpressionValidator();\n  expressionNode.visit(expressionValidator);\n  const errors = expressionValidator.getErrors();\n\n  const errorHighlights: Array<Highlight> = mapVector(errors, error => ({\n    begin: error.getStartPosition(),\n    end: error.getEndPosition() + 1,\n    message: error.getMessage(),\n    type: 'error',\n  }));\n  const otherErrorsCount = Math.max(\n    0,\n    errorHighlights.length - MAX_ERRORS_COUNT\n  );\n  const hasMultipleErrors = errorHighlights.length > 1;\n\n  const filteredErrorHighlights =\n    otherErrorsCount > 0\n      ? errorHighlights.slice(0, MAX_ERRORS_COUNT)\n      : errorHighlights;\n\n  const errorText = filteredErrorHighlights\n    .map(\n      (highlight, i) =>\n        (hasMultipleErrors ? `[${i + 1}] ` : '') + highlight.message\n    )\n    .join(' ');\n\n  expressionValidator.delete();\n\n  return { errorText, errorHighlights };\n};\n\nexport default class ExpressionField extends React.Component<Props, State> {\n  _field: ?SemiControlledTextField = null;\n  _fieldElement: ?Element = null;\n  _inputElement: ?HTMLInputElement = null;\n\n  state = {\n    popoverOpen: false,\n    parametersDialogOpen: false,\n    selectedExpressionInfo: null,\n\n    validatedValue: this.props.value,\n    errorText: null,\n    errorHighlights: [],\n    autocompletions: getAutocompletionsInitialState(),\n  };\n\n  componentDidMount() {\n    if (this._field) {\n      const node = ReactDOM.findDOMNode(this._field);\n      if (node instanceof Element) {\n        this._fieldElement = node;\n      }\n      this._inputElement = this._field ? this._field.getInputNode() : null;\n    }\n  }\n\n  focus = (selectAll: boolean = false) => {\n    if (this._field) {\n      this._field.focus();\n      if (selectAll) {\n        if (this._inputElement) {\n          this._inputElement.setSelectionRange(\n            0,\n            this.props.value.toString().length\n          );\n        }\n      }\n      this._enqueueValidation();\n    }\n  };\n\n  _openExpressionPopover = () => {\n    this.setState({\n      popoverOpen: true,\n    });\n  };\n\n  _handleFocus = (event: { preventDefault: () => void }) => {\n    // This prevents ghost click.\n    event.preventDefault();\n  };\n\n  _handleRequestClose = () => {\n    this.setState({\n      popoverOpen: false,\n    });\n  };\n\n  _handleChange = (value: string) => {\n    this.setState(\n      {\n        validatedValue: value,\n      },\n      () => this._enqueueValidation()\n    );\n  };\n\n  _handleBlur = (event: { currentTarget: { value: string } }) => {\n    const value = event.currentTarget.value;\n    if (this.props.onChange) this.props.onChange(value);\n    this.setState({ validatedValue: value }, () => {\n      this._enqueueValidation.cancel();\n      this._doValidation();\n      this.setState({\n        autocompletions: getAutocompletionsInitialState(),\n      });\n    });\n  };\n\n  _shouldOpenParametersDialog = (\n    expressionInfo: EnumeratedExpressionMetadata\n  ): boolean => {\n    // If there is no parameter to fill for the selected expression, no need to open the dialog.\n    return hasNonCodeOnlyParameters(expressionInfo.metadata);\n  };\n\n  _handleExpressionChosen = (expressionInfo: EnumeratedExpressionMetadata) => {\n    let newState = { popoverOpen: false };\n    if (this._shouldOpenParametersDialog(expressionInfo)) {\n      newState = {\n        ...newState,\n        parametersDialogOpen: true,\n        selectedExpressionInfo: expressionInfo,\n      };\n    } else {\n      this.insertExpression(expressionInfo, []);\n    }\n    this.setState(newState);\n  };\n\n  insertExpression = (\n    expressionInfo: EnumeratedExpressionMetadata,\n    parameterValues: ParameterValues\n  ) => {\n    if (!this._inputElement) return;\n    const cursorPosition = this._inputElement.selectionStart;\n\n    const functionCall = formatExpressionCall(expressionInfo, parameterValues);\n\n    // Generate the expression with the function call\n    const { value } = this.props;\n    const newValue =\n      value.substr(0, cursorPosition) +\n      functionCall +\n      value.substr(cursorPosition);\n\n    // Apply changes\n    if (this.props.onChange) this.props.onChange(newValue);\n    this.setState(\n      {\n        validatedValue: newValue,\n      },\n      () => this._enqueueValidation()\n    );\n\n    // Focus again and select what was just added.\n    setTimeout(() => {\n      if (this._field) this._field.focus();\n\n      setTimeout(() => {\n        if (this._inputElement) {\n          this._inputElement.setSelectionRange(\n            cursorPosition,\n            cursorPosition + functionCall.length\n          );\n        }\n      }, 5);\n    }, 5);\n  };\n\n  _insertAutocompletion = (\n    expressionAutocompletion: ExpressionAutocompletion\n  ) => {\n    // If the completion is exact, it's not a completion but just\n    // shown for informing the user.\n    if (expressionAutocompletion.isExact) return;\n\n    const caretLocation = this._inputElement\n      ? this._inputElement.selectionStart\n      : 0;\n    const expression = this.state.validatedValue;\n\n    const {\n      expression: newExpression,\n      caretLocation: newCaretLocation,\n    } = insertAutocompletionInExpression(\n      { expression, caretLocation },\n      {\n        completion: expressionAutocompletion.completion,\n        replacementStartPosition:\n          expressionAutocompletion.replacementStartPosition,\n        replacementEndPosition: expressionAutocompletion.replacementEndPosition,\n        addParenthesis: expressionAutocompletion.addParenthesis,\n        addDot: expressionAutocompletion.addDot,\n        addParameterSeparator: expressionAutocompletion.addParameterSeparator,\n        addNamespaceSeparator: expressionAutocompletion.addNamespaceSeparator,\n        hasVisibleParameters: expressionAutocompletion.hasVisibleParameters,\n      }\n    );\n\n    if (this._field) {\n      this._field.forceSetValue(newExpression);\n    }\n    if (this.props.onChange) this.props.onChange(newExpression);\n    this.setState(\n      {\n        validatedValue: newExpression,\n      },\n      () => {\n        this._enqueueValidation();\n        if (this._field) {\n          this._field.forceSetSelection(newCaretLocation, newCaretLocation);\n        }\n      }\n    );\n  };\n\n  _enqueueValidation = debounce(() => {\n    this._doValidation();\n  }, 250);\n\n  _doValidation = () => {\n    const {\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      expressionType,\n      scope,\n      onGetAdditionalAutocompletions,\n      onExtractAdditionalErrors,\n    } = this.props;\n    if (!project) return null;\n\n    const expression = this.state.validatedValue;\n\n    // Parsing can be time consuming (~1ms for simple expression,\n    // a few milliseconds for complex ones).\n\n    const parser = new gd.ExpressionParser2(\n      gd.JsPlatform.get(),\n      globalObjectsContainer,\n      objectsContainer\n    );\n\n    const expressionNode = parser\n      .parseExpression(expressionType, expression)\n      .get();\n\n    const { errorText, errorHighlights } = extractErrors(expressionNode);\n    const extraErrorText = onExtractAdditionalErrors\n      ? onExtractAdditionalErrors(expression, expressionNode)\n      : null;\n    const formattedErrorText = [extraErrorText, errorText]\n      .filter(Boolean)\n      .join(' - ');\n\n    // If the expression ends with a space, the user must be navigating or switching to another text\n    // so let's not return any autocompletions.\n    if (\n      expression.length > 0 &&\n      expression.charAt(expression.length - 1) === ' '\n    ) {\n      this.setState(state => ({\n        errorText: formattedErrorText,\n        errorHighlights,\n        autocompletions: getAutocompletionsInitialState(),\n      }));\n      return;\n    }\n\n    const cursorPosition = this._inputElement\n      ? this._inputElement.selectionStart\n      : 0;\n    const completionDescriptions = gd.ExpressionCompletionFinder.getCompletionDescriptionsFor(\n      expressionNode,\n      cursorPosition - 1\n    );\n    const newAutocompletions = getAutocompletionsFromDescriptions(\n      {\n        gd,\n        project,\n        globalObjectsContainer,\n        objectsContainer,\n        scope,\n      },\n      completionDescriptions\n    );\n    const allNewAutocompletions = onGetAdditionalAutocompletions\n      ? onGetAdditionalAutocompletions(expression).concat(newAutocompletions)\n      : newAutocompletions;\n\n    parser.delete();\n\n    this.setState(state => ({\n      errorText: formattedErrorText,\n      errorHighlights,\n      autocompletions: setNewAutocompletions(\n        state.autocompletions,\n        allNewAutocompletions\n      ),\n    }));\n  };\n\n  render() {\n    const {\n      value,\n      expressionType,\n      parameterMetadata,\n      project,\n      scope,\n      globalObjectsContainer,\n      objectsContainer,\n      parameterRenderingService,\n    } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : this.props.isInline\n      ? undefined\n      : '-'; // We're using multiline TextField, which does not support having no label.\n    const longDescription = parameterMetadata\n      ? parameterMetadata.getLongDescription()\n      : undefined;\n\n    const popoverStyle = {\n      width: this._fieldElement ? this._fieldElement.clientWidth : 'auto',\n      marginLeft: -5, // Remove the offset that the Popper has for some reason with disablePortal={true}\n      // Ensure the popper is above everything (modal, dialog, snackbar, tooltips, etc).\n      // There will be only one ExpressionSelector opened at a time, so it's fair to put the\n      // highest z index. If this is breaking, check the z-index of material-ui.\n      zIndex: muiZIndex.tooltip + 100,\n    };\n\n    const backgroundHighlightingStyle = this.props.isInline\n      ? // An inline GenericExpressionField is shown with a TextField\n        // with variant \"standard\", and no margins. The label is shown\n        // only if provided (description), so we need to adapt the margins\n        // of the background\n        description\n        ? styles.backgroundHighlightingInlineWithFloatingLabel\n        : styles.backgroundHighlightingInline\n      : // A non-inline GenericExpressionField is shown with a TextField\n        // with variant \"filled\". As we're using a *multiline* field, it\n        // always put space for the label, even if not provided.\n        styles.backgroundHighlightingWithFloatingLabel;\n\n    return (\n      <React.Fragment>\n        <TextFieldWithButtonLayout\n          margin={this.props.isInline ? 'none' : 'dense'}\n          renderTextField={() => (\n            <div style={styles.textFieldContainer}>\n              <div style={styles.textFieldAndHightlightContainer}>\n                <BackgroundHighlighting\n                  value={this.state.validatedValue}\n                  style={{ ...styles.input, ...backgroundHighlightingStyle }}\n                  highlights={this.state.errorHighlights}\n                />\n                <SemiControlledTextField\n                  margin={this.props.isInline ? 'none' : 'dense'}\n                  value={value}\n                  floatingLabelText={description}\n                  helperMarkdownText={longDescription}\n                  hintText={expressionType === 'string' ? '\"\"' : undefined}\n                  inputStyle={styles.input}\n                  onChange={this._handleChange}\n                  onBlur={this._handleBlur}\n                  ref={field => (this._field = field)}\n                  onFocus={this._handleFocus}\n                  errorText={this.state.errorText}\n                  onClick={() => this._enqueueValidation()}\n                  onKeyDown={event => {\n                    const autocompletions = handleAutocompletionsKeyDown(\n                      this.state.autocompletions,\n                      {\n                        event,\n                        onUpdateAutocompletions: this._enqueueValidation,\n                        onInsertAutocompletion: this._insertAutocompletion,\n                      }\n                    );\n                    this.setState({ autocompletions });\n\n                    // If the user pressed the key to close (or to submit),\n                    // there is a chance that this will trigger the closing\n                    // of the dialog/popover containing the expression field.\n                    // Apply the changes now as otherwise the onBlur handler\n                    // has a risk not to be called (as the component will be\n                    // unmounted).\n                    if (shouldCloseOrCancel(event) || shouldSubmit(event)) {\n                      const value = event.currentTarget.value;\n                      if (this.props.onChange) this.props.onChange(value);\n                    }\n                  }}\n                  multiline\n                  fullWidth\n                />\n              </div>\n              {this._inputElement && this.state.popoverOpen && (\n                <ClickAwayListener onClickAway={this._handleRequestClose}>\n                  <Popper\n                    style={popoverStyle}\n                    open={this.state.popoverOpen}\n                    anchorEl={this._inputElement}\n                    placement=\"bottom\"\n                    disablePortal={\n                      true /* Can't use portals as this would put the Popper outside of the Modal, which is keeping the focus in the modal (so the search bar and keyboard browsing won't not work) */\n                    }\n                  >\n                    <ResponsiveWindowMeasurer>\n                      {screenSize => (\n                        <Paper\n                          style={\n                            screenSize === 'small'\n                              ? styles.expressionSelectorPopoverContentSmall\n                              : styles.expressionSelectorPopoverContent\n                          }\n                        >\n                          <ExpressionSelector\n                            selectedType=\"\"\n                            onChoose={(type, expression) => {\n                              this._handleExpressionChosen(expression);\n                            }}\n                            expressionType={expressionType}\n                            focusOnMount\n                            scope={scope}\n                          />\n                        </Paper>\n                      )}\n                    </ResponsiveWindowMeasurer>\n                  </Popper>\n                </ClickAwayListener>\n              )}\n              {this._inputElement &&\n                !this.state.popoverOpen &&\n                parameterRenderingService && (\n                  <ExpressionAutocompletionsDisplayer\n                    project={project}\n                    anchorEl={this._inputElement}\n                    expressionAutocompletions={getVisibleAutocompletions(\n                      this.state.autocompletions\n                    )}\n                    remainingCount={getRemainingCount(\n                      this.state.autocompletions\n                    )}\n                    selectedCompletionIndex={\n                      this.state.autocompletions.selectedCompletionIndex\n                    }\n                    onChoose={expressionAutocompletion => {\n                      this._insertAutocompletion(expressionAutocompletion);\n\n                      setTimeout(\n                        this.focus,\n                        50 /* Give back the focus to the field after a completion is inserted */\n                      );\n                    }}\n                    parameterRenderingService={parameterRenderingService}\n                  />\n                )}\n            </div>\n          )}\n          renderButton={style => (\n            <React.Fragment>\n              {!this.props.isInline &&\n                this.props.renderExtraButton &&\n                this.props.renderExtraButton({\n                  style,\n                })}\n              {!this.props.isInline && (\n                <RaisedButton\n                  icon={<Functions />}\n                  label={\n                    expressionType === 'string'\n                      ? '\"ABC\"'\n                      : expressionType === 'number'\n                      ? '123'\n                      : ''\n                  }\n                  primary\n                  style={style}\n                  onClick={this._openExpressionPopover}\n                />\n              )}\n            </React.Fragment>\n          )}\n        />\n\n        {this.state.parametersDialogOpen && this.state.selectedExpressionInfo && (\n          <ExpressionParametersEditorDialog\n            project={project}\n            scope={scope}\n            globalObjectsContainer={globalObjectsContainer}\n            objectsContainer={objectsContainer}\n            expressionMetadata={this.state.selectedExpressionInfo.metadata}\n            onDone={parameterValues => {\n              if (!this.state.selectedExpressionInfo) return;\n\n              this.insertExpression(\n                this.state.selectedExpressionInfo,\n                parameterValues\n              );\n              this.setState({\n                parametersDialogOpen: false,\n                selectedExpressionInfo: null,\n              });\n            }}\n            onRequestClose={() => {\n              this.setState({\n                parametersDialogOpen: false,\n                selectedExpressionInfo: null,\n              });\n            }}\n            parameterRenderingService={parameterRenderingService}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport ReactDOM from 'react-dom';\nimport ContextMenu, { type ContextMenuInterface } from './ContextMenu';\nimport { type MenuItemTemplate } from './Menu.flow';\n\ntype Props = {|\n  element: React$Element<any>,\n  buildMenuTemplate: (i18n: I18nType) => Array<MenuItemTemplate>,\n  openMenuWithSecondaryClick?: boolean,\n  passExtraProps?: boolean,\n|};\n\ntype State = {||};\n\n/**\n * Wrap an element and display a menu when `onClick` prop is called on the element.\n */\n\nexport default class ElementWithMenu extends React.Component<Props, State> {\n  _contextMenu: ?ContextMenuInterface;\n  _wrappedElement: ?any;\n\n  open = () => {\n    const { _contextMenu } = this;\n    if (!_contextMenu) return;\n\n    const node = ReactDOM.findDOMNode(this._wrappedElement);\n    if (node instanceof HTMLElement) {\n      const dimensions = node.getBoundingClientRect();\n\n      _contextMenu.open(\n        Math.round(dimensions.left + dimensions.width / 2),\n        Math.round(dimensions.top + dimensions.height)\n      );\n    }\n  };\n\n  render() {\n    const {\n      element,\n      buildMenuTemplate,\n      openMenuWithSecondaryClick,\n      passExtraProps,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        {React.cloneElement(element, {\n          onContextMenu: this.open,\n          // $FlowFixMe - Flow complaining about using too much spread operators\n          ...(openMenuWithSecondaryClick ? {} : { onClick: this.open }),\n          ref: wrappedElement => (this._wrappedElement = wrappedElement),\n          ...(passExtraProps ? otherProps : {}),\n        })}\n        <ContextMenu\n          ref={contextMenu => (this._contextMenu = contextMenu)}\n          buildMenuTemplate={buildMenuTemplate}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ThemeConsumer from './Theme/ThemeConsumer';\nimport Typography from '@material-ui/core/Typography';\n// No i18n in this file\n\ntype Props = {|\n  tooltipText?: string,\n  style?: Object,\n  children: ?React.Node,\n|};\n\nconst BackgroundText = (props: Props) => (\n  <ThemeConsumer>\n    {muiTheme => (\n      <Typography\n        variant=\"body2\"\n        align=\"center\"\n        style={{\n          opacity: 0.6,\n          textShadow: `1px 1px 0px ${muiTheme.emptyMessage.shadowColor}`,\n          ...props.style,\n        }}\n        title={props.tooltipText}\n      >\n        {props.children}\n      </Typography>\n    )}\n  </ThemeConsumer>\n);\n\nexport default BackgroundText;\n","// @flow\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport IconButton from './IconButton';\nimport TextField from './TextField';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  Collapse,\n  Typography,\n  TextField as MuiTextField,\n} from '@material-ui/core';\nimport Close from '@material-ui/icons/Close';\nimport Search from '@material-ui/icons/Search';\nimport FilterList from '@material-ui/icons/FilterList';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport ElementWithMenu from './Menu/ElementWithMenu';\nimport ThemeConsumer from './Theme/ThemeConsumer';\nimport HelpIcon from './HelpIcon';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport { useScreenType } from './Reponsive/ScreenTypeMeasurer';\nimport { shouldValidate } from './KeyboardShortcuts/InteractionKeys';\nimport { Column, Line } from './Grid';\nimport TagChips from './TagChips';\nimport { I18n } from '@lingui/react';\n\ntype TagsHandler = {|\n  remove: string => void,\n  add: string => void,\n  chosenTags: Set<string>,\n|};\n\ntype Props = {|\n  id?: string,\n  /** Disables text field. */\n  disabled?: boolean,\n  /** Sets placeholder for the embedded text field. */\n  placeholder?: MessageDescriptor,\n  /** Fired when the text value changes. */\n  onChange?: string => void,\n  /** Fired when the search icon is clicked. */\n  onRequestSearch: string => void,\n  /** Override the inline-styles of the root element. */\n  style?: Object,\n  /** The value of the text field. */\n  value: string,\n  /** The functions needed to interact with the list of tags displayed below search bar. */\n  tagsHandler?: TagsHandler,\n  /** Used to display matching tags in dropdown below search bar. */\n  tags?: ?Array<string>,\n  /** The function to generate the optional menu. */\n  buildMenuTemplate?: () => any,\n  /** If defined, a help icon button redirecting to this page will be shown. */\n  helpPagePath?: ?string,\n|};\n\nconst getStyles = (value: ?string, disabled?: boolean) => {\n  const nonEmpty = !!value && value.length > 0;\n\n  return {\n    root: {\n      height: 30,\n      display: 'flex',\n      flex: 1,\n      justifyContent: 'space-between',\n    },\n    iconButtonClose: {\n      style: {\n        opacity: !disabled ? 0.54 : 0.38,\n        transform: nonEmpty ? 'scale(1, 1)' : 'scale(0, 0)',\n        transition: 'transform 200ms cubic-bezier(0.4, 0.0, 0.2, 1)',\n      },\n      iconStyle: {\n        opacity: nonEmpty ? 1 : 0,\n        transition: 'opacity 200ms cubic-bezier(0.4, 0.0, 0.2, 1)',\n      },\n    },\n    iconButtonSearch: {\n      style: {\n        opacity: !disabled ? 0.54 : 0.38,\n        transform: nonEmpty ? 'scale(0, 0)' : 'scale(1, 1)',\n        transition: 'transform 200ms cubic-bezier(0.4, 0.0, 0.2, 1)',\n        marginRight: -30,\n      },\n      iconStyle: {\n        opacity: nonEmpty ? 0 : 1,\n        transition: 'opacity 200ms cubic-bezier(0.4, 0.0, 0.2, 1)',\n      },\n    },\n    iconButtonFilter: {\n      style: {\n        opacity: !disabled ? 0.54 : 0.38,\n      },\n    },\n    iconButtonHelp: {\n      style: {\n        opacity: !disabled ? 0.54 : 0.38,\n      },\n    },\n    input: {\n      width: '100%',\n    },\n    searchContainer: {\n      top: -1,\n      position: 'relative',\n      margin: 'auto 8px',\n      width: '100%',\n    },\n  };\n};\n\nconst useAutocompleteStyles = makeStyles(\n  ({\n    palette: {\n      text: { primary },\n    },\n  }) => ({\n    // We can't change the label opacity directly as it also changes the\n    // opacity of the background. Colors are stored in the themes as hex\n    // (#A3B or #AE345B) so we need to add the alpha channel to control\n    // opacity.\n    groupLabel: { color: `${primary}${primary.length > 4 ? '88' : '8'}` },\n  })\n);\n\nexport type SearchBarInterface = {|\n  focus: () => void,\n  blur: () => void,\n|};\n\n/**\n * Material design search bar,\n * inspired from https://github.com/TeamWertarbyte/material-ui-search-bar\n *\n * Customized to add optional menu button and chips corresponding to tags.\n */\nconst SearchBar = React.forwardRef<Props, SearchBarInterface>(\n  (\n    {\n      id,\n      disabled,\n      placeholder,\n      onChange,\n      onRequestSearch,\n      style,\n      value: parentValue,\n      tagsHandler,\n      tags,\n      buildMenuTemplate,\n      helpPagePath,\n    },\n    ref\n  ) => {\n    React.useImperativeHandle(ref, () => ({\n      focus,\n      blur,\n    }));\n    const focus = () => {\n      if (textField.current) {\n        textField.current.focus();\n      }\n    };\n    const blur = () => {\n      if (textField.current) {\n        textField.current.blur();\n      }\n    };\n\n    // This variable represents the content of the input (text field)\n    const [value, setValue] = React.useState<string>(parentValue);\n    // This variable represents the value of the autocomplete, used to\n    // highlight an option and to determine if an option is selectable, or\n    // if an event should be fired when an option is selected.\n    const [autocompleteValue, setAutocompleteValue] = React.useState<string>(\n      parentValue\n    );\n\n    const textField = React.useRef<?TextField>(null);\n\n    const styles = getStyles(value, disabled);\n    const autocompleteStyles = useAutocompleteStyles();\n\n    const changeValue = React.useCallback(\n      newValue => {\n        setValue(newValue || '');\n        onChange && onChange(newValue || '');\n      },\n      [onChange, setValue]\n    );\n\n    React.useEffect(\n      () => {\n        // The value given by the parent has priority: if it changes,\n        // the search bar must display it.\n        setValue(parentValue);\n      },\n      [parentValue]\n    );\n\n    const shouldAutofocusSearchbar = useShouldAutofocusSearchbar();\n    const previousChosenTagsCount = React.useRef<number>(0);\n    React.useEffect(\n      () => {\n        // Used to focus search bar when all tags have been removed.\n        // It is convenient when using keyboard to remove all tags and\n        // quickly get back to the text field.\n        if (\n          shouldAutofocusSearchbar &&\n          tagsHandler &&\n          tagsHandler.chosenTags.size === 0 &&\n          previousChosenTagsCount.current > 0\n        )\n          focus();\n      },\n      [tagsHandler, shouldAutofocusSearchbar]\n    );\n\n    React.useEffect(() => {\n      previousChosenTagsCount.current = tagsHandler\n        ? tagsHandler.chosenTags.size\n        : 0;\n    });\n\n    const handleBlur = () => {\n      if (!value || value.trim() === '') {\n        changeValue('');\n      }\n    };\n\n    const handleInput = (e: {| target: {| value: string |} |}) => {\n      changeValue(e.target.value);\n    };\n\n    const handleCancel = () => {\n      changeValue('');\n    };\n\n    const handleKeyPressed = (event: SyntheticKeyboardEvent<>) => {\n      if (shouldValidate(event)) {\n        onRequestSearch(value);\n      }\n    };\n\n    // --- Autocomplete-specific handlers ---\n\n    const handleAutocompleteInput = (\n      event: any,\n      newValue: string,\n      reason:\n        | 'create-option'\n        | 'select-option'\n        | 'remove-option'\n        | 'blur'\n        | 'clear'\n    ) => {\n      // Called when the value of the autocomplete changes.\n      if (reason === 'select-option') {\n        tagsHandler && tagsHandler.add(newValue);\n        changeValue('');\n      } else {\n        changeValue(newValue);\n      }\n    };\n\n    const handleAutocompleteInputChange = (\n      event: any,\n      newValue: string,\n      reason: 'reset' | 'input' | 'clear'\n    ) => {\n      // Called when the value of the input within the autocomplete changes.\n      if (reason === 'reset') {\n        // Happens when user selects an option\n        setValue('');\n        // Clear this value to make sure the autocomplete doesn't keep the\n        // last typed value in memory.\n        setAutocompleteValue('');\n      } else {\n        setValue(newValue);\n      }\n    };\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <ThemeConsumer>\n            {muiTheme => (\n              <Column noMargin>\n                <Line noMargin>\n                  <Paper\n                    style={{\n                      backgroundColor: muiTheme.searchBar.backgroundColor,\n                      ...styles.root,\n                      ...style,\n                    }}\n                    square\n                    elevation={1}\n                  >\n                    <div style={styles.searchContainer}>\n                      {tags ? (\n                        <Autocomplete\n                          id={id}\n                          options={tags.slice(0, 30)}\n                          groupBy={options => i18n._(t`Apply a filter`)}\n                          classes={autocompleteStyles}\n                          freeSolo\n                          fullWidth\n                          defaultValue=\"\"\n                          inputValue={value}\n                          value={autocompleteValue}\n                          onChange={handleAutocompleteInput}\n                          onInputChange={handleAutocompleteInputChange}\n                          onKeyPress={handleKeyPressed}\n                          onBlur={handleBlur}\n                          renderOption={option => (\n                            <Typography>{option}</Typography>\n                          )}\n                          renderInput={params => (\n                            <MuiTextField\n                              margin=\"none\"\n                              {...params}\n                              inputRef={textField}\n                              InputProps={{\n                                ...params.InputProps,\n                                disableUnderline: true,\n                                endAdornment: null,\n                                placeholder: i18n._(placeholder || t`Search`),\n                              }}\n                            />\n                          )}\n                        />\n                      ) : (\n                        <TextField\n                          id={id}\n                          margin=\"none\"\n                          hintText={placeholder || t`Search`}\n                          onBlur={handleBlur}\n                          value={value}\n                          onChange={handleInput}\n                          onKeyUp={handleKeyPressed}\n                          fullWidth\n                          style={styles.input}\n                          underlineShow={false}\n                          disabled={disabled}\n                          ref={textField}\n                        />\n                      )}\n                    </div>\n                    {buildMenuTemplate && (\n                      <ElementWithMenu\n                        element={\n                          <IconButton\n                            style={styles.iconButtonFilter.style}\n                            disabled={disabled}\n                            size=\"small\"\n                          >\n                            <FilterList />\n                          </IconButton>\n                        }\n                        buildMenuTemplate={buildMenuTemplate}\n                      />\n                    )}\n                    {helpPagePath && (\n                      <HelpIcon\n                        disabled={disabled}\n                        helpPagePath={helpPagePath}\n                        style={styles.iconButtonHelp.style}\n                        size=\"small\"\n                      />\n                    )}\n                    <IconButton\n                      style={styles.iconButtonSearch.style}\n                      disabled={disabled}\n                      size=\"small\"\n                    >\n                      <Search style={styles.iconButtonSearch.iconStyle} />\n                    </IconButton>\n                    <IconButton\n                      onClick={handleCancel}\n                      style={styles.iconButtonClose.style}\n                      disabled={disabled}\n                      size=\"small\"\n                    >\n                      <Close style={styles.iconButtonClose.iconStyle} />\n                    </IconButton>\n                  </Paper>\n                </Line>\n                {tagsHandler && (\n                  <Collapse in={tagsHandler.chosenTags.size > 0}>\n                    <TagChips\n                      tags={Array.from(tagsHandler.chosenTags)}\n                      onRemove={tag => tagsHandler.remove(tag)}\n                    />\n                  </Collapse>\n                )}\n              </Column>\n            )}\n          </ThemeConsumer>\n        )}\n      </I18n>\n    );\n  }\n);\n\nexport default SearchBar;\n\nexport const useShouldAutofocusSearchbar = () => {\n  // Note: this is not a React hook but is named as one to encourage\n  // components to use it as such, so that it could be reworked\n  // at some point to use a context (verify in this case all usages).\n  const isTouchscreen = useScreenType() === 'touch';\n  return !isTouchscreen;\n};\n","// @flow\n\nexport type RGBColor = {|\n  r: number,\n  g: number,\n  b: number,\n  a?: number,\n|};\n\n/**\n * Convert a RGB color to a RGB string.\n */\nexport const rgbColorToRGBString = (rgbColor: ?RGBColor) => {\n  if (!rgbColor) return '';\n  return `${rgbColor.r};${rgbColor.g};${rgbColor.b}`;\n};\n\n/**\n * Convert a RGB color value to a Hex string.\n * @note No \"#\" or \"0x\" are added.\n */\nexport const rgbToHex = (r: number, g: number, b: number) =>\n  '' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n\n/**\n * Convert a RGB color to a Hex number.\n */\nexport const rgbToHexNumber = (r: number, g: number, b: number) =>\n  (r << 16) + (g << 8) + b;\n\n/**\n * Convert a RGB string (\"rr;gg;bb\") to a Hex number.\n */\nexport const rgbStringToHexNumber = (rgbString: string) => {\n  const rgbColor = rgbStringAndAlphaToRGBColor(rgbString);\n  if (!rgbColor) return 0;\n  return rgbToHexNumber(rgbColor.r, rgbColor.g, rgbColor.b);\n};\n\n/**\n * Convert a RGB string (\"rrr;ggg;bbb\") or a Hex string (\"#112244\") to a Hex number.\n */\nexport const rgbOrHexToHexNumber = (value: string): number => {\n  const splitValue = value.split(';');\n  // If a RGB string is provided, convert it to HexNumber and return it.\n  if (splitValue.length === 3) {\n    return rgbStringToHexNumber(value);\n  }\n  // Otherwise, convert the Hex to a number.\n  return parseInt(value.replace('#', ''), 16);\n};\n\n/**\n * Convert a Hex number to a RGB color.\n */\nconst hexNumberToRGBColor = (hexNumber: number) => {\n  return {\n    r: (hexNumber >> 16) & 0xff,\n    g: (hexNumber >> 8) & 0xff,\n    b: hexNumber & 0xff,\n    a: 255,\n  };\n};\n\n/**\n * Convert a Hex string to a RGB color.\n */\nconst hexToRGBColor = (hex: string) => {\n  const hexNumber = parseInt(hex.replace('#', ''), 16);\n  return hexNumberToRGBColor(hexNumber);\n};\n\n/**\n * Convert a Hex number to a RGB string.\n */\nexport const hexNumberToRGBString = (hex: number) => {\n  const rgbColor = hexNumberToRGBColor(hex);\n  return rgbColorToRGBString(rgbColor);\n};\n\n/**\n * Convert a RGB string (\"rrr;ggg;bbb\") or a Hex string (#rrggbb) to a RGB string.\n * @param value The color as a RGB string or Hex string\n */\nexport const rgbOrHexToRGBString = function(value: string): string {\n  const splitValue = value.split(';');\n  // If a RGB string is provided, just return it.\n  if (splitValue.length === 3) {\n    return value;\n  }\n  // Otherwise, convert the Hex to RGB.\n  const rgbColor = hexToRGBColor(value);\n  return `${rgbColor.r};${rgbColor.g};${rgbColor.b}`;\n};\n\n/**\n * Convert a RGB string (\"rrr;ggg;bbb\") and an alpha number to a RGB color.\n * If alpha is not defined, defaults to 1 (fully opaque)\n */\nexport const rgbStringAndAlphaToRGBColor = (\n  rgbColor: string,\n  alpha?: number\n): RGBColor | null => {\n  const colors = rgbColor.replace(/\"/g, '').split(';');\n  if (colors.length !== 3) {\n    return null;\n  }\n\n  const r = parseInt(colors[0], 10);\n  const g = parseInt(colors[1], 10);\n  const b = parseInt(colors[2], 10);\n  // alpha can be 0, and we need to handle this case.\n  const a = alpha === undefined || alpha === null ? 1 : alpha;\n\n  // Check if parsing of number was done properly (if not,\n  // we receive NaN which is not equal to itself).\n  // eslint-disable-next-line\n  if (r !== r || g !== g || b !== b) return null;\n\n  return {\n    r,\n    g,\n    b,\n    a,\n  };\n};\n","// @flow\nimport * as React from 'react';\n\ntype Props = {|\n  src: ?string,\n  className?: string,\n  style?: Object,\n  /* img elements must have an alt prop, either with meaningful text, or an empty string for decorative images */\n  alt: ?string,\n  title?: ?string,\n  onError?: (?Error) => void,\n  onLoad?: (e: any) => void,\n|};\n\nconst addSearchParameterToUrl = (\n  url: string,\n  urlEncodedParameterName: string,\n  urlEncodedValue: string\n) => {\n  if (url.startsWith('data:') || url.startsWith('blob:')) {\n    // blob/data protocol does not support search parameters, which are useless anyway.\n    return url;\n  }\n\n  const separator = url.indexOf('?') === -1 ? '?' : '&';\n  return url + separator + urlEncodedParameterName + '=' + urlEncodedValue;\n};\n\n/**\n * An `img` element where the `src` URL has an extra parameter added to avoid CORS issue\n * when trying to load the image from another website (typically for game previews/exports).\n *\n * As a rule of thumb, use this **anytime you need to display an image that is a game resource/\n * user chosen image**.\n * On the contrary, if you're displaying a built-in GDevelop image, coming for example from the\n * \"res/\" folder (i.e: a GDevelop icon), you don't need this and can use `<img>` as usual.\n */\nexport const CorsAwareImage = (props: Props) => (\n  <img // eslint-disable-line jsx-a11y/alt-text\n    {...props}\n    crossOrigin=\"anonymous\"\n    src={\n      // To avoid strange/hard to understand CORS issues, we add a dummy parameter.\n      // By doing so, we force browser to consider this URL as different than the one traditionally\n      // used to render the resource in the editor (usually as an `<img>` or as a background image).\n      // If we don't add this distinct parameter, it can happen that browsers fail to load the image\n      // as it's already in the **browser cache** but with slightly different request parameters -\n      // making the CORS checks fail (even if it's coming from the browser cache).\n      //\n      // It's happening sometimes (according to loading order probably) in Chrome and (more often)\n      // in Safari. It might be linked to Amazon S3 + CloudFront that \"doesn't support the Vary: Origin header\".\n      // To be safe, we entirely avoid the issue with this parameter, making the browsers consider\n      // the resources for use in Pixi.js and for the rest of the editor as entirely separate.\n      //\n      // See:\n      // - https://stackoverflow.com/questions/26140487/cross-origin-amazon-s3-not-working-using-chrome\n      // - https://stackoverflow.com/questions/20253472/cors-problems-with-amazon-s3-on-the-latest-chomium-and-google-canary\n      // - https://stackoverflow.com/a/20299333\n      //\n      // Search for \"cors-cache-workaround\" in the codebase for the same workarounds.\n      props.src\n        ? addSearchParameterToUrl(props.src, 'gdUsage', 'img')\n        : undefined\n    }\n  />\n);\n","// @flow\nimport * as React from 'react';\nimport PreferencesContext, {\n  type AlertMessageIdentifier,\n} from '../MainFrame/Preferences/PreferencesContext';\nimport AlertMessage from './AlertMessage';\nimport Window from '../Utils/Window';\n\ntype Props = {|\n  kind: 'info' | 'warning',\n  children: React.Node,\n  identifier: AlertMessageIdentifier,\n|};\n\n/**\n * Show an alert that can be permanently hidden. Hidden messages\n * will be stored in preferences.\n */\nconst DismissableAlertMessage = ({ identifier, kind, children }: Props) => (\n  <PreferencesContext.Consumer>\n    {({ values, showAlertMessage }) =>\n      !values.hiddenAlertMessages[identifier] && (\n        <AlertMessage\n          kind={kind}\n          children={children}\n          onHide={() => {\n            const answer = Window.showConfirmDialog(\n              \"Are you sure you want to hide this hint? You won't see it again, unless you re-activate it from the preferences.\"\n            );\n\n            if (!answer) return;\n\n            showAlertMessage(identifier, false);\n          }}\n        />\n      )\n    }\n  </PreferencesContext.Consumer>\n);\n\nexport default DismissableAlertMessage;\n","// @flow\nimport React from 'react';\nimport { CorsAwareImage } from './CorsAwareImage';\nimport GDevelopThemeContext from './Theme/ThemeContext';\n// No i18n in this file\n\ntype SizeProps =\n  | {|\n      iconSize: number,\n    |}\n  | {|\n      iconWidth: number,\n      iconHeight: number,\n    |};\n\ntype Props = {|\n  src: string,\n  tooltip?: string,\n  disabled?: boolean,\n  isGDevelopIcon?: boolean,\n  cssAnimation?: string,\n  useExactIconSize?: boolean,\n  ...SizeProps,\n|};\n\n/**\n * An icon that can be used as the leftIcon of a ListItem.\n * See also ToolbarIcon.\n */\nfunction ListIcon(props: Props) {\n  const gdevelopTheme = React.useContext(GDevelopThemeContext);\n  const {\n    src,\n    tooltip,\n    disabled,\n    isGDevelopIcon,\n    cssAnimation,\n    useExactIconSize,\n  } = props;\n\n  const iconWidth =\n    props.iconWidth !== undefined ? props.iconWidth : props.iconSize;\n  const iconHeight =\n    props.iconHeight !== undefined ? props.iconHeight : props.iconSize;\n\n  // The material-ui List component reserves 56 pixels for the icon, so the maximum\n  // size is 40px before we start consuming the padding space between the icon and\n  // the text. Add it back if necessary\n  const paddingRight = iconWidth > 40 ? 16 : 0;\n\n  const style = {\n    maxWidth: useExactIconSize ? undefined : iconWidth,\n    maxHeight: useExactIconSize ? undefined : iconHeight,\n    width: useExactIconSize ? iconWidth : undefined,\n    height: useExactIconSize ? iconHeight : undefined,\n    verticalAlign: 'middle', // Vertical centering\n    animation: cssAnimation,\n    filter: !isGDevelopIcon\n      ? undefined\n      : disabled\n      ? 'grayscale(100%)'\n      : gdevelopTheme.gdevelopIconsCSSFilter,\n  };\n\n  return (\n    <div\n      style={{\n        width: iconWidth,\n        height: iconHeight,\n        lineHeight: `${iconHeight}px`, // Vertical centering\n        textAlign: 'center', // Horizontal centering\n        paddingRight,\n      }}\n    >\n      {isGDevelopIcon ? (\n        <img title={tooltip} alt={tooltip} src={src} style={style} />\n      ) : (\n        <CorsAwareImage title={tooltip} alt={tooltip} src={src} style={style} />\n      )}\n    </div>\n  );\n}\n\nconst ListIconMemo = React.memo<Props>(ListIcon);\nexport default ListIconMemo;\n","// @flow\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport ListIcon from './ListIcon';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { MarkdownText } from './MarkdownText';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport ListItem from '@material-ui/core/ListItem';\nimport { computeTextFieldStyleProps } from './TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport muiZIndex from '@material-ui/core/styles/zIndex';\nimport {\n  shouldCloseOrCancel,\n  shouldSubmit,\n} from './KeyboardShortcuts/InteractionKeys';\nimport { textEllipsisStyle } from './TextEllipsis';\n\ntype Option =\n  | {|\n      type: 'separator',\n    |}\n  | {|\n      text: string, // The text used for filtering. If empty, item is always shown.\n      value: string, // The value to show on screen and to be selected\n      translatableValue?: MessageDescriptor,\n      onClick?: () => void, // If defined, will be called when the item is clicked. onChange/onChoose won't be called.\n      renderIcon?: ?() => React.Element<typeof ListIcon | typeof SvgIcon>,\n    |};\n\nexport type DataSource = Array<Option>;\n\ntype Props = {|\n  value: string,\n  onChange: string => void,\n  onChoose?: string => void,\n  dataSource: DataSource,\n\n  id?: ?string,\n  onBlur?: (event: SyntheticFocusEvent<HTMLInputElement>) => void,\n  onRequestClose?: () => void,\n  onApply?: () => void,\n  errorText?: React.Node,\n  disabled?: boolean,\n  floatingLabelText?: React.Node,\n  helperMarkdownText?: ?string,\n  hintText?: MessageDescriptor | string,\n  fullWidth?: boolean,\n  margin?: 'none' | 'dense',\n  textFieldStyle?: Object,\n  openOnFocus?: boolean,\n  style?: Object,\n|};\n\nexport type SemiControlledAutoCompleteInterface = {|\n  focus: (selectAll?: boolean) => void,\n  forceInputValueTo: (newValue: string) => void,\n|};\n\nconst styles = {\n  container: {\n    position: 'relative',\n    width: '100%',\n  },\n  listItem: {\n    // Make the list items very dense:\n    padding: 0,\n    margin: 0,\n  },\n  listItemText: {\n    margin: '1px 0',\n  },\n};\n\nconst useStyles = makeStyles({\n  option: {\n    cursor: 'default',\n  },\n  listbox: {\n    padding: 0,\n    margin: 0,\n  },\n  input: {\n    width: 'auto',\n    flexGrow: 1,\n  },\n  inputRoot: {\n    flexWrap: 'wrap',\n  },\n  popper: {\n    zIndex: muiZIndex.tooltip + 100,\n  },\n});\n\nconst makeRenderItem = (i18n: I18nType) => (\n  option: Option,\n  state: Object\n): React.Node => {\n  if (option.type && option.type === 'separator') {\n    return (\n      <ListItem\n        divider\n        disableGutters\n        component={'div'}\n        style={styles.listItem}\n      />\n    );\n  }\n\n  const value = option.translatableValue\n    ? i18n._(option.translatableValue)\n    : option.value;\n  return (\n    <ListItem dense={true} component={'div'} style={styles.listItem}>\n      {option.renderIcon && <ListItemIcon>{option.renderIcon()}</ListItemIcon>}\n      <ListItemText\n        style={styles.listItemText}\n        primary={\n          <div title={value} style={textEllipsisStyle}>\n            {value}\n          </div>\n        }\n      />\n    </ListItem>\n  );\n};\n\nconst isOptionDisabled = (option: Option) =>\n  option.type === 'separator' ? true : false;\n\nconst filterFunction = (\n  options: DataSource,\n  state: Object,\n  value: string\n): DataSource => {\n  const lowercaseInputValue = value.toLowerCase();\n  const optionList = options.filter(option => {\n    if (option.type === 'separator') return true;\n    if (!option.text) return true;\n    return option.text.toLowerCase().indexOf(lowercaseInputValue) !== -1;\n  });\n\n  if (\n    !optionList.filter(\n      option =>\n        option.type !== 'separator' &&\n        (option.value || option.translatableValue)\n    ).length\n  )\n    return [];\n\n  // Remove divider(s) if they are at the start or end of array\n  while (\n    optionList[optionList.length - 1] !== undefined &&\n    optionList[optionList.length - 1].type !== undefined\n  )\n    optionList.pop();\n  while (optionList[0] !== undefined && optionList[0].type !== undefined)\n    optionList.shift();\n\n  return optionList;\n};\n\nconst handleChange = (\n  input: HTMLInputElement,\n  option: Option,\n  props: Props\n): void => {\n  if (option.type === 'separator') return;\n  else if (option.onClick) option.onClick();\n  else {\n    // Force the input to the selected value. We do this, bypassing inputValue state,\n    // because the change could be immediately followed by a blur, in which case the blur\n    // must have the updated value.\n    // Search for \"blur-value\" in this file for the rest of this \"workaround\".\n    input.value = option.value;\n\n    // Call the props to notify of the change. Note that if the component is blurred just after,\n    // onChange could be called again. Hence why we immediately set the input.value below.\n    // Search for \"blur-value\" in this file for the rest of this \"workaround\".\n    if (props.onChoose) {\n      props.onChoose(option.value);\n    } else {\n      props.onChange(option.value);\n    }\n\n    // Call onApply (if specified) as an option was chosen.\n    if (props.onApply) props.onApply();\n    else if (props.onRequestClose) props.onRequestClose();\n  }\n};\n\nconst getDefaultStylingProps = (params: Object, props: Props): Object => {\n  const { InputProps, inputProps, InputLabelProps, ...other } = params;\n  return {\n    ...other,\n    InputProps: {\n      ...InputProps,\n      className: null,\n      endAdornment: null,\n    },\n    inputProps: {\n      ...inputProps,\n      className: null,\n      disabled: props.disabled,\n      onKeyDown: (event: SyntheticKeyboardEvent<HTMLInputElement>): void => {\n        if (shouldCloseOrCancel(event)) {\n          if (props.onRequestClose) props.onRequestClose();\n        } else if (shouldSubmit(event)) {\n          // Make sure the current value is reported to the parent before\n          // calling onApply (or onRequestClose), otherwise the parent would only\n          // know about the previous value.\n          props.onChange(event.currentTarget.value);\n\n          if (props.onApply) props.onApply();\n          else if (props.onRequestClose) props.onRequestClose();\n        }\n      },\n    },\n  };\n};\n\nconst getOptionLabel = (option: Option, value: string): string =>\n  option.value ? option.value : value;\n\nexport default React.forwardRef<Props, SemiControlledAutoCompleteInterface>(\n  function SemiControlledAutoComplete(props: Props, ref) {\n    const input = React.useRef((null: ?HTMLInputElement));\n    const [inputValue, setInputValue] = useState((null: string | null));\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const classes = useStyles();\n\n    React.useImperativeHandle(ref, () => ({\n      focus: (selectAll: boolean = false) => {\n        const { current } = input;\n        if (current) {\n          current.focus();\n          current.setSelectionRange(0, props.value.toString().length);\n        }\n      },\n      forceInputValueTo: (newValue: string) => {\n        if (inputValue !== null) setInputValue(newValue);\n      },\n    }));\n\n    const currentInputValue = inputValue !== null ? inputValue : props.value;\n\n    const helperText = props.helperMarkdownText ? (\n      <MarkdownText source={props.helperMarkdownText} />\n    ) : null;\n\n    const handleInputChange = (\n      event: SyntheticKeyboardEvent<HTMLInputElement>,\n      value: string,\n      reason: string\n    ): void => {\n      setInputValue(value);\n      if (!isMenuOpen) setIsMenuOpen(true);\n    };\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Autocomplete\n            freeSolo\n            classes={classes}\n            onChange={(\n              event: SyntheticKeyboardEvent<HTMLInputElement>,\n              option: Option | null\n            ) => {\n              if (option === null || !input.current) return;\n\n              handleChange(input.current, option, props);\n              setInputValue(null);\n              setIsMenuOpen(false);\n            }}\n            open={isMenuOpen}\n            style={{\n              ...props.style,\n              ...styles.container,\n            }}\n            inputValue={currentInputValue}\n            value={currentInputValue}\n            onInputChange={handleInputChange}\n            options={props.dataSource}\n            renderOption={makeRenderItem(i18n)}\n            getOptionDisabled={isOptionDisabled}\n            getOptionLabel={(option: Option) =>\n              getOptionLabel(option, currentInputValue)\n            }\n            filterOptions={(options: DataSource, state) =>\n              filterFunction(options, state, currentInputValue)\n            }\n            id={props.id}\n            renderInput={params => {\n              const {\n                InputProps,\n                inputProps,\n                ...otherStylingProps\n              } = getDefaultStylingProps(params, props);\n              return (\n                <TextField\n                  InputProps={{\n                    ...InputProps,\n                    placeholder:\n                      typeof props.hintText === 'string'\n                        ? props.hintText\n                        : i18n._(props.hintText),\n                  }}\n                  inputProps={{\n                    ...inputProps,\n                    onFocus: (\n                      event: SyntheticFocusEvent<HTMLInputElement>\n                    ): void => {\n                      setIsMenuOpen(true);\n                      if (input.current)\n                        input.current.selectionStart =\n                          input.current.value.length;\n                    },\n                    // Redefine onBlur to call onChange when the component is blurred.\n                    // We do this because the default behavior of the Autocomplete is not\n                    // to call onChange when blurred (though it should according to the docs?).\n                    onBlur: (\n                      event: SyntheticFocusEvent<HTMLInputElement>\n                    ): void => {\n                      setInputValue(null);\n                      setIsMenuOpen(false);\n\n                      // Use the value of the input, rather than inputValue\n                      // that could be not updated.\n                      // Search for \"blur-value\" in this file for the rest of this \"workaround\".\n                      props.onChange(event.currentTarget.value);\n\n                      if (props.onBlur) props.onBlur(event);\n                    },\n                    onMouseDown: (\n                      event: SyntheticMouseEvent<HTMLInputElement>\n                    ): void => {\n                      // Toggle the menu when clicked and empty\n                      if (input.current && !input.current.value.length)\n                        setIsMenuOpen(!isMenuOpen);\n                    },\n                  }}\n                  {...otherStylingProps}\n                  {...computeTextFieldStyleProps(props)}\n                  style={props.textFieldStyle}\n                  label={props.floatingLabelText}\n                  inputRef={input}\n                  disabled={props.disabled}\n                  error={!!props.errorText}\n                  helperText={helperText || props.errorText}\n                  fullWidth={props.fullWidth}\n                />\n              );\n            }}\n          />\n        )}\n      </I18n>\n    );\n  }\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Column, Line } from './Grid';\nimport RaisedButton from './RaisedButton';\nimport EmptyMessage from './EmptyMessage';\nimport GDevelopThemeContext from './Theme/ThemeContext';\n\ntype Props = {|\n  children: React.Node,\n  onRetry?: () => void | Promise<void>,\n  kind?: 'error' | 'valid' | 'warning',\n|};\n\nconst PlaceholderError = ({ onRetry, children, kind }: Props) => {\n  const theme = React.useContext(GDevelopThemeContext);\n  return (\n    <Column expand alignItems=\"center\">\n      <EmptyMessage style={kind ? { color: theme.message[kind] } : undefined}>\n        {children}\n      </EmptyMessage>\n      <Line>\n        {onRetry && (\n          <RaisedButton\n            primary\n            label={<Trans>Retry</Trans>}\n            onClick={onRetry}\n          />\n        )}\n      </Line>\n    </Column>\n  );\n};\n\nexport default PlaceholderError;\n","// @flow\nimport axios from 'axios';\nimport { makeTimestampedId } from '../../Utils/TimestampedId';\nimport { GDevelopBuildApi, GDevelopGamesPlatform } from './ApiConfigs';\nimport { getSignedUrl } from './Usage';\nimport { basename } from 'path';\n\nexport type TargetName =\n  | 'winExe'\n  | 'winZip'\n  | 'macZip'\n  | 'linuxAppImage'\n  | 'androidApk'\n  | 'androidAppBundle'\n  | 's3';\n\nexport type Build = {\n  id: string,\n  gameId?: string, // not defined for old builds.\n  userId: string,\n  bucket?: string,\n  logsKey?: string,\n  apkKey?: string,\n  aabKey?: string,\n  windowsExeKey?: string,\n  windowsZipKey?: string,\n  macosZipKey?: string,\n  linuxAppImageKey?: string,\n  s3Key?: string,\n  status: 'pending' | 'complete' | 'error',\n  type: 'cordova-build' | 'electron-build' | 'web-build',\n  targets?: Array<TargetName>,\n  createdAt: number,\n  updatedAt: number,\n};\n\nexport type BuildArtifactKeyName =\n  | 'apkKey'\n  | 'aabKey'\n  | 'windowsExeKey'\n  | 'windowsZipKey'\n  | 'macosZipKey'\n  | 'linuxAppImageKey'\n  | 's3Key'\n  | 'logsKey';\n\nexport const getBuildArtifactUrl = (\n  build: ?Build,\n  keyName: BuildArtifactKeyName\n): ?string => {\n  if (!build || !build[keyName]) {\n    return null;\n  }\n\n  if (keyName === 's3Key') {\n    // New builds have a gameId.\n    return build.gameId\n      ? GDevelopGamesPlatform.getInstantBuildUrl(build.id)\n      : `https://games.gdevelop-app.com/${build[keyName]}/index.html`;\n  }\n\n  return `https://builds.gdevelop-app.com/${build[keyName]}`;\n};\n\nexport const getWebBuildThumbnailUrl = (\n  project: gdProject,\n  buildId: string\n): string => {\n  const resourceManager = project.getResourcesManager();\n  const resourceName = project\n    .getPlatformSpecificAssets()\n    .get('liluo', `thumbnail`);\n  if (!resourceManager.hasResource(resourceName)) {\n    return '';\n  }\n  const path = resourceManager.getResource(resourceName).getFile();\n  const fileName = basename(path);\n  if (!fileName) {\n    return '';\n  }\n  // The exporter put asset files directly in the build folder.\n  // It's not factorized with the exporter because it's a temporary solution.\n  // TODO: Upload the thumbnail separately, so that this URL is not defined by the frontend.\n  const uri = `https://games.gdevelop-app.com/game-${buildId}/${fileName}`;\n  // The backend services encode the file URLs when uploaded, so we need to do the same before saving the value.\n  const encodedUri = encodeURI(uri);\n  return encodedUri;\n};\n\ntype UploadOptions = {|\n  signedUrl: string,\n  contentType: string,\n  key: string,\n|};\n\nexport const getBuildFileUploadOptions = (): Promise<UploadOptions> => {\n  const prefix = 'game-archive-' + makeTimestampedId();\n  const filename = 'game-archive.zip';\n  const contentType = 'application/zip';\n  const key = prefix + '/' + filename;\n\n  return getSignedUrl({ uploadType: 'build', key, contentType }).then(\n    ({ signedUrl }) => {\n      return {\n        signedUrl,\n        contentType,\n        key,\n      };\n    }\n  );\n};\n\nexport const buildElectron = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  key: string,\n  targets: Array<TargetName>,\n  gameId: string\n): Promise<Build> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.post(`${GDevelopBuildApi.baseUrl}/build`, null, {\n        params: {\n          userId,\n          key,\n          type: 'electron-build',\n          targets: targets.join(','),\n          gameId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n\nexport const buildWeb = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  key: string,\n  gameId: string\n): Promise<Build> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.post(`${GDevelopBuildApi.baseUrl}/build`, null, {\n        params: {\n          userId,\n          key,\n          type: 'web-build',\n          targets: 's3',\n          gameId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n\nexport const buildCordovaAndroid = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  key: string,\n  targets: Array<TargetName>,\n  keystore: 'old' | 'new',\n  gameId: string\n): Promise<Build> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.post(\n        `${GDevelopBuildApi.baseUrl}/build`,\n        JSON.stringify({\n          signing: {\n            keystore,\n          },\n        }),\n        {\n          params: {\n            userId,\n            key,\n            type: 'cordova-build',\n            targets: targets.join(','),\n            gameId,\n          },\n          headers: {\n            Authorization: authorizationHeader,\n          },\n        }\n      )\n    )\n    .then(response => response.data);\n};\n\nexport const getBuild = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  buildId: string\n): Promise<Build> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopBuildApi.baseUrl}/build/${buildId}`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n\nexport const getBuilds = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  gameId?: string\n): Promise<Array<Build>> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopBuildApi.baseUrl}/build`, {\n        params: {\n          userId,\n          gameId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n","// @flow\n\nexport default function getObjectByName(\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer?: ?gdObjectsContainer,\n  objectName: string\n): ?gdObject {\n  if (objectsContainer && objectsContainer.hasObjectNamed(objectName))\n    return objectsContainer.getObject(objectName);\n  else if (globalObjectsContainer.hasObjectNamed(objectName))\n    return globalObjectsContainer.getObject(objectName);\n\n  return null;\n}\n","// @flow\nimport { type ExpressionParameters } from './ParameterFieldCommons';\nimport { type ExpressionAutocompletion } from '../../ExpressionAutocompletion';\nconst gd: libGDevelop = global.gd;\n\n/**\n * Given an instruction or an expression and a parameter number,\n * return the name of the object that this parameter (usually, a \"behavior\" or a \"objectvar\") should use.\n *\n * This is an extension to ParameterMetadataTools.cpp and ParameterMetadataTools.h.\n * It's only here to ease to search of the object name in fields like BehaviorField or\n * ObjectVariableField.\n */\nexport const getLastObjectParameterValue = ({\n  instructionMetadata,\n  instruction,\n  expressionMetadata,\n  expression,\n  parameterIndex,\n}: {|\n  instructionMetadata: ?gdInstructionMetadata,\n  instruction: ?gdInstruction,\n  expressionMetadata: ?gdExpressionMetadata,\n  expression: ?ExpressionParameters,\n  parameterIndex: ?number,\n|}): ?string => {\n  if (parameterIndex === undefined || parameterIndex == null) {\n    // No parameter index given: the parameter is not even in a list of parameters\n    return null;\n  }\n\n  let objectName = null;\n  if (instructionMetadata && instruction) {\n    const objectParameterIndex = gd.ParameterMetadataTools.getObjectParameterIndexFor(\n      instructionMetadata.getParameters(),\n      parameterIndex\n    );\n    if (\n      objectParameterIndex >= 0 &&\n      objectParameterIndex < instruction.getParametersCount()\n    ) {\n      objectName = instruction.getParameter(objectParameterIndex);\n    }\n  } else if (expressionMetadata && expression) {\n    const objectParameterIndex = gd.ParameterMetadataTools.getObjectParameterIndexFor(\n      expressionMetadata.getParameters(),\n      parameterIndex\n    );\n    if (\n      objectParameterIndex >= 0 &&\n      objectParameterIndex < expression.getParametersCount()\n    ) {\n      objectName = expression.getParameter(objectParameterIndex);\n    }\n  }\n\n  return objectName;\n};\n\nexport const getLastObjectParameterObjectType = (\n  parameters: gdVectorParameterMetadata,\n  parameterIndex: number\n) => {\n  const objectParameterIndex = gd.ParameterMetadataTools.getObjectParameterIndexFor(\n    parameters,\n    parameterIndex\n  );\n  if (objectParameterIndex < 0 || objectParameterIndex >= parameters.size()) {\n    return '';\n  }\n\n  return parameters.at(objectParameterIndex).getExtraInfo();\n};\n\n/**\n * Given an instruction or an expression and a parameter number,\n * return the value of the previous parameter.\n */\nexport const getPreviousParameterValue = ({\n  instruction,\n  expression,\n  parameterIndex,\n}: {|\n  instruction: ?gdInstruction,\n  expression: ?ExpressionParameters,\n  parameterIndex: ?number,\n|}): ?string => {\n  if (parameterIndex === undefined || parameterIndex == null) {\n    // No parameter index given: the parameter is not even in a list of parameters\n    return null;\n  }\n\n  if (instruction) {\n    if (\n      parameterIndex >= 1 &&\n      parameterIndex < instruction.getParametersCount()\n    ) {\n      return instruction.getParameter(parameterIndex - 1);\n    }\n  } else if (expression) {\n    if (\n      parameterIndex >= 1 &&\n      parameterIndex < expression.getParametersCount()\n    ) {\n      return expression.getParameter(parameterIndex - 1);\n    }\n  }\n\n  return null;\n};\n\n/**\n * Try to extract the value of a string literal, or null. Result is not guaranteed to be valid.\n * - for `\"Hello\"`, this returns `Hello`.\n * - for `\"Hello`, this returns null.\n * - for `\"H\" + \"O\"`, this returns `H\" + \"O`.\n */\nexport const tryExtractStringLiteralContent = (\n  parameterValue: ?string\n): ?string => {\n  if (!parameterValue) return null;\n\n  const trimmedParameterValue = parameterValue.trim();\n  if (\n    trimmedParameterValue.length >= 2 &&\n    trimmedParameterValue[0] === '\"' &&\n    trimmedParameterValue[trimmedParameterValue.length - 1] === '\"'\n  ) {\n    return trimmedParameterValue.substr(1, trimmedParameterValue.length - 2);\n  }\n\n  return null;\n};\n\nexport const getParameterChoices = (\n  parameterMetadata: ?gdParameterMetadata\n): Array<ExpressionAutocompletion> => {\n  if (!parameterMetadata) {\n    return [];\n  }\n\n  try {\n    return JSON.parse(parameterMetadata.getExtraInfo()).map(choice => ({\n      kind: 'Text',\n      completion: `\"${choice}\"`,\n    }));\n  } catch (exception) {\n    console.error(\n      'The parameter seems misconfigured, as an array of choices could not be extracted - verify that your properly wrote a list of choices in JSON format. Full exception is:',\n      exception\n    );\n  }\n\n  return [];\n};\n","import React, { Component } from 'react';\nimport ThemeConsumer from './Theme/ThemeConsumer';\nimport Text from './Text';\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  paddingLeft: 8,\n  paddingRight: 8,\n};\n\nclass MiniToolbar extends Component {\n  render() {\n    const { justifyContent } = this.props;\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <div\n            style={{\n              ...style,\n              height: 32,\n              backgroundColor: muiTheme.toolbar.backgroundColor,\n              justifyContent,\n            }}\n          >\n            {this.props.children}\n          </div>\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n\nconst firstChildToolbarTextStyle = {\n  marginRight: 4,\n};\nconst toolbarTextStyle = {\n  marginLeft: 4,\n  marginRight: 4,\n};\n\nexport const MiniToolbarText = ({ children, firstChild }) => (\n  <Text\n    noShrink\n    style={firstChild ? firstChildToolbarTextStyle : toolbarTextStyle}\n  >\n    {children}\n  </Text>\n);\n\nexport default MiniToolbar;\n","// @flow\nimport * as React from 'react';\n\nexport type ScreenType = 'normal' | 'touch';\n\nlet userHasTouchedScreen = false;\nif (typeof window !== 'undefined') {\n  window.addEventListener(\n    'touchstart',\n    function onFirstTouch() {\n      console.info('Touch detected, considering the screen as touch enabled.');\n      userHasTouchedScreen = true;\n      window.removeEventListener('touchstart', onFirstTouch, false);\n    },\n    false\n  );\n}\n\ntype Props = {|\n  children: (screenType: ScreenType) => React.Node,\n|};\n\n/**\n * Wraps useScreenType in a component.\n */\nexport const ScreenTypeMeasurer = ({ children }: Props) =>\n  children(useScreenType());\n\n/**\n * Return if the screen is a touchscreen or not.\n */\nexport const useScreenType = (): ScreenType => {\n  // Note: this is not a React hook but is named as one to encourage\n  // components to use it as such, so that it could be reworked\n  // at some point to use a context (verify in this case all usages).\n  if (typeof window === 'undefined') return 'normal';\n\n  return userHasTouchedScreen ? 'touch' : 'normal';\n};\n","// @flow\nimport * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\ntype Props = {|\n  children: ?React.Node,\n|};\n\nconst style = {\n  paddingLeft: 8,\n};\n\n// A Subheader to be displayed in a List.\nexport default ({ children }: Props) =>\n  children ? (\n    <Typography variant={'overline'} style={style}>\n      {children}\n    </Typography>\n  ) : null;\n","// @flow\nimport axios from 'axios';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { GDevelopGameApi, GDevelopGamesPlatform } from './ApiConfigs';\nimport { type Filters } from './Filters';\nimport { type UserPublicProfile } from './User';\nimport { t } from '@lingui/macro';\n\nexport type PublicGame = {\n  id: string,\n  gameName: string,\n  authorName: string, // this corresponds to the publisher name\n  publicWebBuildId?: ?string,\n  description?: string,\n  owners: Array<UserPublicProfile>,\n  authors: Array<UserPublicProfile>,\n  playWithKeyboard: boolean,\n  playWithGamepad: boolean,\n  playWithMobile: boolean,\n  orientation: string,\n  thumbnailUrl?: string,\n  cachedLastWeekSessionsCount?: number,\n  cachedLastYearSessionsCount?: number,\n  categories?: string[],\n  userSlug?: string,\n  gameSlug?: string,\n  discoverable?: boolean,\n};\n\nexport type Game = {\n  id: string,\n  gameName: string,\n  authorName: string, // this corresponds to the publisher name\n  createdAt: number,\n  publicWebBuildId?: ?string,\n  description?: string,\n  thumbnailUrl?: string,\n  discoverable?: boolean,\n};\n\nexport type GameSlug = {\n  username: string,\n  gameSlug: string,\n  createdAt: number,\n};\n\nexport type ShowcasedGameLink = {\n  url: string,\n  type:\n    | 'app-store'\n    | 'play-store'\n    | 'play'\n    | 'download'\n    | 'download-win-mac-linux'\n    | 'learn-more',\n};\n\nexport type ShowcasedGame = {\n  title: string,\n  author: string,\n  description: string,\n  genres: Array<string>,\n  platforms: Array<string>,\n  /** Represents the union of genres+platforms. */\n  tags: Array<string>,\n  imageUrls: Array<string>,\n  links: Array<ShowcasedGameLink>,\n  isFeatured: boolean,\n  bannerUrl: string,\n  bannerBackgroundPosition: string,\n  thumbnailUrl: string,\n  editorDescription: string,\n};\n\nexport type AllShowcasedGames = {\n  showcasedGames: Array<ShowcasedGame>,\n  filters: Filters,\n};\n\nexport type GameApiError = {|\n  code: 'game-deletion/leaderboards-exist',\n|};\n\nexport const allGameCategories = [\n  'action',\n  'adventure',\n  'shooter',\n  'platformer',\n  'rpg',\n  'horror',\n  'strategy',\n  'puzzle',\n  'story-rich',\n  'survival',\n  'racing',\n  'building',\n  'simulation',\n  'sport',\n  'multiplayer',\n  'leaderboard',\n];\n\nexport const getCategoryName = (category: string, i18n: I18nType) => {\n  switch (category) {\n    case 'action':\n      return i18n._(t`Action`);\n    case 'adventure':\n      return i18n._(t`Adventure`);\n    case 'shooter':\n      return i18n._(t`Shooter`);\n    case 'platformer':\n      return i18n._(t`Platformer`);\n    case 'rpg':\n      return i18n._(t`RPG`);\n    case 'horror':\n      return i18n._(t`Horror`);\n    case 'strategy':\n      return i18n._(t`Strategy`);\n    case 'puzzle':\n      return i18n._(t`Puzzle`);\n    case 'racing':\n      return i18n._(t`Racing`);\n    case 'simulation':\n      return i18n._(t`Simulation`);\n    case 'sport':\n      return i18n._(t`Sport`);\n    case 'story-rich':\n      return i18n._(t`Story-Rich`);\n    case 'survival':\n      return i18n._(t`Survival`);\n    case 'building':\n      return i18n._(t`Building`);\n    case 'multiplayer':\n      return i18n._(t`Multiplayer`);\n    case 'leaderboard':\n      return i18n._(t`Leaderboard`);\n    default:\n      return category;\n  }\n};\n\nexport const getGameUrl = (game: ?Game, slug: ?GameSlug) => {\n  if (!game) return null;\n  return slug\n    ? GDevelopGamesPlatform.getGameUrlWithSlug(slug.username, slug.gameSlug)\n    : GDevelopGamesPlatform.getGameUrl(game.id);\n};\n\nexport const getAclsFromUserIds = (\n  ownersIds: Array<string>\n): Array<{| userId: string, level: string |}> =>\n  ownersIds.map(ownerId => ({\n    userId: ownerId,\n    level: 'owner',\n  }));\n\nexport const listAllShowcasedGames = (): Promise<AllShowcasedGames> => {\n  return axios\n    .get(`${GDevelopGameApi.baseUrl}/showcased-game`)\n    .then(response => response.data)\n    .then(({ gamesShowcaseUrl, filtersUrl }) => {\n      if (!gamesShowcaseUrl || !filtersUrl) {\n        throw new Error('Unexpected response from the resource endpoint.');\n      }\n      return Promise.all([\n        axios.get(gamesShowcaseUrl).then(response => response.data),\n        axios.get(filtersUrl).then(response => response.data),\n      ]).then(([showcasedGames, filters]) => ({\n        showcasedGames,\n        filters,\n      }));\n    });\n};\n\nexport const registerGame = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  {\n    gameId,\n    gameName,\n    authorName,\n  }: {|\n    gameId: string,\n    gameName: string,\n    authorName: string,\n  |}\n): Promise<Game> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.post(\n        `${GDevelopGameApi.baseUrl}/game/${gameId}`,\n        {\n          gameName,\n          authorName,\n        },\n        {\n          params: {\n            userId,\n          },\n          headers: {\n            Authorization: authorizationHeader,\n          },\n        }\n      )\n    )\n    .then(response => response.data);\n};\n\nexport const updateGame = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  gameId: string,\n  {\n    gameName,\n    categories,\n    authorName,\n    publicWebBuildId,\n    description,\n    playWithKeyboard,\n    playWithGamepad,\n    playWithMobile,\n    orientation,\n    thumbnailUrl,\n    discoverable,\n  }: {|\n    gameName?: string,\n    categories?: string[],\n    authorName?: string,\n    publicWebBuildId?: ?string,\n    description?: string,\n    playWithKeyboard?: boolean,\n    playWithGamepad?: boolean,\n    playWithMobile?: boolean,\n    orientation?: string,\n    thumbnailUrl?: ?string,\n    discoverable?: boolean,\n  |}\n): Promise<Game> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.patch(\n        `${GDevelopGameApi.baseUrl}/game/${gameId}`,\n        {\n          gameName,\n          categories,\n          authorName,\n          publicWebBuildId,\n          description,\n          playWithKeyboard,\n          playWithGamepad,\n          playWithMobile,\n          orientation,\n          thumbnailUrl,\n          discoverable,\n        },\n        {\n          params: {\n            userId,\n          },\n          headers: {\n            Authorization: authorizationHeader,\n          },\n        }\n      )\n    )\n    .then(response => response.data);\n};\n\nexport const setGameUserAcls = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  gameId: string,\n  acls: {|\n    ownership?: Array<{| userId: string, level: string |}>,\n    author?: Array<{| userId: string, level: string |}>,\n  |}\n): Promise<void> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.post(\n        `${GDevelopGameApi.baseUrl}/game/action/set-acls`,\n        {\n          gameId,\n          newAcls: acls,\n        },\n        {\n          params: {\n            userId,\n          },\n          headers: {\n            Authorization: authorizationHeader,\n          },\n        }\n      )\n    )\n    .then(response => response.data);\n};\n\nexport const setGameSlug = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  gameId: string,\n  userSlug: string,\n  gameSlug: string\n): Promise<void> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.post(\n        `${GDevelopGameApi.baseUrl}/game/action/set-slug`,\n        {\n          gameId,\n          userSlug,\n          gameSlug,\n        },\n        {\n          params: {\n            userId,\n          },\n          headers: {\n            Authorization: authorizationHeader,\n          },\n        }\n      )\n    )\n    .then(response => response.data);\n};\n\nexport const getGame = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  gameId: string\n): Promise<Game> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopGameApi.baseUrl}/game/${gameId}`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n\nexport const deleteGame = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  gameId: string\n): Promise<Game> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.delete(`${GDevelopGameApi.baseUrl}/game/${gameId}`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n\nexport const getGames = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string\n): Promise<Array<Game>> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopGameApi.baseUrl}/game`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n\nexport const getPublicGame = (gameId: string): Promise<PublicGame> => {\n  return axios\n    .get(`${GDevelopGameApi.baseUrl}/public-game/${gameId}`)\n    .then(response => response.data);\n};\n\nexport const getGameSlugs = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  gameId: string\n): Promise<Array<GameSlug>> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopGameApi.baseUrl}/game-slug`, {\n        params: {\n          userId,\n          gameId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n","// @flow\nimport { mapFor } from '../Utils/MapFor';\nimport flatten from 'lodash/flatten';\nimport { type SelectedTags, hasStringAllTags } from '../Utils/TagsHelper';\nconst gd: libGDevelop = global.gd;\n\nexport type EnumeratedObjectMetadata = {|\n  extension: gdPlatformExtension,\n  objectMetadata: gdObjectMetadata,\n  name: string,\n  fullName: string,\n  description: string,\n  iconFilename: string,\n  categoryFullName: string,\n|};\n\nexport type ObjectWithContext = {|\n  object: gdObject,\n  global: boolean,\n|};\n\nexport type GroupWithContext = {|\n  group: gdObjectGroup,\n  global: boolean,\n|};\n\nexport type ObjectWithContextList = Array<ObjectWithContext>;\nexport type GroupWithContextList = Array<GroupWithContext>;\n\nexport const isSameGroupWithContext = (groupWithContext: ?GroupWithContext) => (\n  other: ?GroupWithContext\n) => {\n  return (\n    groupWithContext &&\n    other &&\n    groupWithContext.global === other.global &&\n    groupWithContext.group === other.group\n  );\n};\n\nexport const isSameObjectWithContext = (\n  objectWithContext: ?ObjectWithContext\n) => (other: ?ObjectWithContext) => {\n  return (\n    objectWithContext &&\n    other &&\n    objectWithContext.global === other.global &&\n    objectWithContext.object === other.object\n  );\n};\n\nexport const enumerateObjects = (\n  project: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  type: ?string = undefined\n) => {\n  const filterObject = (object: gdObject): boolean => {\n    return (\n      !type ||\n      gd.getTypeOfObject(project, objectsContainer, object.getName(), false) ===\n        type\n    );\n  };\n\n  const containerObjectsList: ObjectWithContextList = mapFor(\n    0,\n    objectsContainer.getObjectsCount(),\n    i => objectsContainer.getObjectAt(i)\n  )\n    .filter(filterObject)\n    .map((object: gdObject): ObjectWithContext => ({ object, global: false }));\n\n  const projectObjectsList: ObjectWithContextList =\n    project === objectsContainer\n      ? []\n      : mapFor(0, project.getObjectsCount(), i => project.getObjectAt(i))\n          .filter(filterObject)\n          .map(\n            (object: gdObject): ObjectWithContext => ({\n              object,\n              global: true,\n            })\n          );\n\n  const allObjectsList: ObjectWithContextList = containerObjectsList.concat(\n    projectObjectsList\n  );\n\n  return {\n    containerObjectsList,\n    projectObjectsList,\n    allObjectsList,\n  };\n};\n\nexport const enumerateObjectTypes = (\n  project: gdProject\n): Array<EnumeratedObjectMetadata> => {\n  const platform = project.getCurrentPlatform();\n  const extensionsList = platform.getAllPlatformExtensions();\n\n  return flatten(\n    mapFor(0, extensionsList.size(), i => {\n      const extension = extensionsList.at(i);\n\n      return extension\n        .getExtensionObjectsTypes()\n        .toJSArray()\n        .map(objectType => extension.getObjectMetadata(objectType))\n        .map(objectMetadata => ({\n          extension,\n          objectMetadata,\n          name: objectMetadata.getName(),\n          fullName: objectMetadata.getFullName(),\n          description: objectMetadata.getDescription(),\n          iconFilename: objectMetadata.getIconFilename(),\n          categoryFullName: objectMetadata.getCategoryFullName(),\n        }));\n    })\n  );\n};\n\nexport type ObjectFilteringOptions = {|\n  searchText: string,\n  selectedTags: SelectedTags,\n  hideExactMatches?: boolean,\n|};\n\nexport const filterObjectByTags = (\n  objectWithContext: ObjectWithContext,\n  selectedTags: SelectedTags\n): boolean => {\n  if (!selectedTags.length) return true;\n\n  const objectTags = objectWithContext.object.getTags();\n  return hasStringAllTags(objectTags, selectedTags);\n};\n\nexport const filterObjectsList = (\n  list: ObjectWithContextList,\n  { searchText, selectedTags, hideExactMatches }: ObjectFilteringOptions\n): ObjectWithContextList => {\n  if (!searchText && !selectedTags.length) return list;\n\n  return list\n    .filter(objectWithContext =>\n      filterObjectByTags(objectWithContext, selectedTags)\n    )\n    .filter((objectWithContext: ObjectWithContext) => {\n      const objectName = objectWithContext.object.getName();\n\n      if (hideExactMatches && searchText === objectName) return undefined;\n\n      return objectName.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;\n    });\n};\n\nexport type GroupFilteringOptions = {|\n  searchText: string,\n  hideExactMatches?: boolean,\n|};\n\nexport const filterGroupsList = (\n  list: GroupWithContextList,\n  { searchText, hideExactMatches }: GroupFilteringOptions\n): GroupWithContextList => {\n  if (!searchText) return list;\n\n  return list.filter((groupWithContext: GroupWithContext) => {\n    const groupName = groupWithContext.group.getName();\n\n    if (hideExactMatches && groupName === searchText) return undefined;\n\n    return groupName.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;\n  });\n};\n\nexport const enumerateGroups = (\n  objectGroups: gdObjectGroupsContainer\n): Array<gdObjectGroup> => {\n  return mapFor(0, objectGroups.count(), i => {\n    return objectGroups.getAt(i);\n  });\n};\n\nexport const enumerateObjectsAndGroups = (\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  type: ?string = undefined\n) => {\n  const filterObject = (object: gdObject): boolean => {\n    return (\n      !type ||\n      gd.getTypeOfObject(\n        globalObjectsContainer,\n        objectsContainer,\n        object.getName(),\n        false\n      ) === type\n    );\n  };\n  const filterGroup = (group: gdObjectGroup): boolean => {\n    return (\n      !type ||\n      gd.getTypeOfObject(\n        globalObjectsContainer,\n        objectsContainer,\n        group.getName(),\n        true\n      ) === type\n    );\n  };\n\n  const containerObjectsList: ObjectWithContextList = mapFor(\n    0,\n    objectsContainer.getObjectsCount(),\n    i => objectsContainer.getObjectAt(i)\n  )\n    .filter(filterObject)\n    .map(object => ({ object, global: false }));\n\n  const containerGroups = objectsContainer.getObjectGroups();\n  const containerGroupsList: GroupWithContextList = enumerateGroups(\n    containerGroups\n  )\n    .filter(filterGroup)\n    .map(group => ({ group, global: false }));\n\n  const projectObjectsList: ObjectWithContextList =\n    globalObjectsContainer === objectsContainer\n      ? []\n      : mapFor(0, globalObjectsContainer.getObjectsCount(), i =>\n          globalObjectsContainer.getObjectAt(i)\n        )\n          .filter(filterObject)\n          .map(object => ({ object, global: true }));\n\n  const projectGroups = globalObjectsContainer.getObjectGroups();\n  const projectGroupsList: GroupWithContextList =\n    globalObjectsContainer === objectsContainer\n      ? []\n      : enumerateGroups(projectGroups)\n          .filter(filterGroup)\n          .map(group => ({ group, global: true }));\n\n  const allObjectsList: ObjectWithContextList = containerObjectsList.concat(\n    projectObjectsList\n  );\n  const allGroupsList: GroupWithContextList = containerGroupsList.concat(\n    projectGroupsList\n  );\n\n  return {\n    containerObjectsList,\n    projectObjectsList,\n    allObjectsList,\n    containerGroupsList,\n    projectGroupsList,\n    allGroupsList,\n  };\n};\n","// @flow\nimport RenderedUnknownInstance from './Renderers/RenderedUnknownInstance';\nimport RenderedSpriteInstance from './Renderers/RenderedSpriteInstance';\nimport RenderedTiledSpriteInstance from './Renderers/RenderedTiledSpriteInstance';\nimport RenderedPanelSpriteInstance from './Renderers/RenderedPanelSpriteInstance';\nimport RenderedTextInstance from './Renderers/RenderedTextInstance';\nimport RenderedShapePainterInstance from './Renderers/RenderedShapePainterInstance';\nimport RenderedTextEntryInstance from './Renderers/RenderedTextEntryInstance';\nimport RenderedParticleEmitterInstance from './Renderers/RenderedParticleEmitterInstance';\nimport PixiResourcesLoader from './PixiResourcesLoader';\nimport ResourcesLoader from '../ResourcesLoader';\nimport RenderedInstance from './Renderers/RenderedInstance';\nimport * as PIXI from 'pixi.js-legacy';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport { rgbOrHexToHexNumber } from '../Utils/ColorTransformer';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst gd: libGDevelop = global.gd;\n\n// Some PixiJS plugins like pixi-tilemap are not distributed as UMD modules,\n// or still require a global PIXI object to be accessible, so we expose PIXI here.\n// This can be removed if no more extension PixiJS plugin requires this.\nglobal.PIXI = PIXI;\n// We also export it as GlobalPIXIModule, which is normally used in GDJS runtime and extensions\n// to allow TypeScript typings of PIXI to work.\nglobal.GlobalPIXIModule = { PIXI };\n\nconst requirableModules = {};\n\n/**\n * A service containing functions that are called to render instances\n * of objects in a PIXI.Container.\n */\nexport default {\n  renderers: {\n    unknownObjectType: RenderedUnknownInstance,\n    Sprite: RenderedSpriteInstance,\n    'TiledSpriteObject::TiledSprite': RenderedTiledSpriteInstance,\n    'PanelSpriteObject::PanelSprite': RenderedPanelSpriteInstance,\n    'TextObject::Text': RenderedTextInstance,\n    'PrimitiveDrawing::Drawer': RenderedShapePainterInstance,\n    'TextEntryObject::TextEntry': RenderedTextEntryInstance,\n    'ParticleSystem::ParticleEmitter': RenderedParticleEmitterInstance,\n  },\n  getThumbnail: function(project: gdProject, object: gdObject) {\n    var objectType = object.getType();\n    if (this.renderers.hasOwnProperty(objectType))\n      return this.renderers[objectType].getThumbnail(\n        project,\n        ResourcesLoader,\n        object\n      );\n    else\n      return this.renderers['unknownObjectType'].getThumbnail(\n        project,\n        ResourcesLoader,\n        object\n      );\n  },\n  createNewInstanceRenderer: function(\n    project: gdProject,\n    layout: gdLayout,\n    instance: gdInitialInstance,\n    associatedObject: gdObject,\n    pixiContainer: any\n  ) {\n    var objectType = associatedObject.getType();\n    if (this.renderers.hasOwnProperty(objectType))\n      return new this.renderers[objectType](\n        project,\n        layout,\n        instance,\n        associatedObject,\n        pixiContainer,\n        PixiResourcesLoader\n      );\n    else {\n      console.warn(\n        `Object with type ${objectType} has no instance renderer registered. Please use registerInstanceRenderer to register your renderer.`\n      );\n      return new this.renderers['unknownObjectType'](\n        project,\n        layout,\n        instance,\n        associatedObject,\n        pixiContainer,\n        PixiResourcesLoader\n      );\n    }\n  },\n  registerInstanceRenderer: function(objectType: string, renderer: any) {\n    if (!renderer.getThumbnail) {\n      console.warn(\n        `Tried to register renderer for object \"${objectType}\", but getThumbnail is not defined.`\n      );\n      return;\n    }\n\n    if (this.renderers.hasOwnProperty(objectType)) {\n      console.warn(\n        `Tried to register renderer for object \"${objectType}\", but a renderer already exists.`\n      );\n\n      // If you want to update a renderer, this is currently unsupported.\n      // To implement this, we need to add support for instance renderers to be released/destroyed\n      // (some can have reference counting for some PIXI resources, etc... that would need to be properly released).\n      return;\n    }\n\n    console.info(`Properly registered renderer for object \"${objectType}\".`);\n    this.renderers[objectType] = renderer;\n  },\n  /**\n   * Register a module that can be then required using `requireModule`.\n   * This is necessary for the web-app, as all files must be bundled.\n   */\n  registerModule: function(requirePath: string, module: any) {\n    requirableModules[requirePath] = module;\n  },\n  /**\n   * Require a module, that was either registered using `registerModule` (i.e: on the web-app), or from\n   * the specified path (if `optionalRequire` can find the file, i.e: on the electron app).\n   */\n  requireModule: function(requireBasePath: string, requirePath: string): ?any {\n    // On Electron, where modules can be required at runtime from files, require the\n    // file, relative to the base path.\n    if (electron && path) {\n      const originalRequiredModulePath = path.join(\n        requireBasePath,\n        requirePath\n      );\n\n      // Get the \"module\" module from Node.js and temporarily overwrite its internal \"_load\"\n      // method. This method is called when a module is loaded, and is used here to provide \"pixi.js-legacy\"\n      // to extensions needing it. If we don't, \"pixi.js-legacy\" is found in development, because Node.js resolution\n      // algorithm traverses the paths until it reaches newIDE/app/node_modules, but is not found in production,\n      // because newIDE/app node_modules are now gone (compiled by Webpack).\n      const module = optionalRequire('module');\n      if (!module._load) {\n        throw new Error(\n          'module._load does not exist. This is possibly a change in Node.js that is breaking the custom loader, in ObjectsRenderingService.requireModule, that is injected to expose Pixi.js to extensions using \"require\".'\n        );\n      }\n      const originalNodeModuleLoad = module._load;\n\n      // Allow pixi.js to be required by extensions:\n      const allowedModules = {\n        'pixi.js-legacy': PIXI,\n        'pixi.js': PIXI,\n        '@pixi/core': PIXI,\n        '@pixi/display': PIXI,\n        '@pixi/constants': PIXI,\n        '@pixi/sprite': PIXI,\n        '@pixi/math': PIXI,\n        '@pixi/utils': PIXI,\n        '@pixi/graphics': PIXI,\n      };\n      module._load = function hookedLoader(request, parent, isMain) {\n        const loadedModule = allowedModules[request];\n        if (loadedModule) return loadedModule;\n\n        if (\n          request.indexOf('./') === 0 ||\n          request === originalRequiredModulePath\n        )\n          return originalNodeModuleLoad(request, parent, isMain);\n\n        console.error(\n          `A module (\"${request}\") was required from ${originalRequiredModulePath} but is not an allowed module or a relative file path starting with \"./\". null will be returned instead.`\n        );\n        console.warn(`Allowed modules are: `, Object.keys(allowedModules));\n        console.warn(\n          `Please use only allowed modules or a reference a local file.`\n        );\n        return null;\n      };\n\n      let requiredModule = null;\n      try {\n        requiredModule = global.require(originalRequiredModulePath);\n      } catch (ex) {\n        console.error(\n          `Unable to load module \"${requirePath}\". Only files located in ${requireBasePath} are supported. Exception was:`,\n          ex\n        );\n        requiredModule = null;\n      }\n\n      // Whatever the result, always restore the original \"_load\" in Node.js \"module\".\n      module._load = originalNodeModuleLoad;\n      return requiredModule;\n    } else {\n      // On the web-app, modules need to be registered manually.\n      if (requirableModules[requirePath]) return requirableModules[requirePath];\n\n      console.error(\n        `Unable to load module \"${requirePath}\". Are you sure you registered it using ObjectsRenderingService.registerModule? This is mandatory for the web-app to have the file bundled.`\n      );\n\n      return null;\n    }\n  },\n  rgbOrHexToHexNumber, // Expose a ColorTransformer function, useful to manage different color types for the extensions\n  gd, // Expose gd so that it can be used by renderers\n  PIXI, // Expose PIXI so that it can be used by renderers\n  RenderedInstance, // Expose the base class for renderers so that it can be used by renderers\n};\n","// @flow\n// Note: this file don't use export/imports nor Flow to allow its usage from Node.js\n\nconst optionalRequire = require('../Utils/OptionalRequire.js');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nconst fs = optionalRequire('fs');\nconst path = optionalRequire('path');\nconst process = optionalRequire('process');\nvar isDarwin = process && /^darwin/.test(process.platform);\n\nconst tryPath = (\n  path /*: string*/,\n  onExists /*: string => void*/,\n  onNoAccess /*: Function*/\n) =>\n  fs.access(path, fs.constants.R_OK, err => {\n    if (!err) onExists(path);\n    else onNoAccess();\n  });\n\nconst findGDJS = () /*: Promise<{|gdjsRoot: string|}> */ => {\n  if (!path || !process || !fs) return Promise.reject(new Error('Unsupported'));\n\n  const appPath = app ? app.getAppPath() : process.cwd();\n\n  // The app path is [...]/*.app/Contents/Resources/app.asar on macOS\n  // and [...]/resources/app.asar on other OSes.\n  const pathToRoot = isDarwin ? '../../../../' : path.join('..', '..');\n  const rootPath = path.join(appPath, pathToRoot);\n\n  return new Promise((resolve, reject) => {\n    const onFound = gdjsRoot => resolve({ gdjsRoot });\n    const onNotFound = () => reject(new Error('Could not find GDJS'));\n\n    // First try to find GDJS in the parent folder (when newIDE is inside IDE)\n    tryPath(path.join(rootPath, '..', 'JsPlatform'), onFound, () => {\n      // Or in the resources (for a standalone newIDE)\n      tryPath(path.join(appPath, '..', 'GDJS'), onFound, () => {\n        // Or in the resources when developing with Electron\n        const devPath = path.join(\n          appPath,\n          '..',\n          '..',\n          'app',\n          'resources',\n          'GDJS'\n        );\n        tryPath(devPath, onFound, onNotFound);\n      });\n    });\n  });\n};\n\nmodule.exports = {\n  findGDJS,\n};\n","// @flow\nimport * as React from 'react';\nimport RaisedButton, {\n  type RaisedButtonPropsWithoutOnClick,\n} from './RaisedButton';\nimport ElementWithMenu from './Menu/ElementWithMenu';\nimport { type MenuItemTemplate } from './Menu/Menu.flow';\nimport { type I18n as I18nType } from '@lingui/core';\n\n// We support a subset of the props supported by Material-UI v0.x RaisedButton\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  ...RaisedButtonPropsWithoutOnClick,\n  buildMenuTemplate: (i18n: I18nType) => Array<MenuItemTemplate>,\n|};\n\nconst shouldNeverBeCalled = () => {\n  throw new Error('This RaisedButtonWithMenu onClick should never be called');\n};\n\n/**\n * A raised button based on Material-UI button, that has a menu displayed when clicked.\n */\nconst RaisedButtonWithMenu = (props: Props) => {\n  const { buildMenuTemplate, ...otherProps } = props;\n\n  return (\n    <ElementWithMenu\n      element={<RaisedButton {...otherProps} onClick={shouldNeverBeCalled} />}\n      buildMenuTemplate={buildMenuTemplate}\n    />\n  );\n};\n\nexport default RaisedButtonWithMenu;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport SemiControlledAutoComplete, {\n  type DataSource,\n  type SemiControlledAutoCompleteInterface,\n} from '../UI/SemiControlledAutoComplete';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport Add from '@material-ui/icons/Add';\nimport Brush from '@material-ui/icons/Brush';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n  type ResourceKind,\n} from '../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport ResourcesLoader from '../ResourcesLoader';\nimport { applyResourceDefaults } from './ResourceUtils';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport RaisedButtonWithMenu from '../UI/RaisedButtonWithMenu';\nimport { TextFieldWithButtonLayout } from '../UI/Layout';\nimport IconButton from '../UI/IconButton';\n\ntype Props = {|\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  resourcesLoader: typeof ResourcesLoader,\n  resourceKind: ResourceKind,\n  fullWidth?: boolean,\n  canBeReset?: boolean,\n  initialResourceName: string,\n  onChange: string => void,\n  floatingLabelText?: React.Node,\n  helperMarkdownText?: ?string,\n  hintText?: MessageDescriptor,\n  onRequestClose?: () => void,\n  onApply?: () => void,\n  margin?: 'none' | 'dense',\n  style?: {| alignSelf?: 'center' |},\n|};\n\ntype State = {|\n  notExistingError: boolean,\n  resourceName: string,\n|};\n\nexport default class ResourceSelector extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      notExistingError: false,\n      resourceName: props.initialResourceName || '',\n    };\n\n    const { project } = props;\n    if (project) {\n      this._loadFrom(project.getResourcesManager());\n    }\n  }\n\n  allResourcesNames: Array<string>;\n  autoCompleteData: DataSource;\n  _autoComplete: ?SemiControlledAutoCompleteInterface;\n\n  focus(selectAll: boolean = false) {\n    if (this._autoComplete) this._autoComplete.focus(selectAll);\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.initialResourceName !== this.props.initialResourceName) {\n      this.setState({\n        resourceName: nextProps.initialResourceName || '',\n      });\n    }\n  }\n\n  _getResourceSourceItems(): DataSource {\n    const sources = this.props.resourceSources || [];\n    return [\n      ...sources\n        .filter(source => source.kind === this.props.resourceKind)\n        .map(source => ({\n          text: '',\n          value: '',\n          translatableValue: source.displayName,\n          renderIcon: () => <Add />,\n          onClick: () => this._addFrom(source),\n        })),\n      {\n        type: 'separator',\n      },\n    ];\n  }\n\n  _loadFrom(resourcesManager: gdResourcesManager) {\n    this.allResourcesNames = resourcesManager.getAllResourceNames().toJSArray();\n    if (this.props.resourceKind) {\n      this.allResourcesNames = this.allResourcesNames.filter(resourceName => {\n        return (\n          resourcesManager.getResource(resourceName).getKind() ===\n          this.props.resourceKind\n        );\n      });\n    }\n    const resourceSourceItems = this._getResourceSourceItems();\n    const resourceItems = this.allResourcesNames.map(resourceName => ({\n      text: resourceName,\n      value: resourceName,\n    }));\n    this.autoCompleteData = [...resourceSourceItems, ...resourceItems];\n  }\n\n  _addFrom = (source: ResourceSource) => {\n    if (!source) return;\n\n    const { project, onChooseResource } = this.props;\n    onChooseResource({\n      initialSourceName: source.name,\n      multiSelection: false,\n      resourceKind: this.props.resourceKind,\n    })\n      .then(resources => {\n        if (!resources.length) return;\n        const resource = resources[0];\n        applyResourceDefaults(project, resource);\n\n        // addResource will check if a resource with the same name exists, and if it is\n        // the case, no new resource will be added.\n        project.getResourcesManager().addResource(resource);\n\n        this._loadFrom(project.getResourcesManager());\n        const resourceName: string = resource.getName();\n        this._onChangeResourceName(resourceName);\n\n        // Imperatively set the value of the autocomplete, as it can be (on Windows for example),\n        // still focused. This means that when it's then getting blurred, the value we\n        // set for the resource name would get erased by the one that was getting entered.\n        if (this._autoComplete)\n          this._autoComplete.forceInputValueTo(resourceName);\n\n        // Important, we are responsible for deleting the resources that were given to us.\n        // Otherwise we have a memory leak, as calling addResource is making a copy of the resource.\n        resources.forEach(resource => resource.delete());\n      })\n      .catch(err => {\n        // Should never happen, errors should be shown in the interface.\n        console.error('Unable to choose a resource', err);\n      });\n  };\n\n  _onResetResourceName = () => {\n    this.setState(\n      {\n        resourceName: '',\n        notExistingError: false,\n      },\n      () => {\n        if (this.props.onChange) this.props.onChange(this.state.resourceName);\n      }\n    );\n  };\n\n  _onChangeResourceName = (resourceName: string) => {\n    if (resourceName === '') {\n      this._onResetResourceName();\n      return;\n    }\n\n    const notExistingError =\n      this.allResourcesNames.indexOf(resourceName) === -1;\n\n    if (!notExistingError) {\n      if (this.props.onChange) this.props.onChange(resourceName);\n    }\n    this.setState({\n      resourceName,\n      notExistingError,\n    });\n  };\n\n  _editWith = (resourceExternalEditor: ResourceExternalEditor) => {\n    const { project, resourcesLoader, resourceKind } = this.props;\n    const { resourceName } = this.state;\n    const resourcesManager = project.getResourcesManager();\n    const initialResource = resourcesManager.getResource(resourceName);\n    let initialResourceMetadata = {};\n    const initialResourceMetadataRaw = initialResource.getMetadata();\n    if (initialResourceMetadataRaw) {\n      try {\n        initialResourceMetadata = JSON.parse(initialResourceMetadataRaw);\n      } catch (e) {\n        console.error('Malformed metadata', e);\n      }\n    }\n\n    if (resourceKind === 'image') {\n      const resourceNames = [];\n      if (resourcesManager.hasResource(resourceName)) {\n        resourceNames.push(resourceName);\n      }\n      const externalEditorOptions = {\n        project,\n        resourcesLoader,\n        singleFrame: true,\n        resourceNames,\n        extraOptions: {\n          fps: 0,\n          name: resourceName,\n          isLooping: false,\n          externalEditorData: initialResourceMetadata,\n        },\n        onChangesSaved: newResourceData => {\n          if (!newResourceData.length) return;\n\n          // Burst the ResourcesLoader cache to force images to be reloaded (and not cached by the browser).\n          resourcesLoader.burstUrlsCacheForResources(project, [\n            newResourceData[0].name,\n          ]);\n          this.props.onChange(newResourceData[0].name);\n        },\n      };\n      resourceExternalEditor.edit(externalEditorOptions);\n    } else if (resourceKind === 'audio') {\n      const externalEditorOptions = {\n        project,\n        resourcesLoader,\n        resourceNames: [resourceName],\n        extraOptions: {\n          externalEditorData: initialResourceMetadata,\n        },\n        onChangesSaved: newResourceData => {\n          // Burst the ResourcesLoader cache to force audio to be reloaded (and not cached by the browser).\n          resourcesLoader.burstUrlsCacheForResources(project, [\n            newResourceData[0].name,\n          ]);\n          this.props.onChange(newResourceData[0].name);\n        },\n      };\n      resourceExternalEditor.edit(externalEditorOptions);\n    } else if (resourceKind === 'json') {\n      const externalEditorOptions = {\n        project,\n        resourcesLoader,\n        resourceNames: [resourceName],\n        extraOptions: {\n          initialResourceMetadata,\n        },\n        onChangesSaved: newResourceData => {\n          this.props.onChange(newResourceData[0].name);\n        },\n      };\n      resourceExternalEditor.edit(externalEditorOptions);\n    }\n  };\n\n  render() {\n    const errorText = this.state.notExistingError\n      ? 'This resource does not exist in the game'\n      : null;\n\n    const externalEditors = this.props.resourceExternalEditors.filter(\n      externalEditor => externalEditor.kind === this.props.resourceKind\n    );\n    return (\n      <TextFieldWithButtonLayout\n        noFloatingLabelText={!this.props.floatingLabelText}\n        margin={this.props.margin}\n        renderTextField={() => (\n          <SemiControlledAutoComplete\n            style={this.props.style}\n            floatingLabelText={this.props.floatingLabelText}\n            helperMarkdownText={this.props.helperMarkdownText}\n            hintText={this.props.hintText}\n            openOnFocus\n            dataSource={this.autoCompleteData || []}\n            value={this.state.resourceName}\n            onChange={this._onChangeResourceName}\n            errorText={errorText}\n            fullWidth={this.props.fullWidth}\n            margin={this.props.margin}\n            onRequestClose={this.props.onRequestClose}\n            onApply={this.props.onApply}\n            ref={autoComplete => (this._autoComplete = autoComplete)}\n          />\n        )}\n        renderButton={style => (\n          <React.Fragment>\n            {this.props.canBeReset && (\n              <IconButton\n                size=\"small\"\n                onClick={() => {\n                  this._onResetResourceName();\n                }}\n              >\n                <BackspaceIcon />\n              </IconButton>\n            )}\n            {!!externalEditors.length ? (\n              <RaisedButtonWithMenu\n                style={style}\n                icon={<Brush />}\n                label={\n                  this.state.resourceName ? (\n                    <Trans>Edit</Trans>\n                  ) : (\n                    <Trans>Create</Trans>\n                  )\n                }\n                primary\n                buildMenuTemplate={() =>\n                  externalEditors.map(externalEditor => ({\n                    label: externalEditor.displayName,\n                    click: () => this._editWith(externalEditor),\n                  }))\n                }\n              />\n            ) : null}\n          </React.Fragment>\n        )}\n      />\n    );\n  }\n}\n","// @flow\nimport ResourcesLoader from '../ResourcesLoader';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport { toNewGdMapStringString } from '../Utils/MapStringString';\nconst fs = optionalRequire('fs');\nconst path = optionalRequire('path');\nconst gd: libGDevelop = global.gd;\n\nexport const createOrUpdateResource = (\n  project: gdProject,\n  newlyCreatedResource: gdResource,\n  resourceName: string\n) => {\n  const resourcesManager = project.getResourcesManager();\n  if (resourcesManager.hasResource(resourceName)) {\n    resourcesManager.removeResource(resourceName);\n  }\n  newlyCreatedResource.setFile(resourceName);\n  newlyCreatedResource.setName(resourceName);\n  applyResourceDefaults(project, newlyCreatedResource);\n\n  // Important, we are responsible for deleting the resources that was given to us.\n  // Otherwise we have a memory leak.\n  resourcesManager.addResource(newlyCreatedResource);\n\n  newlyCreatedResource.delete();\n};\n\n/**\n * Get the local path of a resource. This works by asking the ResourcesLoader\n * for the resource URL, then stripping anything that is specific to a URL.\n */\nexport const getLocalResourceFullPath = (\n  project: gdProject,\n  resourceName: string\n) => {\n  let resourcePath = ResourcesLoader.getResourceFullUrl(\n    project,\n    resourceName,\n    {}\n  ).substring(7 /* Remove \"file://\" from the URL to get a local path */);\n\n  if (resourcePath.indexOf('?cache=') !== -1) {\n    // Remove, if needed, the cache bursting argument from the URL.\n    resourcePath = resourcePath.substring(\n      0,\n      resourcePath.lastIndexOf('?cache=')\n    );\n  }\n  return resourcePath;\n};\n\nexport const isPathInProjectFolder = (\n  project: gdProject,\n  resourcePath: string\n) => {\n  const projectPath = path.dirname(project.getProjectFile());\n  return resourcePath.includes(projectPath);\n};\n\nexport const copyAllToProjectFolder = (\n  project: gdProject,\n  resourcePaths: Array<string>\n): Promise<Array<string>> => {\n  if (!fs || !path) {\n    return Promise.resolve(resourcePaths);\n  }\n\n  const projectPath = path.dirname(project.getProjectFile());\n\n  return Promise.all(\n    resourcePaths.map(resourcePath => {\n      if (isPathInProjectFolder(project, resourcePath)) {\n        return resourcePath;\n      }\n\n      const resourceBasename = path.basename(resourcePath),\n        fileExtension = path.extname(resourceBasename),\n        fileNameWithoutExtension = path.basename(\n          resourceBasename,\n          fileExtension\n        );\n\n      const newFileNameWithoutExtension = newNameGenerator(\n        fileNameWithoutExtension,\n        tentativeFileName => {\n          const tentativePath =\n            path.join(projectPath, tentativeFileName) + fileExtension;\n          return fs.existsSync(tentativePath);\n        }\n      );\n\n      const resourceNewPath = path.join(\n        projectPath,\n        newFileNameWithoutExtension + fileExtension\n      );\n\n      return new Promise(resolve => {\n        fs.copyFile(resourcePath, resourceNewPath, err => {\n          if (err) {\n            return resolve(resourcePath);\n          }\n\n          return resolve(resourceNewPath);\n        });\n      });\n    })\n  );\n};\n\nexport const getResourceFilePathStatus = (\n  project: gdProject,\n  resourceName: string\n) => {\n  if (!fs) return '';\n  const resourcePath = path.normalize(\n    getLocalResourceFullPath(project, resourceName)\n  );\n\n  // The resource path doesn't exist\n  if (!fs.existsSync(resourcePath)) return 'error';\n\n  // The resource path is outside of the project folder\n  if (!isPathInProjectFolder(project, resourcePath)) return 'warning';\n\n  // The resource path seems ok\n  return '';\n};\n\nexport const applyResourceDefaults = (\n  project: gdProject,\n  newResource: gdResource\n) => {\n  if (newResource instanceof gd.ImageResource) {\n    newResource.setSmooth(project.getScaleMode() !== 'nearest');\n  }\n};\n\n/**\n * Refactor an entire project to rename a resource\n * @param project The project\n * @param resourceNewNames The map from old resource name to new resource name.\n */\nexport const renameResourcesInProject = (\n  project: gdProject,\n  resourceNewNames: { [string]: string }\n) => {\n  const renamedResourcesMap = toNewGdMapStringString(resourceNewNames);\n  const resourcesRenamer = new gd.ResourcesRenamer(renamedResourcesMap);\n  renamedResourcesMap.delete();\n  project.exposeResources(resourcesRenamer);\n  resourcesRenamer.delete();\n};\n","// @flow\nimport * as React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = {\n  progress: { marginRight: 8, verticalAlign: 'middle' },\n};\n\nexport default ({\n  children,\n  isLoading,\n}: {\n  children: React.Node,\n  isLoading: ?boolean,\n}) => (\n  <span>\n    {isLoading && <CircularProgress size={20} style={styles.progress} />}\n    {children}\n  </span>\n);\n","// @flow\nimport axios from 'axios';\nimport { GDevelopUserApi } from './ApiConfigs';\n\nimport { type AuthenticatedUser } from '../../Profile/AuthenticatedUserContext';\n\nexport const TRIVIAL_FIRST_EVENT = 'trivial_first-event';\nexport const TRIVIAL_FIRST_BEHAVIOR = 'trivial_first-behavior';\nexport const TRIVIAL_FIRST_PREVIEW = 'trivial_first-preview';\nexport const TRIVIAL_FIRST_WEB_EXPORT = 'trivial_first-web-export';\nexport const TRIVIAL_FIRST_EXTENSION = 'trivial_first-extension';\nexport const TRIVIAL_FIRST_EFFECT = 'trivial_first-effect';\nexport const TRIVIAL_FIRST_DEBUG = 'trivial_first-debug';\n\nexport type Badge = {|\n  seen: boolean,\n  unlockedAt: string,\n  userId: string,\n  achievementId: string,\n|};\n\nexport type Achievement = {|\n  id: string,\n  category: string,\n  name: string,\n  description: string,\n|};\n\nexport type AchievementWithBadgeData = {|\n  ...Achievement,\n  seen?: boolean,\n  unlockedAt: ?Date,\n|};\n\nconst isAchievementAlreadyClaimed = (\n  badges: Badge[],\n  achievementId: string\n): boolean => {\n  return badges.map(badge => badge.achievementId).includes(achievementId);\n};\n\nconst createOrEnsureBadgeForUser = async (\n  authenticatedUser: AuthenticatedUser,\n  achievementId: string\n): Promise<?Badge> => {\n  const {\n    badges,\n    firebaseUser,\n    getAuthorizationHeader,\n    onBadgesChanged,\n  } = authenticatedUser;\n  if (!badges || !firebaseUser) return null;\n  if (isAchievementAlreadyClaimed(badges, achievementId)) {\n    return null;\n  }\n\n  const userId = firebaseUser.uid;\n  try {\n    const authorizationHeader = await getAuthorizationHeader();\n    const response = await axios.post(\n      `${GDevelopUserApi.baseUrl}/user/${userId}/badge`,\n      {\n        achievementId,\n      },\n      {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      }\n    );\n    onBadgesChanged();\n    return response.data;\n  } catch (err) {\n    if (err.response && err.response.status === 409) {\n      console.warn('Badge already exists');\n    } else {\n      throw err;\n    }\n  }\n};\n\n/**\n * Check if user has already claimed the achievement, to avoid executing\n * any extra code if that's the case.\n */\nexport const addCreateBadgePreHookIfNotClaimed = <\n  T: (...args: Array<any>) => any\n>(\n  authenticatedUser: AuthenticatedUser,\n  achievementId: string,\n  callback: T\n): T => {\n  const { badges } = authenticatedUser;\n  if (!badges) return callback;\n  if (isAchievementAlreadyClaimed(badges, achievementId)) {\n    return callback;\n  }\n\n  // $FlowFixMe - hard to (or can't?) express the exact function being passed.\n  return (...args) => {\n    try {\n      createOrEnsureBadgeForUser(authenticatedUser, achievementId);\n    } catch (err) {\n      console.error(`Couldn't create badge ${achievementId}; ${err}`);\n    }\n    return callback.apply(null, args);\n  };\n};\n\nexport const getAchievements = (): Promise<Array<Achievement>> => {\n  return axios\n    .get(`${GDevelopUserApi.baseUrl}/achievement`)\n    .then(response => response.data);\n};\n\nexport const markBadgesAsSeen = async (\n  authenticatedUser: AuthenticatedUser\n): Promise<?void> => {\n  const {\n    badges,\n    firebaseUser,\n    getAuthorizationHeader,\n    onBadgesChanged,\n  } = authenticatedUser;\n  if (!badges || !firebaseUser) return null;\n\n  const unseenBadges = badges.filter(badge => !badge.seen);\n  if (unseenBadges.length === 0) return;\n\n  const userId = firebaseUser.uid;\n  try {\n    const authorizationHeader = await getAuthorizationHeader();\n    const response = await axios.patch(\n      `${GDevelopUserApi.baseUrl}/user/${userId}/badge`,\n      unseenBadges.map(badge => ({\n        achievementId: badge.achievementId,\n        seen: true,\n      })),\n      {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      }\n    );\n    onBadgesChanged();\n    return response.data;\n  } catch (err) {\n    console.error(`Couldn't mark badges as seen: ${err}`);\n  }\n};\n\nexport const compareAchievements = (\n  a: AchievementWithBadgeData,\n  b: AchievementWithBadgeData\n) => {\n  if (b.unlockedAt && a.unlockedAt) {\n    return b.unlockedAt - a.unlockedAt;\n  } else if (a.unlockedAt && !b.unlockedAt) {\n    return -1;\n  } else if (!a.unlockedAt && b.unlockedAt) {\n    return 1;\n  } else {\n    return 0;\n  }\n};\n","// @flow\nimport * as React from 'react';\nimport { type CommandWithOptions, type SimpleCommand } from './CommandManager';\nimport CommandsContext from './CommandsContext';\nimport { type CommandName } from './CommandsList';\n\n/**\n * React hook for dynamically registering and deregistering a simple command\n */\nexport const useCommand = (\n  commandName: CommandName,\n  enabled: boolean,\n  command: SimpleCommand\n) => {\n  const commandManager = React.useContext(CommandsContext);\n  const { handler } = command;\n  React.useEffect(\n    () => {\n      if (!enabled) return;\n      commandManager.registerCommand(commandName, { handler });\n      return () => commandManager.deregisterCommand(commandName);\n    },\n    [commandManager, commandName, enabled, handler]\n  );\n};\n\n/**\n * React hook for dynamically registering and deregistering command with options\n */\nexport const useCommandWithOptions = (\n  commandName: CommandName,\n  enabled: boolean,\n  command: CommandWithOptions\n) => {\n  const commandManager = React.useContext(CommandsContext);\n  const { generateOptions } = command;\n  React.useEffect(\n    () => {\n      if (!enabled) return;\n      commandManager.registerCommand(commandName, { generateOptions });\n      return () => commandManager.deregisterCommand(commandName);\n    },\n    [commandManager, commandName, enabled, generateOptions]\n  );\n};\n\n/**\n * React component for using useCommand hook in\n * class components\n */\nexport const UseCommandHook = (props: {|\n  name: CommandName,\n  enabled: boolean,\n  command: SimpleCommand,\n|}) => {\n  useCommand(props.name, props.enabled, props.command);\n  return null;\n};\n\n/**\n * React component for using useCommandWithOptions\n * hook in class components\n */\nexport const UseCommandWithOptionsHook = (props: {|\n  name: CommandName,\n  enabled: boolean,\n  command: CommandWithOptions,\n|}) => {\n  useCommandWithOptions(props.name, props.enabled, props.command);\n  return null;\n};\n","// @flow\nimport * as PIXI from 'pixi.js-legacy';\nimport PixiResourcesLoader from '../../ObjectsRendering/PixiResourcesLoader';\n\n/**\n * RenderedInstance is the base class used for creating renderers of instances,\n * which display on the scene editor, using Pixi.js, the instance of an object (see InstancesEditor).\n */\nexport default class RenderedInstance {\n  _project: gdProject;\n  _layout: gdLayout;\n  _instance: gdInitialInstance;\n  _associatedObject: gdObject;\n  _pixiContainer: PIXI.Container;\n  _pixiResourcesLoader: PixiResourcesLoader;\n  _pixiObject: any;\n  wasUsed: boolean;\n\n  constructor(\n    project: gdProject,\n    layout: gdLayout,\n    instance: gdInitialInstance,\n    associatedObject: gdObject,\n    pixiContainer: PIXI.Container,\n    pixiResourcesLoader: PixiResourcesLoader\n  ) {\n    this._pixiObject = null;\n    this._instance = instance;\n    this._associatedObject = associatedObject;\n    this._pixiContainer = pixiContainer;\n    this._project = project;\n    this._layout = layout;\n    this._pixiResourcesLoader = pixiResourcesLoader;\n    this.wasUsed = true; //Used by InstancesRenderer to track rendered instance that are not used anymore.\n  }\n\n  /**\n   * Convert an angle from degrees to radians.\n   */\n  static toRad(angleInDegrees: number) {\n    return (angleInDegrees / 180) * 3.14159;\n  }\n\n  /**\n   * Called when the scene editor is rendered.\n   */\n  update() {\n    //Nothing to do.\n  }\n\n  getPixiObject() {\n    return this._pixiObject;\n  }\n\n  getInstance() {\n    return this._instance;\n  }\n\n  /**\n   * Called to notify the instance renderer that its associated instance was removed from\n   * the scene. The PIXI object should probably be removed from the container: This is what\n   * the default implementation of the method does.\n   */\n  onRemovedFromScene() {\n    if (this._pixiObject !== null)\n      this._pixiContainer.removeChild(this._pixiObject);\n  }\n\n  getOriginX() {\n    return 0;\n  }\n\n  getOriginY() {\n    return 0;\n  }\n\n  /**\n   * Return the width of the instance when the instance doesn't have a custom size.\n   */\n  getDefaultWidth() {\n    return 32;\n  }\n\n  /**\n   * Return the height of the instance when the instance doesn't have a custom size.\n   */\n  getDefaultHeight() {\n    return 32;\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport TextField from '../TextField';\nimport ColorPicker, { type ColorResult } from './ColorPicker';\nimport {\n  rgbStringAndAlphaToRGBColor,\n  rgbColorToRGBString,\n} from '../../Utils/ColorTransformer';\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'inline-block',\n  },\n  picker: {\n    position: 'absolute',\n    right: '8px',\n    top: '19px',\n  },\n};\n\ntype Props = {|\n  fullWidth?: boolean,\n  disableAlpha?: boolean,\n  id?: string,\n  floatingLabelText?: string | React.Node,\n  helperMarkdownText?: ?string,\n  onChange: (string, ?number) => void,\n  color: string,\n  alpha?: number,\n|};\n\ntype State = {|\n  color: string,\n  alpha: number,\n|};\n\nexport default class ColorField extends React.Component<Props, State> {\n  state = {\n    color: this.props.color,\n    // alpha can be equal to 0, so we have to check if it is not undefined\n    alpha:\n      !this.props.disableAlpha && this.props.alpha !== undefined\n        ? this.props.alpha\n        : 1,\n  };\n\n  _textField: ?TextField = null;\n\n  _handleChange = (color: string, alpha: number) => {\n    this.setState({ color, alpha });\n  };\n\n  _handleBlur = () => {\n    // change alpha value to be within allowed limits (0-1)\n    let alpha = parseFloat(this.state.alpha);\n    if (alpha < 0) alpha = 0;\n    if (alpha > 1) alpha = 1;\n    this.setState({ alpha });\n    this.props.onChange(this.state.color, alpha);\n  };\n\n  _handlePickerChange = (color: ColorResult) => {\n    const rgbString = rgbColorToRGBString(color.rgb);\n    const alpha = this.props.disableAlpha ? 1 : color.rgb.a;\n    this.setState({ color: rgbString, alpha });\n    this.props.onChange(rgbString, alpha);\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          ...styles.container,\n          width: this.props.fullWidth ? '100%' : undefined,\n        }}\n      >\n        <TextField\n          id={this.props.id}\n          fullWidth={this.props.disableAlpha}\n          style={!this.props.disableAlpha ? { width: '60%' } : undefined}\n          floatingLabelText={this.props.floatingLabelText}\n          floatingLabelFixed\n          helperMarkdownText={this.props.helperMarkdownText}\n          type=\"text\"\n          hintText={t`Text in the format R;G;B, like 100;200;180`}\n          value={this.state.color}\n          onChange={event =>\n            this._handleChange(event.target.value, this.state.alpha)\n          }\n          onBlur={this._handleBlur}\n          ref={textField => (this._textField = textField)}\n        />\n        {!this.props.disableAlpha && (\n          <TextField\n            id={`${this.props.id || ''}-alpha`}\n            floatingLabelText=\"Alpha\"\n            floatingLabelFixed\n            style={{ width: '30%' }}\n            hintText={t`Number between 0 and 1`}\n            value={this.state.alpha.toString()}\n            onChange={(event, value) =>\n              this._handleChange(this.state.color, parseFloat(value))\n            }\n            onBlur={this._handleBlur}\n            ref={textField => (this._textField = textField)}\n            type=\"number\"\n            step={0.1}\n          />\n        )}\n        <div style={styles.picker}>\n          <ColorPicker\n            disableAlpha={this.props.disableAlpha}\n            onChangeComplete={this._handlePickerChange}\n            color={rgbStringAndAlphaToRGBColor(\n              this.state.color,\n              this.state.alpha\n            )}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport MUITable from '@material-ui/core/Table';\nimport MUITableBody from '@material-ui/core/TableBody';\nimport MUITableCell from '@material-ui/core/TableCell';\nimport MUITableHead from '@material-ui/core/TableHead';\nimport MUITableRow from '@material-ui/core/TableRow';\n\ntype TableProps = {|\n  children: React.Node, // Should be TableHeader, TableBody or TableFooter\n|};\n\n/**\n * A Table based on Material-UI Table.\n * See https://material-ui.com/components/tables/\n */\nexport class Table extends React.Component<TableProps, {||}> {\n  render() {\n    return <MUITable size=\"small\" {...this.props} />;\n  }\n}\n\ntype TableBodyProps = {|\n  children?: React.Node, // Should be TableRow\n|};\n\n/**\n * A TableBody based on Material-UI TableBody.\n */\nexport class TableBody extends React.Component<TableBodyProps, {||}> {\n  render() {\n    return <MUITableBody {...this.props} />;\n  }\n}\n\ntype TableHeaderProps = {|\n  children: React.Node, // Should be a TableRow\n|};\n\n/**\n * A TableHeader based on Material-UI TableHead.\n */\nexport class TableHeader extends React.Component<TableHeaderProps, {||}> {\n  render() {\n    return <MUITableHead {...this.props} />;\n  }\n}\n\ntype TableHeaderColumnProps = {|\n  children?: React.Node, // Text of the column\n  style?: {|\n    textAlign: 'left' | 'right',\n    paddingRight: number,\n  |},\n|};\n\n/**\n * A TableHeaderColumn based on Material-UI TableCell.\n */\nexport class TableHeaderColumn extends React.Component<\n  TableHeaderColumnProps,\n  {||}\n> {\n  render() {\n    return <MUITableCell {...this.props} />;\n  }\n}\n\ntype TableRowProps = {|\n  children: React.Node,\n  style?: {|\n    backgroundColor: string,\n  |},\n|};\n\n/**\n * A TableRow based on Material-UI TableRow.\n */\nexport class TableRow extends React.Component<TableRowProps, {||}> {\n  render() {\n    return <MUITableRow {...this.props} />;\n  }\n}\n\ntype TableRowColumnProps = {|\n  children?: React.Node, // Content for the cell\n  style?: {|\n    width?: number,\n    paddingLeft?: number,\n    paddingRight?: number,\n    textAlign?: string,\n  |},\n|};\n\n/**\n * A TableRowColumn based on Material-UI TableRowColumn.\n */\nexport class TableRowColumn extends React.Component<TableRowColumnProps, {||}> {\n  render() {\n    return <MUITableCell {...this.props} />;\n  }\n}\n","// @flow\n\n/**\n * Checks if a dialog or overlay is currently open on screen\n */\nconst isDialogOpen = () => {\n  // If currently focused element is inside MainFrame div, we can\n  // be sure that no dialog or overlay is opened.\n  // But clicking on some empty spaces like in properties panel leads\n  // to <body> element getting focused, so we also need to check if\n  // currently focused element is <body>.\n  const body = document.body;\n  const activeEl = document.activeElement;\n  const mainFrame = document.querySelector('div.main-frame');\n  const isInMainframe = mainFrame && mainFrame.contains(activeEl);\n  const isBody = activeEl === body;\n  return !isBody && !isInMainframe;\n};\n\nexport default isDialogOpen;\n","// @flow\n\nconst reservedShortcuts = [\n  'CmdOrCtrl+KeyZ', // Undo\n  'CmdOrCtrl+KeyY', // Redo\n  'CmdOrCtrl+Shift+KeyZ', // Redo\n  'CmdOrCtrl+KeyX', // Cut\n  'CmdOrCtrl+KeyC', // Copy\n  'CmdOrCtrl+KeyV', // Paste\n  'CmdOrCtrl+Shift+KeyV', // Paste with style\n  'CmdOrCtrl+KeyA', // Select all\n  'Delete', // Delete\n  'CmdOrCtrl+Shift+KeyI', // Open dev tools\n  'F11', // Toggle fullscreen\n\n  'NumpadAdd', // Scene: Zoom in\n  'CmdOrCtrl+Equal', // Scene: Zoom in\n  'NumpadSubtract', // Scene: Zoom out\n  'CmdOrCtrl+Minus', // Scene: Zoom out\n\n  // TODO: Following shortcuts correspond to actions\n  // that have overlapping commands\n  'CmdOrCtrl+KeyF', // Events: Search\n];\n\nexport default reservedShortcuts;\n","// @flow\n\n/**\n * Checks if the user is currently typing text\n */\nconst isUserTyping = () => {\n  const activeElement = document.activeElement;\n  if (!activeElement) return false;\n  // Check if focused element is part of a text entry HTML element\n  const textEditorSelectors = 'textarea, input, [contenteditable=\"true\"]';\n  if (activeElement.closest(textEditorSelectors)) return true;\n  return false;\n};\n\nexport default isUserTyping;\n","// @flow\nimport * as React from 'react';\nimport isDialogOpen from '../UI/OpenedDialogChecker';\nimport { isMacLike } from '../Utils/Platform';\nimport reservedShortcuts from './ReservedShortcuts';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport commandsList, { type CommandName } from '../CommandPalette/CommandsList';\nimport isUserTyping from './IsUserTyping';\nimport defaultShortcuts, { type ShortcutMap } from './DefaultShortcuts';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\n\n// Valid action keys\ntype KeyType =\n  | 'alphabet' // A-Z\n  | 'number' // Numrow 0-9\n  | 'fn-row' // F1-F12\n  | 'numpad-arith' // Numpad+, Numpad-\n  | 'numrow-arith' // Numrow-, Numrow=\n  | 'other'; // Tab, Space\n\n/**\n * Given a key code, gives the associated KeyType.\n * Returns null if the key code can't be categorised.\n */\nconst getKeyTypeFromCode = (code: string): KeyType | null => {\n  if (!code) return null;\n  if (code.indexOf('Key') === 0) return 'alphabet';\n  if (code.indexOf('Digit') === 0) return 'number';\n  if (code.indexOf('F') === 0) return 'fn-row';\n  if (code === 'NumpadAdd' || code === 'NumpadSubtract') return 'numpad-arith';\n  if (code === 'Equal' || code === 'Minus') return 'numrow-arith';\n  if (code === 'Tab' || code === 'Space') return 'other';\n  return null;\n};\n\n/**\n * Returns possibly partial shortcut string corresponding to given event object\n */\nexport const getShortcutStringFromEvent = (e: KeyboardEvent): string => {\n  let shortcutString = '';\n  if (e.ctrlKey || e.metaKey) shortcutString += 'CmdOrCtrl+';\n  if (e.shiftKey) shortcutString += 'Shift+';\n  if (e.altKey) shortcutString += 'Alt+';\n\n  const code = e.code || ''; // Somehow `code` was sometimes reported to be undefined.\n  const keyType = getKeyTypeFromCode(code);\n  if (keyType) shortcutString += code;\n  return shortcutString;\n};\n\n/**\n * Checks if the given event corresponds to a valid shortcut press.\n * Does not check if shortcut is reserved or not.\n */\nexport const isValidShortcutEvent = (e: KeyboardEvent): boolean => {\n  // Check if action key is a shortcut supported key\n  const code = e.code || ''; // Somehow `code` was sometimes reported to be undefined.\n  const keyType = getKeyTypeFromCode(code);\n  if (!keyType) return false;\n\n  const ctrlOrCmdPressed = e.ctrlKey || e.metaKey;\n  const altPressed = e.altKey;\n\n  // Check keytype-specific restrictions\n  if (keyType === 'other') {\n    // Tab and Space may clash with keyboard navigation - Ctrl or Alt required\n    if (!ctrlOrCmdPressed && !altPressed) return false;\n  }\n\n  return true;\n};\n\n/**\n * Extracts shortcut-related information from given event object\n */\nexport const getShortcutMetadataFromEvent = (\n  e: KeyboardEvent\n): {| shortcutString: string, isValid: boolean |} => {\n  const shortcutString = getShortcutStringFromEvent(e);\n  const isValidKey = isValidShortcutEvent(e);\n  const isReserved = reservedShortcuts.includes(shortcutString);\n  return { shortcutString, isValid: isValidKey && !isReserved };\n};\n\n/**\n * Patches default shortcuts set with user's custom shortcuts and\n * returns the full shortcut map obtained.\n */\nexport const useShortcutMap = (): ShortcutMap => {\n  const preferences = React.useContext(PreferencesContext);\n  const userShortcutMap = preferences.values.userShortcutMap;\n  return { ...defaultShortcuts, ...userShortcutMap };\n};\n\n/**\n * Listens for keyboard shortcuts and launches\n * callback with corresponding command\n */\nexport const useKeyboardShortcuts = (onRunCommand: CommandName => void) => {\n  const shortcutMap = useShortcutMap();\n\n  React.useEffect(\n    () => {\n      const handler = (e: KeyboardEvent) => {\n        // Extract shortcut from event object and check if it's valid\n        const shortcutData = getShortcutMetadataFromEvent(e);\n        if (!shortcutData.isValid) return;\n\n        // Get corresponding command, if it exists\n        const commandName = Object.keys(shortcutMap).find(\n          name => shortcutMap[name] === shortcutData.shortcutString\n        );\n        if (!commandName) return;\n\n        // On desktop app, ignore shortcuts that are handled by Electron\n        if (electron && commandsList[commandName].handledByElectron) return;\n\n        // e.preventDefault tends to block user from typing,\n        // so do it only if user is not typing.\n        if (isUserTyping()) return;\n        e.preventDefault();\n\n        // Discard shortcut presses if a dialog is open\n        if (isDialogOpen()) return;\n\n        onRunCommand(commandName);\n      };\n\n      document.addEventListener('keydown', handler);\n      return () => document.removeEventListener('keydown', handler);\n    },\n    [onRunCommand, shortcutMap]\n  );\n};\n\n/**\n * Converts an action key's e.code value to user-friendly string\n * For example, \"KeyA\" -> \"A\", \"NumpadAdd\" -> \"Plus\"\n */\nconst getKeyDisplayName = (code: string) => {\n  const keyType = getKeyTypeFromCode(code);\n  if (keyType === 'alphabet') return code.slice(3);\n  if (keyType === 'number') return code.slice(5);\n  if (keyType === 'fn-row') return code;\n  if (keyType === 'numpad-arith') return code === 'NumpadAdd' ? 'Num+' : 'Num-';\n  if (keyType === 'numrow-arith') return code === 'Minus' ? '-' : '=';\n  return code; // Tab, Space\n};\n\n/**\n * Parses shortcut string into array of platform-specific key strings\n */\nexport const getShortcutDisplayName = (shortcutString: string) => {\n  return shortcutString\n    .split('+')\n    .map<string>(keyCode => {\n      if (keyCode === 'CmdOrCtrl') return isMacLike() ? 'Cmd' : 'Ctrl';\n      if (keyCode === 'Shift' || keyCode === 'Alt') return keyCode;\n      return getKeyDisplayName(keyCode);\n    })\n    .join(' + ');\n};\n\n/**\n * Takes key code and returns Electron string for the key\n */\nconst getElectronKeyString = (code: string) => {\n  const keyType = getKeyTypeFromCode(code);\n  if (keyType === 'alphabet') return code.slice(3);\n  if (keyType === 'number') return code.slice(5);\n  if (keyType === 'fn-row') return code;\n  if (keyType === 'numpad-arith')\n    return code === 'NumpadAdd' ? 'numadd' : 'numsub';\n  if (keyType === 'numrow-arith') return code === 'Minus' ? '-' : '=';\n  return code; // Tab, Space\n};\n\n/**\n * Converts given shortcut string into an Electron accelerator string\n */\nexport const getElectronAccelerator = (shortcutString: string) => {\n  return shortcutString\n    .split('+')\n    .map<string>(keyCode => {\n      if (keyCode === 'CmdOrCtrl' || keyCode === 'Shift' || keyCode === 'Alt')\n        return keyCode;\n      return getElectronKeyString(keyCode);\n    })\n    .join('+');\n};\n","// @flow\n\nexport const isRelativePathToDocumentationRoot = (path: string) => {\n  return path.startsWith('/');\n};\n\nexport const isDocumentationAbsoluteUrl = (path: string) => {\n  return path.startsWith('http://') || path.startsWith('https://');\n};\n\nexport const getHelpLink = (path: string): string => {\n  if (isRelativePathToDocumentationRoot(path))\n    return `http://wiki.compilgames.net/doku.php/gdevelop5${path}?utm_source=gdevelop&utm_medium=help-link`;\n\n  if (isDocumentationAbsoluteUrl(path)) return path;\n\n  return '';\n};\n","// @flow\nimport optionalRequire from './OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst electronClipboard = electron ? electron.clipboard : null;\n\nexport type ClipboardKind = string;\n\nlet internalClipboard = '';\n\nconst mangleClipboardKind = (kind: ClipboardKind): string => {\n  // Mangle the name with GDevelop specific strings and random\n  // characters so that the probability that something that is not\n  // a valid GDevelop clipboard content is recognized as valid is almost 0.\n  return 'GDEVELOP_' + kind + '_CLIPBOARD_KIND-jsBdHbLy912y8Rc';\n};\n\n/**\n * Access to properties and type objects safely (ensuring no crash and no exception\n * in case the expected type is not the one found or totally different than assumed).\n *\n * Each method returns null if the expected type is not found.\n *\n * Useful to deal with arbitrary content coming from the Clipboard.\n */\nexport class SafeExtractor {\n  static extractNumberProperty(\n    anything: any,\n    propertyName: string\n  ): number | null {\n    const object = this.extractObject(anything);\n    if (!object) return null;\n\n    const property = anything[propertyName];\n\n    if (typeof property !== 'number') return null;\n\n    return property;\n  }\n\n  static extractStringProperty(\n    anything: any,\n    propertyName: string\n  ): string | null {\n    const object = this.extractObject(anything);\n    if (!object) return null;\n\n    const property = anything[propertyName];\n\n    if (typeof property !== 'string') return null;\n\n    return property;\n  }\n\n  static extractObjectProperty(\n    anything: any,\n    propertyName: string\n  ): Object | null {\n    const object = this.extractObject(anything);\n    if (!object) return null;\n\n    const property = anything[propertyName];\n\n    return this.extractObject(property);\n  }\n\n  static extractArrayProperty(\n    anything: any,\n    propertyName: string\n  ): Array<any> | null {\n    const object = this.extractObject(anything);\n    if (!object) return null;\n\n    const property = anything[propertyName];\n\n    return this.extractArray(property);\n  }\n\n  static extractObject(anything: any): Object | null {\n    if (\n      anything === null ||\n      anything === undefined ||\n      typeof anything !== 'object' ||\n      Array.isArray(anything)\n    )\n      return null;\n\n    return anything;\n  }\n\n  static extractArray(anything: any): Array<any> | null {\n    if (\n      anything === null ||\n      anything === undefined ||\n      typeof anything !== 'object' ||\n      !Array.isArray(anything)\n    )\n      return null;\n\n    return anything;\n  }\n}\n\nexport default class Clipboard {\n  static set(kind: ClipboardKind, object: any) {\n    const text = JSON.stringify({\n      '000kind': mangleClipboardKind(kind), /// 000 to ensure the key is written first.\n      content: object,\n    });\n\n    if (electronClipboard) {\n      electronClipboard.writeText(text);\n    } else {\n      internalClipboard = text;\n    }\n  }\n\n  /**\n   * Quickly check that the clipboard content *should* be containing valid JSON content\n   * of the specified kind.\n   *\n   * This is only a quick check and not a guarantee. Use `Clipboard.get` to get the value.\n   */\n  static has(kind: ClipboardKind): boolean {\n    let text = '';\n    if (electronClipboard) {\n      text = electronClipboard.readText();\n    } else {\n      text = internalClipboard;\n    }\n\n    return text.indexOf(mangleClipboardKind(kind)) === 12; /// 12 is the position of '000kind' value\n  }\n\n  /**\n   * Get the content of the clipboard. Will return null if not valid JSON.\n   *\n   * Even after parsing, content is **arbitrary** and should be accessed with `SafeExtractor`\n   * to ensure everything is accessed without risk of having a wrong type, which could\n   * crash the app.\n   */\n  static get(kind: ClipboardKind): ?any {\n    if (!Clipboard.has(kind)) return null;\n\n    let text = '';\n    if (electronClipboard) {\n      text = electronClipboard.readText();\n    } else {\n      text = internalClipboard;\n    }\n\n    try {\n      const parsedText = JSON.parse(text);\n      return parsedText.content;\n    } catch (e) {\n      console.warn('The clipboard content is not valid JSON');\n      return null;\n    }\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport InlineCheckbox from '../UI/InlineCheckbox';\nimport ResourceSelector from '../ResourcesList/ResourceSelector';\nimport ResourcesLoader from '../ResourcesLoader';\nimport Subheader from '../UI/Subheader';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport Edit from '@material-ui/icons/Edit';\nimport ColorField from '../UI/ColorField';\nimport { MarkdownText } from '../UI/MarkdownText';\nimport { rgbOrHexToRGBString } from '../Utils/ColorTransformer';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport {\n  type ResourceKind,\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport {\n  TextFieldWithButtonLayout,\n  ResponsiveLineStackLayout,\n  ColumnStackLayout,\n} from '../UI/Layout';\nimport RaisedButton from '../UI/RaisedButton';\nimport UnsavedChangesContext, {\n  type UnsavedChanges,\n} from '../MainFrame/UnsavedChangesContext';\nimport { Line, Spacer } from '../UI/Grid';\nimport Text from '../UI/Text';\nimport useForceUpdate from '../Utils/UseForceUpdate';\n\n// An \"instance\" here is the objects for which properties are shown\nexport type Instance = Object; // This could be improved using generics.\nexport type Instances = Array<Instance>;\n\n// \"Value\" fields are fields displayed in the properties.\nexport type ValueFieldCommonProperties = {|\n  name: string,\n  getLabel?: Instance => string,\n  getDescription?: Instance => string,\n  getExtraDescription?: Instance => string,\n  disabled?: boolean,\n  onEditButtonClick?: Instance => void,\n|};\n\n// \"Primitive\" value fields are \"simple\" fields.\nexport type PrimitiveValueField =\n  | {|\n      valueType: 'number',\n      getValue: Instance => number,\n      setValue: (instance: Instance, newValue: number) => void,\n      ...ValueFieldCommonProperties,\n    |}\n  | {|\n      valueType: 'string',\n      getValue: Instance => string,\n      setValue: (instance: Instance, newValue: string) => void,\n      getChoices?: ?() => Array<{| value: string, label: string |}>,\n      ...ValueFieldCommonProperties,\n    |}\n  | {|\n      valueType: 'boolean',\n      getValue: Instance => boolean,\n      setValue: (instance: Instance, newValue: boolean) => void,\n      ...ValueFieldCommonProperties,\n    |}\n  | {|\n      valueType: 'color',\n      getValue: Instance => string,\n      setValue: (instance: Instance, newValue: string) => void,\n      ...ValueFieldCommonProperties,\n    |}\n  | {|\n      valueType: 'textarea',\n      getValue: Instance => string,\n      setValue: (instance: Instance, newValue: string) => void,\n      ...ValueFieldCommonProperties,\n    |};\n\n// \"Resource\" fields are showing a resource selector.\ntype ResourceField = {|\n  valueType: 'resource',\n  resourceKind: ResourceKind,\n  getValue: Instance => string,\n  setValue: (instance: Instance, newValue: string) => void,\n  ...ValueFieldCommonProperties,\n|};\n\ntype SectionTitle = {|\n  name: string,\n  getValue?: Instance => string,\n  nonFieldType: 'sectionTitle',\n  defaultValue?: string,\n|};\n\ntype ActionButton = {|\n  label: string,\n  disabled: 'onValuesDifferent',\n  getValue: Instance => string,\n  nonFieldType: 'button',\n  onClick: (instance: Instance) => void,\n|};\n\n// A value field is a primitive or a resource.\nexport type ValueField = PrimitiveValueField | ResourceField;\n\n// A field can be a primitive, a resource or a list of fields\nexport type Field =\n  | PrimitiveValueField\n  | ResourceField\n  | SectionTitle\n  | ActionButton\n  | {|\n      name: string,\n      type: 'row' | 'column',\n      title?: ?string,\n      children: Array<Object>,\n    |};\n\n// The schema is the tree of all fields.\nexport type Schema = Array<Field>;\n\ntype Props = {|\n  onInstancesModified?: Instances => void,\n  instances: Instances,\n  schema: Schema,\n  mode?: 'column' | 'row',\n\n  // If set, render the \"extra\" description content from fields\n  // (see getExtraDescription).\n  renderExtraDescriptionText?: (extraDescription: string) => string,\n  unsavedChanges?: ?UnsavedChanges,\n\n  // Optional context:\n  project?: ?gdProject,\n  resourceSources?: ?Array<ResourceSource>,\n  onChooseResource?: ?ChooseResourceFunction,\n  resourceExternalEditors?: ?Array<ResourceExternalEditor>,\n|};\n\nconst styles = {\n  columnContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  fieldContainer: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'baseline',\n  },\n  field: {\n    flex: 1,\n    width: 'auto',\n  },\n  subPropertiesEditorContainer: {\n    marginLeft: 15,\n  },\n  subHeader: {\n    paddingLeft: 0,\n  },\n};\n\n/**\n * Get the value for the given field across all instances.\n * If one of the instances doesn't share the same value, returns the default value.\n * If there is no instances, returns the default value.\n * If the field does not have a `getValue` method, returns `null`.\n */\nconst getFieldValue = (\n  instances: Instances,\n  field: ValueField | ActionButton | SectionTitle,\n  defaultValue?: any\n): any => {\n  if (!instances[0]) {\n    console.log(\n      'getFieldValue was called with an empty list of instances (or containing undefined). This is a bug that should be fixed'\n    );\n    return defaultValue;\n  }\n\n  const { getValue } = field;\n  if (!getValue) return null;\n\n  let value = getValue(instances[0]);\n  for (var i = 1; i < instances.length; ++i) {\n    if (value !== getValue(instances[i])) {\n      if (typeof defaultValue !== 'undefined') value = defaultValue;\n      break;\n    }\n  }\n\n  return value;\n};\n\nconst getFieldLabel = (instances: Instances, field: ValueField): any => {\n  if (!instances[0]) {\n    console.log(\n      'PropertiesEditor._getFieldLabel was called with an empty list of instances (or containing undefined). This is a bug that should be fixed'\n    );\n    return field.name;\n  }\n\n  if (field.getLabel) return field.getLabel(instances[0]);\n\n  return field.name;\n};\n\nconst PropertiesEditor = ({\n  onInstancesModified,\n  instances,\n  schema,\n  mode,\n  renderExtraDescriptionText,\n  unsavedChanges,\n  project,\n  resourceSources,\n  onChooseResource,\n  resourceExternalEditors,\n}: Props) => {\n  const forceUpdate = useForceUpdate();\n\n  const _onInstancesModified = React.useCallback(\n    (instances: Instances) => {\n      // This properties editor is dealing with fields that are\n      // responsible to update their state (see field.setValue).\n\n      if (unsavedChanges) unsavedChanges.triggerUnsavedChanges();\n      if (onInstancesModified) onInstancesModified(instances);\n      forceUpdate();\n    },\n    [unsavedChanges, onInstancesModified, forceUpdate]\n  );\n\n  const getFieldDescription = React.useCallback(\n    (field: ValueField): ?string => {\n      if (!instances[0]) {\n        console.log(\n          'PropertiesEditor._getFieldDescription was called with an empty list of instances (or containing undefined). This is a bug that should be fixed'\n        );\n        return undefined;\n      }\n\n      const descriptions: Array<string> = [];\n      if (field.getDescription)\n        descriptions.push(field.getDescription(instances[0]));\n      if (renderExtraDescriptionText && field.getExtraDescription)\n        descriptions.push(\n          renderExtraDescriptionText(field.getExtraDescription(instances[0]))\n        );\n\n      return descriptions.join('\\n') || undefined;\n    },\n    [instances, renderExtraDescriptionText]\n  );\n\n  const renderInputField = React.useCallback(\n    (field: ValueField) => {\n      if (field.name === 'PLEASE_ALSO_SHOW_EDIT_BUTTON_THANKS') return null; // This special property was used in GDevelop 4 IDE to ask for a Edit button to be shown, ignore it.\n\n      if (field.valueType === 'boolean') {\n        const { setValue } = field;\n        const description = getFieldDescription(field);\n\n        return (\n          <InlineCheckbox\n            label={\n              !description ? (\n                getFieldLabel(instances, field)\n              ) : (\n                <React.Fragment>\n                  <Line noMargin>{getFieldLabel(instances, field)}</Line>\n                  <FormHelperText style={{ display: 'inline' }}>\n                    <MarkdownText source={description} />\n                  </FormHelperText>\n                </React.Fragment>\n              )\n            }\n            key={field.name}\n            checked={getFieldValue(instances, field)}\n            onCheck={(event, newValue) => {\n              instances.forEach(i => setValue(i, !!newValue));\n              _onInstancesModified(instances);\n            }}\n            disabled={field.disabled}\n          />\n        );\n      } else if (field.valueType === 'number') {\n        const { setValue } = field;\n        return (\n          <SemiControlledTextField\n            value={getFieldValue(instances, field)}\n            key={field.name}\n            id={field.name}\n            floatingLabelText={getFieldLabel(instances, field)}\n            floatingLabelFixed\n            helperMarkdownText={getFieldDescription(field)}\n            onChange={newValue => {\n              instances.forEach(i => setValue(i, parseFloat(newValue) || 0));\n              _onInstancesModified(instances);\n            }}\n            type=\"number\"\n            style={styles.field}\n            disabled={field.disabled}\n          />\n        );\n      } else if (field.valueType === 'color') {\n        const { setValue } = field;\n        return (\n          <ColorField\n            key={field.name}\n            id={field.name}\n            floatingLabelText={getFieldLabel(instances, field)}\n            helperMarkdownText={getFieldDescription(field)}\n            disableAlpha\n            fullWidth\n            color={getFieldValue(instances, field)}\n            onChange={color => {\n              const rgbString =\n                color.length === 0 ? '' : rgbOrHexToRGBString(color);\n              instances.forEach(i => setValue(i, rgbString));\n              _onInstancesModified(instances);\n            }}\n          />\n        );\n      } else if (field.valueType === 'textarea') {\n        const { setValue } = field;\n        return (\n          <SemiControlledTextField\n            key={field.name}\n            id={field.name}\n            onChange={text => {\n              instances.forEach(i => setValue(i, text || ''));\n              _onInstancesModified(instances);\n            }}\n            value={getFieldValue(instances, field)}\n            floatingLabelText={getFieldLabel(instances, field)}\n            floatingLabelFixed\n            helperMarkdownText={getFieldDescription(field)}\n            multiline\n            style={styles.field}\n          />\n        );\n      } else {\n        const { onEditButtonClick, setValue } = field;\n        return (\n          <TextFieldWithButtonLayout\n            key={field.name}\n            renderTextField={() => (\n              <SemiControlledTextField\n                value={getFieldValue(instances, field, '(Multiple values)')}\n                id={field.name}\n                floatingLabelText={getFieldLabel(instances, field)}\n                floatingLabelFixed\n                helperMarkdownText={getFieldDescription(field)}\n                onChange={newValue => {\n                  instances.forEach(i => setValue(i, newValue || ''));\n                  _onInstancesModified(instances);\n                }}\n                style={styles.field}\n                disabled={field.disabled}\n              />\n            )}\n            renderButton={style =>\n              onEditButtonClick ? (\n                <RaisedButton\n                  style={style}\n                  primary\n                  disabled={instances.length !== 1}\n                  icon={<Edit />}\n                  label={<Trans>Edit</Trans>}\n                  onClick={() => onEditButtonClick(instances[0])}\n                />\n              ) : null\n            }\n          />\n        );\n      }\n    },\n    [instances, getFieldDescription, _onInstancesModified]\n  );\n\n  const renderSelectField = React.useCallback(\n    (field: ValueField) => {\n      if (!field.getChoices || !field.getValue) return;\n\n      const children = field\n        .getChoices()\n        .map(({ value, label }) => (\n          <SelectOption key={value} value={value} primaryText={label} />\n        ));\n\n      if (field.valueType === 'number') {\n        const { setValue } = field;\n        return (\n          <SelectField\n            value={getFieldValue(instances, field)}\n            key={field.name}\n            floatingLabelText={getFieldLabel(instances, field)}\n            helperMarkdownText={getFieldDescription(field)}\n            onChange={(event, index, newValue: string) => {\n              instances.forEach(i => setValue(i, parseFloat(newValue) || 0));\n              _onInstancesModified(instances);\n            }}\n            style={styles.field}\n            disabled={field.disabled}\n          >\n            {children}\n          </SelectField>\n        );\n      } else if (field.valueType === 'string') {\n        const { setValue } = field;\n        return (\n          <SelectField\n            value={getFieldValue(instances, field, '(Multiple values)')}\n            key={field.name}\n            floatingLabelText={getFieldLabel(instances, field)}\n            helperMarkdownText={getFieldDescription(field)}\n            onChange={(event, index, newValue: string) => {\n              instances.forEach(i => setValue(i, newValue || ''));\n              _onInstancesModified(instances);\n            }}\n            style={styles.field}\n            disabled={field.disabled}\n          >\n            {children}\n          </SelectField>\n        );\n      }\n    },\n    [instances, _onInstancesModified, getFieldDescription]\n  );\n\n  const renderButton = React.useCallback(\n    (field: ActionButton) => {\n      let disabled = false;\n      if (field.disabled === 'onValuesDifferent') {\n        const DIFFERENT_VALUES = 'DIFFERENT_VALUES';\n        disabled =\n          getFieldValue(instances, field, DIFFERENT_VALUES) ===\n          DIFFERENT_VALUES;\n      }\n      return (\n        <RaisedButton\n          key={`button-${field.label}`}\n          fullWidth\n          primary\n          icon={<Edit />}\n          disabled={disabled}\n          label={field.label}\n          onClick={() => {\n            field.onClick(instances[0]);\n          }}\n        />\n      );\n    },\n    [instances]\n  );\n\n  const renderResourceField = (field: ResourceField) => {\n    if (\n      !project ||\n      !resourceSources ||\n      !onChooseResource ||\n      !resourceExternalEditors\n    ) {\n      console.error(\n        'You tried to display a resource field in a PropertiesEditor that does not support display resources. If you need to display resources, pass additional props (project, resourceSources, onChooseResource, resourceExternalEditors).'\n      );\n      return null;\n    }\n\n    const { setValue } = field;\n    return (\n      <ResourceSelector\n        key={field.name}\n        project={project}\n        resourceSources={resourceSources}\n        onChooseResource={onChooseResource}\n        resourceExternalEditors={resourceExternalEditors}\n        resourcesLoader={ResourcesLoader}\n        resourceKind={field.resourceKind}\n        fullWidth\n        initialResourceName={getFieldValue(\n          instances,\n          field,\n          '(Multiple values)' //TODO\n        )}\n        onChange={newValue => {\n          instances.forEach(i => setValue(i, newValue));\n          _onInstancesModified(instances);\n        }}\n        floatingLabelText={getFieldLabel(instances, field)}\n        helperMarkdownText={getFieldDescription(field)}\n      />\n    );\n  };\n\n  const renderContainer =\n    mode === 'row'\n      ? (fields: React.Node) => (\n          <ResponsiveLineStackLayout noMargin>\n            {fields}\n          </ResponsiveLineStackLayout>\n        )\n      : (fields: React.Node) => (\n          <ColumnStackLayout noMargin>{fields}</ColumnStackLayout>\n        );\n\n  const renderSectionTitle = React.useCallback(\n    (field: SectionTitle) => {\n      const { getValue } = field;\n\n      let additionalText = null;\n\n      if (getValue) {\n        let selectedInstancesValue = getFieldValue(\n          instances,\n          field,\n          field.defaultValue || 'Multiple Values'\n        );\n        if (!!selectedInstancesValue) additionalText = selectedInstancesValue;\n      }\n\n      if (!!additionalText) {\n        return (\n          <Line alignItems=\"baseline\" key={`section-title-${field.name}`}>\n            <Text displayInlineAsSpan>{field.name}</Text>\n            <Spacer />\n            <Text\n              displayInlineAsSpan\n              size=\"body2\"\n            >{`- ${additionalText}`}</Text>\n          </Line>\n        );\n      }\n\n      return (\n        <Line key={`section-title-${field.name}`}>\n          <Text displayInlineAsSpan>{field.name}</Text>\n        </Line>\n      );\n    },\n    [instances]\n  );\n\n  return renderContainer(\n    schema.map(field => {\n      if (!!field.nonFieldType) {\n        if (field.nonFieldType === 'sectionTitle') {\n          return renderSectionTitle(field);\n        } else if (field.nonFieldType === 'button') {\n          return renderButton(field);\n        }\n        return null;\n      } else if (field.children) {\n        if (field.type === 'row') {\n          const contentView = (\n            <UnsavedChangesContext.Consumer key={field.name}>\n              {unsavedChanges => (\n                <PropertiesEditor\n                  project={project}\n                  resourceSources={resourceSources}\n                  onChooseResource={onChooseResource}\n                  resourceExternalEditors={resourceExternalEditors}\n                  schema={field.children}\n                  instances={instances}\n                  mode=\"row\"\n                  unsavedChanges={unsavedChanges}\n                  onInstancesModified={onInstancesModified}\n                />\n              )}\n            </UnsavedChangesContext.Consumer>\n          );\n          if (field.title) {\n            return [\n              <Text key={field.name + '-title'} size=\"title\">\n                {field.title}\n              </Text>,\n              contentView,\n            ];\n          }\n          return contentView;\n        }\n\n        return (\n          <div key={field.name}>\n            <Subheader>{field.name}</Subheader>\n            <div style={styles.subPropertiesEditorContainer}>\n              <UnsavedChangesContext.Consumer key={field.name}>\n                {unsavedChanges => (\n                  <PropertiesEditor\n                    project={project}\n                    resourceSources={resourceSources}\n                    onChooseResource={onChooseResource}\n                    resourceExternalEditors={resourceExternalEditors}\n                    schema={field.children}\n                    instances={instances}\n                    mode=\"column\"\n                    unsavedChanges={unsavedChanges}\n                    onInstancesModified={onInstancesModified}\n                  />\n                )}\n              </UnsavedChangesContext.Consumer>\n            </div>\n          </div>\n        );\n      } else if (field.valueType === 'resource') {\n        return renderResourceField(field);\n      } else {\n        if (field.getChoices && field.getValue) return renderSelectField(field);\n        if (field.getValue) return renderInputField(field);\n      }\n      return null;\n    })\n  );\n};\n\nexport default PropertiesEditor;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  type Filters,\n  type TagsTreeNode,\n} from '../../Utils/GDevelopServices/Filters';\nimport InlineCheckbox from '../InlineCheckbox';\nimport { ColumnStackLayout } from '../Layout';\nimport PlaceholderLoader from '../PlaceholderLoader';\nimport EmptyMessage from '../EmptyMessage';\n\nexport type ChosenCategory = {|\n  node: TagsTreeNode,\n  parentNodes: Array<TagsTreeNode>,\n|};\n\nexport type FiltersState = {|\n  chosenFilters: Set<string>,\n  addFilter: string => void,\n  removeFilter: string => void,\n  chosenCategory: ?ChosenCategory,\n  setChosenCategory: (?ChosenCategory) => void,\n|};\n\nexport const useFilters = (): FiltersState => {\n  const [chosenCategory, setChosenCategory] = React.useState<?ChosenCategory>(\n    null\n  );\n  const [chosenFilters, setChosenFilters] = React.useState<Set<string>>(\n    () => new Set()\n  );\n\n  const setChosenCategoryAndUpdateFilters = React.useCallback(\n    (newChosenCategory: ?ChosenCategory) => {\n      if (!newChosenCategory) {\n        // No more category is chosen. Keep the filters\n        setChosenCategory(null);\n      } else {\n        // Remove the filters that are not included in the category,\n        // as it would make no sense (not displayed, and everything would be filtered out).\n        const newChosenFilters = new Set();\n        for (const tag of chosenFilters.keys()) {\n          if (newChosenCategory.node.allChildrenTags.includes(tag)) {\n            newChosenFilters.add(tag);\n          }\n        }\n\n        setChosenFilters(newChosenFilters);\n        setChosenCategory(newChosenCategory);\n      }\n    },\n    [chosenFilters]\n  );\n\n  return {\n    chosenCategory,\n    setChosenCategory: setChosenCategoryAndUpdateFilters,\n    chosenFilters,\n    addFilter: (tag: string) => {\n      const newChosenFilters = new Set(chosenFilters);\n      newChosenFilters.add(tag);\n      setChosenFilters(newChosenFilters);\n    },\n    removeFilter: (tag: string) => {\n      const newChosenFilters = new Set(chosenFilters);\n      newChosenFilters.delete(tag);\n\n      setChosenFilters(newChosenFilters);\n    },\n  };\n};\n\nconst capitalize = (str: string) => {\n  if (!str) return '';\n\n  return str[0].toUpperCase() + str.substr(1);\n};\n\ntype Props = {|\n  filtersState: FiltersState,\n  allFilters: ?Filters,\n  error: ?Error,\n|};\n\nexport const FiltersChooser = ({ filtersState, allFilters, error }: Props) => {\n  if (!allFilters) {\n    return <PlaceholderLoader />;\n  }\n  if (error) {\n    // Error and retry button shown somewhere else in the UI\n    return null;\n  }\n\n  // Only display the tags that are contained inside the selected category\n  const selectedCategoryTags = filtersState.chosenCategory\n    ? filtersState.chosenCategory.node.allChildrenTags\n    : allFilters.defaultTags;\n\n  return (\n    <ColumnStackLayout>\n      {!selectedCategoryTags ? (\n        <EmptyMessage>\n          <Trans>Choose a category to display filters</Trans>\n        </EmptyMessage>\n      ) : selectedCategoryTags.length ? (\n        selectedCategoryTags.map(tag => (\n          <InlineCheckbox\n            key={tag}\n            label={capitalize(tag)}\n            checked={filtersState.chosenFilters.has(tag)}\n            onCheck={() => {\n              if (filtersState.chosenFilters.has(tag)) {\n                filtersState.removeFilter(tag);\n              } else {\n                filtersState.addFilter(tag);\n              }\n            }}\n          />\n        ))\n      ) : (\n        <EmptyMessage>\n          <Trans>No filters in this category.</Trans>\n        </EmptyMessage>\n      )}\n    </ColumnStackLayout>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport {\n  type EventsFunctionsExtensionWriter,\n  type EventsFunctionsExtensionOpener,\n} from './Storage';\n\nexport type EventsFunctionsExtensionsState = {|\n  eventsFunctionsExtensionsError: ?Error,\n  loadProjectEventsFunctionsExtensions: (project: ?gdProject) => Promise<void>,\n  unloadProjectEventsFunctionsExtensions: (project: gdProject) => void,\n  unloadProjectEventsFunctionsExtension: (\n    project: gdProject,\n    extensionName: string\n  ) => void,\n  reloadProjectEventsFunctionsExtensions: (\n    project: ?gdProject\n  ) => Promise<void>,\n  getEventsFunctionsExtensionWriter: () => ?EventsFunctionsExtensionWriter,\n  getEventsFunctionsExtensionOpener: () => ?EventsFunctionsExtensionOpener,\n  ensureLoadFinished: () => Promise<void>,\n  getIncludeFileHashs: () => { [string]: number },\n|};\n\nconst defaultState = {\n  eventsFunctionsExtensionsError: null,\n  loadProjectEventsFunctionsExtensions: () =>\n    Promise.reject(new Error('Use a provider')),\n  unloadProjectEventsFunctionsExtensions: () => {},\n  reloadProjectEventsFunctionsExtensions: () =>\n    Promise.reject(new Error('Use a provider')),\n  unloadProjectEventsFunctionsExtension: () => {},\n  getEventsFunctionsExtensionWriter: () => null,\n  getEventsFunctionsExtensionOpener: () => null,\n  ensureLoadFinished: () => Promise.reject(new Error('Use a provider')),\n  getIncludeFileHashs: () => ({}),\n};\n\nconst EventsFunctionsExtensionsContext = React.createContext<EventsFunctionsExtensionsState>(\n  defaultState\n);\n\nexport default EventsFunctionsExtensionsContext;\n","// @flow\nimport axios from 'axios';\nimport { GDevelopAssetApi } from './ApiConfigs';\nimport semverSatisfies from 'semver/functions/satisfies';\nimport { type Filters } from './Filters';\n\nexport type SerializedParameterMetadata = {|\n  codeOnly: boolean,\n  defaultValue: string,\n  description: string,\n  longDescription: string,\n  name: string,\n  optional: boolean,\n  supplementaryInformation: string,\n  type: string, // See ParameterRenderingService for valid types.\n|};\n\nexport type AssetCustomization =\n  | {|\n      required: boolean,\n      extensionName: string,\n      extensionVersion: string,\n      behaviorName: string,\n      behaviorType: string,\n      properties: Array<SerializedParameterMetadata>,\n    |}\n  | {|\n      required: boolean,\n      events: any /*(serialized gdEventsList)*/,\n      parameters: Array<SerializedParameterMetadata>,\n      extensions: Array<{|\n        extensionName: string,\n        extensionVersion: string,\n      |}>,\n    |};\n\nexport type ObjectAsset = {|\n  object: any /*(serialized gdObject)*/,\n  resources: Array<any /*(serialized gdResource)*/>,\n  customization: Array<AssetCustomization>,\n|};\n\nexport type AssetShortHeader = {|\n  id: string,\n  name: string,\n  shortDescription: string,\n  previewImageUrls: Array<string>,\n  tags: Array<string>,\n|};\n\nexport type AssetHeader = {|\n  ...AssetShortHeader,\n  gdevelopVersion: string,\n  version: string,\n  description: string,\n|};\n\nexport type Asset = {|\n  ...AssetHeader,\n  authors: Array<string>,\n  license: string,\n  objectAssets: Array<ObjectAsset>,\n|};\n\nexport type AllAssets = {|\n  assetShortHeaders: Array<AssetShortHeader>,\n  filters: Filters,\n|};\n\nexport type Resource = {|\n  url: string,\n  name: string,\n  license: string,\n  type: string,\n  tags: Array<string>,\n|};\n\nexport type AllResources = {|\n  resources: Array<Resource>,\n  filters: Filters,\n|};\n\nexport type License = {|\n  name: string,\n  website: string,\n|};\n\nexport type Author = {|\n  name: string,\n  website: string,\n|};\n\n/** Check if the IDE version, passed as argument, satisfy the version required by the asset. */\nexport const isCompatibleWithAsset = (\n  ideVersion: string,\n  assetHeader: { gdevelopVersion: string }\n) =>\n  assetHeader.gdevelopVersion\n    ? semverSatisfies(ideVersion, assetHeader.gdevelopVersion, {\n        includePrerelease: true,\n      })\n    : true;\n\nexport const listAllAssets = (): Promise<AllAssets> => {\n  return axios\n    .get(`${GDevelopAssetApi.baseUrl}/asset`)\n    .then(response => response.data)\n    .then(({ assetShortHeadersUrl, filtersUrl }) => {\n      if (!assetShortHeadersUrl || !filtersUrl) {\n        throw new Error('Unexpected response from the resource endpoint.');\n      }\n      return Promise.all([\n        axios.get(assetShortHeadersUrl).then(response => response.data),\n        axios.get(filtersUrl).then(response => response.data),\n      ]).then(([assetShortHeaders, filters]) => ({\n        assetShortHeaders,\n        filters,\n      }));\n    });\n};\n\nexport const getAsset = (\n  assetShortHeader: AssetShortHeader\n): Promise<Asset> => {\n  return axios\n    .get(`${GDevelopAssetApi.baseUrl}/asset/${assetShortHeader.id}`)\n    .then(response => response.data)\n    .then(({ assetUrl }) => {\n      if (!assetUrl) {\n        throw new Error('Unexpected response from the asset endpoint.');\n      }\n\n      return axios.get(assetUrl);\n    })\n    .then(response => response.data);\n};\n\nexport const listAllResources = (): Promise<AllResources> => {\n  return axios\n    .get(`${GDevelopAssetApi.baseUrl}/resource`)\n    .then(response => response.data)\n    .then(({ resourcesUrl, filtersUrl }) => {\n      if (!resourcesUrl || !filtersUrl) {\n        throw new Error('Unexpected response from the resource endpoint.');\n      }\n      return Promise.all([\n        axios.get(resourcesUrl).then(response => response.data),\n        axios.get(filtersUrl).then(response => response.data),\n      ]).then(([resources, filters]) => ({\n        resources,\n        filters,\n      }));\n    });\n};\n\nexport const listAllAuthors = (): Promise<Array<Author>> => {\n  return axios\n    .get(`${GDevelopAssetApi.baseUrl}/author`)\n    .then(response => response.data)\n    .then(({ authorsUrl }) => {\n      if (!authorsUrl)\n        throw new Error('Unexpected response from author endpoint.');\n      return axios.get(authorsUrl);\n    })\n    .then(response => response.data);\n};\n\nexport const listAllLicenses = (): Promise<Array<License>> => {\n  return axios\n    .get(`${GDevelopAssetApi.baseUrl}/license`)\n    .then(response => response.data)\n    .then(({ licensesUrl }) => {\n      if (!licensesUrl)\n        throw new Error('Unexpected response from license endpoint.');\n      return axios.get(licensesUrl);\n    })\n    .then(response => response.data);\n};\n\nexport const isPixelArt = (assetShortHeader: AssetShortHeader) => {\n  return assetShortHeader.tags.some(tag => {\n    return tag.toLowerCase() === 'pixel art';\n  });\n};\n","// @flow\nconst gd: libGDevelop = global.gd;\n\n/** Naive way to check if a variable expression is not using a structure/array. */\nconst isRootVariableName = fullName =>\n  !fullName.includes('.') && !fullName.includes('[') && fullName.length > 0;\n\n/**\n * Find variables used in a project - useful to let the user know about variables\n * that are not declared in a list of variables (providing autocompletion for it,\n * or at least a hint that a variable was not declared - on purpose or by mistake).\n *\n * Note that this **works only for non structure/array variables**.\n *\n * TODO: Improve this to support all kind of variables, probably by returning the\n * \"shape\"/\"types\" of identified variables (especially for structures/arrays).\n */\nexport default class EventsRootVariablesFinder {\n  static findAllGlobalVariables(\n    platform: gdPlatform,\n    project: gdProject\n  ): string[] {\n    return (\n      gd.EventsVariablesFinder.findAllGlobalVariables(platform, project)\n        .toNewVectorString()\n        .toJSArray()\n        // Remove child references\n        .filter(isRootVariableName)\n    );\n  }\n\n  static findAllLayoutVariables(\n    platform: gdPlatform,\n    project: gdProject,\n    layout: gdLayout\n  ): string[] {\n    return gd.EventsVariablesFinder.findAllLayoutVariables(\n      project.getCurrentPlatform(),\n      project,\n      layout\n    )\n      .toNewVectorString()\n      .toJSArray()\n      .filter(isRootVariableName);\n  }\n\n  static findAllObjectVariables(\n    platform: gdPlatform,\n    project: gdProject,\n    layout: gdLayout,\n    object: gdObject\n  ): string[] {\n    return gd.EventsVariablesFinder.findAllObjectVariables(\n      project.getCurrentPlatform(),\n      project,\n      layout,\n      object\n    )\n      .toNewVectorString()\n      .toJSArray()\n      .filter(isRootVariableName);\n  }\n}\n","// @flow\nimport {\n  type EnumeratedInstructionMetadata,\n  type InstructionOrExpressionScope,\n} from './EnumeratedInstructionOrExpressionMetadata.js';\n\nconst gd: libGDevelop = global.gd;\n\nconst GROUP_DELIMITER = '/';\n\ntype ExtensionsExtraInstructions = {\n  BuiltinObject?: {\n    '': Array<string>,\n  },\n  Physics2?: {\n    'Physics2::Physics2Behavior': Array<string>,\n  },\n};\n\nconst freeActionsToAddToObject: ExtensionsExtraInstructions = {\n  BuiltinObject: {\n    '': ['AjoutHasard', 'Create', 'AjoutObjConcern'],\n  },\n};\n\nconst freeConditionsToAddToObject: ExtensionsExtraInstructions = {\n  BuiltinObject: {\n    '': [\n      'AjoutHasard',\n      'AjoutObjConcern',\n      'CollisionNP',\n      'SceneInstancesCount',\n      'PickedInstancesCount',\n      'PickNearest',\n      'Distance',\n      'SeDirige',\n      'EstTourne',\n      'SourisSurObjet',\n    ],\n  },\n};\n\nconst freeActionsToAddToBehavior: ExtensionsExtraInstructions = {};\n\nconst freeConditionsToAddToBehavior: ExtensionsExtraInstructions = {\n  Physics2: {\n    'Physics2::Physics2Behavior': ['Physics2::Collision'],\n  },\n};\n\nconst freeInstructionsToRemove = {\n  BuiltinObject: [\n    // Note: even if \"Create\" was added to the object actions for convenience,\n    // we also keep it in the list of free actions.\n\n    // $FlowFixMe\n    ...freeConditionsToAddToObject.BuiltinObject[''],\n  ],\n  Physics2: [\n    // $FlowFixMe\n    ...freeConditionsToAddToBehavior.Physics2['Physics2::Physics2Behavior'],\n  ],\n};\n\nexport const getExtensionPrefix = (extension: gdPlatformExtension): string => {\n  return extension.getCategory() + GROUP_DELIMITER + extension.getFullName();\n};\n\n/**\n * When all instructions are searched, some can be duplicated\n * (on purpose, so that it's easier to find them for users)\n * in both the object instructions and in the free instructions.\n *\n * This removes the duplication, useful for showing results in a list.\n */\nexport const deduplicateInstructionsList = (\n  list: Array<EnumeratedInstructionMetadata>\n): Array<EnumeratedInstructionMetadata> => {\n  let createFound = false;\n  return list.filter(enumerateInstruction => {\n    if (enumerateInstruction.type === 'Create') {\n      if (createFound) return false;\n\n      createFound = true;\n    }\n\n    return true;\n  });\n};\n\nconst filterInstructionsToRemove = (\n  list: Array<EnumeratedInstructionMetadata>,\n  typesToRemove: ?$ReadOnlyArray<string>\n) => {\n  const types = typesToRemove; // Make Flow happy\n  if (!types) return list;\n\n  return list.filter(metadata => types.indexOf(metadata.type) === -1);\n};\n\nconst enumerateExtraBehaviorInstructions = (\n  isCondition: boolean,\n  extension: gdPlatformExtension,\n  behaviorType: string,\n  prefix: string,\n  scope: InstructionOrExpressionScope\n) => {\n  const extensionName = extension.getName();\n\n  const extensionsExtraInstructions = isCondition\n    ? freeConditionsToAddToBehavior[extensionName]\n    : freeActionsToAddToBehavior[extensionName];\n  if (!extensionsExtraInstructions) {\n    return [];\n  }\n\n  const objectExtraInstructions = extensionsExtraInstructions[behaviorType];\n  if (!objectExtraInstructions) {\n    return [];\n  }\n\n  const instructionMetadataMap = isCondition\n    ? extension.getAllConditions()\n    : extension.getAllActions();\n\n  return objectExtraInstructions.map(type =>\n    enumerateInstruction(prefix, type, instructionMetadataMap.get(type), scope)\n  );\n};\n\nconst enumerateExtraObjectInstructions = (\n  isCondition: boolean,\n  extension: gdPlatformExtension,\n  objectType: string,\n  prefix: string,\n  scope: InstructionOrExpressionScope\n) => {\n  const extensionName = extension.getName();\n\n  const extensionsExtraInstructions = isCondition\n    ? freeConditionsToAddToObject[extensionName]\n    : freeActionsToAddToObject[extensionName];\n  if (!extensionsExtraInstructions) {\n    return [];\n  }\n\n  const objectExtraInstructions = extensionsExtraInstructions[objectType];\n  if (!objectExtraInstructions) {\n    return [];\n  }\n\n  const instructionMetadataMap = isCondition\n    ? extension.getAllConditions()\n    : extension.getAllActions();\n\n  return objectExtraInstructions.map(type =>\n    enumerateInstruction(prefix, type, instructionMetadataMap.get(type), scope)\n  );\n};\n\nconst enumerateInstruction = (\n  prefix: string,\n  type: string,\n  instrMetadata: gdInstructionMetadata,\n  scope: InstructionOrExpressionScope\n): EnumeratedInstructionMetadata => {\n  const displayedName = instrMetadata.getFullName();\n  const groupName = instrMetadata.getGroup();\n  const iconFilename = instrMetadata.getIconFilename();\n  const fullGroupName = [prefix, groupName]\n    .filter(Boolean)\n    .join(GROUP_DELIMITER);\n\n  return {\n    type,\n    metadata: instrMetadata,\n    iconFilename,\n    displayedName,\n    fullGroupName,\n    scope,\n    isPrivate: instrMetadata.isPrivate(),\n  };\n};\n\nconst enumerateExtensionInstructions = (\n  prefix: string,\n  instructions: gdMapStringInstructionMetadata,\n  scope: InstructionOrExpressionScope\n): Array<EnumeratedInstructionMetadata> => {\n  //Get the map containing the metadata of the instructions provided by the extension...\n  const instructionsTypes = instructions.keys();\n  const allInstructions = [];\n\n  //... and add each instruction\n  for (let j = 0; j < instructionsTypes.size(); ++j) {\n    const type = instructionsTypes.at(j);\n    const instrMetadata = instructions.get(type);\n    if (instrMetadata.isHidden()) continue;\n\n    if (\n      scope.objectMetadata &&\n      scope.objectMetadata.isUnsupportedBaseObjectCapability(\n        instrMetadata.getRequiredBaseObjectCapability()\n      )\n    )\n      continue; // Skip instructions not supported by the object.\n\n    allInstructions.push(\n      enumerateInstruction(prefix, type, instrMetadata, scope)\n    );\n  }\n\n  return allInstructions;\n};\n\n/**\n * List all the instructions available.\n */\nexport const enumerateAllInstructions = (\n  isCondition: boolean\n): Array<EnumeratedInstructionMetadata> => {\n  let allInstructions = [];\n\n  const allExtensions = gd\n    .asPlatform(gd.JsPlatform.get())\n    .getAllPlatformExtensions();\n  for (let i = 0; i < allExtensions.size(); ++i) {\n    const extension = allExtensions.at(i);\n    const extensionName = extension.getName();\n    const allObjectsTypes = extension.getExtensionObjectsTypes();\n    const allBehaviorsTypes = extension.getBehaviorsTypes();\n    const prefix = getExtensionPrefix(extension);\n\n    //Free instructions\n    const extensionFreeInstructions = enumerateExtensionInstructions(\n      prefix,\n      isCondition ? extension.getAllConditions() : extension.getAllActions(),\n      {\n        extension,\n        objectMetadata: undefined,\n        behaviorMetadata: undefined,\n      }\n    );\n    allInstructions = [\n      ...allInstructions,\n      ...filterInstructionsToRemove(\n        extensionFreeInstructions,\n        freeInstructionsToRemove[extensionName]\n      ),\n    ];\n\n    //Objects instructions:\n    for (let j = 0; j < allObjectsTypes.size(); ++j) {\n      const objectType = allObjectsTypes.at(j);\n      const objectMetadata = extension.getObjectMetadata(objectType);\n      const scope = { extension, objectMetadata };\n      allInstructions = [\n        ...allInstructions,\n        ...enumerateExtensionInstructions(\n          prefix,\n          isCondition\n            ? extension.getAllConditionsForObject(objectType)\n            : extension.getAllActionsForObject(objectType),\n          scope\n        ),\n        ...enumerateExtraObjectInstructions(\n          isCondition,\n          extension,\n          objectType,\n          prefix,\n          scope\n        ),\n      ];\n    }\n\n    //Behaviors instructions:\n    for (let j = 0; j < allBehaviorsTypes.size(); ++j) {\n      const behaviorType = allBehaviorsTypes.at(j);\n      const behaviorMetadata = extension.getBehaviorMetadata(behaviorType);\n      const scope = { extension, behaviorMetadata };\n\n      allInstructions = [\n        ...allInstructions,\n        ...enumerateExtensionInstructions(\n          prefix,\n          isCondition\n            ? extension.getAllConditionsForBehavior(behaviorType)\n            : extension.getAllActionsForBehavior(behaviorType),\n          scope\n        ),\n        ...enumerateExtraBehaviorInstructions(\n          isCondition,\n          extension,\n          behaviorType,\n          prefix,\n          scope\n        ),\n      ];\n    }\n  }\n\n  return allInstructions;\n};\n\nconst orderFirstInstructionsWithoutGroup = (\n  allInstructions: Array<EnumeratedInstructionMetadata>\n) => {\n  const noGroupInstructions = allInstructions.filter(\n    instructionMetadata => instructionMetadata.fullGroupName.length === 0\n  );\n  const instructionsWithGroups = allInstructions.filter(\n    instructionMetadata => instructionMetadata.fullGroupName.length !== 0\n  );\n\n  return [...noGroupInstructions, ...instructionsWithGroups];\n};\n\n/**\n * List all the instructions that can be used for the given object,\n * in the given context. This includes instructions for the behaviors\n * attached to the object.\n */\nexport const enumerateObjectAndBehaviorsInstructions = (\n  isCondition: boolean,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  objectName: string\n): Array<EnumeratedInstructionMetadata> => {\n  let allInstructions = [];\n\n  const objectType: string = gd.getTypeOfObject(\n    globalObjectsContainer,\n    objectsContainer,\n    objectName,\n    true\n  );\n  const objectBehaviorNames: Array<string> = gd\n    .getBehaviorsOfObject(\n      globalObjectsContainer,\n      objectsContainer,\n      objectName,\n      true\n    )\n    .toJSArray();\n  const objectBehaviorTypes = new Set(\n    objectBehaviorNames.map(behaviorName =>\n      gd.getTypeOfBehavior(\n        globalObjectsContainer,\n        objectsContainer,\n        behaviorName,\n        false\n      )\n    )\n  );\n\n  // Enumerate instructions of the object.\n  const extensionAndObjectMetadata = gd.MetadataProvider.getExtensionAndObjectMetadata(\n    gd.JsPlatform.get(),\n    objectType\n  );\n  const extension = extensionAndObjectMetadata.getExtension();\n  const objectMetadata = extensionAndObjectMetadata.getMetadata();\n  const scope = { extension, objectMetadata };\n  const prefix = '';\n\n  allInstructions = [\n    ...allInstructions,\n    ...enumerateExtensionInstructions(\n      prefix,\n      isCondition\n        ? extension.getAllConditionsForObject(objectType)\n        : extension.getAllActionsForObject(objectType),\n      scope\n    ),\n    ...enumerateExtraObjectInstructions(\n      isCondition,\n      extension,\n      objectType,\n      prefix,\n      scope\n    ),\n  ];\n\n  // Enumerate instructions of the base object that the object \"inherits\" from.\n  const baseObjectType = ''; /* An empty string means the base object */\n  if (objectType !== baseObjectType) {\n    const baseExtensionAndObjectMetadata = gd.MetadataProvider.getExtensionAndObjectMetadata(\n      gd.JsPlatform.get(),\n      baseObjectType\n    );\n    const baseObjectExtension = baseExtensionAndObjectMetadata.getExtension();\n\n    allInstructions = [\n      ...allInstructions,\n      ...enumerateExtensionInstructions(\n        prefix,\n        isCondition\n          ? baseObjectExtension.getAllConditionsForObject(baseObjectType)\n          : baseObjectExtension.getAllActionsForObject(baseObjectType),\n        scope\n      ),\n      ...enumerateExtraObjectInstructions(\n        isCondition,\n        baseObjectExtension,\n        baseObjectType,\n        prefix,\n        scope\n      ),\n    ];\n  }\n\n  // Enumerate behaviors instructions.\n  const allExtensions = gd\n    .asPlatform(gd.JsPlatform.get())\n    .getAllPlatformExtensions();\n  for (let i = 0; i < allExtensions.size(); ++i) {\n    const extension = allExtensions.at(i);\n    const behaviorTypes = extension\n      .getBehaviorsTypes()\n      .toJSArray()\n      .filter(behaviorType => objectBehaviorTypes.has(behaviorType));\n\n    // eslint-disable-next-line\n    behaviorTypes.forEach(behaviorType => {\n      const behaviorMetadata = extension.getBehaviorMetadata(behaviorType);\n      const scope = { extension, behaviorMetadata };\n\n      // Show them at the top of the list.\n      allInstructions = [\n        ...enumerateExtensionInstructions(\n          prefix,\n          isCondition\n            ? extension.getAllConditionsForBehavior(behaviorType)\n            : extension.getAllActionsForBehavior(behaviorType),\n          scope\n        ),\n        ...enumerateExtraBehaviorInstructions(\n          isCondition,\n          extension,\n          behaviorType,\n          prefix,\n          scope\n        ),\n        ...allInstructions,\n      ];\n    });\n  }\n\n  return orderFirstInstructionsWithoutGroup(allInstructions);\n};\n\n/**\n * Enumerate all the instructions that are not directly tied\n * to an object.\n */\nexport const enumerateFreeInstructions = (\n  isCondition: boolean\n): Array<EnumeratedInstructionMetadata> => {\n  let allFreeInstructions = [];\n\n  const allExtensions = gd\n    .asPlatform(gd.JsPlatform.get())\n    .getAllPlatformExtensions();\n  for (let i = 0; i < allExtensions.size(); ++i) {\n    const extension = allExtensions.at(i);\n    const extensionName: string = extension.getName();\n    const prefix = getExtensionPrefix(extension);\n\n    //Free instructions\n    const extensionFreeInstructions = enumerateExtensionInstructions(\n      prefix,\n      isCondition ? extension.getAllConditions() : extension.getAllActions(),\n      {\n        extension,\n        objectMetadata: undefined,\n        behaviorMetadata: undefined,\n      }\n    );\n    allFreeInstructions = [\n      ...allFreeInstructions,\n      ...filterInstructionsToRemove(\n        extensionFreeInstructions,\n        freeInstructionsToRemove[extensionName]\n      ),\n    ];\n  }\n\n  return allFreeInstructions;\n};\n\nexport type InstructionFilteringOptions = {|\n  searchText: string,\n|};\n\nexport const getObjectParameterIndex = (\n  instructionMetadata: gdInstructionMetadata\n) => {\n  const parametersCount = instructionMetadata.getParametersCount();\n  if (parametersCount >= 1) {\n    const firstParameterType = instructionMetadata.getParameter(0).getType();\n    if (firstParameterType === 'object') {\n      // By convention, all object conditions/actions have the object as first parameter\n      return 0;\n    }\n    if (gd.ParameterMetadata.isObject(firstParameterType)) {\n      // Some \"free condition/actions\" might be considered as \"object\" instructions, in which\n      // case they are taking an object list as fist parameter - which will be identified\n      // by gd.ParameterMetadata.isObject\n      return 0;\n    }\n\n    if (\n      firstParameterType === 'objectsContext' ||\n      firstParameterType === 'currentScene'\n    ) {\n      if (parametersCount >= 2) {\n        const secondParameterType = instructionMetadata\n          .getParameter(1)\n          .getType();\n        if (gd.ParameterMetadata.isObject(secondParameterType)) {\n          // Some special action/conditions like \"Create\", \"AjoutHasard\" (pick random object) or\n          // \"AjoutObjConcern\" (pick all objects) are \"free condition/actions\", but are manipulating\n          // objects list, so their first parameter is an \"objectsContext\" or \"currentScene\",\n          // followed by an object parameter.\n          return 1;\n        }\n      }\n    }\n  }\n\n  return -1;\n};\n","import { mapVector, mapFor } from '../../../../Utils/MapFor';\nimport every from 'lodash/every';\nconst gd = global.gd;\n\n/**\n * Return the specified animation, direction and sprite for a SpriteObject.\n * Returns null for these elements if the specified choice is not valid.\n * @param {*} object\n * @param {*} animationIndex\n * @param {*} directionIndex\n * @param {*} spriteIndex\n */\nexport const getCurrentElements = (\n  object,\n  animationIndex,\n  directionIndex,\n  spriteIndex\n) => {\n  const hasValidAnimation = animationIndex < object.getAnimationsCount();\n  const animation = hasValidAnimation\n    ? object.getAnimation(animationIndex)\n    : null;\n  const hasValidDirection =\n    !!animation && directionIndex < animation.getDirectionsCount();\n  const direction = hasValidDirection\n    ? animation.getDirection(directionIndex)\n    : null;\n  const hasValidSprite =\n    !!direction && spriteIndex < direction.getSpritesCount();\n  const sprite = hasValidSprite ? direction.getSprite(spriteIndex) : null;\n\n  return {\n    hasValidAnimation,\n    animation,\n    hasValidDirection,\n    direction,\n    hasValidSprite,\n    sprite,\n  };\n};\n\n/**\n * Return all the point names\n * @param {*} object\n */\nexport const getAllPointNames = object => {\n  const allPointNames = new Set();\n  for (\n    let animationIndex = 0;\n    animationIndex < object.getAnimationsCount();\n    animationIndex++\n  ) {\n    const animation = object.getAnimation(animationIndex);\n    for (\n      let directionIndex = 0;\n      directionIndex < animation.getDirectionsCount();\n      directionIndex++\n    ) {\n      const direction = animation.getDirection(directionIndex);\n      for (\n        let spriteIndex = 0;\n        spriteIndex < direction.getSpritesCount();\n        spriteIndex++\n      ) {\n        const points = direction\n          .getSprite(spriteIndex)\n          .getAllNonDefaultPoints();\n        for (let pointIndex = 0; pointIndex < points.size(); pointIndex++) {\n          const point = points.at(pointIndex);\n          allPointNames.add(point.getName());\n        }\n      }\n    }\n  }\n  return [...allPointNames];\n};\n\nexport const copyPoint = (originalPoint, destinationPoint) => {\n  destinationPoint.setX(originalPoint.getX());\n  destinationPoint.setY(originalPoint.getY());\n  destinationPoint.setName(originalPoint.getName());\n};\n\nexport const copySpritePoints = (originalSprite, destinationSprite) => {\n  if (originalSprite.ptr === destinationSprite.ptr) return;\n\n  copyPoint(originalSprite.getCenter(), destinationSprite.getCenter());\n  copyPoint(originalSprite.getOrigin(), destinationSprite.getOrigin());\n  destinationSprite.setDefaultCenterPoint(\n    originalSprite.isDefaultCenterPoint()\n  );\n\n  destinationSprite.getAllNonDefaultPoints().clear();\n  mapVector(originalSprite.getAllNonDefaultPoints(), originalPoint => {\n    destinationSprite.addPoint(originalPoint);\n  });\n};\n\nexport const copyAnimationsSpritePoints = (originalSprite, animation) => {\n  mapFor(0, animation.getDirectionsCount(), i => {\n    const direction = animation.getDirection(i);\n\n    mapFor(0, direction.getSpritesCount(), j => {\n      const sprite = direction.getSprite(j);\n      copySpritePoints(originalSprite, sprite);\n    });\n  });\n};\n\nexport const isSamePoint = (point1, point2) => {\n  return (\n    point1.getX() === point2.getX() &&\n    point1.getY() === point2.getY() &&\n    point1.getName() === point2.getName()\n  );\n};\n\nexport const haveSamePoints = (sprite1, sprite2) => {\n  if (!isSamePoint(sprite1.getCenter(), sprite2.getCenter())) return false;\n  if (!isSamePoint(sprite1.getOrigin(), sprite2.getOrigin())) return false;\n  if (sprite1.isDefaultCenterPoint() !== sprite2.isDefaultCenterPoint())\n    return false;\n\n  if (\n    sprite1.getAllNonDefaultPoints().size() !==\n    sprite2.getAllNonDefaultPoints().size()\n  )\n    return false;\n\n  return every(\n    mapVector(sprite1.getAllNonDefaultPoints(), sprite1Point => {\n      if (!sprite2.hasPoint(sprite1Point.getName())) return false;\n\n      return isSamePoint(\n        sprite1Point,\n        sprite2.getPoint(sprite1Point.getName())\n      );\n    })\n  );\n};\n\nexport const allDirectionSpritesHaveSamePointsAs = (\n  originalSprite,\n  direction\n) => {\n  return every(\n    mapFor(0, direction.getSpritesCount(), j => {\n      const sprite = direction.getSprite(j);\n      return haveSamePoints(sprite, originalSprite);\n    })\n  );\n};\n\nexport const allSpritesHaveSamePointsAs = (originalSprite, animation) => {\n  return every(\n    mapFor(0, animation.getDirectionsCount(), i => {\n      const direction = animation.getDirection(i);\n      return allDirectionSpritesHaveSamePointsAs(originalSprite, direction);\n    })\n  );\n};\n\nexport const copySpritePolygons = (originalSprite, destinationSprite) => {\n  if (originalSprite.ptr === destinationSprite.ptr) return;\n\n  destinationSprite.setCollisionMaskAutomatic(\n    originalSprite.isCollisionMaskAutomatic()\n  );\n\n  destinationSprite.getCustomCollisionMask().clear();\n  mapVector(originalSprite.getCustomCollisionMask(), originalPolygon => {\n    destinationSprite.getCustomCollisionMask().push_back(originalPolygon);\n  });\n};\n\nexport const copyAnimationsSpriteCollisionMasks = (\n  originalSprite,\n  animation\n) => {\n  mapFor(0, animation.getDirectionsCount(), i => {\n    const direction = animation.getDirection(i);\n\n    mapFor(0, direction.getSpritesCount(), j => {\n      const sprite = direction.getSprite(j);\n      copySpritePolygons(originalSprite, sprite);\n    });\n  });\n};\n\nexport const isSamePolygon = (polygon1, polygon2) => {\n  const polygon1Vertices = polygon1.getVertices();\n  const polygon2Vertices = polygon2.getVertices();\n\n  if (polygon1Vertices.size() !== polygon2Vertices.size()) return false;\n\n  return every(\n    mapVector(polygon1Vertices, (point1, index) => {\n      const point2 = polygon2Vertices.at(index);\n      return (\n        point1.get_x() === point2.get_x() && point1.get_y() === point2.get_y()\n      );\n    })\n  );\n};\n\nexport const haveSameCollisionMasks = (sprite1, sprite2) => {\n  if (sprite1.isCollisionMaskAutomatic() !== sprite2.isCollisionMaskAutomatic())\n    return false;\n\n  if (sprite1.isCollisionMaskAutomatic() && sprite2.isCollisionMaskAutomatic())\n    return true;\n\n  const sprite1CollisionMask = sprite1.getCustomCollisionMask();\n  const sprite2CollisionMask = sprite2.getCustomCollisionMask();\n\n  if (sprite1CollisionMask.size() !== sprite2CollisionMask.size()) return false;\n\n  return every(\n    mapVector(sprite1CollisionMask, (sprite1Polygon, index) => {\n      return isSamePolygon(sprite1Polygon, sprite2CollisionMask.at(index));\n    })\n  );\n};\n\nexport const allDirectionSpritesHaveSameCollisionMasksAs = (\n  originalSprite,\n  direction\n) => {\n  return every(\n    mapFor(0, direction.getSpritesCount(), j => {\n      const sprite = direction.getSprite(j);\n      return haveSameCollisionMasks(sprite, originalSprite);\n    })\n  );\n};\n\nexport const allSpritesHaveSameCollisionMasksAs = (\n  originalSprite,\n  animation\n) => {\n  return every(\n    mapFor(0, animation.getDirectionsCount(), i => {\n      const direction = animation.getDirection(i);\n      return allDirectionSpritesHaveSameCollisionMasksAs(\n        originalSprite,\n        direction\n      );\n    })\n  );\n};\n\nexport const deleteSpritesFromAnimation = (animation, spritePtrs) => {\n  mapFor(0, animation.getDirectionsCount(), i => {\n    const direction = animation.getDirection(i);\n\n    const spritesToDelete = mapFor(0, direction.getSpritesCount(), j => {\n      const sprite = direction.getSprite(j);\n\n      return !!spritePtrs[sprite.ptr];\n    });\n\n    // Iterate from the end to the beginning to avoid invalidating indexes.\n    for (\n      let spriteIndex = direction.getSpritesCount() - 1;\n      spriteIndex >= 0;\n      spriteIndex--\n    ) {\n      if (spritesToDelete[spriteIndex]) direction.removeSprite(spriteIndex);\n    }\n  });\n};\n\nexport const duplicateSpritesInAnimation = (animation, spritePtrs) => {\n  mapFor(0, animation.getDirectionsCount(), i => {\n    const direction = animation.getDirection(i);\n\n    const spritesToDuplicate = mapFor(0, direction.getSpritesCount(), j => {\n      const sprite = direction.getSprite(j);\n\n      return !!spritePtrs[sprite.ptr];\n    });\n\n    // Iterate from the end to the beginning to avoid invalidating indexes.\n    for (\n      let spriteIndex = direction.getSpritesCount() - 1;\n      spriteIndex >= 0;\n      spriteIndex--\n    ) {\n      if (spritesToDuplicate[spriteIndex]) {\n        const spriteToDuplicate = direction.getSprite(spriteIndex);\n        const newSprite = new gd.Sprite();\n        newSprite.setImageName(spriteToDuplicate.getImageName());\n        copySpritePoints(spriteToDuplicate, newSprite);\n        copySpritePolygons(spriteToDuplicate, newSprite);\n\n        direction.addSprite(newSprite);\n        direction.moveSprite(direction.getSpritesCount() - 1, spriteIndex);\n      }\n    }\n  });\n};\n","// @flow\nimport * as React from 'react';\nimport ElementWithMenu from './Menu/ElementWithMenu';\nimport { type MenuItemTemplate } from './Menu/Menu.flow';\nimport { type I18n as I18nType } from '@lingui/core';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { Spacer } from './Grid';\n\ntype Props = {|\n  label?: React.Node,\n  primary?: boolean,\n  disabled?: boolean,\n  icon?: React.Node,\n  onClick: ?() => void,\n  buildMenuTemplate: (i18n: I18nType) => Array<MenuItemTemplate>,\n  style?: {|\n    marginTop?: number,\n    marginBottom?: number,\n    marginLeft?: number,\n    marginRight?: number,\n    margin?: number,\n    flexShrink?: 0,\n  |},\n|};\n\nconst shouldNeverBeCalled = () => {\n  throw new Error(\n    'This RaisedButtonWithSplitMenu onClick should never be called'\n  );\n};\n\nconst styles = {\n  mainButton: { flex: 1 },\n};\n\n/**\n * A raised button based on Material-UI button, that has a menu displayed\n * when the dropdown arrow is clicked.\n */\nconst RaisedButtonWithSplitMenu = (props: Props) => {\n  const { buildMenuTemplate, onClick, label, primary, icon, disabled } = props;\n\n  // In theory, focus ripple is only shown after a keyboard interaction\n  // (see https://github.com/mui-org/material-ui/issues/12067). However, as\n  // it's important to get focus right in the whole app, make the ripple\n  // always visible to be sure we're getting focusing right.\n  const focusRipple = true;\n\n  return (\n    <ButtonGroup\n      variant=\"contained\"\n      color={primary ? 'primary' : 'default'}\n      disabled={disabled}\n      size=\"small\"\n      style={props.style}\n    >\n      <Button\n        focusRipple={focusRipple}\n        onClick={onClick}\n        style={styles.mainButton}\n      >\n        {icon}\n        {icon && <Spacer />}\n        {label}\n      </Button>\n      <ElementWithMenu\n        passExtraProps={\n          true /* ButtonGroup is passing props to Button: disabled, color, variant, size */\n        }\n        element={\n          <Button onClick={shouldNeverBeCalled} focusRipple={focusRipple}>\n            <ArrowDropDownIcon />\n          </Button>\n        }\n        buildMenuTemplate={buildMenuTemplate}\n      />\n    </ButtonGroup>\n  );\n};\n\nexport default RaisedButtonWithSplitMenu;\n","// @flow\nimport { type I18n as I18nType } from '@lingui/core';\nimport { mapVector, mapFor } from '../Utils/MapFor';\nimport { caseSensitiveSlug } from '../Utils/CaseSensitiveSlug';\nimport {\n  declareInstructionOrExpressionMetadata,\n  declareBehaviorInstructionOrExpressionMetadata,\n  declareEventsFunctionParameters,\n  declareBehaviorMetadata,\n  declareExtension,\n  isBehaviorLifecycleEventsFunction,\n  isExtensionLifecycleEventsFunction,\n  declareBehaviorPropertiesInstructionAndExpressions,\n} from './MetadataDeclarationHelpers';\n\nconst gd: libGDevelop = global.gd;\n\nexport type EventsFunctionCodeWriter = {|\n  getIncludeFileFor: (functionName: string) => string,\n  writeFunctionCode: (functionName: string, code: string) => Promise<void>,\n  writeBehaviorCode: (behaviorName: string, code: string) => Promise<void>,\n|};\n\nexport type IncludeFileContent = {|\n  includeFile: string,\n  content: string,\n|};\n\nexport type EventsFunctionCodeWriterCallbacks = {|\n  onWriteFile: IncludeFileContent => void,\n|};\n\ntype Options = {|\n  skipCodeGeneration?: boolean,\n  eventsFunctionCodeWriter: EventsFunctionCodeWriter,\n  i18n: I18nType,\n|};\n\ntype CodeGenerationContext = {|\n  codeNamespacePrefix: string,\n  extensionIncludeFiles: Array<string>,\n|};\n\nconst mangleName = (name: string) => {\n  return caseSensitiveSlug(name, '_', []);\n};\n\n/** Generate the namespace for a free function. */\nconst getFreeFunctionCodeNamespace = (\n  eventsFunction: gdEventsFunction,\n  codeNamespacePrefix: string\n) => {\n  return codeNamespacePrefix + '__' + mangleName(eventsFunction.getName());\n};\n\n/** Generate the namespace for a behavior function. */\nconst getBehaviorFunctionCodeNamespace = (\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  codeNamespacePrefix: string\n) => {\n  return codeNamespacePrefix + '__' + mangleName(eventsBasedBehavior.getName());\n};\n\n/**\n * Load all events functions of a project in extensions\n */\nexport const loadProjectEventsFunctionsExtensions = (\n  project: gdProject,\n  eventsFunctionCodeWriter: EventsFunctionCodeWriter,\n  i18n: I18nType\n): Promise<Array<void>> => {\n  return Promise.all(\n    // First pass: generate extensions from the events functions extensions,\n    // without writing code for the functions. This is useful as events in functions\n    // could be using other functions, which would not yet be available as\n    // extensions.\n    mapFor(0, project.getEventsFunctionsExtensionsCount(), i => {\n      return loadProjectEventsFunctionsExtension(\n        project,\n        project.getEventsFunctionsExtensionAt(i),\n        { skipCodeGeneration: true, eventsFunctionCodeWriter, i18n }\n      );\n    })\n  ).then(() =>\n    Promise.all(\n      // Second pass: generate extensions, including code.\n      mapFor(0, project.getEventsFunctionsExtensionsCount(), i => {\n        return loadProjectEventsFunctionsExtension(\n          project,\n          project.getEventsFunctionsExtensionAt(i),\n          {\n            skipCodeGeneration: false,\n            eventsFunctionCodeWriter,\n            i18n,\n          }\n        );\n      })\n    )\n  );\n};\n\nconst loadProjectEventsFunctionsExtension = (\n  project: gdProject,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  options: Options\n): Promise<void> => {\n  return generateEventsFunctionExtension(\n    project,\n    eventsFunctionsExtension,\n    options\n  ).then(extension => {\n    gd.JsPlatform.get().addNewExtension(extension);\n    extension.delete();\n  });\n};\n\n/**\n * Get the list of mandatory include files when using the\n * extension.\n */\nconst getExtensionIncludeFiles = (\n  project: gdProject,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  options: Options,\n  codeNamespacePrefix: string\n): Array<string> => {\n  return mapFor(0, eventsFunctionsExtension.getEventsFunctionsCount(), i => {\n    const eventsFunction = eventsFunctionsExtension.getEventsFunctionAt(i);\n\n    if (isExtensionLifecycleEventsFunction(eventsFunction.getName())) {\n      const codeNamespace = getFreeFunctionCodeNamespace(\n        eventsFunction,\n        codeNamespacePrefix\n      );\n      const functionName = codeNamespace + '.func'; // TODO\n\n      return options.eventsFunctionCodeWriter.getIncludeFileFor(functionName);\n    }\n\n    return null;\n  }).filter(Boolean);\n};\n\n/**\n * Generate the code for the events based extension\n */\nconst generateEventsFunctionExtension = (\n  project: gdProject,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  options: Options\n): Promise<gdPlatformExtension> => {\n  const extension = new gd.PlatformExtension();\n  declareExtension(extension, eventsFunctionsExtension);\n\n  const codeNamespacePrefix =\n    'gdjs.evtsExt__' + mangleName(eventsFunctionsExtension.getName());\n\n  const extensionIncludeFiles = getExtensionIncludeFiles(\n    project,\n    eventsFunctionsExtension,\n    options,\n    codeNamespacePrefix\n  );\n  const codeGenerationContext = {\n    codeNamespacePrefix,\n    extensionIncludeFiles,\n  };\n\n  return Promise.all(\n    // Generate all behaviors and their functions\n    mapVector(\n      eventsFunctionsExtension.getEventsBasedBehaviors(),\n      eventsBasedBehavior => {\n        return generateBehavior(\n          project,\n          extension,\n          eventsFunctionsExtension,\n          eventsBasedBehavior,\n          options,\n          codeGenerationContext\n        );\n      }\n    )\n  )\n    .then(() =>\n      // Generate all free functions\n      Promise.all(\n        mapFor(0, eventsFunctionsExtension.getEventsFunctionsCount(), i => {\n          const eventsFunction = eventsFunctionsExtension.getEventsFunctionAt(\n            i\n          );\n          return generateFreeFunction(\n            project,\n            extension,\n            eventsFunctionsExtension,\n            eventsFunction,\n            options,\n            codeGenerationContext\n          );\n        })\n      )\n    )\n    .then(() => extension);\n};\n\nconst generateFreeFunction = (\n  project: gdProject,\n  extension: gdPlatformExtension,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  eventsFunction: gdEventsFunction,\n  options: Options,\n  codeGenerationContext: CodeGenerationContext\n): Promise<void> => {\n  const instructionOrExpression = declareInstructionOrExpressionMetadata(\n    extension,\n    eventsFunctionsExtension,\n    eventsFunction\n  );\n  // By convention, first parameter is always the Runtime Scene.\n  instructionOrExpression.addCodeOnlyParameter('currentScene', '');\n  declareEventsFunctionParameters(eventsFunction, instructionOrExpression);\n\n  // Hide \"lifecycle\" functions as they are called automatically by\n  // the game engine.\n  if (isExtensionLifecycleEventsFunction(eventsFunction.getName()))\n    instructionOrExpression.setHidden();\n\n  if (eventsFunction.isPrivate()) instructionOrExpression.setPrivate();\n\n  const codeNamespace = getFreeFunctionCodeNamespace(\n    eventsFunction,\n    codeGenerationContext.codeNamespacePrefix\n  );\n  const functionName = codeNamespace + '.func';\n\n  const codeExtraInformation = instructionOrExpression.getCodeExtraInformation();\n  codeExtraInformation\n    .setIncludeFile(\n      options.eventsFunctionCodeWriter.getIncludeFileFor(functionName)\n    )\n    .setFunctionName(functionName);\n\n  // Always include the extension include files when using a free function.\n  codeGenerationContext.extensionIncludeFiles.forEach(includeFile => {\n    codeExtraInformation.addIncludeFile(includeFile);\n  });\n\n  if (!options.skipCodeGeneration) {\n    const includeFiles = new gd.SetString();\n    const eventsFunctionsExtensionCodeGenerator = new gd.EventsFunctionsExtensionCodeGenerator(\n      project\n    );\n    const code = eventsFunctionsExtensionCodeGenerator.generateFreeEventsFunctionCompleteCode(\n      eventsFunction,\n      codeNamespace,\n      includeFiles,\n      // For now, always generate functions for runtime (this disables\n      // generation of profiling for groups (see EventsCodeGenerator))\n      // as extensions generated can be used either for preview or export.\n      true\n    );\n\n    // Add any include file required by the function to the list\n    // of include files for this function (so that when used, the \"dependencies\"\n    // are transitively included).\n    includeFiles\n      .toNewVectorString()\n      .toJSArray()\n      .forEach((includeFile: string) => {\n        codeExtraInformation.addIncludeFile(includeFile);\n      });\n\n    includeFiles.delete();\n\n    return options.eventsFunctionCodeWriter.writeFunctionCode(\n      functionName,\n      code\n    );\n  } else {\n    // Skip code generation if no events function writer is provided.\n    // This is the case during the \"first pass\", where all events functions extensions\n    // are loaded as extensions but not code generated, as events in functions could\n    // themselves be using functions that are not yet available in extensions.\n    return Promise.resolve();\n  }\n};\n\nfunction generateBehavior(\n  project: gdProject,\n  extension: gdPlatformExtension,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  options: Options,\n  codeGenerationContext: CodeGenerationContext\n): Promise<void> {\n  const behaviorMetadata = declareBehaviorMetadata(\n    extension,\n    eventsBasedBehavior\n  );\n\n  const eventsFunctionsContainer = eventsBasedBehavior.getEventsFunctions();\n  const codeNamespace = getBehaviorFunctionCodeNamespace(\n    eventsBasedBehavior,\n    codeGenerationContext.codeNamespacePrefix\n  );\n  const includeFile = options.eventsFunctionCodeWriter.getIncludeFileFor(\n    codeNamespace\n  );\n\n  behaviorMetadata.setIncludeFile(includeFile);\n\n  // Always include the extension include files when using a behavior.\n  codeGenerationContext.extensionIncludeFiles.forEach(includeFile => {\n    behaviorMetadata.addIncludeFile(includeFile);\n  });\n\n  return Promise.resolve().then(() => {\n    const behaviorMethodMangledNames = new gd.MapStringString();\n\n    // Declare the instructions/expressions for properties\n    declareBehaviorPropertiesInstructionAndExpressions(\n      options.i18n,\n      extension,\n      behaviorMetadata,\n      eventsBasedBehavior\n    );\n\n    // Declare all the behavior functions\n    mapFor(0, eventsFunctionsContainer.getEventsFunctionsCount(), i => {\n      const eventsFunction = eventsFunctionsContainer.getEventsFunctionAt(i);\n\n      const eventsFunctionMangledName = mangleName(eventsFunction.getName());\n      behaviorMethodMangledNames.set(\n        eventsFunction.getName(),\n        eventsFunctionMangledName\n      );\n\n      const instructionOrExpression = declareBehaviorInstructionOrExpressionMetadata(\n        extension,\n        behaviorMetadata,\n        eventsBasedBehavior,\n        eventsFunction\n      );\n      declareEventsFunctionParameters(eventsFunction, instructionOrExpression);\n\n      // Hide \"lifecycle\" methods as they are called automatically by\n      // the game engine.\n      if (isBehaviorLifecycleEventsFunction(eventsFunction.getName())) {\n        instructionOrExpression.setHidden();\n      }\n\n      if (eventsFunction.isPrivate()) instructionOrExpression.setPrivate();\n\n      const codeExtraInformation = instructionOrExpression.getCodeExtraInformation();\n      codeExtraInformation\n        .setIncludeFile(includeFile)\n        .setFunctionName(eventsFunctionMangledName);\n    });\n\n    // Generate code for the behavior and its methods\n    if (!options.skipCodeGeneration) {\n      const includeFiles = new gd.SetString();\n      const behaviorCodeGenerator = new gd.BehaviorCodeGenerator(project);\n      const code = behaviorCodeGenerator.generateRuntimeBehaviorCompleteCode(\n        eventsFunctionsExtension.getName(),\n        eventsBasedBehavior,\n        codeNamespace,\n        behaviorMethodMangledNames,\n        includeFiles,\n\n        // For now, always generate functions for runtime (this disables\n        // generation of profiling for groups (see EventsCodeGenerator))\n        // as extensions generated can be used either for preview or export.\n        true\n      );\n      behaviorCodeGenerator.delete();\n      behaviorMethodMangledNames.delete();\n\n      // Add any include file required by the functions to the list\n      // of include files for this behavior (so that when used, the \"dependencies\"\n      // are transitively included).\n      includeFiles\n        .toNewVectorString()\n        .toJSArray()\n        .forEach((includeFile: string) => {\n          behaviorMetadata.addIncludeFile(includeFile);\n        });\n\n      includeFiles.delete();\n\n      return options.eventsFunctionCodeWriter.writeBehaviorCode(\n        codeNamespace,\n        code\n      );\n    } else {\n      // Skip code generation\n      behaviorMethodMangledNames.delete();\n      return Promise.resolve();\n    }\n  });\n}\n\n/**\n * Unload all extensions providing events functions of a project\n */\nexport const unloadProjectEventsFunctionsExtensions = (\n  project: gdProject\n): Promise<Array<void>> => {\n  return Promise.all(\n    mapFor(0, project.getEventsFunctionsExtensionsCount(), i => {\n      gd.JsPlatform.get().removeExtension(\n        project.getEventsFunctionsExtensionAt(i).getName()\n      );\n    })\n  );\n};\n\n/**\n * Unload a single extension providing events functions of a project\n */\nexport const unloadProjectEventsFunctionsExtension = (\n  project: gdProject,\n  extensionName: string\n): void => {\n  gd.JsPlatform.get().removeExtension(extensionName);\n};\n\n/**\n * Given metadata about an instruction or an expression, tells if this was created\n * from an event function.\n */\nexport const isAnEventFunctionMetadata = (\n  instructionOrExpression: gdInstructionMetadata | gdExpressionMetadata\n) => {\n  const parametersCount = instructionOrExpression.getParametersCount();\n  if (parametersCount <= 0) return false;\n\n  return (\n    instructionOrExpression.getParameter(parametersCount - 1).getType() ===\n    'eventsFunctionContext'\n  );\n};\n\n/**\n * Get back the name a function from its type.\n * See also getFreeEventsFunctionType for the reverse operation.\n */\nexport const getFunctionNameFromType = (type: string) => {\n  const parts = type.split('::');\n  if (!parts.length)\n    return {\n      name: '',\n      behaviorName: '',\n      extensionName: '',\n    };\n\n  return {\n    name: parts[parts.length - 1],\n    behaviorName: parts.length > 2 ? parts[1] : undefined,\n    extensionName: parts[0],\n  };\n};\n\n/**\n * Get the type of a Events Function.\n * See also getFunctionNameFromType for the reverse operation.\n */\nexport const getFreeEventsFunctionType = (\n  extensionName: string,\n  eventsFunction: gdEventsFunction\n) => {\n  return extensionName + '::' + eventsFunction.getName();\n};\n\n/**\n * Return the index of the first parameter to be shown to the user:\n * * 0 for a behavior \"method\",\n * * 1 for a free function (as the first parameter is by convention the runtimeScene).\n */\nexport const getParametersIndexOffset = (\n  isEventsBasedBehaviorMethod: boolean\n) => {\n  return isEventsBasedBehaviorMethod\n    ? 0 /*In the case of a behavior events function, the first two parameters are by convention the \"Object\" and \"Behavior\" */\n    : 1; /*In the case of a free events function (i.e: not tied to a behavior), the first parameter is by convention the current scene and is not shown.*/\n};\n","// @flow\nimport * as PIXI from 'pixi.js-legacy';\nimport { type InstancesEditorSettings } from './InstancesEditorSettings';\n\ntype Props = {|\n  initialViewX: number,\n  initialViewY: number,\n  width: number,\n  height: number,\n  instancesEditorSettings: InstancesEditorSettings,\n|};\n\nexport default class ViewPosition {\n  viewX: number = 0;\n  viewY: number = 0;\n  _width: number;\n  _height: number;\n  instancesEditorSettings: InstancesEditorSettings;\n  _pixiContainer = new PIXI.Container();\n\n  constructor({\n    initialViewX,\n    initialViewY,\n    width,\n    height,\n    instancesEditorSettings,\n  }: Props) {\n    this.viewX = initialViewX;\n    this.viewY = initialViewY;\n    this.instancesEditorSettings = instancesEditorSettings;\n    this.resize(width, height);\n  }\n\n  setInstancesEditorSettings(instancesEditorSettings: InstancesEditorSettings) {\n    this.instancesEditorSettings = instancesEditorSettings;\n  }\n\n  resize(width: number, height: number) {\n    this._width = width;\n    this._height = height;\n  }\n\n  getWidth() {\n    return this._width;\n  }\n\n  getHeight() {\n    return this._height;\n  }\n\n  /**\n   * Convert a point from the canvas coordinates (for example, the mouse position) to the\n   * \"world\" coordinates.\n   */\n  toSceneCoordinates = (x: number, y: number): [number, number] => {\n    x -= this._width / 2;\n    y -= this._height / 2;\n    x /= Math.abs(this.instancesEditorSettings.zoomFactor);\n    y /= Math.abs(this.instancesEditorSettings.zoomFactor);\n\n    var viewRotation = 0;\n    var tmp = x;\n    x =\n      Math.cos((viewRotation / 180) * Math.PI) * x -\n      Math.sin((viewRotation / 180) * Math.PI) * y;\n    y =\n      Math.sin((viewRotation / 180) * Math.PI) * tmp +\n      Math.cos((viewRotation / 180) * Math.PI) * y;\n\n    return [x + this.viewX, y + this.viewY];\n  };\n\n  /**\n   * Convert a point from the \"world\" coordinates (for example, an object position) to the\n   * canvas coordinates.\n   */\n  toCanvasCoordinates = (x: number, y: number): [number, number] => {\n    x -= this.viewX;\n    y -= this.viewY;\n\n    var viewRotation = -0;\n    var tmp = x;\n    x =\n      Math.cos((viewRotation / 180) * Math.PI) * x -\n      Math.sin((viewRotation / 180) * Math.PI) * y;\n    y =\n      Math.sin((viewRotation / 180) * Math.PI) * tmp +\n      Math.cos((viewRotation / 180) * Math.PI) * y;\n\n    x *= Math.abs(this.instancesEditorSettings.zoomFactor);\n    y *= Math.abs(this.instancesEditorSettings.zoomFactor);\n\n    return [x + this._width / 2, y + this._height / 2];\n  };\n\n  scrollBy(x: number, y: number) {\n    this.viewX += x;\n    this.viewY += y;\n  }\n\n  scrollTo(x: number, y: number) {\n    this.viewX = x;\n    this.viewY = y;\n  }\n\n  scrollToInstance(instance: gdInitialInstance) {\n    this.viewX = instance.getX();\n    this.viewY = instance.getY();\n  }\n\n  getViewX() {\n    return this.viewX;\n  }\n\n  getViewY() {\n    return this.viewY;\n  }\n\n  getPixiContainer() {\n    return this._pixiContainer;\n  }\n\n  render() {\n    this._pixiContainer.position.x =\n      -this.viewX * this.instancesEditorSettings.zoomFactor;\n    this._pixiContainer.position.y =\n      -this.viewY * this.instancesEditorSettings.zoomFactor;\n    this._pixiContainer.position.x += this._width / 2;\n    this._pixiContainer.position.y += this._height / 2;\n    this._pixiContainer.scale.x = this.instancesEditorSettings.zoomFactor;\n    this._pixiContainer.scale.y = this.instancesEditorSettings.zoomFactor;\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport IconButton from './IconButton';\nimport ThemeConsumer from './Theme/ThemeConsumer';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\n\ntype Props = {|\n  src: string,\n  tooltip?: MessageDescriptor,\n  acceleratorString?: string,\n  disabled?: boolean,\n  onClick?: () => void,\n  onContextMenu?: () => void,\n|};\n\n/**\n * An icon that can be used in a ToolbarGroup of a Toolbar.\n */\nconst ToolbarIcon = React.forwardRef<Props, IconButton>((props: Props, ref) => {\n  const {\n    src,\n    tooltip,\n    acceleratorString,\n    disabled,\n    onClick,\n    onContextMenu,\n  } = props;\n\n  return (\n    <ThemeConsumer>\n      {muiTheme => (\n        <IconButton\n          onClick={onClick}\n          onContextMenu={onContextMenu}\n          size=\"small\"\n          disabled={disabled}\n          tooltip={tooltip}\n          acceleratorString={acceleratorString}\n          ref={ref}\n        >\n          <img\n            alt={tooltip}\n            src={src}\n            width={32}\n            height={32}\n            style={{\n              filter: disabled\n                ? 'grayscale(100%)'\n                : muiTheme.gdevelopIconsCSSFilter,\n            }}\n          />\n        </IconButton>\n      )}\n    </ThemeConsumer>\n  );\n});\n\nexport default ToolbarIcon;\n","// @flow\n\n// Helpers to manipulate tags. See also EditTagsDialog.js\n\nexport type Tags = Array<string>;\nexport type SelectedTags = Tags;\n\nexport const removeTag = (tags: Tags, tag: string): Tags => {\n  return tags.filter(selectedTag => selectedTag !== tag);\n};\n\nexport const addTags = (tags: Tags, newTags: Tags): Tags => {\n  return Array.from(new Set([...tags, ...newTags]));\n};\n\nexport type BuildTagsMenuTemplateOptions = {|\n  noTagLabel: string,\n  getAllTags: () => Array<string>,\n  selectedTags: SelectedTags,\n  onChange: SelectedTags => void,\n  onEditTags?: () => void,\n  editTagsLabel?: string,\n|};\n\nexport const buildTagsMenuTemplate = ({\n  noTagLabel,\n  getAllTags,\n  selectedTags,\n  onChange,\n  onEditTags,\n  editTagsLabel,\n}: BuildTagsMenuTemplateOptions): Array<any> => {\n  const allTags = getAllTags();\n  const footerMenuItems =\n    onEditTags && editTagsLabel\n      ? [\n          {\n            type: 'separator',\n          },\n          {\n            label: editTagsLabel,\n            click: onEditTags,\n          },\n        ]\n      : [];\n\n  if (!allTags.length) {\n    return [\n      {\n        label: noTagLabel,\n        enabled: false,\n      },\n      ...footerMenuItems,\n    ];\n  }\n\n  return allTags\n    .map(tag => ({\n      type: 'checkbox',\n      label: tag,\n      checked: selectedTags.includes(tag),\n      click: () => {\n        if (selectedTags.includes(tag)) {\n          onChange(removeTag(selectedTags, tag));\n        } else {\n          onChange(addTags(selectedTags, [tag]));\n        }\n      },\n    }))\n    .concat(footerMenuItems);\n};\n\nexport const getTagsFromString = (tagsString: string): Tags => {\n  if (tagsString.trim() === '') return [];\n\n  return tagsString.split(',').map(tag => tag.trim());\n};\n\nexport const getStringFromTags = (tags: Tags): string => {\n  return tags.join(', ');\n};\n\nexport const hasStringAllTags = (tagsString: string, tags: Tags) => {\n  for (const tag of tags) {\n    if (tagsString.indexOf(tag) === -1) return false;\n  }\n\n  return true;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport { useSerializableObjectCancelableEditor } from '../Utils/SerializableObjectCancelableEditor';\nimport VariablesList from './index';\nimport useForceUpdate from '../Utils/UseForceUpdate';\nimport HotReloadPreviewButton, {\n  type HotReloadPreviewButtonProps,\n} from '../HotReload/HotReloadPreviewButton';\n\ntype Props = {|\n  onCancel: () => void,\n  onApply: () => void,\n  open: boolean,\n  onEditObjectVariables?: () => void,\n  title: React.Node,\n  emptyPlaceholderTitle?: React.Node,\n  emptyPlaceholderDescription?: React.Node,\n  variablesContainer: gdVariablesContainer,\n  hotReloadPreviewButtonProps?: ?HotReloadPreviewButtonProps,\n  onComputeAllVariableNames: () => Array<string>,\n  helpPagePath: ?string,\n|};\n\nconst VariablesEditorDialog = ({\n  onCancel,\n  onApply,\n  open,\n  onEditObjectVariables,\n  title,\n  emptyPlaceholderTitle,\n  emptyPlaceholderDescription,\n  variablesContainer,\n  hotReloadPreviewButtonProps,\n  onComputeAllVariableNames,\n  helpPagePath,\n}: Props) => {\n  const forceUpdate = useForceUpdate();\n  const onCancelChanges = useSerializableObjectCancelableEditor({\n    serializableObject: variablesContainer,\n    onCancel,\n  });\n\n  return (\n    <Dialog\n      onApply={onApply}\n      noMargin\n      actions={[\n        <FlatButton\n          label={<Trans>Cancel</Trans>}\n          onClick={onCancelChanges}\n          key={'Cancel'}\n        />,\n        <FlatButton\n          label={<Trans>Apply</Trans>}\n          primary\n          keyboardFocused\n          onClick={onApply}\n          key={'Apply'}\n        />,\n      ]}\n      open={open}\n      cannotBeDismissed={true}\n      onRequestClose={onCancelChanges}\n      secondaryActions={[\n        onEditObjectVariables ? (\n          <FlatButton\n            key=\"edit-object-variables\"\n            label={<Trans>Edit Object Variables</Trans>}\n            primary={false}\n            onClick={onEditObjectVariables}\n          />\n        ) : null,\n        hotReloadPreviewButtonProps ? (\n          <HotReloadPreviewButton\n            key=\"hot-reload-preview-button\"\n            {...hotReloadPreviewButtonProps}\n          />\n        ) : null,\n      ]}\n      title={title}\n      flexBody\n      fullHeight\n    >\n      <VariablesList\n        commitVariableValueOnBlur={\n          // Reduce the number of re-renders by saving the variable value only when the field is blurred.\n          // We don't do that by default because the VariablesList can be used in a component like\n          // InstancePropertiesEditor, that can be unmounted at any time, before the text fields get a\n          // chance to be blurred.\n          true\n        }\n        variablesContainer={variablesContainer}\n        emptyPlaceholderTitle={emptyPlaceholderTitle}\n        emptyPlaceholderDescription={emptyPlaceholderDescription}\n        onSizeUpdated={\n          forceUpdate /*Force update to ensure dialog is properly positioned*/\n        }\n        onComputeAllVariableNames={onComputeAllVariableNames}\n        helpPagePath={helpPagePath}\n      />\n    </Dialog>\n  );\n};\n\nexport default VariablesEditorDialog;\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport Container from '@material-ui/core/Container';\nimport { CircularProgress } from '@material-ui/core';\nimport Add from '@material-ui/icons/Add';\nimport { ColumnStackLayout } from './Layout';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Column, LargeSpacer } from './Grid';\nimport HelpButton from '../UI/HelpButton';\nimport Text from '../UI/Text';\n\ntype Props = {|\n  title: React.Node,\n  description: React.Node,\n  actionLabel: React.Node,\n  helpPagePath?: string,\n  actionButtonId?: string,\n  onAdd: () => void,\n  isLoading?: boolean,\n|};\n\n/**\n * A placeholder for when there is no content to display.\n * Also take a look at EmptyMessage for a less visible message.\n */\nexport const EmptyPlaceholder = (props: Props) => (\n  <Column alignItems=\"center\">\n    <Container\n      style={{\n        maxWidth: '480px',\n        whiteSpace: 'normal',\n      }}\n    >\n      <Column>\n        <Text size=\"title\" align=\"center\">\n          {props.title}\n        </Text>\n        <Text align=\"center\" noMargin>\n          {props.description}\n        </Text>\n        <LargeSpacer />\n        <ColumnStackLayout alignItems=\"center\" noMargin>\n          <RaisedButton\n            label={props.actionLabel}\n            primary\n            onClick={props.onAdd}\n            disabled={!!props.isLoading}\n            icon={props.isLoading ? <CircularProgress size={24} /> : <Add />}\n            id={props.actionButtonId}\n          />\n          <HelpButton\n            label={<Trans>Read the doc</Trans>}\n            helpPagePath={props.helpPagePath}\n          />\n        </ColumnStackLayout>\n      </Column>\n    </Container>\n  </Column>\n);\n","// @flow\nimport * as React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { FormGroup, FormHelperText } from '@material-ui/core';\n\ntype Props = {|\n  label?: ?React.Node,\n  checked: boolean,\n  onCheck?: (e: {||}, checked: boolean) => void,\n  checkedIcon?: React.Node,\n  uncheckedIcon?: React.Node,\n  disabled?: boolean,\n  tooltipOrHelperText?: React.Node,\n|};\n\n/**\n * A checkbox based on Material-UI Checkbox, but that can be displayed\n * without having it taking the full width of its container.\n */\nexport default ({\n  onCheck,\n  disabled,\n  checked,\n  label,\n  uncheckedIcon,\n  checkedIcon,\n  tooltipOrHelperText,\n}: Props) => {\n  const checkbox = (\n    <Checkbox\n      disabled={disabled}\n      checked={checked}\n      onChange={\n        onCheck ? event => onCheck(event, event.target.checked) : undefined\n      }\n      icon={uncheckedIcon}\n      checkedIcon={checkedIcon}\n      color=\"primary\"\n    />\n  );\n  return label ? (\n    <FormGroup>\n      <FormControlLabel control={checkbox} label={label} />\n      {tooltipOrHelperText && (\n        <FormHelperText>{tooltipOrHelperText}</FormHelperText>\n      )}\n    </FormGroup>\n  ) : tooltipOrHelperText && !disabled ? (\n    <Tooltip title={tooltipOrHelperText}>{checkbox}</Tooltip>\n  ) : (\n    checkbox\n  );\n};\n","// @flow\nimport { mapFor } from '../Utils/MapFor';\nimport { type Schema, type Instance } from '.';\nimport { type ResourceKind } from '../ResourcesList/ResourceSource';\nimport { type Field } from '.';\n\n/**\n * Transform a MapStringPropertyDescriptor to a schema that can be used in PropertiesEditor.\n *\n * @param {gdMapStringPropertyDescriptor} properties The properties to use\n * @param {*} getProperties The function called to read again the properties\n * @param {*} onUpdateProperty The function called to update a property of an object\n */\nexport default (\n  properties: gdMapStringPropertyDescriptor,\n  getProperties: (instance: Instance) => any,\n  onUpdateProperty: (\n    instance: Instance,\n    propertyName: string,\n    newValue: string\n  ) => void,\n  object: ?gdObject\n): Schema => {\n  const propertyNames = properties.keys();\n  // Aggregate field by groups to be able to build field groups with a title.\n  const fieldsByGroups = new Map<string, Array<Field>>();\n  mapFor(0, propertyNames.size(), i => {\n    const name = propertyNames.at(i);\n    const property = properties.get(name);\n\n    const groupName = property.getGroup() || '';\n    let fields = fieldsByGroups.get(groupName);\n    if (!fields) {\n      fields = [];\n      fieldsByGroups.set(groupName, fields);\n    }\n\n    const propertyDescription = property.getDescription();\n    const valueType = property.getType().toLowerCase();\n    const getLabel = (instance: Instance) => {\n      const propertyName = getProperties(instance)\n        .get(name)\n        .getLabel();\n      if (propertyName) return propertyName;\n      return (\n        name.charAt(0).toUpperCase() +\n        name\n          .slice(1)\n          .split(/(?=[A-Z])/)\n          .join(' ')\n      );\n    };\n    const getDescription = () => propertyDescription;\n\n    if (property.isHidden()) return null;\n\n    if (valueType === 'number') {\n      fields.push({\n        name,\n        valueType,\n        getValue: (instance: Instance): number => {\n          return (\n            parseFloat(\n              getProperties(instance)\n                .get(name)\n                .getValue()\n            ) || 0\n          ); // Consider a missing value as 0 to avoid propagating NaN.\n        },\n        setValue: (instance: Instance, newValue: number) => {\n          onUpdateProperty(instance, name, '' + newValue);\n        },\n        getLabel,\n        getDescription,\n      });\n      return null;\n    } else if (valueType === 'string' || valueType === '') {\n      fields.push({\n        name,\n        valueType: 'string',\n        getValue: (instance: Instance): string => {\n          return getProperties(instance)\n            .get(name)\n            .getValue();\n        },\n        setValue: (instance: Instance, newValue: string) => {\n          onUpdateProperty(instance, name, newValue);\n        },\n        getLabel,\n        getDescription,\n      });\n      return null;\n    } else if (valueType === 'boolean') {\n      fields.push({\n        name,\n        valueType,\n        getValue: (instance: Instance): boolean => {\n          return (\n            getProperties(instance)\n              .get(name)\n              .getValue() === 'true'\n          );\n        },\n        setValue: (instance: Instance, newValue: boolean) => {\n          onUpdateProperty(instance, name, newValue ? '1' : '0');\n        },\n        getLabel,\n        getDescription,\n      });\n      return null;\n    } else if (valueType === 'choice') {\n      // Choice is a \"string\" (with a selector for the user in the UI)\n      const choices = property\n        .getExtraInfo()\n        .toJSArray()\n        .map(value => ({ value, label: value }));\n      fields.push({\n        name,\n        valueType: 'string',\n        getChoices: () => choices,\n        getValue: (instance: Instance): string => {\n          return getProperties(instance)\n            .get(name)\n            .getValue();\n        },\n        setValue: (instance: Instance, newValue: string) => {\n          onUpdateProperty(instance, name, newValue);\n        },\n        getLabel,\n        getDescription,\n      });\n      return null;\n    } else if (valueType === 'behavior') {\n      const behaviorType =\n        property.getExtraInfo().size() > 0 ? property.getExtraInfo().at(0) : '';\n      fields.push({\n        name,\n        valueType: 'string',\n        getChoices: () => {\n          return !object || behaviorType === ''\n            ? []\n            : object\n                .getAllBehaviorNames()\n                .toJSArray()\n                .map(name =>\n                  object.getBehavior(name).getTypeName() === behaviorType\n                    ? name\n                    : null\n                )\n                .filter(Boolean)\n                .map(value => ({ value, label: value }));\n        },\n        getValue: (instance: Instance): string => {\n          return getProperties(instance)\n            .get(name)\n            .getValue();\n        },\n        setValue: (instance: Instance, newValue: string) => {\n          onUpdateProperty(instance, name, newValue);\n        },\n        getLabel,\n        getDescription,\n      });\n      return null;\n    } else if (valueType === 'resource') {\n      // Resource is a \"string\" (with a selector in the UI)\n      // $FlowFixMe - assume the passed resource kind is always valid.\n      const kind: ResourceKind = property.getExtraInfo().toJSArray()[0] || '';\n      fields.push({\n        name,\n        valueType: 'resource',\n        resourceKind: kind,\n        getValue: (instance: Instance): string => {\n          return getProperties(instance)\n            .get(name)\n            .getValue();\n        },\n        setValue: (instance: Instance, newValue: string) => {\n          onUpdateProperty(instance, name, newValue);\n        },\n        getLabel,\n        getDescription,\n      });\n      return null;\n    } else if (valueType === 'color') {\n      fields.push({\n        name,\n        valueType: 'color',\n        getValue: (instance: Instance): string => {\n          return getProperties(instance)\n            .get(name)\n            .getValue();\n        },\n        setValue: (instance: Instance, newValue: string) => {\n          onUpdateProperty(instance, name, newValue);\n        },\n        getLabel,\n        getDescription,\n      });\n      return null;\n    } else if (valueType === 'textarea') {\n      fields.push({\n        name,\n        valueType: 'textarea',\n        getValue: (instance: Instance): string => {\n          return getProperties(instance)\n            .get(name)\n            .getValue();\n        },\n        setValue: (instance: Instance, newValue: string) => {\n          onUpdateProperty(instance, name, newValue);\n        },\n        getLabel,\n        getDescription,\n      });\n      return null;\n    } else {\n      console.error(\n        `A property with type=${valueType} could not be mapped to a field. Ensure that this type is correct and understood by the IDE.`\n      );\n      return null;\n    }\n  });\n  if (fieldsByGroups.size === 0) {\n    return [];\n  }\n  const defaultGroupField = fieldsByGroups.get('');\n  if (fieldsByGroups.size === 1 && defaultGroupField) {\n    // Avoid to create a blank title\n    return defaultGroupField;\n  }\n  // Create a group for the default one too because it would look weird with the indentation.\n  const groupNames = [...fieldsByGroups.keys()].sort((a, b) =>\n    a.localeCompare(b)\n  );\n  return groupNames.map(groupName => ({\n    name: groupName,\n    type: 'column',\n    title: groupName,\n    // The group actually always exists here.\n    children: fieldsByGroups.get(groupName) || [],\n  }));\n};\n","// @flow\nimport * as React from 'react';\nimport GDevelopThemeContext from '../UI/Theme/ThemeContext';\n\ntype Props = {|\n  style?: Object,\n|};\n\n/**\n * Adds a checkered background to the container element.\n * This component is made to be used as background for sprite editors\n * and previews. Example usage:\n * ```\n * <ContainerElement>\n *   <CheckeredBackground />\n *   <SpriteResource />\n *   (... and any overlays ...)\n * </ContainerElement>\n * ```\n *\n * If while using this, the background overflows out of the parent element\n * (or it just doesn't work as expected), ensure that the parent element and\n * at least one of the sibling elements have `position: relative` set.\n */\nconst CheckeredBackground = (props: Props) => {\n  const theme = React.useContext(GDevelopThemeContext);\n  const backgroundStyle = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n\n    // Apply a theme-defined CSS filter on static checkered background\n    background: 'url(\"res/transparentback.png\") repeat',\n    filter: theme.imagePreview.backgroundFilter || 'none',\n\n    ...props.style,\n  };\n\n  return <div style={backgroundStyle} />;\n};\n\nexport default CheckeredBackground;\n","// @flow\nimport { mapFor } from '../Utils/MapFor';\n\nexport const enumerateLayouts = (project: gdProject): Array<gdLayout> =>\n  mapFor(0, project.getLayoutsCount(), i => project.getLayoutAt(i));\n\nexport const enumerateExternalEvents = (\n  project: gdProject\n): Array<gdExternalEvents> =>\n  mapFor(0, project.getExternalEventsCount(), i =>\n    project.getExternalEventsAt(i)\n  );\n\nexport const enumerateExternalLayouts = (\n  project: gdProject\n): Array<gdExternalLayout> =>\n  mapFor(0, project.getExternalLayoutsCount(), i =>\n    project.getExternalLayoutAt(i)\n  );\n\nexport const enumerateEventsFunctionsExtensions = (\n  project: gdProject\n): Array<gdEventsFunctionsExtension> =>\n  mapFor(0, project.getEventsFunctionsExtensionsCount(), i =>\n    project.getEventsFunctionsExtensionAt(i)\n  );\n\nexport const filterProjectItemsList = <T>(\n  list: Array<T>,\n  searchText: string\n): Array<T> => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list.filter(\n    (item: any) =>\n      item\n        .getName()\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\n\ntype Props = {|\n  children: React.Node,\n|};\n\nexport default (props: Props) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0,0,0,0.5)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Paper\n        elevation={3}\n        style={{\n          padding: 10,\n          margin: 5,\n        }}\n      >\n        {props.children}\n      </Paper>\n    </div>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport PreferencesContext, {\n  type AlertMessageIdentifier,\n} from '../../MainFrame/Preferences/PreferencesContext';\nimport { useScreenType } from '../Reponsive/ScreenTypeMeasurer';\nimport { isUserflowRunning } from '../../MainFrame/Onboarding/OnboardingDialog';\n\ntype Props = {|\n  identifier: AlertMessageIdentifier,\n  message: React.Node,\n  touchScreenMessage?: React.Node,\n  show: boolean,\n|};\n\nconst DismissableInfoBar = ({\n  identifier,\n  show,\n  touchScreenMessage,\n  message,\n}: Props) => {\n  const preferences = React.useContext(PreferencesContext);\n  const screenType = useScreenType();\n\n  return isUserflowRunning ? null : (\n    <Snackbar\n      open={show && !preferences.values.hiddenAlertMessages[identifier]}\n      message={\n        screenType === 'touch' && touchScreenMessage\n          ? touchScreenMessage\n          : message\n      }\n      action={\n        <Button\n          key=\"undo\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={() => {\n            preferences.showAlertMessage(identifier, false);\n          }}\n        >\n          <Trans>Got it</Trans>\n        </Button>\n      }\n    />\n  );\n};\n\nexport default DismissableInfoBar;\n","// @flow\nimport axios from 'axios';\nimport { GDevelopAssetApi } from './ApiConfigs';\nimport { type Filters } from './Filters';\nimport { type UserPublicProfileSearch } from './User';\n\nexport type ExampleShortHeader = {|\n  id: string,\n  slug: string,\n  name: string,\n  shortDescription: string,\n  license: string,\n  tags: Array<string>,\n  authors?: Array<UserPublicProfileSearch>,\n  authorIds?: Array<UserPublicProfileSearch>,\n  previewImageUrls: Array<string>,\n  gdevelopVersion: string,\n|};\n\nexport type Example = {|\n  ...ExampleShortHeader,\n  description: string,\n  projectFileUrl: string,\n  authors: Array<string>,\n|};\n\nexport type AllExamples = {|\n  exampleShortHeaders: Array<ExampleShortHeader>,\n  filters: Filters,\n|};\n\nexport const listAllExamples = async (): Promise<AllExamples> => {\n  const response = await axios.get(\n    `${GDevelopAssetApi.baseUrl}/example-short-header-and-filter`\n  );\n\n  return response.data;\n};\n\nexport const getExample = async (\n  exampleShortHeader: ExampleShortHeader\n): Promise<Example> => {\n  const response = await axios.get(\n    `${GDevelopAssetApi.baseUrl}/example-v2/${exampleShortHeader.id}`\n  );\n\n  return response.data;\n};\n\nexport const getUserExampleShortHeaders = async (\n  authorId: string\n): Promise<Array<ExampleShortHeader>> => {\n  const response = await axios.get(\n    `${GDevelopAssetApi.baseUrl}/example-short-header`,\n    {\n      params: {\n        authorId,\n      },\n    }\n  );\n\n  return response.data;\n};\n","// @flow\nimport * as React from 'react';\nimport Instruction, { reactDndInstructionType } from './Instruction';\nimport { mapFor } from '../../Utils/MapFor';\nimport {\n  isInstructionSelected,\n  type InstructionsListContext,\n  type InstructionContext,\n  type ParameterContext,\n} from '../SelectionHandler';\nimport DropIndicator from './DropIndicator';\nimport { Trans } from '@lingui/macro';\nimport { hasClipboardConditions, hasClipboardActions } from '../ClipboardKind';\nimport { makeDropTarget } from '../../UI/DragAndDrop/DropTarget';\nimport { type ScreenType } from '../../UI/Reponsive/ScreenTypeMeasurer';\nimport { type WidthType } from '../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport { useLongTouch } from '../../Utils/UseLongTouch';\n\nconst styles = {\n  addButton: {\n    cursor: 'pointer',\n  },\n};\n\ntype Props = {\n  instrsList: gdInstructionsList,\n  areConditions: boolean,\n  onAddNewInstruction: InstructionsListContext => void,\n  onPasteInstructions: InstructionsListContext => void,\n  onMoveToInstruction: (destinationContext: InstructionContext) => void,\n  onMoveToInstructionsList: (\n    destinationContext: InstructionsListContext\n  ) => void,\n  onInstructionClick: InstructionContext => void,\n  onInstructionDoubleClick: InstructionContext => void,\n  onInstructionContextMenu: (x: number, y: number, InstructionContext) => void,\n  onAddInstructionContextMenu: (\n    HTMLButtonElement,\n    InstructionsListContext\n  ) => void,\n  onParameterClick: ParameterContext => void,\n  selection: any,\n  addButtonLabel?: React.Node,\n  className?: string,\n  style?: Object,\n  disabled: boolean,\n  renderObjectThumbnail: string => React.Node,\n\n  screenType: ScreenType,\n  windowWidth: WidthType,\n};\n\nconst DropTarget = makeDropTarget<{\n  isCondition: boolean,\n}>(reactDndInstructionType);\n\nexport default function InstructionsList({\n  addButtonLabel,\n  areConditions,\n  className,\n  instrsList,\n  onAddNewInstruction,\n  onPasteInstructions,\n  onMoveToInstruction,\n  onMoveToInstructionsList,\n  onInstructionClick,\n  onInstructionContextMenu,\n  onInstructionDoubleClick,\n  onAddInstructionContextMenu,\n  onParameterClick,\n  selection,\n  style,\n  disabled,\n  renderObjectThumbnail,\n  screenType,\n  windowWidth,\n}: Props) {\n  const [canPaste, setCanPaste] = React.useState(false);\n\n  const addNewInstruction = React.useCallback(\n    () => {\n      if (onAddNewInstruction)\n        onAddNewInstruction({\n          instrsList,\n          isCondition: areConditions,\n        });\n    },\n    [onAddNewInstruction, instrsList, areConditions]\n  );\n\n  const pasteInstructions = React.useCallback(\n    () => {\n      onPasteInstructions({\n        instrsList,\n        isCondition: areConditions,\n      });\n    },\n    [onPasteInstructions, instrsList, areConditions]\n  );\n\n  const instructions = mapFor(0, instrsList.size(), i => {\n    const instruction = instrsList.get(i);\n    const instructionContext = {\n      isCondition: areConditions,\n      instrsList: instrsList,\n      instruction,\n      indexInList: i,\n    };\n\n    return (\n      <Instruction\n        instruction={instruction}\n        isCondition={areConditions}\n        key={instruction.ptr}\n        selected={isInstructionSelected(selection, instruction)}\n        onMoveToInstruction={() => onMoveToInstruction(instructionContext)}\n        onClick={() => onInstructionClick(instructionContext)}\n        onDoubleClick={() => onInstructionDoubleClick(instructionContext)}\n        onContextMenu={(x, y) =>\n          onInstructionContextMenu(x, y, instructionContext)\n        }\n        onParameterClick={(domEvent, parameterIndex) =>\n          onParameterClick({\n            isCondition: instructionContext.isCondition,\n            instrsList: instructionContext.instrsList,\n            instruction: instructionContext.instruction,\n            indexInList: instructionContext.indexInList,\n            parameterIndex,\n            domEvent,\n          })\n        }\n        selection={selection}\n        onAddNewSubInstruction={onAddNewInstruction}\n        onPasteSubInstructions={onPasteInstructions}\n        onMoveToSubInstruction={onMoveToInstruction}\n        onMoveToSubInstructionsList={onMoveToInstructionsList}\n        onSubInstructionClick={onInstructionClick}\n        onSubInstructionDoubleClick={onInstructionDoubleClick}\n        onSubInstructionContextMenu={onInstructionContextMenu}\n        onAddSubInstructionContextMenu={onAddInstructionContextMenu}\n        onSubParameterClick={onParameterClick}\n        disabled={disabled}\n        renderObjectThumbnail={renderObjectThumbnail}\n        screenType={screenType}\n        windowWidth={windowWidth}\n      />\n    );\n  });\n\n  const instructionsListContext = {\n    instrsList,\n    isCondition: areConditions,\n  };\n\n  const addButton = React.useRef<?HTMLButtonElement>(null);\n  const addButtonDefaultLabel = areConditions ? (\n    <Trans>Add condition</Trans>\n  ) : (\n    <Trans>Add action</Trans>\n  );\n  const longTouchForContextMenuProps = useLongTouch(\n    React.useCallback(\n      event => {\n        addButton.current &&\n          onAddInstructionContextMenu(\n            addButton.current,\n            instructionsListContext\n          );\n      },\n      [onAddInstructionContextMenu, instructionsListContext, addButton]\n    )\n  );\n\n  return (\n    <DropTarget\n      canDrop={draggedItem => draggedItem.isCondition === areConditions}\n      drop={() => {\n        onMoveToInstructionsList({\n          isCondition: areConditions,\n          instrsList: instrsList,\n        });\n      }}\n    >\n      {({ connectDropTarget, isOver, canDrop }) =>\n        connectDropTarget(\n          <div className={className} style={style}>\n            {instructions}\n            {isOver && <DropIndicator canDrop={canDrop} />}\n            <span\n              onPointerEnter={() => {\n                setCanPaste(\n                  (areConditions && hasClipboardConditions()) ||\n                    (!areConditions && hasClipboardActions())\n                );\n              }}\n              onPointerLeave={() => {\n                setCanPaste(false);\n              }}\n            >\n              <button\n                style={styles.addButton}\n                className=\"add-link\"\n                onClick={addNewInstruction}\n                onContextMenu={e => {\n                  e.stopPropagation();\n                  onAddInstructionContextMenu(\n                    e.currentTarget,\n                    instructionsListContext\n                  );\n                }}\n                {...longTouchForContextMenuProps}\n                ref={addButton}\n                id={\n                  areConditions ? 'add-condition-button' : 'add-action-button'\n                }\n              >\n                {addButtonLabel || addButtonDefaultLabel}\n              </button>\n              {canPaste && (\n                <span>\n                  <button\n                    style={styles.addButton}\n                    className=\"add-link\"\n                    onClick={pasteInstructions}\n                  >\n                    {areConditions ? (\n                      <Trans>(or paste conditions)</Trans>\n                    ) : (\n                      <Trans>(or paste actions)</Trans>\n                    )}\n                  </button>\n                </span>\n              )}\n            </span>\n          </div>\n        )\n      }\n    </DropTarget>\n  );\n}\n","// @flow\nimport type {\n  GroupWithContext,\n  ObjectWithContext,\n} from '../../../ObjectsList/EnumerateObjects';\nimport { type EnumeratedInstructionOrExpressionMetadata } from '../../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\n\n// ListItem created must have consistent keys that include their type\n// (object, group, instruction) to allow them to be living\n// in the same list (in search results) and be selected.\n\nexport const getObjectGroupListItemKey = (groupWithContext: GroupWithContext) =>\n  `object-group-key-${groupWithContext.group.getName()}-${\n    groupWithContext.global ? '-global' : ''\n  }`;\nexport const getObjectListItemKey = (objectWithContext: ObjectWithContext) =>\n  `object-key-${objectWithContext.object.getName()}-${\n    objectWithContext.global ? '-global' : ''\n  }`;\nexport const getObjectOrObjectGroupListItemValue = (\n  objectOrObjectGroupName: string\n) => `object-or-object-group-value-${objectOrObjectGroupName}`;\n\nexport const getInstructionListItemKey = (\n  instruction: EnumeratedInstructionOrExpressionMetadata\n) => `instruction-key-${instruction.fullGroupName}-${instruction.type}`;\nexport const getInstructionListItemValue = (instructionType: string) =>\n  `instruction-value-${instructionType}`;\n\nexport const getSubheaderListItemKey = (subheader: string) =>\n  `subheader-key-${subheader}`;\n","// @flow\nimport * as React from 'react';\nimport Popper from '@material-ui/core/Popper';\nimport Background from '../UI/Background';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport { Column, Line } from '../UI/Grid';\nimport {\n  shouldCloseOrCancel,\n  shouldFocusNextField,\n  shouldFocusPreviousField,\n  shouldSubmit,\n} from '../UI/KeyboardShortcuts/InteractionKeys';\n\nconst styles = {\n  popover: {\n    paddingBottom: 10,\n    overflowY: 'auto',\n\n    // Never show a horizontal scrollbar\n    overflowX: 'hidden',\n\n    // Restrict size in case of extra small or large popover (though this should not happen)\n    minHeight: 30,\n    maxHeight: 400,\n    maxWidth: 600,\n    minWidth: 300, // Avoid extra small popover for some parameters like relational operator\n\n    // When displayed in an events sheet that has Mosaic windows (see `EditorMosaic`) next to it,\n    // it could be displayed behind them, because they have a z-index of 1, and 4 for the window titles :/\n    // use a z-index of 5 then. Only one InlinePopover should be shown at a time anyway.\n    zIndex: 5,\n  },\n};\n\ntype Props = {|\n  children: React.Node,\n  anchorEl: ?HTMLElement,\n  open: boolean,\n  onRequestClose: () => void,\n  onApply: () => void,\n|};\n\n/**\n * A popover that can be used to show the field to edit a parameter, without\n * opening the full instruction editor.\n * Works like a dialog when opened (trapping the focus, dismissed on Escape,\n * dismissed on click/touch outside) but positioned under the edited parameter.\n */\nexport default function InlinePopover(props: Props) {\n  const startSentinel = React.useRef<?HTMLDivElement>(null);\n  const endSentinel = React.useRef<?HTMLDivElement>(null);\n\n  return (\n    <ClickAwayListener\n      onClickAway={event => {\n        // For a popover, clicking/touching away means validating,\n        // as it's very easy to do it and almost the only way to do it on a touch screen.\n        // The user can cancel with Escape.\n\n        if (event instanceof MouseEvent) {\n          // onClickAway is triggered on a \"click\" (which can actually happen\n          // on a touchscreen too!).\n          // The click already gave the opportunity to the popover content to\n          // get blurred (allowing \"semi controlled\" text fields\n          // to apply their changes). We can close now.\n          props.onApply();\n        } else {\n          // Give a bit of time to the popover content to be blurred\n          // (useful for the \"semi controlled\" text fields for example)\n          // for touch events.\n          //\n          // This timeout needs to be at least around 50ms, otherwise\n          // blur events for GenericExpressionField are not triggered on iOS.\n          // There might be a better way to do this without waiting this much time.\n          setTimeout(() => {\n            props.onApply();\n          }, 50);\n        }\n      }}\n    >\n      <Popper\n        open={props.open}\n        anchorEl={props.anchorEl}\n        style={styles.popover}\n        placement=\"bottom-start\"\n        onKeyDown={event => {\n          // Much like a dialog, offer a way to close the popover\n          // with a key.\n          // Note that the content of the popover can capture the event\n          // and stop its propagation (for example, the GenericExpressionField\n          // when showing autocompletion), which is fine.\n          if (shouldCloseOrCancel(event)) {\n            props.onRequestClose();\n          } else if (shouldSubmit(event)) {\n            props.onApply();\n          }\n\n          // Also like a dialog, add a \"focus trap\". If the user keeps pressing tab\n          // (or shift+tab), we \"loop\" the focus so that it stays inside the popover.\n          // Otherwise, the focus would espace and could go in some unrelated element\n          // in the events sheet, triggering a scroll, which would be very disturbing\n          // and would break the keyboard navigation.\n          if (shouldFocusNextField(event)) {\n            if (event.target && event.target === endSentinel.current) {\n              event.stopPropagation();\n              event.preventDefault();\n              if (startSentinel.current) {\n                startSentinel.current.focus();\n              }\n            }\n          } else if (shouldFocusPreviousField(event)) {\n            if (event.target && event.target === startSentinel.current) {\n              event.stopPropagation();\n              event.preventDefault();\n              if (endSentinel.current) {\n                endSentinel.current.focus();\n              }\n            }\n          }\n        }}\n      >\n        <Background>\n          <div tabIndex={0} ref={startSentinel} />\n          <Column expand>\n            <Line>{props.children}</Line>\n          </Column>\n          <div tabIndex={0} ref={endSentinel} />\n        </Background>\n      </Popper>\n    </ClickAwayListener>\n  );\n}\n","// @flow\nimport { I18n } from '@lingui/react';\nimport * as React from 'react';\nimport {\n  MosaicWindow as RMMosaicWindow,\n  MosaicWithoutDragDropContext,\n  getLeaves,\n} from 'react-mosaic-component';\nimport CloseButton from './CloseButton';\nimport ThemeConsumer from '../Theme/ThemeConsumer';\nimport { type MessageDescriptor } from '../../Utils/i18n/MessageDescriptor.flow';\nimport debounce from 'lodash/debounce';\n\n// EditorMosaic default styling:\nimport 'react-mosaic-component/react-mosaic-component.css';\nimport './style.css';\n\nexport type Editor = {|\n  type: 'primary' | 'secondary',\n  renderEditor: () => React.Node,\n  noTitleBar?: boolean,\n  title?: MessageDescriptor,\n  toolbarControls?: Array<React.Node>,\n|};\n\nexport type EditorMosaicNode =\n  | {|\n      direction: 'row' | 'column',\n      splitPercentage: number,\n      first: ?EditorMosaicNode,\n      second: ?EditorMosaicNode,\n    |}\n  | string;\n\n// Add a node (an editor) in the mosaic.\nconst addNode = (\n  currentNode: ?EditorMosaicNode,\n  newNode: EditorMosaicNode | string,\n  position: 'start' | 'end',\n  splitPercentage: number,\n  direction: 'row' | 'column'\n): EditorMosaicNode => {\n  if (!currentNode) return newNode;\n\n  // Add the new node inside the current node...\n  if (typeof currentNode !== 'string') {\n    if (\n      position === 'end' &&\n      currentNode.second &&\n      typeof currentNode.second !== 'string'\n    ) {\n      return {\n        ...currentNode,\n        second: addNode(\n          currentNode.second,\n          newNode,\n          position,\n          splitPercentage,\n          direction\n        ),\n      };\n    } else if (\n      position === 'start' &&\n      currentNode.first &&\n      typeof currentNode.first !== 'string'\n    ) {\n      return {\n        ...currentNode,\n        first: addNode(\n          currentNode.first,\n          newNode,\n          position,\n          splitPercentage,\n          direction\n        ),\n      };\n    }\n  }\n\n  // Or add the node here.\n  return {\n    direction:\n      direction === 'row'\n        ? // Direction of split is the opposite of what is requested for the editor\n          'column'\n        : 'row',\n    first: position === 'end' ? currentNode : newNode,\n    second: position === 'end' ? newNode : currentNode,\n    splitPercentage,\n  };\n};\n\n// Replace a node (an editor) by another.\nconst replaceNode = (\n  currentNode: ?EditorMosaicNode,\n  oldNode: ?EditorMosaicNode,\n  newNode: ?EditorMosaicNode\n): ?EditorMosaicNode => {\n  if (!currentNode) {\n    return currentNode;\n  } else if (typeof currentNode === 'string') {\n    if (currentNode === oldNode) return newNode;\n\n    return currentNode;\n  } else {\n    if (currentNode === oldNode) return newNode;\n\n    return {\n      ...currentNode,\n      first: replaceNode(currentNode.first, oldNode, newNode),\n      second: replaceNode(currentNode.second, oldNode, newNode),\n    };\n  }\n};\n\nconst defaultToolbarControls = [<CloseButton key=\"close\" />];\n\nconst renderMosaicWindowPreview = props => (\n  <div className=\"mosaic-preview\">\n    <div className=\"mosaic-window-toolbar\">\n      <div className=\"mosaic-window-title\">{props.title}</div>\n    </div>\n    <div className=\"mosaic-window-body\" />\n  </div>\n);\n\n/**\n * A window that can be used in a EditorMosaic, with a close button\n * by default in the toolbarControls and a preview when the window is\n * dragged.\n */\nconst MosaicWindow = (props: any) => (\n  <RMMosaicWindow\n    {...props}\n    toolbarControls={props.toolbarControls || defaultToolbarControls}\n    renderPreview={renderMosaicWindowPreview}\n  />\n);\n\ntype Props = {|\n  initialNodes: EditorMosaicNode,\n  editors: {\n    [string]: Editor,\n  },\n  limitToOneSecondaryEditor?: boolean,\n  onPersistNodes?: EditorMosaicNode => void,\n|};\n\ntype State = {|\n  mosaicNode: ?EditorMosaicNode,\n|};\n\n/**\n * @class EditorMosaic\n *\n * Can be used to create a mosaic of resizable editors.\n * Must be used inside a component wrapped in a DragDropContext.\n */\nexport default class EditorMosaic extends React.Component<Props, State> {\n  state = {\n    mosaicNode: this.props.initialNodes,\n  };\n\n  openEditor = (\n    editorName: string,\n    position: 'start' | 'end',\n    splitPercentage: number,\n    direction: 'row' | 'column'\n  ) => {\n    const { editors, limitToOneSecondaryEditor } = this.props;\n\n    const editor = this.props.editors[editorName];\n    if (!editor) return false;\n\n    const openedEditorNames = getLeaves(this.state.mosaicNode);\n    if (openedEditorNames.indexOf(editorName) !== -1) {\n      return false;\n    }\n\n    if (limitToOneSecondaryEditor && editor.type === 'secondary') {\n      // Replace the existing secondary editor, if any.\n      const secondaryEditorName = openedEditorNames.find(\n        editorName => editors[editorName].type === 'secondary'\n      );\n      if (secondaryEditorName) {\n        this.setState({\n          mosaicNode: replaceNode(\n            this.state.mosaicNode,\n            secondaryEditorName,\n            editorName\n          ),\n        });\n\n        this._persistNodes();\n        return true;\n      }\n    }\n\n    // Open a new editor at the indicated position\n    this.setState({\n      mosaicNode: addNode(\n        this.state.mosaicNode,\n        editorName,\n        position,\n        splitPercentage,\n        direction\n      ),\n    });\n\n    this._persistNodes();\n    return true;\n  };\n\n  _onChange = (mosaicNode: EditorMosaicNode) => {\n    this.setState({ mosaicNode });\n    this._persistNodes();\n  };\n\n  _persistNodes = debounce(() => {\n    if (this.props.onPersistNodes && this.state.mosaicNode) {\n      this.props.onPersistNodes(this.state.mosaicNode);\n    }\n  }, 2000);\n\n  render() {\n    const { editors } = this.props;\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <MosaicWithoutDragDropContext\n            className={`${\n              muiTheme.mosaicRootClassName\n            } mosaic-blueprint-theme mosaic-gd-theme`}\n            renderTile={(editorName: string, path: string) => {\n              const editor = editors[editorName];\n              if (!editor) {\n                console.error(\n                  'Trying to render un unknown editor: ' + editorName\n                );\n                return null;\n              }\n\n              if (editor.noTitleBar) {\n                return editor.renderEditor();\n              }\n\n              return (\n                <I18n>\n                  {({ i18n }) => (\n                    <MosaicWindow\n                      path={path}\n                      title={i18n._(editor.title)}\n                      toolbarControls={editor.toolbarControls}\n                    >\n                      {editor.renderEditor()}\n                    </MosaicWindow>\n                  )}\n                </I18n>\n              );\n            }}\n            value={this.state.mosaicNode}\n            onChange={this._onChange}\n          />\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n","// @flow\nexport default class Rectangle {\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n\n  constructor(\n    left: number = 0,\n    top: number = 0,\n    right: number = 0,\n    bottom: number = 0\n  ) {\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n  }\n\n  set(left: number, top: number, right: number, bottom: number) {\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n  }\n\n  setRectangle(rectangle: Rectangle) {\n    this.left = rectangle.left;\n    this.top = rectangle.top;\n    this.right = rectangle.right;\n    this.bottom = rectangle.bottom;\n  }\n\n  width() {\n    return this.right - this.left;\n  }\n\n  height() {\n    return this.bottom - this.top;\n  }\n\n  centerX() {\n    return (this.left + this.right) / 2;\n  }\n\n  centerY() {\n    return (this.top + this.bottom) / 2;\n  }\n\n  union(rectangle: Rectangle) {\n    if (rectangle.left < this.left) {\n      this.left = rectangle.left;\n    }\n    if (rectangle.top < this.top) {\n      this.top = rectangle.top;\n    }\n    if (rectangle.right > this.right) {\n      this.right = rectangle.right;\n    }\n    if (rectangle.bottom > this.bottom) {\n      this.bottom = rectangle.bottom;\n    }\n  }\n\n  toString() {\n    return (\n      '[' +\n      this.left +\n      ' -> ' +\n      this.right +\n      ' ; ' +\n      this.top +\n      ' -> ' +\n      this.bottom +\n      ']'\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ThemeConsumer from './Theme/ThemeConsumer';\n\ntype ToolbarProps = {|\n  children: React.Node,\n|};\n\ntype ToolbarGroupProps = {|\n  children?: React.Node,\n  firstChild?: boolean,\n  lastChild?: boolean,\n|};\n\nexport const Toolbar = React.memo<ToolbarProps>(\n  ({ children }: ToolbarProps) => (\n    <ThemeConsumer>\n      {muiTheme => (\n        <div\n          style={{\n            backgroundColor: muiTheme.toolbar.backgroundColor,\n            padding: 3,\n            flexShrink: 0,\n            display: 'flex',\n            overflowX: 'auto',\n            overflowY: 'hidden',\n          }}\n        >\n          {children}\n        </div>\n      )}\n    </ThemeConsumer>\n  )\n);\n\nconst toolbarGroupStyle = props => ({\n  flex: 1,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: props.firstChild\n    ? 'flex-start'\n    : props.lastChild\n    ? 'flex-end'\n    : 'center',\n});\n\nexport const ToolbarGroup = React.memo<ToolbarGroupProps>(\n  (props: ToolbarGroupProps) => (\n    <span style={toolbarGroupStyle(props)}>{props.children}</span>\n  )\n);\n","// @flow\nimport React from 'react';\nimport GDevelopThemeContext from '../UI/Theme/ThemeContext';\n\nexport default () => {\n  const theme = React.useContext(GDevelopThemeContext);\n  return (\n    <span\n      style={{\n        height: 32,\n        marginLeft: 3,\n        marginRight: 3,\n        borderLeftStyle: 'solid',\n        borderLeftWidth: 1,\n        borderColor: theme.toolbar.separatorColor,\n      }}\n    />\n  );\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\n\nexport type CommandName =\n  | 'QUIT_APP'\n  | 'OPEN_PROJECT_MANAGER'\n  | 'LAUNCH_NEW_PREVIEW'\n  | 'LAUNCH_DEBUG_PREVIEW'\n  | 'LAUNCH_NETWORK_PREVIEW'\n  | 'HOT_RELOAD_PREVIEW'\n  | 'OPEN_HOME_PAGE'\n  | 'CREATE_NEW_PROJECT'\n  | 'OPEN_PROJECT'\n  | 'SAVE_PROJECT'\n  | 'SAVE_PROJECT_AS'\n  | 'CLOSE_PROJECT'\n  | 'EXPORT_GAME'\n  | 'OPEN_RECENT_PROJECT'\n  | 'OPEN_COMMAND_PALETTE'\n  | 'OPEN_PROJECT_PROPERTIES'\n  | 'OPEN_PROJECT_LOADING_SCREEN'\n  | 'OPEN_PROJECT_VARIABLES'\n  | 'OPEN_PLATFORM_SPECIFIC_ASSETS_DIALOG'\n  | 'OPEN_PROJECT_RESOURCES'\n  | 'OPEN_SEARCH_EXTENSIONS_DIALOG'\n  | 'OPEN_LAYOUT'\n  | 'OPEN_EXTERNAL_EVENTS'\n  | 'OPEN_EXTERNAL_LAYOUT'\n  | 'OPEN_EXTENSION'\n  | 'OPEN_SCENE_PROPERTIES'\n  | 'OPEN_SCENE_VARIABLES'\n  | 'OPEN_OBJECTS_PANEL'\n  | 'OPEN_OBJECT_GROUPS_PANEL'\n  | 'OPEN_PROPERTIES_PANEL'\n  | 'TOGGLE_INSTANCES_PANEL'\n  | 'TOGGLE_LAYERS_PANEL'\n  | 'SCENE_EDITOR_UNDO'\n  | 'SCENE_EDITOR_REDO'\n  | 'DELETE_INSTANCES'\n  | 'TOGGLE_WINDOW_MASK'\n  | 'TOGGLE_GRID'\n  | 'OPEN_SETUP_GRID'\n  | 'EDIT_LAYER_EFFECTS'\n  | 'EDIT_LAYER'\n  | 'EDIT_NETWORK_PREVIEW'\n  | 'EDIT_OBJECT'\n  | 'EDIT_OBJECT_BEHAVIORS'\n  | 'EDIT_OBJECT_EFFECTS'\n  | 'EDIT_OBJECT_VARIABLES'\n  | 'EDIT_OBJECT_GROUP'\n  | 'ADD_STANDARD_EVENT'\n  | 'ADD_SUBEVENT'\n  | 'ADD_COMMENT_EVENT'\n  | 'TOGGLE_EVENT_DISABLED'\n  | 'CHOOSE_AND_ADD_EVENT'\n  | 'EVENTS_EDITOR_UNDO'\n  | 'EVENTS_EDITOR_REDO'\n  | 'DELETE_SELECTION'\n  | 'SEARCH_EVENTS'\n  | 'OPEN_EXTENSION_SETTINGS'\n  | 'OPEN_PROFILE'\n  | 'OPEN_GAMES_DASHBOARD';\n\nexport const commandAreas = {\n  GENERAL: t`General`,\n  IDE: t`IDE`,\n  PROJECT: t`Project`,\n  SCENE: t`Scene`,\n  EVENTS: t`Events`,\n};\n\ntype CommandArea = $Keys<typeof commandAreas>;\n\ntype CommandMetadata = {|\n  area: CommandArea,\n  displayText: MessageDescriptor,\n  noShortcut?: boolean, // If true, command won't show up in shortcuts list\n  ghost?: boolean, // If true, command won't show up in palette\n  handledByElectron?: boolean, // If true, command shortcut is handled by Electron in desktop app\n|};\n\nconst commandsList: { [CommandName]: CommandMetadata } = {\n  // General commands\n  QUIT_APP: {\n    area: 'GENERAL',\n    displayText: t`Close GDevelop`,\n    handledByElectron: true,\n  },\n  OPEN_PROJECT_MANAGER: {\n    area: 'IDE',\n    displayText: t`Open project manager`,\n    handledByElectron: true,\n  },\n  OPEN_PROFILE: {\n    area: 'IDE',\n    displayText: t`Open My Profile`,\n  },\n  OPEN_GAMES_DASHBOARD: {\n    area: 'IDE',\n    displayText: t`Open My Games Dashboard`,\n  },\n  LAUNCH_NEW_PREVIEW: { area: 'PROJECT', displayText: t`Launch new preview` },\n  LAUNCH_DEBUG_PREVIEW: {\n    area: 'PROJECT',\n    displayText: t`Launch preview with debugger and profiler`,\n  },\n  LAUNCH_NETWORK_PREVIEW: {\n    area: 'PROJECT',\n    displayText: t`Launch network preview over WiFi/LAN`,\n  },\n  HOT_RELOAD_PREVIEW: {\n    area: 'PROJECT',\n    displayText: t`Apply changes to the running preview`,\n  },\n  OPEN_HOME_PAGE: { area: 'IDE', displayText: t`Show Home` },\n  CREATE_NEW_PROJECT: {\n    area: 'GENERAL',\n    displayText: t`Create a new project`,\n    handledByElectron: true,\n  },\n  OPEN_PROJECT: {\n    area: 'GENERAL',\n    displayText: t`Open project`,\n    handledByElectron: true,\n  },\n  SAVE_PROJECT: {\n    area: 'GENERAL',\n    displayText: t`Save project`,\n    handledByElectron: true,\n  },\n  SAVE_PROJECT_AS: {\n    area: 'GENERAL',\n    displayText: t`Save project as...`,\n    handledByElectron: true,\n  },\n  CLOSE_PROJECT: {\n    area: 'GENERAL',\n    displayText: t`Close project`,\n    handledByElectron: true,\n  },\n  EXPORT_GAME: {\n    area: 'PROJECT',\n    displayText: t`Export game`,\n    handledByElectron: true,\n  },\n  OPEN_RECENT_PROJECT: {\n    area: 'GENERAL',\n    displayText: t`Open recent project...`,\n  },\n  OPEN_COMMAND_PALETTE: {\n    area: 'IDE',\n    displayText: t`Open command palette`,\n    ghost: true,\n  },\n\n  // Project manager commands\n  OPEN_PROJECT_PROPERTIES: {\n    area: 'PROJECT',\n    displayText: t`Open project properties`,\n  },\n  OPEN_PROJECT_LOADING_SCREEN: {\n    area: 'PROJECT',\n    displayText: t`Edit loading screen`,\n  },\n  OPEN_PROJECT_VARIABLES: {\n    area: 'PROJECT',\n    displayText: t`Edit global variables`,\n  },\n  OPEN_PLATFORM_SPECIFIC_ASSETS_DIALOG: {\n    area: 'PROJECT',\n    displayText: t`Open project icons`,\n  },\n  OPEN_PROJECT_RESOURCES: {\n    area: 'PROJECT',\n    displayText: t`Open project resources`,\n  },\n  OPEN_SEARCH_EXTENSIONS_DIALOG: {\n    area: 'PROJECT',\n    displayText: t`Search/import extensions`,\n  },\n\n  // Tab-opening commands\n  OPEN_LAYOUT: { area: 'IDE', displayText: t`Open scene...` },\n  OPEN_EXTERNAL_EVENTS: {\n    area: 'IDE',\n    displayText: t`Open external events...`,\n  },\n  OPEN_EXTERNAL_LAYOUT: {\n    area: 'IDE',\n    displayText: t`Open external layout...`,\n  },\n  OPEN_EXTENSION: { area: 'IDE', displayText: t`Open extension...` },\n\n  // Scene editor commands\n  OPEN_SCENE_PROPERTIES: {\n    area: 'SCENE',\n    displayText: t`Open scene properties`,\n  },\n  OPEN_SCENE_VARIABLES: {\n    area: 'SCENE',\n    displayText: t`Open scene variables`,\n  },\n\n  // Scene editor toolbar commands\n  OPEN_OBJECTS_PANEL: {\n    area: 'SCENE',\n    displayText: t`Open the objects editor`,\n  },\n  OPEN_OBJECT_GROUPS_PANEL: {\n    area: 'SCENE',\n    displayText: t`Open the object groups editor`,\n  },\n  OPEN_PROPERTIES_PANEL: {\n    area: 'SCENE',\n    displayText: t`Open the properties panel`,\n  },\n  TOGGLE_INSTANCES_PANEL: {\n    area: 'SCENE',\n    displayText: t`Open the list of instances`,\n  },\n  TOGGLE_LAYERS_PANEL: {\n    area: 'SCENE',\n    displayText: t`Open the layers editor`,\n  },\n  SCENE_EDITOR_UNDO: {\n    area: 'SCENE',\n    displayText: t`Undo the last changes`,\n    noShortcut: true,\n  },\n  SCENE_EDITOR_REDO: {\n    area: 'SCENE',\n    displayText: t`Redo the last changes`,\n    noShortcut: true,\n  },\n  DELETE_INSTANCES: {\n    area: 'SCENE',\n    displayText: t`Delete the selected instances from the scene`,\n    noShortcut: true,\n  },\n  TOGGLE_WINDOW_MASK: { area: 'SCENE', displayText: t`Toggle mask` },\n  TOGGLE_GRID: { area: 'SCENE', displayText: t`Toggle grid` },\n  OPEN_SETUP_GRID: { area: 'SCENE', displayText: t`Setup grid` },\n\n  // Layers list commands\n  EDIT_LAYER_EFFECTS: {\n    area: 'SCENE',\n    displayText: t`Edit layer effects...`,\n  },\n  EDIT_LAYER: {\n    area: 'SCENE',\n    displayText: t`Edit layer...`,\n  },\n\n  // Objects list commands\n  EDIT_OBJECT: { area: 'SCENE', displayText: t`Edit object...` },\n  EDIT_OBJECT_BEHAVIORS: {\n    area: 'SCENE',\n    displayText: t`Edit object behaviors...`,\n  },\n  EDIT_OBJECT_EFFECTS: {\n    area: 'SCENE',\n    displayText: t`Edit object effects...`,\n  },\n  EDIT_OBJECT_VARIABLES: {\n    area: 'SCENE',\n    displayText: t`Edit object variables...`,\n  },\n\n  // Object groups list commands\n  EDIT_OBJECT_GROUP: { area: 'SCENE', displayText: t`Edit object group...` },\n\n  // Events editor toolbar commands\n  ADD_STANDARD_EVENT: {\n    area: 'EVENTS',\n    displayText: t`Add a new empty event`,\n  },\n  ADD_SUBEVENT: {\n    area: 'EVENTS',\n    displayText: t`Add a sub-event to the selected event`,\n  },\n  ADD_COMMENT_EVENT: { area: 'EVENTS', displayText: t`Add a comment` },\n  TOGGLE_EVENT_DISABLED: {\n    area: 'EVENTS',\n    displayText: t`Toggle disabled event`,\n  },\n  CHOOSE_AND_ADD_EVENT: {\n    area: 'EVENTS',\n    displayText: t`Choose and add an event...`,\n  },\n  EVENTS_EDITOR_UNDO: {\n    area: 'EVENTS',\n    displayText: t`Undo the last changes`,\n    noShortcut: true,\n  },\n  EVENTS_EDITOR_REDO: {\n    area: 'EVENTS',\n    displayText: t`Redo the last changes`,\n    noShortcut: true,\n  },\n  DELETE_SELECTION: {\n    area: 'EVENTS',\n    displayText: t`Delete the selected event(s)`,\n    noShortcut: true,\n  },\n  SEARCH_EVENTS: {\n    area: 'EVENTS',\n    displayText: t`Search in events`,\n    noShortcut: true,\n  },\n  OPEN_EXTENSION_SETTINGS: {\n    area: 'EVENTS',\n    displayText: t`Open extension settings`,\n  },\n};\n\nexport default commandsList;\n","// @flow\nimport * as React from 'react';\n\ntype CallbackEvent = {|\n  /* The X position, relative to the viewport, not including scroll offset, of the long touch */\n  clientX: number,\n  /* The Y position, relative to the viewport, not including scroll offset, of the long touch */\n  clientY: number,\n|};\n\n// Find the position of an event on the screen\nconst getClientXY = (event: TouchEvent): CallbackEvent => {\n  if (event.touches && event.touches.length > 0) {\n    return {\n      clientX: event.touches[0].clientX,\n      clientY: event.touches[0].clientY,\n    };\n  }\n\n  return {\n    clientX: 0,\n    clientY: 0,\n  };\n};\n\nconst delay = 600; // ms\nconst moveTolerance = 10; // px\n\n/**\n * A hook to listen to a long touch (\"long press\") on an element, to workaround the\n * non working onContextMenu on some platforms (Safari on iOS).\n *\n * A long press is characterized by starting a touch and staying pressed, without\n * moving too far from the initial position (to avoid being confused with a drag/scroll).\n */\nexport const useLongTouch = (callback: (e: CallbackEvent) => void) => {\n  const timeout = React.useRef<?TimeoutID>(null);\n  const currentTouchCallbackEvent = React.useRef<CallbackEvent>({\n    clientX: 0,\n    clientY: 0,\n  });\n  const clear = React.useCallback(() => {\n    timeout.current && clearTimeout(timeout.current);\n  }, []);\n\n  React.useEffect(\n    () => {\n      // Cancel the long touch if scrolling (otherwise we can get a long touch\n      // being activated while scroll and maintaining the touch on an element,\n      // which is weird for the user that just want to scroll).\n      document.addEventListener('scroll', clear, {\n        // Get notified as soon as the scroll happens.\n        capture: true,\n\n        // No need for passive: true\n        // According to MDN: \"You don't need to worry about the value of passive for the basic scroll event.\n        // Since it can't be canceled, event listeners can't block page rendering anyway\".\n      });\n\n      return () => {\n        // Ensure we remove the timeout waiting for the long press\n        // if the component is destroyed.\n        clear();\n\n        // Remove the listener for the scroll\n        document.removeEventListener('scroll', clear, { capture: true });\n      };\n    },\n    [clear]\n  );\n\n  const start = React.useCallback(\n    (event: TouchEvent) => {\n      // Ensure we remove the timeout waiting for the long press\n      // if there is one already. This can happen if start is called\n      // multiple times.\n      timeout.current && clearTimeout(timeout.current);\n\n      currentTouchCallbackEvent.current = getClientXY(event);\n      timeout.current = setTimeout(() => {\n        callback(currentTouchCallbackEvent.current);\n      }, delay);\n    },\n    [callback]\n  );\n\n  const onMove = React.useCallback(\n    (event: TouchEvent) => {\n      // If more than one touch,\n      // it's not a long press anymore.\n      if (event.touches.length !== 1) {\n        clear();\n        return;\n      }\n\n      // If touch moved too far from the initial touch position,\n      // it's not a long press anymore.\n      const touch = event.touches[0];\n      const { clientX, clientY } = currentTouchCallbackEvent.current;\n      if (\n        Math.abs(touch.clientX - clientX) > moveTolerance ||\n        Math.abs(touch.clientY - clientY) > moveTolerance\n      ) {\n        clear();\n        return;\n      }\n    },\n    [currentTouchCallbackEvent, clear]\n  );\n\n  return {\n    onTouchStart: start,\n    onTouchMove: onMove,\n    onTouchEnd: clear,\n  };\n};\n","// @flow\nimport React from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport randomColor from 'randomcolor';\nimport { type Tags, removeTag } from '../Utils/TagsHelper';\n\nconst styles = {\n  chipContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    overflowX: 'auto',\n    marginTop: 4,\n  },\n  chip: {\n    marginRight: 4,\n    marginBottom: 4,\n  },\n};\n\nconst getChipColor = (tag: string) => {\n  return randomColor({\n    seed: tag,\n    luminosity: 'light',\n  });\n};\n\ntype Props = {|\n  tags: Tags,\n  onChange?: Tags => void,\n  onRemove?: string => void,\n|};\n\nexport default ({ tags, onChange, onRemove }: Props) => {\n  if (!tags.length) return null;\n\n  const [focusedTag, setFocusedTag] = React.useState<?string>(null);\n  const [removedTagIndex, setRemovedTagIndex] = React.useState<number | null>(\n    null\n  );\n\n  const tagRefs = [];\n  React.useEffect(\n    () => {\n      if (removedTagIndex !== null) {\n        const tagToFocus = tagRefs[Math.min(removedTagIndex, tags.length - 1)];\n        tagToFocus.current && tagToFocus.current.focus();\n        setRemovedTagIndex(null);\n      }\n    },\n    [tags, removedTagIndex, tagRefs]\n  );\n\n  const getChipStyle = React.useCallback(\n    (tag: string) => {\n      const isFocused = !!focusedTag && focusedTag === tag;\n      return {\n        ...styles.chip,\n        backgroundColor: isFocused ? getChipColor(tag) : undefined,\n        color: isFocused ? 'black' : undefined,\n      };\n    },\n    [focusedTag]\n  );\n\n  const handleDeleteTag = (tag: string) => event => {\n    if (event.nativeEvent instanceof KeyboardEvent) {\n      const tagIndex = tags.indexOf(tag);\n      setRemovedTagIndex(tagIndex);\n    }\n    if (onChange) onChange(removeTag(tags, tag));\n    else if (onRemove) onRemove(tag);\n  };\n\n  return (\n    <div style={styles.chipContainer}>\n      {tags.map(tag => {\n        const newRef = React.createRef();\n        tagRefs.push(newRef);\n        return (\n          <Chip\n            key={tag}\n            size=\"small\"\n            style={getChipStyle(tag)}\n            onBlur={() => setFocusedTag(null)}\n            onFocus={() => setFocusedTag(tag)}\n            onDelete={onChange || onRemove ? handleDeleteTag(tag) : null}\n            label={tag}\n            ref={newRef}\n          />\n        );\n      })}\n    </div>\n  );\n};\n","// @flow\nimport * as React from 'react';\nconst gd = global.gd;\n\ntype Props = {|\n  serializableObject: gdSerializable,\n  useProjectToUnserialize?: ?gdProject,\n  onCancel: () => void,\n|};\n\n/**\n * Custom hook serializing the object and allowing to restore back\n * the object to this serialized state later, by calling the function\n * returned by the hook.\n */\nexport const useSerializableObjectCancelableEditor = ({\n  serializableObject,\n  useProjectToUnserialize,\n  onCancel,\n}: Props) => {\n  const serializedElementRef = React.useRef(null);\n  React.useEffect(\n    () => {\n      // Serialize the content of the object, to be used in case the user\n      // want to cancel their changes.\n      if (serializedElementRef.current) {\n        serializedElementRef.current.delete();\n        serializedElementRef.current = null;\n      }\n\n      serializedElementRef.current = new gd.SerializerElement();\n      serializableObject.serializeTo(serializedElementRef.current);\n\n      return () => {\n        if (serializedElementRef.current) {\n          serializedElementRef.current.delete();\n          serializedElementRef.current = null;\n        }\n      };\n    },\n    [serializableObject]\n  );\n\n  const onCancelChanges = React.useCallback(\n    () => {\n      // Use the value that was serialized to cancel the changes\n      // made to the object\n      const serializedElement = serializedElementRef.current;\n      if (!serializedElement) return;\n\n      if (!useProjectToUnserialize) {\n        serializableObject.unserializeFrom(serializedElement);\n      } else {\n        serializableObject.unserializeFrom(\n          useProjectToUnserialize,\n          serializedElement\n        );\n      }\n\n      onCancel();\n    },\n    [serializableObject, useProjectToUnserialize, onCancel]\n  );\n\n  return onCancelChanges;\n};\n","/**\n * The style to apply on a div to add ellipsis when the\n * text is overflowing.\n *\n * Please use this so that it's easy to search in the codebase\n * where text ellipsis is used (without having yet another component).\n * Please also use a `title` prop on the div to set the text tooltip.\n */\nexport const textEllipsisStyle = {\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport OfflineBoltIcon from '@material-ui/icons/OfflineBolt';\n\nexport type HotReloadPreviewButtonProps = {|\n  hasPreviewsRunning: boolean,\n  launchProjectDataOnlyPreview: () => void,\n  launchProjectWithLoadingScreenPreview: () => void,\n|};\n\nexport const NewPreviewIcon = PlayCircleFilledIcon;\nexport const HotReloadPreviewIcon = OfflineBoltIcon;\n\nexport default function HotReloadPreviewButton({\n  launchProjectDataOnlyPreview,\n  hasPreviewsRunning,\n}: HotReloadPreviewButtonProps) {\n  return (\n    <FlatButton\n      icon={hasPreviewsRunning ? <HotReloadPreviewIcon /> : <NewPreviewIcon />}\n      label={\n        hasPreviewsRunning ? (\n          <Trans>Apply changes to preview</Trans>\n        ) : (\n          <Trans>Run a preview</Trans>\n        )\n      }\n      onClick={() => launchProjectDataOnlyPreview()}\n    />\n  );\n}\n","// @flow\r\n// Inspired by https://github.com/LoicMahieu/material-ui-color-picker\r\n\r\nimport * as React from 'react';\r\nimport { SketchPicker } from 'react-color';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport muiZIndex from '@material-ui/core/styles/zIndex';\r\nimport { type RGBColor } from '../../Utils/ColorTransformer';\r\n\r\nexport type ColorResult = {\r\n  rgb: RGBColor,\r\n};\r\n\r\ntype ColorChangeHandler = (color: ColorResult) => void;\r\n\r\ntype Props = {|\r\n  color: ?RGBColor,\r\n  style?: Object,\r\n  onChange?: ColorChangeHandler,\r\n  onChangeComplete?: ColorChangeHandler,\r\n  disableAlpha?: boolean,\r\n|};\r\n\r\ntype State = {|\r\n  displayColorPicker: boolean,\r\n|};\r\n\r\nconst styles = {\r\n  color: {\r\n    width: '36px',\r\n    height: '14px',\r\n    borderRadius: '2px',\r\n    textAlign: 'center',\r\n    fontSize: '10px',\r\n  },\r\n  swatch: {\r\n    padding: '5px',\r\n    background: '#fff',\r\n    borderRadius: '1px',\r\n    boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n    display: 'inline-block',\r\n    cursor: 'pointer',\r\n  },\r\n  popover: {\r\n    // Ensure the popover is above everything (modal, dialog, snackbar, tooltips, etc).\r\n    // There will be only one ColorPicker opened at a time, so it's fair to put the\r\n    // highest z index. If this is breaking, check the z-index of material-ui.\r\n    zIndex: muiZIndex.tooltip + 100,\r\n  },\r\n};\r\n\r\nclass ColorPicker extends React.Component<Props, State> {\r\n  _swatch = React.createRef<HTMLDivElement>();\r\n  state = {\r\n    displayColorPicker: false,\r\n  };\r\n\r\n  open = () => {\r\n    this.setState({ displayColorPicker: true });\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ displayColorPicker: false });\r\n  };\r\n\r\n  render() {\r\n    const { style, color, ...otherProps } = this.props;\r\n\r\n    const displayedColor = color\r\n      ? color\r\n      : {\r\n          r: 200,\r\n          g: 200,\r\n          b: 200,\r\n          a: 1,\r\n        };\r\n\r\n    return (\r\n      <div style={style}>\r\n        <div\r\n          style={styles.swatch}\r\n          onClick={this.handleClick}\r\n          ref={this._swatch}\r\n        >\r\n          <div\r\n            style={{\r\n              ...styles.color,\r\n              background: `rgba(${displayedColor.r}, ${displayedColor.g}, ${\r\n                displayedColor.b\r\n              }, ${displayedColor.a || 1})`,\r\n            }}\r\n          >\r\n            {color ? null : '?'}\r\n          </div>\r\n        </div>\r\n        {this.state.displayColorPicker && this._swatch.current ? (\r\n          <Popover\r\n            open\r\n            onClose={this.handleClose}\r\n            anchorEl={this._swatch.current}\r\n            style={styles.popover}\r\n          >\r\n            <SketchPicker color={displayedColor} {...otherProps} />\r\n          </Popover>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorPicker;\r\n","// @flow\nimport axios from 'axios';\nimport { GDevelopAssetApi } from './ApiConfigs';\nimport semverSatisfies from 'semver/functions/satisfies';\nimport { type UserPublicProfileSearch } from './User';\n\nexport type ExtensionShortHeader = {|\n  shortDescription: string,\n  authors?: Array<UserPublicProfileSearch>,\n  extensionNamespace: string,\n  fullName: string,\n  name: string,\n  version: string,\n  gdevelopVersion?: string,\n  url: string,\n  headerUrl: string,\n  tags: Array<string>,\n  previewIconUrl: string,\n  eventsBasedBehaviorsCount: number,\n  eventsFunctionsCount: number,\n|};\nexport type ExtensionHeader = {|\n  ...ExtensionShortHeader,\n  helpPath: string,\n  description: string,\n  iconUrl: string,\n|};\n\n/**\n * This represents a serialized `gdEventsFunctionsExtension`.\n * This can be fed to the `unserializeFrom` function from `gdEventsFunctionsExtension`.\n *\n * Avoid manipulating this directly: it *can* have similar fields to an `ExtensionHeader` or\n * an `ExtensionShortHeader`, but not all the fields from the headers will be there. For example,\n * the `url` and `headerUrl` are only in the headers, but not in the serialized extension.\n * This is because these fields are specific to the extensions store.\n */\nexport type SerializedExtension = {\n  name: string,\n\n  // This type is inexact because the typing is not complete.\n};\n\nexport type ExtensionsRegistry = {\n  version: string,\n  allTags: Array<string>,\n  extensionShortHeaders: Array<ExtensionShortHeader>,\n};\n\n/**\n * The ExtensionHeader returned by the API, with tags being a string\n * (which is kept in the API for compatibility with older GDevelop versions).\n */\ntype ExtensionHeaderWithTagsAsString = {|\n  ...ExtensionHeader,\n  tags: string,\n|};\n\n/**\n * The SerializedExtension returned by the API, with tags being a string\n * (which is kept in the API for compatibility with older GDevelop versions).\n */\ntype SerializedExtensionWithTagsAsString = {\n  ...SerializedExtension,\n  tags: string,\n};\n\n/**\n * Transform the tags from their old representation sent by the API (a string)\n * to their new representation (array of strings).\n */\nconst transformTagsAsStringToTagsAsArray = <T: { tags: string }>(\n  dataWithTags: T\n): $Exact<{ ...T, tags: Array<string> }> => {\n  // Handle potential future update of the API that would\n  // return tags as an array of strings.\n  if (Array.isArray(dataWithTags.tags)) {\n    // $FlowIgnore\n    return dataWithTags;\n  }\n\n  // $FlowIgnore - ignore issue with non exact types\n  return {\n    ...dataWithTags,\n    tags: dataWithTags.tags.split(',').map(tag => tag.trim().toLowerCase()),\n  };\n};\n\n/** Check if the IDE version, passed as argument, satisfiy the version required by the extension. */\nexport const isCompatibleWithExtension = (\n  ideVersion: string,\n  extensionShortHeader: ExtensionShortHeader\n) =>\n  extensionShortHeader.gdevelopVersion\n    ? semverSatisfies(ideVersion, extensionShortHeader.gdevelopVersion, {\n        includePrerelease: true,\n      })\n    : true;\n\nexport const getExtensionsRegistry = (): Promise<ExtensionsRegistry> => {\n  return axios\n    .get(`${GDevelopAssetApi.baseUrl}/extensions-registry`)\n    .then(response => response.data)\n    .then(extensionsRegistry => {\n      return {\n        ...extensionsRegistry,\n        // TODO: move this to backend endpoint\n        extensionShortHeaders: extensionsRegistry.extensionShortHeaders.map(\n          transformTagsAsStringToTagsAsArray\n        ),\n      };\n    });\n};\n\nexport const getExtensionHeader = (\n  extensionShortHeader: ExtensionShortHeader\n): Promise<ExtensionHeader> => {\n  return axios.get(extensionShortHeader.headerUrl).then(response => {\n    const data: ExtensionHeaderWithTagsAsString = response.data;\n    const transformedData: ExtensionHeader = transformTagsAsStringToTagsAsArray(\n      data\n    );\n    return transformedData;\n  });\n};\n\nexport const getExtension = (\n  extensionHeader: ExtensionShortHeader | ExtensionHeader\n): Promise<SerializedExtension> => {\n  return axios.get(extensionHeader.url).then(response => {\n    const data: SerializedExtensionWithTagsAsString = response.data;\n    const transformedData: SerializedExtension = transformTagsAsStringToTagsAsArray(\n      data\n    );\n    return transformedData;\n  });\n};\n\nexport const getUserExtensionShortHeaders = async (\n  authorId: string\n): Promise<Array<ExtensionShortHeader>> => {\n  const response = await axios.get(\n    `${GDevelopAssetApi.baseUrl}/extension-short-header`,\n    {\n      params: {\n        authorId,\n      },\n    }\n  );\n\n  return response.data;\n};\n","// @flow\nimport * as React from 'react';\nimport { CorsAwareImage } from './CorsAwareImage';\n\nconst styles = {\n  iconBackground: {\n    flex: 0,\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  icon: {\n    background: 'linear-gradient(45deg, #FFFFFF33, #FFFFFF)',\n    borderRadius: 4,\n  },\n};\n\ntype Props = {|\n  src: string,\n  alt: string,\n  size: number,\n|};\n\n/**\n * Display the specified icon with a background so that it's suitable\n * for display anywhere with a consistent style.\n */\nexport const IconContainer = ({ src, alt, size }: Props) => {\n  const padding = size > 24 ? 4 : 2;\n  return (\n    <div style={styles.iconBackground}>\n      <CorsAwareImage\n        style={{\n          ...styles.icon,\n          padding,\n          width: size - 2 * padding,\n          height: size - 2 * padding,\n        }}\n        src={src}\n        alt={alt}\n      />\n    </div>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport GDevelopThemeContext from '../Theme/ThemeContext';\n\nconst highlightText = (\n  text: string,\n  matchCoordinates: number[],\n  start: number,\n  end: ?number,\n  styleToApply: { backgroundColor?: string, color?: string }\n): React.Node[] => {\n  const highlightTextStart = matchCoordinates[0];\n  const highlightTextEnd = matchCoordinates[1] + 1;\n\n  // The part before matched text\n  const beforeText = text.slice(start, highlightTextStart);\n\n  // Matched text\n  const highlightedText = text.slice(highlightTextStart, highlightTextEnd);\n\n  // Part after matched text\n  // Till the end of text, or till next matched text\n  const afterText = text.slice(highlightTextEnd, end || text.length);\n\n  return [\n    beforeText,\n    <span key={`${highlightedText}${highlightTextStart}`} style={styleToApply}>\n      {highlightedText}\n    </span>,\n    afterText,\n  ];\n};\n\nconst HighlightedText = ({\n  text,\n  matchesCoordinates,\n}: {|\n  text: string,\n  matchesCoordinates: number[][],\n|}): React.Node[] => {\n  const theme = React.useContext(GDevelopThemeContext);\n\n  if (matchesCoordinates.length === 0) return [text];\n\n  const returnText = [];\n\n  for (let i = 0; i < matchesCoordinates.length; i++) {\n    const startIndexOfNextMatch = matchesCoordinates[i + 1]\n      ? matchesCoordinates[i + 1][0]\n      : undefined;\n    const startIndex = i === 0 ? 0 : matchesCoordinates[i][0];\n    returnText.push(\n      highlightText(\n        text,\n        matchesCoordinates[i],\n        startIndex,\n        startIndexOfNextMatch,\n        theme.text.highlighted\n      )\n    );\n  }\n\n  return returnText.map((text, i) => (\n    <React.Fragment key={i}>{text}</React.Fragment>\n  ));\n};\n\nexport default HighlightedText;\n","// @flow\n\nimport values from 'lodash/values';\n\nexport type InstructionsListContext = {|\n  isCondition: boolean,\n  instrsList: gdInstructionsList,\n|};\n\nexport type InstructionContext = {|\n  isCondition: boolean,\n  instrsList: gdInstructionsList,\n  instruction: gdInstruction,\n  indexInList: number,\n|};\n\nexport type ParameterContext = {|\n  isCondition: boolean,\n  instrsList: gdInstructionsList,\n  instruction: gdInstruction,\n  indexInList: number,\n  parameterIndex: number,\n  domEvent?: any,\n|};\n\nexport type EventContext = {|\n  eventsList: gdEventsList,\n  event: gdBaseEvent,\n  indexInList: number,\n|};\n\nexport type SelectionState = {\n  selectedInstructions: { [number]: InstructionContext },\n  selectedInstructionsLists: { [number]: InstructionsListContext },\n  selectedEvents: { [number]: EventContext },\n};\n\nexport const getInitialSelection = () => {\n  return {\n    selectedInstructions: {},\n    selectedEvents: {},\n    selectedInstructionsLists: {},\n  };\n};\n\nexport const getSelectedEvents = (\n  selection: SelectionState\n): Array<gdBaseEvent> => {\n  return values(selection.selectedEvents).map(\n    (eventContext: EventContext) => eventContext.event\n  );\n};\n\nexport const getSelectedEventContexts = (\n  selection: SelectionState\n): Array<EventContext> => {\n  return values(selection.selectedEvents);\n};\n\nexport const getSelectedInstructions = (\n  selection: SelectionState\n): Array<gdInstruction> => {\n  return values(selection.selectedInstructions).map(\n    (instructionContext: InstructionContext) => instructionContext.instruction\n  );\n};\n\nexport const getSelectedInstructionsContexts = (\n  selection: SelectionState\n): Array<InstructionContext> => {\n  return values(selection.selectedInstructions);\n};\n\nexport const getSelectedInstructionsListsContexts = (\n  selection: SelectionState\n): Array<InstructionContext> => {\n  return values(selection.selectedInstructionsLists);\n};\n\nexport const isEventSelected = (\n  selection: SelectionState,\n  event: Object\n): boolean => {\n  return !!selection.selectedEvents[event.ptr];\n};\n\nexport const isInstructionSelected = (\n  selection: SelectionState,\n  instruction: gdInstruction\n): boolean => {\n  return !!selection.selectedInstructions[instruction.ptr];\n};\n\nexport const isInstructionsListSelected = (\n  selection: SelectionState,\n  instructionsList: gdInstructionsList\n): boolean => {\n  return !!selection.selectedInstructionsLists[instructionsList.ptr];\n};\n\nexport const hasEventSelected = (selection: SelectionState): boolean => {\n  return !!Object.keys(selection.selectedEvents).length;\n};\n\nexport const hasInstructionSelected = (selection: SelectionState): boolean => {\n  return !!Object.keys(selection.selectedInstructions).length;\n};\n\nexport const hasSelectedAtLeastOneCondition = (\n  selection: SelectionState\n): boolean => {\n  for (let instructionContext of getSelectedInstructionsContexts(selection)) {\n    if (instructionContext.isCondition) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const hasInstructionsListSelected = (\n  selection: SelectionState\n): boolean => {\n  return !!Object.keys(selection.selectedInstructionsLists).length;\n};\n\nexport const hasSomethingSelected = (selection: SelectionState): boolean => {\n  return (\n    hasInstructionSelected(selection) ||\n    hasInstructionsListSelected(selection) ||\n    hasEventSelected(selection)\n  );\n};\n\nexport const clearSelection = (): SelectionState => {\n  return getInitialSelection();\n};\n\nexport const selectEvent = (\n  selection: SelectionState,\n  eventContext: EventContext,\n  multiSelection: boolean = false\n): SelectionState => {\n  const event = eventContext.event;\n  if (isEventSelected(selection, event)) return selection;\n\n  const existingSelection = multiSelection ? selection : clearSelection();\n  return {\n    ...existingSelection,\n    selectedEvents: {\n      ...existingSelection.selectedEvents,\n      [event.ptr]: eventContext,\n    },\n  };\n};\n\nexport const selectInstruction = (\n  selection: SelectionState,\n  instructionContext: InstructionContext,\n  multiSelection: boolean = false\n): SelectionState => {\n  const instruction: gdInstruction = instructionContext.instruction;\n  if (isInstructionSelected(selection, instruction)) return selection;\n\n  const existingSelection = multiSelection ? selection : clearSelection();\n  return {\n    ...existingSelection,\n    selectedInstructions: {\n      ...existingSelection.selectedInstructions,\n      [instruction.ptr]: instructionContext,\n    },\n  };\n};\n\nexport const selectInstructionsList = (\n  selection: SelectionState,\n  instructionsListContext: InstructionsListContext,\n  multiSelection: boolean = false\n): SelectionState => {\n  const instructionsList: gdInstructionsList =\n    instructionsListContext.instrsList;\n  if (isInstructionsListSelected(selection, instructionsList)) return selection;\n\n  const existingSelection = multiSelection ? selection : clearSelection();\n  return {\n    ...existingSelection,\n    selectedInstructionsLists: {\n      ...existingSelection.selectedInstructionsLists,\n      [instructionsList.ptr]: instructionsListContext,\n    },\n  };\n};\n","// @flow\nimport update from 'lodash/update';\nimport compact from 'lodash/compact';\nimport {\n  type EnumeratedInstructionOrExpressionMetadata,\n  type EnumeratedInstructionMetadata,\n  type EnumeratedExpressionMetadata,\n} from './EnumeratedInstructionOrExpressionMetadata.js';\n\nconst GROUP_DELIMITER = '/';\n\nexport type TreeNode<T> =\n  | T\n  | {\n      [string]: TreeNode<T>,\n    };\n\nexport type InstructionTreeNode = TreeNode<EnumeratedInstructionMetadata>;\nexport type ExpressionTreeNode = TreeNode<EnumeratedExpressionMetadata>;\nexport type InstructionOrExpressionTreeNode =\n  | InstructionTreeNode\n  | EnumeratedExpressionMetadata;\n\nexport const createTree = <T: EnumeratedInstructionOrExpressionMetadata>(\n  allExpressions: Array<T>\n): TreeNode<T> => {\n  const tree = {};\n  allExpressions.forEach((expressionInfo: T) => {\n    let pathInTree = compact(\n      expressionInfo.fullGroupName.split(GROUP_DELIMITER)\n    );\n    if (!pathInTree.length) {\n      // Group items without a group in an empty group\n      pathInTree = [''];\n    }\n\n    update(tree, pathInTree, groupInfo => {\n      const existingGroupInfo = groupInfo || {};\n      return {\n        ...existingGroupInfo,\n        [expressionInfo.displayedName]: expressionInfo,\n      };\n    });\n  });\n\n  return tree;\n};\n\nexport const findInTree = <T: Object>(\n  instructionTreeNode: TreeNode<T>,\n  instructionType: ?string\n): ?Array<string> => {\n  if (!instructionType) return null;\n\n  const keys = Object.keys(instructionTreeNode);\n  for (var i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n\n    // In theory, we should have a way to distinguish\n    // between instruction (leaf nodes) and group (nodes). We use\n    // the \"type\" properties, but this will fail if a group is called \"type\"\n    // (hence the flow errors, which are valid warnings)\n    const instructionOrGroup = instructionTreeNode[key];\n    if (!instructionOrGroup) return null;\n\n    if (typeof instructionOrGroup.type === 'string') {\n      // $FlowFixMe - see above\n      const instructionInformation: EnumeratedInstructionOrExpressionMetadata = instructionOrGroup;\n\n      if (instructionInformation.type === instructionType) {\n        return [];\n      }\n    } else {\n      // $FlowFixMe - see above\n      const groupOfInstructionInformation: TreeNode<T> = instructionOrGroup;\n      const searchResult = findInTree(\n        groupOfInstructionInformation,\n        instructionType\n      );\n      if (searchResult) {\n        return [key, ...searchResult];\n      }\n    }\n  }\n\n  return null;\n};\n","//@flow\nimport { type EventsScope } from './EventsScope.flow';\nconst gd: libGDevelop = global.gd;\n\nexport type InstructionOrExpressionScope = {|\n  extension: gdPlatformExtension,\n  objectMetadata?: ?gdObjectMetadata,\n  behaviorMetadata?: ?gdBehaviorMetadata,\n|};\n\nexport type EnumeratedInstructionMetadata = {|\n  type: string,\n  displayedName: string,\n  fullGroupName: string,\n  iconFilename: string,\n  metadata: gdInstructionMetadata,\n  scope: InstructionOrExpressionScope,\n  isPrivate: boolean,\n|};\n\nexport type EnumeratedExpressionMetadata = {|\n  type: string,\n  displayedName: string,\n  fullGroupName: string,\n  iconFilename: string,\n  metadata: gdExpressionMetadata,\n  scope: InstructionOrExpressionScope,\n  isPrivate: boolean,\n  name: string,\n  /** Represents only the visible parameters in the parentheses of the expression. */\n  parameters: Array<gdParameterMetadata>,\n|};\n\n// This is copied from gd::WholeProjectRefactorer (see GetBehaviorFullType)\n// Could be factored into a single C++ function in gd::PlatformExtension?\nconst getBehaviorFullType = (extensionName: string, behaviorName: string) => {\n  const separator = gd.PlatformExtension.getNamespaceSeparator();\n  return extensionName + separator + behaviorName;\n};\n\n// An object representing InstructionMetadata or ExpressionMetadata.\n// Allow to use most information without paying the cost to call the\n// InstructionMetadata/ExpressionMetadata methods. In theory,\n// this type and objects are redundant with InstructionMetadata and ExpressionMetadata.\nexport type EnumeratedInstructionOrExpressionMetadata =\n  | EnumeratedInstructionMetadata\n  | EnumeratedExpressionMetadata;\n\n/**\n * Given a list of expression or instructions that were previously enumerated,\n * filter the ones that are not usable from the current \"scope\".\n */\nexport const filterEnumeratedInstructionOrExpressionMetadataByScope = <\n  +T: EnumeratedInstructionOrExpressionMetadata\n>(\n  list: Array<T>,\n  scope: EventsScope\n): Array<T> => {\n  return list.filter(enumeratedInstructionOrExpressionMetadata => {\n    if (!enumeratedInstructionOrExpressionMetadata.isPrivate) return true;\n\n    // The instruction or expression is marked as \"private\":\n    // we now compare its scope (where it was declared) and the current scope\n    // (where we are) to see if we should filter it or not.\n\n    const {\n      behaviorMetadata,\n      extension,\n    } = enumeratedInstructionOrExpressionMetadata.scope;\n    const { eventsBasedBehavior, eventsFunctionsExtension } = scope;\n\n    // Show private behavior functions when editing the behavior\n    if (\n      behaviorMetadata &&\n      eventsBasedBehavior &&\n      eventsFunctionsExtension &&\n      getBehaviorFullType(\n        eventsFunctionsExtension.getName(),\n        eventsBasedBehavior.getName()\n      ) === behaviorMetadata.getName()\n    )\n      return true;\n\n    // Show private non-behavior functions when editing the extension\n    if (\n      !behaviorMetadata &&\n      eventsFunctionsExtension &&\n      eventsFunctionsExtension.getName() === extension.getName()\n    )\n      return true;\n\n    return false;\n  });\n};\n","// @flow\nimport * as React from 'react';\nimport { type WidthType } from '../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport {\n  actionsContainer,\n  conditionsContainer,\n  smallWidthContainer,\n} from './ClassNames';\n\ntype Props = {|\n  renderConditionsList: ({ style: Object, className: string }) => React.Node,\n  renderActionsList: ({ className: string }) => React.Node,\n  windowWidth: WidthType,\n  className?: string,\n  leftIndentWidth: number,\n|};\n\nconst styles = {\n  oneColumnContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  twoColumnsContainer: {\n    display: 'flex',\n  },\n};\n\n/**\n * Display the lists of instructions (conditions and actions),\n * next to each other on a big screen (with proper sizing for the conditions column),\n * and stacked on a small one.\n */\nconst ConditionsActionsColumns = (props: Props) => {\n  if (props.windowWidth === 'small') {\n    return (\n      <div style={styles.oneColumnContainer} className={props.className}>\n        {props.renderConditionsList({\n          style: {},\n          className: `${conditionsContainer} ${smallWidthContainer}`,\n        })}\n        {props.renderActionsList({\n          style: {},\n          className: `${actionsContainer} ${smallWidthContainer}`,\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <div style={styles.twoColumnsContainer} className={props.className}>\n      {props.renderConditionsList({\n        style: {\n          width: `calc(35vw - ${props.leftIndentWidth}px)`,\n        },\n        className: conditionsContainer,\n      })}\n      {props.renderActionsList({ className: actionsContainer })}\n    </div>\n  );\n};\n\nexport default ConditionsActionsColumns;\n","// @flow\nimport axios from 'axios';\nimport { GDevelopAssetApi } from './ApiConfigs';\n\nexport type Tutorial = {|\n  id: string,\n  title: string,\n  description: string,\n  type: 'video' | 'text',\n  link: string,\n  thumbnailUrl: string,\n|};\n\nexport const listAllTutorials = (): Promise<Array<Tutorial>> => {\n  return axios\n    .get(`${GDevelopAssetApi.baseUrl}/tutorial`)\n    .then(response => response.data);\n};\n\nexport const getObjectTutorialIds = (type: string): Array<string> => {\n  switch (type) {\n    case 'ParticleSystem::ParticleEmitter':\n      return ['particle-effects'];\n    case 'Lighting::LightObject':\n      return ['flickering-dynamic-light-effect'];\n    default:\n      return [];\n  }\n};\n\nexport const getBehaviorTutorialIds = (type: string): Array<string> => {\n  switch (type) {\n    case 'Tween::TweenBehavior':\n      return ['tween-behavior'];\n    case 'AnchorBehavior::AnchorBehavior':\n      return ['responsive-ui'];\n    case 'Physics2::Physics2Behavior':\n      return ['physics-engine-platformer-game', '2d-car-physics-movement'];\n    default:\n      return [];\n  }\n};\n\nexport const getInstructionTutorialIds = (type: string): Array<string> => {\n  switch (type) {\n    case 'CameraX':\n    case 'CameraY':\n    case 'RotateCamera':\n    case 'ZoomCamera':\n    case 'FixCamera':\n    case 'CentreCamera':\n      return ['smooth-camera-movement'];\n    case 'ChangeTimeScale':\n      return ['pause-menu'];\n    case 'EcrireFichierExp':\n    case 'EcrireFichierTxt':\n    case 'LireFichierExp':\n    case 'LireFichierTxt':\n      return ['save-and-load'];\n    case 'PlatformBehavior::SimulateJumpKey':\n      return ['simple-trampoline-platformer'];\n    default:\n      return [];\n  }\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport { Trans } from '@lingui/macro';\nimport IconButton from '../../UI/IconButton';\nimport Measure from 'react-measure';\nimport * as React from 'react';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { Column } from '../../UI/Grid';\nimport MiniToolbar from '../../UI/MiniToolbar';\nimport ZoomIn from '@material-ui/icons/ZoomIn';\nimport ZoomOut from '@material-ui/icons/ZoomOut';\nimport ZoomOutMap from '@material-ui/icons/ZoomOutMap';\nimport PlaceholderMessage from '../../UI/PlaceholderMessage';\nimport Text from '../../UI/Text';\nimport { CorsAwareImage } from '../../UI/CorsAwareImage';\nimport GDevelopThemeContext from '../../UI/Theme/ThemeContext';\nimport CheckeredBackground from '../CheckeredBackground';\nimport { getPixelatedImageRendering } from '../../Utils/CssHelpers';\nconst gd: libGDevelop = global.gd;\n\nconst MARGIN = 50;\nconst MAX_ZOOM_FACTOR = 10;\nconst MIN_ZOOM_FACTOR = 0.1;\n\nconst styles = {\n  previewImagePixelated: {\n    imageRendering: getPixelatedImageRendering(),\n  },\n  contentContainer: {\n    position: 'relative',\n    height: '100%',\n    overflow: 'hidden',\n  },\n  imagePreviewContainer: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    boxSizing: 'border-box',\n    overflow: 'auto',\n\n    // The container contains the image and the \"overlay\" that can display\n    // points or polygons that can be drag'n'dropped. `touch-action` must\n    // be set to `none`, otherwise the (mobile) browser will claim the\n    // `pointermove` event for \"native\" behavior like panning the page.\n    touchAction: 'none',\n  },\n  spriteThumbnailImage: {\n    position: 'relative',\n    pointerEvents: 'none',\n    margin: MARGIN,\n  },\n};\n\ntype Props = {|\n  project: gdProject,\n  resourceName: string,\n  resourcePath?: string,\n  resourcesLoader: typeof ResourcesLoader,\n  fixedHeight?: number,\n  renderOverlay?: ({|\n    imageWidth: number,\n    imageHeight: number,\n    offsetTop: number,\n    offsetLeft: number,\n    imageZoomFactor: number,\n  |}) => React.Node,\n  onSize?: (number, number) => void,\n|};\n\ntype State = {|\n  errored: boolean,\n  imageWidth: ?number,\n  imageHeight: ?number,\n  imageSource: ?string,\n  imageZoomFactor: number,\n|};\n\nconst resourceIsSmooth = (\n  project: gdProject,\n  resourceName: string\n): boolean => {\n  const resource = project.getResourcesManager().getResource(resourceName);\n  if (resource.getKind() !== 'image') return false;\n\n  const imageResource = gd.asImageResource(resource);\n  return imageResource.isSmooth();\n};\n\nconst loadStateFrom = (newProps: {\n  project: gdProject,\n  resourceName: string,\n  resourcesLoader: typeof ResourcesLoader,\n}) => {\n  return {\n    errored: false,\n    imageSource: newProps.resourcesLoader.getResourceFullUrl(\n      newProps.project,\n      newProps.resourceName,\n      {}\n    ),\n  };\n};\n\n/**\n * Display the preview for a resource of a project with kind \"image\".\n */\nconst ImagePreview = (props: Props) => {\n  const [state, setState] = React.useState<State>({\n    errored: false,\n    imageWidth: null,\n    imageHeight: null,\n    imageZoomFactor: 1,\n    ...loadStateFrom(props),\n  });\n\n  React.useEffect(\n    () => {\n      setState(state => ({\n        ...state,\n        ...loadStateFrom({\n          resourceName: props.resourceName,\n          project: props.project,\n          resourcesLoader: props.resourcesLoader,\n        }),\n      }));\n    },\n    [\n      props.resourceName,\n      props.project,\n      props.resourcesLoader,\n      props.resourcePath,\n    ]\n  );\n\n  const handleImageError = () => {\n    setState(state => ({ ...state, errored: true }));\n  };\n\n  const handleImageLoaded = (e: any) => {\n    const imgElement = e.target;\n\n    const imageWidth = imgElement\n      ? imgElement.naturalWidth || imgElement.clientWidth\n      : 0;\n    const imageHeight = imgElement\n      ? imgElement.naturalHeight || imgElement.clientHeight\n      : 0;\n    setState(state => ({ ...state, imageWidth, imageHeight }));\n    if (props.onSize) props.onSize(imageWidth, imageHeight);\n  };\n\n  const zoomBy = (imageZoomFactorDelta: number) => {\n    zoomTo(state.imageZoomFactor + imageZoomFactorDelta);\n  };\n\n  const zoomTo = (imageZoomFactor: number) => {\n    setState(state => ({\n      ...state,\n      imageZoomFactor: Math.min(\n        MAX_ZOOM_FACTOR,\n        Math.max(MIN_ZOOM_FACTOR, imageZoomFactor)\n      ),\n    }));\n  };\n\n  const theme = React.useContext(GDevelopThemeContext);\n  const frameBorderColor = theme.imagePreview.frameBorderColor || '#aaa';\n  const previewBorderColor = theme.imagePreview.borderColor || '#aaa';\n\n  return (\n    <Measure bounds>\n      {({ contentRect, measureRef }) => {\n        const containerWidth = contentRect.bounds.width;\n        const containerHeight = contentRect.bounds.height;\n        const { resourceName, renderOverlay, fixedHeight, project } = props;\n        const { imageHeight, imageWidth, imageSource, imageZoomFactor } = state;\n\n        const imageLoaded = !!imageWidth && !!imageHeight && !state.errored;\n\n        // Centre-align the image and overlays\n        const imagePositionTop = Math.max(\n          0,\n          containerHeight / 2 -\n            ((imageHeight || 0) * imageZoomFactor) / 2 -\n            MARGIN\n        );\n        const imagePositionLeft = Math.max(\n          0,\n          containerWidth / 2 -\n            ((imageWidth || 0) * imageZoomFactor) / 2 -\n            MARGIN\n        );\n\n        const imageStyle = {\n          ...styles.spriteThumbnailImage,\n          top: imagePositionTop || 0,\n          left: imagePositionLeft || 0,\n          width: imageWidth ? imageWidth * imageZoomFactor : undefined,\n          height: imageHeight ? imageHeight * imageZoomFactor : undefined,\n          visibility: imageLoaded ? undefined : 'hidden', // TODO: Loader\n          ...(!resourceIsSmooth(project, resourceName)\n            ? styles.previewImagePixelated\n            : undefined),\n        };\n\n        const frameStyle = {\n          position: 'absolute',\n          top: imagePositionTop + MARGIN || 0,\n          left: imagePositionLeft + MARGIN || 0,\n          width: imageWidth ? imageWidth * imageZoomFactor : undefined,\n          height: imageHeight ? imageHeight * imageZoomFactor : undefined,\n          visibility: imageLoaded ? undefined : 'hidden', // TODO: Loader\n          border: `1px solid ${frameBorderColor}`,\n        };\n\n        const overlayStyle = {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          visibility: imageLoaded ? undefined : 'hidden', // TODO: Loader\n        };\n\n        return (\n          <Column expand noMargin useFullHeight>\n            <MiniToolbar>\n              <IconButton\n                onClick={() => zoomBy(+0.2)}\n                tooltip={t`Zoom in (you can also use Ctrl + Mouse wheel)`}\n              >\n                <ZoomIn />\n              </IconButton>\n              <IconButton\n                onClick={() => zoomBy(-0.2)}\n                tooltip={t`Zoom out (you can also use Ctrl + Mouse wheel)`}\n              >\n                <ZoomOut />\n              </IconButton>\n              <IconButton\n                onClick={() => zoomTo(1)}\n                tooltip={t`Restore original size`}\n              >\n                <ZoomOutMap />\n              </IconButton>\n            </MiniToolbar>\n            <div\n              style={{\n                ...styles.contentContainer,\n                height: fixedHeight || '100%',\n              }}\n            >\n              <CheckeredBackground />\n              <div\n                dir={\n                  'ltr' /* Force LTR layout to avoid issues with image positioning */\n                }\n                style={{\n                  ...styles.imagePreviewContainer,\n                  border: `1px solid ${previewBorderColor}`,\n                }}\n                ref={measureRef}\n                onWheel={event => {\n                  const { deltaY } = event;\n                  //TODO: Use KeyboardShortcuts\n                  if (event.metaKey || event.ctrlKey) {\n                    zoomBy(-deltaY / 500);\n                    event.preventDefault();\n                    event.stopPropagation();\n                  } else {\n                    // Let the usual, native vertical or horizontal scrolling happen.\n                  }\n                }}\n              >\n                {!!state.errored && (\n                  <PlaceholderMessage>\n                    <Text>\n                      <Trans>Unable to load the image</Trans>\n                    </Text>\n                  </PlaceholderMessage>\n                )}\n                {!state.errored && (\n                  <CorsAwareImage\n                    style={imageStyle}\n                    alt={resourceName}\n                    src={imageSource}\n                    onError={handleImageError}\n                    onLoad={handleImageLoaded}\n                  />\n                )}\n                {imageLoaded && renderOverlay && <div style={frameStyle} />}\n                {imageLoaded && renderOverlay && (\n                  <div style={overlayStyle}>\n                    {renderOverlay({\n                      imageWidth: imageWidth || 0,\n                      imageHeight: imageHeight || 0,\n                      offsetTop: imagePositionTop + MARGIN,\n                      offsetLeft: imagePositionLeft + MARGIN,\n                      imageZoomFactor,\n                    })}\n                  </div>\n                )}\n              </div>\n            </div>\n          </Column>\n        );\n      }}\n    </Measure>\n  );\n};\n\nexport default ImagePreview;\n","import optionalRequire from '../../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\n\n/**\n * Wraps an Electron Menu\n */\nexport default class ElectronMenuImplementation {\n  buildFromTemplate(template) {\n    this.menuTemplate = template;\n    return undefined;\n  }\n\n  showMenu(dimensions) {\n    if (!electron) return;\n\n    const { Menu } = electron.remote;\n    const browserWindow = electron.remote.getCurrentWindow();\n    this.menu = Menu.buildFromTemplate(this.menuTemplate);\n    this.menu.popup({\n      window: browserWindow,\n      x: Math.round(dimensions.left),\n      y: Math.round(dimensions.top + dimensions.height),\n      async: true, // Ensure the UI is not blocked on macOS.\n    });\n  }\n\n  getMenuProps() {\n    return {\n      open: false,\n    };\n  }\n}\n","import React, { useState, useRef, useCallback } from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Fade from '@material-ui/core/Fade';\n\nconst SubMenuItem = ({ item, buildFromTemplate }) => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const anchorElement = useRef(null);\n  const setAnchorElement = useCallback(element => {\n    anchorElement.current = element;\n  }, []);\n\n  return (\n    <React.Fragment>\n      <MenuItem\n        dense\n        key={item.label}\n        disabled={item.enabled === false}\n        onClick={event => {\n          if (item.enabled === false) {\n            return;\n          }\n\n          if (!anchorElement.current) {\n            setAnchorElement(event.currentTarget);\n          }\n\n          setMenuOpen(!menuOpen);\n        }}\n      >\n        {item.label}\n        <ArrowRightIcon />\n      </MenuItem>\n      <Menu\n        open={menuOpen}\n        anchorEl={anchorElement.current}\n        onClose={() => setMenuOpen(false)}\n        TransitionComponent={Fade}\n      >\n        {buildFromTemplate(item.submenu)}\n      </Menu>\n    </React.Fragment>\n  );\n};\n\n/**\n * Construct items for material-ui's Menu, using a template which\n * is partially supporting the Electron Menu API (https://github.com/electron/electron/blob/master/docs/api/menu-item.md).\n *\n * Supported options are:\n *  - click\n *  - visible\n *  - type ('separator' and 'checkbox')\n *  - label\n *  - accelerator\n *  - enabled\n *  - checked (when `type` is 'checkbox')\n *  - submenu\n */\nexport default class MaterialUIMenuImplementation {\n  constructor({ onClose }) {\n    this._onClose = onClose;\n  }\n\n  buildFromTemplate(template) {\n    return template\n      .map((item, id) => {\n        if (item.visible === false) return null;\n\n        // Accelerator is not implemented for Material-UI menus\n        // const accelerator = item.accelerator\n        //   ? adaptAcceleratorString(item.accelerator)\n        //   : undefined;\n\n        if (item.type === 'separator') {\n          return <Divider key={'separator' + id} />;\n          // return null;\n        } else if (item.type === 'checkbox') {\n          return (\n            <MenuItem\n              dense\n              key={'checkbox' + item.label}\n              checked={item.checked}\n              disabled={item.enabled === false}\n              onClick={() => {\n                if (item.enabled === false) {\n                  return;\n                }\n\n                if (item.click) {\n                  item.click();\n                }\n                this._onClose();\n              }}\n            >\n              <ListItemIcon>\n                {item.checked ? <CheckBoxIcon /> : <CheckBoxOutlineBlankIcon />}\n              </ListItemIcon>\n              <ListItemText primary={item.label} />\n            </MenuItem>\n          );\n        } else if (item.submenu) {\n          return (\n            <SubMenuItem\n              key={'submenu' + item.label}\n              item={item}\n              buildFromTemplate={template => this.buildFromTemplate(template)}\n            />\n          );\n        } else {\n          return (\n            <MenuItem\n              dense\n              key={'item' + item.label}\n              disabled={item.enabled === false}\n              onClick={() => {\n                if (item.enabled === false) {\n                  return;\n                }\n\n                if (item.click) {\n                  item.click();\n                  this._onClose();\n                }\n              }}\n            >\n              {item.label}\n            </MenuItem>\n          );\n        }\n      })\n      .filter(Boolean);\n  }\n\n  showMenu() {\n    // Automatically done by IconMenu\n  }\n\n  getMenuProps() {\n    return {};\n  }\n}\n","// @flow\nimport React from 'react';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { type MenuItemTemplate } from './Menu.flow';\nimport Menu from '@material-ui/core/Menu';\nimport Fade from '@material-ui/core/Fade';\nimport ElectronMenuImplementation from './ElectronMenuImplementation';\nimport MaterialUIMenuImplementation from './MaterialUIMenuImplementation';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\n\nexport type ContextMenuInterface = {|\n  open: (x: number, y: number, options: any) => void,\n|};\n\ntype ContextMenuProps = {|\n  buildMenuTemplate: (i18n: I18nType, options: any) => Array<MenuItemTemplate>,\n|};\n\nconst MaterialUIContextMenu = React.forwardRef<\n  ContextMenuProps,\n  ContextMenuInterface\n>((props, ref) => {\n  const [anchorPosition, setAnchorPosition] = React.useState<Array<number>>([\n    0,\n    0,\n  ]);\n  const [openMenu, setOpenMenu] = React.useState<boolean>(false);\n  const [buildOptions, setBuildOptions] = React.useState<any>({});\n\n  const menuImplementation = new MaterialUIMenuImplementation({\n    onClose: () => setOpenMenu(false),\n  });\n\n  const open = (x, y, options) => {\n    setAnchorPosition([x, y]);\n    setBuildOptions(options);\n    setOpenMenu(true);\n  };\n\n  React.useImperativeHandle(ref, () => ({\n    open,\n  }));\n\n  return openMenu ? (\n    <I18n>\n      {({ i18n }) => (\n        <Menu\n          open={open}\n          anchorPosition={{\n            left: anchorPosition[0],\n            top: anchorPosition[1],\n          }}\n          anchorReference={'anchorPosition'}\n          onClose={() => setOpenMenu(false)}\n          TransitionComponent={Fade}\n          {...menuImplementation.getMenuProps()}\n        >\n          {menuImplementation.buildFromTemplate(\n            props.buildMenuTemplate(i18n, buildOptions)\n          )}\n        </Menu>\n      )}\n    </I18n>\n  ) : // Don't render the menu when it's not opened, as `buildMenuTemplate` could\n  // be running logic to compute some labels or `enabled` flag values - and might\n  // not be prepared to do that when the menu is not opened.\n  null;\n});\n\ntype ElectronContextMenuProps = {|\n  ...ContextMenuProps,\n  i18n: I18nType,\n|};\n\nconst ElectronContextMenu = React.forwardRef<\n  ElectronContextMenuProps,\n  ContextMenuInterface\n>((props, ref) => {\n  const menuImplementation = new ElectronMenuImplementation();\n\n  const open = (x, y, options) => {\n    menuImplementation.buildFromTemplate(\n      props.buildMenuTemplate(props.i18n, options)\n    );\n    menuImplementation.showMenu({\n      left: x || 0,\n      top: y || 0,\n      width: 0,\n      height: 0,\n    });\n  };\n\n  React.useImperativeHandle(ref, () => ({\n    open,\n  }));\n\n  return null;\n});\n\nconst ElectronContextMenuWrapper = React.forwardRef<\n  ContextMenuProps,\n  ContextMenuInterface\n>((props, ref) => {\n  const electronContextMenu = React.useRef<?ContextMenuInterface>(null);\n  React.useImperativeHandle(ref, () => ({\n    open: (x, y, options) => {\n      if (electronContextMenu.current)\n        electronContextMenu.current.open(x, y, options);\n    },\n  }));\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <ElectronContextMenu {...props} i18n={i18n} ref={electronContextMenu} />\n      )}\n    </I18n>\n  );\n});\n\nexport default (electron ? ElectronContextMenuWrapper : MaterialUIContextMenu);\n","// @flow\nimport * as React from 'react';\nimport { ListItem } from '../List';\nimport ListIcon from '../ListIcon';\nimport TextField, { noMarginTextFieldInListItemTopOffset } from '../TextField';\nimport ThemeConsumer from '../Theme/ThemeConsumer';\nimport { type MenuItemTemplate } from '../Menu/Menu.flow';\nimport { shouldValidate } from '../KeyboardShortcuts/InteractionKeys';\nimport { textEllipsisStyle } from '../TextEllipsis';\n\nconst styles = {\n  textField: {\n    top: noMarginTextFieldInListItemTopOffset,\n  },\n};\n\nconst LEFT_MOUSE_BUTTON = 0;\n\ntype Props<Item> = {|\n  item: Item,\n  itemName: string,\n  id?: ?string,\n  isBold: boolean,\n  onRename: string => void,\n  editingName: boolean,\n  getThumbnail?: () => string,\n  renderItemLabel?: () => React.Node,\n  selected: boolean,\n  onItemSelected: (?Item) => void,\n  errorStatus: '' | 'error' | 'warning',\n  buildMenuTemplate: () => Array<MenuItemTemplate>,\n  onEdit?: ?(Item) => void,\n  hideMenuButton: boolean,\n  scaleUpItemIconWhenSelected?: boolean,\n  connectIconDragSource?: ?(React.Element<any>) => ?React.Node,\n|};\n\nclass ItemRow<Item> extends React.Component<Props<Item>> {\n  textField: ?TextField;\n\n  componentDidUpdate(prevProps: Props<Item>) {\n    if (!prevProps.editingName && this.props.editingName) {\n      setTimeout(() => {\n        if (this.textField) this.textField.focus();\n      }, 100);\n    }\n  }\n\n  render() {\n    const {\n      item,\n      itemName,\n      id,\n      renderItemLabel,\n      isBold,\n      selected,\n      getThumbnail,\n      errorStatus,\n      onEdit,\n      onItemSelected,\n      hideMenuButton,\n      scaleUpItemIconWhenSelected,\n      connectIconDragSource,\n    } = this.props;\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => {\n          const label = this.props.editingName ? (\n            <TextField\n              id=\"rename-item-field\"\n              margin=\"none\"\n              ref={textField => (this.textField = textField)}\n              defaultValue={itemName}\n              onBlur={e => this.props.onRename(e.currentTarget.value)}\n              onKeyPress={event => {\n                if (shouldValidate(event)) {\n                  if (this.textField) this.textField.blur();\n                }\n              }}\n              fullWidth\n              style={styles.textField}\n            />\n          ) : (\n            <div\n              title={typeof itemName === 'string' ? itemName : undefined}\n              style={{\n                ...textEllipsisStyle,\n                color: selected\n                  ? muiTheme.listItem.selectedTextColor\n                  : undefined,\n                fontStyle: isBold ? 'italic' : undefined,\n                fontWeight: isBold ? 'bold' : 'normal',\n              }}\n            >\n              {renderItemLabel ? renderItemLabel() : itemName}\n            </div>\n          );\n\n          const itemStyle = {\n            borderBottom: `1px solid ${muiTheme.listItem.separatorColor}`,\n            backgroundColor: selected\n              ? errorStatus === ''\n                ? muiTheme.listItem.selectedBackgroundColor\n                : errorStatus === 'error'\n                ? muiTheme.listItem.selectedErrorBackgroundColor\n                : muiTheme.listItem.selectedWarningBackgroundColor\n              : undefined,\n            color:\n              errorStatus === ''\n                ? undefined\n                : errorStatus === 'error'\n                ? muiTheme.listItem.errorTextColor\n                : muiTheme.listItem.warningTextColor,\n          };\n\n          const leftIcon = getThumbnail ? (\n            <ListIcon\n              iconSize={24}\n              src={getThumbnail()}\n              cssAnimation={\n                scaleUpItemIconWhenSelected && selected\n                  ? 'scale-and-jiggle 0.8s forwards'\n                  : ''\n              }\n            />\n          ) : null;\n\n          return (\n            <ListItem\n              style={{ ...itemStyle }}\n              primaryText={label}\n              leftIcon={\n                connectIconDragSource && leftIcon\n                  ? connectIconDragSource(<div>{leftIcon}</div>)\n                  : leftIcon\n              }\n              displayMenuButton={!hideMenuButton}\n              rightIconColor={\n                selected\n                  ? muiTheme.listItem.selectedRightIconColor\n                  : muiTheme.listItem.rightIconColor\n              }\n              buildMenuTemplate={this.props.buildMenuTemplate}\n              onClick={() => {\n                if (!onItemSelected) return;\n                if (this.props.editingName) return;\n\n                onItemSelected(selected ? null : item);\n              }}\n              onDoubleClick={event => {\n                if (event.button !== LEFT_MOUSE_BUTTON) return;\n                if (!onEdit) return;\n                if (this.props.editingName) return;\n\n                onItemSelected(null);\n                onEdit(item);\n              }}\n              id={id}\n            />\n          );\n        }}\n      </ThemeConsumer>\n    );\n  }\n}\n\nexport default ItemRow;\n","// @flow\nimport * as React from 'react';\nimport ThemeConsumer from '../Theme/ThemeConsumer';\n\nconst styles = {\n  dropIndicator: {\n    borderTop: '2px solid #18dcf2',\n    height: 0,\n    marginTop: '-1px',\n    marginBottom: '-1px',\n    width: '100%',\n    boxSizing: 'border-box',\n  },\n};\n\nexport default function DropIndicator({ canDrop }: {| canDrop: boolean |}) {\n  return (\n    <ThemeConsumer>\n      {gdevelopTheme => (\n        <div\n          style={{\n            ...styles.dropIndicator,\n            borderColor: canDrop\n              ? gdevelopTheme.listItem.selectedBackgroundColor\n              : gdevelopTheme.listItem.selectedErrorBackgroundColor,\n          }}\n        />\n      )}\n    </ThemeConsumer>\n  );\n}\n","// @flow\r\nimport * as React from 'react';\r\nimport { List } from 'react-virtualized';\r\nimport ItemRow from './ItemRow';\r\nimport { AddListItem } from '../ListCommonItem';\r\nimport { listItemWith32PxIconHeight, listItemWithoutIconHeight } from '../List';\r\nimport { makeDragSourceAndDropTarget } from '../DragAndDrop/DragSourceAndDropTarget';\r\nimport DropIndicator from './DropIndicator';\r\nimport { ResponsiveWindowMeasurer } from '../Reponsive/ResponsiveWindowMeasurer';\r\nimport { ScreenTypeMeasurer } from '../Reponsive/ScreenTypeMeasurer';\r\nimport type { WidthType } from '../Reponsive/ResponsiveWindowMeasurer';\r\n\r\ntype Props<Item> = {|\r\n  height: number,\r\n  width: number,\r\n  fullList: Array<Item>,\r\n  selectedItems: Array<Item>,\r\n  onAddNewItem?: () => void,\r\n  addNewItemLabel?: React.Node | string,\r\n  addNewItemId?: string,\r\n  onRename: (Item, string) => void,\r\n  renderItemLabel?: Item => React.Node,\r\n  getItemName: Item => string,\r\n  getItemThumbnail?: Item => string,\r\n  getItemId?: (Item, index: number) => string,\r\n  isItemBold?: Item => boolean,\r\n  onItemSelected: (?Item) => void,\r\n  onEditItem?: Item => void,\r\n  renamedItem: ?Item,\r\n  erroredItems?: { [string]: '' | 'error' | 'warning' },\r\n  buildMenuTemplate: (Item, index: number) => any,\r\n  onMoveSelectionToItem: (destinationItem: Item) => void,\r\n  canMoveSelectionToItem?: ?(destinationItem: Item) => boolean,\r\n  scaleUpItemIconWhenSelected?: boolean,\r\n  reactDndType: string,\r\n|};\r\n\r\nexport default class SortableVirtualizedItemList<Item> extends React.Component<\r\n  Props<Item>\r\n> {\r\n  _list: ?List;\r\n  DragSourceAndDropTarget = makeDragSourceAndDropTarget<Item>(\r\n    this.props.reactDndType\r\n  );\r\n\r\n  forceUpdateGrid() {\r\n    if (this._list) this._list.forceUpdateGrid();\r\n  }\r\n\r\n  _renderItemRow(\r\n    item: Item,\r\n    index: number,\r\n    windowWidth: WidthType,\r\n    connectIconDragSource?: ?(React.Element<any>) => ?React.Node\r\n  ) {\r\n    const {\r\n      selectedItems,\r\n      getItemThumbnail,\r\n      erroredItems,\r\n      isItemBold,\r\n      onEditItem,\r\n      renamedItem,\r\n      getItemName,\r\n      getItemId,\r\n      renderItemLabel,\r\n      scaleUpItemIconWhenSelected,\r\n    } = this.props;\r\n\r\n    const nameBeingEdited = renamedItem === item;\r\n    const itemName = getItemName(item);\r\n\r\n    return (\r\n      <ItemRow\r\n        item={item}\r\n        itemName={itemName}\r\n        id={getItemId ? getItemId(item, index) : undefined}\r\n        renderItemLabel={\r\n          renderItemLabel ? () => renderItemLabel(item) : undefined\r\n        }\r\n        isBold={isItemBold ? isItemBold(item) : false}\r\n        onRename={newName => this.props.onRename(item, newName)}\r\n        editingName={nameBeingEdited}\r\n        getThumbnail={\r\n          getItemThumbnail ? () => getItemThumbnail(item) : undefined\r\n        }\r\n        selected={selectedItems.indexOf(item) !== -1}\r\n        onItemSelected={this.props.onItemSelected}\r\n        errorStatus={erroredItems ? erroredItems[itemName] || '' : ''}\r\n        buildMenuTemplate={() => this.props.buildMenuTemplate(item, index)}\r\n        onEdit={onEditItem}\r\n        hideMenuButton={windowWidth === 'small'}\r\n        scaleUpItemIconWhenSelected={scaleUpItemIconWhenSelected}\r\n        connectIconDragSource={connectIconDragSource || null}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      height,\r\n      width,\r\n      fullList,\r\n      addNewItemLabel,\r\n      addNewItemId,\r\n      renamedItem,\r\n      getItemThumbnail,\r\n      onAddNewItem,\r\n      onMoveSelectionToItem,\r\n      canMoveSelectionToItem,\r\n      selectedItems,\r\n    } = this.props;\r\n    const { DragSourceAndDropTarget } = this;\r\n\r\n    return (\r\n      <ResponsiveWindowMeasurer>\r\n        {windowWidth => (\r\n          <ScreenTypeMeasurer>\r\n            {screenType => (\r\n              <List\r\n                ref={list => (this._list = list)}\r\n                height={height}\r\n                rowCount={fullList.length + (onAddNewItem ? 1 : 0)}\r\n                rowHeight={\r\n                  getItemThumbnail\r\n                    ? listItemWith32PxIconHeight\r\n                    : listItemWithoutIconHeight\r\n                }\r\n                rowRenderer={({\r\n                  index,\r\n                  key,\r\n                  style,\r\n                }: {|\r\n                  index: number,\r\n                  key: string,\r\n                  style: Object,\r\n                |}) => {\r\n                  if (index >= fullList.length) {\r\n                    return (\r\n                      <div style={style} key={key}>\r\n                        <AddListItem\r\n                          onClick={onAddNewItem}\r\n                          primaryText={addNewItemLabel}\r\n                          id={addNewItemId}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  }\r\n\r\n                  const item = fullList[index];\r\n                  const nameBeingEdited = renamedItem === item;\r\n                  const isSelected = selectedItems.indexOf(item) !== -1;\r\n\r\n                  return (\r\n                    <div style={style} key={key}>\r\n                      <DragSourceAndDropTarget\r\n                        beginDrag={() => {\r\n                          if (!isSelected) this.props.onItemSelected(item);\r\n\r\n                          // $FlowFixMe\r\n                          return {};\r\n                        }}\r\n                        canDrag={() => !nameBeingEdited}\r\n                        canDrop={() =>\r\n                          canMoveSelectionToItem\r\n                            ? canMoveSelectionToItem(item)\r\n                            : true\r\n                        }\r\n                        drop={() => {\r\n                          onMoveSelectionToItem(item);\r\n                        }}\r\n                      >\r\n                        {({\r\n                          connectDragSource,\r\n                          connectDropTarget,\r\n                          isOver,\r\n                          canDrop,\r\n                        }) => {\r\n                          // If on a touch screen, setting the whole item to be\r\n                          // draggable would prevent scroll. Set the icon only to be\r\n                          // draggable if the item is not selected. When selected,\r\n                          // set the whole item to be draggable.\r\n                          const canDragOnlyIcon =\r\n                            screenType === 'touch' && !isSelected;\r\n\r\n                          // Add an extra div because connectDropTarget/connectDragSource can\r\n                          // only be used on native elements\r\n                          const dropTarget = connectDropTarget(\r\n                            <div>\r\n                              {isOver && <DropIndicator canDrop={canDrop} />}\r\n                              {this._renderItemRow(\r\n                                item,\r\n                                index,\r\n                                windowWidth,\r\n                                // Only mark the icon as draggable if needed\r\n                                // (touchscreens).\r\n                                canDragOnlyIcon ? connectDragSource : null\r\n                              )}\r\n                            </div>\r\n                          );\r\n\r\n                          if (!dropTarget) return null;\r\n\r\n                          return canDragOnlyIcon\r\n                            ? dropTarget\r\n                            : connectDragSource(dropTarget);\r\n                        }}\r\n                      </DragSourceAndDropTarget>\r\n                    </div>\r\n                  );\r\n                }}\r\n                width={width}\r\n              />\r\n            )}\r\n          </ScreenTypeMeasurer>\r\n        )}\r\n      </ResponsiveWindowMeasurer>\r\n    );\r\n  }\r\n}\r\n","// @flow\nimport * as React from 'react';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type ResourceKind } from '../ResourceSource';\nimport ImageThumbnail from './ImageThumbnail';\n\ntype Props = {|\n  project: gdProject,\n  resourceName: string,\n  resourcesLoader: typeof ResourcesLoader,\n  style?: Object,\n  selectable?: boolean,\n  selected?: boolean,\n  onSelect?: boolean => void,\n  onContextMenu?: (number, number) => void,\n|};\n\ntype State = {|\n  resourceKind: ?ResourceKind,\n|};\n\n/**\n * Display the right thumbnail for any given resource of a project\n */\nexport default class ResourceThumbnail extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = this._loadFrom(props);\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      newProps.resourceName !== this.props.resourceName ||\n      newProps.project !== this.props.project\n    ) {\n      this.setState(this._loadFrom(newProps));\n    }\n  }\n\n  _loadFrom(props: Props): State {\n    const { project, resourceName } = props;\n    const resourcesManager = project.getResourcesManager();\n    const resourceKind = resourcesManager.hasResource(resourceName)\n      ? resourcesManager.getResource(resourceName).getKind()\n      : null;\n\n    return {\n      resourceKind,\n    };\n  }\n\n  render() {\n    const { resourceKind } = this.state;\n\n    switch (resourceKind) {\n      case 'image':\n        return (\n          <ImageThumbnail\n            project={this.props.project}\n            resourceName={this.props.resourceName}\n            resourcesLoader={this.props.resourcesLoader}\n            style={this.props.style}\n            selectable={this.props.selectable}\n            selected={this.props.selected}\n            onSelect={this.props.onSelect}\n            onContextMenu={this.props.onContextMenu}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ResourcesLoader from '../ResourcesLoader';\nimport ResourceSelector from './ResourceSelector';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n  type ResourceKind,\n} from './ResourceSource';\nimport ResourceThumbnail from './ResourceThumbnail';\nimport { type ResourceExternalEditor } from './ResourceExternalEditor.flow';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\n\ntype Props = {|\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  resourceKind: ResourceKind,\n  resourceName: string,\n  onChange: string => void,\n  floatingLabelText?: React.Node,\n  hintText?: MessageDescriptor,\n|};\n\nconst styles = {\n  container: { flex: 1, display: 'flex', alignItems: 'flex-end' },\n  selectorContainer: { flex: 1 },\n  resourceThumbnail: { marginLeft: 10, marginBottom: 4 },\n};\n\nconst ResourceSelectorWithThumbnail = ({\n  project,\n  resourceSources,\n  onChooseResource,\n  resourceExternalEditors,\n  resourceKind,\n  resourceName,\n  onChange,\n  floatingLabelText,\n  hintText,\n}: Props) => {\n  return (\n    <div style={styles.container}>\n      <div style={styles.selectorContainer}>\n        <ResourceSelector\n          project={project}\n          resourceSources={resourceSources}\n          onChooseResource={onChooseResource}\n          resourceExternalEditors={resourceExternalEditors}\n          resourcesLoader={ResourcesLoader}\n          resourceKind={resourceKind}\n          fullWidth\n          initialResourceName={resourceName}\n          onChange={onChange}\n          floatingLabelText={floatingLabelText}\n          hintText={hintText}\n        />\n      </div>\n      <ResourceThumbnail\n        resourceName={resourceName}\n        resourcesLoader={ResourcesLoader}\n        project={project}\n        style={styles.resourceThumbnail}\n      />\n    </div>\n  );\n};\n\nexport default ResourceSelectorWithThumbnail;\n","// @flow\nimport * as React from 'react';\n\nexport type UnsavedChanges = {|\n  hasUnsavedChanges: boolean,\n  sealUnsavedChanges: () => void,\n  triggerUnsavedChanges: () => void,\n|};\n\nconst initialState: UnsavedChanges = {\n  hasUnsavedChanges: false,\n  sealUnsavedChanges: () => {},\n  triggerUnsavedChanges: () => {},\n};\n\nconst UnsavedChangesContext = React.createContext<UnsavedChanges>(initialState);\n\nexport default UnsavedChangesContext;\n\ntype State = {|\n  hasUnsavedChanges: boolean,\n|};\n\ntype Props = {|\n  children?: React.Node,\n|};\n\nexport class UnsavedChangesContextProvider extends React.Component<\n  Props,\n  State\n> {\n  state = { hasUnsavedChanges: false };\n  triggerUnsavedChanges = (): void => {\n    if (!this.state.hasUnsavedChanges)\n      this.setState({ hasUnsavedChanges: true });\n  };\n\n  sealUnsavedChanges = (): void => {\n    if (this.state.hasUnsavedChanges)\n      this.setState({ hasUnsavedChanges: false });\n  };\n\n  render() {\n    const unsavedChanges: UnsavedChanges = {\n      ...this.state,\n      triggerUnsavedChanges: this.triggerUnsavedChanges,\n      sealUnsavedChanges: this.sealUnsavedChanges,\n    };\n\n    return (\n      <UnsavedChangesContext.Provider value={unsavedChanges}>\n        {this.props.children}\n      </UnsavedChangesContext.Provider>\n    );\n  }\n}\n","import React from 'react';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\nimport { SortableHandle } from 'react-sortable-hoc';\n\nconst styles = {\n  handle: {\n    display: 'flex',\n    cursor: 'move',\n  },\n  disabledHandle: {\n    display: 'flex',\n    opacity: 0.4,\n  },\n  handleColor: '#DDD',\n};\n\nconst DragHandle = SortableHandle(props => (\n  <span style={props.disabled ? styles.disabledHandle : styles.handle}>\n    <DragHandleIcon htmlColor={styles.handleColor} />\n  </span>\n));\nexport default DragHandle;\n","// @flow\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport values from 'lodash/values';\nconst gd: libGDevelop = global.gd;\n\nexport type ProjectError = {\n  type: 'error' | 'warning',\n  message: string,\n  extraExplanation: string,\n};\n\nexport type ProjectErrors = {\n  [string]: Array<ProjectError>,\n};\n\nexport const validatePackageName = (packageName: string) => {\n  const pattern = /^([A-Za-z]{1}[A-Za-z\\d_]*\\.)+[A-Za-z][A-Za-z\\d_]*$/i;\n\n  return pattern.test(packageName);\n};\n\ntype TFunction = string => string; //TODO\n\n/**\n * Check if there is any blocking error in the project properties.\n */\nexport const getProjectPropertiesErrors = (\n  t: TFunction,\n  project: gdProject\n): ProjectErrors => {\n  const errors: ProjectErrors = {};\n\n  const addError = (\n    propertyName: string,\n    type: 'error' | 'warning',\n    message: string,\n    extraExplanation: string = ''\n  ) => {\n    if (!errors[propertyName]) errors[propertyName] = [];\n\n    errors[propertyName].push({\n      type,\n      message,\n      extraExplanation,\n    });\n  };\n\n  if (!project.getPackageName()) {\n    addError(\n      'packageName',\n      'error',\n      t('The package name is empty.'),\n      t('Choose and enter a package name in the game properties.')\n    );\n  } else if (project.getPackageName().length >= 255) {\n    addError(\n      'packageName',\n      'error',\n      t('The package name is too long.'),\n      t('Change the package name in the game properties.')\n    );\n  } else if (!validatePackageName(project.getPackageName())) {\n    addError(\n      'packageName',\n      'error',\n      t(\n        'The package name is containing invalid characters or not following the convention \"xxx.yyy.zzz\" (numbers allowed after a letter only).'\n      ),\n      t('Change the package name in the game properties.')\n    );\n  }\n\n  if (!project.getName()) {\n    addError(\n      'name',\n      'error',\n      t('The name of your game is too long.'),\n      t('Change the name in the game properties.')\n    );\n  }\n\n  if (!project.getVersion() || project.getVersion().split('.').length < 3) {\n    addError(\n      'packageName',\n      'error',\n      t(\"The version that you've set for the game is invalid.\"),\n      t('Enter a version in the game properties.')\n    );\n  }\n\n  return errors;\n};\n\nexport const displayProjectErrorsBox = (\n  t: TFunction,\n  errors: ProjectErrors\n): boolean => {\n  if (!Object.keys(errors).length) return true;\n\n  showErrorBox({\n    message:\n      t(\n        'Your game has some invalid elements, please fix these before continuing:'\n      ) +\n      '\\n\\n' +\n      values(errors)\n        .map(errors =>\n          errors.map((error: ProjectError) => `- ${error.message}`).join('\\n')\n        )\n        .join('\\n'),\n    rawError: undefined,\n    errorId: 'project-invalid-settings-error',\n    doNotReport: true,\n  });\n\n  return false;\n};\n\n/**\n * Log errors found in the project and that should stop a preview (or an export)\n * of the project to be done.\n *\n * For now, not all errors are reported (errors when generating events should ideally\n * be stored and shown in the editor).\n * See https://trello.com/c/IiLgNR16/462-add-a-diagnostic-report-to-warn-about-potential-issues-in-the-game-and-show-them-in-the-events-sheet\n */\nexport const findAndLogProjectPreviewErrors = (project: gdProject) => {\n  const problems = gd.WholeProjectRefactorer.findInvalidRequiredBehaviorProperties(\n    project\n  );\n  for (let index = 0; index < problems.size(); index++) {\n    const problem = problems.at(index);\n\n    const suggestedBehaviorNames = gd.WholeProjectRefactorer.getBehaviorsWithType(\n      problem.getSourceObject(),\n      problem.getExpectedBehaviorTypeName()\n    ).toJSArray();\n\n    console.error(\n      `Invalid value for required behavior property \"${problem.getSourcePropertyName()}\" in object ${problem\n        .getSourceObject()\n        .getName()} for behavior ${problem\n        .getSourceBehaviorContent()\n        .getName()}.`\n    );\n    console.info(\n      `Expected behavior of type ${problem.getExpectedBehaviorTypeName()}. Possibles values are: ${suggestedBehaviorNames.join(\n        ', '\n      ) || '(none)'}.`\n    );\n  }\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport CreateProfile from '../Profile/CreateProfile';\nimport AuthenticatedUserContext from '../Profile/AuthenticatedUserContext';\nimport AlertMessage from '../UI/AlertMessage';\nimport { Line } from '../UI/Grid';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport PlaceholderError from '../UI/PlaceholderError';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport RaisedButton from '../UI/RaisedButton';\nimport {\n  type Game,\n  getGame,\n  registerGame,\n} from '../Utils/GDevelopServices/Game';\nimport { type Profile } from '../Utils/GDevelopServices/Authentication';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport { GameDetailsDialog } from './GameDetailsDialog';\n\ntype Props = {|\n  project: ?gdProject,\n  hideIfRegistered?: boolean,\n  hideIfSubscribed?: boolean,\n  hideLoader?: boolean,\n  onGameRegistered?: () => void,\n|};\n\ntype DetailsTab = 'details' | 'analytics';\ntype UnavailableReason = 'unauthorized' | 'not-existing' | null;\n\nexport const GameRegistration = ({\n  project,\n  hideIfRegistered,\n  hideIfSubscribed,\n  hideLoader,\n  onGameRegistered,\n}: Props) => {\n  const {\n    authenticated,\n    onLogin,\n    onCreateAccount,\n    getAuthorizationHeader,\n    profile,\n    onAcceptGameStatsEmail,\n  } = React.useContext(AuthenticatedUserContext);\n  const [error, setError] = React.useState<Error | null>(null);\n  const [\n    unavailableReason,\n    setUnavailableReason,\n  ] = React.useState<UnavailableReason>(null);\n  const [game, setGame] = React.useState<Game | null>(null);\n  const [registrationInProgress, setRegistrationInProgress] = React.useState(\n    false\n  );\n  const [\n    acceptGameStatsEmailInProgress,\n    setAcceptGameStatsEmailInProgress,\n  ] = React.useState(false);\n  const [detailsOpened, setDetailsOpened] = React.useState(false);\n  const [detailsInitialTab, setDetailsInitialTab] = React.useState<DetailsTab>(\n    'details'\n  );\n\n  const loadGame = React.useCallback(\n    async () => {\n      if (!profile || !project) return;\n\n      const { id } = profile;\n      setError(null);\n      try {\n        const game = await getGame(\n          getAuthorizationHeader,\n          id,\n          project.getProjectUuid()\n        );\n        setUnavailableReason(null);\n        setGame(game);\n      } catch (err) {\n        console.log(err);\n        if (err.response) {\n          if (err.response.status === 403) {\n            setUnavailableReason('unauthorized');\n            return;\n          } else if (err.response.status === 404) {\n            setUnavailableReason('not-existing');\n            return;\n          }\n        }\n\n        setError(err);\n      }\n    },\n    [project, getAuthorizationHeader, profile]\n  );\n\n  const onRegisterGame = React.useCallback(\n    async () => {\n      if (!profile || !project) return;\n\n      const { id } = profile;\n      setRegistrationInProgress(true);\n      try {\n        await registerGame(getAuthorizationHeader, id, {\n          gameId: project.getProjectUuid(),\n          authorName: project.getAuthor() || 'Unspecified publisher',\n          gameName: project.getName() || 'Untitled game',\n        });\n        loadGame();\n        if (onGameRegistered) onGameRegistered();\n      } catch (error) {\n        console.error('Unable to register the game', error);\n        showErrorBox({\n          rawError: error,\n          errorId: 'register-game-error',\n          // TODO: i18n\n          message:\n            'Unable to register the game.' +\n            ' ' +\n            'Verify your internet connection or try again later.',\n        });\n      }\n      setRegistrationInProgress(false);\n    },\n    [getAuthorizationHeader, profile, project, loadGame, onGameRegistered]\n  );\n\n  const _onAcceptGameStatsEmail = React.useCallback(\n    async () => {\n      if (!profile || !project) return;\n\n      setAcceptGameStatsEmailInProgress(true);\n      try {\n        await onAcceptGameStatsEmail();\n      } catch (error) {\n        console.error('Unable to accept game stats email.', error);\n        showErrorBox({\n          rawError: error,\n          errorId: 'game-stats-email-error',\n          message:\n            'Unable to accept game stats email. ' +\n            ' ' +\n            'Verify your internet connection or try again later.',\n        });\n      }\n      setAcceptGameStatsEmailInProgress(false);\n    },\n    [profile, project, onAcceptGameStatsEmail]\n  );\n\n  React.useEffect(\n    () => {\n      if (!game) {\n        loadGame();\n      }\n    },\n    [loadGame, game]\n  );\n\n  return (\n    <GameRegistrationWidget\n      authenticated={authenticated}\n      profile={profile}\n      onLogin={onLogin}\n      onCreateAccount={onCreateAccount}\n      project={project}\n      game={game}\n      setGame={setGame}\n      loadGame={loadGame}\n      onRegisterGame={onRegisterGame}\n      registrationInProgress={registrationInProgress}\n      hideIfRegistered={hideIfRegistered}\n      hideIfSubscribed={hideIfSubscribed}\n      unavailableReason={unavailableReason}\n      acceptGameStatsEmailInProgress={acceptGameStatsEmailInProgress}\n      onAcceptGameStatsEmail={_onAcceptGameStatsEmail}\n      detailsInitialTab={detailsInitialTab}\n      setDetailsInitialTab={setDetailsInitialTab}\n      detailsOpened={detailsOpened}\n      setDetailsOpened={setDetailsOpened}\n      error={error}\n      hideLoader={hideLoader}\n    />\n  );\n};\n\nexport type GameRegistrationWidgetProps = {|\n  authenticated: boolean,\n  profile?: ?Profile,\n  onLogin: () => void,\n  onCreateAccount: () => void,\n  project?: ?gdProject,\n  game: ?Game,\n  setGame: Game => void,\n  loadGame: () => Promise<void>,\n  onRegisterGame: () => Promise<void>,\n  registrationInProgress: boolean,\n  hideIfRegistered?: boolean,\n  hideIfSubscribed?: boolean,\n  unavailableReason: ?UnavailableReason,\n  acceptGameStatsEmailInProgress: boolean,\n  onAcceptGameStatsEmail: () => Promise<void>,\n  detailsInitialTab: DetailsTab,\n  setDetailsInitialTab: (string: DetailsTab) => void,\n  detailsOpened: boolean,\n  setDetailsOpened: boolean => void,\n  error: ?Error,\n  hideLoader?: boolean,\n|};\n\nexport const GameRegistrationWidget = ({\n  authenticated,\n  profile,\n  onLogin,\n  onCreateAccount,\n  project,\n  game,\n  setGame,\n  loadGame,\n  onRegisterGame,\n  registrationInProgress,\n  hideIfRegistered,\n  hideIfSubscribed,\n  unavailableReason,\n  acceptGameStatsEmailInProgress,\n  onAcceptGameStatsEmail,\n  detailsInitialTab,\n  setDetailsInitialTab,\n  detailsOpened,\n  setDetailsOpened,\n  error,\n  hideLoader,\n}: GameRegistrationWidgetProps) => {\n  if (!project) {\n    return null;\n  }\n\n  if (!authenticated || !profile) {\n    return (\n      <CreateProfile onLogin={onLogin} onCreateAccount={onCreateAccount} />\n    );\n  }\n\n  if (unavailableReason === 'not-existing') {\n    return (\n      <AlertMessage\n        kind=\"info\"\n        renderRightButton={() => (\n          <RaisedButton\n            label={<Trans>Register the project</Trans>}\n            disabled={registrationInProgress}\n            primary\n            onClick={onRegisterGame}\n          />\n        )}\n      >\n        <Trans>\n          This project is not registered online. Register it now to get access\n          to metrics collected anonymously, like the number of daily players and\n          retention of the players after a few days.\n        </Trans>\n      </AlertMessage>\n    );\n  }\n\n  if (unavailableReason === 'unauthorized') {\n    return (\n      <AlertMessage kind=\"error\">\n        <Trans>\n          This project is registered online but you don't have access to it. Ask\n          the original owner of the game to share it with you to get access to\n          the game metrics.\n        </Trans>\n      </AlertMessage>\n    );\n  }\n\n  if (error) {\n    return (\n      <PlaceholderError\n        onRetry={() => {\n          loadGame();\n        }}\n      >\n        <Trans>Can't check if the game is registered online.</Trans>{' '}\n        <Trans>Verify your internet connection or try again later.</Trans>\n      </PlaceholderError>\n    );\n  }\n\n  if (game) {\n    if (hideIfRegistered) return null;\n    if (!profile.getGameStatsEmail) {\n      return (\n        <AlertMessage\n          kind=\"info\"\n          renderRightButton={() => (\n            <RaisedButton\n              label={<Trans>Get game stats</Trans>}\n              disabled={acceptGameStatsEmailInProgress}\n              primary\n              onClick={onAcceptGameStatsEmail}\n            />\n          )}\n        >\n          <Trans>Get stats about your game every week!</Trans>\n        </AlertMessage>\n      );\n    }\n    if (hideIfSubscribed) return null;\n    return (\n      <ColumnStackLayout noMargin>\n        <Line justifyContent=\"center\">\n          <RaisedButton\n            icon={<TimelineIcon />}\n            label={<Trans>Analytics</Trans>}\n            onClick={() => {\n              setDetailsInitialTab('analytics');\n              setDetailsOpened(true);\n            }}\n          />\n        </Line>\n        {detailsOpened && (\n          <GameDetailsDialog\n            game={game}\n            project={project}\n            initialTab={detailsInitialTab}\n            onClose={() => {\n              setDetailsOpened(false);\n            }}\n            onGameUpdated={updatedGame => {\n              setGame(updatedGame);\n            }}\n            onGameDeleted={() => {\n              setDetailsOpened(false);\n              loadGame();\n            }}\n          />\n        )}\n      </ColumnStackLayout>\n    );\n  }\n\n  return hideLoader ? null : <PlaceholderLoader />;\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport axios from 'axios';\nimport { GDevelopUsageApi } from './ApiConfigs';\nimport { type MessageDescriptor } from '../i18n/MessageDescriptor.flow';\n\nexport type Usage = {\n  id: string,\n  userId: string,\n  type: string,\n  createdAt: number,\n};\nexport type Usages = Array<Usage>;\n\nexport type Subscription = {|\n  userId: string,\n  planId: string | null,\n  createdAt: number,\n  updatedAt: number,\n  stripeSubscriptionId?: string,\n  stripeCustomerId?: string,\n|};\n\nexport type Limit = {|\n  limitReached: boolean,\n  current: number,\n  max: number,\n|};\n\nexport type Limits = {\n  [string]: Limit,\n};\n\nexport type PlanDetails = {\n  planId: string | null,\n  name: string,\n  monthlyPriceInEuros: number,\n  smallDescription?: MessageDescriptor,\n  descriptionBullets: Array<{|\n    isLocalAppOnly?: boolean,\n    message: MessageDescriptor,\n  |}>,\n  extraDescription?: MessageDescriptor,\n};\n\nexport const getSubscriptionPlans = (): Array<PlanDetails> => [\n  {\n    planId: 'gdevelop_pro',\n    name: 'GDevelop Pro',\n    monthlyPriceInEuros: 7,\n    smallDescription: t`Ideal for advanced game makers`,\n    descriptionBullets: [\n      {\n        message: t`Package your game for Android up to 70 times a day (every 24 hours).`,\n      },\n      {\n        message: t`One-click packaging for Windows, macOS and Linux up to 70 times a day (every 24 hours).`,\n      },\n      {\n        message: t`Immerse your players by removing GDevelop logo when the game loads.`,\n      },\n    ],\n    extraDescription: t`You'll also have access to online packaging for iOS or other services when they are released.`,\n  },\n  {\n    planId: 'gdevelop_indie',\n    name: 'GDevelop Indie',\n    monthlyPriceInEuros: 2,\n    smallDescription: t`Ideal for beginners`,\n    descriptionBullets: [\n      {\n        message: t`Package your game for Android up to 10 times a day (every 24 hours).`,\n      },\n      {\n        message: t`One-click packaging for Windows, macOS and Linux up to 10 times a day (every 24 hours).`,\n      },\n      {\n        message: t`Immerse your players by removing GDevelop logo when the game loads`,\n      },\n    ],\n    extraDescription: t`You'll also have access to online packaging for iOS or other services when they are released.`,\n  },\n  {\n    planId: null,\n    name: 'No subscription',\n    monthlyPriceInEuros: 0,\n    descriptionBullets: [\n      {\n        message: t`You can use GDevelop for free! Online packaging for Android, Windows, macOS and Linux is limited to twice a day (every 24 hours) to avoid overloading the services.`,\n      },\n    ],\n  },\n];\n\nexport const getUserUsages = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string\n): Promise<Usages> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopUsageApi.baseUrl}/usage`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n\nexport const getUserLimits = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string\n): Promise<Limits> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopUsageApi.baseUrl}/limits`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data.limits);\n};\n\nexport const getUserSubscription = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string\n): Promise<Subscription> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopUsageApi.baseUrl}/subscription-v2`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n\nexport const changeUserSubscription = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  newSubscriptionDetails: { planId: string | null, stripeToken?: any }\n): Promise<Subscription> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.post(\n        `${GDevelopUsageApi.baseUrl}/subscription-v2`,\n        newSubscriptionDetails,\n        {\n          params: {\n            userId,\n          },\n          headers: {\n            Authorization: authorizationHeader,\n          },\n        }\n      )\n    )\n    .then(response => response.data);\n};\n\ntype UploadType = 'build' | 'preview';\n\nexport const getSignedUrl = (params: {|\n  uploadType: UploadType,\n  key: string,\n  contentType: string,\n|}): Promise<{\n  signedUrl: string,\n}> => {\n  return axios\n    .post(`${GDevelopUsageApi.baseUrl}/upload-options/signed-url`, params)\n    .then(response => response.data);\n};\n\nexport const getRedirectToCheckoutUrl = (\n  planId: string,\n  uid: string,\n  email: string\n): string => {\n  return `${\n    GDevelopUsageApi.baseUrl\n  }/subscription-v2/redirect-to-checkout?planId=${encodeURIComponent(\n    planId\n  )}&clientReferenceId=${encodeURIComponent(\n    uid\n  )}&customerEmail=${encodeURIComponent(email)}`;\n};\n","// @flow\nimport * as React from 'react';\nimport {\n  type Leaderboard,\n  type LeaderboardSortOption,\n  type LeaderboardDisplayData,\n  type LeaderboardUpdatePayload,\n} from '../Utils/GDevelopServices/Play';\n\nexport type LeaderboardState = {|\n  leaderboards: ?Array<Leaderboard>,\n  currentLeaderboard: ?Leaderboard,\n  displayOnlyBestEntry: boolean,\n  browsing: {|\n    entries: ?Array<LeaderboardDisplayData>,\n    goToNextPage: ?() => Promise<void>,\n    goToPreviousPage: ?() => Promise<void>,\n    goToFirstPage: ?() => Promise<void>,\n  |},\n  createLeaderboard: ({|\n    name: string,\n    sort: LeaderboardSortOption,\n  |}) => Promise<?Leaderboard>,\n  listLeaderboards: () => Promise<void>,\n  selectLeaderboard: (id: string) => void,\n  setDisplayOnlyBestEntry: boolean => void,\n  updateLeaderboard: (payload: LeaderboardUpdatePayload) => Promise<void>,\n  resetLeaderboard: () => Promise<void>,\n  deleteLeaderboard: () => Promise<void>,\n  deleteLeaderboardEntry: (entryId: string) => Promise<void>,\n  fetchLeaderboardEntries: () => Promise<void>,\n|};\n\nexport const initialLeaderboardState = {\n  leaderboards: null,\n  currentLeaderboard: null,\n  displayOnlyBestEntry: false,\n  browsing: {\n    entries: null,\n    goToNextPage: null,\n    goToPreviousPage: null,\n    goToFirstPage: null,\n  },\n  createLeaderboard: async () => null,\n  listLeaderboards: async () => {},\n  selectLeaderboard: () => {},\n  setDisplayOnlyBestEntry: () => {},\n  updateLeaderboard: async () => {},\n  resetLeaderboard: async () => {},\n  deleteLeaderboard: async () => {},\n  deleteLeaderboardEntry: async entryId => {},\n  fetchLeaderboardEntries: async () => {},\n};\n\nconst LeaderboardContext = React.createContext<LeaderboardState>(\n  initialLeaderboardState\n);\n\nexport default LeaderboardContext;\n","// @flow\nimport * as React from 'react';\nimport { type ChosenCategory } from './FiltersChooser';\nimport shuffle from 'lodash/shuffle';\nimport Fuse from 'fuse.js';\n\nexport type SearchMatch = {| key: string, indices: number[][], value: string |};\nexport type SearchResult<T> = {| item: T, matches: SearchMatch[] |};\n\nexport const sharedFuseConfiguration = {\n  minMatchCharLength: 1,\n  threshold: 0.35,\n  includeMatches: true,\n  ignoreLocation: true,\n};\n\nconst tuneMatchIndices = (match: SearchMatch, searchText: string) => {\n  const lowerCaseSearchText = searchText.toLowerCase();\n  return match.indices\n    .map(index => {\n      const lowerCaseMatchedText = match.value\n        .slice(index[0], index[1] + 1)\n        .toLowerCase();\n      // if exact match, return indices untouched\n      if (lowerCaseMatchedText === lowerCaseSearchText) return index;\n      const indexOfSearchTextInMatchedText = lowerCaseMatchedText.indexOf(\n        lowerCaseSearchText\n      );\n\n      // if searched text is not in match returned by the fuzzy search\n      // (\"too\" could be matched when searching for \"ot\"),\n      // return nothing\n      if (indexOfSearchTextInMatchedText === -1) return undefined;\n\n      // when searched text is included in matched text, changes indices\n      // to highlight only the part that matches exactly\n      return [\n        index[0] + indexOfSearchTextInMatchedText,\n        index[0] + indexOfSearchTextInMatchedText + searchText.length - 1,\n      ];\n    })\n    .filter(Boolean);\n};\n\nexport const tuneMatches = <T>(result: SearchResult<T>, searchText: string) =>\n  result.matches.map<SearchMatch>(match => ({\n    key: match.key,\n    value: match.value,\n    indices: tuneMatchIndices(match, searchText),\n  }));\n\n/**\n * Filter a list of items according to the chosen category\n * and the chosen filters.\n */\nexport const filterSearchResults = <SearchItem: { tags: Array<string> }>(\n  searchResults: ?Array<{| item: SearchItem, matches: SearchMatch[] |}>,\n  chosenCategory: ?ChosenCategory,\n  chosenFilters: Set<string>\n): ?Array<{| item: SearchItem, matches: SearchMatch[] |}> => {\n  if (!searchResults) return null;\n\n  const startTime = performance.now();\n  const filteredSearchResults = searchResults\n    .filter(({ item: { tags } }) => {\n      if (!chosenCategory) return true;\n\n      const hasChosenCategoryTag =\n        // If the chosen category is a container of tags, not a real tag, then\n        // skip checking if the item has it.\n        chosenCategory.node.isTagContainerOnly ||\n        tags.some(tag => tag === chosenCategory.node.name);\n      if (!hasChosenCategoryTag) return false; // Asset is not in the selected category\n      for (const parentNode of chosenCategory.parentNodes) {\n        if (parentNode.isTagContainerOnly) {\n          // The parent is a container of tags, not a real tag. No need\n          // to check if the item has it.\n          return true;\n        }\n\n        const hasParentCategoryTag = tags.some(tag => tag === parentNode.name);\n        if (!hasParentCategoryTag) return false; // Asset is not in the parent(s) of the selected category\n      }\n\n      return true;\n    })\n    .filter(({ item: { tags } }) => {\n      return (\n        chosenFilters.size === 0 || tags.some(tag => chosenFilters.has(tag))\n      );\n    });\n\n  const totalTime = performance.now() - startTime;\n  console.info(\n    `Filtered items by category/filters in ${totalTime.toFixed(3)}ms.`\n  );\n  return filteredSearchResults;\n};\n\n/**\n * Allow to efficiently search and filters items.\n *\n * This instanciates a search API, indexes the specified items,\n * then returns the results of the search (according to the\n * search text and the chosen category/filters).\n */\nexport const useSearchItem = <SearchItem: { tags: Array<string> }>(\n  searchItemsById: ?{ [string]: SearchItem },\n  searchText: string,\n  chosenCategory: ?ChosenCategory,\n  chosenFilters: Set<string>\n): ?Array<{| item: SearchItem, matches: SearchMatch[] |}> => {\n  const searchApiRef = React.useRef<?any>(null);\n  const [searchResults, setSearchResults] = React.useState<?Array<{|\n    item: SearchItem,\n    matches: SearchMatch[],\n  |}>>(null);\n\n  // Keep in memory a list of all the items, shuffled for\n  // easing random discovery of items when no search is done.\n  const shuffledSearchResults = React.useMemo(\n    () => {\n      if (!searchItemsById) return null;\n\n      return shuffle(\n        Object.keys(searchItemsById).map(id => ({\n          item: searchItemsById[id],\n          matches: [],\n        }))\n      );\n    },\n    [searchItemsById]\n  );\n\n  // Index items that have been loaded.\n  React.useEffect(\n    () => {\n      if (!searchItemsById) {\n        // Nothing to index - yet.\n        return;\n      }\n\n      const startTime = performance.now();\n      if (searchApiRef.current) {\n        searchApiRef.current = null;\n      }\n\n      try {\n        const newSearchApi = new Fuse(Object.values(searchItemsById), {\n          keys: [\n            { name: 'name', weight: 2 },\n            { name: 'fullName', weight: 5 },\n            { name: 'shortDescription', weight: 1 },\n          ],\n          minMatchCharLength: 2,\n          threshold: 0.35,\n          includeMatches: true,\n          ignoreLocation: true,\n        });\n\n        const totalTime = performance.now() - startTime;\n        console.info(\n          `Indexed ${\n            Object.keys(searchItemsById).length\n          } items in ${totalTime.toFixed(3)}ms.`\n        );\n        searchApiRef.current = newSearchApi;\n      } catch (error) {\n        console.error('Error while indexing items: ', error);\n      }\n    },\n    [searchItemsById]\n  );\n\n  // Update the search results according to the items, search term\n  // chosen category and chosen filters.\n  const searchApi = searchApiRef.current;\n  React.useEffect(\n    () => {\n      let discardSearch = false;\n      if (!searchText) {\n        setSearchResults(\n          filterSearchResults(\n            shuffledSearchResults,\n            chosenCategory,\n            chosenFilters\n          )\n        );\n      } else {\n        if (!searchItemsById || !searchApi) {\n          console.info(\n            'Search for items skipped because items are not ready - will be retried when ready'\n          );\n          return;\n        }\n\n        const startTime = performance.now();\n        const results = searchApi.search(`'${searchText}`);\n        const totalTime = performance.now() - startTime;\n        console.info(\n          `Found ${results.length} items in ${totalTime.toFixed(3)}ms.`\n        );\n        if (discardSearch) {\n          console.info(\n            'Discarding search results as a new search was launched.'\n          );\n          return;\n        }\n        setSearchResults(\n          filterSearchResults(\n            results.map(result => ({\n              item: result.item,\n              matches: tuneMatches(result, searchText),\n            })),\n            chosenCategory,\n            chosenFilters\n          )\n        );\n      }\n\n      return () => {\n        // Effect is being destroyed - meaning that a new search was launched.\n        // Cancel this one.\n        discardSearch = true;\n      };\n    },\n    [\n      shuffledSearchResults,\n      searchItemsById,\n      searchText,\n      chosenCategory,\n      chosenFilters,\n      searchApi,\n    ]\n  );\n\n  return searchResults;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport PlaceholderLoader from '../PlaceholderLoader';\nimport PlaceholderError from '../PlaceholderError';\nimport ErrorBoundary from '../ErrorBoundary';\nimport { AutoSizer, Grid } from 'react-virtualized';\nimport EmptyMessage from '../EmptyMessage';\n\ntype Props<SearchItem> = {|\n  disableAutoTranslate?: boolean,\n  searchItems: ?Array<SearchItem>,\n  getSearchItemUniqueId: (item: SearchItem) => string,\n  renderSearchItem: (\n    item: SearchItem,\n    onHeightComputed: (number) => void\n  ) => React.Node,\n  error: ?Error,\n  onRetry: () => void,\n|};\n\nconst styles = {\n  container: { flex: 1 },\n  grid: { overflowX: 'hidden' },\n};\n\nconst ESTIMATED_ROW_HEIGHT = 90;\n\n/** A virtualized list of search results, caching the searched item heights. */\nexport const ListSearchResults = <SearchItem>({\n  disableAutoTranslate,\n  searchItems,\n  getSearchItemUniqueId,\n  renderSearchItem,\n  error,\n  onRetry,\n}: Props<SearchItem>) => {\n  const grid = React.useRef<?Grid>(null);\n\n  // Height of each item is initially unknown. When rendered, the items\n  // are reporting their heights and we cache these values.\n  const cachedHeightsForWidth = React.useRef(0);\n  const cachedHeights = React.useRef({});\n  const onItemHeightComputed = React.useCallback(\n    (searchItem, height) => {\n      if (cachedHeights.current[getSearchItemUniqueId(searchItem)] === height)\n        return false;\n\n      cachedHeights.current[getSearchItemUniqueId(searchItem)] = height;\n      return true;\n    },\n    [getSearchItemUniqueId]\n  );\n  const getRowHeight = React.useCallback(\n    ({ index }) => {\n      if (!searchItems || !searchItems[index]) return ESTIMATED_ROW_HEIGHT;\n\n      const searchItem = searchItems[index];\n      return (\n        cachedHeights.current[getSearchItemUniqueId(searchItem)] ||\n        ESTIMATED_ROW_HEIGHT\n      );\n    },\n    [searchItems, getSearchItemUniqueId]\n  );\n\n  // Render an item, and update the cached height when it's reported\n  const renderRow = React.useCallback(\n    ({ key, rowIndex, style }) => {\n      if (!searchItems) return null;\n\n      const searchItem = searchItems[rowIndex];\n      if (!searchItem) return null;\n\n      return (\n        <div key={key} style={style}>\n          {renderSearchItem(searchItem, height => {\n            const heightWasUpdated = onItemHeightComputed(searchItem, height);\n            if (heightWasUpdated && grid.current) {\n              grid.current.recomputeGridSize(0, rowIndex);\n            }\n          })}\n        </div>\n      );\n    },\n    [searchItems, onItemHeightComputed, renderSearchItem]\n  );\n\n  if (!searchItems) {\n    if (!error) return <PlaceholderLoader />;\n    else {\n      return (\n        <PlaceholderError onRetry={onRetry}>\n          <Trans>\n            Can't load the results. Verify your internet connection or retry\n            later.\n          </Trans>\n        </PlaceholderError>\n      );\n    }\n  } else if (searchItems.length === 0) {\n    return (\n      <EmptyMessage>\n        <Trans>\n          No results returned for your search. Try something else or typing at\n          least 2 characters.\n        </Trans>\n      </EmptyMessage>\n    );\n  }\n\n  return (\n    <ErrorBoundary>\n      <div\n        style={styles.container}\n        className={disableAutoTranslate ? 'notranslate' : ''}\n      >\n        <AutoSizer>\n          {({ width, height }) => {\n            if (!width || !height) return null;\n\n            // Reset the cached heights in case the width changed.\n            if (cachedHeightsForWidth.current !== width) {\n              cachedHeights.current = {};\n              cachedHeightsForWidth.current = width;\n            }\n\n            return (\n              <Grid\n                ref={el => {\n                  if (el) {\n                    // Ensure the grid is recomputed for heights once it is rendered.\n                    el.recomputeGridSize(0, 0);\n                  }\n                  grid.current = el;\n                }}\n                width={width}\n                height={height}\n                columnCount={1}\n                columnWidth={width}\n                rowHeight={getRowHeight}\n                rowCount={searchItems.length}\n                cellRenderer={renderRow}\n                style={styles.grid}\n              />\n            );\n          }}\n        </AutoSizer>\n      </div>\n    </ErrorBoundary>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport { type UserPublicProfileSearch } from '../../Utils/GDevelopServices/User';\nimport PublicProfileContext from '../../Profile/PublicProfileContext';\n\nconst styles = {\n  chip: {\n    marginRight: 2,\n  },\n};\n\ntype Props = {|\n  user: UserPublicProfileSearch,\n  isClickable?: boolean,\n|};\n\nexport const UserPublicProfileChip = ({ user, isClickable = false }: Props) => {\n  const { openUserPublicProfile } = React.useContext(PublicProfileContext);\n\n  return (\n    <Chip\n      icon={<FaceIcon />}\n      size=\"small\"\n      style={styles.chip}\n      label={user.username}\n      key={user.username}\n      onClick={isClickable ? () => openUserPublicProfile(user.id) : null}\n    />\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport CommandManager, { CommandManagerInterface } from './CommandManager';\nimport useRefInit from './UseRefInitHook';\n\nconst CommandsContext = React.createContext<CommandManagerInterface>(\n  new CommandManager()\n);\n\ntype Props = {\n  children: React.Node,\n};\n\nexport const CommandsContextProvider = (props: Props) => {\n  const commandManager = useRefInit<CommandManager>(() => new CommandManager());\n\n  return (\n    <CommandsContext.Provider value={commandManager}>\n      {props.children}\n    </CommandsContext.Provider>\n  );\n};\n\nexport default CommandsContext;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport Add from '@material-ui/icons/Add';\nimport Fuse from 'fuse.js';\n\nimport { List, type ListItemRefType } from '../../../UI/List';\nimport SearchBar, {\n  useShouldAutofocusSearchbar,\n  type SearchBarInterface,\n} from '../../../UI/SearchBar';\nimport { type EnumeratedInstructionOrExpressionMetadata } from '../../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\nimport {\n  type TreeNode,\n  findInTree,\n} from '../../../InstructionOrExpression/CreateTree';\nimport ThemeConsumer from '../../../UI/Theme/ThemeConsumer';\nimport { renderInstructionOrExpressionListItem } from '../SelectorListItems/SelectorInstructionOrExpressionListItem';\nimport { renderInstructionOrExpressionTree } from '../SelectorListItems/SelectorInstructionsTreeListItem';\nimport EmptyMessage from '../../../UI/EmptyMessage';\nimport ScrollView, { type ScrollViewInterface } from '../../../UI/ScrollView';\nimport { Line } from '../../../UI/Grid';\nimport RaisedButton from '../../../UI/RaisedButton';\nimport { getInstructionListItemValue } from '../SelectorListItems/Keys';\nimport { ResponsiveLineStackLayout } from '../../../UI/Layout';\nimport {\n  tuneMatches,\n  type SearchResult,\n  sharedFuseConfiguration,\n} from '../../../UI/Search/UseSearchStructuredItem';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  searchBar: {\n    backgroundColor: 'transparent',\n    flexShrink: 0,\n    zIndex: 1, // Put the SearchBar in front of the list, to display the shadow\n  },\n};\n\nconst getGroupIconSrc = (key: string) => {\n  return gd.JsPlatform.get()\n    .getInstructionOrExpressionGroupMetadata(key)\n    .getIcon();\n};\n\ntype Props<T> = {|\n  focusOnMount?: boolean,\n  instructionsInfo: Array<T>,\n  instructionsInfoTree: TreeNode<T>,\n  selectedType: string,\n  onChoose: (type: string, T) => void,\n  iconSize: number,\n  useSubheaders?: boolean,\n  searchPlaceholderObjectName?: ?string,\n  searchPlaceholderIsCondition?: ?boolean,\n  helpPagePath?: ?string,\n  style?: Object,\n  onClickMore?: () => void,\n  id?: ?string,\n|};\ntype State<T> = {|\n  searchText: string,\n  searchResults: Array<T>,\n|};\n\nexport default class InstructionOrExpressionSelector<\n  T: EnumeratedInstructionOrExpressionMetadata\n> extends React.PureComponent<Props<T>, State<T>> {\n  state: State<T> = {\n    searchText: '',\n    searchResults: [],\n  };\n  _searchBar: ?SearchBarInterface;\n  _scrollView = React.createRef<ScrollViewInterface>();\n  _selectedItem = React.createRef<ListItemRefType>();\n  searchApi = null;\n\n  initialInstructionTypePath = findInTree(\n    this.props.instructionsInfoTree,\n    this.props.selectedType\n  );\n\n  componentDidMount() {\n    if (\n      this.props.focusOnMount &&\n      useShouldAutofocusSearchbar() &&\n      this._searchBar\n    ) {\n      this._searchBar.focus();\n    }\n    if (this._selectedItem.current && this._scrollView.current) {\n      this._scrollView.current.scrollTo(this._selectedItem.current);\n    }\n\n    this.searchApi = new Fuse(this.props.instructionsInfo, {\n      ...sharedFuseConfiguration,\n      keys: [\n        { name: 'displayedName', weight: 2 },\n        { name: 'fullGroupName', weight: 1 },\n      ],\n    });\n  }\n\n  focus = () => {\n    if (this._searchBar) this._searchBar.focus();\n  };\n\n  render() {\n    const {\n      selectedType,\n      iconSize,\n      instructionsInfoTree,\n      onChoose,\n      searchPlaceholderObjectName,\n      searchPlaceholderIsCondition,\n      useSubheaders,\n      helpPagePath,\n      style,\n      onClickMore,\n      id,\n    } = this.props;\n    const { searchText } = this.state;\n    const displayedInstructionsList: Array<SearchResult<T>> =\n      !!searchText && this.searchApi\n        ? this.searchApi.search(`'${searchText}`).map(result => ({\n            item: result.item,\n            matches: tuneMatches(result, searchText),\n          }))\n        : [];\n    const hasResults = !searchText || !!displayedInstructionsList.length;\n\n    const onSubmitSearch = () => {\n      if (!displayedInstructionsList.length) return;\n\n      onChoose(\n        displayedInstructionsList[0].item.type,\n        displayedInstructionsList[0].item\n      );\n    };\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <div\n            style={{\n              backgroundColor: muiTheme.list.itemsBackgroundColor,\n              ...style,\n            }}\n            id={id}\n          >\n            <SearchBar\n              value={searchText}\n              onChange={searchText =>\n                this.setState({\n                  searchText,\n                })\n              }\n              onRequestSearch={onSubmitSearch}\n              style={styles.searchBar}\n              placeholder={\n                searchPlaceholderObjectName\n                  ? searchPlaceholderIsCondition\n                    ? t`Search ${searchPlaceholderObjectName} conditions`\n                    : t`Search ${searchPlaceholderObjectName} actions`\n                  : undefined\n              }\n              helpPagePath={helpPagePath}\n              ref={searchBar => (this._searchBar = searchBar)}\n            />\n            <ScrollView\n              ref={\n                // $FlowFixMe - improper typing of ScrollView?\n                this._scrollView\n              }\n            >\n              {hasResults && (\n                <List>\n                  {searchText ? (\n                    displayedInstructionsList.map(\n                      ({\n                        item: enumeratedInstructionOrExpressionMetadata,\n                        matches,\n                      }) =>\n                        renderInstructionOrExpressionListItem({\n                          instructionOrExpressionMetadata: enumeratedInstructionOrExpressionMetadata,\n                          iconSize: iconSize,\n                          onClick: () =>\n                            onChoose(\n                              enumeratedInstructionOrExpressionMetadata.type,\n                              enumeratedInstructionOrExpressionMetadata\n                            ),\n                          matches,\n                          selectedValue: getInstructionListItemValue(\n                            selectedType\n                          ),\n                        })\n                    )\n                  ) : (\n                    <>\n                      {renderInstructionOrExpressionTree({\n                        instructionTreeNode: instructionsInfoTree,\n                        iconSize,\n                        onChoose,\n                        useSubheaders,\n                        selectedValue: getInstructionListItemValue(\n                          selectedType\n                        ),\n                        initiallyOpenedPath: this.initialInstructionTypePath,\n                        selectedItemRef: this._selectedItem,\n                        getGroupIconSrc,\n                      })}\n                      {onClickMore && (\n                        <ResponsiveLineStackLayout justifyContent=\"center\">\n                          <RaisedButton\n                            primary\n                            icon={<Add />}\n                            onClick={onClickMore}\n                            label={\n                              <Trans>Add a new behavior to the object</Trans>\n                            }\n                          />\n                        </ResponsiveLineStackLayout>\n                      )}\n                    </>\n                  )}\n                </List>\n              )}\n              {!hasResults && (\n                <Line>\n                  <EmptyMessage>\n                    <Trans>\n                      Nothing corresponding to your search. Try browsing the\n                      list instead.\n                    </Trans>\n                  </EmptyMessage>\n                </Line>\n              )}\n            </ScrollView>\n          </div>\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n","// @flow\nimport { I18n } from '@lingui/react';\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport AlertMessage from '../UI/AlertMessage';\nimport Window from '../Utils/Window';\nimport RaisedButton from '../UI/RaisedButton';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport { TutorialContext } from '../Tutorial/TutorialContext';\nimport { type Tutorial } from '../Utils/GDevelopServices/Tutorial';\n\ntype Props = {|\n  tutorialId: string,\n|};\n\n/**\n * Show a link to a tutorial that can be permanently hidden. Hidden tutorials\n * will be stored in preferences.\n */\nconst DismissableTutorialMessage = ({ tutorialId }: Props) => {\n  const preferences = React.useContext(PreferencesContext);\n  const { values, showTutorialHint } = preferences;\n  const { tutorials } = React.useContext(TutorialContext);\n\n  if (values.hiddenTutorialHints[tutorialId]) return null;\n\n  if (!tutorials) return null; // Loading or errored, do not display the tutorial.\n  const tutorial: ?Tutorial = tutorials.find(\n    tutorial => tutorial.id === tutorialId\n  );\n  if (!tutorial) {\n    console.warn(`Tutorial ${tutorialId} not found`);\n    return null;\n  }\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <AlertMessage\n          kind={'info'}\n          children={tutorial.title}\n          renderLeftIcon={() => (\n            <img\n              alt=\"\"\n              style={{\n                maxWidth: 128,\n                maxHeight: 128,\n              }}\n              src={tutorial.thumbnailUrl}\n            />\n          )}\n          renderRightButton={() => (\n            <RaisedButton\n              icon={\n                tutorial.type === 'video' ? <YouTubeIcon /> : <MenuBookIcon />\n              }\n              label={\n                tutorial.type === 'video' ? (\n                  <Trans>Watch the tutorial</Trans>\n                ) : (\n                  <Trans>Read the tutorial</Trans>\n                )\n              }\n              onClick={() => {\n                Window.openExternalURL(tutorial.link);\n              }}\n            />\n          )}\n          onHide={() => {\n            showTutorialHint(tutorialId, false);\n          }}\n        />\n      )}\n    </I18n>\n  );\n};\n\nexport default DismissableTutorialMessage;\n","// @flow\nimport * as React from 'react';\nimport {\n  listAllTutorials,\n  type Tutorial,\n} from '../Utils/GDevelopServices/Tutorial';\n\ntype TutorialState = {|\n  tutorials: ?Array<Tutorial>,\n  fetchTutorials: () => void,\n  error: ?Error,\n|};\n\nexport const TutorialContext = React.createContext<TutorialState>({\n  tutorials: null,\n  fetchTutorials: () => {},\n  error: null,\n});\n\ntype TutorialStateProviderProps = {|\n  children: React.Node,\n|};\n\nexport const TutorialStateProvider = ({\n  children,\n}: TutorialStateProviderProps) => {\n  const [tutorials, setTutorials] = React.useState<?(Tutorial[])>(null);\n  const [error, setError] = React.useState<?Error>(null);\n  const isLoading = React.useRef<boolean>(false);\n\n  const fetchTutorials = React.useCallback(\n    () => {\n      // Don't attempt to load again tutorials if they\n      // were loaded already.\n      if (tutorials || isLoading.current) return;\n\n      (async () => {\n        setError(null);\n        isLoading.current = true;\n\n        try {\n          const allTutorials: Array<Tutorial> = await listAllTutorials();\n\n          console.info(`Loaded ${allTutorials.length} tutorials.`);\n          setTutorials(allTutorials);\n        } catch (error) {\n          console.error(`Unable to load the tutorials:`, error);\n          setError(error);\n        }\n\n        isLoading.current = false;\n      })();\n    },\n    [tutorials, isLoading]\n  );\n\n  const tutorialState = React.useMemo(\n    () => ({\n      tutorials,\n      fetchTutorials,\n      error,\n    }),\n    [tutorials, fetchTutorials, error]\n  );\n\n  return (\n    <TutorialContext.Provider value={tutorialState}>\n      {children}\n    </TutorialContext.Provider>\n  );\n};\n","// @flow\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\nimport { mapVector } from '../Utils/MapFor';\nimport {\n  enumerateNamedPropertyDescriptorsList,\n  toGdPropertyDescriptor,\n} from './EnumerateProperties';\nconst gd: libGDevelop = global.gd;\n\n// This file contains the logic to declare extension metadata from\n// events functions or events based behaviors.\n// These are basically adapters from EventsFunctionsExtension, and children, to a\n// real extension declaration (like in `JsExtension.js` or `Extension.cpp` files).\n\n/**\n * Declare an extension from an events based extension.\n */\nexport const declareExtension = (\n  extension: gdPlatformExtension,\n  eventsFunctionsExtension: gdEventsFunctionsExtension\n) => {\n  const fullName =\n    eventsFunctionsExtension.getFullName() ||\n    eventsFunctionsExtension.getName();\n  extension\n    .setExtensionInformation(\n      eventsFunctionsExtension.getName(),\n      fullName,\n      eventsFunctionsExtension.getDescription(),\n      eventsFunctionsExtension.getAuthor(),\n      ''\n    )\n    .setExtensionHelpPath(eventsFunctionsExtension.getHelpPath())\n    .setIconUrl(eventsFunctionsExtension.getIconUrl());\n\n  if (fullName) {\n    extension\n      .addInstructionOrExpressionGroupMetadata(fullName)\n      .setIcon(eventsFunctionsExtension.getIconUrl());\n  }\n\n  if (eventsFunctionsExtension.getCategory())\n    extension.setCategory(eventsFunctionsExtension.getCategory());\n\n  declareExtensionDependencies(extension, eventsFunctionsExtension);\n};\n\n/**\n * Declare the dependencies of an extension from an events based extension.\n */\nexport const declareExtensionDependencies = (\n  extension: gdPlatformExtension,\n  eventsFunctionsExtension: gdEventsFunctionsExtension\n) =>\n  mapVector<gdDependencyMetadata, void>(\n    eventsFunctionsExtension.getAllDependencies(),\n    dependency => extension.addDependency().copyFrom(dependency)\n  );\n\nconst getExtensionIconUrl = (extension: gdPlatformExtension) => {\n  return extension.getIconUrl() || 'res/function24.png';\n};\n\n/**\n * Declare the behavior for the given\n * events based behavior.\n */\nexport const declareBehaviorMetadata = (\n  extension: gdPlatformExtension,\n  eventsBasedBehavior: gdEventsBasedBehavior\n): gdBehaviorMetadata => {\n  const generatedBehavior = new gd.BehaviorJsImplementation();\n\n  // We enumerate the properties of the behavior from a list of gdNamedPropertyDescriptor\n  // to an array of JavaScript objects. This is important to ensure that the functions\n  // below are not keeping any reference to eventsBasedBehavior.\n  //\n  // We could in theory keep a reference to eventsBasedBehavior, and avoid using\n  // `enumerateNamedPropertyDescriptorsList` and `toGdPropertyDescriptor`.\n  // This should be safe as if eventsBasedBehavior is deleted (i.e: the behavior\n  // is removed from its extension), then the extension will be re-generated.\n  //\n  // In practice, we don't want to risk keeping this references, because if at some point\n  // we delete the eventsBasedBehavior and forget to remove the extension, then the\n  // extension will use a deleted object and crash the app. Instead, we convert the\n  // properties to an array of JavaScript objects, so that we're guaranteed that the\n  // lifetime of these properties is the same as the lifetime of these functions (i.e:\n  // we use the JS garbage collector).\n  const enumeratedProperties = enumerateNamedPropertyDescriptorsList(\n    eventsBasedBehavior.getPropertyDescriptors()\n  );\n\n  // $FlowExpectedError - we're creating a behavior\n  generatedBehavior.updateProperty = function(\n    behaviorContent: gdSerializerElement,\n    propertyName: string,\n    newValue: string\n  ) {\n    const enumeratedProperty = enumeratedProperties.find(\n      enumeratedProperty => enumeratedProperty.name === propertyName\n    );\n    if (!enumeratedProperty) return false;\n\n    const element = behaviorContent.addChild(propertyName);\n    const propertyType: string = enumeratedProperty.type;\n\n    if (\n      propertyType === 'String' ||\n      propertyType === 'Choice' ||\n      propertyType === 'Color' ||\n      propertyType === 'Behavior'\n    ) {\n      element.setStringValue(newValue);\n    } else if (propertyType === 'Number') {\n      element.setDoubleValue(parseFloat(newValue));\n    } else if (propertyType === 'Boolean') {\n      element.setBoolValue(newValue === '1');\n    }\n\n    return true;\n  };\n\n  // $FlowExpectedError - we're creating a behavior\n  generatedBehavior.getProperties = function(behaviorContent) {\n    var behaviorProperties = new gd.MapStringPropertyDescriptor();\n\n    enumeratedProperties.forEach(enumeratedProperty => {\n      const propertyName = enumeratedProperty.name;\n      const propertyType = enumeratedProperty.type;\n      const newProperty = toGdPropertyDescriptor(\n        enumeratedProperty,\n        behaviorProperties.getOrCreate(propertyName)\n      );\n\n      if (behaviorContent.hasChild(propertyName)) {\n        if (\n          propertyType === 'String' ||\n          propertyType === 'Choice' ||\n          propertyType === 'Color' ||\n          propertyType === 'Behavior'\n        ) {\n          newProperty.setValue(\n            behaviorContent.getChild(propertyName).getStringValue()\n          );\n        } else if (propertyType === 'Number') {\n          newProperty.setValue(\n            '' + behaviorContent.getChild(propertyName).getDoubleValue()\n          );\n        } else if (propertyType === 'Boolean') {\n          newProperty.setValue(\n            behaviorContent.getChild(propertyName).getBoolValue()\n              ? 'true'\n              : 'false'\n          );\n        }\n      } else {\n        // No value was serialized for this property. `newProperty`\n        // will have the default value coming from `enumeratedProperty`.\n      }\n    });\n\n    return behaviorProperties;\n  };\n\n  // $FlowExpectedError - we're creating a behavior\n  generatedBehavior.initializeContent = function(behaviorContent) {\n    enumeratedProperties.forEach(enumeratedProperty => {\n      const element = behaviorContent.addChild(enumeratedProperty.name);\n      const propertyType: string = enumeratedProperty.type;\n\n      if (\n        propertyType === 'String' ||\n        propertyType === 'Choice' ||\n        propertyType === 'Color' ||\n        propertyType === 'Behavior'\n      ) {\n        element.setStringValue(enumeratedProperty.value);\n      } else if (propertyType === 'Number') {\n        element.setDoubleValue(parseFloat(enumeratedProperty.value) || 0);\n      } else if (propertyType === 'Boolean') {\n        element.setBoolValue(enumeratedProperty.value === 'true');\n      }\n    });\n  };\n\n  return extension\n    .addBehavior(\n      eventsBasedBehavior.getName(),\n      eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n      eventsBasedBehavior.getName(), // Default name is the name\n      eventsBasedBehavior.getDescription(),\n      '',\n      getExtensionIconUrl(extension),\n      eventsBasedBehavior.getName(), // Class name is the name, actually unused\n      generatedBehavior,\n      new gd.BehaviorsSharedData()\n    )\n    .setObjectType(eventsBasedBehavior.getObjectType());\n};\n\n/**\n * Check if the name of the function is the name of a lifecycle function (for events-based behaviors),\n * that will be called automatically by the game engine.\n */\nexport const isBehaviorLifecycleEventsFunction = (functionName: string) => {\n  return (\n    [\n      'onCreated',\n      'onActivate',\n      'onDeActivate',\n      'doStepPreEvents',\n      'doStepPostEvents',\n      'onDestroy',\n      // Compatibility with GD <= 5.0 beta 75\n      'onOwnerRemovedFromScene',\n      // end of compatibility code\n    ].indexOf(functionName) !== -1\n  );\n};\n\n/**\n * Check if the name of the function is the name of a lifecycle function (for events-based extensions),\n * that will be called automatically by the game engine.\n */\nexport const isExtensionLifecycleEventsFunction = (functionName: string) => {\n  return gd.EventsFunctionsExtension.isExtensionLifecycleEventsFunction(\n    functionName\n  );\n};\n\n/**\n * Declare the instruction (action/condition) or expression for the given\n * (free) events function.\n */\nexport const declareInstructionOrExpressionMetadata = (\n  extension: gdPlatformExtension,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  eventsFunction: gdEventsFunction\n): gdInstructionMetadata | gdExpressionMetadata => {\n  const functionType = eventsFunction.getFunctionType();\n  if (functionType === gd.EventsFunction.Expression) {\n    return extension.addExpression(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunction.getGroup() || '',\n      getExtensionIconUrl(extension)\n    );\n  } else if (functionType === gd.EventsFunction.StringExpression) {\n    return extension.addStrExpression(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunction.getGroup() || '',\n      getExtensionIconUrl(extension)\n    );\n  } else if (functionType === gd.EventsFunction.Condition) {\n    return extension.addCondition(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunction.getSentence(),\n      eventsFunction.getGroup() || '',\n      getExtensionIconUrl(extension),\n      getExtensionIconUrl(extension)\n    );\n  } else {\n    return extension.addAction(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunction.getSentence(),\n      eventsFunction.getGroup() || '',\n      getExtensionIconUrl(extension),\n      getExtensionIconUrl(extension)\n    );\n  }\n};\n\n/**\n * Declare the instruction (action/condition) or expression for the given\n * behavior events function.\n */\nexport const declareBehaviorInstructionOrExpressionMetadata = (\n  extension: gdPlatformExtension,\n  behaviorMetadata: gdBehaviorMetadata,\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  eventsFunction: gdEventsFunction\n): gdInstructionMetadata | gdExpressionMetadata => {\n  const functionType = eventsFunction.getFunctionType();\n  if (functionType === gd.EventsFunction.Expression) {\n    return behaviorMetadata.addExpression(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunction.getGroup() ||\n        eventsBasedBehavior.getFullName() ||\n        eventsBasedBehavior.getName(),\n      getExtensionIconUrl(extension)\n    );\n  } else if (functionType === gd.EventsFunction.StringExpression) {\n    return behaviorMetadata.addStrExpression(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunction.getGroup() ||\n        eventsBasedBehavior.getFullName() ||\n        eventsBasedBehavior.getName(),\n      getExtensionIconUrl(extension)\n    );\n  } else if (functionType === gd.EventsFunction.Condition) {\n    // Use the new \"scoped\" way to declare an instruction, because\n    // we want to prevent any conflict between free functions and\n    // behaviors (that can totally have functions with the same name).\n    return behaviorMetadata.addScopedCondition(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunction.getSentence(),\n      eventsFunction.getGroup() ||\n        eventsBasedBehavior.getFullName() ||\n        eventsBasedBehavior.getName(),\n      getExtensionIconUrl(extension),\n      getExtensionIconUrl(extension)\n    );\n  } else {\n    // Use the new \"scoped\" way to declare an instruction, because\n    // we want to prevent any conflict between free functions and\n    // behaviors (that can totally have functions with the same name).\n    return behaviorMetadata.addScopedAction(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunction.getSentence(),\n      eventsFunction.getGroup() ||\n        eventsBasedBehavior.getFullName() ||\n        eventsBasedBehavior.getName(),\n      getExtensionIconUrl(extension),\n      getExtensionIconUrl(extension)\n    );\n  }\n};\n\ntype gdInstructionOrExpressionMetadata =\n  | gdInstructionMetadata\n  | gdExpressionMetadata;\n\n/**\n * Declare the instructions (actions/conditions) and expressions for the\n * properties of the given events based behavior.\n * This is akin to what would happen by manually declaring a JS extension\n * (see `JsExtension.js` files of extensions).\n */\nexport const declareBehaviorPropertiesInstructionAndExpressions = (\n  i18n: I18nType,\n  extension: gdPlatformExtension,\n  behaviorMetadata: gdBehaviorMetadata,\n  eventsBasedBehavior: gdEventsBasedBehavior\n): void => {\n  const addObjectAndBehaviorParameters = <T: gdInstructionOrExpressionMetadata>(\n    instructionOrExpression: T\n  ): T => {\n    // By convention, first parameter is always the object:\n    instructionOrExpression.addParameter(\n      'object',\n      'Object',\n      '', // See below for adding the extra information\n      false\n    );\n\n    // Manually add the \"extra info\" without relying on addParameter\n    // as this method is prefixing the value passed with the extension namespace (this\n    // was done to ease extension declarations when dealing with object).\n    instructionOrExpression\n      .getParameter(instructionOrExpression.getParametersCount() - 1)\n      .setExtraInfo(eventsBasedBehavior.getObjectType());\n\n    // By convention, second parameter is always the behavior:\n    instructionOrExpression.addParameter(\n      'behavior',\n      'Behavior',\n      eventsBasedBehavior.getName(),\n      false\n    );\n\n    // All property actions/conditions/expressions are private, meaning\n    // they can only be used from the behavior events.\n    instructionOrExpression.setPrivate();\n\n    return instructionOrExpression;\n  };\n\n  mapVector(eventsBasedBehavior.getPropertyDescriptors(), property => {\n    const propertyType = property.getType();\n    const propertyName = property.getName();\n    const getterName = gd.BehaviorCodeGenerator.getBehaviorPropertyGetterName(\n      propertyName\n    );\n    const setterName = gd.BehaviorCodeGenerator.getBehaviorPropertySetterName(\n      propertyName\n    );\n    const propertyLabel =\n      property.getLabel() || i18n._(t`${propertyName} property`);\n\n    if (propertyType === 'String' || propertyType === 'Choice') {\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addStrExpression(\n          gd.EventsBasedBehavior.getPropertyExpressionName(propertyName),\n          propertyLabel,\n          propertyLabel,\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          getExtensionIconUrl(extension)\n        )\n      )\n        .getCodeExtraInformation()\n        .setFunctionName(getterName);\n\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedCondition(\n          gd.EventsBasedBehavior.getPropertyConditionName(propertyName),\n          propertyLabel,\n          i18n._(t`Compare the content of ${propertyLabel}`),\n          i18n._(t`the property ${propertyName}`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          getExtensionIconUrl(extension),\n          getExtensionIconUrl(extension)\n        )\n      )\n        .useStandardRelationalOperatorParameters('string')\n        .getCodeExtraInformation()\n        .setFunctionName(getterName);\n\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedAction(\n          gd.EventsBasedBehavior.getPropertyActionName(propertyName),\n          propertyLabel,\n          i18n._(t`Change the content of ${propertyLabel}`),\n          i18n._(t`the property ${propertyName}`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          getExtensionIconUrl(extension),\n          getExtensionIconUrl(extension)\n        )\n      )\n        .useStandardOperatorParameters('string')\n        .getCodeExtraInformation()\n        .setFunctionName(setterName)\n        .setManipulatedType('string')\n        .setGetter(getterName);\n    } else if (propertyType === 'Number') {\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addExpression(\n          gd.EventsBasedBehavior.getPropertyExpressionName(propertyName),\n          propertyLabel,\n          propertyLabel,\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          getExtensionIconUrl(extension)\n        )\n      )\n        .getCodeExtraInformation()\n        .setFunctionName(getterName);\n\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedCondition(\n          gd.EventsBasedBehavior.getPropertyConditionName(propertyName),\n          propertyLabel,\n          i18n._(t`Compare the value of ${propertyLabel}`),\n          i18n._(t`the property ${propertyName}`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          getExtensionIconUrl(extension),\n          getExtensionIconUrl(extension)\n        )\n      )\n        .useStandardRelationalOperatorParameters('number')\n        .getCodeExtraInformation()\n        .setFunctionName(getterName);\n\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedAction(\n          gd.EventsBasedBehavior.getPropertyActionName(propertyName),\n          propertyLabel,\n          i18n._(t`Change the value of ${propertyLabel}`),\n          i18n._(t`the property ${propertyName}`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          getExtensionIconUrl(extension),\n          getExtensionIconUrl(extension)\n        )\n      )\n        .useStandardOperatorParameters('number')\n        .getCodeExtraInformation()\n        .setFunctionName(setterName)\n        .setGetter(getterName);\n    } else if (propertyType === 'Boolean') {\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedCondition(\n          gd.EventsBasedBehavior.getPropertyConditionName(propertyName),\n          propertyLabel,\n          i18n._(t`Check the value of ${propertyLabel}`),\n          i18n._(t`Property ${propertyName} of _PARAM0_ is true`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          getExtensionIconUrl(extension),\n          getExtensionIconUrl(extension)\n        )\n      )\n        .getCodeExtraInformation()\n        .setFunctionName(getterName);\n\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedAction(\n          gd.EventsBasedBehavior.getPropertyActionName(propertyName),\n          propertyLabel,\n          i18n._(t`Update the value of ${propertyLabel}`),\n          i18n._(t`Set property ${propertyName} of _PARAM0_ to _PARAM2_`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          getExtensionIconUrl(extension),\n          getExtensionIconUrl(extension)\n        )\n      )\n        .addParameter('yesorno', i18n._(t`New value to set`), '', false)\n        .getCodeExtraInformation()\n        .setFunctionName(setterName);\n    } else if (propertyType === 'Color') {\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedCondition(\n          gd.EventsBasedBehavior.getPropertyConditionName(propertyName),\n          propertyLabel,\n          i18n._(t`Check the color ${propertyLabel}`),\n          i18n._(t`Color ${propertyName}`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          getExtensionIconUrl(extension),\n          getExtensionIconUrl(extension)\n        )\n      )\n        .useStandardRelationalOperatorParameters('string')\n        .getCodeExtraInformation()\n        .setFunctionName(getterName);\n\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedAction(\n          gd.EventsBasedBehavior.getPropertyActionName(propertyName),\n          propertyLabel,\n          i18n._(t`Update the color of ${propertyLabel}`),\n          i18n._(t`Change color ${propertyName} of _PARAM0_ to _PARAM2_`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          getExtensionIconUrl(extension),\n          getExtensionIconUrl(extension)\n        )\n      )\n        .addParameter('color', i18n._(t`New color to set`), '', false)\n        .getCodeExtraInformation()\n        .setFunctionName(setterName);\n\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addStrExpression(\n          gd.EventsBasedBehavior.getPropertyExpressionName(propertyName),\n          propertyLabel,\n          propertyLabel,\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          getExtensionIconUrl(extension)\n        )\n      )\n        .getCodeExtraInformation()\n        .setFunctionName(getterName);\n    }\n  });\n};\n\n/**\n * Add to the instruction (action/condition) or expression the parameters\n * expected by the events function.\n */\nexport const declareEventsFunctionParameters = (\n  eventsFunction: gdEventsFunction,\n  instructionOrExpression: gdInstructionMetadata | gdExpressionMetadata\n) => {\n  mapVector(\n    eventsFunction.getParameters(),\n    (parameter: gdParameterMetadata) => {\n      if (!parameter.isCodeOnly()) {\n        instructionOrExpression.addParameter(\n          parameter.getType(),\n          parameter.getDescription(),\n          '', // See below for adding the extra information\n          parameter.isOptional()\n        );\n        instructionOrExpression.setParameterLongDescription(\n          parameter.getLongDescription()\n        );\n        instructionOrExpression.setDefaultValue(parameter.getDefaultValue());\n      } else {\n        instructionOrExpression.addCodeOnlyParameter(\n          parameter.getType(),\n          '' // See below for adding the extra information\n        );\n      }\n      // Manually add the \"extra info\" without relying on addParameter (or addCodeOnlyParameter)\n      // as these methods are prefixing the value passed with the extension namespace (this\n      // was done to ease extension declarations when dealing with object).\n      instructionOrExpression\n        .getParameter(instructionOrExpression.getParametersCount() - 1)\n        .setExtraInfo(parameter.getExtraInfo());\n    }\n  );\n\n  // By convention, latest parameter is always the eventsFunctionContext of the calling function\n  // (if any).\n  instructionOrExpression.addCodeOnlyParameter('eventsFunctionContext', '');\n};\n","throw new Error(\n  'This is a fake @blueprintjs/core (or @blueprintjs/icons) package that is just throwing an' +\n    \" error. It's used by react-mosaic, which will fallback to using something else.\" +\n    'This is useful for avoiding webpack/create-react-app warnings in the development' +\n    'console about a missing package - while avoiding to import blueprint.'\n);\n","// @flow\nconst gd: libGDevelop = global.gd;\n\n/**\n * Represents a list of selected instances.\n */\nexport default class InstancesSelection {\n  selection: Array<gdInitialInstance> = [];\n\n  hasSelectedInstances() {\n    return !!this.getSelectedInstances().length;\n  }\n\n  getSelectedInstances() {\n    return this.selection;\n  }\n\n  isInstanceSelected(instance: gdInitialInstance) {\n    for (var i = 0; i < this.selection.length; i++) {\n      if (gd.compare(this.selection[i], instance)) return true;\n    }\n\n    return false;\n  }\n\n  clearSelection() {\n    this.selection.length = 0;\n  }\n\n  selectInstance(\n    instance: gdInitialInstance,\n    multiselect: boolean,\n    layersVisibility: ?{ [string]: boolean } = null\n  ) {\n    if (this.isInstanceSelected(instance)) {\n      if (multiselect) this.unselectInstance(instance);\n\n      return;\n    }\n\n    if (!multiselect) this.clearSelection();\n\n    if (!layersVisibility || layersVisibility[instance.getLayer()]) {\n      this.selection.push(instance);\n    }\n  }\n\n  selectInstances(\n    instances: Array<gdInitialInstance>,\n    multiselect: boolean,\n    layersVisibility: ?{ [string]: boolean } = null\n  ) {\n    if (!multiselect) this.clearSelection();\n\n    instances.forEach(instance =>\n      this.selectInstance(instance, true, layersVisibility)\n    );\n  }\n\n  unselectInstance(instance: gdInitialInstance) {\n    if (this.isInstanceSelected(instance)) {\n      var i = this.selection.length - 1;\n      while (i >= -1 && this.selection[i].ptr !== instance.ptr) {\n        --i;\n      }\n\n      this.selection.splice(i, 1);\n    }\n  }\n\n  unselectInstancesOfObject(objectName: string) {\n    for (let i = 0; i < this.selection.length; ) {\n      if (this.selection[i].getObjectName() === objectName) {\n        this.selection.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n  }\n\n  unselectInstancesOnLayer(layerName: string) {\n    for (let i = 0; i < this.selection.length; ) {\n      if (this.selection[i].getLayer() === layerName) {\n        this.selection.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n  }\n}\n","import TextEditor from './Editors/TextEditor';\nimport TiledSpriteEditor from './Editors/TiledSpriteEditor';\nimport PanelSpriteEditor from './Editors/PanelSpriteEditor';\nimport SpriteEditor from './Editors/SpriteEditor';\nimport EmptyEditor from './Editors/EmptyEditor';\nimport ShapePainterEditor from './Editors/ShapePainterEditor';\nimport ParticleEmitterEditor from './Editors/ParticleEmitterEditor';\nimport ObjectPropertiesEditor from './Editors/ObjectPropertiesEditor';\nconst gd /* TODO: add flow in this file */ = global.gd;\n\n/**\n * A service returning editor components for each object type.\n */\nexport default {\n  getEditorConfiguration(objectType: string) {\n    if (!this.editorConfigurations[objectType]) {\n      console.warn(\n        `Object with type ${objectType} has no editor configuration registered. Please use registerEditorConfiguration to register your editor.`\n      );\n    }\n\n    return this.editorConfigurations[objectType];\n  },\n  registerEditorConfiguration: function(objectType, editorConfiguration) {\n    if (!editorConfiguration.component) {\n      console.warn(\n        `Tried to register editor configuration for object \"${objectType}\", but \"component\" property is not defined.`\n      );\n      return;\n    }\n    if (!editorConfiguration.createNewObject) {\n      console.warn(\n        `Tried to register editor configuration for object \"${objectType}\", but \"createNewObject\" property is not defined.`\n      );\n      return;\n    }\n    if (!editorConfiguration.castToObjectType) {\n      console.warn(\n        `Tried to register editor configuration for object \"${objectType}\", but \"castToObjectType\" property is not defined.`\n      );\n      return;\n    }\n\n    if (this.editorConfigurations.hasOwnProperty(objectType)) {\n      console.warn(\n        `Tried to register editor configuration for object \"${objectType}\", but an editor configuration already exists.`\n      );\n      return;\n    }\n\n    console.info(\n      `Properly registered editor configuration for object \"${objectType}\".`\n    );\n    this.editorConfigurations[objectType] = editorConfiguration;\n  },\n  getDefaultObjectJsImplementationPropertiesEditor(options) {\n    return {\n      component: ObjectPropertiesEditor,\n      createNewObject: object =>\n        gd\n          .asObjectJsImplementation(object)\n          .clone()\n          .release(),\n      castToObjectType: object => gd.asObjectJsImplementation(object),\n      helpPagePath: options.helpPagePath,\n    };\n  },\n  editorConfigurations: {\n    Sprite: {\n      component: SpriteEditor,\n      createNewObject: () => new gd.SpriteObject(''),\n      castToObjectType: object => gd.asSpriteObject(object),\n      helpPagePath: '/objects/sprite',\n    },\n    'TiledSpriteObject::TiledSprite': {\n      component: TiledSpriteEditor,\n      createNewObject: () => new gd.TiledSpriteObject(''),\n      castToObjectType: object => gd.asTiledSpriteObject(object),\n      helpPagePath: '/objects/tiled_sprite',\n    },\n    'PanelSpriteObject::PanelSprite': {\n      component: PanelSpriteEditor,\n      createNewObject: () => new gd.PanelSpriteObject(''),\n      castToObjectType: object => gd.asPanelSpriteObject(object),\n      helpPagePath: '/objects/panel_sprite',\n    },\n    'TextObject::Text': {\n      component: TextEditor,\n      createNewObject: () => new gd.TextObject(''),\n      castToObjectType: object => gd.asTextObject(object),\n      helpPagePath: '/objects/text',\n    },\n    'PrimitiveDrawing::Drawer': {\n      component: ShapePainterEditor,\n      createNewObject: () => new gd.ShapePainterObject(''),\n      castToObjectType: object => gd.asShapePainterObject(object),\n      helpPagePath: '/objects/shape_painter',\n    },\n    'TextEntryObject::TextEntry': {\n      component: EmptyEditor,\n      createNewObject: () => new gd.TextEntryObject(''),\n      castToObjectType: object => gd.asTextEntryObject(object),\n      helpPagePath: '/objects/text_entry',\n    },\n    'ParticleSystem::ParticleEmitter': {\n      component: ParticleEmitterEditor,\n      createNewObject: () => new gd.ParticleEmitterObject(''),\n      castToObjectType: object => gd.asParticleEmitterObject(object),\n      helpPagePath: '/objects/particles_emitter',\n    },\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport React, { PureComponent } from 'react';\nimport TextField from '../TextField';\nimport RaisedButton from '../RaisedButton';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'baseline',\n  },\n  button: {\n    marginLeft: 10,\n  },\n  textField: {\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  type: 'export' | 'create-game',\n  value: string,\n  onChange: string => void,\n  defaultPath?: string,\n  fullWidth?: boolean,\n|};\n\ntype TitleAndMessage = {|\n  title: ?string,\n  message: ?string,\n|};\n\nexport default class LocalFolderPicker extends PureComponent<Props, {||}> {\n  _onChooseFolder = ({ title, message }: TitleAndMessage) => {\n    if (!dialog || !electron) return;\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog\n      .showOpenDialog(browserWindow, {\n        title,\n        properties: ['openDirectory', 'createDirectory'],\n        message,\n        defaultPath: this.props.defaultPath,\n      })\n      .then(({ filePaths }) => {\n        if (!filePaths || !filePaths.length) return;\n        this.props.onChange(filePaths[0]);\n      });\n  };\n\n  _getTitleAndMessage = (i18n: I18nType): TitleAndMessage => {\n    const { type } = this.props;\n    if (type === 'export') {\n      return {\n        title: i18n._(t`Choose an export folder`),\n        message: i18n._(t`Choose where to export the game`),\n      };\n    } else if (type === 'create-game') {\n      return {\n        title: i18n._(t`Choose a folder for the new game`),\n        message: i18n._(t`Choose where to create the game`),\n      };\n    }\n\n    return {\n      title: undefined,\n      message: undefined,\n    };\n  };\n\n  render() {\n    return (\n      <I18n>\n        {({ i18n }) => {\n          const titleAndMessage = this._getTitleAndMessage(i18n);\n          return (\n            <div\n              style={{\n                ...styles.container,\n                width: this.props.fullWidth ? '100%' : undefined,\n              }}\n            >\n              <TextField\n                margin=\"dense\"\n                style={styles.textField}\n                type=\"text\"\n                hintText={titleAndMessage.title}\n                value={this.props.value}\n                onChange={(event, value) => this.props.onChange(value)}\n              />\n              <RaisedButton\n                label={<Trans>Choose folder</Trans>}\n                primary={false}\n                style={styles.button}\n                onClick={() => this._onChooseFolder(titleAndMessage)}\n              />\n            </div>\n          );\n        }}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\nimport { Column, Line } from '../../UI/Grid';\n\nexport const ExplanationHeader = () => (\n  <Text>\n    <Trans>\n      This will export your game as a Cordova project. Cordova is a technology\n      that enables HTML5 games to be packaged for iOS and Android.\n    </Trans>\n  </Text>\n);\n\nexport const DoneFooter = ({\n  renderGameButton,\n}: {|\n  renderGameButton: () => React.Node,\n|}) => (\n  <Column noMargin>\n    <Text>\n      <Trans>\n        You can now compile the game by yourself using Cordova command-line tool\n        to iOS (XCode is required) or Android (Android SDK is required).\n      </Trans>\n    </Text>\n    <Line justifyContent=\"center\">{renderGameButton()}</Line>\n  </Column>\n);\n\nexport const cordovaExporter = {\n  key: 'cordovaexport',\n  tabName: <Trans>Mobile</Trans>,\n  name: <Trans>iOS &amp; Android (manual)</Trans>,\n  helpPage: '/publishing/android_and_ios_with_cordova',\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\nimport { Column, Line } from '../../UI/Grid';\n\nexport const ExplanationHeader = () => (\n  <Text>\n    <Trans>\n      This will export your game so that you can package it for Windows, macOS\n      or Linux. You will need to install third-party tools (Node.js, Electron\n      Builder) to package your game.\n    </Trans>\n  </Text>\n);\n\nexport const DoneFooter = ({\n  renderGameButton,\n}: {|\n  renderGameButton: () => React.Node,\n|}) => (\n  <Column noMargin>\n    <Text>\n      <Trans>\n        The game was properly exported. You can now use Electron Builder (you\n        need Node.js installed and to use the command-line on your computer to\n        run it) to create an executable.\n      </Trans>\n    </Text>\n    <Line justifyContent=\"center\">{renderGameButton()}</Line>\n  </Column>\n);\n\nexport const electronExporter = {\n  key: 'electronexport',\n  tabName: <Trans>Desktop</Trans>,\n  name: <Trans>Windows/macOS/Linux (manual)</Trans>,\n  helpPage: '/publishing/windows-macos-linux-with-electron',\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\nimport { Column, Line } from '../../UI/Grid';\nimport FlatButton from '../../UI/FlatButton';\nimport { getHelpLink } from '../../Utils/HelpLink';\nimport Window from '../../Utils/Window';\n\nexport const ExplanationHeader = () => (\n  <Text>\n    <Trans>\n      Prepare your game for Facebook Instant Games so that it can be play on\n      Facebook Messenger. GDevelop will create a compressed file that you can\n      upload on your Facebook Developer account.\n    </Trans>\n  </Text>\n);\n\nexport const DoneFooter = ({\n  renderGameButton,\n}: {|\n  renderGameButton: () => React.Node,\n|}) => {\n  const openLearnMore = () => {\n    Window.openExternalURL(\n      getHelpLink('/publishing/publishing-to-facebook-instant-games')\n    );\n  };\n\n  return (\n    <Column noMargin>\n      <Text>\n        <Trans>\n          You can now create a game on Facebook Instant Games, if not already\n          done, and upload the generated archive.\n        </Trans>\n      </Text>\n      <Line justifyContent=\"center\">\n        {renderGameButton()}\n        <FlatButton\n          label={<Trans>Learn more about Instant Games publication</Trans>}\n          primary\n          onClick={openLearnMore}\n        />\n      </Line>\n    </Column>\n  );\n};\n\nexport const facebookInstantGamesExporter = {\n  key: 'facebookinstantgamesexport',\n  tabName: <Trans>Instant Games</Trans>,\n  name: <Trans>Facebook Instant Games</Trans>,\n  helpPage: '/publishing/publishing-to-facebook-instant-games',\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\nimport { Column, Line } from '../../UI/Grid';\nimport { type TargetName } from '../../Utils/GDevelopServices/Build';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport HelpButton from '../../UI/HelpButton';\n\nexport type ExportState = {|\n  targets: Array<TargetName>,\n  keystore: 'old' | 'new',\n  signingDialogOpen: boolean,\n|};\n\ntype HeaderProps = {|\n  project: gdProject,\n  exportState: ExportState,\n  updateExportState: (\n    updater: (prevExportState: ExportState) => ExportState\n  ) => void,\n|};\n\nexport const SetupExportHeader = ({\n  exportState,\n  updateExportState,\n}: HeaderProps) => {\n  return (\n    <Column noMargin>\n      <Line>\n        <Text>\n          <Trans>\n            Packaging your game for Android will create an APK file that can be\n            installed on Android phones or an Android App Bundle that can be\n            published to Google Play.\n          </Trans>\n        </Text>\n      </Line>\n      <RadioGroup\n        value={exportState.targets[0] || 'androidApk'}\n        onChange={event => {\n          const targetName = event.target.value;\n          updateExportState(prevExportState => ({\n            ...prevExportState,\n            targets: [targetName],\n          }));\n        }}\n      >\n        <FormControlLabel\n          value={'androidApk'}\n          control={<Radio color=\"primary\" />}\n          label={\n            <Trans>\n              APK (for testing on device or sharing outside Google Play)\n            </Trans>\n          }\n        />\n        <FormControlLabel\n          value={'androidAppBundle'}\n          control={<Radio color=\"primary\" />}\n          label={\n            <Trans>Android App Bundle (for publishing on Google Play)</Trans>\n          }\n        />\n      </RadioGroup>\n      <Line noMargin justifyContent=\"flex-end\">\n        <FlatButton\n          label={<Trans>Signing options</Trans>}\n          onClick={() => {\n            updateExportState(prevExportState => ({\n              ...prevExportState,\n              signingDialogOpen: true,\n            }));\n          }}\n          disabled={exportState.targets[0] !== 'androidAppBundle'}\n        />\n      </Line>\n      {exportState.signingDialogOpen && (\n        <Dialog\n          actions={[\n            <FlatButton\n              key=\"close\"\n              label={<Trans>Close</Trans>}\n              primary\n              keyboardFocused\n              onClick={() => {\n                updateExportState(prevExportState => ({\n                  ...prevExportState,\n                  signingDialogOpen: false,\n                }));\n              }}\n            />,\n          ]}\n          secondaryActions={[\n            <HelpButton\n              helpPagePath=\"/publishing/android_and_ios/play-store/upgrading-from-apk-to-aab\"\n              key=\"help\"\n            />,\n          ]}\n          open\n          title={<Trans>Signing options</Trans>}\n          onRequestClose={() => {\n            updateExportState(prevExportState => ({\n              ...prevExportState,\n              signingDialogOpen: false,\n            }));\n          }}\n          maxWidth=\"sm\"\n        >\n          <Text>\n            <Trans>\n              Choose the upload key to use to identify your Android App Bundle.\n              In most cases you don't need to change this. Use the \"Old upload\n              key\" if you used to publish your game as an APK and you activated\n              Play App Signing before switching to Android App Bundle.\n            </Trans>\n          </Text>\n          <RadioGroup\n            name=\"signing-keystore\"\n            value={exportState.keystore}\n            onChange={event => {\n              const keystore = event.target.value;\n              updateExportState(prevExportState => ({\n                ...prevExportState,\n                keystore,\n              }));\n            }}\n          >\n            <FormControlLabel\n              value={'new'}\n              control={<Radio color=\"primary\" />}\n              label={<Trans>New upload key (recommended)</Trans>}\n            />\n            <FormControlLabel\n              value={'old'}\n              control={<Radio color=\"primary\" />}\n              label={\n                <Trans>\n                  Old upload key (only if you used to publish your game as an\n                  APK and already activated Play App Signing)\n                </Trans>\n              }\n            />\n            <FormControlLabel\n              value={'custom'}\n              control={<Radio color=\"primary\" />}\n              label={<Trans>Custom upload key (not available yet)</Trans>}\n              disabled\n            />\n          </RadioGroup>\n        </Dialog>\n      )}\n    </Column>\n  );\n};\n\nexport const onlineCordovaExporter = {\n  key: 'onlinecordovaexport',\n  tabName: <Trans>Mobile</Trans>,\n  name: <Trans>Android (&amp; iOS coming soon)</Trans>,\n  helpPage: '/publishing/android_and_ios',\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\nimport Checkbox from '../../UI/Checkbox';\nimport { Column, Line } from '../../UI/Grid';\nimport { type TargetName } from '../../Utils/GDevelopServices/Build';\n\nexport type ExportState = {|\n  targets: Array<TargetName>,\n|};\n\ntype HeaderProps = {|\n  project: gdProject,\n  exportState: ExportState,\n  updateExportState: (\n    updater: (prevExportState: ExportState) => ExportState\n  ) => void,\n|};\n\nexport const SetupExportHeader = ({\n  exportState,\n  updateExportState,\n}: HeaderProps) => {\n  const setTarget = (targetName: TargetName, enable: boolean) => {\n    updateExportState(prevExportState => {\n      if (enable && prevExportState.targets.indexOf(targetName) === -1) {\n        return {\n          ...prevExportState,\n          targets: [...prevExportState.targets, targetName],\n        };\n      } else if (\n        !enable &&\n        prevExportState.targets.indexOf(targetName) !== -1\n      ) {\n        return {\n          ...prevExportState,\n          targets: prevExportState.targets.filter(name => name !== targetName),\n        };\n      }\n\n      return prevExportState;\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <Column noMargin>\n        <Line>\n          <Text>\n            <Trans>\n              Your game will be exported and packaged online as a stand-alone\n              game for Windows, Linux and/or macOS.\n            </Trans>\n          </Text>\n        </Line>\n        <Checkbox\n          label={<Trans>Windows (zip file)</Trans>}\n          checked={exportState.targets.indexOf('winZip') !== -1}\n          onCheck={(e, checked) => setTarget('winZip', checked)}\n        />\n        <Checkbox\n          label={<Trans>Windows (auto-installer file)</Trans>}\n          checked={exportState.targets.indexOf('winExe') !== -1}\n          onCheck={(e, checked) => setTarget('winExe', checked)}\n        />\n        <Checkbox\n          label={<Trans>macOS (zip file)</Trans>}\n          checked={exportState.targets.indexOf('macZip') !== -1}\n          onCheck={(e, checked) => setTarget('macZip', checked)}\n        />\n        <Checkbox\n          label={<Trans>Linux (AppImage)</Trans>}\n          checked={exportState.targets.indexOf('linuxAppImage') !== -1}\n          onCheck={(e, checked) => setTarget('linuxAppImage', checked)}\n        />\n      </Column>\n    </React.Fragment>\n  );\n};\n\nexport const onlineElectronExporter = {\n  key: 'onlineelectronexport',\n  tabName: <Trans>Desktop</Trans>,\n  name: <Trans>Windows/macOS/Linux</Trans>,\n  helpPage: '/publishing/windows-macos-linux',\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M7,2H17L13.5,9H17L10,22V14H7V2M9,4V12H12V14.66L14,11H10.24L13.76,4H9Z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props} style={{ transform: 'rotate(90deg)', ...props.style }}>\n    <path d=\"M12 2C17.5 2 22 6.5 22 12C22 17.5 17.5 22 12 22C6.5 22 2 17.5 2 12C2 6.5 6.5 2 12 2M12 4C7.58 4 4 7.58 4 12C4 16.42 7.58 20 12 20C16.42 20 20 16.42 20 12C20 7.58 16.42 4 12 4M12 5C15.87 5 19 8.13 19 12C19 15.87 15.87 19 12 19V5Z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M1.5,2.09C2.4,3 3.87,3.73 5.69,4.25C7.41,2.84 9.61,2 12,2C14.39,2 16.59,2.84 18.31,4.25C20.13,3.73 21.6,3 22.5,2.09C22.47,3.72 21.65,5.21 20.28,6.4C21.37,8 22,9.92 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12C2,9.92 2.63,8 3.72,6.4C2.35,5.21 1.53,3.72 1.5,2.09M20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12M10.5,10C10.5,10.8 9.8,11.5 9,11.5C8.2,11.5 7.5,10.8 7.5,10V8.5L10.5,10M16.5,10C16.5,10.8 15.8,11.5 15,11.5C14.2,11.5 13.5,10.8 13.5,10L16.5,8.5V10M12,17.23C10.25,17.23 8.71,16.5 7.81,15.42L9.23,14C9.68,14.72 10.75,15.23 12,15.23C13.25,15.23 14.32,14.72 14.77,14L16.19,15.42C15.29,16.5 13.75,17.23 12,17.23Z\"\n    />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M20,12H4V11H6L7,6H12L13,11H20V12M13.22,7L13.62,9H22V7H13.22M22,16A3,3 0 0,1 19,19H5A3,3 0 0,1 2,16A3,3 0 0,1 5,13H19A3,3 0 0,1 22,16M6,16A1,1 0 0,0 5,15A1,1 0 0,0 4,16A1,1 0 0,0 5,17A1,1 0 0,0 6,16M13,16A1,1 0 0,0 12,15A1,1 0 0,0 11,16A1,1 0 0,0 12,17A1,1 0 0,0 13,16M20,16A1,1 0 0,0 19,15A1,1 0 0,0 18,16A1,1 0 0,0 19,17A1,1 0 0,0 20,16Z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\nimport { getHelpLink } from '../../Utils/HelpLink';\nimport Window from '../../Utils/Window';\nimport FlatButton from '../../UI/FlatButton';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport AlertMessage from '../../UI/AlertMessage';\nimport ItchIo from '../../UI/CustomSvgIcons/ItchIo';\nimport GameJolt from '../../UI/CustomSvgIcons/GameJolt';\nimport Poki from '../../UI/CustomSvgIcons/Poki';\nimport CrazyGames from '../../UI/CustomSvgIcons/CrazyGames';\nimport NewsGround from '../../UI/CustomSvgIcons/NewsGround';\nimport { useResponsiveWindowWidth } from '../../UI/Reponsive/ResponsiveWindowMeasurer';\n\nconst getIconStyle = windowWidth => ({\n  height: windowWidth === 'small' ? 30 : 48,\n  width: windowWidth === 'small' ? 30 : 48,\n  margin: 10,\n});\n\nexport const ExplanationHeader = () => {\n  const windowWidth = useResponsiveWindowWidth();\n  const iconStyle = getIconStyle(windowWidth);\n  return (\n    <Column noMargin>\n      <Line>\n        <Text>\n          <Trans>\n            This will export your game to a folder. You can then upload it on a\n            website/game hosting service and share it on marketplaces and gaming\n            portals like CrazyGames, Poki, Game Jolt, itch.io, Newgrounds...\n          </Trans>\n        </Text>\n      </Line>\n      <Line justifyContent=\"center\">\n        <ItchIo color=\"primary\" style={iconStyle} />\n        <GameJolt color=\"primary\" style={iconStyle} />\n        <Poki color=\"primary\" style={iconStyle} />\n        <CrazyGames color=\"primary\" style={iconStyle} />\n        <NewsGround color=\"primary\" style={iconStyle} />\n      </Line>\n    </Column>\n  );\n};\n\nexport const DoneFooter = ({\n  renderGameButton,\n}: {|\n  renderGameButton: () => React.Node,\n|}) => (\n  <Column noMargin>\n    <Text>\n      <Trans>\n        You can now upload the game to a web hosting to play to the game.\n      </Trans>\n    </Text>\n    <AlertMessage kind=\"warning\">\n      <Trans>\n        Your game won't work if you open index.html on your computer. You must\n        upload it to a web hosting (Kongregate, Itch.io, etc...) or a web server\n        to run it.\n      </Trans>\n    </AlertMessage>\n    <Spacer />\n    {renderGameButton()}\n    <Spacer />\n    <FlatButton\n      fullWidth\n      primary\n      onClick={() =>\n        Window.openExternalURL(\n          getHelpLink('/publishing/publishing-to-gamejolt-store')\n        )\n      }\n      label={<Trans>Publish your game on Game Jolt</Trans>}\n      icon={<GameJolt />}\n    />\n    <FlatButton\n      fullWidth\n      primary\n      onClick={() =>\n        Window.openExternalURL('https://gdevelop-app.com/crazy-games')\n      }\n      label={<Trans>Publish your game on CrazyGames.com</Trans>}\n      icon={<CrazyGames />}\n    />\n    <FlatButton\n      fullWidth\n      primary\n      onClick={() =>\n        Window.openExternalURL(\n          getHelpLink('/publishing/publishing-to-kongregate-store')\n        )\n      }\n      label={<Trans>Publish your game on Kongregate</Trans>}\n    />\n    <FlatButton\n      fullWidth\n      primary\n      onClick={() =>\n        Window.openExternalURL(getHelpLink('/publishing/publishing-to-itch-io'))\n      }\n      label={<Trans>Publish your game on Itch.io</Trans>}\n      icon={<ItchIo />}\n    />\n    <FlatButton\n      fullWidth\n      primary\n      onClick={() => Window.openExternalURL('https://gdevelop-app.com/poki')}\n      label={<Trans>Publish your game on Poki.com</Trans>}\n      icon={<Poki />}\n    />\n    <FlatButton\n      fullWidth\n      onClick={() => Window.openExternalURL(getHelpLink('/publishing'))}\n      label={<Trans>Learn more about publishing</Trans>}\n    />\n  </Column>\n);\n\nexport const html5Exporter = {\n  key: 'webexport',\n  tabName: <Trans>Web</Trans>,\n  name: <Trans>Web</Trans>,\n  helpPage: '/publishing/html5_game_in_a_local_folder',\n};\n","// @flow\nimport * as React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { useScreenType } from '../Reponsive/ScreenTypeMeasurer';\n\ntype Props = {|\n  message: React.Node,\n  touchScreenMessage?: React.Node,\n  visible: boolean,\n  hide: () => void,\n|};\n\nconst InfoBar = ({ visible, touchScreenMessage, message, hide }: Props) => {\n  const screenType = useScreenType();\n\n  React.useEffect(\n    () => {\n      if (visible) {\n        const timeout = setTimeout(() => {\n          hide();\n        }, 3000);\n        return () => clearTimeout(timeout);\n      }\n    },\n    [visible, hide]\n  );\n\n  return (\n    <Snackbar\n      open={visible}\n      message={\n        screenType === 'touch' && touchScreenMessage\n          ? touchScreenMessage\n          : message\n      }\n    />\n  );\n};\n\nexport default InfoBar;\n","// @flow\nimport { t, Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { type Game, type GameSlug } from '../../../Utils/GDevelopServices/Game';\nimport FlatButton from '../../../UI/FlatButton';\nimport Dialog from '../../../UI/Dialog';\nimport {\n  cleanUpGameSlug,\n  PublicGameProperties,\n} from '../../../GameDashboard/PublicGameProperties';\nimport {\n  applyPublicPropertiesToProject,\n  type PartialGameChange,\n} from '../../../GameDashboard/PublicGamePropertiesDialog';\nimport { getWebBuildThumbnailUrl } from '../../../Utils/GDevelopServices/Build';\nimport RaisedButtonWithSplitMenu from '../../../UI/RaisedButtonWithSplitMenu';\nimport AuthenticatedUserContext from '../../../Profile/AuthenticatedUserContext';\n\ntype Props = {|\n  project: gdProject,\n  onSaveProject: () => Promise<void>,\n  buildId: string,\n  game: Game,\n  slug: ?GameSlug,\n  onClose: () => void,\n  onApply: PartialGameChange => Promise<void>,\n  isLoading: boolean,\n|};\n\nexport const OnlineGamePropertiesDialog = ({\n  project,\n  onSaveProject,\n  buildId,\n  game,\n  slug,\n  onClose,\n  onApply,\n  isLoading,\n}: Props) => {\n  const { profile } = React.useContext(AuthenticatedUserContext);\n\n  const [name, setName] = React.useState<string>(project.getName());\n  const [categories, setCategories] = React.useState<string[]>(\n    project.getCategories().toJSArray()\n  );\n  const [description, setDescription] = React.useState<string>(\n    project.getDescription()\n  );\n  const [authorIds, setAuthorIds] = React.useState<string[]>(\n    project.getAuthorIds().toJSArray()\n  );\n  const [playWithKeyboard, setPlayableWithKeyboard] = React.useState<boolean>(\n    project.isPlayableWithKeyboard()\n  );\n  const [playWithGamepad, setPlayableWithGamepad] = React.useState<boolean>(\n    project.isPlayableWithGamepad()\n  );\n  const [playWithMobile, setPlayableWithMobile] = React.useState<boolean>(\n    project.isPlayableWithMobile()\n  );\n  const [userSlug, setUserSlug] = React.useState<string>(\n    (slug && slug.username) || (profile && profile.username) || ''\n  );\n  const [gameSlug, setGameSlug] = React.useState<string>(\n    (slug && slug.gameSlug) || cleanUpGameSlug(project.getName())\n  );\n  const [orientation, setOrientation] = React.useState<string>(\n    project.getOrientation()\n  );\n  const [discoverable, setDiscoverable] = React.useState<boolean>(\n    !!game.discoverable\n  );\n  const thumbnailUrl = getWebBuildThumbnailUrl(project, buildId);\n\n  const saveProjectAndPublish = async () => {\n    await onSaveProject();\n    await onPublish();\n  };\n\n  const onPublish = async () => {\n    // Update the project with the new properties before updating the game.\n    if (\n      applyPublicPropertiesToProject(project, {\n        name,\n        categories: categories || [],\n        description: description || '',\n        authorIds,\n        playWithKeyboard: !!playWithKeyboard,\n        playWithGamepad: !!playWithGamepad,\n        playWithMobile: !!playWithMobile,\n        orientation: orientation || 'default',\n      })\n    ) {\n      await onApply({ discoverable, userSlug, gameSlug });\n    }\n  };\n\n  return (\n    <Dialog\n      title={<Trans>Verify your game info before publishing</Trans>}\n      onRequestClose={onClose}\n      actions={[\n        <FlatButton\n          label={<Trans>Back</Trans>}\n          key=\"back\"\n          primary={false}\n          onClick={onClose}\n          disabled={isLoading}\n        />,\n        <RaisedButtonWithSplitMenu\n          label={<Trans>Save project and publish</Trans>}\n          key=\"publish\"\n          primary\n          onClick={() => {\n            saveProjectAndPublish();\n          }}\n          disabled={isLoading}\n          buildMenuTemplate={i18n => [\n            {\n              label: i18n._(t`Publish without saving project`),\n              click: onPublish,\n            },\n          ]}\n        />,\n      ]}\n      cannotBeDismissed={isLoading}\n      open\n    >\n      <PublicGameProperties\n        name={name}\n        setName={setName}\n        categories={categories}\n        setCategories={setCategories}\n        description={description}\n        setDescription={setDescription}\n        project={project}\n        authorIds={authorIds}\n        setAuthorIds={setAuthorIds}\n        setPlayableWithKeyboard={setPlayableWithKeyboard}\n        playWithKeyboard={playWithKeyboard}\n        setPlayableWithGamepad={setPlayableWithGamepad}\n        playWithGamepad={playWithGamepad}\n        setPlayableWithMobile={setPlayableWithMobile}\n        playWithMobile={playWithMobile}\n        setOrientation={setOrientation}\n        orientation={orientation}\n        userSlug={userSlug}\n        setUserSlug={setUserSlug}\n        gameSlug={gameSlug}\n        setGameSlug={setGameSlug}\n        discoverable={discoverable}\n        setDiscoverable={setDiscoverable}\n        displayThumbnail\n        thumbnailUrl={thumbnailUrl}\n      />\n    </Dialog>\n  );\n};\n\nexport default OnlineGamePropertiesDialog;\n","// @flow\nimport { Trans, t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport Text from '../../../UI/Text';\nimport { Column, Line } from '../../../UI/Grid';\nimport TextField from '../../../UI/TextField';\nimport {\n  getBuildArtifactUrl,\n  getWebBuildThumbnailUrl,\n  type Build,\n} from '../../../Utils/GDevelopServices/Build';\nimport { type BuildStep } from '../../Builds/BuildStepsProgress';\nimport RaisedButton from '../../../UI/RaisedButton';\nimport Window from '../../../Utils/Window';\nimport Copy from '../../../UI/CustomSvgIcons/Copy';\nimport Share from '@material-ui/icons/Share';\nimport InfoBar from '../../../UI/Messages/InfoBar';\nimport IconButton from '../../../UI/IconButton';\nimport { CircularProgress, LinearProgress } from '@material-ui/core';\nimport FlatButton from '../../../UI/FlatButton';\nimport Dialog from '../../../UI/Dialog';\nimport {\n  EmailShareButton,\n  FacebookShareButton,\n  RedditShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n  EmailIcon,\n  FacebookIcon,\n  RedditIcon,\n  TwitterIcon,\n  WhatsappIcon,\n} from 'react-share';\nimport { TextFieldWithButtonLayout } from '../../../UI/Layout';\nimport {\n  getGame,\n  getGameUrl,\n  updateGame,\n  setGameSlug,\n  getGameSlugs,\n  type Game,\n  type GameSlug,\n} from '../../../Utils/GDevelopServices/Game';\nimport AuthenticatedUserContext from '../../../Profile/AuthenticatedUserContext';\nimport AlertMessage from '../../../UI/AlertMessage';\nimport OnlineGamePropertiesDialog from './OnlineGamePropertiesDialog';\nimport { showErrorBox } from '../../../UI/Messages/MessageBox';\nimport { type PartialGameChange } from '../../../GameDashboard/PublicGamePropertiesDialog';\n\nconst styles = {\n  icon: {\n    padding: 5,\n  },\n};\n\ntype OnlineGameLinkProps = {|\n  build: ?Build,\n  project: gdProject,\n  onSaveProject: () => Promise<void>,\n  errored: boolean,\n  exportStep: BuildStep,\n|};\n\nconst OnlineGameLink = ({\n  build,\n  project,\n  onSaveProject,\n  errored,\n  exportStep,\n}: OnlineGameLinkProps) => {\n  const [showCopiedInfoBar, setShowCopiedInfoBar] = React.useState<boolean>(\n    false\n  );\n  const [isShareDialogOpen, setIsShareDialogOpen] = React.useState<boolean>(\n    false\n  );\n  const [\n    isOnlineGamePropertiesDialogOpen,\n    setIsOnlineGamePropertiesDialogOpen,\n  ] = React.useState<boolean>(false);\n  const [game, setGame] = React.useState<?Game>(null);\n  const [slug, setSlug] = React.useState<?GameSlug>(null);\n  const [isGameLoading, setIsGameLoading] = React.useState<boolean>(false);\n  const { getAuthorizationHeader, profile } = React.useContext(\n    AuthenticatedUserContext\n  );\n\n  const exportPending = !errored && exportStep !== '' && exportStep !== 'done';\n  const isBuildComplete = build && build.status === 'complete';\n  const isBuildPublished = build && game && build.id === game.publicWebBuildId;\n  const gameUrl = getGameUrl(game, slug);\n  const buildUrl =\n    exportPending || !isBuildComplete\n      ? null\n      : isBuildPublished\n      ? gameUrl\n      : getBuildArtifactUrl(build, 's3Key');\n\n  const loadGame = React.useCallback(\n    async () => {\n      const gameId = build && build.gameId;\n      if (!profile || !gameId) return;\n\n      const { id } = profile;\n      try {\n        setIsGameLoading(true);\n        const [game, slugs] = await Promise.all([\n          getGame(getAuthorizationHeader, id, gameId),\n          getGameSlugs(getAuthorizationHeader, id, gameId).catch(err => {\n            console.error('Unable to get the game slug', err);\n          }),\n        ]);\n        setGame(game);\n        if (slugs && slugs.length > 0) {\n          setSlug(slugs[0]);\n        }\n      } catch (err) {\n        console.error('Unable to load the game', err);\n      } finally {\n        setIsGameLoading(false);\n      }\n    },\n    [build, getAuthorizationHeader, profile]\n  );\n\n  React.useEffect(\n    () => {\n      // Load game only once\n      if (!game && isBuildComplete) {\n        loadGame();\n      }\n    },\n    [game, loadGame, isBuildComplete]\n  );\n\n  const onOpen = () => {\n    if (!buildUrl) return;\n    Window.openExternalURL(buildUrl);\n  };\n\n  const onCopy = () => {\n    if (!buildUrl) return;\n    // TODO: use Clipboard.js, after it's been reworked to use this API and handle text.\n    navigator.clipboard.writeText(buildUrl);\n    setShowCopiedInfoBar(true);\n  };\n\n  const onShare = async () => {\n    if (!buildUrl || !navigator.share) return;\n\n    // We are on mobile (or on browsers supporting sharing using the system dialog).\n    const shareData = {\n      title: 'My GDevelop game',\n      text: 'Try the game I just created with #gdevelop',\n      url: buildUrl,\n    };\n\n    try {\n      await navigator.share(shareData);\n    } catch (err) {\n      console.error(\"Couldn't share the game\", err);\n    }\n  };\n\n  React.useEffect(\n    () => {\n      if (exportStep === 'done') {\n        setIsShareDialogOpen(true);\n      }\n    },\n    [exportStep]\n  );\n\n  const onGameUpdate = React.useCallback(\n    async (\n      partialGameChange: PartialGameChange,\n      i18n: I18nType\n    ): Promise<boolean> => {\n      if (!profile || !game || !build) return false;\n\n      const { id } = profile;\n      try {\n        setIsGameLoading(true);\n        const updatedGame = await updateGame(\n          getAuthorizationHeader,\n          id,\n          game.id,\n          {\n            gameName: project.getName(),\n            description: project.getDescription(),\n            categories: project.getCategories().toJSArray(),\n            playWithGamepad: project.isPlayableWithGamepad(),\n            playWithKeyboard: project.isPlayableWithKeyboard(),\n            playWithMobile: project.isPlayableWithMobile(),\n            orientation: project.getOrientation(),\n            publicWebBuildId: build.id,\n            thumbnailUrl: getWebBuildThumbnailUrl(project, build.id),\n            discoverable: partialGameChange.discoverable,\n          }\n        );\n        setGame(updatedGame);\n        const { userSlug, gameSlug } = partialGameChange;\n        if (userSlug && gameSlug && userSlug === profile.username) {\n          try {\n            await setGameSlug(\n              getAuthorizationHeader,\n              id,\n              game.id,\n              userSlug,\n              gameSlug\n            );\n            setSlug({ username: userSlug, gameSlug: gameSlug, createdAt: 0 });\n          } catch (error) {\n            console.error(\n              'Unable to update the game slug:',\n              error.response || error.message\n            );\n            showErrorBox({\n              message:\n                i18n._(\n                  t`Unable to update the game slug. A slug must be 6 to 30 characters long and only contains letters, digits or dashes.`\n                ) +\n                ' ' +\n                i18n._(t`Verify your internet connection or try again later.`),\n              rawError: error,\n              errorId: 'game-slug-update-error',\n            });\n            return false;\n          }\n        }\n      } catch (err) {\n        showErrorBox({\n          message: i18n._(\n            t`There was an error updating your game. Verify that your internet connection is working or try again later.`\n          ),\n          rawError: err,\n          errorId: 'update-game-error',\n        });\n        console.error('Unable to update the game', err);\n        return false;\n      } finally {\n        setIsGameLoading(false);\n      }\n\n      return true;\n    },\n    [game, getAuthorizationHeader, profile, build, project]\n  );\n\n  if (!build && !exportStep) return null;\n\n  const dialogActions = [\n    <FlatButton\n      key=\"close\"\n      label={<Trans>Close</Trans>}\n      primary={false}\n      onClick={() => setIsShareDialogOpen(false)}\n    />,\n    // Ensure there is a game loaded, meaning the user owns the game.\n    game && buildUrl && !isBuildPublished && (\n      <RaisedButton\n        key=\"publish\"\n        label={<Trans>Verify and Publish to Liluo.io</Trans>}\n        primary\n        onClick={() => setIsOnlineGamePropertiesDialogOpen(true)}\n      />\n    ),\n  ];\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <>\n          {exportPending && (\n            <>\n              <Text>\n                <Trans>Just a few seconds while we generate the link...</Trans>\n              </Text>\n              <LinearProgress />\n            </>\n          )}\n          {isShareDialogOpen && (\n            <Dialog\n              title={<Trans>Share your game</Trans>}\n              actions={dialogActions}\n              open\n              onRequestClose={() => setIsShareDialogOpen(false)}\n            >\n              {buildUrl && !isGameLoading ? (\n                <Column noMargin>\n                  <TextFieldWithButtonLayout\n                    noFloatingLabelText\n                    renderTextField={() => (\n                      <TextField\n                        value={buildUrl}\n                        readOnly\n                        fullWidth\n                        endAdornment={\n                          <IconButton\n                            onClick={onCopy}\n                            tooltip={t`Copy`}\n                            edge=\"end\"\n                          >\n                            <Copy />\n                          </IconButton>\n                        }\n                      />\n                    )}\n                    renderButton={style => (\n                      <RaisedButton\n                        primary\n                        label={<Trans>Open</Trans>}\n                        onClick={onOpen}\n                        style={style}\n                      />\n                    )}\n                  />\n                  {isBuildPublished && navigator.share && (\n                    <Line justifyContent=\"flex-end\">\n                      <FlatButton\n                        label={<Trans>Share</Trans>}\n                        onClick={onShare}\n                        icon={<Share />}\n                      />\n                    </Line>\n                  )}\n                  {isBuildPublished && !navigator.share && (\n                    <Line justifyContent=\"space-between\">\n                      <Column justifyContent=\"center\">\n                        <AlertMessage kind=\"info\">\n                          <Trans>\n                            Your game is published! Share it with the community!\n                          </Trans>\n                        </AlertMessage>\n                      </Column>\n                      <Column justifyContent=\"flex-end\">\n                        <Line>\n                          <FacebookShareButton\n                            url={buildUrl}\n                            style={styles.icon}\n                            quote={`Try the game I just created with GDevelop.io`}\n                            hashtag=\"#gdevelop\"\n                          >\n                            <FacebookIcon size={32} round />\n                          </FacebookShareButton>\n                          <RedditShareButton\n                            url={buildUrl}\n                            title={`Try the game I just created with r/gdevelop`}\n                            style={styles.icon}\n                          >\n                            <RedditIcon size={32} round />\n                          </RedditShareButton>\n                          <TwitterShareButton\n                            title={`Try the game I just created with GDevelop.io`}\n                            hashtags={['gdevelop']}\n                            url={buildUrl}\n                            style={styles.icon}\n                          >\n                            <TwitterIcon size={32} round />\n                          </TwitterShareButton>\n                          <WhatsappShareButton\n                            title={`Try the game I just created with GDevelop.io`}\n                            url={buildUrl}\n                            style={styles.icon}\n                          >\n                            <WhatsappIcon size={32} round />\n                          </WhatsappShareButton>\n                          <EmailShareButton\n                            subject=\"My GDevelop game\"\n                            body=\"Try the game I just created with GDevelop.io\"\n                            url={buildUrl}\n                            style={styles.icon}\n                          >\n                            <EmailIcon size={32} round />\n                          </EmailShareButton>\n                        </Line>\n                      </Column>\n                    </Line>\n                  )}\n                  {!isBuildPublished && game && (\n                    <Line>\n                      <AlertMessage kind=\"info\">\n                        <Trans>\n                          This link is private so you can share it with friends\n                          and testers. When you're ready you can update your\n                          Liluo.io game page.\n                        </Trans>\n                      </AlertMessage>\n                    </Line>\n                  )}\n                </Column>\n              ) : (\n                <Column alignItems=\"center\">\n                  <CircularProgress />\n                </Column>\n              )}\n              <InfoBar\n                message={<Trans>Copied to clipboard!</Trans>}\n                visible={showCopiedInfoBar}\n                hide={() => setShowCopiedInfoBar(false)}\n              />\n            </Dialog>\n          )}\n          {game && build && isOnlineGamePropertiesDialogOpen && (\n            <OnlineGamePropertiesDialog\n              project={project}\n              onSaveProject={onSaveProject}\n              buildId={build.id}\n              onClose={() => setIsOnlineGamePropertiesDialogOpen(false)}\n              onApply={async partialGameChange => {\n                const isGameUpdated = await onGameUpdate(\n                  partialGameChange,\n                  i18n\n                );\n                if (isGameUpdated) {\n                  setIsOnlineGamePropertiesDialogOpen(false);\n                }\n              }}\n              game={game}\n              slug={slug}\n              isLoading={isGameLoading}\n            />\n          )}\n        </>\n      )}\n    </I18n>\n  );\n};\n\nexport default OnlineGameLink;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../../UI/Text';\nimport { Column, Line } from '../../../UI/Grid';\nimport OnlineGameLink from './OnlineGameLink';\n\nconst ExplanationHeader = () => (\n  <Column noMargin alignItems=\"center\" justifyContent=\"center\">\n    <Line>\n      <Text align=\"center\">\n        <Trans>\n          Generate a unique link, playable from any computer or mobile phone's\n          browser.\n        </Trans>\n      </Text>\n    </Line>\n  </Column>\n);\n\nconst onlineWebExporter = {\n  key: 'onlinewebexport',\n  tabName: 'Web',\n  name: <Trans>Web</Trans>,\n  helpPage: '/publishing/web',\n};\n\nexport { onlineWebExporter, ExplanationHeader, OnlineGameLink };\n","// @flow\nimport * as React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\n// We support a subset of the props supported by Material-UI v0.x Toggle\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  label?: ?React.Node,\n  toggled: boolean,\n  onToggle: (e: {||}, toggled: boolean) => void,\n  disabled?: boolean,\n  labelPosition: 'right',\n\n  style?: {|\n    marginTop?: number,\n  |},\n|};\n\n/**\n * A text field based on Material-UI text field.\n */\nexport default class Toggle extends React.Component<Props, {||}> {\n  render() {\n    return (\n      <FormControlLabel\n        control={\n          <Switch\n            checked={this.props.toggled}\n            onChange={event => this.props.onToggle(event, event.target.checked)}\n            color=\"primary\"\n          />\n        }\n        label={this.props.label}\n        disabled={this.props.disabled}\n        style={this.props.style}\n      />\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport flatten from 'lodash/flatten';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport { mapFor } from '../Utils/MapFor';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport VariableRow from './VariableRow';\nimport EditVariableRow from './EditVariableRow';\nimport {\n  getInitialSelection,\n  hasSelection,\n  addToSelection,\n  getSelection,\n} from '../Utils/SelectionHandler';\nimport { CLIPBOARD_KIND } from './ClipboardKind';\nimport Clipboard, { SafeExtractor } from '../Utils/Clipboard';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\nimport { type VariableOrigin } from './VariablesList.flow';\nimport { EmptyPlaceholder } from '../UI/EmptyPlaceholder';\nimport { Column } from '../UI/Grid';\nimport ScrollView from '../UI/ScrollView';\n\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  variablesContainer: {\n    // Somehow ensure the scrollbar is not shown when not needed.\n    marginBottom: 10,\n  },\n};\n\nconst SortableVariableRow = SortableElement(VariableRow);\nconst SortableVariablesListBody = SortableContainer(({ children }) => (\n  <div style={styles.variablesContainer}>{children}</div>\n));\nSortableVariablesListBody.muiName = 'TableBody';\n\ntype VariableAndName = {| name: string, ptr: number, variable: gdVariable |};\n\ntype Props = {|\n  variablesContainer: gdVariablesContainer,\n  onComputeAllVariableNames: () => Array<string>,\n  inheritedVariablesContainer?: ?gdVariablesContainer,\n  emptyPlaceholderTitle?: React.Node,\n  emptyPlaceholderDescription?: React.Node,\n  onSizeUpdated?: () => void,\n  commitVariableValueOnBlur?: boolean,\n  helpPagePath?: ?string,\n|};\ntype State = {|\n  nameErrors: { [string]: string },\n  selectedVariables: { [number]: ?VariableAndName },\n  mode: 'select' | 'move',\n  allVariableNames: string[],\n|};\n\nexport default class VariablesList extends React.Component<Props, State> {\n  state = {\n    nameErrors: {},\n    selectedVariables: getInitialSelection(),\n    mode: 'select',\n    allVariableNames: [],\n  };\n\n  componentDidMount() {\n    this.setState({ allVariableNames: this.props.onComputeAllVariableNames() });\n  }\n\n  _selectVariable = (variableAndName: VariableAndName, select: boolean) => {\n    this.setState({\n      selectedVariables: addToSelection(\n        this.state.selectedVariables,\n        variableAndName,\n        select\n      ),\n    });\n  };\n\n  copySelection = () => {\n    Clipboard.set(\n      CLIPBOARD_KIND,\n      getSelection(this.state.selectedVariables).map(({ name, variable }) => ({\n        name,\n        serializedVariable: serializeToJSObject(variable),\n      }))\n    );\n  };\n\n  paste = () => {\n    const { variablesContainer, inheritedVariablesContainer } = this.props;\n    if (!Clipboard.has(CLIPBOARD_KIND)) return;\n\n    const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n    const variablesContent = SafeExtractor.extractArray(clipboardContent);\n    if (!variablesContent) return;\n\n    variablesContent.forEach(variableContent => {\n      const name = SafeExtractor.extractStringProperty(variableContent, 'name');\n      const serializedVariable = SafeExtractor.extractObjectProperty(\n        variableContent,\n        'serializedVariable'\n      );\n      if (!name || !serializedVariable) return;\n\n      const newName = newNameGenerator(\n        name,\n        name =>\n          inheritedVariablesContainer\n            ? inheritedVariablesContainer.has(name) ||\n              variablesContainer.has(name)\n            : variablesContainer.has(name),\n        'CopyOf'\n      );\n      const newVariable = new gd.Variable();\n      unserializeFromJSObject(newVariable, serializedVariable);\n      variablesContainer.insert(\n        newName,\n        newVariable,\n        variablesContainer.count()\n      );\n      newVariable.delete();\n    });\n    this.forceUpdate();\n  };\n\n  deleteSelection = () => {\n    const { variablesContainer } = this.props;\n    const selection: Array<VariableAndName> = getSelection(\n      this.state.selectedVariables\n    );\n\n    // Only delete ancestor variables, as selection can be composed of variables\n    // that are contained inside others.\n    const ancestorOnlyVariables = selection.filter(variableAndName => {\n      // Make sure that the variable has no ancestor containing it\n      return !selection.find(\n        otherVariableAndName =>\n          variableAndName !== otherVariableAndName &&\n          otherVariableAndName.variable.contains(\n            variableAndName.variable,\n            /*recursive=*/ true\n          )\n      );\n    });\n\n    // We don't want to ever manipulate/access to variables that have been deleted (by removeRecursively):\n    // that's why it's important to only delete ancestor variables.\n    ancestorOnlyVariables.forEach(({ variable }: VariableAndName) =>\n      variablesContainer.removeRecursively(variable)\n    );\n    this.clearSelection();\n  };\n\n  clearSelection = () => {\n    this.setState({\n      selectedVariables: getInitialSelection(),\n    });\n  };\n\n  _updateOrDefineVariable = (\n    name: string,\n    variable: gdVariable,\n    newValue: string,\n    index: number,\n    origin: ?VariableOrigin\n  ) => {\n    const { variablesContainer, inheritedVariablesContainer } = this.props;\n\n    // If editing a variable from the parent container, clone it\n    // inside this container, before updating its value.\n    if (inheritedVariablesContainer && origin === 'parent') {\n      const serializedVariable = serializeToJSObject(\n        inheritedVariablesContainer.get(name)\n      );\n      const newVariable = new gd.Variable();\n      unserializeFromJSObject(newVariable, serializedVariable);\n      variablesContainer.insert(name, newVariable, index);\n      newVariable.delete();\n\n      variable = variablesContainer.get(name);\n    }\n\n    switch (variable.getType()) {\n      case gd.Variable.String:\n        variable.setString(newValue);\n        break;\n      case gd.Variable.Number:\n        variable.setValue(parseFloat(newValue));\n        break;\n      case gd.Variable.Boolean:\n        variable.setBool(newValue === 'true');\n        break;\n      default:\n        console.error(\n          `Cannot set variable with type ${variable.getType()} - are you sure it's a primitive type?`\n        );\n    }\n  };\n\n  _renderStructureChildren(\n    parentVariable: gdVariable,\n    depth: number,\n    origin: VariableOrigin\n  ): Array<React.Node> {\n    const names = parentVariable.getAllChildrenNames().toJSArray();\n\n    return flatten(\n      names.map((name, index) => {\n        const variable = parentVariable.getChild(name);\n        return this._renderVariableAndChildrenRows(\n          name,\n          variable,\n          depth + 1,\n          index,\n          parentVariable,\n          origin\n        );\n      })\n    );\n  }\n\n  _renderArrayChildren(\n    parentVariable: gdVariable,\n    depth: number,\n    origin: VariableOrigin\n  ): Array<React.Node> {\n    return mapFor(0, parentVariable.getChildrenCount(), index => {\n      const variable = parentVariable.getAtIndex(index);\n      return this._renderVariableAndChildrenRows(\n        '' + index,\n        variable,\n        depth + 1,\n        index,\n        parentVariable,\n        origin,\n        /* arrayElement= */ true\n      );\n    });\n  }\n\n  _getVariableOrigin = (name: string) => {\n    const { variablesContainer, inheritedVariablesContainer } = this.props;\n\n    if (!inheritedVariablesContainer || !inheritedVariablesContainer.has(name))\n      return '';\n    return variablesContainer.has(name) ? 'inherited' : 'parent';\n  };\n\n  _renderVariableAndChildrenRows(\n    name: string,\n    variable: gdVariable,\n    depth: number,\n    index: number,\n    parentVariable: ?gdVariable,\n    parentOrigin: ?VariableOrigin = null,\n    arrayElement: ?boolean = false\n  ) {\n    const { variablesContainer, commitVariableValueOnBlur } = this.props;\n    const type = variable.getType();\n    const isCollection = !gd.Variable.isPrimitive(variable.getType());\n\n    const origin = parentOrigin ? parentOrigin : this._getVariableOrigin(name);\n\n    return (\n      <SortableVariableRow\n        name={name}\n        index={index}\n        key={'variable-' + name}\n        variable={variable}\n        disabled={depth !== 0}\n        depth={depth}\n        origin={origin}\n        arrayElement={!!arrayElement}\n        commitVariableValueOnBlur={commitVariableValueOnBlur}\n        errorText={\n          this.state.nameErrors[variable.ptr.toString()]\n            ? 'This name is already taken'\n            : undefined\n        }\n        onChangeValue={text => {\n          this._updateOrDefineVariable(name, variable, text, index, origin);\n\n          this.forceUpdate();\n          if (this.props.onSizeUpdated) this.props.onSizeUpdated();\n        }}\n        onResetToDefaultValue={() => {\n          variablesContainer.removeRecursively(variable);\n          this.forceUpdate();\n          if (this.props.onSizeUpdated) this.props.onSizeUpdated();\n        }}\n        onChangeType={newType => {\n          variable.castTo(newType);\n          this.forceUpdate();\n        }}\n        onChangeName={text => {\n          if (name === text) return;\n\n          let success = true;\n          if (!parentVariable) {\n            success = variablesContainer.rename(name, text);\n          } else {\n            success = parentVariable.renameChild(name, text);\n          }\n\n          this.setState({\n            nameErrors: {\n              ...this.state.nameErrors,\n              [variable.ptr]: !success,\n            },\n          });\n        }}\n        onRemove={() => {\n          if (!parentVariable) {\n            variablesContainer.remove(name);\n          } else {\n            if (parentVariable.getType() === gd.Variable.Structure)\n              parentVariable.removeChild(name);\n            else if (parentVariable.getType() === gd.Variable.Array)\n              parentVariable.removeAtIndex(index);\n          }\n\n          this.forceUpdate();\n          if (this.props.onSizeUpdated) this.props.onSizeUpdated();\n        }}\n        onAddChild={() => {\n          // Primitive types should be converted via onChangeType before getting children added.\n          if (!isCollection) return;\n\n          if (type === gd.Variable.Structure) {\n            const name = newNameGenerator('ChildVariable', name =>\n              variable.hasChild(name)\n            );\n            variable.getChild(name).setString('');\n          } else if (type === gd.Variable.Array) variable.pushNew();\n\n          this.forceUpdate();\n          if (this.props.onSizeUpdated) this.props.onSizeUpdated();\n        }}\n        children={\n          type === gd.Variable.Structure\n            ? this._renderStructureChildren(variable, depth, origin)\n            : type === gd.Variable.Array\n            ? this._renderArrayChildren(variable, depth, origin)\n            : null\n        }\n        showHandle={this.state.mode === 'move'}\n        showSelectionCheckbox={this.state.mode === 'select'}\n        isSelected={!!this.state.selectedVariables[variable.ptr]}\n        onSelect={select =>\n          this._selectVariable({ name, ptr: variable.ptr, variable }, select)\n        }\n        undefinedVariableNames={\n          // autocompletion is not handled for child variables.\n          depth === 0\n            ? this.state.allVariableNames.filter(\n                variableName => !this.props.variablesContainer.has(variableName)\n              )\n            : []\n        }\n      />\n    );\n  }\n\n  addVariable = () => {\n    const { variablesContainer, inheritedVariablesContainer } = this.props;\n    const variable = new gd.Variable();\n    variable.setString('');\n    const name = newNameGenerator('Variable', name =>\n      inheritedVariablesContainer\n        ? inheritedVariablesContainer.has(name) || variablesContainer.has(name)\n        : variablesContainer.has(name)\n    );\n    variablesContainer.insert(name, variable, variablesContainer.count());\n    this.forceUpdate();\n    if (this.props.onSizeUpdated) this.props.onSizeUpdated();\n  };\n\n  render() {\n    const { variablesContainer, inheritedVariablesContainer } = this.props;\n    if (!variablesContainer) return null;\n\n    // Display inherited variables, if any\n    const containerInheritedVariablesTree = inheritedVariablesContainer\n      ? mapFor(0, inheritedVariablesContainer.count(), index => {\n          const name = inheritedVariablesContainer.getNameAt(index);\n          if (!variablesContainer.has(name)) {\n            // Show only variables from parent container that are not redefined\n            const variable = inheritedVariablesContainer.getAt(index);\n            return this._renderVariableAndChildrenRows(\n              name,\n              variable,\n              0,\n              index,\n              undefined,\n              'parent'\n            );\n          }\n        })\n      : [];\n\n    const containerVariablesTree = mapFor(\n      0,\n      variablesContainer.count(),\n      index => {\n        const variable = variablesContainer.getAt(index);\n        const name = variablesContainer.getNameAt(index);\n\n        return this._renderVariableAndChildrenRows(\n          name,\n          variable,\n          0,\n          index,\n          undefined\n        );\n      }\n    );\n\n    // Put all variables in the **same** array so that if a variable that was shown\n    // as inherited is redefined by the user, React can reconcile the variable rows\n    // (VariableRow going from containerInheritedVariablesTree array to\n    // containerVariablesTree array) and the **focus** won't be lost.\n    const allVariables = [\n      ...containerInheritedVariablesTree,\n      ...containerVariablesTree,\n    ];\n\n    return (\n      <Column noMargin expand useFullHeight>\n        {allVariables.length ? (\n          <ScrollView autoHideScrollbar>\n            <SortableVariablesListBody\n              variablesContainer={this.props.variablesContainer}\n              onSortEnd={({ oldIndex, newIndex }) => {\n                this.props.variablesContainer.move(oldIndex, newIndex);\n                this.forceUpdate();\n              }}\n              helperClass=\"sortable-helper\"\n              useDragHandle\n              lockToContainerEdges\n            >\n              {allVariables}\n            </SortableVariablesListBody>\n          </ScrollView>\n        ) : this.props.emptyPlaceholderTitle &&\n          this.props.emptyPlaceholderDescription &&\n          this.props.helpPagePath ? (\n          <Column noMargin expand justifyContent=\"center\">\n            <EmptyPlaceholder\n              title={this.props.emptyPlaceholderTitle}\n              description={this.props.emptyPlaceholderDescription}\n              actionLabel=\"Add a variable\"\n              helpPagePath={this.props.helpPagePath}\n              onAdd={this.addVariable}\n            />\n          </Column>\n        ) : null}\n        <EditVariableRow\n          onAdd={allVariables.length ? this.addVariable : null}\n          onCopy={this.copySelection}\n          onPaste={this.paste}\n          onDeleteSelection={this.deleteSelection}\n          hasSelection={hasSelection(this.state.selectedVariables)}\n          hasClipboard={Clipboard.has(CLIPBOARD_KIND)}\n        />\n      </Column>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport GDevelopThemeContext from '../Theme/ThemeContext';\n\nconst styles = {\n  row: {\n    display: 'flex',\n  },\n  cell: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: 4,\n    paddingRight: 4,\n  },\n};\n\ntype TreeTableRowProps = {|\n  children: React.Node,\n  /* Allow to specify a different alignment than the default (centered). */\n  alignItems?: ?'flex-start',\n|};\n\nexport const TreeTableRow = (props: TreeTableRowProps) => {\n  const gdevelopTheme = React.useContext(GDevelopThemeContext);\n\n  return (\n    <div\n      style={{\n        ...styles.row,\n        alignItems: props.alignItems,\n        backgroundColor: gdevelopTheme.list.itemsBackgroundColor,\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\ntype TreeTableCellProps = {|\n  style?: Object,\n  expand?: boolean,\n  children?: React.Node,\n|};\n\nexport const TreeTableCell = (props: TreeTableCellProps) => (\n  <div\n    style={{\n      ...styles.cell,\n      flex: props.expand ? 1 : undefined,\n      ...props.style,\n    }}\n  >\n    {props.children}\n  </div>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Column, Line, Spacer } from '../UI/Grid';\nimport Text from '../UI/Text';\nimport BackgroundText from '../UI/BackgroundText';\n\ntype Props = {\n  message?: React.Node,\n  onLogin: () => void,\n  onCreateAccount: () => void,\n  justifyContent?: 'center',\n};\n\nexport default ({\n  message,\n  onLogin,\n  onCreateAccount,\n  justifyContent,\n}: Props) => (\n  <Column noMargin>\n    <Line justifyContent={justifyContent}>\n      <Text>\n        {message || (\n          <Trans>\n            You are not connected. Create an account to build your game for\n            Android, Windows, macOS and Linux in one click, and get access to\n            metrics for your game.\n          </Trans>\n        )}\n      </Text>\n    </Line>\n    <Line justifyContent=\"center\" alignItems=\"baseline\">\n      <RaisedButton\n        label={<Trans>Create my account</Trans>}\n        onClick={onCreateAccount}\n        primary\n      />\n      <Spacer />\n      <Spacer />\n      <BackgroundText>or</BackgroundText>\n      <Spacer />\n      <FlatButton label={<Trans>Login</Trans>} onClick={onLogin} />\n    </Line>\n  </Column>\n);\n","// @flow\n\nexport const makeTimestampedId = () =>\n  '' + Date.now() + '-' + Math.floor(Math.random() * 1000000);\n","// @flow\nimport React from 'react';\nimport { Trans } from '@lingui/macro';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport { UsersAutocomplete } from '../Utils/UsersAutocomplete';\nimport { ColumnStackLayout, ResponsiveLineStackLayout } from '../UI/Layout';\nimport Checkbox from '../UI/Checkbox';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport { t } from '@lingui/macro';\nimport SemiControlledMultiAutoComplete from '../UI/SemiControlledMultiAutoComplete';\nimport {\n  allGameCategories,\n  getCategoryName,\n} from '../Utils/GDevelopServices/Game';\nimport AuthenticatedUserContext from '../Profile/AuthenticatedUserContext';\nimport { I18n } from '@lingui/react';\nimport { Column, Line, Spacer } from '../UI/Grid';\nimport BackgroundText from '../UI/BackgroundText';\nimport AlertMessage from '../UI/AlertMessage';\nimport { GameThumbnail } from './GameThumbnail';\n\nconst isCyrillic = (text: string) =>\n  /[БГДЖЗИЙЛПФЦЧШЩЫЭЮЯбвгджзийклмнптфцчшщыэюя]/.test(text);\nconst cyrillicToLatinMapping = require('./CyrillicToLatin.json');\n\nexport const cleanUpGameSlug = (gameSlug: string) => {\n  let latinGameSlug = gameSlug;\n  if (isCyrillic(gameSlug)) {\n    latinGameSlug = gameSlug\n      .split('')\n      .map(function(char) {\n        const latin = cyrillicToLatinMapping[char];\n        return latin === undefined ? char : latin;\n      })\n      .join('');\n  }\n  return latinGameSlug\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/[^a-zA-Z0-9]/g, '-')\n    .toLowerCase();\n};\n\ntype Props = {|\n  project: gdProject,\n  // Properties visible in the project properties and game dialogs.\n  setName: string => void,\n  name: string,\n  setDescription: string => void,\n  description: ?string,\n  setAuthorIds: (string[]) => void,\n  authorIds: string[],\n  setOrientation: string => void,\n  orientation: string,\n  // Properties only visible in the game dialog.\n  setCategories?: (string[]) => void,\n  categories?: string[],\n  setOwnerIds?: (string[]) => void,\n  ownerIds?: string[],\n  setPlayableWithKeyboard?: boolean => void,\n  playWithKeyboard?: boolean,\n  setPlayableWithGamepad?: boolean => void,\n  playWithGamepad?: boolean,\n  setPlayableWithMobile?: boolean => void,\n  playWithMobile?: boolean,\n  userSlug?: string,\n  setUserSlug?: string => void,\n  gameSlug?: string,\n  setGameSlug?: string => void,\n  setDiscoverable?: boolean => void,\n  discoverable?: boolean,\n  displayThumbnail?: boolean,\n  thumbnailUrl?: string,\n|};\n\nexport function PublicGameProperties({\n  project,\n  setName,\n  name,\n  categories,\n  setCategories,\n  setDescription,\n  description,\n  setAuthorIds,\n  authorIds,\n  setOwnerIds,\n  ownerIds,\n  setPlayableWithKeyboard,\n  playWithKeyboard,\n  setPlayableWithGamepad,\n  playWithGamepad,\n  setPlayableWithMobile,\n  playWithMobile,\n  setOrientation,\n  orientation,\n  userSlug,\n  setUserSlug,\n  gameSlug,\n  setGameSlug,\n  setDiscoverable,\n  discoverable,\n  displayThumbnail,\n  thumbnailUrl,\n}: Props) {\n  const [categoryInput, setCategoryInput] = React.useState('');\n  const { profile } = React.useContext(AuthenticatedUserContext);\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <ColumnStackLayout noMargin>\n          <ResponsiveLineStackLayout noMargin>\n            {displayThumbnail && (\n              <>\n                <Column noMargin>\n                  <GameThumbnail\n                    gameName={project.getName()}\n                    thumbnailUrl={thumbnailUrl}\n                  />\n                </Column>\n                <Spacer />\n              </>\n            )}\n            <ColumnStackLayout noMargin expand>\n              <SemiControlledTextField\n                floatingLabelText={<Trans>Game name</Trans>}\n                fullWidth\n                type=\"text\"\n                value={name}\n                onChange={setName}\n                autoFocus\n              />\n              {setCategories && (\n                <SemiControlledMultiAutoComplete\n                  hintText={t`Select a genre`}\n                  floatingLabelText={<Trans>Genres</Trans>}\n                  helperText={\n                    <Trans>\n                      Select up to 4 genres for the game to be visible on\n                      Liluo.io's categories pages!\n                    </Trans>\n                  }\n                  value={\n                    categories\n                      ? categories.map(category => ({\n                          value: category,\n                          text: getCategoryName(category, i18n),\n                        }))\n                      : []\n                  }\n                  onChange={(event, values) => {\n                    setCategories(\n                      values ? values.map(category => category.value) : []\n                    );\n                  }}\n                  inputValue={categoryInput}\n                  onInputChange={(event, value) => {\n                    setCategoryInput(value);\n                  }}\n                  dataSource={allGameCategories.map(category => ({\n                    value: category,\n                    text: getCategoryName(category, i18n),\n                  }))}\n                  fullWidth\n                  optionsLimit={4}\n                />\n              )}\n              {setDiscoverable && (\n                <Checkbox\n                  label={<Trans>Make your game discoverable on Liluo.io</Trans>}\n                  checked={!!discoverable}\n                  onCheck={(e, checked) => setDiscoverable(checked)}\n                />\n              )}\n            </ColumnStackLayout>\n          </ResponsiveLineStackLayout>\n          {displayThumbnail && (\n            <Line noMargin>\n              <BackgroundText>\n                <Trans>\n                  To update your thumbnail, go into your Game Settings > Icons\n                  and thumbnail, then create and publish a new build.\n                </Trans>\n              </BackgroundText>\n            </Line>\n          )}\n          <SemiControlledTextField\n            floatingLabelText={<Trans>Game description</Trans>}\n            fullWidth\n            type=\"text\"\n            value={description || ''}\n            onChange={setDescription}\n            autoFocus\n            multiline\n            rows={5}\n          />\n          {setUserSlug && setGameSlug && (\n            <>\n              <Line>\n                <SelectField\n                  fullWidth\n                  floatingLabelText={<Trans>User name in the game URL</Trans>}\n                  value={userSlug || ''}\n                  onChange={(e, i, value: string) => setUserSlug(value)}\n                  // It's disabled if one of the condition of SelectOption is false.\n                  disabled={\n                    !(\n                      profile &&\n                      profile.username &&\n                      userSlug &&\n                      (!profile || userSlug !== profile.username)\n                    )\n                  }\n                >\n                  {profile && profile.username && (\n                    <SelectOption\n                      value={profile.username}\n                      primaryText={profile.username}\n                    />\n                  )}\n                  {userSlug && (!profile || userSlug !== profile.username) && (\n                    <SelectOption value={userSlug} primaryText={userSlug} />\n                  )}\n                </SelectField>\n                <Spacer />\n                <SemiControlledTextField\n                  disabled={\n                    !(\n                      userSlug &&\n                      userSlug.length &&\n                      profile &&\n                      profile.username\n                    )\n                  }\n                  floatingLabelText={<Trans>Game name in the game URL</Trans>}\n                  fullWidth\n                  type=\"text\"\n                  value={\n                    userSlug && userSlug.length && profile && profile.username\n                      ? gameSlug || ''\n                      : ''\n                  }\n                  onChange={gameSlug => setGameSlug(cleanUpGameSlug(gameSlug))}\n                  autoFocus\n                />\n              </Line>\n              {!(\n                userSlug &&\n                userSlug.length &&\n                profile &&\n                profile.username\n              ) && (\n                <AlertMessage kind=\"info\">\n                  <Trans>\n                    Usernames are required to choose a custom game URL.\n                  </Trans>\n                </AlertMessage>\n              )}\n            </>\n          )}\n          <UsersAutocomplete\n            userIds={authorIds}\n            onChange={setAuthorIds}\n            floatingLabelText={<Trans>Authors</Trans>}\n            helperText={\n              <Trans>\n                Select the usernames of the authors of this project. They will\n                be displayed in the selected order, if you publish this game as\n                an example or in the community.\n              </Trans>\n            }\n          />\n          {setOwnerIds && (\n            <UsersAutocomplete\n              userIds={ownerIds || []}\n              onChange={setOwnerIds}\n              floatingLabelText={<Trans>Owners</Trans>}\n              helperText={\n                <Trans>\n                  Select the usernames of the owners of this project to let them\n                  manage this game builds. Be aware that owners can revoke your\n                  ownership.\n                </Trans>\n              }\n            />\n          )}\n          <SelectField\n            fullWidth\n            floatingLabelText={<Trans>Device orientation (for mobile)</Trans>}\n            value={orientation}\n            onChange={(e, i, value: string) => setOrientation(value)}\n          >\n            <SelectOption value=\"default\" primaryText={t`Platform default`} />\n            <SelectOption value=\"landscape\" primaryText={t`Landscape`} />\n            <SelectOption value=\"portrait\" primaryText={t`Portrait`} />\n          </SelectField>\n          {setPlayableWithKeyboard &&\n            setPlayableWithGamepad &&\n            setPlayableWithMobile && (\n              <React.Fragment>\n                <Checkbox\n                  label={<Trans>Playable with a keyboard</Trans>}\n                  checked={!!playWithKeyboard}\n                  onCheck={(e, checked) => setPlayableWithKeyboard(checked)}\n                />\n                <Checkbox\n                  label={<Trans>Playable with a gamepad</Trans>}\n                  checked={!!playWithGamepad}\n                  onCheck={(e, checked) => setPlayableWithGamepad(checked)}\n                />\n                <Checkbox\n                  label={<Trans>Playable on mobile</Trans>}\n                  checked={!!playWithMobile}\n                  onCheck={(e, checked) => setPlayableWithMobile(checked)}\n                />\n              </React.Fragment>\n            )}\n        </ColumnStackLayout>\n      )}\n    </I18n>\n  );\n}\n\nexport default PublicGameProperties;\n","// @flow\nimport * as React from 'react';\n\n/**\n * Returns a React \"ref\" telling if the component is \"mounted\" or not. While this is\n * usually an anti pattern to rely on this, it can be useful when having to \"cancel\"\n * promises/network dependent effects.\n */\nexport const useIsMounted = (): {| current: boolean |} => {\n  const isMounted = React.useRef<boolean>(false);\n  React.useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  return isMounted;\n};\n","// @flow\nimport axios from 'axios';\nimport { GDevelopUserApi } from './ApiConfigs';\n\nimport { type Badge } from './Badge';\n\nexport type UserPublicProfile = {|\n  id: string,\n  username: ?string,\n  description: ?string,\n|};\n\nexport type UserPublicProfileSearch = {|\n  id: string,\n  username: ?string,\n|};\n\nexport type UserPublicProfileByIds = {|\n  [key: string]: UserPublicProfile,\n|};\n\nexport const searchUserPublicProfilesByUsername = (\n  searchString: string\n): Promise<Array<UserPublicProfileSearch>> => {\n  return axios\n    .get(`${GDevelopUserApi.baseUrl}/user-public-profile/search`, {\n      params: {\n        username: searchString,\n      },\n    })\n    .then(response => response.data);\n};\n\nexport const getUserBadges = (id: string): Promise<Array<Badge>> => {\n  return axios\n    .get(`${GDevelopUserApi.baseUrl}/user/${id}/badge`)\n    .then(response => response.data);\n};\n\nexport const getUserPublicProfilesByIds = (\n  ids: Array<string>\n): Promise<UserPublicProfileByIds> => {\n  return axios\n    .get(`${GDevelopUserApi.baseUrl}/user-public-profile`, {\n      params: {\n        id: ids.join(','),\n      },\n    })\n    .then(response => response.data);\n};\n\nexport const getUserPublicProfile = (\n  id: string\n): Promise<UserPublicProfile> => {\n  return axios\n    .get(`${GDevelopUserApi.baseUrl}/user-public-profile/${id}`)\n    .then(response => response.data);\n};\n","// @flow\nimport * as React from 'react';\n\nfunction getOnlineStatus() {\n  return typeof navigator !== 'undefined' &&\n    typeof navigator.onLine === 'boolean'\n    ? navigator.onLine\n    : true;\n}\n\n/**\n * React Hook listening to the navigator online status.\n */\nexport const useOnlineStatus = () => {\n  const [onlineStatus, setOnlineStatus] = React.useState(getOnlineStatus());\n\n  const goOnline = () => setOnlineStatus(true);\n\n  const goOffline = () => setOnlineStatus(false);\n\n  React.useEffect(() => {\n    window.addEventListener('online', goOnline);\n    window.addEventListener('offline', goOffline);\n\n    return () => {\n      window.removeEventListener('online', goOnline);\n      window.removeEventListener('offline', goOffline);\n    };\n  }, []);\n\n  return onlineStatus;\n};\n","// @flow\nimport axios from 'axios';\nimport { GDevelopPlayApi } from './ApiConfigs';\n\nimport { type AuthenticatedUser } from '../../Profile/AuthenticatedUserContext';\n\nexport type LeaderboardSortOption = 'ASC' | 'DESC';\nexport type LeaderboardVisibilityOption = 'HIDDEN' | 'PUBLIC';\nexport type LeaderboardPlayerUnicityDisplayOption =\n  | 'FREE'\n  | 'PREFER_UNIQUE'\n  | 'PREFER_NON_UNIQUE';\n\nexport type LeaderboardScoreFormattingCustom = {|\n  type: 'custom',\n  prefix: string,\n  suffix: string,\n  precision: number,\n|};\n\nexport type LeaderboardScoreFormattingTimeUnit =\n  | 'hour'\n  | 'minute'\n  | 'second'\n  | 'millisecond';\n\nexport type LeaderboardScoreFormattingTime = {|\n  type: 'time',\n  smallestUnit: LeaderboardScoreFormattingTimeUnit,\n  biggestUnit: LeaderboardScoreFormattingTimeUnit,\n|};\n\nexport type LeaderboardScoreFormatting =\n  | LeaderboardScoreFormattingCustom\n  | LeaderboardScoreFormattingTime;\n\nexport type LeaderboardCustomizationSettings = {|\n  scoreTitle: string,\n  scoreFormatting: LeaderboardScoreFormatting,\n|};\n\nexport type Leaderboard = {|\n  id: string,\n  gameId: string,\n  name: string,\n  sort: LeaderboardSortOption,\n  startDatetime: string,\n  deletedAt?: string,\n  playerUnicityDisplayChoice: LeaderboardPlayerUnicityDisplayOption,\n  visibility: LeaderboardVisibilityOption,\n  customizationSettings?: LeaderboardCustomizationSettings,\n|};\n\nexport type LeaderboardUpdatePayload = {|\n  name?: string,\n  sort?: LeaderboardSortOption,\n  playerUnicityDisplayChoice?: LeaderboardPlayerUnicityDisplayOption,\n  visibility?: LeaderboardVisibilityOption,\n  customizationSettings?: LeaderboardCustomizationSettings,\n|};\n\nexport type LeaderboardEntry = {|\n  id: string,\n  leaderboardId: string,\n  playerId?: string,\n  playerName: string,\n  createdAt: string,\n  score: number,\n  deletedAt?: string,\n  outdatedAt?: string,\n|};\n\nexport type LeaderboardDisplayData = {|\n  +id: string,\n  +playerName: string,\n  +createdAt: string,\n  +score: number,\n|};\n\nexport type LeaderboardExtremePlayerScore = {|\n  leaderboardId: string,\n  playerId?: string,\n  playerName: string,\n  relatedEntryCreatedAt: string,\n  score: number,\n  relatedEntryId: string,\n|};\n\nexport const extractEntryDisplayData = ({\n  playerName,\n  id,\n  score,\n  createdAt,\n}: LeaderboardEntry): LeaderboardDisplayData => ({\n  id,\n  createdAt,\n  playerName,\n  score,\n});\n\nexport const extractExtremeScoreDisplayData = ({\n  playerName,\n  relatedEntryId,\n  score,\n  relatedEntryCreatedAt,\n}: LeaderboardExtremePlayerScore): LeaderboardDisplayData => ({\n  id: relatedEntryId,\n  createdAt: relatedEntryCreatedAt,\n  playerName,\n  score,\n});\n\nexport const breakUuid = (uuid: string): string => `${uuid.split('-')[0]}-...`;\n\nexport const listGameLeaderboards = async (\n  authenticatedUser: AuthenticatedUser,\n  gameId: string\n): Promise<?Array<Leaderboard>> => {\n  const { getAuthorizationHeader, firebaseUser } = authenticatedUser;\n  if (!firebaseUser) return;\n\n  const { uid: userId } = firebaseUser;\n  const authorizationHeader = await getAuthorizationHeader();\n  return axios\n    .get(`${GDevelopPlayApi.baseUrl}/game/${gameId}/leaderboard`, {\n      headers: { Authorization: authorizationHeader },\n      params: { userId },\n    })\n    .then(response =>\n      response.data.filter(leaderboard => !leaderboard.deletedAt)\n    );\n};\n\nexport const extractNextPageUriFromLinkHeader = (\n  linkHeader: string\n): ?string => {\n  const links = linkHeader.split(',').map(link => link.trim());\n  const mapRelationToUri = links.reduce((acc, link) => {\n    const relationRegexMatch = link.match(/;\\srel=\"(\\w*)\"/);\n    const uriMatch = link.match(/^<(.*)>/);\n    if (acc && relationRegexMatch && uriMatch) {\n      acc[relationRegexMatch[1]] = uriMatch[1];\n    }\n    return acc;\n  }, {});\n  if (Object.keys(mapRelationToUri).includes('next')) {\n    return mapRelationToUri.next;\n  }\n  return null;\n};\n\nexport const listLeaderboardEntries = async (\n  gameId: string,\n  leaderboardId: string,\n  options: {| pageSize: number, onlyBestEntry: boolean, forceUri: ?string |}\n): Promise<{|\n  entries: LeaderboardEntry[] | LeaderboardExtremePlayerScore[],\n  nextPageUri: ?string,\n|}> => {\n  const uri =\n    options.forceUri || `/game/${gameId}/leaderboard/${leaderboardId}/entry`;\n  // $FlowFixMe\n  const response = await axios.get(`${GDevelopPlayApi.baseUrl}${uri}`, {\n    params: options.forceUri\n      ? null\n      : {\n          onlyBestEntry: options.onlyBestEntry,\n          perPage: options.pageSize,\n        },\n  });\n  const nextPageUri = response.headers.link\n    ? extractNextPageUriFromLinkHeader(response.headers.link)\n    : null;\n  return {\n    entries: response.data,\n    nextPageUri,\n  };\n};\n\nexport const createLeaderboard = async (\n  authenticatedUser: AuthenticatedUser,\n  gameId: string,\n  { name, sort }: {| name: string, sort: LeaderboardSortOption |}\n): Promise<?Leaderboard> => {\n  const { getAuthorizationHeader, firebaseUser } = authenticatedUser;\n  if (!firebaseUser) return;\n\n  const { uid: userId } = firebaseUser;\n  const authorizationHeader = await getAuthorizationHeader();\n  const response = await axios.post(\n    `${GDevelopPlayApi.baseUrl}/game/${gameId}/leaderboard`,\n    {\n      name,\n      sort,\n    },\n    {\n      headers: { Authorization: authorizationHeader },\n      params: { userId },\n    }\n  );\n  return response.data;\n};\n\nexport const updateLeaderboard = async (\n  authenticatedUser: AuthenticatedUser,\n  gameId: string,\n  leaderboardId: string,\n  payload: LeaderboardUpdatePayload\n): Promise<?Leaderboard> => {\n  const { getAuthorizationHeader, firebaseUser } = authenticatedUser;\n  if (!firebaseUser) return;\n\n  const { uid: userId } = firebaseUser;\n  const authorizationHeader = await getAuthorizationHeader();\n  const response = await axios.patch(\n    `${GDevelopPlayApi.baseUrl}/game/${gameId}/leaderboard/${leaderboardId}`,\n    payload,\n    {\n      headers: { Authorization: authorizationHeader },\n      params: { userId },\n    }\n  );\n  return response.data;\n};\n\nexport const resetLeaderboard = async (\n  authenticatedUser: AuthenticatedUser,\n  gameId: string,\n  leaderboardId: string\n): Promise<?Leaderboard> => {\n  const { getAuthorizationHeader, firebaseUser } = authenticatedUser;\n  if (!firebaseUser) return;\n\n  const { uid: userId } = firebaseUser;\n  const authorizationHeader = await getAuthorizationHeader();\n  const response = await axios.put(\n    `${\n      GDevelopPlayApi.baseUrl\n    }/game/${gameId}/leaderboard/${leaderboardId}/reset`,\n    {},\n    {\n      headers: { Authorization: authorizationHeader },\n      params: { userId },\n    }\n  );\n  return response.data;\n};\n\nexport const deleteLeaderboard = async (\n  authenticatedUser: AuthenticatedUser,\n  gameId: string,\n  leaderboardId: string\n): Promise<?Leaderboard> => {\n  const { getAuthorizationHeader, firebaseUser } = authenticatedUser;\n  if (!firebaseUser) return;\n\n  const { uid: userId } = firebaseUser;\n  const authorizationHeader = await getAuthorizationHeader();\n  const response = await axios.delete(\n    `${GDevelopPlayApi.baseUrl}/game/${gameId}/leaderboard/${leaderboardId}`,\n    {\n      headers: { Authorization: authorizationHeader },\n      params: { userId },\n    }\n  );\n  return response.data;\n};\n\nexport const deleteLeaderboardEntry = async (\n  authenticatedUser: AuthenticatedUser,\n  gameId: string,\n  leaderboardId: string,\n  entryId: string\n): Promise<?Leaderboard> => {\n  const { getAuthorizationHeader, firebaseUser } = authenticatedUser;\n  if (!firebaseUser) return;\n\n  const { uid: userId } = firebaseUser;\n  const authorizationHeader = await getAuthorizationHeader();\n  const response = await axios.delete(\n    `${\n      GDevelopPlayApi.baseUrl\n    }/game/${gameId}/leaderboard/${leaderboardId}/entry/${entryId}`,\n    {\n      headers: { Authorization: authorizationHeader },\n      params: { userId },\n    }\n  );\n  return response.data;\n};\n","// @flow\n\nimport * as React from 'react';\nimport RaisedButton from '../UI/RaisedButton';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport Star from '@material-ui/icons/Star';\nimport Favorite from '@material-ui/icons/Favorite';\nimport AuthenticatedUserContext, {\n  type AuthenticatedUser,\n} from './AuthenticatedUserContext';\nimport { Column, Line, Spacer } from '../UI/Grid';\nimport {\n  sendSubscriptionCheckDialogShown,\n  sendSubscriptionCheckDismiss,\n} from '../Utils/Analytics/EventSender';\nimport { Trans } from '@lingui/macro';\nimport Text from '../UI/Text';\n\ntype Props = {|\n  title: React.Node,\n  id: string,\n  onChangeSubscription?: () => void,\n  mode: 'try' | 'mandatory',\n|};\n\ntype DialogProps = {|\n  authenticatedUser: AuthenticatedUser,\n  ...$Exact<Props>,\n|};\n\ntype DialogState = {|\n  open: boolean,\n|};\n\nconst styles = {\n  icon: { width: 40, height: 40, marginRight: 20 },\n  iconText: { flex: 1 },\n};\n\nexport class SubscriptionCheckDialog extends React.Component<\n  DialogProps,\n  DialogState\n> {\n  state = { open: false };\n\n  checkHasSubscription() {\n    const { authenticatedUser, mode, id } = this.props;\n    if (authenticatedUser.subscription) {\n      const hasPlan = !!authenticatedUser.subscription.planId;\n      if (hasPlan) {\n        this.setState({\n          open: false,\n        });\n        return true;\n      }\n    }\n\n    this.setState({\n      open: true,\n    });\n    sendSubscriptionCheckDialogShown({ mode, id });\n\n    return false;\n  }\n\n  _closeDialog = () => {\n    sendSubscriptionCheckDismiss();\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { open } = this.state;\n    const { onChangeSubscription, mode } = this.props;\n    if (!open) return null;\n\n    return (\n      <Dialog\n        actions={[\n          onChangeSubscription && (\n            <RaisedButton\n              label={<Trans>Get a subscription or login</Trans>}\n              key=\"subscribe\"\n              primary\n              onClick={() => {\n                this.setState({ open: false });\n                onChangeSubscription();\n              }}\n            />\n          ),\n        ]}\n        secondaryActions={[\n          <FlatButton\n            label={\n              mode === 'try' ? (\n                <Trans>Continue anyway</Trans>\n              ) : (\n                <Trans>Not now, thanks!</Trans>\n              )\n            }\n            key=\"close\"\n            primary={false}\n            onClick={this._closeDialog}\n          />,\n        ]}\n        cannotBeDismissed={false}\n        onRequestClose={this._closeDialog}\n        open={open}\n        title={\n          mode === 'try' ? (\n            <Trans>We need your support!</Trans>\n          ) : (\n            this.props.title\n          )\n        }\n      >\n        <Column noMargin>\n          <Line noMargin alignItems=\"center\">\n            {mode === 'try' ? (\n              <Text>\n                <Trans>\n                  Please get a subscription to keep GDevelop running.\n                </Trans>\n              </Text>\n            ) : (\n              <Text>\n                <Trans>\n                  To use this feature, we ask you to get a subscription to\n                  GDevelop.\n                </Trans>\n              </Text>\n            )}\n          </Line>\n          <Line noMargin alignItems=\"center\">\n            <Star style={styles.icon} />\n            <Text style={styles.iconText}>\n              <Trans>\n                Get a subscription to gain more one-click exports, remove the\n                GDevelop splashscreen, this message asking you to get a\n                subscription.\n              </Trans>\n            </Text>\n          </Line>\n          <Line noMargin alignItems=\"center\">\n            <Favorite style={styles.icon} />\n            <Text style={styles.iconText}>\n              <Trans>\n                You're also supporting the development of GDevelop, an\n                open-source software! In the future, more online services will\n                be available for users with a subscription.\n              </Trans>\n            </Text>\n          </Line>\n          <Spacer />\n          <Spacer />\n          <Spacer />\n          <Spacer />\n          <Text align=\"right\">\n            <b>\n              <Trans>Thanks!</Trans>\n            </b>\n          </Text>\n        </Column>\n      </Dialog>\n    );\n  }\n}\n\nclass SubscriptionChecker extends React.Component<Props, {}> {\n  _dialog: ?SubscriptionCheckDialog = null;\n\n  checkHasSubscription() {\n    if (this._dialog) {\n      return this._dialog.checkHasSubscription();\n    }\n\n    return false;\n  }\n\n  render() {\n    return (\n      <AuthenticatedUserContext.Consumer>\n        {(authenticatedUser: AuthenticatedUser) => (\n          <SubscriptionCheckDialog\n            authenticatedUser={authenticatedUser}\n            ref={dialog => (this._dialog = dialog)}\n            onChangeSubscription={this.props.onChangeSubscription}\n            id={this.props.id}\n            title={this.props.title}\n            mode={this.props.mode}\n          />\n        )}\n      </AuthenticatedUserContext.Consumer>\n    );\n  }\n}\n\nexport default SubscriptionChecker;\n","// @flow\nimport * as React from 'react';\nimport { type FiltersState, useFilters } from '../../UI/Search/FiltersChooser';\nimport {\n  getExtensionsRegistry,\n  type ExtensionsRegistry,\n  type ExtensionShortHeader,\n} from '../../Utils/GDevelopServices/Extension';\nimport { type Filters } from '../../Utils/GDevelopServices/Filters';\nimport {\n  useSearchItem,\n  type SearchMatch,\n} from '../../UI/Search/UseSearchStructuredItem';\n\nconst defaultSearchText = '';\n\ntype ExtensionStoreState = {|\n  filters: ?Filters,\n  searchResults: ?Array<{|\n    item: ExtensionShortHeader,\n    matches: SearchMatch[],\n  |}>,\n  fetchExtensionsAndFilters: () => void,\n  error: ?Error,\n  searchText: string,\n  setSearchText: string => void,\n  extensionShortHeadersByName: { [name: string]: ExtensionShortHeader },\n  filtersState: FiltersState,\n|};\n\nexport const ExtensionStoreContext = React.createContext<ExtensionStoreState>({\n  filters: null,\n  searchResults: null,\n  fetchExtensionsAndFilters: () => {},\n  error: null,\n  searchText: '',\n  setSearchText: () => {},\n  extensionShortHeadersByName: {},\n  filtersState: {\n    chosenFilters: new Set(),\n    addFilter: () => {},\n    removeFilter: () => {},\n    chosenCategory: null,\n    setChosenCategory: () => {},\n  },\n});\n\ntype ExtensionStoreStateProviderProps = {|\n  children: React.Node,\n|};\n\nexport const ExtensionStoreStateProvider = ({\n  children,\n}: ExtensionStoreStateProviderProps) => {\n  const [\n    extensionShortHeadersByName,\n    setExtensionShortHeadersByName,\n  ] = React.useState<{\n    [string]: ExtensionShortHeader,\n  }>({});\n  const [filters, setFilters] = React.useState<?Filters>(null);\n  const [error, setError] = React.useState<?Error>(null);\n  const isLoading = React.useRef<boolean>(false);\n\n  const [searchText, setSearchText] = React.useState(defaultSearchText);\n  const filtersState = useFilters();\n\n  const fetchExtensionsAndFilters = React.useCallback(\n    () => {\n      // Don't attempt to load again resources and filters if they\n      // were loaded already.\n      if (Object.keys(extensionShortHeadersByName).length || isLoading.current)\n        return;\n\n      (async () => {\n        setError(null);\n        isLoading.current = true;\n\n        try {\n          const extensionRegistry: ExtensionsRegistry = await getExtensionsRegistry();\n          const { extensionShortHeaders, allTags } = extensionRegistry;\n\n          const sortedTags = allTags\n            .slice()\n            .sort((tag1, tag2) =>\n              tag1.toLowerCase().localeCompare(tag2.toLowerCase())\n            );\n\n          const extensionShortHeadersByName = {};\n          extensionShortHeaders.forEach(extension => {\n            extensionShortHeadersByName[extension.name] = extension;\n          });\n\n          console.info(\n            `Loaded ${\n              extensionShortHeaders.length\n            } extensions from the extension store.`\n          );\n          setExtensionShortHeadersByName(extensionShortHeadersByName);\n          setFilters({\n            allTags: sortedTags,\n            defaultTags: sortedTags,\n            tagsTree: [],\n          });\n        } catch (error) {\n          console.error(\n            `Unable to load the extensions from the extension store:`,\n            error\n          );\n          setError(error);\n        }\n\n        isLoading.current = false;\n      })();\n    },\n    [extensionShortHeadersByName, isLoading]\n  );\n\n  React.useEffect(\n    () => {\n      // Don't attempt to load again extensions and filters if they\n      // were loaded already.\n      if (Object.keys(extensionShortHeadersByName).length || isLoading.current)\n        return;\n\n      const timeoutId = setTimeout(() => {\n        console.info('Pre-fetching extensions from extension store...');\n        fetchExtensionsAndFilters();\n      }, 5000);\n      return () => clearTimeout(timeoutId);\n    },\n    [fetchExtensionsAndFilters, extensionShortHeadersByName, isLoading]\n  );\n\n  const { chosenCategory, chosenFilters } = filtersState;\n  const searchResults: ?Array<{|\n    item: ExtensionShortHeader,\n    matches: SearchMatch[],\n  |}> = useSearchItem(\n    extensionShortHeadersByName,\n    searchText,\n    chosenCategory,\n    chosenFilters\n  );\n\n  const extensionStoreState = React.useMemo(\n    () => ({\n      searchResults,\n      fetchExtensionsAndFilters,\n      filters,\n      error,\n      searchText,\n      setSearchText,\n      extensionShortHeadersByName,\n      filtersState,\n    }),\n    [\n      searchResults,\n      error,\n      filters,\n      searchText,\n      extensionShortHeadersByName,\n      filtersState,\n      fetchExtensionsAndFilters,\n    ]\n  );\n\n  return (\n    <ExtensionStoreContext.Provider value={extensionStoreState}>\n      {children}\n    </ExtensionStoreContext.Provider>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport ReactErrorBoundary from 'react-error-boundary';\nimport BugReport from '@material-ui/icons/BugReport';\nimport PlaceholderMessage from './PlaceholderMessage';\nimport Divider from '@material-ui/core/Divider';\nimport RaisedButton from './RaisedButton';\nimport { sendErrorMessage } from '../Utils/Analytics/EventSender';\nimport Window from '../Utils/Window';\nimport Text from './Text';\nimport { Line, Spacer } from './Grid';\nimport { getIDEVersionWithHash } from '../Version';\nimport {\n  getArch,\n  getPlatformName,\n  getSystemVersion,\n  getUserAgent,\n} from '../Utils/Platform';\n\nconst errorHandler = (error: Error, componentStack: string) => {\n  console.error('Error catched by Boundary:', error, componentStack);\n  sendErrorMessage(\n    'Error catched by error boundary',\n    'error-boundary',\n    {\n      error,\n      componentStack,\n    },\n    'error-boundary-error'\n  );\n};\n\nexport const ErrorFallbackComponent = ({\n  componentStack,\n  error,\n}: {\n  componentStack: string,\n  error: Error,\n}) => (\n  <PlaceholderMessage>\n    <Line>\n      <BugReport fontSize=\"large\" />\n      <Spacer />\n      <Text size=\"title\">This editor encountered a problem.</Text>\n    </Line>\n    <Divider />\n    <Text>\n      Something wrong happened :(\n      <br />\n      Please <b>backup your game file</b> and save your game to ensure that you\n      don't lose anything.\n    </Text>\n    <Text>\n      The error was automatically reported.\n      <br />\n      To make sure it's fixed, you may report it on GitHub, the platform where\n      GDevelop is developed:\n    </Text>\n    <RaisedButton\n      label={<Trans>Report the issue on GitHub</Trans>}\n      onClick={() => {\n        const body = `\n=> Please write here a short description of when the error occured and how to reproduce it.\nYou also may have to create an account on GitHub before posting.\n\nWhen you're ready, click on \"Submit new issue\". Don't change the rest of the message. Thanks!\n\n## Error stack (don't write anything here)\n\\`\\`\\`\n${error ? error.stack : 'No error found'}\n\\`\\`\\`\n\n## Component stack (don't write anything here)\n\\`\\`\\`\n${componentStack || 'No component stack found'}\n\\`\\`\\`\n\n## Other details\n* IDE version: ${getIDEVersionWithHash()}\n* Arch: ${getArch()},\n* Platform Name: ${getPlatformName()},\n* System Version: ${getSystemVersion()},\n* User Agent: ${getUserAgent()},\n        `;\n        Window.openExternalURL(\n          `https://github.com/4ian/GDevelop/issues/new?body=${encodeURIComponent(\n            body\n          )}&title=Crash%20while%20using%20an%20editor`\n        );\n      }}\n    />\n  </PlaceholderMessage>\n);\n\ntype Props = {|\n  children: React.Node,\n|};\n\nconst ErrorBoundary = (props: Props) => (\n  <ReactErrorBoundary\n    FallbackComponent={ErrorFallbackComponent}\n    onError={errorHandler}\n  >\n    {props.children}\n  </ReactErrorBoundary>\n);\n\nexport default ErrorBoundary;\n","// @flow\nimport { type I18n as I18nType } from '@lingui/core';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport {\n  getExtension,\n  type ExtensionShortHeader,\n} from '../../Utils/GDevelopServices/Extension';\nimport { addSerializedExtensionsToProject } from '../InstallAsset';\nimport { type EventsFunctionsExtensionsState } from '../../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport { t } from '@lingui/macro';\nimport Window from '../../Utils/Window';\n\n/**\n * Download and add the extension in the project.\n */\nexport const installExtension = async (\n  i18n: I18nType,\n  project: gdProject,\n  eventsFunctionsExtensionsState: EventsFunctionsExtensionsState,\n  extensionShortHeader: ExtensionShortHeader\n): Promise<boolean> => {\n  try {\n    const serializedExtension = await getExtension(extensionShortHeader);\n    await addSerializedExtensionsToProject(\n      eventsFunctionsExtensionsState,\n      project,\n      [serializedExtension]\n    );\n\n    return true;\n  } catch (rawError) {\n    showErrorBox({\n      message: i18n._(\n        t`Unable to download and install the extension. Verify that your internet connection is working or try again later.`\n      ),\n      rawError,\n      errorId: 'download-extension-error',\n    });\n    return false;\n  }\n};\n\n/**\n * Open a dialog to choose an extension and install it in the project.\n */\nexport const importExtension = async (\n  i18n: I18nType,\n  eventsFunctionsExtensionsState: EventsFunctionsExtensionsState,\n  project: gdProject\n): Promise<boolean> => {\n  const eventsFunctionsExtensionOpener = eventsFunctionsExtensionsState.getEventsFunctionsExtensionOpener();\n  if (!eventsFunctionsExtensionOpener) return false;\n\n  try {\n    const pathOrUrl = await eventsFunctionsExtensionOpener.chooseEventsFunctionExtensionFile();\n    if (!pathOrUrl) return false;\n\n    const serializedExtension = await eventsFunctionsExtensionOpener.readEventsFunctionExtensionFile(\n      pathOrUrl\n    );\n\n    if (project.hasEventsFunctionsExtensionNamed(serializedExtension.name)) {\n      const answer = Window.showConfirmDialog(\n        i18n._(\n          t`An extension with this name already exists in the project. Importing this extension will replace it: are you sure you want to continue?`\n        )\n      );\n      if (!answer) return false;\n    }\n\n    await addSerializedExtensionsToProject(\n      eventsFunctionsExtensionsState,\n      project,\n      [serializedExtension],\n      false\n    );\n    return true;\n  } catch (rawError) {\n    showErrorBox({\n      message: i18n._(\n        t`An error happened while loading this extension. Please check that it is a proper extension file and compatible with this version of GDevelop`\n      ),\n      rawError,\n      errorId: 'extension-loading-error',\n    });\n    return false;\n  }\n};\n","//@flow\nimport optionalRequire from './OptionalRequire';\n\n/**\n * Return a function that will load, only when called, the specified module name.\n *\n * As `optionalRequire`, this allows to require a Node.js/npm module without having it bundled by webpack.\n * This means that this module will only be available when running on Electron or Node.js.\n * When running without Electron or Node.js, `null` will be returned.\n */\nexport default function optionalLazyRequire(moduleName: string) {\n  let moduleLoaded = false;\n  let module = undefined;\n  return (): ?any => {\n    if (moduleLoaded) {\n      return module;\n    }\n\n    console.info(`Lazy loading ${moduleName}...`);\n    module = optionalRequire(moduleName);\n    moduleLoaded = true;\n    return module;\n  };\n}\n","// @flow\nimport * as React from 'react';\nimport MUIAccordion from '@material-ui/core/Accordion';\nimport MUIAccordionSummary from '@material-ui/core/AccordionSummary';\nimport MUIAccordionDetails from '@material-ui/core/AccordionDetails';\nimport MUIAccordionActions from '@material-ui/core/AccordionActions';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport IconButton from './IconButton';\nimport GDevelopThemeContext from './Theme/ThemeContext';\n\nconst styles = {\n  bodyRoot: {\n    // Remove body padding\n    padding: 0,\n  },\n};\n\ntype AccordionHeadProps = {|\n  children: React.Node,\n  actions?: Array<React.Node>,\n  expandIcon?: React.Node,\n|};\n\n/**\n * The header of an accordion section.\n * Based on Material-UI AccordionSummary.\n */\nexport const AccordionHeader = (props: AccordionHeadProps) => {\n  return (\n    <MUIAccordionSummary\n      expandIcon={\n        props.expandIcon || (\n          <IconButton size=\"small\">\n            <ExpandMoreIcon />\n          </IconButton>\n        )\n      }\n    >\n      <div style={{ flexGrow: 1, display: 'flex', alignItems: 'center' }}>\n        {props.children}\n      </div>\n      {props.actions && (\n        <div style={{ flexGrow: 0, flexShrink: 0, alignSelf: 'center' }}>\n          {props.actions}\n        </div>\n      )}\n    </MUIAccordionSummary>\n  );\n};\n\ntype AccordionBodyProps = {|\n  children: React.Node,\n  style?: Object,\n\n  // Removes all padding in body container\n  disableGutters?: boolean,\n|};\n\n/**\n * The collapsible contents of an accordion section.\n * Based on Material-UI AccordionDetails.\n */\nexport const AccordionBody = (props: AccordionBodyProps) => {\n  return (\n    <MUIAccordionDetails\n      style={{ ...(props.disableGutters && styles.bodyRoot), ...props.style }}\n    >\n      {props.children}\n    </MUIAccordionDetails>\n  );\n};\n\ntype AccordionActionsProps = {|\n  actions: Array<React.Node>,\n  secondaryActions?: Array<React.Node>,\n|};\n\n/**\n * The footer of an accordion section, used to provide\n * actions specific to the accordion contents.\n * Based on Material-UI AccordionActions.\n */\nexport const AccordionActions = (props: AccordionActionsProps) => {\n  const accordionActions = props.secondaryActions ? (\n    <React.Fragment>\n      <div key=\"secondary-actions\">{props.secondaryActions}</div>\n      <div key=\"actions\">{props.actions}</div>\n    </React.Fragment>\n  ) : (\n    props.actions\n  );\n\n  return <MUIAccordionActions>{accordionActions}</MUIAccordionActions>;\n};\n\ntype AccordionProps = {|\n  // AccordionSummary, AccordionBody and/or AccordionDetails\n  children: React.Node,\n\n  defaultExpanded?: boolean,\n  disabled?: boolean,\n\n  // If `true`, renders body only if accordion is open\n  costlyBody?: boolean,\n\n  // Use accordion in controlled mode\n  expanded?: boolean,\n  onChange?: (open: boolean) => void,\n|};\n\n/**\n * A block of collapsible content, with an always-shown header\n * and accordion-specific actions.\n * Based on Material-UI Accordion.\n */\nexport const Accordion = (props: AccordionProps) => {\n  const { costlyBody, ...otherProps } = props;\n  const theme = React.useContext(GDevelopThemeContext);\n\n  return (\n    <MUIAccordion\n      {...otherProps}\n      square\n      elevation={0}\n      style={{ border: `1px solid ${theme.toolbar.separatorColor}` }}\n      TransitionProps={{ unmountOnExit: !!costlyBody }}\n    />\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport {\n  DragSource,\n  type DragSourceMonitor,\n  type DragSourceConnector,\n  type ConnectDragSource,\n  DropTarget,\n  type DropTargetMonitor,\n  type DropTargetConnector,\n  type ConnectDropTarget,\n} from 'react-dnd';\n\ntype Props<DraggedItemType> = {|\n  children: ({\n    connectDragSource: ConnectDragSource,\n    connectDropTarget: ConnectDropTarget,\n    isOver: boolean,\n    canDrop: boolean,\n  }) => ?React.Node,\n  beginDrag: () => DraggedItemType,\n  canDrag?: (item: DraggedItemType) => boolean,\n  canDrop: (item: DraggedItemType) => boolean,\n  drop: () => void,\n|};\n\ntype DragSourceProps = {|\n  connectDragSource: ConnectDragSource,\n|};\n\ntype DropTargetProps = {|\n  connectDropTarget: ConnectDropTarget,\n  isOver: boolean,\n  canDrop: boolean,\n|};\n\ntype InnerDragSourceAndDropTargetProps<DraggedItemType> = {|\n  ...Props<DraggedItemType>,\n  ...DragSourceProps,\n  ...DropTargetProps,\n|};\n\nexport const makeDragSourceAndDropTarget = <DraggedItemType>(\n  reactDndType: string\n): ((Props<DraggedItemType>) => React.Node) => {\n  const sourceSpec = {\n    canDrag(props: Props<DraggedItemType>, monitor: DragSourceMonitor) {\n      const item = monitor.getItem();\n      const canDrag = props.canDrag || null;\n      if (canDrag) return canDrag(item);\n      return true;\n    },\n    beginDrag(props: InnerDragSourceAndDropTargetProps<DraggedItemType>) {\n      return props.beginDrag();\n    },\n  };\n\n  function sourceCollect(\n    connect: DragSourceConnector,\n    monitor: DragSourceMonitor\n  ): DragSourceProps {\n    return {\n      connectDragSource: connect.dragSource(),\n    };\n  }\n\n  const targetSpec = {\n    canDrop(props: Props<DraggedItemType>, monitor: DropTargetMonitor) {\n      const item = monitor.getItem();\n      return item && props.canDrop(item);\n    },\n    drop(props: Props<DraggedItemType>, monitor: DropTargetMonitor) {\n      if (monitor.didDrop()) {\n        return; // Drop already handled by another target\n      }\n      props.drop();\n    },\n  };\n\n  function targetCollect(\n    connect: DropTargetConnector,\n    monitor: DropTargetMonitor\n  ): DropTargetProps {\n    return {\n      connectDropTarget: connect.dropTarget(),\n      isOver: monitor.isOver({ shallow: true }),\n      canDrop: monitor.canDrop(),\n    };\n  }\n\n  const InnerDragSourceAndDropTarget = DragSource(\n    reactDndType,\n    sourceSpec,\n    sourceCollect\n  )(\n    DropTarget(reactDndType, targetSpec, targetCollect)(\n      ({ children, connectDragSource, connectDropTarget, isOver, canDrop }) => {\n        return children({\n          connectDragSource,\n          connectDropTarget,\n          isOver,\n          canDrop,\n        });\n      }\n    )\n  );\n\n  return (props: Props<DraggedItemType>) => (\n    <InnerDragSourceAndDropTarget {...props} />\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport * as React from 'react';\nimport EventsTree from './EventsTree';\nimport NewInstructionEditorDialog from './InstructionEditor/NewInstructionEditorDialog';\nimport InstructionEditorDialog from './InstructionEditor/InstructionEditorDialog';\nimport NewInstructionEditorMenu from './InstructionEditor/NewInstructionEditorMenu';\nimport EventTextDialog, {\n  filterEditableWithEventTextDialog,\n} from './InstructionEditor/EventTextDialog';\nimport Toolbar from './Toolbar';\nimport KeyboardShortcuts from '../UI/KeyboardShortcuts';\nimport { getShortcutDisplayName } from '../KeyboardShortcuts';\nimport InlineParameterEditor from './InlineParameterEditor';\nimport ContextMenu, { type ContextMenuInterface } from '../UI/Menu/ContextMenu';\nimport { serializeToJSObject } from '../Utils/Serializer';\nimport {\n  type HistoryState,\n  undo,\n  redo,\n  canUndo,\n  canRedo,\n  getHistoryInitialState,\n  saveToHistory,\n} from '../Utils/History';\nimport {\n  type SelectionState,\n  type EventContext,\n  type InstructionsListContext,\n  type InstructionContext,\n  type ParameterContext,\n  getInitialSelection,\n  selectEvent,\n  selectInstruction,\n  hasSomethingSelected,\n  hasEventSelected,\n  hasInstructionSelected,\n  hasSelectedAtLeastOneCondition,\n  hasInstructionsListSelected,\n  getSelectedEvents,\n  getSelectedInstructions,\n  clearSelection,\n  getSelectedEventContexts,\n  getSelectedInstructionsContexts,\n} from './SelectionHandler';\nimport { ensureSingleOnceInstructions } from './OnceInstructionSanitizer';\nimport EventsContextAnalyzerDialog, {\n  type EventsContextResult,\n  toEventsContextResult,\n} from './EventsContextAnalyzerDialog';\nimport SearchPanel, { type SearchPanelInterface } from './SearchPanel';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport EventsSearcher, {\n  type ReplaceInEventsInputs,\n  type SearchInEventsInputs,\n} from './EventsSearcher';\nimport { containsSubInstructions } from './ContainsSubInstruction';\nimport {\n  enumerateEventsMetadata,\n  type EventMetadata,\n} from './EnumerateEventsMetadata';\nimport PreferencesContext, {\n  type Preferences,\n} from '../MainFrame/Preferences/PreferencesContext';\nimport EventsFunctionExtractorDialog from './EventsFunctionExtractor/EventsFunctionExtractorDialog';\nimport { createNewInstructionForEventsFunction } from './EventsFunctionExtractor';\nimport { type EventsScope } from '../InstructionOrExpression/EventsScope.flow';\nimport {\n  pasteEventsFromClipboardInSelection,\n  copySelectionToClipboard,\n  pasteInstructionsFromClipboardInSelection,\n  hasClipboardEvents,\n  hasClipboardActions,\n  hasClipboardConditions,\n  pasteInstructionsFromClipboardInInstructionsList,\n} from './ClipboardKind';\nimport DismissableInfoBar from '../UI/Messages/DismissableInfoBar';\nimport { useScreenType } from '../UI/Reponsive/ScreenTypeMeasurer';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\nimport AuthenticatedUserContext, {\n  type AuthenticatedUser,\n} from '../Profile/AuthenticatedUserContext';\nimport {\n  addCreateBadgePreHookIfNotClaimed,\n  TRIVIAL_FIRST_EVENT,\n} from '../Utils/GDevelopServices/Badge';\nimport LeaderboardContext, {\n  type LeaderboardState,\n} from '../Leaderboard/LeaderboardContext';\nconst gd: libGDevelop = global.gd;\n\nconst zoomLevel = { min: 1, max: 50 };\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  events: gdEventsList,\n  setToolbar: (?React.Node) => void,\n  onOpenSettings?: ?() => void,\n  onOpenExternalEvents: string => void,\n  onOpenLayout: string => void,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n  onCreateEventsFunction: (\n    extensionName: string,\n    eventsFunction: gdEventsFunction\n  ) => void,\n  onBeginCreateEventsFunction: () => void,\n  unsavedChanges?: ?UnsavedChanges,\n|};\n\ntype ComponentProps = {|\n  ...Props,\n  authenticatedUser: AuthenticatedUser,\n  preferences: Preferences,\n  leaderboardsManager: ?LeaderboardState,\n|};\n\ntype State = {|\n  history: HistoryState,\n\n  editedInstruction: {\n    //TODO: This could be adapted to be a InstructionContext\n    isCondition: boolean,\n    instruction: ?gdInstruction,\n    instrsList: ?gdInstructionsList,\n    indexInList: ?number,\n  },\n  editedParameter: {\n    // TODO: This could be adapted to be a ParameterContext\n    isCondition: boolean,\n    instruction: ?gdInstruction,\n    instrsList: ?gdInstructionsList,\n    parameterIndex: number,\n  },\n\n  selection: SelectionState,\n\n  inlineEditing: boolean,\n  inlineEditingAnchorEl: ?HTMLElement,\n  inlineInstructionEditorAnchorEl: ?HTMLElement,\n  inlineEditingChangesMade: boolean,\n  inlineEditingPreviousValue: ?string,\n\n  analyzedEventsContextResult: ?EventsContextResult,\n\n  serializedEventsToExtract: ?Object,\n\n  textEditedEvent: ?gdBaseEvent,\n\n  showSearchPanel: boolean,\n  searchResults: ?Array<gdBaseEvent>,\n  searchFocusOffset: ?number,\n\n  allEventsMetadata: Array<EventMetadata>,\n\n  fontSize: number,\n|};\n\ntype EventInsertionContext = {|\n  eventsList: gdEventsList,\n  indexInList: number,\n|};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'column',\n    flex: 1,\n    position: 'relative', // To be sure that absolutely positioned PlaceholderMessage won't go outside of the EventsSheet\n  },\n};\n\nexport class EventsSheetComponentWithoutHandle extends React.Component<\n  ComponentProps,\n  State\n> {\n  _eventsTree: ?EventsTree;\n  _eventSearcher: ?EventsSearcher;\n  _searchPanel: ?SearchPanelInterface;\n  _containerDiv = React.createRef<HTMLDivElement>();\n  _keyboardShortcuts = new KeyboardShortcuts({\n    isActive: () =>\n      !this.state.inlineEditing &&\n      !this.state.editedInstruction.instruction &&\n      !this.state.analyzedEventsContextResult &&\n      !this.state.serializedEventsToExtract,\n    shortcutCallbacks: {\n      onDelete: () => this.deleteSelection(),\n      onCopy: () => this.copySelection(),\n      onCut: () => this.cutSelection(),\n      onPaste: () => this.pasteEventsOrInstructions(),\n      onSearch: () => this._toggleSearchPanel(),\n      onEscape: () => this._closeSearchPanel(),\n      onUndo: () => this.undo(),\n      onRedo: () => this.redo(),\n      onZoomIn: (event: KeyboardEvent) => this.onZoomEvent('IN')(event),\n      onZoomOut: (event: KeyboardEvent) => this.onZoomEvent('OUT')(event),\n    },\n  });\n\n  eventContextMenu: ?ContextMenuInterface;\n  instructionContextMenu: ?ContextMenuInterface;\n  addNewEvent: (\n    type: string,\n    context: ?EventInsertionContext\n  ) => Array<gdBaseEvent>;\n\n  state = {\n    history: getHistoryInitialState(this.props.events, { historyMaxSize: 50 }),\n\n    editedInstruction: {\n      isCondition: true,\n      instruction: null,\n      instrsList: null,\n      indexInList: 0,\n    },\n    editedParameter: {\n      isCondition: true,\n      instruction: null,\n      instrsList: null,\n      parameterIndex: 0,\n    },\n\n    selection: getInitialSelection(),\n\n    inlineEditing: false,\n    inlineEditingAnchorEl: null,\n    inlineInstructionEditorAnchorEl: null,\n    inlineEditingChangesMade: false,\n    inlineEditingPreviousValue: null,\n\n    analyzedEventsContextResult: null,\n\n    serializedEventsToExtract: null,\n\n    showSearchPanel: false,\n    searchResults: null,\n    searchFocusOffset: null,\n\n    allEventsMetadata: [],\n\n    textEditedEvent: null,\n\n    fontSize: 14,\n  };\n\n  constructor(props: ComponentProps) {\n    super(props);\n    this.addNewEvent = addCreateBadgePreHookIfNotClaimed(\n      this.props.authenticatedUser,\n      TRIVIAL_FIRST_EVENT,\n      this._addNewEvent\n    );\n  }\n\n  componentDidMount() {\n    this.setState({ allEventsMetadata: enumerateEventsMetadata() });\n  }\n\n  componentDidUpdate(prevProps: ComponentProps, prevState: State) {\n    this.addNewEvent = addCreateBadgePreHookIfNotClaimed(\n      this.props.authenticatedUser,\n      TRIVIAL_FIRST_EVENT,\n      this._addNewEvent\n    );\n\n    if (this.state.history !== prevState.history)\n      if (this.props.unsavedChanges)\n        this.props.unsavedChanges.triggerUnsavedChanges();\n  }\n\n  updateToolbar() {\n    if (!this.props.setToolbar) return;\n\n    this.props.setToolbar(\n      <Toolbar\n        allEventsMetadata={this.state.allEventsMetadata}\n        onAddStandardEvent={this._addStandardEvent}\n        onAddSubEvent={this.addSubEvents}\n        canAddSubEvent={hasEventSelected(this.state.selection)}\n        canToggleEventDisabled={hasEventSelected(this.state.selection)}\n        onAddCommentEvent={this._addCommentEvent}\n        onAddEvent={this.addNewEvent}\n        onToggleDisabledEvent={this.toggleDisabled}\n        canRemove={hasSomethingSelected(this.state.selection)}\n        onRemove={this.deleteSelection}\n        canUndo={canUndo(this.state.history)}\n        canRedo={canRedo(this.state.history)}\n        undo={this.undo}\n        redo={this.redo}\n        onOpenSettings={this.props.onOpenSettings}\n        onToggleSearchPanel={this._toggleSearchPanel}\n      />\n    );\n  }\n\n  _addStandardEvent = () => {\n    this.addNewEvent('BuiltinCommonInstructions::Standard');\n  };\n\n  _addCommentEvent = () => {\n    this.addNewEvent('BuiltinCommonInstructions::Comment');\n  };\n\n  _toggleSearchPanel = () => {\n    this.setState(\n      state => {\n        if (\n          state.showSearchPanel &&\n          this._searchPanel &&\n          this._searchPanel.isSearchOngoing()\n        ) {\n          this._searchPanel.focus();\n          return;\n        }\n        const show = !state.showSearchPanel;\n        if (!show) {\n          if (this._eventSearcher) this._eventSearcher.reset();\n        }\n\n        return {\n          showSearchPanel: show,\n        };\n      },\n      () => {\n        if (this.state.showSearchPanel && this._searchPanel) {\n          this._searchPanel.focus();\n        }\n      }\n    );\n  };\n\n  _closeSearchPanel = () => {\n    if (this._eventSearcher) this._eventSearcher.reset();\n    this.setState({ showSearchPanel: false });\n  };\n\n  addSubEvents = () => {\n    const { project } = this.props;\n\n    getSelectedEvents(this.state.selection).forEach(event => {\n      if (event.canHaveSubEvents()) {\n        event\n          .getSubEvents()\n          .insertNewEvent(\n            project,\n            'BuiltinCommonInstructions::Standard',\n            event.getSubEvents().getEventsCount()\n          );\n      }\n    });\n\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  _selectionCanHaveSubEvents = () => {\n    return getSelectedEvents(this.state.selection).some(event => {\n      return event.canHaveSubEvents();\n    });\n  };\n\n  _selectionCanToggleDisabled = () => {\n    return getSelectedEvents(this.state.selection).some(event => {\n      return event.isExecutable();\n    });\n  };\n\n  _addNewEvent = (\n    type: string,\n    context: ?EventInsertionContext\n  ): Array<gdBaseEvent> => {\n    const { project } = this.props;\n    const hasEventsSelected = hasEventSelected(this.state.selection);\n    let insertTopOfSelection = false;\n\n    let insertions: Array<EventInsertionContext> = [];\n    if (context) {\n      insertions = [context];\n    } else if (hasEventsSelected) {\n      if (\n        type === 'BuiltinCommonInstructions::Comment' ||\n        type === 'BuiltinCommonInstructions::Group'\n      ) {\n        insertTopOfSelection = true;\n      }\n\n      insertions = getSelectedEventContexts(this.state.selection).map(\n        selectedEvent => ({\n          eventsList: selectedEvent.eventsList,\n          indexInList: insertTopOfSelection\n            ? selectedEvent.indexInList - 1\n            : selectedEvent.indexInList,\n        })\n      );\n    } else {\n      insertions = [\n        {\n          eventsList: this.props.events,\n          indexInList: this.props.events.getEventsCount(),\n        },\n      ];\n    }\n\n    const newEvents = insertions.map(\n      (context: { eventsList: gdEventsList, indexInList: number }) => {\n        return context.eventsList.insertNewEvent(\n          project,\n          type,\n          context.indexInList + 1\n        );\n      }\n    );\n\n    this._saveChangesToHistory(() => {\n      const eventsTree = this._eventsTree;\n      if (!eventsTree) return;\n\n      eventsTree.forceEventsUpdate(() => {\n        if (!context && !hasEventsSelected) {\n          eventsTree.scrollToEvent(newEvents[0]);\n        }\n      });\n    });\n\n    return newEvents;\n  };\n\n  openEventTextDialog = () => {\n    const editableEvents = filterEditableWithEventTextDialog(\n      getSelectedEvents(this.state.selection)\n    );\n    if (!editableEvents.length) return;\n\n    const event = editableEvents[editableEvents.length - 1]; // Get the last selected event.\n    this.setState({\n      textEditedEvent: event,\n    });\n  };\n\n  closeEventTextDialog = () => {\n    this.setState({\n      textEditedEvent: null,\n    });\n  };\n\n  _buildInstructionContextMenu = (i18n: I18nType) => [\n    {\n      label: i18n._(t`Copy`),\n      click: () => this.copySelection(),\n      accelerator: 'CmdOrCtrl+C',\n    },\n    {\n      label: i18n._(t`Cut`),\n      click: () => this.cutSelection(),\n      accelerator: 'CmdOrCtrl+X',\n    },\n    {\n      label: i18n._(t`Paste`),\n      click: () => this.pasteInstructions(),\n      enabled: hasClipboardConditions() || hasClipboardActions(),\n      accelerator: 'CmdOrCtrl+V',\n    },\n    { type: 'separator' },\n    {\n      label: i18n._(t`Delete`),\n      click: () => this.deleteSelection(),\n      accelerator: 'Delete',\n    },\n    { type: 'separator' },\n    {\n      label: i18n._(t`Undo`),\n      click: this.undo,\n      enabled: canUndo(this.state.history),\n      accelerator: 'CmdOrCtrl+Z',\n    },\n    {\n      label: i18n._(t`Redo`),\n      click: this.redo,\n      enabled: canRedo(this.state.history),\n      accelerator: 'CmdOrCtrl+Shift+Z',\n    },\n    {\n      label: i18n._(t`Invert Condition`),\n      click: () => this._invertSelectedConditions(),\n      visible: hasSelectedAtLeastOneCondition(this.state.selection),\n    },\n  ];\n\n  openAddInstructionContextMenu = (\n    button: HTMLButtonElement,\n    instructionsListContext: InstructionsListContext\n  ) => {\n    this.openInstructionEditor(instructionsListContext, button);\n  };\n\n  openInstructionEditor = (\n    instructionContext: InstructionContext | InstructionsListContext,\n    inlineInstructionEditorAnchorEl?: ?HTMLButtonElement = null\n  ) => {\n    if (this.state.editedInstruction.instruction) {\n      this.state.editedInstruction.instruction.delete();\n      console.warn(\n        'state.editedInstruction.instruction was containing an instruction - deleting it. Verify the logic handling the state in EventsSheet because that should not happen.'\n      );\n    }\n\n    this.setState({\n      inlineInstructionEditorAnchorEl,\n      editedInstruction: {\n        instrsList: instructionContext.instrsList,\n        isCondition: instructionContext.isCondition,\n        instruction: instructionContext.instruction\n          ? instructionContext.instruction.clone()\n          : new gd.Instruction(),\n        indexInList:\n          instructionContext.indexInList !== undefined\n            ? instructionContext.indexInList\n            : undefined,\n      },\n    });\n  };\n\n  closeInstructionEditor(saveChanges: boolean = false) {\n    const { instruction } = this.state.editedInstruction;\n    this.setState(\n      {\n        editedInstruction: {\n          isCondition: true,\n          instruction: null,\n          instrsList: null,\n          indexInList: 0,\n        },\n      },\n      () => {\n        // Delete from memory the instruction being edited, *after* resetting\n        // editedInstruction and after the re-rendering, in an effort to be\n        // sure that instruction is not used after deletion.\n        if (instruction) {\n          instruction.delete();\n        }\n        if (saveChanges) {\n          this._saveChangesToHistory();\n        }\n      }\n    );\n  }\n\n  moveSelectionToInstruction = (destinationContext: InstructionContext) => {\n    this.moveSelectionToInstructionsList(\n      {\n        instrsList: destinationContext.instrsList,\n        isCondition: destinationContext.isCondition,\n      },\n      destinationContext.indexInList\n    );\n  };\n\n  moveSelectionToInstructionsList = (\n    destinationContext: InstructionsListContext,\n    indexInList: ?number = undefined\n  ) => {\n    const selectedInstructions = getSelectedInstructions(this.state.selection);\n    const destinationIndex =\n      indexInList === undefined || indexInList === null\n        ? destinationContext.instrsList.size()\n        : indexInList;\n\n    const isTryingToDragAnInstructionIntoItsOwnNestedInstructions = !!selectedInstructions.filter(\n      instruction =>\n        containsSubInstructions(instruction, destinationContext.instrsList)\n    ).length;\n\n    if (isTryingToDragAnInstructionIntoItsOwnNestedInstructions) return;\n\n    selectedInstructions.forEach(instruction =>\n      destinationContext.instrsList.insert(instruction, destinationIndex)\n    );\n\n    if (!this._keyboardShortcuts.shouldCloneInstances()) {\n      this.deleteSelection({ deleteEvents: false });\n    } else {\n      this._saveChangesToHistory();\n    }\n  };\n\n  selectEvent = (eventContext: EventContext) => {\n    const multiSelect = this._keyboardShortcuts.shouldMultiSelect();\n    this.setState(\n      {\n        selection: selectEvent(this.state.selection, eventContext, multiSelect),\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  collapseAll = () => {\n    if (this._eventsTree) this._eventsTree.foldAll();\n  };\n\n  expandToLevel = (level: number) => {\n    if (this._eventsTree) this._eventsTree.unfoldToLevel(level);\n  };\n\n  _buildEventContextMenu = (i18n: I18nType) => [\n    {\n      label: i18n._(t`Edit`),\n      click: () => this.openEventTextDialog(),\n      visible:\n        filterEditableWithEventTextDialog(\n          getSelectedEvents(this.state.selection)\n        ).length > 0,\n    },\n    {\n      label: i18n._(t`Copy`),\n      click: () => this.copySelection(),\n      accelerator: 'CmdOrCtrl+C',\n    },\n    {\n      label: i18n._(t`Cut`),\n      click: () => this.cutSelection(),\n      accelerator: 'CmdOrCtrl+X',\n    },\n    {\n      label: i18n._(t`Paste`),\n      click: () => this.pasteEvents(),\n      enabled: hasClipboardEvents(),\n      accelerator: 'CmdOrCtrl+V',\n    },\n    {\n      label: i18n._(t`Delete`),\n      click: () => this.deleteSelection(),\n      accelerator: 'Delete',\n    },\n    {\n      label: i18n._(t`Toggle disabled`),\n      click: () => this.toggleDisabled(),\n      enabled: this._selectionCanToggleDisabled(),\n      accelerator: getShortcutDisplayName(\n        this.props.preferences.values.userShortcutMap[\n          'TOGGLE_EVENT_DISABLED'\n        ] || 'KeyD'\n      ),\n    },\n    { type: 'separator' },\n    {\n      label: i18n._(t`Add New Event Below`),\n      click: () => {\n        this.addNewEvent('BuiltinCommonInstructions::Standard');\n      },\n    },\n    {\n      label: i18n._(t`Add Sub Event`),\n      click: () => this.addSubEvents(),\n      enabled: this._selectionCanHaveSubEvents(),\n    },\n    {\n      label: i18n._(t`Add Other`),\n      submenu: this.state.allEventsMetadata.map(metadata => {\n        return {\n          label: metadata.fullName,\n          click: () => {\n            this.addNewEvent(metadata.type);\n          },\n        };\n      }),\n    },\n    { type: 'separator' },\n    {\n      label: i18n._(t`Undo`),\n      click: this.undo,\n      enabled: canUndo(this.state.history),\n      accelerator: 'CmdOrCtrl+Z',\n    },\n    {\n      label: i18n._(t`Redo`),\n      click: this.redo,\n      enabled: canRedo(this.state.history),\n      accelerator: 'CmdOrCtrl+Shift+Z',\n    },\n    { type: 'separator' },\n    {\n      label: i18n._(t`Collapse all`),\n      click: this.collapseAll,\n    },\n    {\n      label: i18n._(t`Expand all to level`),\n      submenu: [\n        {\n          label: i18n._(t`All`),\n          click: () => this.expandToLevel(-1),\n        },\n        { type: 'separator' },\n        ...[0, 1, 2, 3, 4, 5, 6, 7, 8].map(index => {\n          return {\n            label: i18n._(t`Level ${index + 1}`),\n            click: () => this.expandToLevel(index),\n          };\n        }),\n      ],\n    },\n    { type: 'separator' },\n    {\n      label: i18n._(t`Extract Events to a Function`),\n      click: () => this.extractEventsToFunction(),\n    },\n    {\n      label: i18n._(t`Move Events into a Group`),\n      click: () => this.moveEventsIntoNewGroup(),\n    },\n    {\n      label: i18n._(t`Analyze Objects Used in this Event`),\n      click: this._openEventsContextAnalyzer,\n    },\n    { type: 'separator' },\n    {\n      label: i18n._(t`Zoom In`),\n      click: () => this.onZoomEvent('IN')(),\n      accelerator: 'CmdOrCtrl+=',\n      enabled:\n        this.props.preferences.values.eventsSheetZoomLevel < zoomLevel.max,\n    },\n    {\n      label: i18n._(t`Zoom Out`),\n      click: () => this.onZoomEvent('OUT')(),\n      accelerator: 'CmdOrCtrl+-',\n      enabled:\n        this.props.preferences.values.eventsSheetZoomLevel > zoomLevel.min,\n    },\n  ];\n\n  openEventContextMenu = (x: number, y: number, eventContext: EventContext) => {\n    const multiSelect = this._keyboardShortcuts.shouldMultiSelect();\n    this.setState(\n      {\n        selection: selectEvent(this.state.selection, eventContext, multiSelect),\n      },\n      () => {\n        this.updateToolbar();\n        if (this.eventContextMenu) this.eventContextMenu.open(x, y);\n      }\n    );\n  };\n\n  openInstructionContextMenu = (\n    x: number,\n    y: number,\n    instructionContext: InstructionContext\n  ) => {\n    const multiSelect = this._keyboardShortcuts.shouldMultiSelect();\n    this.setState(\n      {\n        selection: selectInstruction(\n          this.state.selection,\n          instructionContext,\n          multiSelect\n        ),\n      },\n      () => {\n        this.updateToolbar();\n        if (this.instructionContextMenu) this.instructionContextMenu.open(x, y);\n      }\n    );\n  };\n\n  selectInstruction = (instructionContext: InstructionContext) => {\n    const multiSelect = this._keyboardShortcuts.shouldMultiSelect();\n    this.setState(\n      {\n        selection: selectInstruction(\n          this.state.selection,\n          instructionContext,\n          multiSelect\n        ),\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  openParameterEditor = (parameterContext: ParameterContext) => {\n    const { instruction, parameterIndex } = parameterContext;\n\n    // $FlowFixMe\n    this.setState({\n      editedParameter: parameterContext,\n      inlineEditing: true,\n      inlineEditingAnchorEl: parameterContext.domEvent\n        ? parameterContext.domEvent.currentTarget\n        : null,\n      inlineEditingChangesMade: false,\n      inlineEditingPreviousValue: instruction.getParameter(parameterIndex),\n    });\n  };\n\n  closeParameterEditor = (shouldCancel: boolean) => {\n    if (shouldCancel) {\n      const { instruction, parameterIndex } = this.state.editedParameter;\n      if (!instruction || !this.state.inlineEditingPreviousValue) return;\n\n      instruction.setParameter(\n        parameterIndex,\n        this.state.inlineEditingPreviousValue\n      );\n    } else {\n      if (this.state.inlineEditingChangesMade) {\n        this._saveChangesToHistory();\n      }\n    }\n\n    const { inlineEditingAnchorEl } = this.state;\n\n    this.setState(\n      {\n        inlineEditing: false,\n        inlineEditingAnchorEl: null,\n        inlineEditingChangesMade: false,\n      },\n      () => {\n        if (inlineEditingAnchorEl) {\n          // Focus back the parameter - especially useful when editing\n          // with the keyboard only.\n          //\n          // Do this **after** the state change is applied.\n          // Otherwise this could cause a blur event for the input field\n          // that was focused in the inline popover,\n          // which would override the changes just applied to the\n          // instruction in case of cancellation.\n          // As the state change is applied, the inline popover is already\n          // gone and we can change the focus without worries.\n          inlineEditingAnchorEl.focus();\n        }\n      }\n    );\n  };\n\n  toggleDisabled = () => {\n    let shouldBeSaved = false;\n    getSelectedEvents(this.state.selection).forEach(event => {\n      if (event.isExecutable()) {\n        event.setDisabled(!event.isDisabled());\n        shouldBeSaved = true;\n      }\n    });\n    if (shouldBeSaved) {\n      this._saveChangesToHistory(() => {\n        if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n      });\n    }\n  };\n\n  deleteSelection = ({\n    deleteInstructions = true,\n    deleteEvents = true,\n  }: { deleteInstructions?: boolean, deleteEvents?: boolean } = {}) => {\n    const { events } = this.props;\n    const eventsRemover = new gd.EventsRemover();\n    if (deleteEvents) {\n      getSelectedEvents(this.state.selection).forEach(event =>\n        eventsRemover.addEventToRemove(event)\n      );\n    }\n    if (deleteInstructions) {\n      getSelectedInstructions(this.state.selection).forEach(instruction =>\n        eventsRemover.addInstructionToRemove(instruction)\n      );\n    }\n\n    eventsRemover.launch(events);\n\n    // /!\\ Events were changed, so any reference to an existing event can now\n    // be invalid. Make sure to immediately trigger a forced update before\n    // any re-render that could use a deleted/invalid event.\n    if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n\n    this.setState(\n      {\n        selection: clearSelection(),\n        inlineEditing: false,\n        inlineEditingAnchorEl: null,\n      },\n      () => {\n        this._saveChangesToHistory();\n\n        // Deletion of an event/instruction will remove it from the DOM,\n        // potentially losing the focus on the associated DOM elements. Ensure\n        // we keep the focus on the EventsSheet.\n        this._ensureFocused();\n      }\n    );\n  };\n\n  copySelection = () => {\n    copySelectionToClipboard(this.state.selection);\n  };\n\n  cutSelection = () => {\n    this.copySelection();\n    this.deleteSelection();\n  };\n\n  pasteEvents = () => {\n    if (\n      !pasteEventsFromClipboardInSelection(\n        this.props.project,\n        this.state.selection\n      )\n    ) {\n      return;\n    }\n\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  pasteInstructions = () => {\n    if (\n      !pasteInstructionsFromClipboardInSelection(\n        this.props.project,\n        this.state.selection\n      )\n    ) {\n      return;\n    }\n\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  pasteEventsOrInstructions = () => {\n    if (hasEventSelected(this.state.selection)) this.pasteEvents();\n    else if (hasInstructionSelected(this.state.selection))\n      this.pasteInstructions();\n    else if (hasInstructionsListSelected(this.state.selection))\n      this.pasteInstructions();\n  };\n\n  pasteInstructionsInInstructionsList = (\n    instructionsListContext: InstructionsListContext\n  ) => {\n    if (\n      !pasteInstructionsFromClipboardInInstructionsList(\n        this.props.project,\n        instructionsListContext\n      )\n    ) {\n      return;\n    }\n\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  _invertSelectedConditions = () => {\n    getSelectedInstructionsContexts(this.state.selection).forEach(\n      instructionContext => {\n        if (instructionContext.isCondition) {\n          instructionContext.instruction.setInverted(\n            !instructionContext.instruction.isInverted()\n          );\n        }\n      }\n    );\n\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  _saveChangesToHistory = (cb: ?Function) => {\n    this.setState(\n      {\n        history: saveToHistory(this.state.history, this.props.events),\n      },\n      () => {\n        this.updateToolbar();\n        if (cb) cb();\n      }\n    );\n    if (this._searchPanel) this._searchPanel.markSearchResultsDirty();\n  };\n\n  undo = () => {\n    if (!canUndo(this.state.history)) return;\n\n    const { events, project } = this.props;\n    const newHistory = undo(this.state.history, events, project);\n\n    // /!\\ Events were changed, so any reference to an existing event can now\n    // be invalid. Make sure to immediately trigger a forced update before\n    // any re-render that could use a deleted/invalid event.\n    if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n\n    // /!\\ Also clear selection, that can contain reference to invalid events or\n    // events not shown on screen.\n    this.setState({ history: newHistory, selection: clearSelection() }, () =>\n      this.updateToolbar()\n    );\n  };\n\n  redo = () => {\n    if (!canRedo(this.state.history)) return;\n\n    const { events, project } = this.props;\n    const newHistory = redo(this.state.history, events, project);\n\n    // /!\\ Events were changed, so any reference to an existing event can now\n    // be invalid. Make sure to immediately trigger a forced update before\n    // any re-render that could use a deleted/invalid event.\n    if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n\n    // /!\\ Also clear selection, that can contain reference to invalid events or\n    // events not shown on screen.\n    this.setState({ history: newHistory, selection: clearSelection() }, () =>\n      this.updateToolbar()\n    );\n  };\n\n  onZoomEvent = (\n    towards: 'IN' | 'OUT'\n  ): ((domEvent?: KeyboardEvent) => void) => {\n    const factor = towards === 'IN' ? 1 : -1;\n    return (domEvent?: KeyboardEvent) => {\n      if (domEvent) {\n        // Browsers usually implement their own zoom features on the same shortcut\n        domEvent.preventDefault();\n        domEvent.stopPropagation();\n      }\n      this.props.preferences.setEventsSheetZoomLevel(\n        Math.min(\n          Math.max(\n            this.props.preferences.values.eventsSheetZoomLevel + factor * 1,\n            zoomLevel.min\n          ),\n          zoomLevel.max\n        )\n      );\n    };\n  };\n\n  _openEventsContextAnalyzer = () => {\n    const { globalObjectsContainer, objectsContainer } = this.props;\n    const eventsContextAnalyzer = new gd.EventsContextAnalyzer(\n      gd.JsPlatform.get(),\n      globalObjectsContainer,\n      objectsContainer\n    );\n\n    const eventsList = new gd.EventsList();\n    getSelectedEvents(this.state.selection).forEach(event =>\n      eventsList.insertEvent(event, eventsList.getEventsCount())\n    );\n\n    eventsContextAnalyzer.launch(eventsList);\n    eventsList.delete();\n\n    this.setState({\n      analyzedEventsContextResult: toEventsContextResult(\n        eventsContextAnalyzer.getEventsContext()\n      ),\n    });\n    eventsContextAnalyzer.delete();\n  };\n\n  _closeEventsContextAnalyzer = () => {\n    this.setState({\n      analyzedEventsContextResult: null,\n    });\n  };\n\n  extractEventsToFunction = () => {\n    const eventsList = new gd.EventsList();\n\n    getSelectedEvents(this.state.selection).forEach(event =>\n      eventsList.insertEvent(event, eventsList.getEventsCount())\n    );\n\n    this.props.onBeginCreateEventsFunction();\n\n    this.setState({\n      serializedEventsToExtract: serializeToJSObject(eventsList),\n    });\n\n    eventsList.delete();\n  };\n\n  moveEventsIntoNewGroup = () => {\n    const eventsList = new gd.EventsList();\n\n    getSelectedEvents(this.state.selection).forEach(event =>\n      eventsList.insertEvent(event, eventsList.getEventsCount())\n    );\n\n    this._replaceSelectionByGroupOfEvents(eventsList);\n    eventsList.delete();\n  };\n\n  _replaceSelectionByEventsFunction = (\n    extensionName: string,\n    eventsFunction: gdEventsFunction\n  ) => {\n    const contexts = getSelectedEventContexts(this.state.selection);\n    if (!contexts.length) return;\n\n    const newEvents = this.addNewEvent('BuiltinCommonInstructions::Standard', {\n      eventsList: contexts[0].eventsList,\n      indexInList: contexts[0].indexInList,\n    });\n    if (!newEvents.length) {\n      console.error('A new event should have been created');\n      return;\n    }\n\n    const action = createNewInstructionForEventsFunction(\n      extensionName,\n      eventsFunction\n    );\n    const standardEvt = gd.asStandardEvent(newEvents[0]);\n    standardEvt.getActions().push_back(action);\n    action.delete();\n\n    this.deleteSelection({ deleteInstructions: false });\n  };\n\n  _replaceSelectionByGroupOfEvents = (eventsList: gdEventsList) => {\n    const contexts = getSelectedEventContexts(this.state.selection);\n    if (!contexts.length) return;\n\n    const newEvents = this.addNewEvent('BuiltinCommonInstructions::Group', {\n      eventsList: contexts[0].eventsList,\n      indexInList: contexts[0].indexInList,\n    });\n    if (!newEvents.length) {\n      console.error('A new event should have been created');\n      return;\n    }\n\n    const groupEvent = gd.asGroupEvent(newEvents[0]);\n\n    groupEvent.setName('Grouped events');\n    groupEvent.setFolded(true);\n    groupEvent\n      .getSubEvents()\n      .insertEvents(eventsList, 0, eventsList.getEventsCount(), 0);\n\n    this.deleteSelection({ deleteInstructions: false });\n  };\n\n  _ensureEventUnfolded = (cb: () => ?gdBaseEvent) => {\n    const event = cb();\n    if (event && this._eventsTree) {\n      this._eventsTree.unfoldForEvent(event);\n    }\n  };\n\n  _replaceInEvents = (\n    doReplaceInEvents: (inputs: ReplaceInEventsInputs) => void,\n    inputs: ReplaceInEventsInputs\n  ) => {\n    doReplaceInEvents(inputs);\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  _searchInEvents = (\n    doSearchInEvents: (inputs: SearchInEventsInputs, cb: () => void) => void,\n    inputs: SearchInEventsInputs\n  ) => {\n    doSearchInEvents(inputs, () => {\n      this.forceUpdate(() => {\n        if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n      });\n    });\n  };\n\n  _onEventMoved = () => {\n    // Move of the event in the list is handled by EventsTree.\n    // This could be refactored and put here if the drag'n'drop of events\n    // is reworked at some point.\n    this._saveChangesToHistory();\n  };\n\n  _renderInstructionEditorDialog = (newInstructionEditorDialog: boolean) => {\n    const {\n      project,\n      scope,\n      globalObjectsContainer,\n      objectsContainer,\n    } = this.props;\n\n    // Choose the dialog to use\n    const Dialog = this.state.inlineInstructionEditorAnchorEl\n      ? NewInstructionEditorMenu\n      : newInstructionEditorDialog\n      ? NewInstructionEditorDialog\n      : InstructionEditorDialog;\n\n    return this.state.editedInstruction.instruction ? (\n      <Dialog\n        project={project}\n        scope={scope}\n        globalObjectsContainer={globalObjectsContainer}\n        objectsContainer={objectsContainer}\n        instruction={this.state.editedInstruction.instruction}\n        isCondition={this.state.editedInstruction.isCondition}\n        isNewInstruction={\n          this.state.editedInstruction.indexInList === undefined\n        }\n        anchorEl={this.state.inlineInstructionEditorAnchorEl}\n        open={true}\n        onCancel={() => this.closeInstructionEditor()}\n        onSubmit={() => {\n          const {\n            instrsList,\n            instruction,\n            indexInList,\n          } = this.state.editedInstruction;\n          if (!instrsList || !instruction) return;\n\n          if (indexInList !== undefined && indexInList !== null) {\n            // Replace an existing instruction\n            instrsList.set(indexInList, instruction);\n          } else {\n            // Add a new instruction\n            instrsList.insert(instruction, instrsList.size());\n          }\n\n          this.closeInstructionEditor(true);\n          ensureSingleOnceInstructions(instrsList);\n          if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n        }}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        openInstructionOrExpression={(extension, type) => {\n          this.closeInstructionEditor();\n          this.props.openInstructionOrExpression(extension, type);\n        }}\n        canPasteInstructions={\n          this.state.editedInstruction.isCondition\n            ? hasClipboardConditions()\n            : hasClipboardActions()\n        }\n        onPasteInstructions={() => {\n          const { instrsList, isCondition } = this.state.editedInstruction;\n          if (!instrsList) return;\n\n          this.pasteInstructionsInInstructionsList({\n            instrsList,\n            isCondition,\n          });\n        }}\n      />\n    ) : (\n      undefined\n    );\n  };\n\n  /**\n   * Call this to ensure that the events sheet stays focused after a potential\n   * lost of focus (for example, after a scroll, the focused element might have\n   * been scrolled out of the view and so removed from the DOM)\n   */\n  _ensureFocused = () => {\n    if (!this._containerDiv || !document) return;\n\n    const containerDivElement = this._containerDiv.current;\n    if (document.activeElement === containerDivElement) {\n      // Focus is already on the container\n      return;\n    }\n    if (containerDivElement) {\n      if (\n        document.activeElement !== document.body &&\n        containerDivElement.contains(document.activeElement)\n      ) {\n        // Focus is already on an element of the container\n        return;\n      }\n\n      // Focus is not on an element of the container, we probably lost the focus\n      // after scrolling or removing an element. Give back the focus to the container.\n      containerDivElement.focus();\n    }\n  };\n\n  render() {\n    const {\n      project,\n      scope,\n      events,\n      onOpenExternalEvents,\n      onOpenLayout,\n      globalObjectsContainer,\n      objectsContainer,\n      preferences,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n      onCreateEventsFunction,\n    } = this.props;\n    if (!project) return null;\n\n    const screenType = useScreenType();\n\n    return (\n      <ResponsiveWindowMeasurer>\n        {windowWidth => (\n          <EventsSearcher\n            key={events.ptr}\n            ref={eventSearcher => (this._eventSearcher = eventSearcher)}\n            events={events}\n            globalObjectsContainer={globalObjectsContainer}\n            objectsContainer={objectsContainer}\n            selection={this.state.selection}\n            project={project}\n          >\n            {({\n              eventsSearchResultEvents,\n              searchFocusOffset,\n              searchInEvents,\n              replaceInEvents,\n              goToPreviousSearchResult,\n              goToNextSearchResult,\n            }) => (\n              <div\n                className=\"gd-events-sheet\"\n                style={styles.container}\n                onKeyDown={this._keyboardShortcuts.onKeyDown}\n                onKeyUp={this._keyboardShortcuts.onKeyUp}\n                onDragOver={this._keyboardShortcuts.onDragOver}\n                ref={this._containerDiv}\n                tabIndex={0}\n              >\n                <EventsTree\n                  ref={eventsTree => (this._eventsTree = eventsTree)}\n                  key={events.ptr}\n                  onScroll={this._ensureFocused}\n                  events={events}\n                  project={project}\n                  scope={scope}\n                  globalObjectsContainer={globalObjectsContainer}\n                  objectsContainer={objectsContainer}\n                  selection={this.state.selection}\n                  onInstructionClick={this.selectInstruction}\n                  onInstructionDoubleClick={this.openInstructionEditor}\n                  onInstructionContextMenu={this.openInstructionContextMenu}\n                  onAddInstructionContextMenu={\n                    this.openAddInstructionContextMenu\n                  }\n                  onAddNewInstruction={this.openInstructionEditor}\n                  onPasteInstructions={this.pasteInstructionsInInstructionsList}\n                  onMoveToInstruction={this.moveSelectionToInstruction}\n                  onMoveToInstructionsList={\n                    this.moveSelectionToInstructionsList\n                  }\n                  onParameterClick={this.openParameterEditor}\n                  onEventClick={this.selectEvent}\n                  onEventContextMenu={this.openEventContextMenu}\n                  onAddNewEvent={(\n                    eventType: string,\n                    eventsList: gdEventsList\n                  ) => {\n                    this.addNewEvent(eventType, {\n                      eventsList,\n                      indexInList: eventsList.getEventsCount(),\n                    });\n                  }}\n                  onOpenExternalEvents={onOpenExternalEvents}\n                  onOpenLayout={onOpenLayout}\n                  searchResults={eventsSearchResultEvents}\n                  searchFocusOffset={searchFocusOffset}\n                  onEventMoved={this._onEventMoved}\n                  showObjectThumbnails={\n                    preferences.values.eventsSheetShowObjectThumbnails\n                  }\n                  screenType={screenType}\n                  windowWidth={windowWidth}\n                  eventsSheetHeight={\n                    this._containerDiv.current\n                      ? this._containerDiv.current.clientHeight\n                      : 0\n                  }\n                  fontSize={preferences.values.eventsSheetZoomLevel}\n                />\n                {this.state.showSearchPanel && (\n                  <SearchPanel\n                    ref={searchPanel => (this._searchPanel = searchPanel)}\n                    onSearchInEvents={inputs =>\n                      this._searchInEvents(searchInEvents, inputs)\n                    }\n                    onReplaceInEvents={inputs =>\n                      this._replaceInEvents(replaceInEvents, inputs)\n                    }\n                    resultsCount={\n                      eventsSearchResultEvents\n                        ? eventsSearchResultEvents.length\n                        : null\n                    }\n                    hasEventSelected={hasEventSelected(this.state.selection)}\n                    onGoToPreviousSearchResult={() =>\n                      this._ensureEventUnfolded(goToPreviousSearchResult)\n                    }\n                    onCloseSearchPanel={() => {\n                      this._closeSearchPanel();\n                    }}\n                    onGoToNextSearchResult={() =>\n                      this._ensureEventUnfolded(goToNextSearchResult)\n                    }\n                    searchFocusOffset={searchFocusOffset}\n                  />\n                )}\n                <InlineParameterEditor\n                  open={this.state.inlineEditing}\n                  anchorEl={this.state.inlineEditingAnchorEl}\n                  onRequestClose={() => {\n                    this.closeParameterEditor(\n                      /*shouldCancel=*/ preferences.values\n                        .eventsSheetCancelInlineParameter === 'cancel'\n                    );\n                  }}\n                  onApply={() => {\n                    this.closeParameterEditor(/*shouldCancel=*/ false);\n                  }}\n                  project={project}\n                  scope={scope}\n                  globalObjectsContainer={globalObjectsContainer}\n                  objectsContainer={objectsContainer}\n                  isCondition={this.state.editedParameter.isCondition}\n                  instruction={this.state.editedParameter.instruction}\n                  parameterIndex={this.state.editedParameter.parameterIndex}\n                  onChange={value => {\n                    const {\n                      instruction,\n                      parameterIndex,\n                    } = this.state.editedParameter;\n                    if (!instruction || !this.state.inlineEditing) {\n                      // Unlikely to ever happen, but maybe a component could\n                      // fire the \"onChange\" while the inline editor was just\n                      // dismissed.\n                      return;\n                    }\n                    instruction.setParameter(parameterIndex, value);\n                    this.setState({\n                      inlineEditingChangesMade: true,\n                    });\n                    if (this._searchPanel)\n                      this._searchPanel.markSearchResultsDirty();\n                  }}\n                  resourceSources={resourceSources}\n                  onChooseResource={onChooseResource}\n                  resourceExternalEditors={resourceExternalEditors}\n                />\n                <ContextMenu\n                  ref={eventContextMenu =>\n                    (this.eventContextMenu = eventContextMenu)\n                  }\n                  buildMenuTemplate={this._buildEventContextMenu}\n                />\n                <ContextMenu\n                  ref={instructionContextMenu =>\n                    (this.instructionContextMenu = instructionContextMenu)\n                  }\n                  buildMenuTemplate={this._buildInstructionContextMenu}\n                />\n                {this._renderInstructionEditorDialog(\n                  // Force using the new instruction editor on touch screens.\n                  preferences.values.useNewInstructionEditorDialog ||\n                    screenType === 'touch'\n                )}\n                {this.state.analyzedEventsContextResult && (\n                  <EventsContextAnalyzerDialog\n                    onClose={this._closeEventsContextAnalyzer}\n                    eventsContextResult={this.state.analyzedEventsContextResult}\n                  />\n                )}\n                {this.state.serializedEventsToExtract && (\n                  <EventsFunctionExtractorDialog\n                    project={project}\n                    globalObjectsContainer={globalObjectsContainer}\n                    objectsContainer={objectsContainer}\n                    onClose={() =>\n                      this.setState({\n                        serializedEventsToExtract: null,\n                      })\n                    }\n                    serializedEvents={this.state.serializedEventsToExtract}\n                    onCreate={(extensionName, eventsFunction) => {\n                      onCreateEventsFunction(extensionName, eventsFunction);\n                      this._replaceSelectionByEventsFunction(\n                        extensionName,\n                        eventsFunction\n                      );\n                      this.setState({\n                        serializedEventsToExtract: null,\n                      });\n                    }}\n                  />\n                )}\n                {this.state.textEditedEvent && (\n                  <EventTextDialog\n                    event={this.state.textEditedEvent}\n                    onApply={() => {\n                      this.closeEventTextDialog();\n                      this._saveChangesToHistory();\n                    }}\n                    onClose={this.closeEventTextDialog}\n                  />\n                )}\n                <DismissableInfoBar\n                  identifier=\"edit-instruction-explanation\"\n                  message={\n                    <Trans>\n                      Double click on a condition or action to edit it.\n                    </Trans>\n                  }\n                  touchScreenMessage={\n                    <Trans>\n                      Double tap a condition or action to edit it. Long press to\n                      show more options.\n                    </Trans>\n                  }\n                  show={hasInstructionSelected(this.state.selection)}\n                />\n              </div>\n            )}\n          </EventsSearcher>\n        )}\n      </ResponsiveWindowMeasurer>\n    );\n  }\n}\n\nexport type EventsSheetInterface = {|\n  updateToolbar: () => void,\n|};\n\n// EventsSheet is a wrapper so that the component can use multiple\n// context in class methods while correctly exposing the interface.\nconst EventsSheet = (props, ref) => {\n  React.useImperativeHandle(ref, () => ({\n    updateToolbar,\n  }));\n\n  const component = React.useRef<?EventsSheetComponentWithoutHandle>(null);\n  const updateToolbar = () => {\n    if (component.current) component.current.updateToolbar();\n  };\n\n  const authenticatedUser = React.useContext(AuthenticatedUserContext);\n  const preferences = React.useContext(PreferencesContext);\n  const leaderboardsManager = React.useContext(LeaderboardContext);\n  return (\n    <EventsSheetComponentWithoutHandle\n      ref={component}\n      authenticatedUser={authenticatedUser}\n      preferences={preferences}\n      leaderboardsManager={leaderboardsManager}\n      {...props}\n    />\n  );\n};\n\nexport default React.forwardRef<Props, EventsSheetInterface>(EventsSheet);\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  type ParameterInlineRenderer,\n  type ParameterInlineRendererProps,\n} from './ParameterFields/ParameterInlineRenderer.flow';\nimport DefaultField, {\n  renderInlineDefaultField,\n} from './ParameterFields/DefaultField';\nimport RelationalOperatorField, {\n  renderInlineRelationalOperator,\n} from './ParameterFields/RelationalOperatorField';\nimport OperatorField, {\n  renderInlineOperator,\n} from './ParameterFields/OperatorField';\nimport MouseField, { renderInlineMouse } from './ParameterFields/MouseField';\nimport KeyField, { renderInlineKey } from './ParameterFields/KeyField';\nimport ObjectField, {\n  renderInlineObjectWithThumbnail,\n} from './ParameterFields/ObjectField';\nimport YesNoField, { renderInlineYesNo } from './ParameterFields/YesNoField';\nimport TrueFalseField, {\n  renderInlineTrueFalse,\n} from './ParameterFields/TrueFalseField';\nimport ExpressionField from './ParameterFields/ExpressionField';\nimport StringField from './ParameterFields/StringField';\nimport StringWithSelectorField from './ParameterFields/StringWithSelectorField';\nimport BehaviorField from './ParameterFields/BehaviorField';\nimport SceneVariableField, {\n  renderInlineSceneVariable,\n} from './ParameterFields/SceneVariableField';\nimport GlobalVariableField, {\n  renderInlineGlobalVariable,\n} from './ParameterFields/GlobalVariableField';\nimport ObjectVariableField, {\n  renderInlineObjectVariable,\n} from './ParameterFields/ObjectVariableField';\nimport LayerField from './ParameterFields/LayerField';\nimport ImageResourceField from './ParameterFields/ImageResourceField';\nimport AudioResourceField from './ParameterFields/AudioResourceField';\nimport VideoResourceField from './ParameterFields/VideoResourceField';\nimport JsonResourceField from './ParameterFields/JsonResourceField';\nimport BitmapFontResourceField from './ParameterFields/BitmapFontResourceField';\nimport FontResourceField from './ParameterFields/FontResourceField';\nimport ColorExpressionField from './ParameterFields/ColorExpressionField';\nimport ForceMultiplierField, {\n  renderInlineForceMultiplier,\n} from './ParameterFields/ForceMultiplierField';\nimport SceneNameField from './ParameterFields/SceneNameField';\nimport LayerEffectNameField from './ParameterFields/LayerEffectNameField';\nimport LayerEffectParameterNameField from './ParameterFields/LayerEffectParameterNameField';\nimport ObjectEffectNameField from './ParameterFields/ObjectEffectNameField';\nimport ObjectEffectParameterNameField from './ParameterFields/ObjectEffectParameterNameField';\nimport ObjectPointNameField from './ParameterFields/ObjectPointNameField';\nimport ObjectAnimationNameField from './ParameterFields/ObjectAnimationNameField';\nimport FunctionParameterNameField from './ParameterFields/FunctionParameterNameField';\nimport ExternalLayoutNameField from './ParameterFields/ExternalLayoutNameField';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport LeaderboardIdField, {\n  renderInlineLeaderboardIdField,\n} from './ParameterFields/LeaderboardIdField';\nconst gd: libGDevelop = global.gd;\n\nconst components = {\n  default: DefaultField,\n  mouse: MouseField,\n  object: ObjectField,\n  relationalOperator: RelationalOperatorField,\n  operator: OperatorField,\n  yesorno: YesNoField,\n  trueorfalse: TrueFalseField,\n  expression: ExpressionField,\n  string: StringField,\n  stringWithSelector: StringWithSelectorField,\n  behavior: BehaviorField,\n  scenevar: SceneVariableField,\n  globalvar: GlobalVariableField,\n  objectvar: ObjectVariableField,\n  layer: LayerField,\n  key: KeyField,\n  file: DefaultField, //TODO\n  musicfile: AudioResourceField,\n  soundfile: AudioResourceField,\n  imageResource: ImageResourceField,\n  videoResource: VideoResourceField,\n  jsonResource: JsonResourceField,\n  bitmapFontResource: BitmapFontResourceField,\n  fontResource: FontResourceField,\n  color: ColorExpressionField,\n  police: DefaultField, //TODO\n  joyaxis: DefaultField, //TODO\n  forceMultiplier: ForceMultiplierField,\n  sceneName: SceneNameField,\n  layerEffectName: LayerEffectNameField,\n  layerEffectParameterName: LayerEffectParameterNameField,\n  objectEffectName: ObjectEffectNameField,\n  objectEffectParameterName: ObjectEffectParameterNameField,\n  objectPointName: ObjectPointNameField,\n  objectAnimationName: ObjectAnimationNameField,\n  functionParameterName: FunctionParameterNameField,\n  externalLayoutName: ExternalLayoutNameField,\n  leaderboardId: LeaderboardIdField,\n};\nconst inlineRenderers: { [string]: ParameterInlineRenderer } = {\n  default: renderInlineDefaultField,\n  forceMultiplier: renderInlineForceMultiplier,\n  globalvar: renderInlineGlobalVariable,\n  scenevar: renderInlineSceneVariable,\n  objectvar: renderInlineObjectVariable,\n  key: renderInlineKey,\n  mouse: renderInlineMouse,\n  object: renderInlineObjectWithThumbnail,\n  yesorno: renderInlineYesNo,\n  trueorfalse: renderInlineTrueFalse,\n  operator: renderInlineOperator,\n  relationalOperator: renderInlineRelationalOperator,\n  leaderboardId: renderInlineLeaderboardIdField,\n};\nconst userFriendlyTypeName: { [string]: MessageDescriptor } = {\n  mouse: t`Mouse button`,\n  object: t`Object`,\n  relationalOperator: t`Relational operator`,\n  operator: t`Operator`,\n  yesorno: t`Yes or No`,\n  trueorfalse: t`True or False`,\n  expression: t`Number`,\n  string: t`String`,\n  stringWithSelector: t`String`,\n  behavior: t`Behavior`,\n  scenevar: t`Scene variable`,\n  globalvar: t`Global variable`,\n  objectvar: t`Object variable`,\n  layer: t`Layer`,\n  key: t`Keyboard key`,\n  musicfile: t`Audio resource`,\n  soundfile: t`Audio resource`,\n  imageResource: t`Image resource`,\n  videoResource: t`Video resource`,\n  bitmapFontResource: t`Bitmap font resource`,\n  fontResource: t`Font resource`,\n  jsonResource: t`JSON resource`,\n  color: t`Color`,\n  forceMultiplier: t`Instant or permanent force`,\n  sceneName: t`Scene name`,\n  layerEffectName: t`Layer effect name`,\n  layerEffectParameterName: t`Layer effect parameter name`,\n  objectEffectName: t`Object effect name`,\n  objectEffectParameterName: t`Object effect parameter name`,\n  objectPointName: t`Object point name`,\n  objectAnimationName: t`Object animation name`,\n  functionParameterName: t`Parameter name`,\n  externalLayoutName: t`Name of the external layout`,\n};\n\nexport default {\n  components,\n  getParameterComponent: (rawType: string) => {\n    const fieldType = gd.ParameterMetadata.isObject(rawType)\n      ? 'object'\n      : rawType;\n\n    if (components.hasOwnProperty(fieldType)) return components[fieldType];\n    else return components.default;\n  },\n  renderInlineParameter: (props: ParameterInlineRendererProps): React.Node => {\n    const rawType = props.parameterMetadata.getType();\n    const fieldType = gd.ParameterMetadata.isObject(rawType)\n      ? 'object'\n      : rawType;\n\n    const inlineRenderer =\n      inlineRenderers[fieldType] || inlineRenderers.default;\n    return inlineRenderer(props);\n  },\n  getUserFriendlyTypeName: (rawType: string): ?MessageDescriptor => {\n    const fieldType = gd.ParameterMetadata.isObject(rawType)\n      ? 'object'\n      : rawType;\n\n    return userFriendlyTypeName[fieldType] || null;\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport ObjectSelector from '../../ObjectsList/ObjectSelector';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport { Trans } from '@lingui/macro';\nimport { nameAndIconContainer } from '../EventsTree/ClassNames';\n\nexport default class ObjectField extends React.Component<\n  ParameterFieldProps,\n  {||}\n> {\n  _description: ?string;\n  _longDescription: ?string;\n  _allowedObjectType: ?string;\n  _field: ?ObjectSelector;\n\n  constructor(props: ParameterFieldProps) {\n    super(props);\n\n    const { parameterMetadata } = this.props;\n\n    this._description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    this._longDescription = parameterMetadata\n      ? parameterMetadata.getLongDescription()\n      : undefined;\n\n    this._allowedObjectType = parameterMetadata\n      ? parameterMetadata.getExtraInfo()\n      : undefined;\n  }\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  render() {\n    return (\n      <ObjectSelector\n        margin={this.props.isInline ? 'none' : 'dense'}\n        project={this.props.project}\n        value={this.props.value}\n        onChange={this.props.onChange}\n        onRequestClose={this.props.onRequestClose}\n        onApply={this.props.onApply}\n        allowedObjectType={this._allowedObjectType}\n        requiredObjectCapability={\n          // Some instructions apply to all objects BUT not some objects\n          // lacking a specific capability usually offered by all objects.\n          this.props.instructionMetadata\n            ? this.props.instructionMetadata.getRequiredBaseObjectCapability()\n            : this.props.expressionMetadata\n            ? this.props.expressionMetadata.getRequiredBaseObjectCapability()\n            : undefined\n        }\n        globalObjectsContainer={this.props.globalObjectsContainer}\n        objectsContainer={this.props.objectsContainer}\n        floatingLabelText={this._description}\n        helperMarkdownText={this._longDescription}\n        id={\n          this.props.parameterIndex !== undefined\n            ? `parameter-${this.props.parameterIndex}-object-selector`\n            : undefined\n        }\n        fullWidth\n        errorTextIfInvalid={\n          this._allowedObjectType ? (\n            <Trans>The object does not exist or can't be used here.</Trans>\n          ) : (\n            <Trans>Enter the name of an object.</Trans>\n          )\n        }\n        openOnFocus={\n          !this.props\n            .value /* Only force showing the list if no object is entered, see https://github.com/4ian/GDevelop/issues/859 */\n        }\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n\nexport const renderInlineObjectWithThumbnail = ({\n  value,\n  parameterMetadata,\n  renderObjectThumbnail,\n  MissingParameterValue,\n}: ParameterInlineRendererProps) => {\n  if (!value && !parameterMetadata.isOptional()) {\n    return <MissingParameterValue />;\n  }\n\n  return (\n    <span\n      title={value}\n      className={classNames({\n        [nameAndIconContainer]: true,\n      })}\n    >\n      {renderObjectThumbnail(value)}\n      {value}\n    </span>\n  );\n};\n","// @flow\nimport slugs from 'slugs';\nimport axios from 'axios';\nimport * as PIXI from 'pixi.js-legacy';\nimport ResourcesLoader from '../ResourcesLoader';\nimport { loadFontFace } from '../Utils/FontFaceLoader';\nconst gd: libGDevelop = global.gd;\n\nconst loadedBitmapFonts = {};\nconst loadedFontFamilies = {};\nconst loadedTextures = {};\nconst invalidTexture = PIXI.Texture.from('res/error48.png');\n\n/**\n * Expose functions to load PIXI textures or fonts, given the names of\n * resources and a gd.Project.\n *\n * This internally uses ResourcesLoader to get the URL of the resources.\n */\nexport default class PixiResourcesLoader {\n  static _initializeTexture(resource: gdResource, texture: any) {\n    if (resource.getKind() !== 'image') return;\n\n    const imageResource = gd.asImageResource(resource);\n    if (!imageResource.isSmooth()) {\n      texture.baseTexture.scaleMode = PIXI.SCALE_MODES.NEAREST;\n    }\n  }\n\n  /**\n   * (Re)load the PIXI texture represented by the given resources.\n   */\n  static loadTextures(\n    project: gdProject,\n    resourceNames: Array<string>,\n    onProgress: (number, number) => void,\n    onComplete: () => void\n  ) {\n    const resourcesManager = project.getResourcesManager();\n    const loader = PIXI.Loader.shared;\n    loader.reset();\n\n    const allResources = {};\n    resourceNames.forEach(resourceName => {\n      if (!resourcesManager.hasResource(resourceName)) return;\n\n      const resource = resourcesManager.getResource(resourceName);\n      const filename = ResourcesLoader.getResourceFullUrl(\n        project,\n        resourceName,\n        {\n          isResourceForPixi: true,\n        }\n      );\n      loader.add(resourceName, filename);\n      allResources[resourceName] = resource;\n    });\n\n    const totalCount = Object.keys(allResources).length;\n    if (!totalCount) {\n      onComplete();\n      return;\n    }\n\n    let loadingCount = 0;\n    const progressCallbackId = loader.onProgress.add(function() {\n      loadingCount++;\n      onProgress(loadingCount, totalCount);\n    });\n\n    loader.load((loader, loadedResources) => {\n      loader.onProgress.detach(progressCallbackId);\n\n      //Store the loaded textures so that they are ready to use.\n      for (const resourceName in loadedResources) {\n        if (loadedResources.hasOwnProperty(resourceName)) {\n          const resource = resourcesManager.getResource(resourceName);\n          if (resource.getKind() !== 'image') continue;\n\n          loadedTextures[resourceName] = loadedResources[resourceName].texture;\n          PixiResourcesLoader._initializeTexture(\n            resource,\n            loadedTextures[resourceName]\n          );\n        }\n      }\n\n      onComplete();\n    });\n  }\n\n  /**\n   * Return the PIXI texture represented by the given resource.\n   * If not loaded, it will load it.\n   * @returns The PIXI.Texture to be used. It can be loading, so you\n   * should listen to PIXI.Texture `update` event, and refresh your object\n   * if this event is triggered.\n   */\n  static getPIXITexture(project: gdProject, resourceName: string) {\n    if (loadedTextures[resourceName]) {\n      // TODO: we never consider textures as not valid anymore. When we\n      // update the IDE to unload textures, we should handle loading them again\n      // here (and also be careful to return the same texture if it's not valid\n      // but still loading, when multiple objects are rapidly asking for the same texture).\n      return loadedTextures[resourceName];\n    }\n\n    if (!project.getResourcesManager().hasResource(resourceName))\n      return invalidTexture;\n\n    const resource = project.getResourcesManager().getResource(resourceName);\n    if (resource.getKind() !== 'image') return invalidTexture;\n\n    loadedTextures[resourceName] = PIXI.Texture.from(\n      ResourcesLoader.getResourceFullUrl(project, resourceName, {\n        isResourceForPixi: true,\n      })\n    );\n\n    PixiResourcesLoader._initializeTexture(\n      resource,\n      loadedTextures[resourceName]\n    );\n    return loadedTextures[resourceName];\n  }\n\n  /**\n   * Return the PIXI video texture represented by the given resource.\n   * If not loaded, it will load it.\n   * @returns The PIXI.Texture to be used. It can be loading, so you\n   * should listen to PIXI.Texture `update` event, and refresh your object\n   * if this event is triggered.\n   */\n  static getPIXIVideoTexture(project: gdProject, resourceName: string) {\n    if (loadedTextures[resourceName]) {\n      // TODO: we never consider textures as not valid anymore. When we\n      // update the IDE to unload textures, we should handle loading them again\n      // here (and also be careful to return the same texture if it's not valid\n      // but still loading, when multiple objects are rapidly asking for the same texture).\n      return loadedTextures[resourceName];\n    }\n\n    if (!project.getResourcesManager().hasResource(resourceName))\n      return invalidTexture;\n\n    const resource = project.getResourcesManager().getResource(resourceName);\n    if (resource.getKind() !== 'video') return invalidTexture;\n\n    loadedTextures[resourceName] = PIXI.Texture.from(\n      ResourcesLoader.getResourceFullUrl(project, resourceName, {\n        disableCacheBurst: true, // Disable cache bursting for video because it prevent the video to be recognized as such (for a local file)\n        isResourceForPixi: true,\n      }),\n      {\n        scaleMode: PIXI.SCALE_MODES.LINEAR,\n        resourceOptions: {\n          autoPlay: false,\n        },\n      }\n    );\n\n    return loadedTextures[resourceName];\n  }\n\n  /**\n   * Load the given font from its url/filename.\n   * @returns a Promise that resolves with the font-family to be used\n   * to render a text with the font.\n   */\n  static loadFontFamily(\n    project: gdProject,\n    resourceName: string\n  ): Promise<string> {\n    // Avoid reloading a font if it's already cached\n    if (loadedFontFamilies[resourceName]) {\n      return Promise.resolve(loadedFontFamilies[resourceName]);\n    }\n\n    const fontFamily = slugs(resourceName);\n    let fullFilename = null;\n    if (project.getResourcesManager().hasResource(resourceName)) {\n      const resource = project.getResourcesManager().getResource(resourceName);\n      if (resource.getKind() === 'font') {\n        fullFilename = ResourcesLoader.getResourceFullUrl(\n          project,\n          resourceName,\n          {\n            isResourceForPixi: true,\n          }\n        );\n      }\n    } else {\n      // Compatibility with GD <= 5.0-beta56\n      // Assume resourceName is just the filename to the font\n      fullFilename = ResourcesLoader.getFullUrl(project, resourceName, {\n        isResourceForPixi: true,\n      });\n      // end of compatibility code\n    }\n\n    if (!fullFilename) {\n      // If no resource is found/resource is not a font, default to Arial,\n      // as done by the game engine too.\n      return Promise.resolve('Arial');\n    }\n\n    return loadFontFace(fontFamily, `url(\"${fullFilename}\")`, {}).then(\n      loadedFace => {\n        loadedFontFamilies[resourceName] = fontFamily;\n\n        return fontFamily;\n      }\n    );\n  }\n\n  /**\n   * Get the font family name for the given font resource.\n   * The font won't be loaded.\n   * @returns The font-family to be used to render a text with the font.\n   */\n  static getFontFamily(project: gdProject, resourceName: string) {\n    if (loadedFontFamilies[resourceName]) {\n      return loadedFontFamilies[resourceName];\n    }\n\n    const fontFamily = slugs(resourceName);\n    return fontFamily;\n  }\n\n  /**\n   * Get the data from a bitmap font file (fnt/xml) resource in the IDE.\n   */\n  static getBitmapFontData(\n    project: gdProject,\n    resourceName: string\n  ): Promise<any> {\n    if (loadedBitmapFonts[resourceName]) {\n      return Promise.resolve(loadedBitmapFonts[resourceName].data);\n    }\n\n    if (!project.getResourcesManager().hasResource(resourceName))\n      return Promise.reject(\n        new Error(`Can't find resource called ${resourceName}.`)\n      );\n\n    const resource = project.getResourcesManager().getResource(resourceName);\n    if (resource.getKind() !== 'bitmapFont')\n      return Promise.reject(\n        new Error(\n          `The resource called ${resourceName} is not a bitmap font file. Require .fnt or .xml format.`\n        )\n      );\n\n    const fullUrl = ResourcesLoader.getResourceFullUrl(project, resourceName, {\n      isResourceForPixi: true,\n    });\n    if (!fullUrl) {\n      return Promise.reject(\n        new Error(\n          `The resource called ${resourceName} was no found.\\nThe default bitmap font will be used.`\n        )\n      );\n    }\n\n    return axios.get(fullUrl).then(response => {\n      loadedBitmapFonts[resourceName] = response;\n      return response.data;\n    });\n  }\n\n  static getInvalidPIXITexture() {\n    return invalidTexture;\n  }\n\n  /**\n   * Get the data from a json resource in the IDE.\n   */\n  static getResourceJsonData(\n    project: gdProject,\n    resourceName: string\n  ): Promise<any> {\n    if (!project.getResourcesManager().hasResource(resourceName))\n      return Promise.reject(\n        new Error(`Can't find resource called ${resourceName}.`)\n      );\n\n    const resource = project.getResourcesManager().getResource(resourceName);\n    if (resource.getKind() !== 'json')\n      return Promise.reject(\n        new Error(`The resource called ${resourceName} is not a json file.`)\n      );\n\n    const fullUrl = ResourcesLoader.getResourceFullUrl(project, resourceName, {\n      isResourceForPixi: true,\n    });\n    return axios.get(fullUrl).then(response => response.data);\n  }\n}\n","// @flow\nimport ReactDOM from 'react-dom';\nimport RaisedButton from './RaisedButton';\n\n// If you're searching for button components,\n// take a look at FlatButton or RaisedButton.\n\n/**\n * Focus a button. This won't display the material-ui Ripple effect\n * but is still better than nothing.\n */\nexport const focusButton = (buttonRef: { current: null | RaisedButton }) => {\n  if (buttonRef && buttonRef.current) {\n    const element = ReactDOM.findDOMNode(buttonRef.current);\n    if (element instanceof HTMLButtonElement) {\n      element.focus();\n    } else if (element instanceof HTMLElement) {\n      const children = element.getElementsByTagName('button');\n      if (\n        children &&\n        children.length &&\n        children[0] instanceof HTMLButtonElement\n      ) {\n        children[0].focus();\n      }\n    }\n  }\n};\n","//@flow\nimport { type EnumeratedInstructionOrExpressionMetadata } from '../../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\nimport { type ParameterValues } from './ExpressionParametersEditorDialog';\nimport { mapVector } from '../../../Utils/MapFor';\n\nconst filterOutCodeOnlyParameters = (\n  array: Array<string>,\n  expressionMetadata: gdExpressionMetadata | gdInstructionMetadata,\n  firstParameterIndex: number\n) => {\n  const parametersCount = expressionMetadata.getParametersCount();\n\n  return array.filter((parameter, index) => {\n    if (index < firstParameterIndex) return false;\n\n    return (\n      index < parametersCount &&\n      !expressionMetadata.getParameter(index).isCodeOnly()\n    );\n  });\n};\n\nconst filterVisibleParameters = (\n  array: Array<string>,\n  expressionMetadata: gdExpressionMetadata | gdInstructionMetadata,\n  firstParameterIndex: number\n) => {\n  let lastRequiredIndex = -1;\n  let lastProvidedIndex = -1;\n\n  const arrayWithDefaults = array.map((parameter, index) => {\n    const metadata = expressionMetadata.getParameter(index);\n\n    if (!metadata.isOptional()) {\n      lastRequiredIndex = index;\n    }\n\n    if (parameter.length > 0) {\n      lastProvidedIndex = index;\n      return parameter;\n    } else {\n      // Fill default values for intermediate parameters so that the user doesn't have to.\n      return metadata.getDefaultValue();\n    }\n  });\n\n  const lastParameterIndex = Math.max(lastRequiredIndex, lastProvidedIndex, 0);\n\n  return arrayWithDefaults.filter(\n    (parameter, index) =>\n      firstParameterIndex <= index &&\n      index <= lastParameterIndex &&\n      !expressionMetadata.getParameter(index).isCodeOnly()\n  );\n};\n\nexport const getVisibleParameterTypes = (\n  expressionMetadata: EnumeratedInstructionOrExpressionMetadata\n): Array<string> => {\n  const parameterTypes: Array<string> = mapVector(\n    expressionMetadata.metadata.getParameters(),\n    parameterMetadata => parameterMetadata.getType()\n  );\n\n  if (expressionMetadata.scope.objectMetadata) {\n    return filterOutCodeOnlyParameters(\n      parameterTypes,\n      expressionMetadata.metadata,\n      1\n    );\n  } else if (expressionMetadata.scope.behaviorMetadata) {\n    return filterOutCodeOnlyParameters(\n      parameterTypes,\n      expressionMetadata.metadata,\n      2\n    );\n  } else {\n    return filterOutCodeOnlyParameters(\n      parameterTypes,\n      expressionMetadata.metadata,\n      0\n    );\n  }\n};\n\nexport const formatExpressionCall = (\n  expressionInfo: EnumeratedInstructionOrExpressionMetadata,\n  parameterValues: ParameterValues\n): string => {\n  const functionName = expressionInfo.name || '';\n\n  if (expressionInfo.scope.objectMetadata) {\n    const objectName = parameterValues[0];\n\n    const functionArgs = filterVisibleParameters(\n      parameterValues,\n      expressionInfo.metadata,\n      1\n    ).join(', ');\n    return `${objectName}.${functionName}(${functionArgs})`;\n  } else if (expressionInfo.scope.behaviorMetadata) {\n    const objectName = parameterValues[0];\n    const behaviorName = parameterValues[1];\n\n    const functionArgs = filterVisibleParameters(\n      parameterValues,\n      expressionInfo.metadata,\n      2\n    ).join(', ');\n    return `${objectName}.${behaviorName}::${functionName}(${functionArgs})`;\n  } else {\n    const functionArgs = filterVisibleParameters(\n      parameterValues,\n      expressionInfo.metadata,\n      0\n    ).join(', ');\n    return `${functionName}(${functionArgs})`;\n  }\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport React, { Component } from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { enumerateVariables } from './EnumerateVariables';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport classNames from 'classnames';\nimport {\n  icon,\n  nameAndIconContainer,\n  instructionWarningParameter,\n} from '../EventsTree/ClassNames';\nimport SemiControlledAutoComplete, {\n  type SemiControlledAutoCompleteInterface,\n  type DataSource,\n} from '../../UI/SemiControlledAutoComplete';\nimport { TextFieldWithButtonLayout } from '../../UI/Layout';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport PreferencesContext from '../../MainFrame/Preferences/PreferencesContext';\nimport uniq from 'lodash/uniq';\n\ntype Props = {\n  ...ParameterFieldProps,\n  variablesContainer: ?gdVariablesContainer,\n  onComputeAllVariableNames: () => Array<string>,\n  onOpenDialog: ?() => void,\n};\n\ntype State = {|\n  autocompletionVariableNames: DataSource,\n|};\n\ntype VariableNameQuickAnalyzeResult = 0 | 1 | 2 | 3;\n\nexport const VariableNameQuickAnalyzeResults = {\n  OK: 0,\n  WRONG_QUOTE: 1,\n  WRONG_SPACE: 2,\n  WRONG_EXPRESSION: 3,\n};\n\nexport const quicklyAnalyzeVariableName = (\n  name: string\n): VariableNameQuickAnalyzeResult => {\n  for (let i = 0; i < name.length; ++i) {\n    const character = name[i];\n    if (character === '[') {\n      // This probably starts an expression, so stop the analysis.\n      return VariableNameQuickAnalyzeResults.OK;\n    } else if (character === ' ') {\n      return VariableNameQuickAnalyzeResults.WRONG_SPACE;\n    } else if (character === '\"') {\n      return VariableNameQuickAnalyzeResults.WRONG_QUOTE;\n    } else if (\n      character === '(' ||\n      character === '+' ||\n      character === '-' ||\n      character === '/' ||\n      character === '*'\n    ) {\n      return VariableNameQuickAnalyzeResults.WRONG_EXPRESSION;\n    }\n  }\n\n  return VariableNameQuickAnalyzeResults.OK;\n};\n\nexport default class VariableField extends Component<Props, State> {\n  _field: ?SemiControlledAutoCompleteInterface;\n\n  static contextType = PreferencesContext;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      autocompletionVariableNames: [],\n    };\n  }\n\n  componentDidMount() {\n    this.updateAutocompletions();\n  }\n\n  /**\n   * Can be called to set up or force updating the variables list.\n   */\n  updateAutocompletions() {\n    const definedVariableNames = enumerateVariables(\n      this.props.variablesContainer\n    )\n      .map(({ name, isValidName }) =>\n        isValidName\n          ? name\n          : // Hide invalid variable names - they would not\n            // be parsed correctly anyway.\n            null\n      )\n      .filter(Boolean);\n    const preferences = this.context;\n    const autocompletionVariableNames = preferences.values\n      .useUndefinedVariablesInAutocompletion\n      ? uniq([\n          ...definedVariableNames,\n          ...this.props.onComputeAllVariableNames(),\n        ])\n      : definedVariableNames;\n    this.setState({\n      autocompletionVariableNames: autocompletionVariableNames.map(name => ({\n        text: name,\n        value: name,\n      })),\n    });\n  }\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  render() {\n    const {\n      value,\n      onChange,\n      isInline,\n      onOpenDialog,\n      parameterMetadata,\n      onRequestClose,\n      onApply,\n    } = this.props;\n\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    const quicklyAnalysisResult = quicklyAnalyzeVariableName(value);\n\n    const errorText =\n      quicklyAnalysisResult === VariableNameQuickAnalyzeResults.WRONG_QUOTE ? (\n        <Trans>\n          It seems you entered a name with a quote. Variable names should not be\n          quoted.\n        </Trans>\n      ) : quicklyAnalysisResult ===\n        VariableNameQuickAnalyzeResults.WRONG_SPACE ? (\n        <Trans>\n          The variable name contains a space - this is not recommended. Prefer\n          to use underscores or uppercase letters to separate words.\n        </Trans>\n      ) : quicklyAnalysisResult ===\n        VariableNameQuickAnalyzeResults.WRONG_EXPRESSION ? (\n        <Trans>\n          The variable name looks like you're building an expression or a\n          formula. You can only use this for structure or arrays. For example:\n          Score[3].\n        </Trans>\n      ) : null;\n\n    return (\n      <TextFieldWithButtonLayout\n        renderTextField={() => (\n          <SemiControlledAutoComplete\n            margin={this.props.isInline ? 'none' : 'dense'}\n            floatingLabelText={description}\n            helperMarkdownText={\n              parameterMetadata\n                ? parameterMetadata.getLongDescription()\n                : undefined\n            }\n            errorText={errorText}\n            fullWidth\n            value={value}\n            onChange={onChange}\n            onRequestClose={onRequestClose}\n            onApply={onApply}\n            dataSource={this.state.autocompletionVariableNames}\n            openOnFocus={!isInline}\n            ref={field => (this._field = field)}\n          />\n        )}\n        renderButton={style =>\n          onOpenDialog && !isInline ? (\n            <RaisedButton\n              icon={<OpenInNew />}\n              disabled={!this.props.variablesContainer}\n              primary\n              style={style}\n              onClick={onOpenDialog}\n            />\n          ) : null\n        }\n      />\n    );\n  }\n}\n\nexport const renderVariableWithIcon = (\n  {\n    value,\n    parameterMetadata,\n    MissingParameterValue,\n  }: ParameterInlineRendererProps,\n  iconPath: string,\n  tooltip: string\n) => {\n  if (!value && !parameterMetadata.isOptional()) {\n    return <MissingParameterValue />;\n  }\n\n  return (\n    <span\n      title={tooltip}\n      className={classNames({\n        [nameAndIconContainer]: true,\n        [instructionWarningParameter]:\n          quicklyAnalyzeVariableName(value) !==\n          VariableNameQuickAnalyzeResults.OK,\n      })}\n    >\n      <img\n        className={classNames({\n          [icon]: true,\n        })}\n        src={iconPath}\n        alt=\"\"\n      />\n      {value}\n    </span>\n  );\n};\n","// @flow\nimport { mapFor } from '../Utils/MapFor';\nimport { type Schema } from '../PropertiesEditor';\nimport { type ResourceKind } from '../ResourcesList/ResourceSource';\nimport flatten from 'lodash/flatten';\n\nexport type EnumeratedEffectMetadata = {|\n  extension: gdPlatformExtension,\n  effectMetadata: gdEffectMetadata,\n  type: string,\n  fullName: string,\n  description: string,\n  parametersSchema: Schema,\n  isMarkedAsNotWorkingForObjects: boolean,\n|};\n\n/**\n * Fetch all the effects available for a project, and convert them\n * to a format easier to use.\n */\nexport const enumerateEffectsMetadata = (\n  project: gdProject\n): Array<EnumeratedEffectMetadata> => {\n  const platform = project.getCurrentPlatform();\n  const extensionsList = platform.getAllPlatformExtensions();\n\n  return flatten(\n    mapFor(0, extensionsList.size(), i => {\n      const extension = extensionsList.at(i);\n\n      return extension\n        .getExtensionEffectTypes()\n        .toJSArray()\n        .map(type => extension.getEffectMetadata(type))\n        .map((effectMetadata: gdEffectMetadata) => {\n          const effectType = effectMetadata.getType();\n\n          // Convert the effect type properties to a PropertiesEditor Schema.\n          const properties = effectMetadata.getProperties();\n          const parameterNames = properties.keys().toJSArray();\n          const parametersSchema: Schema = parameterNames\n            .map((parameterName: string) => {\n              const property = properties.get(parameterName);\n              const valueType = property.getType().toLowerCase();\n              const propertyLabel = property.getLabel();\n              const propertyDescription = property.getDescription();\n              const getLabel = () => propertyLabel;\n              const getDescription = () => propertyDescription;\n              const getExtraDescription = () => parameterName;\n\n              if (valueType === 'number') {\n                return {\n                  name: parameterName,\n                  valueType: 'number',\n                  getValue: (effect: gdEffect) =>\n                    effect.getDoubleParameter(parameterName),\n                  setValue: (effect: gdEffect, newValue: number) =>\n                    effect.setDoubleParameter(parameterName, newValue),\n                  getLabel,\n                  getDescription,\n                  getExtraDescription,\n                };\n              } else if (valueType === 'boolean') {\n                return {\n                  name: parameterName,\n                  valueType: 'boolean',\n                  getValue: (effect: gdEffect) =>\n                    effect.getBooleanParameter(parameterName),\n                  setValue: (effect: gdEffect, newValue: boolean) =>\n                    effect.setBooleanParameter(parameterName, newValue),\n                  getLabel,\n                  getDescription,\n                  getExtraDescription,\n                };\n              } else if (valueType === 'resource') {\n                // Resource is a \"string\" (with a selector in the UI)\n                const kind: ResourceKind =\n                  // $FlowFixMe - assume the passed resource kind is always valid.\n                  property.getExtraInfo().toJSArray()[0] || '';\n                return {\n                  name: parameterName,\n                  valueType: 'resource',\n                  resourceKind: kind,\n                  getValue: (effect: gdEffect) =>\n                    effect.getStringParameter(parameterName),\n                  setValue: (effect: gdEffect, newValue: string) =>\n                    effect.setStringParameter(parameterName, newValue),\n                  getLabel,\n                  getDescription,\n                  getExtraDescription,\n                };\n              } else if (valueType === 'color') {\n                return {\n                  name: parameterName,\n                  valueType: 'color',\n                  getValue: (effect: gdEffect) =>\n                    effect.getStringParameter(parameterName),\n                  setValue: (effect: gdEffect, newValue: string) =>\n                    effect.setStringParameter(parameterName, newValue),\n                  getLabel,\n                  getDescription,\n                  getExtraDescription,\n                };\n              } else {\n                console.error(\n                  `A property with type=${valueType} could not be mapped to a field for effect ${effectType}. Ensure that this type is correct.`\n                );\n                return null;\n              }\n            })\n            .filter(Boolean);\n\n          return {\n            extension,\n            type: effectType,\n            effectMetadata,\n            fullName: effectMetadata.getFullName(),\n            description: effectMetadata.getDescription(),\n            isMarkedAsNotWorkingForObjects: effectMetadata.isMarkedAsNotWorkingForObjects(),\n            parametersSchema,\n          };\n        });\n    })\n  ).sort(\n    (\n      enumeratedEffectMetadata1: EnumeratedEffectMetadata,\n      enumeratedEffectMetadata2: EnumeratedEffectMetadata\n    ) => {\n      return enumeratedEffectMetadata1.fullName.localeCompare(\n        enumeratedEffectMetadata2.fullName\n      );\n    }\n  );\n};\n\nexport const enumerateEffectNames = (\n  effectsContainer: gdEffectsContainer\n): Array<string> => {\n  return mapFor(0, effectsContainer.getEffectsCount(), (i: number) => {\n    const effect: gdEffect = effectsContainer.getEffectAt(i);\n    return effect.getName();\n  });\n};\n\nexport const setEffectDefaultParameters = (\n  effect: gdEffect,\n  effectMetadata: gdEffectMetadata\n) => {\n  effect.clearParameters();\n\n  const properties = effectMetadata.getProperties();\n  const parameterNames = properties.keys().toJSArray();\n  parameterNames.forEach((parameterName: string) => {\n    const property = properties.get(parameterName);\n    const valueType = property.getType().toLowerCase();\n\n    if (valueType === 'number') {\n      effect.setDoubleParameter(\n        parameterName,\n        parseFloat(property.getValue()) || 0\n      );\n    } else if (valueType === 'boolean') {\n      effect.setBooleanParameter(parameterName, property.getValue() === 'true');\n    } else {\n      effect.setStringParameter(parameterName, property.getValue());\n    }\n  });\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport { type AlertMessageIdentifier } from '../MainFrame/Preferences/PreferencesContext';\n\nexport type Hint = {|\n  kind: 'warning' | 'info',\n  message: MessageDescriptor,\n  identifier?: AlertMessageIdentifier,\n|};\n\nexport const getDeprecatedBehaviorsInformation = (): {\n  [string]: {| warning: MessageDescriptor |},\n} => ({\n  'PhysicsBehavior::PhysicsBehavior': {\n    warning: t`A new physics engine (Physics Engine 2.0) is now available. You should prefer using it for new game. For existing games, note that the two behaviors are not compatible, so you should only use one of them with your objects.`,\n  },\n});\n\nexport const getExtraObjectsInformation = (): {\n  [string]: Array<Hint>,\n} => ({\n  'Video::VideoObject': [\n    {\n      kind: 'warning',\n      message: t`Most browsers will require the user to have interacted with your game before allowing any video to play. Make sure that the player click/touch the screen at the beginning of the game before starting any video.`,\n    },\n    {\n      kind: 'warning',\n      message: t`For a given video resource, only one video will be played in memory and displayed. If you put this object multiple times on the scene, all the instances will be displaying the exact same video (with the same timing and paused/played/stopped state).`,\n    },\n    {\n      kind: 'info',\n      message: t`Video format supported can vary according to devices and browsers. For maximum compatibility, use H.264/mp4 file format (and AAC for audio).`,\n    },\n  ],\n  'BitmapText::BitmapTextObject': [\n    {\n      kind: 'warning',\n      message: t`This object is experimental and not yet complete. It might have bugs or incomplete support in GDevelop, be sure to read the wiki by clicking on help button below.`,\n    },\n    {\n      kind: 'info',\n      message: t`For a pixel type font, you must disable the Smooth checkbox related to your texture in the game resources to disable anti-aliasing.`,\n    },\n    {\n      kind: 'info',\n      message: t`The font size is stored directly inside the font. If you want to change it, export again your font using an external editor like bmFont. Click on the help button to learn more.`,\n    },\n  ],\n  'TileMap::TileMap': [\n    {\n      kind: 'info',\n      message: t`The tilemap must be designed in a separated program, Tiled, that can be downloaded on mapeditor.org. Save your map as a JSON file, then select here the Atlas image that you used and the Tile map JSON file.`,\n    },\n  ],\n  'TextInput::TextInputObject': [\n    {\n      kind: 'warning',\n      message: t`The text input will be always shown on top of all other objects in the game - this is a limitation that can't be changed. According to the platform/device or browser running the game, the appearance can also slightly change.`,\n    },\n  ],\n});\n\nexport const getExtraInstructionInformation = (type: string): ?Hint => {\n  if (type.indexOf('PhysicsBehavior::') === 0) {\n    return {\n      kind: 'warning',\n      message: t`This action is deprecated and should not be used anymore. Instead,\n  use for all your objects the behavior called \"Physics2\" and the\n  associated actions (in this case, all objects must be set up to use\n  Physics2, you can't mix the behaviors).`,\n    };\n  }\n  if (type.startsWith('BoundingBox')) {\n    return {\n      kind: 'info',\n      message: t`The bounding box is an imaginary rectangle surrounding the object collision mask. Even if the object X and Y positions are not changed, this rectangle can change if the object is rotated or if an animation is being played. Usually you should use actions and conditions related to the object position or center, but the bounding box can be useful to deal with the area of the object.`,\n    };\n  }\n  if (type === 'PickedInstancesCount') {\n    return {\n      kind: 'info',\n      message: t`If no previous condition or action used the specified object(s), the picked instances count will be 0.`,\n    };\n  }\n  if (type === 'CompareTimer') {\n    return {\n      kind: 'info',\n      message: t`To start a timer, don't forget to use the action \"Start (or reset) a scene timer\" in another event.`,\n    };\n  }\n  if (type === 'CompareObjectTimer') {\n    return {\n      kind: 'info',\n      message: t`To start a timer, don't forget to use the action \"Start (or reset) an object timer\" in another event.`,\n    };\n  }\n  if (type === 'FixCamera') {\n    return {\n      kind: 'info',\n      message: t`Please prefer using the new action \"Enforce camera boundaries\" which is more flexible.`,\n    };\n  }\n  if (type === 'BitmapText::Scale') {\n    return {\n      kind: 'info',\n      message: t`A scale under 1 on a Bitmap text object can downgrade the quality text, prefer to remake a bitmap font smaller in the external bmFont editor.`,\n    };\n  }\n  if (type === 'TextObject::Text::SetFontSize') {\n    return {\n      kind: 'warning',\n      message: t`This action will create a new texture and re-render the text each time it is called, which is expensive and can reduce performances. Prefer to avoid changing a lot the character size of a text.`,\n    };\n  }\n  if (type === 'PlayMusicCanal' || type === 'PlayMusic') {\n    return {\n      kind: 'warning',\n      message: t`Musics will only be played if the user has interacted with the game before (by clicking/touching it or pressing a key on the keyboard). This is due to browser limitations. Make sure to have the user interact with the game before using this action.`,\n    };\n  }\n  if (type === 'P2P::OnEvent') {\n    return {\n      kind: 'info',\n      message: t`Read the wiki page for more info about the dataloss mode.`,\n    };\n  }\n  if (type === 'PlatformBehavior::IsObjectOnGivenFloor') {\n    return {\n      kind: 'info',\n      message: t`This condition may have unexpected results when the object is on different floors at the same time, due to the fact that the engine only considers the first floor the object comes into contact with.`,\n    };\n  }\n  if (type === 'P2P::OverrideID') {\n    return {\n      kind: 'warning',\n      message: t`Overriding the ID may have unwanted consequences. Do not use this feature unless you really know what you are doing.`,\n    };\n  }\n  if (type.indexOf('P2P::') === 0) {\n    return {\n      kind: 'warning',\n      message: t`It is recommended to use your own custom broker server. Read the wiki page for more info.`,\n      identifier: 'p2p-broker-recommendation',\n    };\n  }\n  if (type === 'SystemInfo::IsMobile') {\n    return {\n      kind: 'warning',\n      message: t`Note that the distinction between what is a mobile device and what is not is becoming blurry (with devices like iPad pro and other \"desktop-class\" tablets). If you use this for mobile controls, prefer to check if the device has touchscreen support.`,\n    };\n  }\n  if (\n    type === 'AdvancedWindow::SetClosable' ||\n    type === 'AdvancedWindow::EnableWindow' ||\n    type === 'AdvancedWindow::Show' ||\n    type === 'AdvancedWindow::SetFocusable' ||\n    type === 'AdvancedWindow::Focus'\n  ) {\n    return {\n      kind: 'warning',\n      message: t`Be careful with this action, you may have problems exiting the preview if you don't add a way to toggle it back.`,\n    };\n  }\n  if (type === 'GetArgumentAsBoolean') {\n    return {\n      kind: 'info',\n      message: t`If the parameter is a string or a number, you probably want to use the expressions \"GetArgumentAsString\" or \"GetArgumentAsNumber\", along with the conditions \"Compare two strings\" or \"Compare two numbers\".`,\n    };\n  }\n\n  return null;\n};\n","// @flow\nimport * as React from 'react';\nimport {\n  enumerateObjectAndBehaviorsInstructions,\n  enumerateAllInstructions,\n  getObjectParameterIndex,\n} from '../../InstructionOrExpression/EnumerateInstructions';\nimport {\n  createTree,\n  type InstructionTreeNode,\n} from '../../InstructionOrExpression/CreateTree';\nimport {\n  type EnumeratedInstructionMetadata,\n  filterEnumeratedInstructionOrExpressionMetadataByScope,\n} from '../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\nimport { type EventsScope } from '../../InstructionOrExpression/EventsScope.flow';\nconst gd: libGDevelop = global.gd;\n\n/** Helper to get the gdInstructionMetadata of an instruction. */\nexport const getInstructionMetadata = ({\n  instructionType,\n  isCondition,\n  project,\n}: {|\n  instructionType: string,\n  isCondition: boolean,\n  project: gdProject,\n|}): ?gdInstructionMetadata => {\n  if (!instructionType) return null;\n\n  return isCondition\n    ? gd.MetadataProvider.getConditionMetadata(\n        project.getCurrentPlatform(),\n        instructionType\n      )\n    : gd.MetadataProvider.getActionMetadata(\n        project.getCurrentPlatform(),\n        instructionType\n      );\n};\n\ntype Parameters = {|\n  project: gdProject,\n  instruction: gdInstruction,\n  isCondition: boolean,\n  isNewInstruction: boolean,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n|};\n\ntype NewInstructionEditorState = {|\n  chosenObjectName: ?string,\n  chosenObjectInstructionsInfo: ?Array<EnumeratedInstructionMetadata>,\n  chosenObjectInstructionsInfoTree: ?InstructionTreeNode,\n|};\n\ntype NewInstructionEditorSetters = {|\n  /** Select an instruction - which can be a free or an object instruction. */\n  chooseInstruction: (\n    type: string\n  ) => {| ...NewInstructionEditorState, instruction: gdInstruction |},\n  /** Select an object, so that then this object specific instructions can be searched and selected. */\n  chooseObject: (\n    objectName: string\n  ) => {| ...NewInstructionEditorState, instruction: gdInstruction |},\n  /** Select an instruction for the currently selected object. */\n  chooseObjectInstruction: (\n    type: string\n  ) => {| ...NewInstructionEditorState, instruction: gdInstruction |},\n|};\n\nconst findInstruction = (\n  list: Array<EnumeratedInstructionMetadata>,\n  instructionType: string\n): ?EnumeratedInstructionMetadata => {\n  return list.find(({ type }) => type === instructionType);\n};\n\n/** React Hook handling the state of an instruction editor. */\nexport const useNewInstructionEditor = ({\n  instruction,\n  isCondition,\n  project,\n  isNewInstruction,\n  scope,\n  globalObjectsContainer,\n  objectsContainer,\n}: Parameters): [NewInstructionEditorState, NewInstructionEditorSetters] => {\n  const getChosenObjectState = (\n    objectName: string,\n    discardInstructionTypeIfNotInObjectInstructions: boolean\n  ): NewInstructionEditorState => {\n    const chosenObjectInstructionsInfo = filterEnumeratedInstructionOrExpressionMetadataByScope(\n      enumerateObjectAndBehaviorsInstructions(\n        isCondition,\n        globalObjectsContainer,\n        objectsContainer,\n        objectName\n      ),\n      scope\n    );\n\n    // As we changed to a new object, verify if the instruction is still valid for this object. If not,\n    // discard the chosen instruction - this is to avoid the user creating invalid instructions.\n    if (\n      instruction.getType() &&\n      discardInstructionTypeIfNotInObjectInstructions\n    ) {\n      const instructionMetadata = findInstruction(\n        chosenObjectInstructionsInfo,\n        instruction.getType()\n      );\n      if (!instructionMetadata) {\n        instruction.setType('');\n      }\n    }\n\n    return {\n      chosenObjectName: objectName,\n      chosenObjectInstructionsInfo,\n      chosenObjectInstructionsInfoTree: createTree(\n        chosenObjectInstructionsInfo\n      ),\n    };\n  };\n\n  const getInitialState = (): NewInstructionEditorState => {\n    if (!isNewInstruction) {\n      // Check if the instruction is an object/behavior instruction. If yes\n      // select the object, which is the first parameter of the instruction.\n      const allInstructions = enumerateAllInstructions(isCondition);\n      const instructionType: string = instruction.getType();\n      const enumeratedInstructionMetadata = findInstruction(\n        allInstructions,\n        instructionType\n      );\n      if (\n        enumeratedInstructionMetadata &&\n        (enumeratedInstructionMetadata.scope.objectMetadata ||\n          enumeratedInstructionMetadata.scope.behaviorMetadata)\n      ) {\n        const objectParameterIndex = getObjectParameterIndex(\n          enumeratedInstructionMetadata.metadata\n        );\n        if (objectParameterIndex !== -1) {\n          return getChosenObjectState(\n            instruction.getParameter(objectParameterIndex),\n            false /* Even if the instruction is invalid for the object, show it as it's what we have already */\n          );\n        }\n      }\n    }\n\n    // We're either making a new instruction or editing a free instruction.\n    return {\n      chosenObjectName: null,\n      chosenObjectInstructionsInfo: null,\n      chosenObjectInstructionsInfoTree: null,\n    };\n  };\n\n  const [state, setState] = React.useState(getInitialState);\n\n  const chooseObject = (objectName: string) => {\n    const newState = getChosenObjectState(objectName, true);\n    setState(newState);\n    return {\n      instruction,\n      ...newState,\n    };\n  };\n\n  const chooseObjectInstruction = (type: string) => {\n    instruction.setType(type);\n    if (state.chosenObjectName) {\n      const newState = getChosenObjectState(state.chosenObjectName, true);\n      setState(newState);\n      return {\n        instruction,\n        ...newState,\n      };\n    }\n\n    return {\n      instruction,\n      ...state,\n    };\n  };\n\n  const chooseInstruction = (type: string) => {\n    instruction.setType(type);\n    const newState = {\n      chosenObjectName: null,\n      chosenObjectInstructionsInfo: null,\n      chosenObjectInstructionsInfoTree: null,\n    };\n    setState({\n      chosenObjectName: null,\n      chosenObjectInstructionsInfo: null,\n      chosenObjectInstructionsInfoTree: null,\n    });\n\n    return {\n      instruction,\n      ...newState,\n    };\n  };\n\n  return [\n    state,\n    {\n      chooseInstruction,\n      chooseObject,\n      chooseObjectInstruction,\n    },\n  ];\n};\n","// @flow\nimport { getObjectParameterIndex } from './EnumerateInstructions';\nconst gd: libGDevelop = global.gd;\n\n/**\n * After selecting an instruction, this function allows to set up the proper\n * number of parameters, set up the object name (if an object instruction was chosen)\n * and set up the behavior name (if a behavior instruction was chosen).\n */\nexport const setupInstructionParameters = (\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  instruction: gdInstruction,\n  instructionMetadata: gdInstructionMetadata,\n  objectName: ?string\n) => {\n  instruction.setParametersCount(instructionMetadata.getParametersCount());\n\n  // For free instructions (not linked to an object or behavior), we can stop there.\n  // In the future, we could set up default values for parameters.\n  if (!objectName) return;\n\n  // Set the object name.\n  const objectParameterIndex = getObjectParameterIndex(instructionMetadata);\n  if (objectParameterIndex === -1) {\n    console.error(\n      `Instruction \"${instructionMetadata.getFullName()}\" is used for an object, but does not have an object as first parameter`\n    );\n    return;\n  }\n\n  instruction.setParameter(objectParameterIndex, objectName);\n\n  // Set the behavior name, if any.\n  const maybeBehaviorParameterIndex = objectParameterIndex + 1;\n  if (maybeBehaviorParameterIndex < instructionMetadata.getParametersCount()) {\n    const maybeBehaviorParameterMetadata = instructionMetadata.getParameter(\n      maybeBehaviorParameterIndex\n    );\n    if (\n      !gd.ParameterMetadata.isBehavior(maybeBehaviorParameterMetadata.getType())\n    ) {\n      // The parameter after the object is not a behavior, there is nothing to complete.\n      return;\n    }\n\n    const allowedBehaviorType = maybeBehaviorParameterMetadata.getExtraInfo();\n    const behaviorNames = gd\n      .getBehaviorsOfObject(\n        globalObjectsContainer,\n        objectsContainer,\n        objectName,\n        true\n      )\n      .toJSArray()\n      .filter(behaviorName => {\n        return (\n          !allowedBehaviorType ||\n          gd.getTypeOfBehavior(\n            globalObjectsContainer,\n            objectsContainer,\n            behaviorName,\n            false\n          ) === allowedBehaviorType\n        );\n      });\n\n    if (behaviorNames.length > 0) {\n      const currentParameterValue = instruction.getParameter(\n        maybeBehaviorParameterIndex\n      );\n\n      // Set the behavior to the first matching behavior, in case a matching behavior name\n      // is not already set.\n      if (\n        !behaviorNames.some(\n          behaviorName => currentParameterValue === behaviorName\n        )\n      ) {\n        instruction.setParameter(maybeBehaviorParameterIndex, behaviorNames[0]);\n      }\n    } else {\n      // Ignore - this will be shown as an error in the BehaviorField (the required\n      // behavior is not attached to the object).\n    }\n  }\n};\n","// @flow\nimport * as React from 'react';\nimport { type ChosenCategory } from './FiltersChooser';\nimport shuffle from 'lodash/shuffle';\nimport SearchApi from 'js-worker-search';\n\n/**\n * Filter a list of items according to the chosen category\n * and the chosen filters.\n */\nexport const filterSearchItems = <SearchItem: { tags: Array<string> }>(\n  searchItems: ?Array<SearchItem>,\n  chosenCategory: ?ChosenCategory,\n  chosenFilters: Set<string>\n): ?Array<SearchItem> => {\n  if (!searchItems) return null;\n\n  const startTime = performance.now();\n  const filteredSearchItems = searchItems\n    .filter(({ tags }) => {\n      if (!chosenCategory) return true;\n\n      const hasChosenCategoryTag =\n        // If the chosen category is a container of tags, not a real tag, then\n        // skip checking if the item has it.\n        chosenCategory.node.isTagContainerOnly ||\n        tags.some(tag => tag === chosenCategory.node.name);\n      if (!hasChosenCategoryTag) return false; // Asset is not in the selected category\n      for (const parentNode of chosenCategory.parentNodes) {\n        if (parentNode.isTagContainerOnly) {\n          // The parent is a container of tags, not a real tag. No need\n          // to check if the item has it.\n          return true;\n        }\n\n        const hasParentCategoryTag = tags.some(tag => tag === parentNode.name);\n        if (!hasParentCategoryTag) return false; // Asset is not in the parent(s) of the selected category\n      }\n\n      return true;\n    })\n    .filter(({ tags }) => {\n      return (\n        chosenFilters.size === 0 || tags.some(tag => chosenFilters.has(tag))\n      );\n    });\n\n  const totalTime = performance.now() - startTime;\n  console.info(\n    `Filtered items by category/filters in ${totalTime.toFixed(3)}ms.`\n  );\n  return filteredSearchItems;\n};\n\n/**\n * Allow to efficiently search and filters items.\n *\n * This instanciates a search API (in a web-worker, if available), index\n * the specified items, then returns the results of the search (according to the\n * search text and the chosen category/filters).\n *\n * Search is done asynchronously within a web-worker when available, so they\n * won't block the main thread.\n */\nexport const useSearchItem = <SearchItem: { tags: Array<string> }>(\n  searchItemsById: ?{ [string]: SearchItem },\n  getItemDescription: SearchItem => string,\n  searchText: string,\n  chosenCategory: ?ChosenCategory,\n  chosenFilters: Set<string>\n): ?Array<SearchItem> => {\n  const searchApiRef = React.useRef<?any>(null);\n  const [searchResults, setSearchResults] = React.useState<?Array<SearchItem>>(\n    null\n  );\n\n  // Keep in memory a list of all the items, shuffled for\n  // easing random discovery of items when no search is done.\n  const shuffledSearchItems: ?Array<SearchItem> = React.useMemo(\n    () => {\n      if (!searchItemsById) return null;\n\n      return shuffle(\n        Object.keys(searchItemsById).map(id => searchItemsById[id])\n      );\n    },\n    [searchItemsById]\n  );\n\n  // Index items that have been loaded.\n  React.useEffect(\n    () => {\n      if (!searchItemsById) {\n        // Nothing to index - yet.\n        return;\n      }\n\n      const startTime = performance.now();\n      if (searchApiRef.current) {\n        searchApiRef.current.terminate();\n        searchApiRef.current = null;\n      }\n\n      try {\n        const newSearchApi = new SearchApi();\n        const allIds = Object.keys(searchItemsById);\n\n        allIds.forEach(id => {\n          const assetShortHeader = searchItemsById[id];\n          newSearchApi.indexDocument(id, getItemDescription(assetShortHeader));\n        });\n\n        const totalTime = performance.now() - startTime;\n        console.info(\n          `Indexed ${allIds.length} items in ${totalTime.toFixed(3)}ms.`\n        );\n        searchApiRef.current = newSearchApi;\n      } catch (error) {\n        console.error('Error while indexing items: ', error);\n      }\n    },\n    [searchItemsById, getItemDescription]\n  );\n\n  // Update the search results according to the items, search term\n  // chosen category and chosen filters.\n  const searchApi = searchApiRef.current;\n  React.useEffect(\n    () => {\n      let discardSearch = false;\n      if (!searchText) {\n        setSearchResults(\n          filterSearchItems(shuffledSearchItems, chosenCategory, chosenFilters)\n        );\n      } else {\n        if (!searchItemsById || !searchApi) {\n          console.info(\n            'Search for items skipped because items are not ready - will be retried when ready'\n          );\n          return;\n        }\n\n        const startTime = performance.now();\n        searchApi\n          .search(searchText)\n          .then((partialSearchResultIds: Array<string>) => {\n            if (discardSearch) {\n              console.info(\n                'Discarding search results as a new search was launched.'\n              );\n              return;\n            }\n\n            const partialSearchResults = partialSearchResultIds\n              .map(id => searchItemsById[id])\n              .filter(Boolean);\n\n            const totalTime = performance.now() - startTime;\n            console.info(\n              `Found ${\n                partialSearchResults.length\n              } items in ${totalTime.toFixed(3)}ms.`\n            );\n\n            setSearchResults(\n              filterSearchItems(\n                partialSearchResults,\n                chosenCategory,\n                chosenFilters\n              )\n            );\n          });\n      }\n\n      return () => {\n        // Effect is being destroyed - meaning that a new search was launched.\n        // Cancel this one.\n        discardSearch = true;\n      };\n    },\n    [\n      shuffledSearchItems,\n      searchItemsById,\n      searchText,\n      chosenCategory,\n      chosenFilters,\n      searchApi,\n    ]\n  );\n\n  return searchResults;\n};\n","// @flow\nimport * as React from 'react';\nimport {\n  type Filters,\n  type TagsTreeNode,\n} from '../../Utils/GDevelopServices/Filters';\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport PlaceholderLoader from '../PlaceholderLoader';\nimport { type FiltersState, type ChosenCategory } from './FiltersChooser';\n\nconst nodeIdSeparator = ';-/>'; // A seemingly random string to ensure no clashes with tag names.\nconst toNodeId = (nodes: Array<TagsTreeNode>) =>\n  nodes.map(node => node.name).join(nodeIdSeparator);\n\nconst TagsTreeItems = ({\n  tagsTreeNodes,\n  onChoose,\n  parentNodes,\n}: {|\n  parentNodes: Array<TagsTreeNode>,\n  tagsTreeNodes: Array<TagsTreeNode>,\n  onChoose: ChosenCategory => void,\n|}) => {\n  if (!tagsTreeNodes.length) return null;\n\n  return tagsTreeNodes.map(node => {\n    const newParentNodes = [...parentNodes, node];\n    return (\n      <TreeItem\n        nodeId={toNodeId(newParentNodes)}\n        label={node.name}\n        key={node.name}\n        onLabelClick={() => onChoose({ node, parentNodes })}\n        collapseIcon={node.children.length ? <ExpandMoreIcon /> : null}\n        expandIcon={node.children.length ? <ChevronRightIcon /> : null}\n      >\n        <TagsTreeItems\n          tagsTreeNodes={node.children}\n          parentNodes={newParentNodes}\n          onChoose={onChoose}\n        />\n      </TreeItem>\n    );\n  });\n};\n\ntype MemoizedTagsTreeProps = {|\n  allItemsLabel: React.Node,\n  chosenCategory: ?ChosenCategory,\n  setChosenCategory: (?ChosenCategory) => void,\n  allFilters: Filters,\n|};\n\nconst MemoizedTagsTree = React.memo<MemoizedTagsTreeProps>(function TagsTree({\n  allItemsLabel,\n  chosenCategory,\n  setChosenCategory,\n  allFilters,\n}: MemoizedTagsTreeProps) {\n  return (\n    <TreeView\n      selected={\n        chosenCategory\n          ? toNodeId([...chosenCategory.parentNodes, chosenCategory.node])\n          : ''\n      }\n      defaultExpanded={[]}\n      onNodeSelect={() => {}}\n    >\n      <TreeItem\n        nodeId=\"\"\n        label={allItemsLabel}\n        onLabelClick={() => setChosenCategory(null)}\n      />\n      <TagsTreeItems\n        tagsTreeNodes={allFilters.tagsTree}\n        onChoose={setChosenCategory}\n        parentNodes={[]}\n      />\n    </TreeView>\n  );\n});\n\ntype Props = {|\n  allItemsLabel: React.Node,\n  filtersState: FiltersState,\n  allFilters: ?Filters,\n  error: ?Error,\n|};\n\nexport const CategoryChooser = ({\n  filtersState,\n  allFilters,\n  error,\n  allItemsLabel,\n}: Props) => {\n  if (!allFilters) {\n    return <PlaceholderLoader />;\n  }\n  if (error) {\n    // Error and retry button shown somewhere else in the UI\n    return null;\n  }\n\n  return (\n    <MemoizedTagsTree\n      allItemsLabel={allItemsLabel}\n      chosenCategory={filtersState.chosenCategory}\n      setChosenCategory={filtersState.setChosenCategory}\n      allFilters={allFilters}\n    />\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { type FiltersState, useFilters } from '../UI/Search/FiltersChooser';\nimport { type Filters } from '../Utils/GDevelopServices/Filters';\nimport {\n  type AssetShortHeader,\n  type Author,\n  type License,\n  listAllAssets,\n  listAllAuthors,\n  listAllLicenses,\n} from '../Utils/GDevelopServices/Asset';\nimport { useSearchItem } from '../UI/Search/UseSearchItem';\n\nconst defaultSearchText = '';\n\ntype AssetStoreState = {|\n  filters: ?Filters,\n  authors: ?Array<Author>,\n  licenses: ?Array<License>,\n  searchResults: ?Array<AssetShortHeader>,\n  fetchAssetsAndFilters: () => void,\n  error: ?Error,\n  searchText: string,\n  setSearchText: string => void,\n  filtersState: FiltersState,\n|};\n\nexport const AssetStoreContext = React.createContext<AssetStoreState>({\n  filters: null,\n  authors: null,\n  licenses: null,\n  searchResults: null,\n  fetchAssetsAndFilters: () => {},\n  error: null,\n  searchText: '',\n  setSearchText: () => {},\n  filtersState: {\n    chosenFilters: new Set(),\n    addFilter: () => {},\n    removeFilter: () => {},\n    chosenCategory: null,\n    setChosenCategory: () => {},\n  },\n});\n\ntype AssetStoreStateProviderProps = {|\n  children: React.Node,\n|};\n\nconst getAssetShortHeaderSearchTerms = (assetShortHeader: AssetShortHeader) => {\n  return (\n    assetShortHeader.name +\n    '\\n' +\n    assetShortHeader.shortDescription +\n    '\\n' +\n    assetShortHeader.tags.join(', ')\n  );\n};\n\nexport const AssetStoreStateProvider = ({\n  children,\n}: AssetStoreStateProviderProps) => {\n  const [assetShortHeadersById, setAssetShortHeadersById] = React.useState<?{\n    [string]: AssetShortHeader,\n  }>(null);\n  const [filters, setFilters] = React.useState<?Filters>(null);\n  const [authors, setAuthors] = React.useState<?Array<Author>>(null);\n  const [licenses, setLicenses] = React.useState<?Array<License>>(null);\n  const [error, setError] = React.useState<?Error>(null);\n  const isLoading = React.useRef<boolean>(false);\n\n  const [searchText, setSearchText] = React.useState(defaultSearchText);\n  const filtersState = useFilters();\n\n  const fetchAssetsAndFilters = React.useCallback(\n    () => {\n      // Don't attempt to load again assets and filters if they\n      // were loaded already.\n      if (assetShortHeadersById || isLoading.current) return;\n\n      (async () => {\n        setError(null);\n        isLoading.current = true;\n\n        try {\n          const { assetShortHeaders, filters } = await listAllAssets();\n          const authors = await listAllAuthors();\n          const licenses = await listAllLicenses();\n\n          const assetShortHeadersById = {};\n          assetShortHeaders.forEach(assetShortHeader => {\n            assetShortHeadersById[assetShortHeader.id] = assetShortHeader;\n          });\n\n          console.info(\n            `Loaded ${assetShortHeaders.length} assets from the asset store.`\n          );\n          setAssetShortHeadersById(assetShortHeadersById);\n          setFilters(filters);\n          setAuthors(authors);\n          setLicenses(licenses);\n        } catch (error) {\n          console.error(\n            `Unable to load the assets from the asset store:`,\n            error\n          );\n          setError(error);\n        }\n\n        isLoading.current = false;\n      })();\n    },\n    [assetShortHeadersById, isLoading]\n  );\n\n  React.useEffect(\n    () => {\n      // Don't attempt to load again assets and filters if they\n      // were loaded already.\n      if (assetShortHeadersById || isLoading.current) return;\n\n      const timeoutId = setTimeout(() => {\n        console.info('Pre-fetching assets from asset store...');\n        fetchAssetsAndFilters();\n      }, 6000);\n      return () => clearTimeout(timeoutId);\n    },\n    [fetchAssetsAndFilters, assetShortHeadersById, isLoading]\n  );\n\n  const { chosenCategory, chosenFilters } = filtersState;\n  const searchResults: ?Array<AssetShortHeader> = useSearchItem(\n    assetShortHeadersById,\n    getAssetShortHeaderSearchTerms,\n    searchText,\n    chosenCategory,\n    chosenFilters\n  );\n\n  const assetStoreState = React.useMemo(\n    () => ({\n      searchResults,\n      fetchAssetsAndFilters,\n      filters,\n      authors,\n      licenses,\n      error,\n      searchText,\n      setSearchText,\n      filtersState,\n    }),\n    [\n      searchResults,\n      error,\n      filters,\n      authors,\n      licenses,\n      searchText,\n      filtersState,\n      fetchAssetsAndFilters,\n    ]\n  );\n\n  return (\n    <AssetStoreContext.Provider value={assetStoreState}>\n      {children}\n    </AssetStoreContext.Provider>\n  );\n};\n","// @flow\nlet pixelatedImageRenderingValue: ?string = null;\nexport const getPixelatedImageRendering = (): string => {\n  if (pixelatedImageRenderingValue) return pixelatedImageRenderingValue;\n\n  return (pixelatedImageRenderingValue = global.CSS.supports(\n    'image-rendering: crisp-edges'\n  )\n    ? 'crisp-edges'\n    : 'pixelated');\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport { Line } from '../../UI/Grid';\nimport Text from '../../UI/Text';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableHeaderColumn,\n  TableRow,\n  TableRowColumn,\n} from '../../UI/Table';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { ColumnStackLayout } from '../../UI/Layout';\n\nexport type FetchedResources = {|\n  erroredResources: Array<{|\n    resourceName: string,\n    error: Error,\n  |}>,\n  fetchedResources: Array<{|\n    resourceName: string,\n  |}>,\n|};\n\nexport type FetchResourcesArgs = {|\n  project: gdProject,\n  resourceNames: Array<string>,\n  onProgress: (count: number, total: number) => void,\n|};\n\n/**\n * Describe a way to fetch resources so that they can be used in the editor\n * and in previews. For the local editor, this means downloading the resources\n * that have URLs.\n */\nexport type ResourceFetcher = {|\n  getResourcesToFetch: (project: gdProject) => Array<string>,\n  fetchResources: FetchResourcesArgs => Promise<FetchedResources>,\n|};\n\nexport const ResourceFetcherContext = React.createContext<?ResourceFetcher>(\n  null\n);\n\ntype ResourceFetcherDialogProps = {|\n  progress: number,\n  fetchedResources: ?FetchedResources,\n  onAbandon: ?() => void,\n  onRetry: ?() => void,\n|};\n\nexport const ResourceFetcherDialog = ({\n  progress,\n  fetchedResources,\n  onAbandon,\n  onRetry,\n}: ResourceFetcherDialogProps) => {\n  const hasErrors =\n    fetchedResources && fetchedResources.erroredResources.length > 0;\n\n  return (\n    <Dialog\n      actions={[\n        onRetry ? (\n          <RaisedButton\n            label={<Trans>Retry</Trans>}\n            primary\n            onClick={onRetry}\n            key=\"retry\"\n          />\n        ) : null,\n        <FlatButton\n          label={\n            onAbandon ? <Trans>Abandon</Trans> : <Trans>Please wait...</Trans>\n          }\n          disabled={!onAbandon}\n          onClick={onAbandon}\n          key=\"close\"\n        />,\n      ]}\n      cannotBeDismissed={true}\n      noMargin\n      open\n      maxWidth=\"sm\"\n    >\n      <Line>\n        <ColumnStackLayout expand>\n          <Text>\n            {hasErrors ? (\n              <Trans>\n                There were errors when fetching resources for the project.\n              </Trans>\n            ) : (\n              <Trans>Resources needed for the project are downloaded...</Trans>\n            )}\n          </Text>\n          <LinearProgress variant=\"determinate\" value={progress} />\n          {hasErrors && fetchedResources ? (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHeaderColumn>Resource name</TableHeaderColumn>\n                  <TableHeaderColumn>Error</TableHeaderColumn>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {fetchedResources.erroredResources.map(\n                  ({ resourceName, error }) => (\n                    <TableRow key={resourceName}>\n                      <TableRowColumn>{resourceName}</TableRowColumn>\n                      <TableRowColumn>{error.toString()}</TableRowColumn>\n                    </TableRow>\n                  )\n                )}\n              </TableBody>\n            </Table>\n          ) : null}\n        </ColumnStackLayout>\n      </Line>\n    </Dialog>\n  );\n};\n\ntype RetryOrAbandonCallback = () => void;\n\ntype UseResourceFetcherOutput = {\n  /**\n   * Launch the fetching of the resources, if needed. For example, for the desktop\n   * app, this means downloading the resources that have URLs.\n   */\n  ensureResourcesAreFetched: (\n    project: gdProject\n  ) => Promise<{|\n    someResourcesWereFetched: boolean,\n  |}>,\n  /**\n   * Render, if needed, the dialog that will show the progress of resources fetching.\n   */\n  renderResourceFetcherDialog: () => React.Node,\n};\n\n/**\n * Hook allowing to launch the fetching of resources, useful after opening a project\n * or adding assets from the asset store (as they must be downloaded on the desktop app).\n */\nexport const useResourceFetcher = (): UseResourceFetcherOutput => {\n  const resourceFetcher = React.useContext(ResourceFetcherContext);\n  const [progress, setProgress] = React.useState(0);\n  const [isFetching, setIsFetching] = React.useState(false);\n  const [\n    fetchedResources,\n    setFetchedResources,\n  ] = React.useState<?FetchedResources>(null);\n  const [onRetry, setOnRetry] = React.useState<?RetryOrAbandonCallback>(null);\n  const [onAbandon, setOnAbandon] = React.useState<?RetryOrAbandonCallback>(\n    null\n  );\n\n  const ensureResourcesAreFetched = React.useCallback(\n    async (project: gdProject) => {\n      if (!resourceFetcher) throw new Error('No resourceFetcher was defined');\n\n      const resourceNames = resourceFetcher.getResourcesToFetch(project);\n      if (resourceNames.length === 0)\n        return { someResourcesWereFetched: false };\n\n      setProgress(0);\n      setOnRetry(null);\n      setOnAbandon(null);\n      setFetchedResources(null);\n      setIsFetching(true);\n\n      // TODO: handle error?\n      const fetchedResources = await resourceFetcher.fetchResources({\n        project,\n        resourceNames,\n        onProgress: (count, total) => {\n          setProgress((count / total) * 100);\n        },\n      });\n\n      setProgress(100);\n      if (fetchedResources.erroredResources.length === 0) {\n        // No error happened: finish normally, closing the dialog.\n        setIsFetching(false);\n        setFetchedResources(null);\n        return { someResourcesWereFetched: true };\n      }\n\n      // An error happened. Store the errors and offer a way to\n      // retry.\n      return new Promise(resolve => {\n        setOnRetry(\n          (): RetryOrAbandonCallback => () => {\n            // Launch the fetch again, and solve the promise once\n            // this new fetch resolve itself.\n            resolve(ensureResourcesAreFetched(project));\n          }\n        );\n        setOnAbandon(\n          (): RetryOrAbandonCallback => () => {\n            // Abandon: resolve immediately, closing the dialog\n            setIsFetching(false);\n            setFetchedResources(null);\n            resolve({ someResourcesWereFetched: true });\n          }\n        );\n\n        // Display the errors to the user:\n        setFetchedResources(fetchedResources);\n        setIsFetching(false);\n      });\n    },\n    [resourceFetcher]\n  );\n\n  const renderResourceFetcherDialog = () => {\n    const hasErrors =\n      fetchedResources && fetchedResources.erroredResources.length >= 0;\n    if (!isFetching && !hasErrors) return null;\n\n    return (\n      <ResourceFetcherDialog\n        progress={progress}\n        fetchedResources={fetchedResources}\n        onAbandon={onAbandon}\n        onRetry={onRetry}\n      />\n    );\n  };\n\n  return {\n    ensureResourcesAreFetched,\n    renderResourceFetcherDialog,\n  };\n};\n","// @flow\n\nexport const roundPosition = (\n  pos: [number, number],\n  gridWidth: number,\n  gridHeight: number,\n  gridOffsetX: number,\n  gridOffsetY: number,\n  gridType: string\n) => {\n  if (gridType === 'isometric') {\n    if (gridWidth <= 0 || gridHeight <= 0) {\n      pos[0] = Math.round(pos[0]);\n      pos[1] = Math.round(pos[1]);\n      return;\n    }\n    // Why do we need this?\n    // Take a 2x2 squares, put a diamond inside each square,\n    // there is a 5th diamond in the center\n    // So, half cells are needed, but some are not to be used.\n    // It makes a pattern in diagonal like this:\n    // o-o-o-\n    // -o-o-o\n    // o-o-o-\n    let cellX = Math.round(((pos[0] - gridOffsetX) * 2) / gridWidth);\n    let cellY = Math.round(((pos[1] - gridOffsetY) * 2) / gridHeight);\n\n    if ((((cellX + cellY) % 2) + 2) % 2 === 1) {\n      // This cell should not be used, find the nearest one\n      const deltaX =\n        (pos[0] - ((cellX / 2) * gridWidth + gridOffsetX)) / gridWidth;\n      const deltaY =\n        (pos[1] - ((cellY / 2) * gridHeight + gridOffsetY)) / gridHeight;\n\n      if (Math.abs(deltaX) > Math.abs(deltaY)) {\n        if (deltaX > 0) {\n          cellX++;\n        } else {\n          cellX--;\n        }\n      } else {\n        if (deltaY > 0) {\n          cellY++;\n        } else {\n          cellY--;\n        }\n      }\n    }\n    // magnet to the half cell\n    pos[0] = (cellX / 2) * gridWidth + gridOffsetX;\n    pos[1] = (cellY / 2) * gridHeight + gridOffsetY;\n  } else {\n    if (gridWidth <= 0) {\n      pos[0] = Math.round(pos[0]);\n    } else {\n      pos[0] =\n        Math.round((pos[0] - gridOffsetX) / gridWidth) * gridWidth +\n        gridOffsetX;\n    }\n\n    if (gridHeight <= 0) {\n      pos[1] = Math.round(pos[1]);\n    } else {\n      pos[1] =\n        Math.round((pos[1] - gridOffsetY) / gridHeight) * gridHeight +\n        gridOffsetY;\n    }\n  }\n};\n\nexport const roundPositionForResizing = (\n  pos: [number, number],\n  gridWidth: number,\n  gridHeight: number,\n  gridOffsetX: number,\n  gridOffsetY: number,\n  gridType: string\n) => {\n  if (gridType === 'isometric') {\n    // There is no point to align on the isometric grid when resizing.\n    // Use half cells to give a bit more of freedom than for positioning.\n    return roundPosition(\n      pos,\n      gridWidth / 2,\n      gridHeight / 2,\n      gridOffsetX,\n      gridOffsetY,\n      'rectangular'\n    );\n  }\n  return roundPosition(\n    pos,\n    gridWidth,\n    gridHeight,\n    gridOffsetX,\n    gridOffsetY,\n    gridType\n  );\n};\n","// @flow\nimport { rgbToHexNumber } from '../Utils/ColorTransformer';\n\nexport type InstancesEditorSettings = {|\n  /** Is grid shown? */\n  grid: boolean,\n  gridType: 'isometric' | 'rectangular',\n  gridWidth: number,\n  gridHeight: number,\n  gridOffsetX: number,\n  gridOffsetY: number,\n  gridColor: number,\n  gridAlpha: number,\n\n  /** Is snap to grid activated? */\n  snap: boolean,\n\n  /** The zoom of the editor, 1 by default. */\n  zoomFactor: number,\n\n  /** Is the window mask shown? */\n  windowMask: boolean,\n|};\n\nexport const prepareInstancesEditorSettings = (\n  object: any\n): InstancesEditorSettings => {\n  return {\n    grid: object.grid || false,\n    gridType: object.gridType || 'rectangular',\n    gridWidth: object.gridWidth || 32,\n    gridHeight: object.gridHeight || 32,\n    gridOffsetX: object.gridOffsetX || 0,\n    gridOffsetY: object.gridOffsetY || 0,\n    gridColor:\n      object.gridColor !== undefined\n        ? object.gridColor\n        : rgbToHexNumber(158, 180, 255),\n    gridAlpha: object.gridAlpha !== undefined ? object.gridAlpha : 0.8,\n    snap: object.snap || false,\n    zoomFactor: Math.max(object.zoomFactor || 1, 0.0001),\n    windowMask: object.windowMask || false,\n  };\n};\n\nexport const cloneInstancesEditorSettings = (\n  instancesEditorSettings: InstancesEditorSettings\n) => {\n  return { ...instancesEditorSettings };\n};\n","// @flow\nimport * as React from 'react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport { t } from '@lingui/macro';\n\nconst gd: libGDevelop = global.gd;\n\n// These are all the kind of resources that can be found in\n// Core/GDCore/Project/ResourcesManager.h\nexport type ResourceKind =\n  | 'image'\n  | 'audio'\n  | 'font'\n  | 'video'\n  | 'json'\n  | 'bitmapFont';\n\nexport const allResourceKindsAndMetadata = [\n  {\n    kind: 'audio',\n    displayName: t`Audio`,\n    fileExtensions: ['aac', 'wav', 'mp3', 'ogg'],\n    createNewResource: () => new gd.AudioResource(),\n  },\n  {\n    kind: 'image',\n    displayName: t`Image`,\n    fileExtensions: ['png', 'jpg', 'jpeg', 'webp'],\n    createNewResource: () => new gd.ImageResource(),\n  },\n  {\n    kind: 'font',\n    displayName: t`Font`,\n    fileExtensions: ['ttf', 'otf'],\n    createNewResource: () => new gd.FontResource(),\n  },\n  {\n    kind: 'video',\n    displayName: t`Video`,\n    fileExtensions: ['mp4', 'webm'],\n    createNewResource: () => new gd.VideoResource(),\n  },\n  {\n    kind: 'json',\n    displayName: t`Json`,\n    fileExtensions: ['json'],\n    createNewResource: () => new gd.JsonResource(),\n  },\n  {\n    kind: 'bitmapFont',\n    displayName: t`Bitmap Font`,\n    fileExtensions: ['fnt', 'xml'],\n    createNewResource: () => new gd.BitmapFontResource(),\n  },\n];\n\nexport type ChooseResourceOptions = {|\n  initialSourceName: string,\n  multiSelection: boolean,\n  resourceKind: ResourceKind,\n|};\n\nexport type ChooseResourceProps = {|\n  i18n: I18nType,\n  project: gdProject,\n  getLastUsedPath: (project: gdProject, kind: ResourceKind) => string,\n  setLastUsedPath: (\n    project: gdProject,\n    kind: ResourceKind,\n    path: string\n  ) => void,\n  options: ChooseResourceOptions,\n|};\n\nexport type ResourceSourceComponentProps = {|\n  ...ChooseResourceProps,\n  onChooseResources: (Array<gdResource>) => void,\n|};\n\nexport type ResourceSource = {\n  name: string,\n  displayName: MessageDescriptor,\n  displayTab: 'standalone' | 'import',\n  kind: ResourceKind,\n  selectResourcesHeadless?: ?(\n    ChooseResourceProps\n  ) => Promise<Array<gdResource>>,\n  renderComponent: ResourceSourceComponentProps => React.Node,\n};\n\nexport type ChooseResourceFunction = (\n  options: ChooseResourceOptions\n) => Promise<Array<gdResource>>;\n","// @flow\nimport * as React from 'react';\nimport { type FiltersState, useFilters } from '../UI/Search/FiltersChooser';\nimport { type Filters } from '../Utils/GDevelopServices/Filters';\nimport {\n  listAllShowcasedGames,\n  type AllShowcasedGames,\n  type ShowcasedGame,\n} from '../Utils/GDevelopServices/Game';\nimport { useSearchItem } from '../UI/Search/UseSearchItem';\nimport { shuffle } from 'lodash';\n\nconst defaultSearchText = '';\n\ntype GamesShowcaseState = {|\n  filters: ?Filters,\n  searchResults: ?Array<ShowcasedGame>,\n  fetchShowcasedGamesAndFilters: () => void,\n  allShowcasedGames: ?Array<ShowcasedGame>,\n  error: ?Error,\n  searchText: string,\n  setSearchText: string => void,\n  filtersState: FiltersState,\n|};\n\nexport const GamesShowcaseContext = React.createContext<GamesShowcaseState>({\n  filters: null,\n  searchResults: null,\n  fetchShowcasedGamesAndFilters: () => {},\n  allShowcasedGames: null,\n  error: null,\n  searchText: '',\n  setSearchText: () => {},\n  filtersState: {\n    chosenFilters: new Set(),\n    addFilter: () => {},\n    removeFilter: () => {},\n    chosenCategory: null,\n    setChosenCategory: () => {},\n  },\n});\n\ntype GamesShowcaseStateProviderProps = {|\n  children: React.Node,\n|};\n\nconst getShowcasedGameSearchTerms = (showcasedGame: ShowcasedGame) => {\n  return (\n    showcasedGame.title +\n    '\\n' +\n    showcasedGame.author +\n    '\\n' +\n    showcasedGame.description +\n    '\\n' +\n    showcasedGame.tags.join(',')\n  );\n};\n\nexport const GamesShowcaseStateProvider = ({\n  children,\n}: GamesShowcaseStateProviderProps) => {\n  const [showcasedGamesByName, setShowcasedGamesByName] = React.useState<?{\n    [string]: ShowcasedGame,\n  }>(null);\n  const [\n    allShowcasedGames,\n    setAllShowcasedGames,\n  ] = React.useState<?Array<ShowcasedGame>>(null);\n  const [filters, setFilters] = React.useState<?Filters>(null);\n  const [error, setError] = React.useState<?Error>(null);\n  const isLoading = React.useRef<boolean>(false);\n\n  const [searchText, setSearchText] = React.useState(defaultSearchText);\n  const filtersState = useFilters();\n\n  const fetchShowcasedGamesAndFilters = React.useCallback(\n    () => {\n      // Don't attempt to load again games and filters if they\n      // were loaded already.\n      if (showcasedGamesByName || isLoading.current) return;\n\n      (async () => {\n        setError(null);\n        isLoading.current = true;\n\n        try {\n          const allShowcasedGames: AllShowcasedGames = await listAllShowcasedGames();\n          const { showcasedGames, filters } = allShowcasedGames;\n          setAllShowcasedGames(shuffle(showcasedGames));\n\n          const showcasedGamesByName = {};\n          showcasedGames.forEach(showcasedGame => {\n            showcasedGamesByName[showcasedGame.title] = showcasedGame;\n          });\n\n          console.info(\n            `Loaded ${showcasedGames.length} games from the games showcase.`\n          );\n          setShowcasedGamesByName(showcasedGamesByName);\n          setFilters(filters);\n        } catch (error) {\n          console.error(\n            `Unable to load the games from the games showcase:`,\n            error\n          );\n          setError(error);\n        }\n\n        isLoading.current = false;\n      })();\n    },\n    [showcasedGamesByName, isLoading]\n  );\n\n  const { chosenCategory, chosenFilters } = filtersState;\n  const searchResults: ?Array<ShowcasedGame> = useSearchItem(\n    showcasedGamesByName,\n    getShowcasedGameSearchTerms,\n    searchText,\n    chosenCategory,\n    chosenFilters\n  );\n\n  const gamesShowcaseState = React.useMemo(\n    () => ({\n      searchResults,\n      fetchShowcasedGamesAndFilters,\n      allShowcasedGames,\n      filters,\n      error,\n      searchText,\n      setSearchText,\n      filtersState,\n    }),\n    [\n      searchResults,\n      allShowcasedGames,\n      error,\n      filters,\n      searchText,\n      filtersState,\n      fetchShowcasedGamesAndFilters,\n    ]\n  );\n\n  return (\n    <GamesShowcaseContext.Provider value={gamesShowcaseState}>\n      {children}\n    </GamesShowcaseContext.Provider>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { type FiltersState, useFilters } from '../../UI/Search/FiltersChooser';\nimport {\n  type ExampleShortHeader,\n  type AllExamples,\n  listAllExamples,\n} from '../../Utils/GDevelopServices/Example';\nimport { type Filters } from '../../Utils/GDevelopServices/Filters';\nimport {\n  useSearchItem,\n  type SearchMatch,\n} from '../../UI/Search/UseSearchStructuredItem';\n\nconst defaultSearchText = '';\n\ntype ExampleStoreState = {|\n  filters: ?Filters,\n  searchResults: ?Array<{| item: ExampleShortHeader, matches: SearchMatch[] |}>,\n  fetchExamplesAndFilters: () => void,\n  allExamples: ?Array<ExampleShortHeader>,\n  error: ?Error,\n  searchText: string,\n  setSearchText: string => void,\n  filtersState: FiltersState,\n|};\n\nexport const ExampleStoreContext = React.createContext<ExampleStoreState>({\n  filters: null,\n  searchResults: null,\n  fetchExamplesAndFilters: () => {},\n  allExamples: null,\n  error: null,\n  searchText: '',\n  setSearchText: () => {},\n  filtersState: {\n    chosenFilters: new Set(),\n    addFilter: () => {},\n    removeFilter: () => {},\n    chosenCategory: null,\n    setChosenCategory: () => {},\n  },\n});\n\ntype ExampleStoreStateProviderProps = {|\n  children: React.Node,\n|};\n\nexport const ExampleStoreStateProvider = ({\n  children,\n}: ExampleStoreStateProviderProps) => {\n  const [\n    exampleShortHeadersById,\n    setExampleShortHeadersById,\n  ] = React.useState<?{\n    [string]: ExampleShortHeader,\n  }>(null);\n  const [filters, setFilters] = React.useState<?Filters>(null);\n  const [error, setError] = React.useState<?Error>(null);\n  const [\n    allExamples,\n    setAllExamples,\n  ] = React.useState<?Array<ExampleShortHeader>>(null);\n\n  const isLoading = React.useRef<boolean>(false);\n\n  const [searchText, setSearchText] = React.useState(defaultSearchText);\n  const filtersState = useFilters();\n\n  const fetchExamplesAndFilters = React.useCallback(\n    () => {\n      // Don't attempt to load again resources and filters if they\n      // were loaded already.\n      if (exampleShortHeadersById || isLoading.current) return;\n\n      (async () => {\n        setError(null);\n        isLoading.current = true;\n\n        try {\n          const allExamples: AllExamples = await listAllExamples();\n          const { exampleShortHeaders, filters } = allExamples;\n          setAllExamples(exampleShortHeaders);\n\n          const exampleShortHeadersById = {};\n          exampleShortHeaders.forEach(exampleShortHeader => {\n            exampleShortHeadersById[exampleShortHeader.id] = exampleShortHeader;\n          });\n\n          console.info(\n            `Loaded ${\n              exampleShortHeaders.length\n            } examples from the example store.`\n          );\n          setExampleShortHeadersById(exampleShortHeadersById);\n          setFilters(filters);\n        } catch (error) {\n          console.error(\n            `Unable to load the examples from the example store:`,\n            error\n          );\n          setError(error);\n        }\n\n        isLoading.current = false;\n      })();\n    },\n    [exampleShortHeadersById, isLoading]\n  );\n\n  React.useEffect(\n    () => {\n      // Don't attempt to load again examples and filters if they\n      // were loaded already.\n      if (exampleShortHeadersById || isLoading.current) return;\n\n      const timeoutId = setTimeout(() => {\n        console.info('Pre-fetching examples from the example store...');\n        fetchExamplesAndFilters();\n      }, 5000);\n      return () => clearTimeout(timeoutId);\n    },\n    [fetchExamplesAndFilters, exampleShortHeadersById, isLoading]\n  );\n\n  const { chosenCategory, chosenFilters } = filtersState;\n  const searchResults: ?Array<{|\n    item: ExampleShortHeader,\n    matches: SearchMatch[],\n  |}> = useSearchItem(\n    exampleShortHeadersById,\n    searchText,\n    chosenCategory,\n    chosenFilters\n  );\n\n  const exampleStoreState = React.useMemo(\n    () => ({\n      searchResults,\n      fetchExamplesAndFilters,\n      allExamples,\n      filters,\n      error,\n      searchText,\n      setSearchText,\n      filtersState,\n    }),\n    [\n      searchResults,\n      allExamples,\n      error,\n      filters,\n      searchText,\n      filtersState,\n      fetchExamplesAndFilters,\n    ]\n  );\n\n  return (\n    <ExampleStoreContext.Provider value={exampleStoreState}>\n      {children}\n    </ExampleStoreContext.Provider>\n  );\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport {\n  type ExampleShortHeader,\n  type Example,\n  getExample,\n} from '../../Utils/GDevelopServices/Example';\nimport { isCompatibleWithAsset } from '../../Utils/GDevelopServices/Asset';\nimport LeftLoader from '../../UI/LeftLoader';\nimport PlaceholderLoader from '../../UI/PlaceholderLoader';\nimport PlaceholderError from '../../UI/PlaceholderError';\nimport { MarkdownText } from '../../UI/MarkdownText';\nimport Text from '../../UI/Text';\nimport AlertMessage from '../../UI/AlertMessage';\nimport { getIDEVersion } from '../../Version';\nimport { Column, Line } from '../../UI/Grid';\nimport { Divider } from '@material-ui/core';\nimport { ColumnStackLayout } from '../../UI/Layout';\nimport { ExampleIcon } from './ExampleIcon';\nimport RaisedButtonWithSplitMenu from '../../UI/RaisedButtonWithSplitMenu';\nimport Window from '../../Utils/Window';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport { UserPublicProfileChip } from '../../UI/User/UserPublicProfileChip';\n\nconst electron = optionalRequire('electron');\n\ntype Props = {|\n  exampleShortHeader: ExampleShortHeader,\n  isOpening: boolean,\n  onClose: () => void,\n  onOpen: () => void,\n|};\n\nexport const openExampleInWebApp = (example: Example) => {\n  Window.openExternalURL(\n    `https://editor.gdevelop-app.com/?project=${example.projectFileUrl}`\n  );\n};\n\nexport function ExampleDialog({\n  isOpening,\n  exampleShortHeader,\n  onClose,\n  onOpen,\n}: Props) {\n  const [error, setError] = React.useState<?Error>(null);\n  const [example, setExample] = React.useState<?Example>(null);\n\n  const loadExample = React.useCallback(\n    async () => {\n      setError(null);\n      try {\n        const example = await getExample(exampleShortHeader);\n        setExample(example);\n      } catch (error) {\n        setError(error);\n      }\n    },\n    [exampleShortHeader]\n  );\n\n  React.useEffect(\n    () => {\n      loadExample();\n    },\n    [loadExample]\n  );\n\n  const isCompatible = isCompatibleWithAsset(\n    getIDEVersion(),\n    exampleShortHeader\n  );\n  const hasIcon = exampleShortHeader.previewImageUrls.length > 0;\n\n  const canOpenExample = !isOpening && isCompatible;\n  const onOpenExample = React.useCallback(\n    () => {\n      if (canOpenExample) onOpen();\n    },\n    [onOpen, canOpenExample]\n  );\n\n  return (\n    <Dialog\n      actions={[\n        <FlatButton\n          key=\"close\"\n          label={<Trans>Back</Trans>}\n          primary={false}\n          onClick={onClose}\n          disabled={isOpening}\n        />,\n        <LeftLoader isLoading={isOpening} key=\"open\">\n          <RaisedButtonWithSplitMenu\n            label={\n              !isCompatible ? (\n                <Trans>Not compatible</Trans>\n              ) : (\n                <Trans>Open</Trans>\n              )\n            }\n            primary\n            onClick={onOpenExample}\n            disabled={!canOpenExample}\n            buildMenuTemplate={i18n => [\n              {\n                label: electron\n                  ? i18n._(t`Open in the web-app`)\n                  : i18n._(t`Open in a new tab`),\n                disabled: !example,\n                click: () => {\n                  if (example) openExampleInWebApp(example);\n                },\n              },\n            ]}\n          />\n        </LeftLoader>,\n      ]}\n      cannotBeDismissed={false}\n      open\n      onRequestClose={onClose}\n      onApply={onOpenExample}\n    >\n      <ColumnStackLayout expand noMargin>\n        {!isCompatible && (\n          <AlertMessage kind=\"error\">\n            <Trans>\n              Unfortunately, this example requires a newer version of GDevelop\n              to work. Update GDevelop to be able to open this example.\n            </Trans>\n          </AlertMessage>\n        )}\n        <Line alignItems=\"center\" noMargin>\n          {hasIcon ? (\n            <ExampleIcon exampleShortHeader={exampleShortHeader} size={40} />\n          ) : null}\n          <Column expand noMargin={!hasIcon}>\n            <Text noMargin size=\"title\">\n              {exampleShortHeader.name}\n            </Text>\n          </Column>\n        </Line>\n        {exampleShortHeader.authors && (\n          <Line>\n            {exampleShortHeader.authors.map(author => (\n              <UserPublicProfileChip\n                user={author}\n                key={author.id}\n                isClickable\n              />\n            ))}\n          </Line>\n        )}\n        <Text noMargin>{exampleShortHeader.shortDescription}</Text>\n        <Divider />\n        {example && (\n          <MarkdownText source={example.description} isStandaloneText />\n        )}\n        {!example && !error && <PlaceholderLoader />}\n        {!example && error && (\n          <PlaceholderError onRetry={loadExample}>\n            <Trans>\n              Can't load the example. Verify your internet connection or try\n              again later.\n            </Trans>\n          </PlaceholderError>\n        )}\n      </ColumnStackLayout>\n    </Dialog>\n  );\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport './MainFrame.css';\nimport Drawer from '@material-ui/core/Drawer';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Toolbar, { type ToolbarInterface } from './Toolbar';\nimport ProjectTitlebar from './ProjectTitlebar';\nimport PreferencesDialog from './Preferences/PreferencesDialog';\nimport AboutDialog from './AboutDialog';\nimport ProjectManager from '../ProjectManager';\nimport PlatformSpecificAssetsDialog from '../PlatformSpecificAssetsEditor/PlatformSpecificAssetsDialog';\nimport LoaderModal from '../UI/LoaderModal';\nimport DrawerTopBar from '../UI/DrawerTopBar';\nimport CloseConfirmDialog from '../UI/CloseConfirmDialog';\nimport ProfileDialog from '../Profile/ProfileDialog';\nimport Window from '../Utils/Window';\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport { TabContentContainer } from '../UI/ClosableTabs';\nimport { DraggableClosableTabs } from './EditorTabs/DraggableEditorTabs';\nimport {\n  getEditorTabsInitialState,\n  openEditorTab,\n  closeEditorTab,\n  closeOtherEditorTabs,\n  closeAllEditorTabs,\n  changeCurrentTab,\n  getEditors,\n  getCurrentTabIndex,\n  getCurrentTab,\n  closeProjectTabs,\n  closeLayoutTabs,\n  closeExternalLayoutTabs,\n  closeExternalEventsTabs,\n  closeEventsFunctionsExtensionTabs,\n  saveUiSettings,\n  type EditorTabsState,\n  type EditorTab,\n  getEventsFunctionsExtensionEditor,\n  notifyPreviewWillStart,\n  moveTabToTheRightOfHoveredTab,\n} from './EditorTabs/EditorTabsHandler';\nimport { timePromise } from '../Utils/TimeFunction';\nimport HelpFinder from '../HelpFinder';\nimport { renderDebuggerEditorContainer } from './EditorContainers/DebuggerEditorContainer';\nimport { renderEventsEditorContainer } from './EditorContainers/EventsEditorContainer';\nimport { renderExternalEventsEditorContainer } from './EditorContainers/ExternalEventsEditorContainer';\nimport { renderSceneEditorContainer } from './EditorContainers/SceneEditorContainer';\nimport { renderExternalLayoutEditorContainer } from './EditorContainers/ExternalLayoutEditorContainer';\nimport { renderEventsFunctionsExtensionEditorContainer } from './EditorContainers/EventsFunctionsExtensionEditorContainer';\nimport { renderHomePageContainer } from './EditorContainers/HomePage';\nimport { renderResourcesEditorContainer } from './EditorContainers/ResourcesEditorContainer';\nimport ErrorBoundary from '../UI/ErrorBoundary';\nimport SubscriptionDialog from '../Profile/SubscriptionDialog';\nimport ResourcesLoader from '../ResourcesLoader/index';\nimport {\n  type PreviewLauncherInterface,\n  type PreviewLauncherProps,\n  type PreviewLauncherComponent,\n} from '../Export/PreviewLauncher.flow';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n  type ChooseResourceOptions,\n} from '../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport { type JsExtensionsLoader } from '../JsExtensionsLoader';\nimport EventsFunctionsExtensionsContext from '../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport {\n  getUpdateNotificationTitle,\n  getUpdateNotificationBody,\n  type UpdateStatus,\n} from './UpdaterTools';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport ChangelogDialogContainer from './Changelog/ChangelogDialogContainer';\nimport { getNotNullTranslationFunction } from '../Utils/i18n/getTranslationFunction';\nimport { type I18n } from '@lingui/core';\nimport { t } from '@lingui/macro';\nimport LanguageDialog from './Preferences/LanguageDialog';\nimport PreferencesContext from './Preferences/PreferencesContext';\nimport { getFunctionNameFromType } from '../EventsFunctionsExtensionsLoader';\nimport { type ExportDialogWithoutExportsProps } from '../Export/ExportDialog';\nimport {\n  type CreateProjectDialogWithComponentsProps,\n  type CreateProjectDialogTabs,\n} from '../ProjectCreation/CreateProjectDialog';\nimport {\n  type OnCreateFromExampleShortHeaderFunction,\n  type OnCreateBlankFunction,\n} from '../ProjectCreation/CreateProjectDialog';\nimport { getStartupTimesSummary } from '../Utils/StartupTimes';\nimport {\n  type StorageProvider,\n  type StorageProviderOperations,\n  type FileMetadata,\n  type FileMetadataAndStorageProviderName,\n} from '../ProjectsStorage';\nimport OpenFromStorageProviderDialog from '../ProjectsStorage/OpenFromStorageProviderDialog';\nimport SaveToStorageProviderDialog from '../ProjectsStorage/SaveToStorageProviderDialog';\nimport { useOpenConfirmDialog } from '../ProjectsStorage/OpenConfirmDialog';\nimport verifyProjectContent from '../ProjectsStorage/ProjectContentChecker';\nimport UnsavedChangesContext from './UnsavedChangesContext';\nimport { type MainMenuProps } from './MainMenu.flow';\nimport useForceUpdate from '../Utils/UseForceUpdate';\nimport useStateWithCallback from '../Utils/UseSetStateWithCallback';\nimport { useKeyboardShortcuts } from '../KeyboardShortcuts';\nimport useMainFrameCommands from './MainFrameCommands';\nimport CommandPalette, {\n  type CommandPaletteInterface,\n} from '../CommandPalette/CommandPalette';\nimport CommandsContextScopedProvider from '../CommandPalette/CommandsScopedContext';\nimport { isExtensionNameTaken } from '../ProjectManager/EventFunctionExtensionNameVerifier';\nimport {\n  type PreviewState,\n  usePreviewDebuggerServerWatcher,\n} from './PreviewState';\nimport { type HotReloadPreviewButtonProps } from '../HotReload/HotReloadPreviewButton';\nimport HotReloadLogsDialog from '../HotReload/HotReloadLogsDialog';\nimport { useDiscordRichPresence } from '../Utils/UpdateDiscordRichPresence';\nimport { useResourceFetcher } from '../ProjectsStorage/ResourceFetcher';\nimport { delay } from '../Utils/Delay';\nimport { type ExtensionShortHeader } from '../Utils/GDevelopServices/Extension';\nimport { findAndLogProjectPreviewErrors } from '../Utils/ProjectErrorsChecker';\nimport { renameResourcesInProject } from '../ResourcesList/ResourceUtils';\nimport { NewResourceDialog } from '../ResourcesList/NewResourceDialog';\nimport {\n  addCreateBadgePreHookIfNotClaimed,\n  TRIVIAL_FIRST_DEBUG,\n  TRIVIAL_FIRST_PREVIEW,\n} from '../Utils/GDevelopServices/Badge';\nimport AuthenticatedUserContext from '../Profile/AuthenticatedUserContext';\nimport OnboardingDialog from './Onboarding/OnboardingDialog';\nimport LeaderboardProvider from '../Leaderboard/LeaderboardProvider';\nimport { sendEventsExtractedAsFunction } from '../Utils/Analytics/EventSender';\n\nconst GD_STARTUP_TIMES = global.GD_STARTUP_TIMES || [];\n\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  drawerContent: {\n    width: 320,\n    overflowX: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n};\n\nconst findStorageProviderFor = (\n  i18n: I18n,\n  storageProviders: Array<StorageProvider>,\n  fileMetadataAndStorageProviderName: FileMetadataAndStorageProviderName\n): ?StorageProvider => {\n  const { storageProviderName } = fileMetadataAndStorageProviderName;\n  const storageProvider = storageProviders.filter(\n    storageProvider => storageProvider.internalName === storageProviderName\n  )[0];\n\n  if (!storageProvider) {\n    const { storageProviderName } = fileMetadataAndStorageProviderName;\n    showErrorBox({\n      message: i18n._(\n        t`Unable to open the project because this provider is unknown: ${storageProviderName}. Try to open the project again from another location.`\n      ),\n      rawError: new Error(\n        `Can't find storage provider called \"${storageProviderName}\"`\n      ),\n      errorId: 'unknown-storage-provider',\n    });\n    return;\n  }\n\n  return storageProvider;\n};\n\nexport type State = {|\n  createDialogOpen: boolean,\n  currentProject: ?gdProject,\n  currentFileMetadata: ?FileMetadata,\n  editorTabs: EditorTabsState,\n  snackMessage: string,\n  snackMessageOpen: boolean,\n  updateStatus: UpdateStatus,\n  openFromStorageProviderDialogOpen: boolean,\n  saveToStorageProviderDialogOpen: boolean,\n  eventsFunctionsExtensionsError: ?Error,\n  gdjsDevelopmentWatcherEnabled: boolean,\n|};\n\nconst initialPreviewState: PreviewState = {\n  previewLayoutName: null,\n  previewExternalLayoutName: null,\n  isPreviewOverriden: false,\n  overridenPreviewLayoutName: null,\n  overridenPreviewExternalLayoutName: null,\n};\n\ntype LaunchPreviewOptions = {\n  networkPreview?: boolean,\n  hotReload?: boolean,\n  projectDataOnlyExport?: boolean,\n  fullLoadingScreen?: boolean,\n};\n\nexport type Props = {\n  integratedEditor?: boolean,\n  introDialog?: React.Element<*>,\n  renderMainMenu?: MainMenuProps => React.Node,\n  renderPreviewLauncher?: (\n    props: PreviewLauncherProps,\n    ref: (previewLauncher: ?PreviewLauncherInterface) => void\n  ) => React.Element<PreviewLauncherComponent>,\n  onEditObject?: gdObject => void,\n  storageProviders: Array<StorageProvider>,\n  getStorageProviderOperations: (\n    ?StorageProvider\n  ) => Promise<StorageProviderOperations>,\n  getStorageProvider: () => StorageProvider,\n  resourceSources: Array<ResourceSource>,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  requestUpdate?: () => void,\n  renderExportDialog?: ExportDialogWithoutExportsProps => React.Node,\n  renderCreateDialog?: CreateProjectDialogWithComponentsProps => React.Node,\n  onCreateFromExampleShortHeader: OnCreateFromExampleShortHeaderFunction,\n  onCreateBlank: OnCreateBlankFunction,\n  renderGDJSDevelopmentWatcher?: ?() => React.Node,\n  extensionsLoader?: JsExtensionsLoader,\n  initialFileMetadataToOpen: ?FileMetadata,\n  i18n: I18n,\n};\n\nconst MainFrame = (props: Props) => {\n  const [state, setState]: [\n    State,\n    ((State => State) | State) => Promise<State>,\n  ] = useStateWithCallback(\n    ({\n      createDialogOpen: false,\n      currentProject: null,\n      currentFileMetadata: null,\n      editorTabs: getEditorTabsInitialState(),\n      snackMessage: '',\n      snackMessageOpen: false,\n      updateStatus: { message: '', status: 'unknown' },\n      openFromStorageProviderDialogOpen: false,\n      saveToStorageProviderDialogOpen: false,\n      eventsFunctionsExtensionsError: null,\n      gdjsDevelopmentWatcherEnabled: false,\n    }: State)\n  );\n  const toolbar = React.useRef<?ToolbarInterface>(null);\n  const authenticatedUser = React.useContext(AuthenticatedUserContext);\n\n  const [\n    chooseResourceOptions,\n    setChooseResourceOptions,\n  ] = React.useState<?ChooseResourceOptions>(null);\n  const [onResourceChosen, setOnResourceChosen] = React.useState<?(\n    Array<gdResource>\n  ) => void>(null);\n  const _previewLauncher = React.useRef((null: ?PreviewLauncherInterface));\n  const forceUpdate = useForceUpdate();\n  const [isLoadingProject, setIsLoadingProject] = React.useState<boolean>(\n    false\n  );\n  const [isSavingProject, setIsSavingProject] = React.useState<boolean>(false);\n  const [projectManagerOpen, openProjectManager] = React.useState<boolean>(\n    false\n  );\n  const [introDialogOpen, openIntroDialog] = React.useState<boolean>(false);\n  const [languageDialogOpen, openLanguageDialog] = React.useState<boolean>(\n    false\n  );\n  const [helpFinderDialogOpen, openHelpFinderDialog] = React.useState<boolean>(\n    false\n  );\n  const [\n    platformSpecificAssetsDialogOpen,\n    openPlatformSpecificAssetsDialog,\n  ] = React.useState<boolean>(false);\n  const [aboutDialogOpen, openAboutDialog] = React.useState<boolean>(false);\n  const [profileDialogInitialTab, setProfileDialogInitialTab] = React.useState<\n    'profile' | 'games-dashboard'\n  >('profile');\n  const [profileDialogOpen, openProfileDialog] = React.useState<boolean>(false);\n  const [\n    preferencesDialogOpen,\n    openPreferencesDialog,\n  ] = React.useState<boolean>(false);\n  const [\n    subscriptionDialogOpen,\n    openSubscriptionDialog,\n  ] = React.useState<boolean>(false);\n  const [exportDialogOpen, openExportDialog] = React.useState<boolean>(false);\n  const preferences = React.useContext(PreferencesContext);\n  const [previewLoading, setPreviewLoading] = React.useState<boolean>(false);\n  const [previewState, setPreviewState] = React.useState(initialPreviewState);\n  const commandPaletteRef = React.useRef((null: ?CommandPaletteInterface));\n  const eventsFunctionsExtensionsContext = React.useContext(\n    EventsFunctionsExtensionsContext\n  );\n  const previewDebuggerServer =\n    _previewLauncher.current &&\n    _previewLauncher.current.getPreviewDebuggerServer();\n  const {\n    previewDebuggerIds,\n    hotReloadLogs,\n    clearHotReloadLogs,\n  } = usePreviewDebuggerServerWatcher(previewDebuggerServer);\n  const hasPreviewsRunning = !!previewDebuggerIds.length;\n  const {\n    ensureInteractionHappened,\n    renderOpenConfirmDialog,\n  } = useOpenConfirmDialog();\n  const {\n    ensureResourcesAreFetched,\n    renderResourceFetcherDialog,\n  } = useResourceFetcher();\n  const eventsFunctionsExtensionsState = React.useContext(\n    EventsFunctionsExtensionsContext\n  );\n  const unsavedChanges = React.useContext(UnsavedChangesContext);\n  const [\n    createDialogInitialTab,\n    setCreateDialogInitialTab,\n  ] = React.useState<CreateProjectDialogTabs>('examples');\n\n  // This is just for testing, to check if we're getting the right state\n  // and gives us an idea about the number of re-renders.\n  // React.useEffect(() => {\n  //   console.log(state);\n  // });\n\n  const {\n    currentProject,\n    currentFileMetadata,\n    updateStatus,\n    eventsFunctionsExtensionsError,\n  } = state;\n  const {\n    renderExportDialog,\n    renderCreateDialog,\n    onCreateFromExampleShortHeader,\n    onCreateBlank,\n    resourceSources,\n    renderPreviewLauncher,\n    resourceExternalEditors,\n    getStorageProviderOperations,\n    getStorageProvider,\n    integratedEditor,\n    initialFileMetadataToOpen,\n    introDialog,\n    i18n,\n    renderGDJSDevelopmentWatcher,\n    renderMainMenu,\n  } = props;\n\n  React.useEffect(\n    () => {\n      if (!integratedEditor) openHomePage();\n      GD_STARTUP_TIMES.push(['MainFrameComponentDidMount', performance.now()]);\n      _loadExtensions()\n        .then(() =>\n          // Enable the GDJS development watcher *after* the extensions are loaded,\n          // to avoid the watcher interfering with the extension loading (by updating GDJS,\n          // which could lead in the extension loading failing for some extensions as file\n          // are removed/copied).\n          setState(state => ({\n            ...state,\n            gdjsDevelopmentWatcherEnabled: true,\n          }))\n        )\n        .then(async state => {\n          GD_STARTUP_TIMES.push([\n            'MainFrameComponentDidMountFinished',\n            performance.now(),\n          ]);\n\n          console.info('Startup times:', getStartupTimesSummary());\n\n          const {\n            getAutoOpenMostRecentProject,\n            getRecentProjectFiles,\n            hadProjectOpenedDuringLastSession,\n          } = preferences;\n\n          if (initialFileMetadataToOpen) {\n            // Open the initial file metadata (i.e: the file that was passed\n            // as argument and recognized by a storage provider). Note that the storage\n            // provider is assumed to be already set to the proper one.\n            const storageProviderOperations = await getStorageProviderOperations();\n            const proceed = await ensureInteractionHappened(\n              storageProviderOperations\n            );\n            if (proceed) openInitialFileMetadata();\n          } else if (\n            getAutoOpenMostRecentProject() &&\n            hadProjectOpenedDuringLastSession() &&\n            getRecentProjectFiles()[0]\n          ) {\n            // Re-open the last opened project, if any and if asked to.\n            const fileMetadataAndStorageProviderName = getRecentProjectFiles()[0];\n            const storageProvider = findStorageProviderFor(\n              i18n,\n              props.storageProviders,\n              fileMetadataAndStorageProviderName\n            );\n            if (!storageProvider) return;\n\n            const storageProviderOperations = await getStorageProviderOperations(\n              storageProvider\n            );\n            const proceed = await ensureInteractionHappened(\n              storageProviderOperations\n            );\n            if (proceed)\n              openFromFileMetadataWithStorageProvider(\n                fileMetadataAndStorageProviderName\n              );\n          } else {\n            // Open the intro dialog if not opening any project.\n            if (introDialog) openIntroDialog(true);\n          }\n        })\n        .catch(() => {\n          /* Ignore errors */\n        });\n    },\n    // eslint-disable-next-line\n    []\n  );\n\n  const openProfileDialogWithTab = (\n    profileDialogInitialTab: 'profile' | 'games-dashboard'\n  ) => {\n    setProfileDialogInitialTab(profileDialogInitialTab);\n    openProfileDialog(true);\n  };\n\n  const _showSnackMessage = React.useCallback(\n    (snackMessage: string) => {\n      setState(state => ({\n        ...state,\n        snackMessage,\n        snackMessageOpen: true,\n      }));\n    },\n    [setState]\n  );\n  const _closeSnackMessage = React.useCallback(\n    () => {\n      setState(state => ({\n        ...state,\n        snackMessageOpen: false,\n      }));\n    },\n    [setState]\n  );\n\n  const openInitialFileMetadata = async () => {\n    if (!initialFileMetadataToOpen) return;\n\n    // We use the current storage provider, as it's supposed to be able to open\n    // the initial file metadata. Indeed, it's the responsibility of the `ProjectStorageProviders`\n    // to set the initial storage provider if an initial file metadata is set.\n    const state = await openFromFileMetadata(initialFileMetadataToOpen);\n    if (state)\n      openSceneOrProjectManager({\n        currentProject: state.currentProject,\n        editorTabs: state.editorTabs,\n      });\n  };\n\n  const updateToolbar = React.useCallback(\n    (newEditorTabs = state.editorTabs) => {\n      const editorTab = getCurrentTab(newEditorTabs);\n      if (!editorTab || !editorTab.editorRef) {\n        setEditorToolbar(null);\n        return;\n      }\n\n      editorTab.editorRef.updateToolbar();\n    },\n    [state.editorTabs]\n  );\n\n  React.useEffect(\n    () => {\n      updateToolbar();\n    },\n    [updateToolbar]\n  );\n\n  const _languageDidChange = () => {\n    // A change in the language will automatically be applied\n    // on all React components, as it's handled by GDI18nProvider.\n    // We still have this method that will be called when the language\n    // dialog is closed after a language change. We then reload GDevelop\n    // extensions so that they declare all objects/actions/condition/etc...\n    // using the new language.\n    gd.JsPlatform.get().reloadBuiltinExtensions();\n    _loadExtensions().catch(() => {});\n  };\n\n  const _loadExtensions = (): Promise<void> => {\n    const { extensionsLoader, i18n } = props;\n    if (!extensionsLoader) {\n      console.info(\n        'No extensions loader specified, skipping extensions loading.'\n      );\n      return Promise.reject(new Error('No extension loader specified.'));\n    }\n\n    return extensionsLoader\n      .loadAllExtensions(getNotNullTranslationFunction(i18n))\n      .then(loadingResults => {\n        const successLoadingResults = loadingResults.filter(\n          loadingResult => !loadingResult.result.error\n        );\n        const failLoadingResults = loadingResults.filter(\n          loadingResult =>\n            loadingResult.result.error && !loadingResult.result.dangerous\n        );\n        const dangerousLoadingResults = loadingResults.filter(\n          loadingResult =>\n            loadingResult.result.error && loadingResult.result.dangerous\n        );\n        console.info(`Loaded ${successLoadingResults.length} JS extensions.`);\n        if (failLoadingResults.length) {\n          console.error(\n            `⚠️ Unable to load ${\n              failLoadingResults.length\n            } JS extensions. Please check these errors:`,\n            failLoadingResults\n          );\n        }\n        if (dangerousLoadingResults.length) {\n          console.error(\n            `💣 Dangerous exceptions while loading ${\n              dangerousLoadingResults.length\n            } JS extensions. 🔥 Please check these errors as they will CRASH GDevelop:`,\n            dangerousLoadingResults\n          );\n        }\n      });\n  };\n\n  useDiscordRichPresence(currentProject);\n\n  const closeProject = React.useCallback(\n    (): Promise<void> => {\n      preferences.setHasProjectOpened(false);\n      setPreviewState(initialPreviewState);\n      return setState(state => {\n        if (!currentProject) {\n          // It's important to return a new object to ensure that the promise\n          // will be fired.\n          return { ...state };\n        }\n\n        if (currentProject) {\n          eventsFunctionsExtensionsState.unloadProjectEventsFunctionsExtensions(\n            currentProject\n          );\n          currentProject.delete();\n        }\n\n        return {\n          ...state,\n          currentProject: null,\n          currentFileMetadata: null,\n          editorTabs: closeProjectTabs(state.editorTabs, currentProject),\n        };\n      }).then(() => {});\n    },\n    [currentProject, eventsFunctionsExtensionsState, preferences, setState]\n  );\n\n  const loadFromProject = React.useCallback(\n    async (project: gdProject, fileMetadata: ?FileMetadata): Promise<State> => {\n      if (fileMetadata)\n        preferences.insertRecentProjectFile({\n          fileMetadata,\n          storageProviderName: getStorageProvider().internalName,\n        });\n\n      await closeProject();\n\n      // Make sure that the ResourcesLoader cache is emptied, so that\n      // the URL to a resource with a name in the old project is not re-used\n      // for another resource with the same name in the new project.\n      ResourcesLoader.burstAllUrlsCache();\n      // TODO: Pixi cache should also be burst\n\n      preferences.setHasProjectOpened(true);\n\n      const state = await setState(state => ({\n        ...state,\n        currentProject: project,\n        currentFileMetadata: fileMetadata,\n        createDialogOpen: false,\n      }));\n\n      // Load all the EventsFunctionsExtension when the game is loaded. If they are modified,\n      // their editor will take care of reloading them.\n      eventsFunctionsExtensionsState.loadProjectEventsFunctionsExtensions(\n        project\n      );\n\n      if (fileMetadata) {\n        project.setProjectFile(fileMetadata.fileIdentifier);\n      }\n\n      // Fetch the resources if needed, for example if opening on the desktop app\n      // a project made on the web-app.\n      const { someResourcesWereFetched } = await ensureResourcesAreFetched(\n        project\n      );\n      if (someResourcesWereFetched) {\n        if (unsavedChanges) unsavedChanges.triggerUnsavedChanges();\n      }\n\n      return state;\n    },\n    [\n      unsavedChanges,\n      setState,\n      closeProject,\n      preferences,\n      eventsFunctionsExtensionsState,\n      getStorageProvider,\n      ensureResourcesAreFetched,\n    ]\n  );\n\n  const loadFromSerializedProject = React.useCallback(\n    (\n      serializedProject: gdSerializerElement,\n      fileMetadata: ?FileMetadata\n    ): Promise<State> => {\n      return timePromise(\n        () => {\n          const newProject = gd.ProjectHelper.createNewGDJSProject();\n          newProject.unserializeFrom(serializedProject);\n\n          return loadFromProject(newProject, fileMetadata);\n        },\n        time => console.info(`Unserialization took ${time} ms`)\n      );\n    },\n    [loadFromProject]\n  );\n\n  const openFromFileMetadata = React.useCallback(\n    (fileMetadata: FileMetadata): Promise<?State> => {\n      return getStorageProviderOperations().then(storageProviderOperations => {\n        const {\n          hasAutoSave,\n          onGetAutoSave,\n          onOpen,\n          getOpenErrorMessage,\n        } = storageProviderOperations;\n\n        if (!onOpen) {\n          console.error(\n            'Tried to open a file for a storage without onOpen support:',\n            fileMetadata,\n            storageProviderOperations\n          );\n          return Promise.resolve();\n        }\n\n        const checkForAutosave = (): Promise<FileMetadata> => {\n          if (!hasAutoSave || !onGetAutoSave) {\n            return Promise.resolve(fileMetadata);\n          }\n\n          return hasAutoSave(fileMetadata, true).then(canOpenAutosave => {\n            if (!canOpenAutosave) return fileMetadata;\n\n            const answer = Window.showConfirmDialog(\n              i18n._(\n                t`An autosave file (backup made automatically by GDevelop) that is newer than the project file exists. Would you like to load it instead?`\n              )\n            );\n            if (!answer) return fileMetadata;\n\n            return onGetAutoSave(fileMetadata);\n          });\n        };\n\n        const checkForAutosaveAfterFailure = (): Promise<?FileMetadata> => {\n          if (!hasAutoSave || !onGetAutoSave) {\n            return Promise.resolve(null);\n          }\n\n          return hasAutoSave(fileMetadata, false).then(canOpenAutosave => {\n            if (!canOpenAutosave) return null;\n\n            const answer = Window.showConfirmDialog(\n              i18n._(\n                t`The project file appears to be malformed, but an autosave file exists (backup made automatically by GDevelop). Would you like to try to load it instead?`\n              )\n            );\n            if (!answer) return null;\n\n            return onGetAutoSave(fileMetadata);\n          });\n        };\n\n        setIsLoadingProject(true);\n\n        // Try to find an autosave (and ask user if found)\n        return delay(150)\n          .then(() => checkForAutosave())\n          .then(fileMetadata => onOpen(fileMetadata))\n          .catch(err => {\n            // onOpen failed, tried to find again an autosave\n            return checkForAutosaveAfterFailure().then(fileMetadata => {\n              if (fileMetadata) {\n                return onOpen(fileMetadata);\n              }\n\n              throw err;\n            });\n          })\n          .then(({ content }) => {\n            if (!verifyProjectContent(i18n, content)) {\n              // The content is not recognized and the user was warned. Abort the opening.\n              setIsLoadingProject(false);\n              return;\n            }\n\n            const serializedProject = gd.Serializer.fromJSObject(content);\n            return loadFromSerializedProject(\n              serializedProject,\n              // Note that fileMetadata is the original, unchanged one, even if we're loading\n              // an autosave. If we're for some reason loading an autosave, we still consider\n              // that we're opening the file that was originally requested by the user.\n              fileMetadata\n            ).then(\n              state => {\n                serializedProject.delete();\n                return Promise.resolve(state);\n              },\n              err => {\n                serializedProject.delete();\n                throw err;\n              }\n            );\n          })\n          .catch(error => {\n            const errorMessage = getOpenErrorMessage\n              ? getOpenErrorMessage(error)\n              : t`Check that the path/URL is correct, that you selected a file that is a game file created with GDevelop and that is was not removed.`;\n            showErrorBox({\n              message: [\n                i18n._(t`Unable to open the project.`),\n                i18n._(errorMessage),\n              ].join('\\n'),\n              errorId: 'project-open-error',\n              rawError: error,\n            });\n            setIsLoadingProject(false);\n            return Promise.reject(error);\n          });\n      });\n    },\n    [i18n, getStorageProviderOperations, loadFromSerializedProject]\n  );\n\n  const closeApp = React.useCallback((): void => {\n    return Window.quit();\n  }, []);\n\n  const toggleProjectManager = React.useCallback(\n    () => {\n      if (toolbar.current)\n        openProjectManager(projectManagerOpen => !projectManagerOpen);\n    },\n    [openProjectManager]\n  );\n\n  const setEditorToolbar = (editorToolbar: any, isCurrentTab = true) => {\n    if (!toolbar.current || !isCurrentTab) return;\n\n    toolbar.current.setEditorToolbar(editorToolbar);\n  };\n\n  const onInstallExtension = (extensionShortHeader: ExtensionShortHeader) => {\n    const { currentProject } = state;\n    if (!currentProject) return;\n\n    // Close the extension tab before updating/reinstalling the extension.\n    const eventsFunctionsExtensionName = extensionShortHeader.name;\n\n    if (\n      currentProject.hasEventsFunctionsExtensionNamed(\n        eventsFunctionsExtensionName\n      )\n    ) {\n      const eventsFunctionsExtension = currentProject.getEventsFunctionsExtension(\n        eventsFunctionsExtensionName\n      );\n\n      setState(state => ({\n        ...state,\n        editorTabs: closeEventsFunctionsExtensionTabs(\n          state.editorTabs,\n          eventsFunctionsExtension\n        ),\n      }));\n    }\n  };\n\n  const deleteLayout = (layout: gdLayout) => {\n    const { currentProject } = state;\n    const { i18n } = props;\n    if (!currentProject) return;\n\n    const answer = Window.showConfirmDialog(\n      i18n._(\n        t`Are you sure you want to remove this scene? This can't be undone.`\n      )\n    );\n    if (!answer) return;\n\n    setState(state => ({\n      ...state,\n      editorTabs: closeLayoutTabs(state.editorTabs, layout),\n    })).then(state => {\n      if (currentProject.getFirstLayout() === layout.getName())\n        currentProject.setFirstLayout('');\n      currentProject.removeLayout(layout.getName());\n      _onProjectItemModified();\n    });\n  };\n\n  const deleteExternalLayout = (externalLayout: gdExternalLayout) => {\n    const { currentProject } = state;\n    const { i18n } = props;\n    if (!currentProject) return;\n\n    const answer = Window.showConfirmDialog(\n      i18n._(\n        t`Are you sure you want to remove this external layout? This can't be undone.`\n      )\n    );\n    if (!answer) return;\n\n    setState(state => ({\n      ...state,\n      editorTabs: closeExternalLayoutTabs(state.editorTabs, externalLayout),\n    })).then(state => {\n      if (state.currentProject)\n        state.currentProject.removeExternalLayout(externalLayout.getName());\n      _onProjectItemModified();\n    });\n  };\n\n  const deleteExternalEvents = (externalEvents: gdExternalEvents) => {\n    const { i18n } = props;\n    if (!state.currentProject) return;\n\n    const answer = Window.showConfirmDialog(\n      i18n._(\n        t`Are you sure you want to remove these external events? This can't be undone.`\n      )\n    );\n    if (!answer) return;\n\n    setState(state => ({\n      ...state,\n      editorTabs: closeExternalEventsTabs(state.editorTabs, externalEvents),\n    })).then(state => {\n      if (state.currentProject)\n        state.currentProject.removeExternalEvents(externalEvents.getName());\n      _onProjectItemModified();\n    });\n  };\n\n  const deleteEventsFunctionsExtension = (\n    eventsFunctionsExtension: gdEventsFunctionsExtension\n  ) => {\n    const { currentProject } = state;\n    const { i18n } = props;\n    if (!currentProject) return;\n\n    const answer = Window.showConfirmDialog(\n      i18n._(\n        t`Are you sure you want to remove this extension? This can't be undone.`\n      )\n    );\n    if (!answer) return;\n\n    setState(state => ({\n      ...state,\n      editorTabs: closeEventsFunctionsExtensionTabs(\n        state.editorTabs,\n        eventsFunctionsExtension\n      ),\n    })).then(state => {\n      // Unload the Platform extension that was generated from the events\n      // functions extension.\n      const extensionName = eventsFunctionsExtension.getName();\n      eventsFunctionsExtensionsState.unloadProjectEventsFunctionsExtension(\n        currentProject,\n        extensionName\n      );\n\n      currentProject.removeEventsFunctionsExtension(extensionName);\n      _onProjectItemModified();\n\n      // Reload extensions to make sure any extension that would have been relying\n      // on the unloaded extension is updated.\n      eventsFunctionsExtensionsState.reloadProjectEventsFunctionsExtensions(\n        currentProject\n      );\n    });\n  };\n\n  const renameLayout = (oldName: string, newName: string) => {\n    const { currentProject } = state;\n    const { i18n } = props;\n    if (!currentProject) return;\n\n    if (!currentProject.hasLayoutNamed(oldName) || newName === oldName) return;\n\n    if (newName === '') {\n      showWarningBox(\n        i18n._(t`This name cannot be empty, please enter a new name.`),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    if (currentProject.hasLayoutNamed(newName)) {\n      showWarningBox(i18n._(t`Another scene with this name already exists.`), {\n        delayToNextTick: true,\n      });\n      return;\n    }\n\n    const layout = currentProject.getLayout(oldName);\n    const shouldChangeProjectFirstLayout =\n      oldName === currentProject.getFirstLayout();\n    setState(state => ({\n      ...state,\n      editorTabs: closeLayoutTabs(state.editorTabs, layout),\n    })).then(state => {\n      layout.setName(newName);\n      if (shouldChangeProjectFirstLayout)\n        currentProject.setFirstLayout(newName);\n      _onProjectItemModified();\n    });\n  };\n\n  const renameExternalLayout = (oldName: string, newName: string) => {\n    const { currentProject } = state;\n    const { i18n } = props;\n    if (!currentProject) return;\n\n    if (!currentProject.hasExternalLayoutNamed(oldName) || newName === oldName)\n      return;\n\n    if (newName === '') {\n      showWarningBox(\n        i18n._(t`This name cannot be empty, please enter a new name.`),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    if (currentProject.hasExternalLayoutNamed(newName)) {\n      showWarningBox(\n        i18n._(t`Another external layout with this name already exists.`),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    const externalLayout = currentProject.getExternalLayout(oldName);\n    setState(state => ({\n      ...state,\n      editorTabs: closeExternalLayoutTabs(state.editorTabs, externalLayout),\n    })).then(state => {\n      externalLayout.setName(newName);\n      _onProjectItemModified();\n    });\n  };\n\n  const renameExternalEvents = (oldName: string, newName: string) => {\n    const { currentProject } = state;\n    const { i18n } = props;\n    if (!currentProject) return;\n\n    if (!currentProject.hasExternalEventsNamed(oldName) || newName === oldName)\n      return;\n\n    if (newName === '') {\n      showWarningBox(\n        i18n._(t`This name cannot be empty, please enter a new name.`),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    if (currentProject.hasExternalEventsNamed(newName)) {\n      showWarningBox(\n        i18n._(t`Other external events with this name already exist.`),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    const externalEvents = currentProject.getExternalEvents(oldName);\n    setState(state => ({\n      ...state,\n      editorTabs: closeExternalEventsTabs(state.editorTabs, externalEvents),\n    })).then(state => {\n      externalEvents.setName(newName);\n      _onProjectItemModified();\n    });\n  };\n\n  const renameEventsFunctionsExtension = (oldName: string, newName: string) => {\n    const { currentProject } = state;\n    const { i18n } = props;\n    if (!currentProject) return;\n\n    if (\n      !currentProject.hasEventsFunctionsExtensionNamed(oldName) ||\n      newName === oldName\n    )\n      return;\n\n    if (newName === '') {\n      showWarningBox(\n        i18n._(t`This name cannot be empty, please enter a new name.`),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    if (isExtensionNameTaken(newName, currentProject)) {\n      showWarningBox(\n        i18n._(\n          t`Another extension with this name already exists (or you used a reserved extension name). Please choose another name.`\n        ),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    if (!gd.Project.validateName(newName)) {\n      showWarningBox(\n        i18n._(\n          t`This name is invalid. Only use alphanumeric characters (0-9, a-z) and underscores. Digits are not allowed as the first character.`\n        ),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    const eventsFunctionsExtension = currentProject.getEventsFunctionsExtension(\n      oldName\n    );\n    setState(state => ({\n      ...state,\n      editorTabs: closeEventsFunctionsExtensionTabs(\n        state.editorTabs,\n        eventsFunctionsExtension\n      ),\n    })).then(state => {\n      // Refactor the project to update the instructions (and later expressions)\n      // of this extension:\n      gd.WholeProjectRefactorer.renameEventsFunctionsExtension(\n        currentProject,\n        eventsFunctionsExtension,\n        oldName,\n        newName\n      );\n      eventsFunctionsExtension.setName(newName);\n      eventsFunctionsExtensionsState.unloadProjectEventsFunctionsExtension(\n        currentProject,\n        oldName\n      );\n      eventsFunctionsExtensionsState.reloadProjectEventsFunctionsExtensions(\n        currentProject\n      );\n      _onProjectItemModified();\n    });\n  };\n\n  const setPreviewedLayout = (\n    previewLayoutName: ?string,\n    previewExternalLayoutName?: ?string\n  ) => {\n    setPreviewState(\n      previewState =>\n        ({\n          ...previewState,\n          previewLayoutName,\n          previewExternalLayoutName,\n        }: PreviewState)\n    );\n  };\n\n  const setPreviewOverride = ({\n    isPreviewOverriden,\n    overridenPreviewLayoutName,\n    overridenPreviewExternalLayoutName,\n  }) => {\n    setPreviewState(previewState => ({\n      ...previewState,\n      isPreviewOverriden,\n      overridenPreviewLayoutName,\n      overridenPreviewExternalLayoutName,\n    }));\n  };\n\n  const autosaveProjectIfNeeded = React.useCallback(\n    async () => {\n      if (!currentProject) return;\n\n      const storageProviderOperations = await getStorageProviderOperations();\n      if (\n        preferences.values.autosaveOnPreview &&\n        storageProviderOperations.onAutoSaveProject &&\n        currentFileMetadata\n      ) {\n        try {\n          await storageProviderOperations.onAutoSaveProject(\n            currentProject,\n            currentFileMetadata\n          );\n        } catch (err) {\n          console.error('Error while auto-saving the project: ', err);\n          _showSnackMessage(\n            i18n._(\n              t`There was an error while making an auto-save of the project. Verify that you have permissions to write in the project folder.`\n            )\n          );\n        }\n      }\n    },\n    [\n      i18n,\n      _showSnackMessage,\n      currentProject,\n      currentFileMetadata,\n      getStorageProviderOperations,\n      preferences.values.autosaveOnPreview,\n    ]\n  );\n\n  const _launchPreview = React.useCallback(\n    ({\n      networkPreview,\n      hotReload,\n      projectDataOnlyExport,\n      fullLoadingScreen,\n    }: LaunchPreviewOptions) => {\n      if (!currentProject) return;\n      if (currentProject.getLayoutsCount() === 0) return;\n\n      const previewLauncher = _previewLauncher.current;\n      if (!previewLauncher) return;\n\n      setPreviewLoading(true);\n      notifyPreviewWillStart(state.editorTabs);\n\n      const layoutName = previewState.isPreviewOverriden\n        ? previewState.overridenPreviewLayoutName\n        : previewState.previewLayoutName;\n      const externalLayoutName = previewState.isPreviewOverriden\n        ? previewState.overridenPreviewExternalLayoutName\n        : previewState.previewExternalLayoutName;\n\n      const layout =\n        layoutName && currentProject.hasLayoutNamed(layoutName)\n          ? currentProject.getLayout(layoutName)\n          : currentProject.getLayoutAt(0);\n      const externalLayout =\n        externalLayoutName &&\n        currentProject.hasExternalLayoutNamed(externalLayoutName)\n          ? currentProject.getExternalLayout(externalLayoutName)\n          : null;\n\n      autosaveProjectIfNeeded();\n\n      // Note that in the future, this kind of checks could be done\n      // and stored in a \"diagnostic report\", rather than hiding errors\n      // from the user.\n      findAndLogProjectPreviewErrors(currentProject);\n\n      eventsFunctionsExtensionsState\n        .ensureLoadFinished()\n        .then(() =>\n          previewLauncher.launchPreview({\n            project: currentProject,\n            layout,\n            externalLayout,\n            networkPreview: !!networkPreview,\n            hotReload: !!hotReload,\n            projectDataOnlyExport: !!projectDataOnlyExport,\n            fullLoadingScreen: !!fullLoadingScreen,\n            getIsMenuBarHiddenInPreview:\n              preferences.getIsMenuBarHiddenInPreview,\n            getIsAlwaysOnTopInPreview: preferences.getIsAlwaysOnTopInPreview,\n          })\n        )\n        .catch(error => {\n          console.error(\n            'Error caught while launching preview, this should never happen.',\n            error\n          );\n        })\n        .then(() => {\n          setPreviewLoading(false);\n        });\n    },\n    [\n      autosaveProjectIfNeeded,\n      currentProject,\n      eventsFunctionsExtensionsState,\n      previewState,\n      state.editorTabs,\n      preferences.getIsMenuBarHiddenInPreview,\n      preferences.getIsAlwaysOnTopInPreview,\n    ]\n  );\n\n  const launchPreview = addCreateBadgePreHookIfNotClaimed(\n    authenticatedUser,\n    TRIVIAL_FIRST_PREVIEW,\n    _launchPreview\n  );\n\n  const launchNewPreview = React.useCallback(\n    () => launchPreview({ networkPreview: false }),\n    [launchPreview]\n  );\n\n  const launchHotReloadPreview = React.useCallback(\n    () => launchPreview({ networkPreview: false, hotReload: true }),\n    [launchPreview]\n  );\n\n  const launchNetworkPreview = React.useCallback(\n    () => launchPreview({ networkPreview: true, hotReload: false }),\n    [launchPreview]\n  );\n\n  const hotReloadPreviewButtonProps: HotReloadPreviewButtonProps = React.useMemo(\n    () => ({\n      hasPreviewsRunning,\n      launchProjectWithLoadingScreenPreview: () =>\n        launchPreview({ fullLoadingScreen: true }),\n      launchProjectDataOnlyPreview: () =>\n        launchPreview({ hotReload: true, projectDataOnlyExport: true }),\n    }),\n    [hasPreviewsRunning, launchPreview]\n  );\n\n  const openLayout = React.useCallback(\n    (\n      name: string,\n      {\n        openEventsEditor = true,\n        openSceneEditor = true,\n      }: { openEventsEditor: boolean, openSceneEditor: boolean } = {},\n      editorTabs = state.editorTabs\n    ) => {\n      const sceneEditorOptions = {\n        label: name,\n        projectItemName: name,\n        renderEditorContainer: renderSceneEditorContainer,\n        key: 'layout ' + name,\n      };\n      const eventsEditorOptions = {\n        label: name + ' ' + i18n._(t`(Events)`),\n        projectItemName: name,\n        renderEditorContainer: renderEventsEditorContainer,\n        key: 'layout events ' + name,\n        dontFocusTab: openSceneEditor,\n      };\n\n      const tabsWithSceneEditor = openSceneEditor\n        ? openEditorTab(editorTabs, sceneEditorOptions)\n        : editorTabs;\n      const tabsWithSceneAndEventsEditors = openEventsEditor\n        ? openEditorTab(tabsWithSceneEditor, eventsEditorOptions)\n        : tabsWithSceneEditor;\n\n      setState(state => ({\n        ...state,\n        editorTabs: tabsWithSceneAndEventsEditors,\n      }));\n      setIsLoadingProject(false);\n      openProjectManager(false);\n    },\n    [i18n, setState, state.editorTabs]\n  );\n\n  const openExternalEvents = React.useCallback(\n    (name: string) => {\n      setState(state => ({\n        ...state,\n        editorTabs: openEditorTab(state.editorTabs, {\n          label: name,\n          projectItemName: name,\n          renderEditorContainer: renderExternalEventsEditorContainer,\n          key: 'external events ' + name,\n        }),\n      }));\n      openProjectManager(false);\n    },\n    [setState]\n  );\n\n  const openExternalLayout = React.useCallback(\n    (name: string) => {\n      setState(state => ({\n        ...state,\n        editorTabs: openEditorTab(state.editorTabs, {\n          label: name,\n          projectItemName: name,\n          renderEditorContainer: renderExternalLayoutEditorContainer,\n          key: 'external layout ' + name,\n        }),\n      }));\n      openProjectManager(false);\n    },\n    [setState, openProjectManager]\n  );\n\n  const openEventsFunctionsExtension = React.useCallback(\n    (\n      name: string,\n      initiallyFocusedFunctionName?: string,\n      initiallyFocusedBehaviorName?: ?string\n    ) => {\n      setState(state => ({\n        ...state,\n        editorTabs: openEditorTab(state.editorTabs, {\n          label: name + ' ' + i18n._(t`(Extension)`),\n          projectItemName: name,\n          extraEditorProps: {\n            initiallyFocusedFunctionName,\n            initiallyFocusedBehaviorName,\n          },\n          renderEditorContainer: renderEventsFunctionsExtensionEditorContainer,\n          key: 'events functions extension ' + name,\n        }),\n      }));\n      openProjectManager(false);\n    },\n    [setState, openProjectManager, i18n]\n  );\n\n  const openResources = () => {\n    const { i18n } = props;\n    setState(state => ({\n      ...state,\n      editorTabs: openEditorTab(state.editorTabs, {\n        label: i18n._(t`Resources`),\n        projectItemName: null,\n        renderEditorContainer: renderResourcesEditorContainer,\n        key: 'resources',\n      }),\n    }));\n  };\n\n  const openHomePage = React.useCallback(\n    () => {\n      setState(state => ({\n        ...state,\n        editorTabs: openEditorTab(state.editorTabs, {\n          icon: <HomeIcon role=\"img\" titleAccess=\"Home\" />,\n          projectItemName: null,\n          renderEditorContainer: renderHomePageContainer,\n          key: 'start page',\n          closable: false,\n        }),\n      }));\n    },\n    [setState]\n  );\n\n  const _openDebugger = React.useCallback(\n    () => {\n      setState(state => ({\n        ...state,\n        editorTabs: openEditorTab(state.editorTabs, {\n          label: i18n._(t`Debugger`),\n          projectItemName: null,\n          renderEditorContainer: renderDebuggerEditorContainer,\n          key: 'debugger',\n        }),\n      }));\n    },\n    [i18n, setState]\n  );\n\n  const openDebugger = addCreateBadgePreHookIfNotClaimed(\n    authenticatedUser,\n    TRIVIAL_FIRST_DEBUG,\n    _openDebugger\n  );\n\n  const launchDebuggerAndPreview = React.useCallback(\n    () => {\n      openDebugger();\n      launchHotReloadPreview();\n    },\n    [openDebugger, launchHotReloadPreview]\n  );\n\n  const openInstructionOrExpression = (\n    extension: gdPlatformExtension,\n    type: string\n  ) => {\n    const { currentProject, editorTabs } = state;\n    if (!currentProject) return;\n\n    const extensionName = extension.getName();\n    if (currentProject.hasEventsFunctionsExtensionNamed(extensionName)) {\n      // It's an events functions extension, open the editor for it.\n      const eventsFunctionsExtension = currentProject.getEventsFunctionsExtension(\n        extensionName\n      );\n      const functionName = getFunctionNameFromType(type);\n\n      const foundTab = getEventsFunctionsExtensionEditor(\n        editorTabs,\n        eventsFunctionsExtension\n      );\n      if (foundTab) {\n        // Open the given function and focus the tab\n        foundTab.editor.selectEventsFunctionByName(\n          functionName.name,\n          functionName.behaviorName\n        );\n        setState(state => ({\n          ...state,\n          editorTabs: changeCurrentTab(editorTabs, foundTab.tabIndex),\n        }));\n      } else {\n        // Open a new editor for the extension and the given function\n        openEventsFunctionsExtension(\n          extensionName,\n          functionName.name,\n          functionName.behaviorName\n        );\n      }\n    } else {\n      // It's not an events functions extension, we should not be here.\n      console.warn(\n        `Extension with name=${extensionName} can not be opened (no editor for this)`\n      );\n    }\n  };\n\n  const _onProjectItemModified = () => {\n    if (unsavedChanges) unsavedChanges.triggerUnsavedChanges();\n    forceUpdate();\n  };\n\n  const onCreateEventsFunction = (\n    extensionName: string,\n    eventsFunction: gdEventsFunction,\n    editorIdentifier:\n      | 'scene-events-editor'\n      | 'extension-events-editor'\n      | 'external-events-editor'\n  ) => {\n    const { currentProject } = state;\n    if (!currentProject) return;\n\n    sendEventsExtractedAsFunction({\n      step: 'end',\n      parentEditor: editorIdentifier,\n    });\n\n    // Names are assumed to be already validated\n    const createNewExtension = !currentProject.hasEventsFunctionsExtensionNamed(\n      extensionName\n    );\n    const extension = createNewExtension\n      ? currentProject.insertNewEventsFunctionsExtension(extensionName, 0)\n      : currentProject.getEventsFunctionsExtension(extensionName);\n\n    if (createNewExtension) {\n      extension.setFullName(extensionName);\n      extension.setDescription(\n        'Originally automatically extracted from events of the project'\n      );\n    }\n\n    extension.insertEventsFunction(eventsFunction, 0);\n    eventsFunctionsExtensionsState.loadProjectEventsFunctionsExtensions(\n      currentProject\n    );\n  };\n\n  const openCreateProjectDialog = React.useCallback(\n    (tab: CreateProjectDialogTabs) => (open: boolean = true) => {\n      setCreateDialogInitialTab(tab);\n      setState(state => ({ ...state, createDialogOpen: open }));\n    },\n    [setState]\n  );\n  const closeCreateDialog = () => {\n    setState(state => ({ ...state, createDialogOpen: false }));\n  };\n  const onOpenTutorials = React.useMemo(\n    () => openCreateProjectDialog('tutorials'),\n    [openCreateProjectDialog]\n  );\n  const onOpenExamples = React.useMemo(\n    () => openCreateProjectDialog('examples'),\n    [openCreateProjectDialog]\n  );\n  const onOpenGamesShowcase = React.useMemo(\n    () => openCreateProjectDialog('games-showcase'),\n    [openCreateProjectDialog]\n  );\n\n  const openOpenFromStorageProviderDialog = React.useCallback(\n    (open: boolean = true) => {\n      setState(state => ({\n        ...state,\n        openFromStorageProviderDialogOpen: open,\n      }));\n    },\n    [setState]\n  );\n\n  const openSceneOrProjectManager = React.useCallback(\n    (newState: {|\n      currentProject: ?gdProject,\n      editorTabs: EditorTabsState,\n    |}) => {\n      const { currentProject, editorTabs } = newState;\n      if (!currentProject) return;\n\n      if (currentProject.getLayoutsCount() <= 1) {\n        if (currentProject.getLayoutsCount() === 0)\n          currentProject.insertNewLayout(i18n._(t`Untitled scene`), 0);\n\n        openLayout(\n          currentProject.getLayoutAt(0).getName(),\n          {\n            openSceneEditor: true,\n            openEventsEditor: true,\n          },\n          editorTabs\n        );\n      } else {\n        setState(state => ({\n          ...state,\n          currentProject,\n          editorTabs,\n        })).then(() => {\n          setIsLoadingProject(false);\n          openProjectManager(true);\n        });\n      }\n    },\n    [openLayout, setState, i18n]\n  );\n\n  const chooseProjectWithStorageProviderPicker = React.useCallback(\n    () => {\n      getStorageProviderOperations().then(storageProviderOperations => {\n        if (!storageProviderOperations.onOpenWithPicker) return;\n\n        return storageProviderOperations\n          .onOpenWithPicker()\n          .then(fileMetadata => {\n            if (!fileMetadata) return;\n\n            return openFromFileMetadata(fileMetadata).then(state => {\n              if (state)\n                openSceneOrProjectManager({\n                  currentProject: state.currentProject,\n                  editorTabs: state.editorTabs,\n                });\n              //addRecentFile(fileMetadata);\n            });\n          })\n          .catch(error => {\n            const errorMessage = storageProviderOperations.getOpenErrorMessage\n              ? storageProviderOperations.getOpenErrorMessage(error)\n              : t`Verify that you have the authorizations for reading the file you're trying to access.`;\n            showErrorBox({\n              message: [\n                i18n._(t`Unable to open the project.`),\n                i18n._(errorMessage),\n              ].join('\\n'),\n              errorId: 'project-open-with-picker-error',\n              rawError: error,\n            });\n          });\n      });\n    },\n    [\n      i18n,\n      getStorageProviderOperations,\n      openFromFileMetadata,\n      openSceneOrProjectManager,\n    ]\n  );\n\n  const chooseProject = React.useCallback(\n    () => {\n      if (\n        props.storageProviders.filter(\n          ({ hiddenInOpenDialog }) => !hiddenInOpenDialog\n        ).length > 1\n      ) {\n        openOpenFromStorageProviderDialog();\n      } else {\n        chooseProjectWithStorageProviderPicker();\n      }\n    },\n    [\n      props.storageProviders,\n      openOpenFromStorageProviderDialog,\n      chooseProjectWithStorageProviderPicker,\n    ]\n  );\n\n  const openFromFileMetadataWithStorageProvider = React.useCallback(\n    (\n      fileMetadataAndStorageProviderName: FileMetadataAndStorageProviderName\n    ) => {\n      const { fileMetadata } = fileMetadataAndStorageProviderName;\n      const storageProvider = findStorageProviderFor(\n        i18n,\n        props.storageProviders,\n        fileMetadataAndStorageProviderName\n      );\n\n      if (!storageProvider) return;\n\n      getStorageProviderOperations(storageProvider).then(() => {\n        openFromFileMetadata(fileMetadata)\n          .then(state => {\n            if (state)\n              openSceneOrProjectManager({\n                currentProject: state.currentProject,\n                editorTabs: state.editorTabs,\n              });\n          })\n          .catch(error => {\n            /* Ignore error, it was already surfaced to the user. */\n          });\n      });\n    },\n    [\n      i18n,\n      openFromFileMetadata,\n      openSceneOrProjectManager,\n      props.storageProviders,\n      getStorageProviderOperations,\n    ]\n  );\n\n  const openSaveToStorageProviderDialog = React.useCallback(\n    (open: boolean = true) => {\n      if (open) {\n        // Ensure the project manager is closed as Google Drive storage provider\n        // display a picker that does not play nice with material-ui's overlays.\n        openProjectManager(false);\n      }\n      setState(state => ({ ...state, saveToStorageProviderDialogOpen: open }));\n    },\n    [setState]\n  );\n\n  const saveProjectAsWithStorageProvider = React.useCallback(\n    () => {\n      if (!currentProject) return;\n\n      saveUiSettings(state.editorTabs);\n\n      getStorageProviderOperations().then(storageProviderOperations => {\n        const { onSaveProjectAs } = storageProviderOperations;\n        if (!onSaveProjectAs) {\n          return;\n        }\n\n        // Protect against concurrent saves, which can trigger issues with the\n        // file system.\n        if (isSavingProject) {\n          console.info('Project is already being saved, not triggering save.');\n          return;\n        }\n        setIsSavingProject(true);\n\n        onSaveProjectAs(currentProject, currentFileMetadata)\n          .then(\n            ({ wasSaved, fileMetadata }) => {\n              if (wasSaved) {\n                if (unsavedChanges) unsavedChanges.sealUnsavedChanges();\n                _showSnackMessage(i18n._(t`Project properly saved`));\n\n                if (fileMetadata) {\n                  preferences.insertRecentProjectFile({\n                    fileMetadata,\n                    storageProviderName: getStorageProvider().internalName,\n                  });\n\n                  setState(state => ({\n                    ...state,\n                    currentFileMetadata: fileMetadata,\n                  }));\n                }\n              }\n            },\n            rawError => {\n              showErrorBox({\n                message: i18n._(\n                  t`Unable to save as the project! Please try again by choosing another location.`\n                ),\n                rawError,\n                errorId: 'project-save-as-error',\n              });\n            }\n          )\n          .catch(() => {})\n          .then(() => setIsSavingProject(false));\n      });\n    },\n    [\n      i18n,\n      isSavingProject,\n      currentProject,\n      currentFileMetadata,\n      getStorageProviderOperations,\n      unsavedChanges,\n      setState,\n      state.editorTabs,\n      _showSnackMessage,\n      getStorageProvider,\n      preferences,\n    ]\n  );\n\n  const saveProjectAs = React.useCallback(\n    () => {\n      if (!currentProject) return;\n\n      getStorageProviderOperations().then(storageProviderOperations => {\n        if (\n          props.storageProviders.filter(\n            ({ hiddenInSaveDialog }) => !hiddenInSaveDialog\n          ).length > 1 ||\n          !storageProviderOperations.onSaveProjectAs\n        ) {\n          openSaveToStorageProviderDialog();\n        } else {\n          saveProjectAsWithStorageProvider();\n        }\n      });\n    },\n    [\n      currentProject,\n      getStorageProviderOperations,\n      openSaveToStorageProviderDialog,\n      props.storageProviders,\n      saveProjectAsWithStorageProvider,\n    ]\n  );\n\n  const saveProject = React.useCallback(\n    async () => {\n      if (!currentProject) return;\n      if (!currentFileMetadata) {\n        return saveProjectAs();\n      }\n\n      const storageProviderOperations = await getStorageProviderOperations();\n      const { onSaveProject } = storageProviderOperations;\n      if (!onSaveProject) {\n        return saveProjectAs();\n      }\n\n      saveUiSettings(state.editorTabs);\n      _showSnackMessage(i18n._(t`Saving...`));\n\n      // Protect against concurrent saves, which can trigger issues with the\n      // file system.\n      if (isSavingProject) {\n        console.info('Project is already being saved, not triggering save.');\n        return;\n      }\n      setIsSavingProject(true);\n\n      try {\n        const saveStartTime = performance.now();\n        const { wasSaved } = await onSaveProject(\n          currentProject,\n          currentFileMetadata\n        );\n\n        if (wasSaved) {\n          console.info(\n            `Project saved in ${performance.now() - saveStartTime}ms.`\n          );\n          if (unsavedChanges) unsavedChanges.sealUnsavedChanges();\n          _showSnackMessage(i18n._(t`Project properly saved`));\n        }\n      } catch (rawError) {\n        showErrorBox({\n          message: i18n._(\n            t`Unable to save as the project! Please try again by choosing another location.`\n          ),\n          rawError,\n          errorId: 'project-save-error',\n        });\n      }\n\n      setIsSavingProject(false);\n    },\n    [\n      isSavingProject,\n      currentProject,\n      currentFileMetadata,\n      getStorageProviderOperations,\n      _showSnackMessage,\n      i18n,\n      unsavedChanges,\n      saveProjectAs,\n      state.editorTabs,\n    ]\n  );\n\n  const askToCloseProject = React.useCallback(\n    (): Promise<void> => {\n      if (unsavedChanges && unsavedChanges.hasUnsavedChanges) {\n        if (!currentProject) return Promise.resolve();\n\n        const answer = Window.showConfirmDialog(\n          i18n._(\n            t`Close the project? Any changes that have not been saved will be lost.`\n          )\n        );\n        if (!answer) return Promise.resolve();\n      }\n      return closeProject();\n    },\n    [currentProject, unsavedChanges, i18n, closeProject]\n  );\n\n  const _onChangeEditorTab = (value: number) => {\n    setState(state => ({\n      ...state,\n      editorTabs: changeCurrentTab(state.editorTabs, value),\n    })).then(state =>\n      _onEditorTabActived(getCurrentTab(state.editorTabs), state)\n    );\n  };\n\n  const _onEditorTabActived = (\n    editorTab: EditorTab,\n    newState: State = state\n  ) => {\n    updateToolbar(newState.editorTabs);\n    // Ensure the editors shown on the screen are updated. This is for\n    // example useful if global objects have been updated in another editor.\n    if (editorTab.editorRef) {\n      editorTab.editorRef.forceUpdateEditor();\n    }\n  };\n\n  const _onCloseEditorTab = (editorTab: EditorTab) => {\n    saveUiSettings(state.editorTabs);\n    setState(state => ({\n      ...state,\n      editorTabs: closeEditorTab(state.editorTabs, editorTab),\n    }));\n  };\n\n  const _onCloseOtherEditorTabs = (editorTab: EditorTab) => {\n    saveUiSettings(state.editorTabs);\n    setState(state => ({\n      ...state,\n      editorTabs: closeOtherEditorTabs(state.editorTabs, editorTab),\n    }));\n  };\n\n  const _onCloseAllEditorTabs = () => {\n    saveUiSettings(state.editorTabs);\n    setState(state => ({\n      ...state,\n      editorTabs: closeAllEditorTabs(state.editorTabs),\n    }));\n  };\n\n  const onDropEditorTab = (fromIndex: number, toHoveredIndex: number) => {\n    setState(state => {\n      return {\n        ...state,\n        editorTabs: moveTabToTheRightOfHoveredTab(\n          state.editorTabs,\n          fromIndex,\n          toHoveredIndex\n        ),\n      };\n    });\n  };\n\n  const onChooseResource: ChooseResourceFunction = (\n    options: ChooseResourceOptions\n  ) => {\n    return new Promise(resolve => {\n      setChooseResourceOptions(options);\n      const onResourceChosenSetter: () => (\n        Promise<Array<gdResource>> | Array<gdResource>\n      ) => void = () => resolve;\n      setOnResourceChosen(onResourceChosenSetter);\n    });\n  };\n\n  const setUpdateStatus = (updateStatus: UpdateStatus) => {\n    setState(state => ({ ...state, updateStatus }));\n\n    const notificationTitle = getUpdateNotificationTitle(updateStatus);\n    const notificationBody = getUpdateNotificationBody(updateStatus);\n    if (notificationTitle) {\n      const notification = new window.Notification(notificationTitle, {\n        body: notificationBody,\n      });\n      notification.onclick = () => openAboutDialog(true);\n    }\n  };\n\n  const onOpenProjectAfterCreation = async ({\n    project,\n    storageProvider,\n    fileMetadata,\n    projectName,\n    shouldCloseDialog,\n  }: {|\n    project?: gdProject,\n    storageProvider: ?StorageProvider,\n    fileMetadata: ?FileMetadata,\n    projectName?: string,\n    shouldCloseDialog?: boolean,\n  |}) => {\n    if (shouldCloseDialog)\n      await setState(state => ({ ...state, createDialogOpen: false }));\n\n    let state: ?State;\n    if (project) state = await loadFromProject(project, fileMetadata);\n    else if (!!fileMetadata) state = await openFromFileMetadata(fileMetadata);\n\n    if (!state) return;\n    const { currentProject, editorTabs } = state;\n    if (!currentProject) return;\n\n    currentProject.resetProjectUuid();\n    currentProject.setVersion('1.0.0');\n    if (projectName) currentProject.setName(projectName);\n    openSceneOrProjectManager({\n      currentProject: currentProject,\n      editorTabs: editorTabs,\n    });\n\n    const storageProviderOperations: StorageProviderOperations = await getStorageProviderOperations(\n      storageProvider\n    );\n    const { onSaveProject } = storageProviderOperations;\n\n    if (onSaveProject && fileMetadata) {\n      try {\n        const { wasSaved } = await onSaveProject(currentProject, fileMetadata);\n\n        if (wasSaved) {\n          if (unsavedChanges) unsavedChanges.sealUnsavedChanges();\n        }\n      } catch (rawError) {\n        // Do not prevent creating the project.\n        console.error(\"Couldn't save the project after creation.\", rawError);\n      }\n    }\n  };\n\n  const simulateUpdateDownloaded = () =>\n    setUpdateStatus({\n      status: 'update-downloaded',\n      message: 'update-downloaded',\n      info: {\n        releaseName: 'Fake update',\n      },\n    });\n\n  const simulateUpdateAvailable = () =>\n    setUpdateStatus({\n      status: 'update-available',\n      message: 'Update available',\n    });\n\n  useKeyboardShortcuts(\n    commandPaletteRef.current\n      ? commandPaletteRef.current.launchCommand\n      : () => {}\n  );\n\n  useMainFrameCommands({\n    i18n,\n    project: state.currentProject,\n    previewEnabled:\n      !!state.currentProject && state.currentProject.getLayoutsCount() > 0,\n    onOpenProjectManager: toggleProjectManager,\n    hasPreviewsRunning,\n    allowNetworkPreview:\n      !!_previewLauncher.current &&\n      _previewLauncher.current.canDoNetworkPreview(),\n    onLaunchPreview: launchNewPreview,\n    onHotReloadPreview: launchHotReloadPreview,\n    onLaunchDebugPreview: launchDebuggerAndPreview,\n    onLaunchNetworkPreview: launchNetworkPreview,\n    onOpenHomePage: openHomePage,\n    onCreateProject: onOpenExamples,\n    onOpenProject: chooseProject,\n    onSaveProject: saveProject,\n    onSaveProjectAs: saveProjectAs,\n    onCloseApp: closeApp,\n    onCloseProject: askToCloseProject,\n    onExportGame: React.useCallback(() => openExportDialog(true), []),\n    onOpenLayout: openLayout,\n    onOpenExternalEvents: openExternalEvents,\n    onOpenExternalLayout: openExternalLayout,\n    onOpenEventsFunctionsExtension: openEventsFunctionsExtension,\n    onOpenCommandPalette: commandPaletteRef.current\n      ? commandPaletteRef.current.open\n      : () => {},\n    onOpenProfile: React.useCallback(\n      () => openProfileDialogWithTab('profile'),\n      []\n    ),\n    onOpenGamesDashboard: React.useCallback(\n      () => openProfileDialogWithTab('games-dashboard'),\n      []\n    ),\n  });\n\n  const showLoader = isLoadingProject || previewLoading;\n\n  return (\n    <div className=\"main-frame\">\n      {!!renderMainMenu &&\n        renderMainMenu({\n          i18n: i18n,\n          project: state.currentProject,\n          onChooseProject: chooseProject,\n          onOpenRecentFile: openFromFileMetadataWithStorageProvider,\n          onSaveProject: saveProject,\n          onSaveProjectAs: saveProjectAs,\n          onCloseProject: askToCloseProject,\n          onCloseApp: closeApp,\n          onExportProject: () => openExportDialog(true),\n          onCreateProject: onOpenExamples,\n          onOpenProjectManager: () => openProjectManager(true),\n          onOpenHomePage: openHomePage,\n          onOpenDebugger: openDebugger,\n          onOpenAbout: () => openAboutDialog(true),\n          onOpenPreferences: () => openPreferencesDialog(true),\n          onOpenLanguage: () => openLanguageDialog(true),\n          onOpenProfile: () => openProfileDialogWithTab('profile'),\n          onOpenGamesDashboard: () =>\n            openProfileDialogWithTab('games-dashboard'),\n          setUpdateStatus: setUpdateStatus,\n          recentProjectFiles: preferences.getRecentProjectFiles(),\n        })}\n      <ProjectTitlebar fileMetadata={currentFileMetadata} />\n      <Drawer\n        open={projectManagerOpen}\n        PaperProps={{\n          style: styles.drawerContent,\n          className: 'safe-area-aware-left-container',\n        }}\n        ModalProps={{\n          keepMounted: true,\n        }}\n        onClose={toggleProjectManager}\n      >\n        <DrawerTopBar\n          title={\n            state.currentProject ? state.currentProject.getName() : 'No project'\n          }\n          displayRightCloseButton\n          onClose={toggleProjectManager}\n        />\n        {currentProject && (\n          <ProjectManager\n            project={currentProject}\n            onOpenExternalEvents={openExternalEvents}\n            onOpenLayout={openLayout}\n            onOpenExternalLayout={openExternalLayout}\n            onOpenEventsFunctionsExtension={openEventsFunctionsExtension}\n            onInstallExtension={onInstallExtension}\n            onDeleteLayout={deleteLayout}\n            onDeleteExternalLayout={deleteExternalLayout}\n            onDeleteEventsFunctionsExtension={deleteEventsFunctionsExtension}\n            onDeleteExternalEvents={deleteExternalEvents}\n            onRenameLayout={renameLayout}\n            onRenameExternalLayout={renameExternalLayout}\n            onRenameEventsFunctionsExtension={renameEventsFunctionsExtension}\n            onRenameExternalEvents={renameExternalEvents}\n            onSaveProject={saveProject}\n            onSaveProjectAs={saveProjectAs}\n            onCloseProject={() => {\n              askToCloseProject();\n            }}\n            onExportProject={() => openExportDialog(true)}\n            onOpenPreferences={() => openPreferencesDialog(true)}\n            onOpenProfile={() => openProfileDialogWithTab('profile')}\n            onOpenGamesDashboard={() =>\n              openProfileDialogWithTab('games-dashboard')\n            }\n            onOpenResources={() => {\n              openResources();\n              openProjectManager(false);\n            }}\n            onOpenPlatformSpecificAssets={() =>\n              openPlatformSpecificAssetsDialog(true)\n            }\n            onChangeSubscription={() => openSubscriptionDialog(true)}\n            eventsFunctionsExtensionsError={eventsFunctionsExtensionsError}\n            onReloadEventsFunctionsExtensions={() => {\n              // Check if load is sufficient\n              eventsFunctionsExtensionsState.reloadProjectEventsFunctionsExtensions(\n                currentProject\n              );\n            }}\n            freezeUpdate={!projectManagerOpen}\n            unsavedChanges={unsavedChanges}\n            hotReloadPreviewButtonProps={hotReloadPreviewButtonProps}\n            resourceSources={resourceSources}\n            onChooseResource={onChooseResource}\n            resourceExternalEditors={resourceExternalEditors}\n          />\n        )}\n        {!state.currentProject && (\n          <EmptyMessage>\n            <Trans>To begin, open or create a new project.</Trans>\n          </EmptyMessage>\n        )}\n      </Drawer>\n      <Toolbar\n        ref={toolbar}\n        showProjectIcons={!props.integratedEditor}\n        hasProject={!!currentProject}\n        toggleProjectManager={toggleProjectManager}\n        exportProject={() => openExportDialog(true)}\n        requestUpdate={props.requestUpdate}\n        simulateUpdateDownloaded={simulateUpdateDownloaded}\n        simulateUpdateAvailable={simulateUpdateAvailable}\n        onOpenDebugger={launchDebuggerAndPreview}\n        hasPreviewsRunning={hasPreviewsRunning}\n        onPreviewWithoutHotReload={launchNewPreview}\n        onNetworkPreview={launchNetworkPreview}\n        onHotReloadPreview={launchHotReloadPreview}\n        canDoNetworkPreview={\n          !!_previewLauncher.current &&\n          _previewLauncher.current.canDoNetworkPreview()\n        }\n        setPreviewOverride={setPreviewOverride}\n        isPreviewEnabled={\n          !!currentProject && currentProject.getLayoutsCount() > 0\n        }\n        previewState={previewState}\n      />\n      <DraggableClosableTabs\n        hideLabels={!!props.integratedEditor}\n        editorTabs={state.editorTabs}\n        onClickTab={(id: number) => _onChangeEditorTab(id)}\n        onCloseTab={(editorTab: EditorTab) => _onCloseEditorTab(editorTab)}\n        onCloseOtherTabs={(editorTab: EditorTab) =>\n          _onCloseOtherEditorTabs(editorTab)\n        }\n        onCloseAll={_onCloseAllEditorTabs}\n        onTabActived={(editorTab: EditorTab) => _onEditorTabActived(editorTab)}\n        onDropTab={onDropEditorTab}\n      />\n      <LeaderboardProvider\n        gameId={\n          state.currentProject ? state.currentProject.getProjectUuid() : ''\n        }\n      >\n        {getEditors(state.editorTabs).map((editorTab, id) => {\n          const isCurrentTab = getCurrentTabIndex(state.editorTabs) === id;\n          return (\n            <TabContentContainer key={editorTab.key} active={isCurrentTab}>\n              <CommandsContextScopedProvider active={isCurrentTab}>\n                <ErrorBoundary>\n                  {editorTab.renderEditorContainer({\n                    isActive: isCurrentTab,\n                    extraEditorProps: editorTab.extraEditorProps,\n                    project: currentProject,\n                    ref: editorRef => (editorTab.editorRef = editorRef),\n                    setToolbar: editorToolbar =>\n                      setEditorToolbar(editorToolbar, isCurrentTab),\n                    onChangeSubscription: () => openSubscriptionDialog(true),\n                    projectItemName: editorTab.projectItemName,\n                    setPreviewedLayout,\n                    onOpenExternalEvents: openExternalEvents,\n                    onOpenEvents: (sceneName: string) =>\n                      openLayout(sceneName, {\n                        openEventsEditor: true,\n                        openSceneEditor: false,\n                      }),\n                    previewDebuggerServer,\n                    hotReloadPreviewButtonProps,\n                    onOpenLayout: name =>\n                      openLayout(name, {\n                        openEventsEditor: true,\n                        openSceneEditor: false,\n                      }),\n                    resourceSources: props.resourceSources,\n                    onChooseResource,\n                    resourceExternalEditors,\n                    onCreateEventsFunction,\n                    openInstructionOrExpression,\n                    unsavedChanges: unsavedChanges,\n                    canOpen: !!props.storageProviders.filter(\n                      ({ hiddenInOpenDialog }) => !hiddenInOpenDialog\n                    ).length,\n                    onOpen: () => chooseProject(),\n                    onOpenRecentFile: openFromFileMetadataWithStorageProvider,\n                    onCreateFromExampleShortHeader: onCreateFromExampleShortHeader,\n                    onCreateBlank: onCreateBlank,\n                    onOpenProjectAfterCreation: onOpenProjectAfterCreation,\n                    onOpenProjectManager: () => openProjectManager(true),\n                    onCloseProject: () => askToCloseProject(),\n                    onOpenTutorials: () => onOpenTutorials(),\n                    onOpenGamesShowcase: () => onOpenGamesShowcase(),\n                    onOpenExamples: () => onOpenExamples(),\n                    onOpenProfile: () => openProfileDialogWithTab('profile'),\n                    onOpenHelpFinder: () => openHelpFinderDialog(true),\n                    onOpenLanguageDialog: () => openLanguageDialog(true),\n                    onLoadEventsFunctionsExtensions: () =>\n                      eventsFunctionsExtensionsState.loadProjectEventsFunctionsExtensions(\n                        currentProject\n                      ),\n                    onDeleteResource: (\n                      resource: gdResource,\n                      cb: boolean => void\n                    ) => {\n                      // TODO: Project wide refactoring of objects/events using the resource\n                      cb(true);\n                    },\n                    onRenameResource: (\n                      resource: gdResource,\n                      newName: string,\n                      cb: boolean => void\n                    ) => {\n                      if (currentProject)\n                        renameResourcesInProject(currentProject, {\n                          [resource.getName()]: newName,\n                        });\n\n                      cb(true);\n                    },\n                  })}\n                </ErrorBoundary>\n              </CommandsContextScopedProvider>\n            </TabContentContainer>\n          );\n        })}\n      </LeaderboardProvider>\n      <CommandPalette ref={commandPaletteRef} />\n      <LoaderModal show={showLoader} />\n      <HelpFinder\n        open={helpFinderDialogOpen}\n        onClose={() => openHelpFinderDialog(false)}\n      />\n      <Snackbar\n        open={state.snackMessageOpen}\n        autoHideDuration={3000}\n        onClose={_closeSnackMessage}\n        ContentProps={{\n          'aria-describedby': 'snackbar-message',\n        }}\n        message={<span id=\"snackbar-message\">{state.snackMessage}</span>}\n      />\n      {!!renderExportDialog &&\n        exportDialogOpen &&\n        renderExportDialog({\n          onClose: () => openExportDialog(false),\n          onChangeSubscription: () => {\n            openExportDialog(false);\n            openSubscriptionDialog(true);\n          },\n          project: state.currentProject,\n          onSaveProject: saveProject,\n        })}\n      {!!renderCreateDialog &&\n        state.createDialogOpen &&\n        renderCreateDialog({\n          open: state.createDialogOpen,\n          initialTab: createDialogInitialTab,\n          onClose: closeCreateDialog,\n          onOpen: onOpenProjectAfterCreation,\n        })}\n      {!!introDialog &&\n        introDialogOpen &&\n        React.cloneElement(introDialog, {\n          open: true,\n          onClose: () => openIntroDialog(false),\n        })}\n      {!!currentProject && platformSpecificAssetsDialogOpen && (\n        <PlatformSpecificAssetsDialog\n          project={currentProject}\n          open\n          onApply={() => openPlatformSpecificAssetsDialog(false)}\n          onClose={() => openPlatformSpecificAssetsDialog(false)}\n          resourceSources={resourceSources}\n          onChooseResource={onChooseResource}\n          resourceExternalEditors={resourceExternalEditors}\n        />\n      )}\n      {!!renderPreviewLauncher &&\n        renderPreviewLauncher(\n          {\n            getIncludeFileHashs:\n              eventsFunctionsExtensionsContext.getIncludeFileHashs,\n            onExport: () => openExportDialog(true),\n            onChangeSubscription: () => openSubscriptionDialog(true),\n          },\n          (previewLauncher: ?PreviewLauncherInterface) => {\n            _previewLauncher.current = previewLauncher;\n          }\n        )}\n      {!!currentProject && chooseResourceOptions && onResourceChosen && (\n        <NewResourceDialog\n          project={currentProject}\n          i18n={i18n}\n          resourceSources={resourceSources}\n          onChooseResources={resources => {\n            setOnResourceChosen(null);\n            setChooseResourceOptions(null);\n            onResourceChosen(resources);\n          }}\n          onClose={() => {\n            setOnResourceChosen(null);\n            setChooseResourceOptions(null);\n            onResourceChosen([]);\n          }}\n          options={chooseResourceOptions}\n        />\n      )}\n      {profileDialogOpen && (\n        <ProfileDialog\n          currentProject={currentProject}\n          initialTab={profileDialogInitialTab}\n          open\n          onClose={() => openProfileDialog(false)}\n          onChangeSubscription={() => openSubscriptionDialog(true)}\n        />\n      )}\n      {subscriptionDialogOpen && (\n        <SubscriptionDialog\n          onClose={() => {\n            openSubscriptionDialog(false);\n          }}\n          open\n        />\n      )}\n      {preferencesDialogOpen && (\n        <PreferencesDialog\n          i18n={props.i18n}\n          onClose={languageChanged => {\n            openPreferencesDialog(false);\n            if (languageChanged) _languageDidChange();\n          }}\n        />\n      )}\n      {languageDialogOpen && (\n        <LanguageDialog\n          open\n          onClose={languageChanged => {\n            openLanguageDialog(false);\n            if (languageChanged) _languageDidChange();\n          }}\n        />\n      )}\n      {aboutDialogOpen && (\n        <AboutDialog\n          open\n          onClose={() => openAboutDialog(false)}\n          updateStatus={updateStatus}\n        />\n      )}\n      {state.openFromStorageProviderDialogOpen && (\n        <OpenFromStorageProviderDialog\n          onClose={() => openOpenFromStorageProviderDialog(false)}\n          storageProviders={props.storageProviders}\n          onChooseProvider={storageProvider => {\n            openOpenFromStorageProviderDialog(false);\n            props.getStorageProviderOperations(storageProvider).then(() => {\n              chooseProjectWithStorageProviderPicker();\n            });\n          }}\n        />\n      )}\n      {state.saveToStorageProviderDialogOpen && (\n        <SaveToStorageProviderDialog\n          onClose={() => openSaveToStorageProviderDialog(false)}\n          storageProviders={props.storageProviders}\n          onChooseProvider={storageProvider => {\n            openSaveToStorageProviderDialog(false);\n            props.getStorageProviderOperations(storageProvider).then(() => {\n              saveProjectAsWithStorageProvider();\n            });\n          }}\n        />\n      )}\n      {renderOpenConfirmDialog()}\n      {renderResourceFetcherDialog()}\n      <CloseConfirmDialog\n        shouldPrompt={!!state.currentProject}\n        i18n={props.i18n}\n        language={props.i18n.language}\n        hasUnsavedChanges={!!unsavedChanges && unsavedChanges.hasUnsavedChanges}\n      />\n      <ChangelogDialogContainer />\n      <OnboardingDialog />\n      {state.gdjsDevelopmentWatcherEnabled &&\n        renderGDJSDevelopmentWatcher &&\n        renderGDJSDevelopmentWatcher()}\n      {!!hotReloadLogs.length && (\n        <HotReloadLogsDialog\n          logs={hotReloadLogs}\n          onClose={clearHotReloadLogs}\n          onLaunchNewPreview={() => {\n            clearHotReloadLogs();\n            launchNewPreview();\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default MainFrame;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { useContext } from 'react';\nimport SelectField from '../../UI/SelectField';\nimport FlatButton from '../../UI/FlatButton';\nimport SelectOption from '../../UI/SelectOption';\nimport { Column, Line } from '../../UI/Grid';\nimport Window from '../../Utils/Window';\nimport PreferencesContext from './PreferencesContext';\nimport LocalesMetadata from '../../locales/LocalesMetadata';\n\ntype Props = {|\n  onLanguageChanged: (language: string) => void,\n|};\n\nconst displayLocaleMetadata = localeMetadata => {\n  if (localeMetadata.languageCode === 'en') return false;\n  if (localeMetadata.languageCode === 'pseudo_LOCALE') return Window.isDev();\n\n  return true;\n};\n\nconst localesToDisplay = LocalesMetadata.filter(displayLocaleMetadata);\nconst goodProgressLocales = localesToDisplay.filter(\n  localeMetadata => localeMetadata.translationRatio > 0.5\n);\nconst startedLocales = localesToDisplay.filter(\n  localeMetadata => localeMetadata.translationRatio < 0.5\n);\n\nconst renderLanguageSelectOption = localeMetadata => {\n  const translationRatio = localeMetadata.translationRatio || 0;\n  const percent = (100 * localeMetadata.translationRatio).toFixed(0);\n  const isStarted = translationRatio > 0;\n\n  return (\n    <SelectOption\n      value={localeMetadata.languageCode}\n      primaryText={`${localeMetadata.languageNativeName} (${\n        localeMetadata.languageName\n      })${isStarted ? ` - ~${percent}%` : ''}`}\n      disabled={!isStarted}\n      key={localeMetadata.languageCode}\n    />\n  );\n};\n\nconst LanguageSelector = ({ onLanguageChanged }: Props) => {\n  const { values, setLanguage } = useContext(PreferencesContext);\n\n  return (\n    <Column noMargin>\n      <Line expand>\n        <SelectField\n          floatingLabelText={<Trans>Choose GDevelop language</Trans>}\n          value={values.language}\n          onChange={(e, i, value: string) => {\n            setLanguage(value);\n            onLanguageChanged(value);\n          }}\n          fullWidth\n        >\n          <SelectOption value=\"en\" primaryText=\"English (default)\" />\n          {goodProgressLocales.map(localeMetadata =>\n            renderLanguageSelectOption(localeMetadata)\n          )}\n          {startedLocales.map(localeMetadata =>\n            renderLanguageSelectOption(localeMetadata)\n          )}\n        </SelectField>\n      </Line>\n      <Line expand>\n        <FlatButton\n          primary\n          label={<Trans>Help to translate GD in your language</Trans>}\n          onClick={() =>\n            Window.openExternalURL('https://crowdin.com/project/gdevelop')\n          }\n          fullWidth\n        />\n      </Line>\n    </Column>\n  );\n};\n\nexport default LanguageSelector;\n","// @flow\n// See ElectronEventsBridge, AboutDialog and electron-app/main.js for handling the updates.\n\nexport type UpdateStatus = {\n  message: string,\n  status:\n    | 'checking-for-update'\n    | 'update-available'\n    | 'update-not-available'\n    | 'error'\n    | 'download-progress'\n    | 'update-downloaded'\n    | 'unknown',\n};\n\nexport const getUpdateNotificationTitle = (updateStatus: UpdateStatus) => {\n  if (updateStatus.status === 'update-available')\n    return 'A new update is available!';\n\n  return '';\n};\n\nexport const getUpdateNotificationBody = (updateStatus: UpdateStatus) => {\n  if (updateStatus.status === 'update-available')\n    return 'It will be downloaded and installed automatically (unless you deactivated this in preferences)';\n\n  return '';\n};\n\nexport const getUpdateStatusLabel = (status: string) => {\n  if (status === 'checking-for-update') return 'Checking for update...';\n  if (status === 'update-available') return 'A new update is available!';\n  if (status === 'update-not-available')\n    return \"No update available. You're using the latest version!\";\n  if (status === 'error') return 'Error while checking update';\n  if (status === 'download-progress')\n    return 'A new update is being downloaded...';\n  if (status === 'update-downloaded')\n    return 'A new update will be installed after you quit and relaunch GDevelop';\n  return '';\n};\n\nexport const getUpdateButtonLabel = (status: string) => {\n  if (status === 'update-available') return 'Update GDevelop to latest version';\n  return 'Check again for new updates';\n};\n\nexport const canDownloadUpdate = (status: string) => {\n  return status === 'update-available';\n};\n","// @flow\nimport React from 'react';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport IconButton from '../IconButton';\nimport { getHelpLink } from '../../Utils/HelpLink';\nimport Window from '../../Utils/Window';\n\ntype PropsType = {|\n  helpPagePath: ?string,\n  disabled?: boolean,\n  style?: {|\n    padding?: number,\n    width?: number,\n    height?: number,\n    transform?: string,\n    transition?: string,\n    opacity?: number,\n    margin?: number,\n    marginRight?: number,\n    marginLeft?: number,\n    marginTop?: number,\n    marginBottom?: number,\n  |},\n  size?: 'small',\n|};\n\n/**\n * The icon that can be used in any dialog to open a help page\n */\nexport default (props: PropsType) => {\n  const { helpPagePath } = props;\n  if (!helpPagePath) return null;\n\n  return (\n    <IconButton\n      onClick={() => Window.openExternalURL(getHelpLink(helpPagePath))}\n      disabled={props.disabled}\n      style={props.style}\n      size={props.size}\n    >\n      <HelpOutline />\n    </IconButton>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { ListItem } from './List';\nimport BackgroundText from './BackgroundText';\n// No i18n in this file\n\ntype Props = {|\n  onClick?: () => void,\n  primaryText: ?React.Node,\n  id?: ?string,\n|};\n\nexport const AddListItem = (props: Props) => {\n  return (\n    <ListItem\n      onClick={props.onClick}\n      primaryText={<BackgroundText>{props.primaryText}</BackgroundText>}\n      displayAddIcon\n      id={props.id}\n    />\n  );\n};\n\nexport const SearchListItem = (props: Props) => {\n  return (\n    <ListItem\n      onClick={props.onClick}\n      primaryText={<BackgroundText>{props.primaryText}</BackgroundText>}\n      displaySearchIcon\n      id={props.id}\n    />\n  );\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M19 2h-4.18C14.4.84 13.3 0 12 0c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm7 18H5V4h2v3h10V4h2v16z\" />\n  </SvgIcon>\n));\n","// @flow\nconst gd: libGDevelop = global.gd;\n\nexport const toNewGdMapStringString = (object: {\n  [string]: string,\n}): gdMapStringString => {\n  const map = new gd.MapStringString();\n  for (var key in object) {\n    map.set(key, object[key]);\n  }\n\n  return map;\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport FlatButton from '../../UI/FlatButton';\nimport { Spacer, Line } from '../../UI/Grid';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport differenceInSeconds from 'date-fns/differenceInSeconds';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Text from '../../UI/Text';\nimport {\n  getBuildArtifactUrl,\n  type Build,\n  type BuildArtifactKeyName,\n} from '../../Utils/GDevelopServices/Build';\nimport { type Game, updateGame } from '../../Utils/GDevelopServices/Game';\nimport Window from '../../Utils/Window';\nimport { ColumnStackLayout } from '../../UI/Layout';\nimport AuthenticatedUserContext from '../../Profile/AuthenticatedUserContext';\n\nconst buildTypesConfig = {\n  'cordova-build': {\n    estimatedTimeInSeconds: (build: Build) => 300,\n    completeDescription:\n      'You can download it on your Android phone and install it.',\n  },\n  'electron-build': {\n    estimatedTimeInSeconds: (build: Build) =>\n      90 + 130 * (build.targets ? build.targets.length : 0),\n    completeDescription: '',\n  },\n  'web-build': {\n    estimatedTimeInSeconds: (build: Build) => 5,\n    completeDescription: '',\n  },\n};\n\nconst downloadButtons = [\n  {\n    displayName: t`Download (APK)`,\n    key: 'apkKey',\n  },\n  {\n    displayName: t`Download (Android App Bundle)`,\n    key: 'aabKey',\n  },\n  {\n    displayName: t`Windows (zip)`,\n    key: 'windowsZipKey',\n  },\n  {\n    displayName: t`Windows (exe)`,\n    key: 'windowsExeKey',\n  },\n  {\n    displayName: t`macOS (zip)`,\n    key: 'macosZipKey',\n  },\n  {\n    displayName: t`Linux (AppImage)`,\n    key: 'linuxAppImageKey',\n  },\n  {\n    displayName: t`Open`,\n    key: 's3Key',\n  },\n];\n\ntype Props = {|\n  build: Build,\n  game?: ?Game,\n  onGameUpdated?: Game => void,\n  gameUpdating?: boolean,\n  setGameUpdating?: boolean => void,\n|};\n\n/**\n * Show an estimate of the progress of a build or the button\n * to download the artifacts.\n */\nexport default ({\n  build,\n  game,\n  onGameUpdated,\n  gameUpdating,\n  setGameUpdating,\n}: Props) => {\n  const { getAuthorizationHeader, profile } = React.useContext(\n    AuthenticatedUserContext\n  );\n  const config = buildTypesConfig[build.type];\n  const estimatedTime = config.estimatedTimeInSeconds(build);\n  const secondsSinceLastUpdate = Math.abs(\n    differenceInSeconds(build.updatedAt, Date.now())\n  );\n  const estimatedRemainingTime = estimatedTime - secondsSinceLastUpdate;\n  const isStillWithinEstimatedTime = estimatedRemainingTime > 0;\n  const hasJustOverrun =\n    !isStillWithinEstimatedTime && estimatedRemainingTime >= -estimatedTime;\n  const hasTimedOut =\n    !isStillWithinEstimatedTime && estimatedRemainingTime < -estimatedTime;\n\n  const onDownload = (key: BuildArtifactKeyName) => {\n    const url = getBuildArtifactUrl(build, key);\n    if (url) Window.openExternalURL(url);\n  };\n\n  const onUpdatePublicBuild = React.useCallback(\n    async (buildId: ?string) => {\n      if (!profile || !game || !onGameUpdated || !setGameUpdating) return;\n\n      const { id } = profile;\n      try {\n        setGameUpdating(true);\n        const updatedGame = await updateGame(\n          getAuthorizationHeader,\n          id,\n          game.id,\n          {\n            publicWebBuildId: buildId,\n          }\n        );\n        onGameUpdated(updatedGame);\n        setGameUpdating(false);\n      } catch (err) {\n        console.error('Unable to update the game', err);\n        setGameUpdating(false);\n      }\n    },\n    [game, getAuthorizationHeader, profile, onGameUpdated, setGameUpdating]\n  );\n\n  const isBuildPublished = game && game.publicWebBuildId === build.id;\n\n  return (\n    <I18n>\n      {({ i18n }) =>\n        build.status === 'error' ? (\n          <ColumnStackLayout>\n            <Line alignItems=\"center\" justifyContent=\"flex-end\">\n              <Text>\n                <Trans>Something wrong happened :(</Trans>\n              </Text>\n              <Spacer />\n              <RaisedButton\n                label={<Trans>See logs</Trans>}\n                onClick={() => onDownload('logsKey')}\n              />\n            </Line>\n            <Line alignItems=\"center\" justifyContent=\"flex-end\">\n              <EmptyMessage style={{ justifyContent: 'flex-end' }}>\n                <Trans>\n                  Check the logs to see if there is an explanation about what\n                  went wrong, or try again later.\n                </Trans>\n              </EmptyMessage>\n            </Line>\n          </ColumnStackLayout>\n        ) : build.status === 'pending' ? (\n          <>\n            <Line alignItems=\"center\" expand justifyContent=\"center\">\n              {(isStillWithinEstimatedTime || hasJustOverrun) && (\n                <>\n                  <LinearProgress\n                    style={{ flex: 1 }}\n                    value={\n                      isStillWithinEstimatedTime\n                        ? ((estimatedTime - estimatedRemainingTime) /\n                            estimatedTime) *\n                          100\n                        : 0\n                    }\n                    variant={\n                      isStillWithinEstimatedTime\n                        ? 'determinate'\n                        : 'indeterminate'\n                    }\n                  />\n                  <Spacer />\n                </>\n              )}\n              {isStillWithinEstimatedTime && (\n                <Text>\n                  <Trans>\n                    ~{Math.round(estimatedRemainingTime / 60)} minutes.\n                  </Trans>\n                </Text>\n              )}\n              {hasJustOverrun && (\n                <Text>\n                  <Trans>Should finish soon.</Trans>\n                </Text>\n              )}\n            </Line>\n            {hasTimedOut && (\n              <ColumnStackLayout>\n                <Line justifyContent=\"flex-end\">\n                  <Text>\n                    <Trans>Something wrong happened :(</Trans>\n                  </Text>\n                </Line>\n                <Line justifyContent=\"flex-end\">\n                  <EmptyMessage style={{ justifyContent: 'flex-end' }}>\n                    <Trans>\n                      It looks like the build has timed out, please try again.\n                    </Trans>\n                  </EmptyMessage>\n                </Line>\n              </ColumnStackLayout>\n            )}\n          </>\n        ) : build.status === 'complete' ? (\n          <ColumnStackLayout>\n            <Line expand justifyContent=\"flex-end\">\n              {game && !!build.s3Key && !isBuildPublished && (\n                <RaisedButton\n                  label={<Trans>Publish this build on Liluo.io</Trans>}\n                  onClick={() => onUpdatePublicBuild(build.id)}\n                  disabled={gameUpdating}\n                />\n              )}\n              {game && !!build.s3Key && isBuildPublished && (\n                <FlatButton\n                  label={<Trans>Unpublish this build from Liluo.io</Trans>}\n                  onClick={() => onUpdatePublicBuild(null)}\n                  disabled={gameUpdating}\n                />\n              )}\n              <Spacer />\n              {downloadButtons\n                .filter(button => !!build[button.key])\n                .map(button => (\n                  <React.Fragment key={button.key}>\n                    <RaisedButton\n                      label={i18n._(button.displayName)}\n                      primary\n                      onClick={() => onDownload(button.key)}\n                    />\n                    <Spacer />\n                  </React.Fragment>\n                ))}\n              <FlatButton\n                label={<Trans>See logs</Trans>}\n                onClick={() => onDownload('logsKey')}\n              />\n            </Line>\n            {config && config.completeDescription && (\n              <Line expand justifyContent=\"flex-end\">\n                <Text>{config.completeDescription}</Text>\n              </Line>\n            )}\n          </ColumnStackLayout>\n        ) : (\n          <Line>\n            <Trans>Unknown status</Trans>\n          </Line>\n        )\n      }\n    </I18n>\n  );\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M12,20L15.46,14H15.45C15.79,13.4 16,12.73 16,12C16,10.8 15.46,9.73 14.62,9H19.41C19.79,9.93 20,10.94 20,12A8,8 0 0,1 12,20M4,12C4,10.54 4.39,9.18 5.07,8L8.54,14H8.55C9.24,15.19 10.5,16 12,16C12.45,16 12.88,15.91 13.29,15.77L10.89,19.91C7,19.37 4,16.04 4,12M15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9A3,3 0 0,1 15,12M12,4C14.96,4 17.54,5.61 18.92,8H12C10.06,8 8.45,9.38 8.08,11.21L5.7,7.08C7.16,5.21 9.44,4 12,4M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { type Build, getBuild } from '../../Utils/GDevelopServices/Build';\nimport { delay } from '../../Utils/Delay';\nimport { type AuthenticatedUser } from '../../Profile/AuthenticatedUserContext';\n\nconst waitTime = 1500;\nconst bulkWaitTime = 5000;\nconst maxTimeBeforeIgnoring = 30 * 60 * 1000; // 30 mins in milliseconds\n\nexport default class BuildsWatcher {\n  runningWatchers: { [string]: boolean } = {};\n  nextWatcherId = 0;\n  onBuildUpdated: ?(build: Build) => void;\n  authenticatedUser: ?AuthenticatedUser;\n\n  start({\n    authenticatedUser,\n    builds,\n    onBuildUpdated,\n  }: {\n    authenticatedUser: AuthenticatedUser,\n    builds: Array<Build>,\n    onBuildUpdated: (build: Build) => void,\n  }) {\n    this.stop();\n    this.authenticatedUser = authenticatedUser;\n    this.onBuildUpdated = onBuildUpdated;\n\n    builds.forEach(build => {\n      if (build.status === 'pending') {\n        if (\n          (!build.createdAt ||\n            build.createdAt < Date.now() - maxTimeBeforeIgnoring) &&\n          (!build.updatedAt ||\n            build.updatedAt < Date.now() - maxTimeBeforeIgnoring)\n        ) {\n          console.info(\n            \"Ignoring a build for polling as it's too old and still pending\",\n            build\n          );\n        } else {\n          this._pollBuild(\n            build.id,\n            builds.length > 1 ? bulkWaitTime : waitTime\n          );\n        }\n      }\n    });\n  }\n\n  stop() {\n    this.runningWatchers = {};\n  }\n\n  _pollBuild = async (buildId: string, waitTime: number) => {\n    const watcherId = this.nextWatcherId.toString();\n    this.nextWatcherId++;\n\n    this.runningWatchers[watcherId] = true;\n\n    let build = null;\n    do {\n      if (!this.authenticatedUser) return;\n\n      const { getAuthorizationHeader, firebaseUser } = this.authenticatedUser;\n      if (!firebaseUser) return;\n\n      try {\n        console.info(`Checking progress of build ${buildId}...`);\n        build = await getBuild(\n          getAuthorizationHeader,\n          firebaseUser.uid,\n          buildId\n        );\n        if (this.onBuildUpdated) this.onBuildUpdated(build);\n      } catch (e) {\n        console.warn('Error while watching build progress:', e);\n      }\n\n      await delay(waitTime);\n      if (!this.runningWatchers[watcherId]) {\n        console.info(`Stopping watch of build ${buildId}.`);\n        return;\n      }\n    } while (build && build.status === 'pending');\n\n    console.info(`Watch of build ${buildId} finished.`);\n  };\n}\n","//@flow\nexport const delay = (ms: number): Promise<void> =>\n  new Promise(res => setTimeout(res, ms));\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport { PublicGameProperties, cleanUpGameSlug } from './PublicGameProperties';\nimport RaisedButton from '../UI/RaisedButton';\nimport {\n  displayProjectErrorsBox,\n  getProjectPropertiesErrors,\n} from '../Utils/ProjectErrorsChecker';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport { type PublicGame } from '../Utils/GDevelopServices/Game';\nimport AuthenticatedUserContext from '../Profile/AuthenticatedUserContext';\n\n/**\n * Changes that are not stored in the Project.\n */\nexport type PartialGameChange = {|\n  ownerIds?: Array<string>,\n  userSlug?: string,\n  gameSlug?: string,\n  discoverable?: boolean,\n|};\n\n/**\n * Public game properties that are shared with the project file ones.\n */\ntype PublicProjectProperties = {|\n  name: string,\n  categories: string[],\n  description: string,\n  authorIds: string[],\n  playWithKeyboard: boolean,\n  playWithGamepad: boolean,\n  playWithMobile: boolean,\n  orientation: string,\n|};\n\nexport const applyPublicPropertiesToProject = (\n  project: gdProject,\n  newProperties: PublicProjectProperties\n) => {\n  const t = str => str; //TODO\n  const { name, authorIds, description, categories } = newProperties;\n  project.setName(name);\n  const projectCategories = project.getCategories();\n  projectCategories.clear();\n  categories.forEach(category => projectCategories.push_back(category));\n  project.setDescription(description);\n  const projectAuthorIds = project.getAuthorIds();\n  projectAuthorIds.clear();\n  authorIds.forEach(authorId => projectAuthorIds.push_back(authorId));\n  project.setPlayableWithKeyboard(newProperties.playWithKeyboard);\n  project.setPlayableWithGamepad(newProperties.playWithGamepad);\n  project.setPlayableWithMobile(newProperties.playWithMobile);\n  project.setOrientation(newProperties.orientation);\n\n  return displayProjectErrorsBox(t, getProjectPropertiesErrors(t, project));\n};\n\ntype Props = {|\n  project: gdProject,\n  publicGame: PublicGame,\n  onClose: () => void,\n  onApply: (partialGameChange: PartialGameChange) => Promise<void>,\n  isLoading: boolean,\n|};\n\nexport const PublicGamePropertiesDialog = ({\n  project,\n  publicGame,\n  onClose,\n  onApply,\n  isLoading,\n}: Props) => {\n  const { profile } = React.useContext(AuthenticatedUserContext);\n\n  const publicGameAuthorIds = publicGame.authors.map(author => author.id);\n  const publicGameOwnerIds = publicGame.owners.map(owner => owner.id);\n  const [name, setName] = React.useState(publicGame.gameName);\n  const [categories, setCategories] = React.useState(publicGame.categories);\n  const [description, setDescription] = React.useState(publicGame.description);\n  const [authorIds, setAuthorIds] = React.useState<string[]>(\n    publicGameAuthorIds\n  );\n  const [ownerIds, setOwnerIds] = React.useState<string[]>(publicGameOwnerIds);\n  const [playWithKeyboard, setPlayableWithKeyboard] = React.useState(\n    publicGame.playWithKeyboard\n  );\n  const [playWithGamepad, setPlayableWithGamepad] = React.useState(\n    publicGame.playWithGamepad\n  );\n  const [playWithMobile, setPlayableWithMobile] = React.useState(\n    publicGame.playWithMobile\n  );\n  const [orientation, setOrientation] = React.useState(publicGame.orientation);\n  const [userSlug, setUserSlug] = React.useState(\n    publicGame.userSlug || (profile && profile.username) || ''\n  );\n  const [gameSlug, setGameSlug] = React.useState(\n    publicGame.gameSlug || cleanUpGameSlug(publicGame.gameName)\n  );\n  const [discoverable, setDiscoverable] = React.useState(\n    publicGame.discoverable\n  );\n\n  const onSave = async () => {\n    if (\n      applyPublicPropertiesToProject(project, {\n        name,\n        categories: categories || [],\n        description: description || '',\n        authorIds,\n        playWithKeyboard: !!playWithKeyboard,\n        playWithGamepad: !!playWithGamepad,\n        playWithMobile: !!playWithMobile,\n        orientation: orientation || 'default',\n      })\n    ) {\n      await onApply({ ownerIds, userSlug, gameSlug, discoverable });\n    }\n  };\n\n  const actions = [\n    <FlatButton\n      label={<Trans>Back</Trans>}\n      key=\"back\"\n      primary={false}\n      onClick={onClose}\n      disabled={isLoading}\n    />,\n    <RaisedButton\n      label={<Trans>Save</Trans>}\n      primary\n      onClick={onSave}\n      key=\"save\"\n      disabled={isLoading}\n    />,\n  ];\n\n  return (\n    <Dialog\n      title={<Trans>Game info</Trans>}\n      onRequestClose={onClose}\n      actions={actions}\n      cannotBeDismissed={false}\n      open\n    >\n      <PublicGameProperties\n        name={name}\n        setName={setName}\n        categories={categories}\n        setCategories={setCategories}\n        description={description}\n        setDescription={setDescription}\n        project={project}\n        authorIds={authorIds}\n        setAuthorIds={setAuthorIds}\n        ownerIds={ownerIds}\n        setOwnerIds={setOwnerIds}\n        setPlayableWithKeyboard={setPlayableWithKeyboard}\n        playWithKeyboard={playWithKeyboard}\n        setPlayableWithGamepad={setPlayableWithGamepad}\n        playWithGamepad={playWithGamepad}\n        setPlayableWithMobile={setPlayableWithMobile}\n        playWithMobile={playWithMobile}\n        setOrientation={setOrientation}\n        orientation={orientation}\n        setUserSlug={setUserSlug}\n        userSlug={userSlug}\n        setGameSlug={setGameSlug}\n        gameSlug={gameSlug}\n        setDiscoverable={setDiscoverable}\n        discoverable={discoverable}\n        displayThumbnail\n        thumbnailUrl={publicGame.thumbnailUrl}\n      />\n    </Dialog>\n  );\n};\n\nexport default PublicGamePropertiesDialog;\n","//@flow\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { t } from '@lingui/macro';\nimport { useDebounce } from './UseDebounce';\nimport SemiControlledMultiAutoComplete from '../UI/SemiControlledMultiAutoComplete';\nimport {\n  searchUserPublicProfilesByUsername,\n  type UserPublicProfile,\n  type UserPublicProfileSearch,\n  getUserPublicProfilesByIds,\n} from './GDevelopServices/User';\nimport { type AutocompleteOption } from '../UI/SemiControlledMultiAutoComplete';\n\nimport useForceUpdate from './UseForceUpdate';\n\ntype Props = {|\n  userIds: Array<string>,\n  onChange: (Array<string>) => void,\n  floatingLabelText?: React.Node,\n  helperText: React.Node,\n|};\n\nconst getErrorMessage = (error: ?Error) => {\n  if (error) return 'Error while loading users';\n};\n\nexport const UsersAutocomplete = ({\n  userIds,\n  onChange,\n  floatingLabelText,\n  helperText,\n}: Props) => {\n  const forceUpdate = useForceUpdate();\n  const [users, setUsers] = React.useState<Array<AutocompleteOption>>([]);\n  const [userInput, setUserInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [\n    completionUserPublicProfiles,\n    setCompletionUserPublicProfiles,\n  ] = React.useState<Array<UserPublicProfileSearch>>([]);\n  const [error, setError] = React.useState(null);\n\n  // Recalculate if the userInput has changed.\n  const searchUserPublicProfiles = useDebounce(async () => {\n    setError(null);\n    if (!userInput) {\n      setCompletionUserPublicProfiles([]);\n      return;\n    }\n    try {\n      setLoading(true);\n      const userPublicProfiles = await searchUserPublicProfilesByUsername(\n        userInput\n      );\n      setCompletionUserPublicProfiles(userPublicProfiles);\n    } catch (err) {\n      setError(err);\n      console.error('Could not load the users: ', err);\n    } finally {\n      setLoading(false);\n    }\n  }, 500);\n\n  // Call every time the userInput changes.\n  React.useEffect(\n    () => {\n      searchUserPublicProfiles();\n    },\n    [searchUserPublicProfiles, userInput]\n  );\n\n  // Do only once, the first time it is loaded.\n  const getUserPublicProfilesForAutocomplete = React.useCallback(\n    async () => {\n      setError(null);\n      if (!userIds.length) {\n        setUsers([]);\n        return;\n      }\n      try {\n        setLoading(true);\n        const userPublicProfilesByIds = await getUserPublicProfilesByIds(\n          userIds\n        );\n        setUsers(\n          userIds\n            .map(userId => {\n              const userPublicProfile: UserPublicProfile =\n                userPublicProfilesByIds[userId];\n              return userPublicProfile\n                ? {\n                    text: userPublicProfile.username || '(no username)',\n                    value: userPublicProfile.id,\n                  }\n                : null;\n            })\n            .filter(Boolean)\n        );\n      } catch (err) {\n        setError(err);\n        console.error('Could not load the users: ', err);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [userIds]\n  );\n\n  // Do only once.\n  React.useEffect(\n    () => {\n      getUserPublicProfilesForAutocomplete();\n    },\n    [getUserPublicProfilesForAutocomplete]\n  );\n\n  return (\n    <SemiControlledMultiAutoComplete\n      hintText={t`Start typing a username`}\n      floatingLabelText={floatingLabelText}\n      helperText={helperText}\n      value={users}\n      onChange={(event, values) => {\n        if (!values) return;\n        // change users in state\n        setUsers(values);\n        // call top onChange on user ids\n        onChange(values.map(option => option.value));\n        forceUpdate();\n      }}\n      inputValue={userInput}\n      onInputChange={(event, value) => {\n        setUserInput(value);\n      }}\n      dataSource={completionUserPublicProfiles\n        .map((userPublicProfile: UserPublicProfileSearch) => {\n          if (userPublicProfile.username && userPublicProfile.id) {\n            return {\n              text: userPublicProfile.username,\n              value: userPublicProfile.id,\n            };\n          }\n\n          return null;\n        })\n        .filter(Boolean)}\n      loading={loading}\n      fullWidth\n      error={getErrorMessage(error)}\n    />\n  );\n};\n","// @flow\nimport { useEffect, useRef, useCallback } from 'react';\nimport { useIsMounted } from './UseIsMounted';\nimport debounce from 'lodash/debounce';\n\n// Function taken from https://stackoverflow.com/questions/54666401/how-to-use-throttle-or-debounce-with-react-hook/62017005#62017005\n\n/**\n * Debounces a React callback with a specified delay.\n */\nexport const useDebounce = (cb: any, delay: number) => {\n  const options = {\n    leading: false,\n    trailing: true,\n  };\n  const isMounted = useIsMounted();\n  const inputsRef = useRef({ cb, delay });\n  useEffect(() => {\n    inputsRef.current = { cb, delay };\n  });\n  return useCallback(\n    debounce(\n      (...args: any) => {\n        if (inputsRef.current.delay === delay && isMounted.current)\n          inputsRef.current.cb(...args);\n      },\n      delay,\n      options\n    ),\n    [delay, debounce]\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { I18n } from '@lingui/react';\nimport TextField from '@material-ui/core/TextField';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nexport type AutocompleteOption = {|\n  text: string, // The text displayed\n  value: string, // The internal value selected\n|};\n\nexport type DataSource = Array<?AutocompleteOption>;\n\nconst styles = {\n  chip: {\n    // Make the chips smaller to fit the input\n    height: 25,\n  },\n};\n\ntype Props = {|\n  value: Array<AutocompleteOption>,\n  onChange: AutocompleteOption => void,\n  dataSource: DataSource,\n  inputValue: ?string,\n  onInputChange: string => void,\n\n  floatingLabelText?: React.Node,\n  hintText?: MessageDescriptor,\n  helperText?: React.Node,\n  fullWidth?: boolean,\n  error?: ?string,\n  loading?: boolean,\n  optionsLimit?: number, // Allow limiting the number of options by disabling the autocomplete.\n|};\n\nexport default function SemiControlledMultiAutoComplete(props: Props) {\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Autocomplete\n          multiple\n          value={props.value}\n          onChange={props.onChange}\n          inputValue={props.inputValue}\n          onInputChange={props.onInputChange}\n          options={props.dataSource}\n          getOptionLabel={(option: AutocompleteOption) => option.text}\n          getOptionDisabled={(option: AutocompleteOption) =>\n            !!props.value.find(\n              element => element && element.value === option.value\n            ) ||\n            (props.optionsLimit && props.value.length >= props.optionsLimit)\n          }\n          getOptionSelected={(option, value) => option.value === value.value}\n          loading={props.loading}\n          renderInput={params => (\n            <TextField\n              {...params}\n              InputProps={{\n                ...params.InputProps,\n                placeholder: props.hintText && i18n._(props.hintText),\n              }}\n              label={props.floatingLabelText}\n              helperText={props.error || props.helperText}\n              variant=\"filled\"\n              error={!!props.error}\n              disabled={props.loading}\n            />\n          )}\n          fullWidth={props.fullWidth}\n          disabled={props.loading}\n          ChipProps={{\n            style: styles.chip,\n          }}\n        />\n      )}\n    </I18n>\n  );\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { Paper } from '@material-ui/core';\nimport * as React from 'react';\nimport EmptyMessage from '../UI/EmptyMessage';\n\nconst styles = {\n  image: {\n    display: 'block',\n    objectFit: 'cover',\n  },\n  thumbnail: {\n    // 16/9 format\n    width: 272,\n    height: 153,\n  },\n};\n\ntype Props = {|\n  thumbnailUrl?: string,\n  gameName: string,\n|};\n\nexport const GameThumbnail = ({ thumbnailUrl, gameName }: Props) =>\n  thumbnailUrl ? (\n    <img\n      src={thumbnailUrl}\n      style={{\n        ...styles.image,\n        ...styles.thumbnail,\n      }}\n      alt={gameName}\n      title={gameName}\n    />\n  ) : (\n    <Paper\n      variant=\"outlined\"\n      style={{\n        ...styles.thumbnail,\n        whiteSpace: 'normal',\n        display: 'flex',\n      }}\n    >\n      <EmptyMessage>\n        <Trans>No thumbnail set</Trans>\n      </EmptyMessage>\n    </Paper>\n  );\n","// @flow\n\nimport * as React from 'react';\nimport LeaderboardContext from './LeaderboardContext';\nimport {\n  type Leaderboard,\n  type LeaderboardEntry,\n  type LeaderboardExtremePlayerScore,\n  type LeaderboardSortOption,\n  type LeaderboardDisplayData,\n  type LeaderboardUpdatePayload,\n  createLeaderboard as doCreateLeaderboard,\n  updateLeaderboard as doUpdateLeaderboard,\n  resetLeaderboard as doResetLeaderboard,\n  deleteLeaderboardEntry as doDeleteLeaderboardEntry,\n  deleteLeaderboard as doDeleteLeaderboard,\n  extractExtremeScoreDisplayData,\n  extractEntryDisplayData,\n  listLeaderboardEntries,\n  listGameLeaderboards,\n} from '../Utils/GDevelopServices/Play';\nimport AuthenticatedUserContext from '../Profile/AuthenticatedUserContext';\n\ntype Props = {| gameId: string, children: React.Node |};\n\nconst pageSize = 10;\n\nconst shouldDisplayOnlyBestEntries = (leaderboard: Leaderboard) =>\n  leaderboard.playerUnicityDisplayChoice === 'PREFER_UNIQUE';\n\ntype ReducerState = {|\n  currentLeaderboardId: ?string,\n  currentLeaderboard: ?Leaderboard,\n  leaderboardsByIds: ?{| [string]: Leaderboard |},\n  displayOnlyBestEntry: boolean,\n  entries: ?Array<LeaderboardDisplayData>,\n  mapPageIndexToUri: {| [number]: string |},\n  pageIndex: number,\n|};\n\ntype ReducerAction =\n  | {| type: 'SET_LEADERBOARDS', payload: ?Array<Leaderboard> |}\n  | {| type: 'SET_ENTRIES', payload: ?Array<LeaderboardDisplayData> |}\n  | {| type: 'SET_NEXT_PAGE_URI', payload: string |}\n  | {| type: 'SELECT_LEADERBOARD', payload: string |}\n  | {| type: 'SET_PAGE_INDEX', payload: number |}\n  | {| type: 'PURGE_NAVIGATION' |}\n  | {| type: 'CHANGE_DISPLAY_ONLY_BEST_ENTRY', payload: boolean |}\n  | {| type: 'UPDATE_OR_CREATE_LEADERBOARD', payload: Leaderboard |}\n  | {| type: 'REMOVE_LEADERBOARD', payload: string |};\n\nconst reducer = (state: ReducerState, action: ReducerAction): ReducerState => {\n  switch (action.type) {\n    case 'SET_LEADERBOARDS':\n      const leaderboards = action.payload;\n      if (!leaderboards)\n        return {\n          ...state,\n          leaderboardsByIds: null,\n          currentLeaderboardId: null,\n          currentLeaderboard: null,\n        };\n\n      const leaderboardsByIds = leaderboards.reduce((acc, leaderboard) => {\n        acc[leaderboard.id] = leaderboard;\n        return acc;\n      }, {});\n      const shouldDefineCurrentLeaderboardIfNoneSelected =\n        !state.currentLeaderboard && leaderboards && leaderboards.length > 0;\n      const newCurrentLeaderboard = shouldDefineCurrentLeaderboardIfNoneSelected\n        ? leaderboards[0]\n        : state.currentLeaderboard;\n      return {\n        ...state,\n        leaderboardsByIds,\n        displayOnlyBestEntry: newCurrentLeaderboard\n          ? shouldDisplayOnlyBestEntries(newCurrentLeaderboard)\n          : false,\n        currentLeaderboardId: newCurrentLeaderboard\n          ? newCurrentLeaderboard.id\n          : null,\n        currentLeaderboard: newCurrentLeaderboard,\n      };\n    case 'SET_ENTRIES':\n      return {\n        ...state,\n        entries: action.payload,\n      };\n    case 'PURGE_NAVIGATION':\n      return {\n        ...state,\n        entries: null,\n        pageIndex: 0,\n        mapPageIndexToUri: {},\n      };\n    case 'SET_NEXT_PAGE_URI':\n      const nextPageIndex = state.pageIndex + 1;\n      return {\n        ...state,\n        mapPageIndexToUri: {\n          ...state.mapPageIndexToUri,\n          [nextPageIndex]: action.payload,\n        },\n      };\n    case 'SET_PAGE_INDEX':\n      return {\n        ...state,\n        pageIndex: action.payload,\n      };\n    case 'SELECT_LEADERBOARD':\n      if (!state.leaderboardsByIds) return state;\n      const leaderboard = state.leaderboardsByIds[action.payload];\n      return {\n        ...state,\n        displayOnlyBestEntry: shouldDisplayOnlyBestEntries(leaderboard),\n        currentLeaderboardId: leaderboard.id,\n        currentLeaderboard: leaderboard,\n      };\n    case 'CHANGE_DISPLAY_ONLY_BEST_ENTRY':\n      return {\n        ...state,\n        displayOnlyBestEntry: action.payload,\n      };\n    case 'UPDATE_OR_CREATE_LEADERBOARD':\n      return {\n        ...state,\n        displayOnlyBestEntry: shouldDisplayOnlyBestEntries(action.payload),\n        leaderboardsByIds: {\n          ...state.leaderboardsByIds,\n          [action.payload.id]: action.payload,\n        },\n        currentLeaderboardId: action.payload.id,\n        currentLeaderboard: action.payload,\n      };\n    case 'REMOVE_LEADERBOARD':\n      const newLeaderboardsByIds = { ...state.leaderboardsByIds };\n      delete newLeaderboardsByIds[action.payload];\n      const leaderboardsIds = Object.keys(newLeaderboardsByIds);\n      if (leaderboardsIds.length === 0) {\n        return {\n          ...state,\n          displayOnlyBestEntry: false,\n          leaderboardsByIds: newLeaderboardsByIds,\n          currentLeaderboard: null,\n          currentLeaderboardId: null,\n        };\n      }\n      return {\n        ...state,\n        displayOnlyBestEntry: shouldDisplayOnlyBestEntries(\n          newLeaderboardsByIds[leaderboardsIds[0]]\n        ),\n        leaderboardsByIds: newLeaderboardsByIds,\n        currentLeaderboard: newLeaderboardsByIds[leaderboardsIds[0]],\n        currentLeaderboardId: leaderboardsIds[0],\n      };\n    default: {\n      return { ...state };\n    }\n  }\n};\n\nconst LeaderboardProvider = ({ gameId, children }: Props) => {\n  const authenticatedUser = React.useContext(AuthenticatedUserContext);\n  // Ensure that only one request for leaderboards list is sent at the same time.\n  const isListingLeaderboards = React.useRef(false);\n\n  const [\n    {\n      currentLeaderboardId,\n      currentLeaderboard,\n      leaderboardsByIds,\n      displayOnlyBestEntry,\n      entries,\n      mapPageIndexToUri,\n      pageIndex,\n    },\n    dispatch,\n  ] = React.useReducer<ReducerState, ReducerAction>(reducer, {\n    currentLeaderboardId: null,\n    currentLeaderboard: null,\n    leaderboardsByIds: null,\n    displayOnlyBestEntry: false,\n    entries: null,\n    mapPageIndexToUri: {},\n    pageIndex: 0,\n  });\n\n  const listLeaderboards = React.useCallback(\n    async () => {\n      if (!isListingLeaderboards.current) {\n        isListingLeaderboards.current = true;\n        try {\n          dispatch({ type: 'SET_LEADERBOARDS', payload: null });\n          const fetchedLeaderboards = await listGameLeaderboards(\n            authenticatedUser,\n            gameId\n          );\n          if (!fetchedLeaderboards) return;\n          fetchedLeaderboards.sort((a, b) => a.name.localeCompare(b.name));\n          dispatch({\n            type: 'SET_LEADERBOARDS',\n            payload: fetchedLeaderboards,\n          });\n        } finally {\n          isListingLeaderboards.current = false;\n        }\n      }\n    },\n    [gameId, authenticatedUser]\n  );\n\n  const createLeaderboard = React.useCallback(\n    async (creationPayload: {|\n      name: string,\n      sort: LeaderboardSortOption,\n    |}) => {\n      dispatch({ type: 'SET_ENTRIES', payload: null });\n      const newLeaderboard = await doCreateLeaderboard(\n        authenticatedUser,\n        gameId,\n        creationPayload\n      );\n      if (!newLeaderboard) return;\n\n      dispatch({\n        type: 'UPDATE_OR_CREATE_LEADERBOARD',\n        payload: newLeaderboard,\n      });\n    },\n    [gameId, authenticatedUser]\n  );\n\n  const fetchEntries = React.useCallback(\n    async (options?: {| uri?: ?string |}) => {\n      if (!currentLeaderboardId) return;\n\n      const uriToUse = options && options.uri ? options.uri : null;\n\n      dispatch({ type: 'SET_ENTRIES', payload: null });\n      const data = await listLeaderboardEntries(gameId, currentLeaderboardId, {\n        pageSize,\n        onlyBestEntry: displayOnlyBestEntry,\n        forceUri: uriToUse,\n      });\n      if (!data) return;\n      const fetchedEntries:\n        | LeaderboardEntry[]\n        | LeaderboardExtremePlayerScore[] = data.entries;\n\n      if (data.nextPageUri) {\n        dispatch({ type: 'SET_NEXT_PAGE_URI', payload: data.nextPageUri });\n      }\n\n      let entriesToDisplay: LeaderboardDisplayData[] = [];\n      if (displayOnlyBestEntry) {\n        entriesToDisplay = fetchedEntries.map(entry =>\n          // $FlowFixMe\n          extractExtremeScoreDisplayData(entry)\n        );\n      } else {\n        entriesToDisplay = fetchedEntries.map(entry =>\n          // $FlowFixMe\n          extractEntryDisplayData(entry)\n        );\n      }\n      dispatch({ type: 'SET_ENTRIES', payload: entriesToDisplay });\n    },\n    [currentLeaderboardId, displayOnlyBestEntry, gameId]\n  );\n\n  const selectLeaderboard = React.useCallback((leaderboardId: string) => {\n    dispatch({ type: 'SELECT_LEADERBOARD', payload: leaderboardId });\n  }, []);\n\n  const setDisplayOnlyBestEntry = React.useCallback((newValue: boolean) => {\n    dispatch({ type: 'CHANGE_DISPLAY_ONLY_BEST_ENTRY', payload: newValue });\n  }, []);\n\n  const updateLeaderboard = async (attributes: LeaderboardUpdatePayload) => {\n    if (!currentLeaderboardId) return;\n    if (attributes.sort) dispatch({ type: 'PURGE_NAVIGATION' }); // When changing playerUnicityDisplayChoice, it will change the displayOnlyBestEntry state variable, which will purge navigation.\n    const updatedLeaderboard = await doUpdateLeaderboard(\n      authenticatedUser,\n      gameId,\n      currentLeaderboardId,\n      attributes\n    );\n    if (!updatedLeaderboard) return;\n\n    dispatch({\n      type: 'UPDATE_OR_CREATE_LEADERBOARD',\n      payload: updatedLeaderboard,\n    });\n\n    if (attributes.sort) await fetchEntries();\n  };\n\n  const resetLeaderboard = async () => {\n    if (!currentLeaderboardId) return;\n    dispatch({ type: 'PURGE_NAVIGATION' });\n    const updatedLeaderboard = await doResetLeaderboard(\n      authenticatedUser,\n      gameId,\n      currentLeaderboardId\n    );\n    if (!updatedLeaderboard) return;\n\n    dispatch({\n      type: 'UPDATE_OR_CREATE_LEADERBOARD',\n      payload: updatedLeaderboard,\n    });\n    fetchEntries();\n  };\n\n  const deleteLeaderboard = async () => {\n    if (!currentLeaderboardId || !leaderboardsByIds) return;\n    dispatch({ type: 'PURGE_NAVIGATION' });\n    await doDeleteLeaderboard(authenticatedUser, gameId, currentLeaderboardId);\n    dispatch({ type: 'REMOVE_LEADERBOARD', payload: currentLeaderboardId });\n  };\n\n  const deleteLeaderboardEntry = async (entryId: string) => {\n    if (!currentLeaderboardId) return;\n    await doDeleteLeaderboardEntry(\n      authenticatedUser,\n      gameId,\n      currentLeaderboardId,\n      entryId\n    );\n    fetchEntries({ uri: pageIndex > 0 ? mapPageIndexToUri[pageIndex] : null });\n  };\n\n  // --- Navigation ---\n\n  const navigateToNextPage = React.useCallback(\n    async () => {\n      const nextPageUri = mapPageIndexToUri[pageIndex + 1];\n      if (!nextPageUri) return;\n      dispatch({ type: 'SET_PAGE_INDEX', payload: pageIndex + 1 });\n      await fetchEntries({ uri: nextPageUri });\n    },\n    [fetchEntries, mapPageIndexToUri, pageIndex]\n  );\n\n  const navigateToPreviousPage = React.useCallback(\n    async () => {\n      if (pageIndex === 1) {\n        dispatch({ type: 'SET_PAGE_INDEX', payload: 0 });\n        await fetchEntries();\n      } else {\n        const previousPageUri = mapPageIndexToUri[pageIndex - 1];\n        if (!previousPageUri) return;\n        dispatch({ type: 'SET_PAGE_INDEX', payload: pageIndex - 1 });\n        await fetchEntries({ uri: previousPageUri });\n      }\n    },\n    [fetchEntries, mapPageIndexToUri, pageIndex]\n  );\n\n  const navigateToFirstPage = React.useCallback(\n    async () => {\n      dispatch({ type: 'SET_PAGE_INDEX', payload: 0 });\n      await fetchEntries();\n    },\n    [fetchEntries]\n  );\n\n  // --- Effects ---\n\n  React.useEffect(\n    () => {\n      dispatch({ type: 'SET_LEADERBOARDS', payload: null });\n      dispatch({ type: 'PURGE_NAVIGATION' });\n    },\n    [gameId]\n  );\n\n  React.useEffect(\n    () => {\n      if (!currentLeaderboardId) return;\n      dispatch({ type: 'PURGE_NAVIGATION' });\n      fetchEntries();\n    },\n    [currentLeaderboardId, displayOnlyBestEntry, fetchEntries]\n  );\n\n  return (\n    <LeaderboardContext.Provider\n      value={{\n        leaderboards: !!leaderboardsByIds\n          ? // $FlowFixMe\n            Object.values(leaderboardsByIds)\n          : null,\n        currentLeaderboard,\n        displayOnlyBestEntry,\n        browsing: {\n          entries,\n          goToNextPage: !!mapPageIndexToUri[pageIndex + 1]\n            ? navigateToNextPage\n            : null,\n          goToPreviousPage:\n            pageIndex === 1 || !!mapPageIndexToUri[pageIndex - 1]\n              ? navigateToPreviousPage\n              : null,\n          goToFirstPage: pageIndex === 0 ? null : navigateToFirstPage,\n        },\n        setDisplayOnlyBestEntry,\n        createLeaderboard,\n        listLeaderboards,\n        selectLeaderboard,\n        updateLeaderboard,\n        resetLeaderboard,\n        deleteLeaderboard,\n        deleteLeaderboardEntry,\n        fetchLeaderboardEntries: fetchEntries,\n      }}\n    >\n      {children}\n    </LeaderboardContext.Provider>\n  );\n};\n\nexport default LeaderboardProvider;\n","// @flow\nimport * as React from 'react';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport Checkbox from '../../UI/Checkbox';\nimport { CorsAwareImage } from '../../UI/CorsAwareImage';\nimport GDevelopThemeContext from '../../UI/Theme/ThemeContext';\nimport { useLongTouch } from '../../Utils/UseLongTouch';\nimport CheckeredBackground from '../CheckeredBackground';\n\nconst SPRITE_SIZE = 100;\nexport const thumbnailContainerStyle = {\n  position: 'relative',\n  display: 'inline-block',\n  width: SPRITE_SIZE,\n  height: SPRITE_SIZE,\n  justifyContent: 'center',\n  alignItems: 'center',\n  lineHeight: SPRITE_SIZE + 'px',\n  textAlign: 'center',\n};\n\nconst styles = {\n  spriteThumbnail: {\n    ...thumbnailContainerStyle,\n  },\n  spriteThumbnailImage: {\n    position: 'relative',\n    maxWidth: SPRITE_SIZE,\n    maxHeight: SPRITE_SIZE,\n    verticalAlign: 'middle',\n    pointerEvents: 'none',\n  },\n  checkboxContainer: {\n    textAlign: 'initial',\n    position: 'absolute',\n    width: 34, // Used to position the checkbox near the right border with a proper margin\n    height: 64,\n    bottom: 0,\n    right: 0,\n  },\n};\n\ntype Props = {|\n  project: gdProject,\n  resourceName: string,\n  resourcesLoader: typeof ResourcesLoader,\n  style?: any,\n  selectable?: boolean,\n  selected?: boolean,\n  onSelect?: (checked: boolean) => void,\n  onContextMenu?: (x: number, y: number) => void,\n|};\n\nconst ImageThumbnail = (props: Props) => {\n  const { onContextMenu, resourcesLoader, resourceName, project } = props;\n  const theme = React.useContext(GDevelopThemeContext);\n\n  // Allow a long press to show the context menu\n  const longTouchForContextMenuProps = useLongTouch(\n    React.useCallback(\n      event => {\n        if (onContextMenu) onContextMenu(event.clientX, event.clientY);\n      },\n      [onContextMenu]\n    )\n  );\n\n  const { selectedBorderColor } = theme.imageThumbnail;\n  const normalBorderColor = theme.imagePreview.borderColor;\n  const borderColor = props.selected ? selectedBorderColor : normalBorderColor;\n\n  const containerStyle = {\n    ...styles.spriteThumbnail,\n    border: `1px solid ${borderColor}`,\n    ...props.style,\n  };\n\n  return (\n    <div\n      title={resourceName}\n      style={containerStyle}\n      onContextMenu={e => {\n        e.stopPropagation();\n        if (onContextMenu) onContextMenu(e.clientX, e.clientY);\n      }}\n      {...longTouchForContextMenuProps}\n    >\n      <CheckeredBackground />\n      <CorsAwareImage\n        style={styles.spriteThumbnailImage}\n        alt={resourceName}\n        src={resourcesLoader.getResourceFullUrl(project, resourceName, {})}\n      />\n      {props.selectable && (\n        <div style={styles.checkboxContainer}>\n          <Checkbox\n            checked={!!props.selected}\n            onCheck={(e, check) => props.onSelect && props.onSelect(check)}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ImageThumbnail;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport CloudDownload from '@material-ui/icons/CloudDownload';\nimport { ExtensionStore } from '.';\nimport EventsFunctionsExtensionsContext from '../../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport HelpButton from '../../UI/HelpButton';\nimport { importExtension, installExtension } from './InstallExtension';\nimport DismissableInfoBar from '../../UI/Messages/DismissableInfoBar';\nimport { type ExtensionShortHeader } from '../../Utils/GDevelopServices/Extension';\nimport AuthenticatedUserContext from '../../Profile/AuthenticatedUserContext';\nimport {\n  addCreateBadgePreHookIfNotClaimed,\n  TRIVIAL_FIRST_EXTENSION,\n} from '../../Utils/GDevelopServices/Badge';\n\ntype Props = {|\n  project: gdProject,\n  onClose: () => void,\n  onInstallExtension: ExtensionShortHeader => void,\n  onExtensionInstalled?: (extensionShortHeader?: ExtensionShortHeader) => void,\n|};\n\n/**\n * Allows to browse and install events based extensions.\n */\nexport default function ExtensionsSearchDialog({\n  project,\n  onClose,\n  onInstallExtension,\n  onExtensionInstalled,\n}: Props) {\n  const [isInstalling, setIsInstalling] = React.useState(false);\n  const [extensionWasInstalled, setExtensionWasInstalled] = React.useState(\n    false\n  );\n  const eventsFunctionsExtensionsState = React.useContext(\n    EventsFunctionsExtensionsContext\n  );\n  const authenticatedUser = React.useContext(AuthenticatedUserContext);\n\n  const installDisplayedExtension = addCreateBadgePreHookIfNotClaimed(\n    authenticatedUser,\n    TRIVIAL_FIRST_EXTENSION,\n    installExtension\n  );\n\n  const installOrImportExtension = async (\n    i18n: I18nType,\n    extensionShortHeader?: ExtensionShortHeader\n  ) => {\n    setIsInstalling(true);\n    try {\n      let wasExtensionInstalledOrImported;\n      if (!!extensionShortHeader) {\n        onInstallExtension(extensionShortHeader);\n        wasExtensionInstalledOrImported = await installDisplayedExtension(\n          i18n,\n          project,\n          eventsFunctionsExtensionsState,\n          extensionShortHeader\n        );\n      } else {\n        wasExtensionInstalledOrImported = await importExtension(\n          i18n,\n          eventsFunctionsExtensionsState,\n          project\n        );\n      }\n\n      if (wasExtensionInstalledOrImported) {\n        setExtensionWasInstalled(true);\n        if (onExtensionInstalled) onExtensionInstalled();\n        return true;\n      }\n\n      return false;\n    } finally {\n      setIsInstalling(false);\n    }\n  };\n\n  const eventsFunctionsExtensionOpener = eventsFunctionsExtensionsState.getEventsFunctionsExtensionOpener();\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Dialog\n          fullHeight\n          title={<Trans>Search for New Extensions</Trans>}\n          actions={[\n            <FlatButton\n              key=\"close\"\n              label={<Trans>Close</Trans>}\n              primary\n              onClick={onClose}\n              disabled={isInstalling}\n            />,\n          ]}\n          secondaryActions={[\n            <HelpButton key=\"help\" helpPagePath=\"/extensions/search\" />,\n            eventsFunctionsExtensionOpener ? (\n              <FlatButton\n                icon={<CloudDownload />}\n                key=\"import\"\n                label={<Trans>Import extension</Trans>}\n                onClick={() => {\n                  installOrImportExtension(i18n);\n                }}\n                disabled={isInstalling}\n              />\n            ) : null,\n          ]}\n          cannotBeDismissed={true}\n          flexBody\n          open\n          noMargin\n          onRequestClose={onClose}\n        >\n          <ExtensionStore\n            isInstalling={isInstalling}\n            onInstall={async extensionShortHeader =>\n              installOrImportExtension(i18n, extensionShortHeader)\n            }\n            project={project}\n            showOnlyWithBehaviors={false}\n          />\n          <DismissableInfoBar\n            identifier=\"extension-installed-explanation\"\n            message={\n              <Trans>\n                The extension was added to the project. You can now use it in\n                the list of actions/conditions and, if it's a behavior, in the\n                list of behaviors for an object.\n              </Trans>\n            }\n            show={extensionWasInstalled}\n          />\n        </Dialog>\n      )}\n    </I18n>\n  );\n}\n","// @flow\nimport * as React from 'react';\n\nexport type PublicProfileState = {\n  openUserPublicProfile: string => void,\n};\n\nconst initialPublicProfileState = {\n  openUserPublicProfile: (userId: string) => {},\n};\n\nconst PublicProfileContext = React.createContext<PublicProfileState>(\n  initialPublicProfileState\n);\n\nexport default PublicProfileContext;\n","// @flow\nimport {\n  type Asset,\n  type AssetShortHeader,\n  getAsset,\n} from '../Utils/GDevelopServices/Asset';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport { unserializeFromJSObject } from '../Utils/Serializer';\nimport flatten from 'lodash/flatten';\nimport uniqBy from 'lodash/uniqBy';\nimport uniq from 'lodash/uniq';\nimport {\n  getExtensionsRegistry,\n  getExtension,\n  type SerializedExtension,\n} from '../Utils/GDevelopServices/Extension';\nimport { type EventsFunctionsExtensionsState } from '../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport { mapVector } from '../Utils/MapFor';\nimport { toNewGdMapStringString } from '../Utils/MapStringString';\nconst gd: libGDevelop = global.gd;\n\nconst toPascalCase = (str: string) => {\n  if (!str) return '';\n  return str\n    .replace(/^[^A-Za-z0-9]*|[^A-Za-z0-9]*$/g, '$')\n    .replace(/[^A-Za-z0-9]+/g, '$')\n    .replace(/([a-z])([A-Z])/g, function(m, a, b) {\n      return a + '$' + b;\n    })\n    .toLowerCase()\n    .replace(/(\\$)(\\w?)/g, function(m, a, b) {\n      return b.toUpperCase();\n    });\n};\n\nexport const sanitizeObjectName = (objectName: string) => {\n  const trimmedObjectName = objectName.trim();\n  if (!trimmedObjectName) return 'UnnamedObject';\n\n  const pascalCaseName = toPascalCase(trimmedObjectName);\n\n  let prefixedObjectName = pascalCaseName;\n  if (prefixedObjectName[0] >= '0' && prefixedObjectName[0] <= '9') {\n    prefixedObjectName = '_' + prefixedObjectName;\n  }\n\n  return prefixedObjectName;\n};\n\n/**\n * Adds the specified resource to the resources manager, avoiding to duplicate\n * if it was already added.\n */\nexport const installResource = (\n  project: gdProject,\n  serializedResource: any,\n  resourceNewNames: { [string]: string }\n) => {\n  const originalResourceName: string = serializedResource.name;\n\n  if (resourceNewNames[originalResourceName]) {\n    // The resource was already added previously - don't\n    // bother adding it again.\n    return;\n  }\n\n  const resourcesManager: gdResourcesManager = project.getResourcesManager();\n\n  // Check if the resource that must be installed is already present. Use the \"origin\"\n  // of the resource (if present), otherwise for compatibility we use the URL.\n  const resourceFileUrl: string = serializedResource.file;\n  const resourceOriginName: string = serializedResource.origin\n    ? serializedResource.origin.name\n    : '';\n  const resourceOriginIdentifier: string = serializedResource.origin\n    ? serializedResource.origin.identifier\n    : '';\n  const existingResourceNameFromSameOrigin =\n    resourceOriginName && resourceOriginIdentifier\n      ? resourcesManager.getResourceNameWithOrigin(\n          resourceOriginName,\n          resourceOriginIdentifier\n        )\n      : '';\n  const existingResourceNameWithSameFile = resourcesManager.getResourceNameWithFile(\n    resourceFileUrl\n  );\n\n  if (existingResourceNameFromSameOrigin) {\n    // There is a resource with the same origin, use it.\n    resourceNewNames[originalResourceName] = existingResourceNameFromSameOrigin;\n    return;\n  } else if (existingResourceNameWithSameFile) {\n    // For compatibility with resources without origins, also check the file directly.\n    resourceNewNames[originalResourceName] = existingResourceNameWithSameFile;\n    return;\n  }\n\n  // The resource does not exist yet, add it. Note that the \"origin\" will be preserved.\n  let newResource = null;\n  if (serializedResource.kind === 'image') {\n    newResource = new gd.ImageResource();\n  } else {\n    throw new Error(\n      `Resource of kind \"${serializedResource.kind}\" is not supported.`\n    );\n  }\n\n  unserializeFromJSObject(newResource, serializedResource);\n\n  const newName = newNameGenerator(originalResourceName, name =>\n    resourcesManager.hasResource(name)\n  );\n  newResource.setName(newName);\n  newResource.setSmooth(project.getScaleMode() !== 'nearest');\n  newResource.setOrigin(resourceOriginName, resourceOriginIdentifier);\n  resourcesManager.addResource(newResource);\n  newResource.delete();\n\n  resourceNewNames[originalResourceName] = newName;\n};\n\nexport const addAssetToProject = async ({\n  asset,\n  project,\n  events,\n  objectsContainer,\n}: {|\n  asset: Asset,\n  project: gdProject,\n  events: gdEventsList,\n  objectsContainer: gdObjectsContainer,\n|}) => {\n  const objectNewNames = {};\n  const resourceNewNames = {};\n  const createdObjects: Array<gdObject> = [];\n\n  asset.objectAssets.forEach(objectAsset => {\n    objectAsset.resources.forEach(serializedResource => {});\n  });\n\n  // Create objects (and their behaviors)\n  asset.objectAssets.forEach(objectAsset => {\n    const type: ?string = objectAsset.object.type;\n    if (!type) throw new Error('An object has no type specified');\n\n    // Insert the object\n    const originalName = sanitizeObjectName(objectAsset.object.name);\n    const newName = newNameGenerator(originalName, name =>\n      objectsContainer.hasObjectNamed(name)\n    );\n    const object = objectsContainer.insertNewObject(\n      project,\n      type,\n      newName,\n      objectsContainer.getObjectsCount()\n    );\n    objectNewNames[originalName] = newName;\n\n    unserializeFromJSObject(\n      object,\n      objectAsset.object,\n      'unserializeFrom',\n      project\n    );\n\n    // The name was overwritten after unserialization.\n    object.setName(newName);\n\n    // Add resources used by the object\n    objectAsset.resources.forEach(serializedResource => {\n      installResource(project, serializedResource, resourceNewNames);\n    });\n\n    // TODO: Check how multiple objects are handled\n\n    // Resources may have been renamed to be added to the project.\n    // In this case, rename them in the object.\n    const renamedResourcesMap = toNewGdMapStringString(resourceNewNames);\n    const resourcesRenamer = new gd.ResourcesRenamer(renamedResourcesMap);\n    renamedResourcesMap.delete();\n    object.exposeResources(resourcesRenamer);\n    resourcesRenamer.delete();\n\n    objectAsset.customization.forEach(customization => {\n      if (customization.behaviorName) {\n        const { behaviorName, behaviorType } = customization;\n\n        const behaviorMetadata = gd.MetadataProvider.getBehaviorMetadata(\n          gd.JsPlatform.get(),\n          behaviorType\n        );\n        if (gd.MetadataProvider.isBadBehaviorMetadata(behaviorMetadata)) {\n          throw new Error(\n            'Behavior with type ' + behaviorType + ' could not be found.'\n          );\n        }\n\n        const behavior = behaviorMetadata.get();\n        // TODO: When this feature is exposed to users, we might want to use\n        // gd.WholeProjectRefactorer.addBehaviorAndRequiredBehaviors instead.\n        // And add analytics for this.\n        const behaviorContent = object.addNewBehavior(\n          project,\n          behaviorType,\n          behaviorName\n        );\n        customization.properties.forEach(property => {\n          behavior.updateProperty(\n            behaviorContent.getContent(),\n            property.name,\n            property.defaultValue\n          );\n        });\n      }\n    });\n\n    createdObjects.push(object);\n  });\n\n  // Add the events after adding all objects, as we need to potentially\n  // rename the objects in the inserted events.\n  asset.objectAssets.forEach(objectAsset => {\n    const originalName = objectAsset.object.name;\n    const newName = objectNewNames[originalName];\n\n    objectAsset.customization.forEach(customization => {\n      if (customization.events) {\n        const groupEvent = new gd.GroupEvent();\n        groupEvent.setName(newName);\n\n        unserializeFromJSObject(\n          groupEvent.getSubEvents(),\n          customization.events,\n          'unserializeFrom',\n          project\n        );\n\n        // Find/replace the customization parameters in the events.\n        customization.parameters.forEach(parameter => {\n          gd.EventsRefactorer.replaceStringInEvents(\n            project,\n            objectsContainer,\n            groupEvent.getSubEvents(),\n            parameter.name,\n            parameter.defaultValue,\n            /*matchCase=*/ true,\n            /*inConditions=*/ true,\n            /*inActions=*/ true,\n            /*inEventStrings=*/ false\n          );\n        });\n\n        // Rename any object that was renamed when inserted.\n        // Do this **after** replacing the customization parameters,\n        // as some expressions can be invalid before customization\n        // parameters replacements.\n        for (const originalName in objectNewNames) {\n          const newName = objectNewNames[originalName];\n          if (originalName !== newName) {\n            gd.EventsRefactorer.renameObjectInEvents(\n              project.getCurrentPlatform(),\n              project,\n              objectsContainer,\n              groupEvent.getSubEvents(),\n              originalName,\n              newName\n            );\n          }\n        }\n\n        events.insertEvent(groupEvent, events.getEventsCount());\n      }\n    });\n  });\n\n  return {\n    createdObjects,\n  };\n};\n\ntype RequiredBehavior = {|\n  extensionName: string,\n  extensionVersion: string,\n  behaviorType: string,\n|};\n\nexport const getRequiredBehaviorsFromAsset = (\n  asset: Asset\n): Array<RequiredBehavior> => {\n  return uniqBy(\n    flatten(\n      asset.objectAssets.map(objectAsset => {\n        return objectAsset.customization\n          .map(customization => {\n            if (customization.behaviorName) {\n              const {\n                behaviorType,\n                extensionName,\n                extensionVersion,\n              } = customization;\n              return { behaviorType, extensionName, extensionVersion };\n            }\n\n            return null;\n          })\n          .filter(Boolean);\n      })\n    ),\n    ({ behaviorType }) => behaviorType // TODO: Verify if we could use the extension name instead?\n  );\n};\n\ntype RequiredExtension = {|\n  extensionName: string,\n  extensionVersion: string,\n|};\n\nexport const filterMissingExtensions = (\n  gd: libGDevelop,\n  requiredExtensions: Array<RequiredExtension>\n): Array<RequiredExtension> => {\n  const loadedExtensionNames = mapVector(\n    gd.asPlatform(gd.JsPlatform.get()).getAllPlatformExtensions(),\n    extension => {\n      return extension.getName();\n    }\n  );\n\n  return requiredExtensions.filter(({ extensionName }) => {\n    return !loadedExtensionNames.includes(extensionName);\n  });\n};\n\nexport const getRequiredExtensionsForEventsFromAsset = (\n  asset: Asset\n): Array<RequiredExtension> => {\n  return uniqBy(\n    flatten(\n      asset.objectAssets.map(objectAsset => {\n        return flatten(\n          objectAsset.customization\n            .map(customization => {\n              if (customization.events) {\n                return customization.extensions;\n              }\n\n              return null;\n            })\n            .filter(Boolean)\n        );\n      })\n    ),\n    ({ extensionName }) => extensionName\n  );\n};\n\nexport const filterMissingBehaviors = (\n  gd: libGDevelop,\n  requiredBehaviors: Array<RequiredBehavior>\n): Array<RequiredBehavior> => {\n  return requiredBehaviors.filter(({ behaviorType }) => {\n    const behaviorMetadata = gd.MetadataProvider.getBehaviorMetadata(\n      gd.JsPlatform.get(),\n      behaviorType\n    );\n    return gd.MetadataProvider.isBadBehaviorMetadata(behaviorMetadata);\n  });\n};\n\nexport const downloadExtensions = async (\n  extensionNames: Array<string>\n): Promise<Array<SerializedExtension>> => {\n  if (!extensionNames.length) return Promise.resolve([]);\n\n  const extensionsRegistry = await getExtensionsRegistry();\n\n  const serializedExtensions = await Promise.all(\n    uniq(extensionNames).map(extensionName => {\n      const extensionShortHeader = extensionsRegistry.extensionShortHeaders.find(\n        extensionShortHeader => {\n          return extensionShortHeader.name === extensionName;\n        }\n      );\n      if (!extensionShortHeader) {\n        throw new Error(\n          'Unable to find extension ' + extensionName + ' in the registry.'\n        );\n      }\n\n      return getExtension(extensionShortHeader);\n    })\n  );\n\n  return serializedExtensions;\n};\n\n/**\n * Add a serialized (JS object) events function extension to the project,\n * triggering reload of extensions.\n */\nexport const addSerializedExtensionsToProject = (\n  eventsFunctionsExtensionsState: EventsFunctionsExtensionsState,\n  project: gdProject,\n  serializedExtensions: Array<SerializedExtension>,\n  fromExtensionStore: boolean = true\n): Promise<void> => {\n  serializedExtensions.forEach(serializedExtension => {\n    const { name } = serializedExtension;\n    if (!name)\n      return Promise.reject(new Error('Malformed extension (missing name).'));\n\n    const newEventsFunctionsExtension = project.hasEventsFunctionsExtensionNamed(\n      name\n    )\n      ? project.getEventsFunctionsExtension(name)\n      : project.insertNewEventsFunctionsExtension(name, 0);\n\n    unserializeFromJSObject(\n      newEventsFunctionsExtension,\n      serializedExtension,\n      'unserializeFrom',\n      project\n    );\n\n    if (fromExtensionStore) {\n      newEventsFunctionsExtension.setOrigin('gdevelop-extension-store', name);\n    }\n  });\n\n  return eventsFunctionsExtensionsState.loadProjectEventsFunctionsExtensions(\n    project\n  );\n};\n\ntype InstallAssetArgs = {|\n  assetShortHeader: AssetShortHeader,\n  eventsFunctionsExtensionsState: EventsFunctionsExtensionsState,\n  project: gdProject,\n  events: gdEventsList,\n  objectsContainer: gdObjectsContainer,\n|};\n\ntype InstallAssetOutput = {|\n  createdObjects: Array<gdObject>,\n|};\n\nexport const installAsset = async ({\n  assetShortHeader,\n  eventsFunctionsExtensionsState,\n  project,\n  events,\n  objectsContainer,\n}: InstallAssetArgs): Promise<InstallAssetOutput> => {\n  const asset = await getAsset(assetShortHeader);\n  const requiredBehaviors = getRequiredBehaviorsFromAsset(asset);\n  const requiredExtensions = getRequiredExtensionsForEventsFromAsset(asset);\n  const missingBehaviors = filterMissingBehaviors(gd, requiredBehaviors);\n  const missingExtensions = filterMissingExtensions(gd, requiredExtensions);\n  const serializedExtensions = await downloadExtensions([\n    ...missingBehaviors.map(({ extensionName }) => extensionName),\n    ...missingExtensions.map(({ extensionName }) => extensionName),\n  ]);\n  await addSerializedExtensionsToProject(\n    eventsFunctionsExtensionsState,\n    project,\n    serializedExtensions\n  );\n\n  const stillMissingBehaviors = filterMissingBehaviors(gd, requiredBehaviors);\n  if (stillMissingBehaviors.length) {\n    throw new Error(\n      'These behaviors could not be installed: ' +\n        missingBehaviors\n          .map(\n            ({ extensionName, behaviorType }) =>\n              `${behaviorType} (${extensionName})`\n          )\n          .join(', ')\n    );\n  }\n\n  const stillMissingExtensions = filterMissingExtensions(\n    gd,\n    requiredExtensions\n  );\n  if (stillMissingExtensions.length) {\n    throw new Error(\n      'These extensions could not be installed: ' +\n        missingExtensions.map(({ extensionName }) => extensionName).join(', ')\n    );\n  }\n\n  const output = await addAssetToProject({\n    project,\n    asset,\n    events,\n    objectsContainer,\n  });\n  return output;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport TextField from '../UI/TextField';\nimport RaisedButton from '../UI/RaisedButton';\nimport Dialog from '../UI/Dialog';\nimport ColorField from '../UI/ColorField';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport PropertiesEditor from '../PropertiesEditor';\nimport propertiesMapToSchema from '../PropertiesEditor/PropertiesMapToSchema';\nimport some from 'lodash/some';\nimport Checkbox from '../UI/Checkbox';\nimport { isNullPtr } from '../Utils/IsNullPtr';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport {\n  rgbColorToRGBString,\n  rgbStringAndAlphaToRGBColor,\n  type RGBColor,\n} from '../Utils/ColorTransformer';\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  open: boolean,\n  layout: gdLayout,\n  project: gdProject,\n  onApply: () => void,\n  onClose: () => void,\n  onOpenMoreSettings?: ?() => void,\n  onEditVariables: () => void,\n|};\n\ntype State = {|\n  windowTitle: string,\n  shouldStopSoundsOnStartup: boolean,\n  backgroundColor: ?RGBColor,\n|};\n\nexport default class ScenePropertiesDialog extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = this._loadFrom(props.layout);\n  }\n\n  _loadFrom(layout: gdLayout): State {\n    return {\n      windowTitle: layout.getWindowDefaultTitle(),\n      shouldStopSoundsOnStartup: layout.stopSoundsOnStartup(),\n      backgroundColor: {\n        r: layout.getBackgroundColorRed(),\n        g: layout.getBackgroundColorGreen(),\n        b: layout.getBackgroundColorBlue(),\n        a: 1,\n      },\n    };\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      (!this.props.open && newProps.open) ||\n      (newProps.open && this.props.layout !== newProps.layout)\n    ) {\n      this.setState(this._loadFrom(newProps.layout));\n    }\n  }\n\n  _onApply = () => {\n    this.props.layout.setWindowDefaultTitle(this.state.windowTitle);\n    this.props.layout.setStopSoundsOnStartup(\n      this.state.shouldStopSoundsOnStartup\n    );\n    this.props.layout.setBackgroundColor(\n      this.state.backgroundColor ? this.state.backgroundColor.r : 0,\n      this.state.backgroundColor ? this.state.backgroundColor.g : 0,\n      this.state.backgroundColor ? this.state.backgroundColor.b : 0\n    );\n    this.props.onApply();\n  };\n\n  render() {\n    const { layout } = this.props;\n    const actions = [\n      // TODO: Add support for cancelling modifications made to BehaviorSharedData\n      // (either by enhancing a function like propertiesMapToSchema or using copies)\n      // and then re-enable cancel button.\n      // <FlatButton\n      //   label={<Trans>Cancel</Trans>}\n      //   primary={false}\n      //   onClick={this.props.onClose}\n      // />,\n      <FlatButton\n        label={<Trans>Ok</Trans>}\n        key=\"ok\"\n        primary={true}\n        keyboardFocused={true}\n        onClick={this._onApply}\n      />,\n    ];\n\n    const allBehaviorSharedDataNames = layout\n      .getAllBehaviorSharedDataNames()\n      .toJSArray();\n\n    const propertiesEditors = allBehaviorSharedDataNames\n      .map(name => {\n        const sharedDataContent = layout.getBehaviorSharedData(name);\n        const type = sharedDataContent.getTypeName();\n\n        const behaviorMetadata = gd.MetadataProvider.getBehaviorMetadata(\n          gd.JsPlatform.get(),\n          type\n        );\n        if (gd.MetadataProvider.isBadBehaviorMetadata(behaviorMetadata))\n          return null;\n\n        const behaviorSharedData = behaviorMetadata.getSharedDataInstance();\n        if (isNullPtr(gd, behaviorSharedData)) return null;\n\n        const properties = behaviorSharedData.getProperties(\n          sharedDataContent.getContent()\n        );\n        const propertiesSchema = propertiesMapToSchema(\n          properties,\n          sharedDataContent =>\n            behaviorSharedData.getProperties(sharedDataContent.getContent()),\n          (sharedDataContent, name, value) => {\n            behaviorSharedData.updateProperty(\n              sharedDataContent.getContent(),\n              name,\n              value\n            );\n          }\n        );\n\n        return (\n          !!propertiesSchema.length && (\n            <PropertiesEditor\n              key={name}\n              schema={propertiesSchema}\n              instances={[sharedDataContent]}\n            />\n          )\n        );\n      })\n      .filter(Boolean);\n\n    return (\n      <Dialog\n        title={<Trans>Scene properties</Trans>}\n        actions={actions}\n        secondaryActions={[\n          <RaisedButton\n            key=\"edit-scene-variables\"\n            label={<Trans>Edit scene variables</Trans>}\n            fullWidth\n            onClick={() => {\n              this.props.onEditVariables();\n              this.props.onClose();\n            }}\n          />,\n        ]}\n        open={this.props.open}\n        cannotBeDismissed={true}\n        onApply={this._onApply}\n        onRequestClose={this.props.onClose}\n        maxWidth=\"sm\"\n      >\n        <ColumnStackLayout expand noMargin>\n          <TextField\n            floatingLabelText={<Trans>Window title</Trans>}\n            fullWidth\n            type=\"text\"\n            value={this.state.windowTitle}\n            onChange={(e, value) => this.setState({ windowTitle: value })}\n          />\n          <Checkbox\n            checked={this.state.shouldStopSoundsOnStartup}\n            label={<Trans>Stop music and sounds on startup</Trans>}\n            onCheck={(e, check) =>\n              this.setState({\n                shouldStopSoundsOnStartup: check,\n              })\n            }\n          />\n          <ColorField\n            floatingLabelText={<Trans>Scene background color</Trans>}\n            fullWidth\n            disableAlpha\n            color={rgbColorToRGBString(this.state.backgroundColor)}\n            onChange={color =>\n              this.setState({\n                backgroundColor: rgbStringAndAlphaToRGBColor(color),\n              })\n            }\n          />\n          {!some(propertiesEditors) && (\n            <EmptyMessage>\n              <Trans>\n                Any additional properties will appear here if you add behaviors\n                to objects, like Physics behavior.\n              </Trans>\n            </EmptyMessage>\n          )}\n          {propertiesEditors}\n          {this.props.onOpenMoreSettings && (\n            <RaisedButton\n              label={<Trans>Open advanced settings</Trans>}\n              fullWidth\n              onClick={() => {\n                if (this.props.onOpenMoreSettings)\n                  this.props.onOpenMoreSettings();\n                this.props.onClose();\n              }}\n            />\n          )}\n        </ColumnStackLayout>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport VariablesEditorDialog from '../VariablesList/VariablesEditorDialog';\nimport { type HotReloadPreviewButtonProps } from '../HotReload/HotReloadPreviewButton';\nimport EventsRootVariablesFinder from '../Utils/EventsRootVariablesFinder';\n\ntype Props = {|\n  open: boolean,\n  project: gdProject,\n  layout: gdLayout,\n  onApply: () => void,\n  onClose: () => void,\n  hotReloadPreviewButtonProps: HotReloadPreviewButtonProps,\n|};\n\nexport default (props: Props) => {\n  return (\n    <VariablesEditorDialog\n      open={props.open}\n      variablesContainer={props.layout.getVariables()}\n      onCancel={props.onClose}\n      onApply={props.onApply}\n      title={<Trans>Scene Variables</Trans>}\n      emptyPlaceholderTitle={<Trans>Add your first scene variable</Trans>}\n      emptyPlaceholderDescription={\n        <Trans>These variables hold additional information on a scene.</Trans>\n      }\n      helpPagePath={'/all-features/variables/scene-variables'}\n      hotReloadPreviewButtonProps={props.hotReloadPreviewButtonProps}\n      onComputeAllVariableNames={() =>\n        EventsRootVariablesFinder.findAllLayoutVariables(\n          props.project.getCurrentPlatform(),\n          props.project,\n          props.layout\n        )\n      }\n    />\n  );\n};\n","//@flow\nexport function isExtensionNameTaken(\n  name: string,\n  project: gdProject\n): boolean {\n  const allExtensions = project.getCurrentPlatform().getAllPlatformExtensions();\n  for (let i = 0; i < allExtensions.size(); i++) {\n    if (allExtensions.at(i).getName() === name) return true;\n  }\n  return project.hasEventsFunctionsExtensionNamed(name);\n}\n","// @flow\nimport { type CommandName } from './CommandsList';\n\ntype CommandHandler = () => void | Promise<void>;\n\nexport type SimpleCommand = {|\n  handler: CommandHandler,\n|};\n\nexport type CommandOption = {|\n  handler: CommandHandler,\n  text: string,\n  iconSrc?: string,\n|};\n\nexport type CommandWithOptions = {|\n  generateOptions: () => Array<CommandOption>,\n|};\n\nexport type Command = SimpleCommand | CommandWithOptions;\n\nexport type NamedCommand = {|\n  name: CommandName,\n  ...Command,\n|};\n\nexport type NamedCommandWithOptions = {|\n  name: CommandName,\n  ...CommandWithOptions,\n|};\n\nexport interface CommandManagerInterface {\n  registerCommand: (commandName: CommandName, command: Command) => void;\n  deregisterCommand: (commandName: CommandName) => void;\n  getNamedCommand: (commandName: CommandName) => ?NamedCommand;\n  getAllNamedCommands: () => Array<NamedCommand>;\n}\n\nexport default class CommandManager implements CommandManagerInterface {\n  _commands: { [CommandName]: Command };\n\n  constructor() {\n    this._commands = {};\n  }\n\n  registerCommand = (commandName: CommandName, command: Command) => {\n    if (this._commands[commandName])\n      return console.warn(\n        `Tried to register command ${commandName}, but it is already registered.`\n      );\n    this._commands[commandName] = command;\n  };\n\n  deregisterCommand = (commandName: CommandName) => {\n    if (!this._commands[commandName])\n      return console.warn(\n        `Tried to deregister command ${commandName}, but it is not registered.`\n      );\n    delete this._commands[commandName];\n  };\n\n  getNamedCommand = (commandName: CommandName) => {\n    const command = this._commands[commandName];\n    if (command) return { name: commandName, ...(command: Command) };\n    return null;\n  };\n\n  getAllNamedCommands = () => {\n    return Object.keys(this._commands).map<NamedCommand>(commandName => {\n      const command = this._commands[commandName];\n      return { ...(command: Command), name: commandName };\n    });\n  };\n}\n","// @flow\nimport { useRef } from 'react';\n\nconst useRefInit = <T>(init: () => T): T => {\n  const instanceRef = useRef(null);\n\n  let instance = instanceRef.current;\n  if (instance !== null) return instance;\n  // Lazily create the ref object\n  let newInstance = init();\n  instanceRef.current = newInstance;\n  return newInstance;\n};\n\nexport default useRefInit;\n","// @flow\nimport md5 from 'blueimp-md5';\n\nexport const getGravatarUrl = (\n  email: string,\n  { size }: { size: number } = { size: 40 }\n): string => {\n  const hash = md5(email.trim().toLowerCase());\n  return `https://www.gravatar.com/avatar/${hash}?s=${size}&d=retro`;\n};\n","// @flow\nimport * as React from 'react';\nimport ClassNameMap from '@material-ui/styles';\nimport MuiBadge from '@material-ui/core/Badge';\n\ntype Props = {|\n  children: React.Node,\n  invisible?: boolean,\n  overlap?: 'circle',\n  classes?: ClassNameMap,\n|};\n\nconst DotBadge = (props: Props) => (\n  <MuiBadge color=\"primary\" variant=\"dot\" {...props} />\n);\n\nexport default DotBadge;\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport Close from '@material-ui/icons/Close';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport ThemeConsumer from './Theme/ThemeConsumer';\nimport ContextMenu, { type ContextMenuInterface } from './Menu/ContextMenu';\nimport { useLongTouch } from '../Utils/UseLongTouch';\nimport { Spacer } from './Grid';\n\nconst styles = {\n  tabContentContainer: {\n    width: '100%',\n    position: 'relative',\n    textAlign: 'initial',\n    minHeight: 0,\n    display: 'flex',\n    flex: 1,\n  },\n  tabLabel: {\n    maxWidth: 360,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    fontSize: '15px', // Same as in Mosaic.css (for mosaic-window-title)\n  },\n  tabLabelAndIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n    marginRight: 10,\n  },\n  closeButton: {\n    marginRight: 5,\n    marginLeft: 5,\n  },\n};\n\ntype TabContentContainerProps = {|\n  active: boolean,\n  children: React.Node,\n|};\n\n/**\n * Contains the content of a tab. Two important things:\n *\n * 1) Instead of setting the \"height\" of hidden tabs to \"0\", we set \"display\" to \"none\" to avoid\n * messing with components (in particular components where you can scroll: when collapsed because of height=0,\n * they will lose they scrolling position).\n *\n * 2) shouldComponentUpdate is used to avoid updating the content of a tab that is not selected.\n */\nexport class TabContentContainer extends React.Component<TabContentContainerProps> {\n  shouldComponentUpdate(nextProps: TabContentContainerProps) {\n    return this.props.active || nextProps.active;\n  }\n\n  render() {\n    const { children, active } = this.props;\n    return (\n      <div\n        style={{\n          ...styles.tabContentContainer,\n          ...(active ? undefined : { display: 'none' }),\n        }}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\ntype ClosableTabsProps = {|\n  hideLabels?: boolean,\n  children: React.Node,\n|};\n\nexport const ClosableTabs = ({ hideLabels, children }: ClosableTabsProps) => (\n  <ThemeConsumer>\n    {muiTheme => {\n      const tabItemContainerStyle = {\n        maxWidth: '100%', // Tabs should take all width\n        flexShrink: 0, // Tabs height should never be reduced\n        display: hideLabels ? 'none' : 'flex',\n        flexWrap: 'nowrap', // Single line of tab...\n        overflowX: 'auto', // ...scroll horizontally if needed\n        backgroundColor: muiTheme.closableTabs.containerBackgroundColor,\n      };\n\n      return <div style={tabItemContainerStyle}>{children}</div>;\n    }}\n  </ThemeConsumer>\n);\n\nexport type ClosableTabProps = {|\n  id?: string,\n  active: boolean,\n  label: ?React.Node,\n  icon: ?React.Node,\n  closable: boolean,\n  onClose: () => void,\n  onCloseOthers: () => void,\n  onCloseAll: () => void,\n  onClick: () => void,\n  onActivated: () => void,\n|};\n\nexport function ClosableTab({\n  id,\n  active,\n  onClose,\n  onCloseOthers,\n  onCloseAll,\n  label,\n  icon,\n  closable,\n  onClick,\n  onActivated,\n}: ClosableTabProps) {\n  React.useEffect(\n    () => {\n      if (active) {\n        onActivated();\n      }\n    },\n    [active, onActivated]\n  );\n  const contextMenu = React.useRef<?ContextMenuInterface>(null);\n\n  const openContextMenu = event => {\n    event.stopPropagation();\n    if (contextMenu.current) {\n      contextMenu.current.open(event.clientX, event.clientY);\n    }\n  };\n\n  const closeOnMiddleClick = React.useCallback(\n    event => {\n      if (event.nativeEvent && event.nativeEvent.button === 1) {\n        onClose();\n      }\n    },\n    [onClose]\n  );\n\n  // Allow a long press to show the context menu\n  const longTouchForContextMenuProps = useLongTouch(\n    React.useCallback(\n      event => {\n        if (contextMenu.current) {\n          contextMenu.current.open(event.clientX, event.clientY);\n        }\n      },\n      [contextMenu]\n    )\n  );\n\n  return (\n    <ThemeConsumer>\n      {muiTheme => {\n        const textColor = !active\n          ? muiTheme.closableTabs.textColor\n          : muiTheme.closableTabs.selectedTextColor;\n\n        return (\n          <React.Fragment>\n            <span\n              style={{\n                flexShrink: 0, // Tabs are never resized to fit in flex container\n                position: 'relative',\n                display: 'inline-block',\n                marginRight: 1,\n                backgroundColor: !active\n                  ? muiTheme.closableTabs.backgroundColor\n                  : muiTheme.closableTabs.selectedBackgroundColor,\n              }}\n            >\n              <ButtonBase\n                onClick={onClick}\n                onAuxClick={closable ? closeOnMiddleClick : undefined}\n                onContextMenu={openContextMenu}\n                id={id ? `${id}-button` : undefined}\n                {...longTouchForContextMenuProps}\n                focusRipple\n                // If the touch ripple is not disabled, the dragged preview will\n                // use the size of the ripple and it will be too big.\n                disableTouchRipple\n              >\n                <span\n                  style={{\n                    ...styles.tabLabelAndIcon,\n                    height: muiTheme.closableTabs.height,\n                    color: textColor,\n                    fontFamily: muiTheme.closableTabs.fontFamily,\n                  }}\n                >\n                  {icon}\n                  {icon && label ? <Spacer /> : null}\n                  {label && <span style={styles.tabLabel}>{label}</span>}\n                </span>\n              </ButtonBase>\n              {closable && (\n                <ButtonBase\n                  onClick={onClose}\n                  onAuxClick={closeOnMiddleClick}\n                  onContextMenu={openContextMenu}\n                  {...longTouchForContextMenuProps}\n                  focusRipple\n                >\n                  <Close\n                    style={{\n                      ...styles.closeButton,\n                      width: muiTheme.closableTabs.height / 2,\n                      height: muiTheme.closableTabs.height,\n                    }}\n                    htmlColor={textColor}\n                  />\n                </ButtonBase>\n              )}\n            </span>\n            <ContextMenu\n              ref={contextMenu}\n              buildMenuTemplate={(i18n: I18nType) => [\n                {\n                  label: i18n._(t`Close`),\n                  click: onClose,\n                  enabled: closable,\n                },\n                {\n                  label: i18n._(t`Close others`),\n                  click: onCloseOthers,\n                },\n                {\n                  label: i18n._(t`Close all`),\n                  click: onCloseAll,\n                },\n              ]}\n            />\n          </React.Fragment>\n        );\n      }}\n    </ThemeConsumer>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport findIndex from 'lodash/findIndex';\nimport { EventsEditorContainer } from '../EditorContainers/EventsEditorContainer';\nimport { DebuggerEditorContainer } from '../EditorContainers/DebuggerEditorContainer';\nimport { EventsFunctionsExtensionEditorContainer } from '../EditorContainers/EventsFunctionsExtensionEditorContainer';\nimport { ExternalEventsEditorContainer } from '../EditorContainers/ExternalEventsEditorContainer';\nimport { ExternalLayoutEditorContainer } from '../EditorContainers/ExternalLayoutEditorContainer';\nimport { ResourcesEditorContainer } from '../EditorContainers/ResourcesEditorContainer';\nimport { SceneEditorContainer } from '../EditorContainers/SceneEditorContainer';\nimport {\n  type RenderEditorContainerPropsWithRef,\n  type EditorContainerExtraProps,\n} from '../EditorContainers/BaseEditor';\n\n// Supported editors\ntype EditorRef =\n  | DebuggerEditorContainer\n  | EventsEditorContainer\n  | EventsFunctionsExtensionEditorContainer\n  | ExternalEventsEditorContainer\n  | ExternalLayoutEditorContainer\n  | ResourcesEditorContainer\n  | SceneEditorContainer;\n\nexport type EditorTab = {|\n  // The function to render the tab editor.\n  renderEditorContainer: RenderEditorContainerPropsWithRef => React.Node,\n  // A reference to the editor.\n  editorRef: ?EditorRef,\n  // The label shown on the tab.\n  label?: string,\n  icon?: React.Node,\n  // The name of the layout/external layout/external events/extension.\n  projectItemName: ?string,\n  // A unique key for the tab.\n  key: string,\n  // Extra props to pass to editors\n  extraEditorProps: ?EditorContainerExtraProps,\n  // If set to false, the tab can't be closed.\n  closable: boolean,\n|};\n\nexport type EditorTabsState = {\n  editors: Array<EditorTab>,\n  currentTab: number,\n};\n\nexport const getEditorTabsInitialState = (): EditorTabsState => {\n  return {\n    editors: [],\n    currentTab: 0,\n  };\n};\n\nexport const openEditorTab = (\n  state: EditorTabsState,\n  {\n    label,\n    icon,\n    projectItemName,\n    renderEditorContainer,\n    key,\n    extraEditorProps,\n    dontFocusTab,\n    closable,\n  }: {|\n    label?: string,\n    icon?: React.Node,\n    projectItemName: ?string,\n    renderEditorContainer: (\n      props: RenderEditorContainerPropsWithRef\n    ) => React.Node,\n    key: string,\n    extraEditorProps?: EditorContainerExtraProps,\n    dontFocusTab?: boolean,\n    closable?: boolean,\n  |}\n): EditorTabsState => {\n  const existingEditorId = findIndex(\n    state.editors,\n    editor => editor.key === key\n  );\n  if (existingEditorId !== -1) {\n    return {\n      ...state,\n      currentTab: dontFocusTab ? state.currentTab : existingEditorId,\n    };\n  }\n\n  const editorTab: EditorTab = {\n    label,\n    icon,\n    projectItemName,\n    renderEditorContainer,\n    key,\n    extraEditorProps,\n    editorRef: null,\n    closable: typeof closable === 'undefined' ? true : !!closable,\n  };\n\n  return {\n    ...state,\n    editors: [...state.editors, editorTab],\n    currentTab: dontFocusTab ? state.currentTab : state.editors.length,\n  };\n};\n\nexport const changeCurrentTab = (\n  state: EditorTabsState,\n  newTabId: number\n): EditorTabsState => {\n  return {\n    ...state,\n    currentTab: Math.max(0, Math.min(newTabId, state.editors.length - 1)),\n  };\n};\n\nexport const closeTabsExceptIf = (\n  state: EditorTabsState,\n  keepPredicate: (editorTab: EditorTab) => boolean\n) => {\n  const currentEditorTab = getCurrentTab(state);\n  const remainingEditors = state.editors.filter(keepPredicate);\n  return changeCurrentTab(\n    {\n      ...state,\n      editors: remainingEditors,\n    },\n    // Keep the focus on the current editor tab, or if it was closed\n    // go back to the first tab.\n    remainingEditors.indexOf(currentEditorTab) || 0\n  );\n};\n\nexport const closeAllEditorTabs = (state: EditorTabsState): EditorTabsState => {\n  return closeTabsExceptIf(state, editorTab => !editorTab.closable);\n};\n\nexport const closeEditorTab = (\n  state: EditorTabsState,\n  chosenEditorTab: EditorTab\n): EditorTabsState => {\n  return closeTabsExceptIf(state, editorTab => editorTab !== chosenEditorTab);\n};\n\nexport const closeOtherEditorTabs = (\n  state: EditorTabsState,\n  chosenEditorTab: EditorTab\n): EditorTabsState => {\n  return closeTabsExceptIf(\n    state,\n    editorTab => !editorTab.closable || editorTab === chosenEditorTab\n  );\n};\n\nexport const getEditors = (state: EditorTabsState): Array<EditorTab> => {\n  return state.editors;\n};\n\nexport const getCurrentTabIndex = (state: EditorTabsState): number => {\n  return state.currentTab;\n};\n\nexport const getCurrentTab = (state: EditorTabsState): EditorTab => {\n  return state.editors[state.currentTab];\n};\n\nexport const closeProjectTabs = (\n  state: EditorTabsState,\n  project: ?gdProject\n) => {\n  return closeTabsExceptIf(state, editorTab => {\n    const editorProject =\n      editorTab.editorRef && editorTab.editorRef.getProject();\n    return !editorProject || editorProject !== project;\n  });\n};\n\n/**\n * Ask the editors to persist their UI settings\n * to the project.\n */\nexport const saveUiSettings = (state: EditorTabsState) => {\n  state.editors.forEach(editorTab => {\n    if (\n      editorTab.editorRef &&\n      (editorTab.editorRef instanceof SceneEditorContainer ||\n        editorTab.editorRef instanceof ExternalLayoutEditorContainer)\n    ) {\n      editorTab.editorRef.saveUiSettings();\n    }\n  });\n};\n\n/**\n * Notify the editors that the preview will start. This gives a chance\n * to editors with changes to commit them (like modified extensions).\n */\nexport const notifyPreviewWillStart = (state: EditorTabsState) => {\n  state.editors.forEach(editorTab => {\n    const editor = editorTab.editorRef;\n\n    if (editor instanceof EventsFunctionsExtensionEditorContainer) {\n      editor.previewWillStart();\n    }\n  });\n};\n\nexport const closeLayoutTabs = (state: EditorTabsState, layout: gdLayout) => {\n  return closeTabsExceptIf(state, editorTab => {\n    const editor = editorTab.editorRef;\n\n    if (\n      editor instanceof EventsEditorContainer ||\n      editor instanceof ExternalEventsEditorContainer ||\n      editor instanceof ExternalLayoutEditorContainer ||\n      editor instanceof SceneEditorContainer\n    ) {\n      const editorLayout = editor.getLayout();\n      return !editorLayout || editorLayout !== layout;\n    }\n\n    return true;\n  });\n};\n\nexport const closeExternalLayoutTabs = (\n  state: EditorTabsState,\n  externalLayout: gdExternalLayout\n) => {\n  return closeTabsExceptIf(state, editorTab => {\n    const editor = editorTab.editorRef;\n\n    if (editor instanceof ExternalLayoutEditorContainer) {\n      return (\n        !editor.getExternalLayout() ||\n        editor.getExternalLayout() !== externalLayout\n      );\n    }\n\n    return true;\n  });\n};\n\nexport const closeExternalEventsTabs = (\n  state: EditorTabsState,\n  externalEvents: gdExternalEvents\n) => {\n  return closeTabsExceptIf(state, editorTab => {\n    const editor = editorTab.editorRef;\n    if (editor instanceof ExternalEventsEditorContainer) {\n      return (\n        !editor.getExternalEvents() ||\n        editor.getExternalEvents() !== externalEvents\n      );\n    }\n\n    return true;\n  });\n};\n\nexport const closeEventsFunctionsExtensionTabs = (\n  state: EditorTabsState,\n  eventsFunctionsExtension: gdEventsFunctionsExtension\n) => {\n  return closeTabsExceptIf(state, editorTab => {\n    const editor = editorTab.editorRef;\n    if (editor instanceof EventsFunctionsExtensionEditorContainer) {\n      return (\n        !editor.getEventsFunctionsExtension() ||\n        editor.getEventsFunctionsExtension() !== eventsFunctionsExtension\n      );\n    }\n\n    return true;\n  });\n};\n\nexport const getEventsFunctionsExtensionEditor = (\n  state: EditorTabsState,\n  eventsFunctionsExtension: gdEventsFunctionsExtension\n): ?{| editor: EventsFunctionsExtensionEditorContainer, tabIndex: number |} => {\n  for (let tabIndex = 0; tabIndex < state.editors.length; ++tabIndex) {\n    const editor = state.editors[tabIndex].editorRef;\n    if (\n      editor instanceof EventsFunctionsExtensionEditorContainer &&\n      editor.getEventsFunctionsExtension() === eventsFunctionsExtension\n    ) {\n      return { editor, tabIndex };\n    }\n  }\n\n  return null;\n};\n\nexport const moveTabToTheRightOfHoveredTab = (\n  editorTabsState: EditorTabsState,\n  movingTabIndex: number,\n  hoveredTabIndex: number\n): EditorTabsState => {\n  // If the tab is dragged backward, we want it to be placed on the right\n  // of the hovered tab so as to match the position of the drop indicator.\n  const destinationIndex =\n    movingTabIndex > hoveredTabIndex ? hoveredTabIndex + 1 : hoveredTabIndex;\n\n  return moveTabToPosition(editorTabsState, movingTabIndex, destinationIndex);\n};\n\nexport const moveTabToPosition = (\n  editorTabsState: EditorTabsState,\n  fromIndex: number,\n  toIndex: number\n): EditorTabsState => {\n  const currentEditorTabs = [...getEditors(editorTabsState)];\n  const movingTab = currentEditorTabs[fromIndex];\n  currentEditorTabs.splice(fromIndex, 1);\n  currentEditorTabs.splice(toIndex, 0, movingTab);\n\n  let currentTabIndex = getCurrentTabIndex(editorTabsState);\n  let currentTabNewIndex = currentTabIndex;\n\n  const movingTabIsCurrentTab = fromIndex === currentTabIndex;\n  const tabIsMovedFromLeftToRightOfCurrentTab =\n    fromIndex < currentTabIndex && toIndex >= currentTabIndex;\n  const tabIsMovedFromRightToLeftOfCurrentTab =\n    fromIndex > currentTabIndex && toIndex <= currentTabIndex;\n\n  if (movingTabIsCurrentTab) currentTabNewIndex = toIndex;\n  else if (tabIsMovedFromLeftToRightOfCurrentTab) currentTabNewIndex -= 1;\n  else if (tabIsMovedFromRightToLeftOfCurrentTab) currentTabNewIndex += 1;\n\n  return { editors: currentEditorTabs, currentTab: currentTabNewIndex };\n};\n","// @flow\nimport * as React from 'react';\nimport EventsSheet, { type EventsSheetInterface } from '../../EventsSheet';\nimport { sendEventsExtractedAsFunction } from '../../Utils/Analytics/EventSender';\nimport {\n  type RenderEditorContainerProps,\n  type RenderEditorContainerPropsWithRef,\n} from './BaseEditor';\n\nexport class EventsEditorContainer extends React.Component<RenderEditorContainerProps> {\n  editor: ?EventsSheetInterface;\n\n  shouldComponentUpdate(nextProps: RenderEditorContainerProps) {\n    // Prevent any update to the editor if the editor is not active,\n    // and so not visible to the user.\n    return nextProps.isActive;\n  }\n\n  componentDidMount() {\n    if (this.props.isActive) {\n      const layout = this.getLayout();\n      this.props.setPreviewedLayout(layout ? layout.getName() : null);\n    }\n  }\n\n  componentDidUpdate(prevProps: RenderEditorContainerProps) {\n    if (!prevProps.isActive && this.props.isActive) {\n      const layout = this.getLayout();\n      this.props.setPreviewedLayout(layout ? layout.getName() : null);\n    }\n  }\n\n  getProject(): ?gdProject {\n    return this.props.project;\n  }\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  forceUpdateEditor() {\n    // No updates to be done.\n  }\n\n  getLayout(): ?gdLayout {\n    const { project, projectItemName } = this.props;\n    if (\n      !project ||\n      !projectItemName ||\n      !project.hasLayoutNamed(projectItemName)\n    )\n      return null;\n\n    return project.getLayout(projectItemName);\n  }\n\n  onBeginCreateEventsFunction = () => {\n    sendEventsExtractedAsFunction({\n      step: 'begin',\n      parentEditor: 'scene-events-editor',\n    });\n  };\n\n  onCreateEventsFunction = (extensionName, eventsFunction) => {\n    this.props.onCreateEventsFunction(\n      extensionName,\n      eventsFunction,\n      'scene-events-editor'\n    );\n  };\n\n  render() {\n    const { project, projectItemName } = this.props;\n    const layout = this.getLayout();\n    if (!layout || !project) {\n      //TODO: Error component\n      return <div>No layout called {projectItemName} found!</div>;\n    }\n\n    return (\n      <EventsSheet\n        ref={editor => (this.editor = editor)}\n        setToolbar={this.props.setToolbar}\n        onOpenLayout={this.props.onOpenLayout}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        openInstructionOrExpression={this.props.openInstructionOrExpression}\n        onCreateEventsFunction={this.onCreateEventsFunction}\n        onBeginCreateEventsFunction={this.onBeginCreateEventsFunction}\n        unsavedChanges={this.props.unsavedChanges}\n        project={project}\n        scope={{\n          layout,\n        }}\n        globalObjectsContainer={project}\n        objectsContainer={layout}\n        events={layout.getEvents()}\n        onOpenExternalEvents={this.props.onOpenExternalEvents}\n      />\n    );\n  }\n}\n\nexport const renderEventsEditorContainer = (\n  props: RenderEditorContainerPropsWithRef\n) => <EventsEditorContainer {...props} />;\n","// @flow\nimport * as React from 'react';\nimport { dropIndicator, cantDropIndicator } from './ClassNames';\n\n/**\n * A Drop indicator line for the events sheet\n */\nexport default function DropIndicator({ canDrop }: {| canDrop: boolean |}) {\n  return <div className={canDrop ? dropIndicator : cantDropIndicator} />;\n}\n","// @flow\nimport * as React from 'react';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\n\nexport default class DefaultField extends React.Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?any = null;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const { parameterMetadata } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    return (\n      <SemiControlledTextField\n        margin={this.props.isInline ? 'none' : 'dense'}\n        commitOnBlur\n        value={this.props.value}\n        floatingLabelText={description}\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        onChange={(text: string) => this.props.onChange(text)}\n        ref={field => (this._field = field)}\n        fullWidth\n      />\n    );\n  }\n}\n\nexport const renderInlineDefaultField = ({\n  value,\n  parameterMetadata,\n  MissingParameterValue,\n}: ParameterInlineRendererProps) => {\n  if (!value && !parameterMetadata.isOptional()) {\n    return <MissingParameterValue />;\n  }\n\n  return value;\n};\n","// @flow\nimport { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { enumerateObjectsAndGroups } from './EnumerateObjects';\nimport SemiControlledAutoComplete, {\n  type DataSource,\n  type SemiControlledAutoCompleteInterface,\n} from '../UI/SemiControlledAutoComplete';\nimport ListIcon from '../UI/ListIcon';\nimport getObjectByName from '../Utils/GetObjectByName';\nimport ObjectsRenderingService from '../ObjectsRendering/ObjectsRenderingService';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: ?gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n\n  /** If specified, only this object type should be allowed to be selected. */\n  allowedObjectType?: ?string,\n  /**\n   * If specified, an object without this required capability won't be selectable.\n   * Note that this does not work with groups - which are assumed to have all capabilities.\n   */\n  requiredObjectCapability?: ?string,\n\n  noGroups?: boolean,\n\n  onChoose?: string => void,\n  onChange: string => void,\n  onRequestClose?: () => void,\n  onApply?: () => void,\n  value: string,\n  errorTextIfInvalid?: React.Node,\n\n  fullWidth?: boolean,\n  floatingLabelText?: React.Node,\n  helperMarkdownText?: ?string,\n  hintText?: MessageDescriptor | string,\n  openOnFocus?: boolean,\n  margin?: 'none' | 'dense',\n\n  id?: ?string,\n|};\n\nconst iconSize = 24;\n\nconst getObjectsAndGroupsDataSource = ({\n  project,\n  globalObjectsContainer,\n  objectsContainer,\n  noGroups,\n  allowedObjectType,\n}: {|\n  project: ?gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  noGroups: ?boolean,\n  allowedObjectType: ?string,\n|}): DataSource => {\n  const list = enumerateObjectsAndGroups(\n    globalObjectsContainer,\n    objectsContainer,\n    allowedObjectType || undefined\n  );\n  const objects = list.allObjectsList.map(({ object }) => {\n    return {\n      text: object.getName(),\n      value: object.getName(),\n      renderIcon: project\n        ? () => (\n            <ListIcon\n              iconSize={iconSize}\n              src={ObjectsRenderingService.getThumbnail(project, object)}\n            />\n          )\n        : undefined,\n    };\n  });\n  const groups = noGroups\n    ? []\n    : list.allGroupsList.map(({ group }) => {\n        return {\n          text: group.getName(),\n          value: group.getName(),\n        };\n      });\n\n  return [...objects, { type: 'separator' }, ...groups];\n};\n\nconst checkHasRequiredCapability = ({\n  project,\n  globalObjectsContainer,\n  objectsContainer,\n  requiredObjectCapability,\n  objectName,\n}: {|\n  project: ?gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  requiredObjectCapability: ?string,\n  objectName: string,\n|}) => {\n  if (!requiredObjectCapability) return true;\n  if (!project) return true;\n\n  const object = getObjectByName(\n    globalObjectsContainer,\n    objectsContainer,\n    objectName\n  );\n  if (!object) {\n    // Either the object does not exist or it's a group - not a problem because:\n    // - if the object does not exist, we can't know its capabilities, we assume it has all.\n    // - a group is assumed to have all the capabilities.\n    return true;\n  }\n\n  const objectMetadata = gd.MetadataProvider.getObjectMetadata(\n    project.getCurrentPlatform(),\n    object.getType()\n  );\n  return !objectMetadata.isUnsupportedBaseObjectCapability(\n    requiredObjectCapability\n  );\n};\n\nexport default class ObjectSelector extends React.Component<Props, {||}> {\n  _field: ?SemiControlledAutoCompleteInterface;\n\n  // Don't add a componentWillUnmount that would call onChange. This can lead to\n  // calling callbacks that would then update a deleted instruction parameters.\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  render() {\n    const {\n      value,\n      onChange,\n      onChoose,\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      allowedObjectType,\n      requiredObjectCapability,\n      noGroups,\n      errorTextIfInvalid,\n      margin,\n      onRequestClose,\n      onApply,\n      id,\n      ...rest\n    } = this.props;\n\n    const objectAndGroups = getObjectsAndGroupsDataSource({\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      noGroups,\n      allowedObjectType,\n    });\n    const hasValidChoice =\n      objectAndGroups.filter(\n        choice => choice.text !== undefined && value === choice.text\n      ).length !== 0;\n    const hasObjectWithRequiredCapability = checkHasRequiredCapability({\n      project,\n      requiredObjectCapability,\n      globalObjectsContainer,\n      objectsContainer,\n      objectName: value,\n    });\n\n    const errorText = !hasObjectWithRequiredCapability ? (\n      <Trans>This object exists, but can't be used here.</Trans>\n    ) : !hasValidChoice ? (\n      errorTextIfInvalid\n    ) : (\n      undefined\n    );\n\n    return (\n      <SemiControlledAutoComplete\n        margin={margin}\n        hintText={t`Choose an object`}\n        value={value}\n        onChange={onChange}\n        onChoose={onChoose}\n        onRequestClose={onRequestClose}\n        onApply={onApply}\n        dataSource={objectAndGroups}\n        errorText={errorText}\n        ref={field => (this._field = field)}\n        id={id}\n        {...rest}\n      />\n    );\n  }\n}\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js-legacy';\n\n/**\n * Create a renderer for an type of object displayed as an icon\n *\n * @extends RenderedInstance\n * @class RenderedIconInstance\n * @constructor\n */\nexport default function makeRenderer(iconPath) {\n  class RenderedIconInstance extends RenderedInstance {\n    constructor(\n      project,\n      layout,\n      instance,\n      associatedObject,\n      pixiContainer,\n      pixiResourcesLoader\n    ) {\n      super(\n        project,\n        layout,\n        instance,\n        associatedObject,\n        pixiContainer,\n        pixiResourcesLoader\n      );\n\n      this._pixiObject = new PIXI.Sprite(PIXI.Texture.from(iconPath));\n      this._pixiContainer.addChild(this._pixiObject);\n    }\n\n    update() {\n      this._pixiObject.position.x = this._instance.getX();\n      this._pixiObject.position.y = this._instance.getY();\n      this._pixiObject.rotation = (this._instance.getAngle() * Math.PI) / 180.0;\n    }\n\n    static getThumbnail(project, resourcesLoader, object) {\n      return iconPath;\n    }\n  }\n\n  return RenderedIconInstance;\n}\n","// @flow\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../../ResourcesList/ResourceExternalEditor.flow';\nimport { type EventsScope } from '../../InstructionOrExpression/EventsScope.flow';\nimport { type MessageDescriptor } from '../../Utils/i18n/MessageDescriptor.flow';\n\nexport type ParameterRenderingServiceType = {\n  components: any,\n  getParameterComponent: (type: string) => any,\n  getUserFriendlyTypeName: (rawType: string) => ?MessageDescriptor,\n};\n\ntype CommonProps = {|\n  // The parameter\n  parameterMetadata?: gdParameterMetadata,\n  onChange: string => void,\n  value: string,\n\n  // Context\n  project?: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  isInline?: boolean,\n  onRequestClose?: () => void,\n  onApply?: () => void,\n  resourceSources?: Array<ResourceSource>,\n  onChooseResource?: ChooseResourceFunction,\n  resourceExternalEditors?: Array<ResourceExternalEditor>,\n\n  // Pass the ParameterRenderingService to allow to render nested parameters\n  parameterRenderingService?: ParameterRenderingServiceType,\n|};\n\nexport type ExpressionParameters = {|\n  getParametersCount: () => number,\n  getParameter: (index: number) => string,\n|};\n\nexport type ParameterFieldProps = {|\n  ...CommonProps,\n\n  // Instruction in which the parameter is.\n  instruction?: gdInstruction,\n  // Metadata of the instruction in which the parameter is.\n  instructionMetadata?: gdInstructionMetadata,\n  // Expression in which the parameter is.\n  expression?: ExpressionParameters,\n  // Metadata of the instruction in which the parameter is.\n  expressionMetadata?: gdExpressionMetadata,\n\n  // The index of the parameter in the instruction or expression.\n  parameterIndex?: number,\n|};\n\nexport type ParameterFieldInterface = {|\n  focus: () => void,\n|};\n\nexport const getParameterValueOrDefault = (\n  value: string,\n  parameterMetadata: ?gdParameterMetadata\n) => {\n  if (value) return value;\n\n  const defaultValue =\n    parameterMetadata && parameterMetadata.isOptional()\n      ? parameterMetadata.getDefaultValue()\n      : '';\n  return defaultValue;\n};\n","// @flow\nimport {\n  type EnumeratedExpressionMetadata,\n  type InstructionOrExpressionScope,\n} from './EnumeratedInstructionOrExpressionMetadata.js';\nimport { mapVector } from '../Utils/MapFor';\nimport flatten from 'lodash/flatten';\nimport { getExtensionPrefix } from './EnumerateInstructions.js';\nconst gd: libGDevelop = global.gd;\n\nconst GROUP_DELIMITER = '/';\n\n// Support enumerate expressions that can be string, number or both (\"number|string\").\n// \"number|string\" has limited support in the codebase, enough to be used in expressions but not\n// in parameters and this is not a generic feature (you can't do \"string|variable\" or this kind of things).\n// This may be improved in the future if really necessary.\nconst isPotentiallyStringType = (type: string) =>\n  type === 'string' || type === 'number|string';\nconst isPotentiallyNumberType = (type: string) =>\n  type === 'number' || type === 'number|string';\n\nconst enumerateExpressionMetadataMap = (\n  prefix: string,\n  expressions: gdMapStringExpressionMetadata,\n  scope: InstructionOrExpressionScope\n): Array<EnumeratedExpressionMetadata> => {\n  return mapVector(expressions.keys(), expressionType => {\n    const exprMetadata = expressions.get(expressionType);\n    if (!exprMetadata.isShown()) {\n      return null; // Skip hidden expressions\n    }\n\n    if (\n      scope.objectMetadata &&\n      scope.objectMetadata.isUnsupportedBaseObjectCapability(\n        exprMetadata.getRequiredBaseObjectCapability()\n      )\n    )\n      return null; // Skip expressions not supported by the object.\n\n    var parameters = [];\n    for (var i = 0; i < exprMetadata.getParametersCount(); i++) {\n      if (scope.objectMetadata && i === 0) continue;\n      if (scope.behaviorMetadata && i <= 1) continue; //Skip object and behavior parameters\n      if (exprMetadata.getParameter(i).isCodeOnly()) continue;\n\n      parameters.push(exprMetadata.getParameter(i));\n    }\n\n    const groupName = exprMetadata.getGroup();\n\n    return {\n      type: expressionType,\n      name: expressionType,\n      displayedName: exprMetadata.getFullName(),\n      fullGroupName: [prefix, groupName].filter(Boolean).join(GROUP_DELIMITER),\n      iconFilename: exprMetadata.getSmallIconFilename(),\n      metadata: exprMetadata,\n      parameters: parameters,\n      scope,\n      isPrivate: exprMetadata.isPrivate(),\n    };\n  }).filter(Boolean);\n};\n\n/** Enumerate all the free expressions available. */\nexport const enumerateFreeExpressions = (\n  type: string\n): Array<EnumeratedExpressionMetadata> => {\n  const allExtensions = gd\n    .asPlatform(gd.JsPlatform.get())\n    .getAllPlatformExtensions();\n  const returnNumber = isPotentiallyNumberType(type);\n  const returnString = isPotentiallyStringType(type);\n\n  return flatten(\n    mapVector(allExtensions, extension => {\n      const prefix = getExtensionPrefix(extension);\n      const scope = {\n        extension,\n        objectMetadata: undefined,\n        behaviorMetadata: undefined,\n      };\n\n      return [\n        ...(returnString\n          ? enumerateExpressionMetadataMap(\n              prefix,\n              extension.getAllStrExpressions(),\n              scope\n            )\n          : []),\n        ...(returnNumber\n          ? enumerateExpressionMetadataMap(\n              prefix,\n              extension.getAllExpressions(),\n              scope\n            )\n          : []),\n      ];\n    })\n  );\n};\n\n/** Enumerate the expressions available for the given object type. */\nexport const enumerateObjectExpressions = (\n  type: string,\n  objectType: string\n): Array<EnumeratedExpressionMetadata> => {\n  const extensionAndObjectMetadata = gd.MetadataProvider.getExtensionAndObjectMetadata(\n    gd.JsPlatform.get(),\n    objectType\n  );\n  const extension = extensionAndObjectMetadata.getExtension();\n  const objectMetadata = extensionAndObjectMetadata.getMetadata();\n  const scope = { extension, objectMetadata };\n\n  let objectsExpressions = [\n    ...(isPotentiallyStringType(type)\n      ? enumerateExpressionMetadataMap(\n          '',\n          extension.getAllStrExpressionsForObject(objectType),\n          scope\n        )\n      : []),\n    ...(isPotentiallyNumberType(type)\n      ? enumerateExpressionMetadataMap(\n          '',\n          extension.getAllExpressionsForObject(objectType),\n          scope\n        )\n      : []),\n  ];\n\n  const baseObjectType = ''; /* An empty string means the base object */\n  if (objectType !== baseObjectType) {\n    const extensionAndObjectMetadata = gd.MetadataProvider.getExtensionAndObjectMetadata(\n      gd.JsPlatform.get(),\n      baseObjectType\n    );\n    const extension = extensionAndObjectMetadata.getExtension();\n\n    objectsExpressions = [\n      ...objectsExpressions,\n      ...(isPotentiallyStringType(type)\n        ? enumerateExpressionMetadataMap(\n            '',\n            extension.getAllStrExpressionsForObject(baseObjectType),\n            scope\n          )\n        : []),\n      ...(isPotentiallyNumberType(type)\n        ? enumerateExpressionMetadataMap(\n            '',\n            extension.getAllExpressionsForObject(baseObjectType),\n            scope\n          )\n        : []),\n    ];\n  }\n\n  return objectsExpressions;\n};\n\n/** Enumerate the expressions available for the given behavior type. */\nexport const enumerateBehaviorExpressions = (\n  type: string,\n  behaviorType: string\n): Array<EnumeratedExpressionMetadata> => {\n  const extensionAndBehaviorMetadata = gd.MetadataProvider.getExtensionAndBehaviorMetadata(\n    gd.JsPlatform.get(),\n    behaviorType\n  );\n  const extension = extensionAndBehaviorMetadata.getExtension();\n  const behaviorMetadata = extensionAndBehaviorMetadata.getMetadata();\n  const scope = { extension, behaviorMetadata };\n\n  return [\n    ...(isPotentiallyStringType(type)\n      ? enumerateExpressionMetadataMap(\n          '',\n          extension.getAllStrExpressionsForBehavior(behaviorType),\n          scope\n        )\n      : []),\n    ...(isPotentiallyNumberType(type)\n      ? enumerateExpressionMetadataMap(\n          '',\n          extension.getAllExpressionsForBehavior(behaviorType),\n          scope\n        )\n      : []),\n  ];\n};\n\n/** Enumerate all the expressions available. */\nexport const enumerateAllExpressions = (\n  type: string\n): Array<EnumeratedExpressionMetadata> => {\n  const returnNumber = isPotentiallyNumberType(type);\n  const returnString = isPotentiallyStringType(type);\n\n  const objectsExpressions = [];\n  const behaviorsExpressions = [];\n  const freeExpressions = enumerateFreeExpressions(type);\n\n  const allExtensions = gd\n    .asPlatform(gd.JsPlatform.get())\n    .getAllPlatformExtensions();\n  mapVector(allExtensions, extension => {\n    const prefix = getExtensionPrefix(extension);\n\n    //Objects expressions:\n    mapVector(extension.getExtensionObjectsTypes(), objectType => {\n      const objectMetadata = extension.getObjectMetadata(objectType);\n      const scope = { extension, objectMetadata };\n\n      if (returnString)\n        objectsExpressions.push.apply(\n          objectsExpressions,\n          enumerateExpressionMetadataMap(\n            prefix,\n            extension.getAllStrExpressionsForObject(objectType),\n            scope\n          )\n        );\n      if (returnNumber)\n        objectsExpressions.push.apply(\n          objectsExpressions,\n          enumerateExpressionMetadataMap(\n            prefix,\n            extension.getAllExpressionsForObject(objectType),\n            scope\n          )\n        );\n    });\n\n    //Behaviors expressions:\n    mapVector(extension.getBehaviorsTypes(), behaviorType => {\n      const behaviorMetadata = extension.getBehaviorMetadata(behaviorType);\n      const scope = { extension, behaviorMetadata };\n\n      if (returnString)\n        behaviorsExpressions.push.apply(\n          behaviorsExpressions,\n          enumerateExpressionMetadataMap(\n            prefix,\n            extension.getAllStrExpressionsForBehavior(behaviorType),\n            scope\n          )\n        );\n      if (returnNumber)\n        behaviorsExpressions.push.apply(\n          behaviorsExpressions,\n          enumerateExpressionMetadataMap(\n            prefix,\n            extension.getAllExpressionsForBehavior(behaviorType),\n            scope\n          )\n        );\n    });\n  });\n\n  return [...freeExpressions, ...objectsExpressions, ...behaviorsExpressions];\n};\n\nexport const filterExpressions = (\n  list: Array<EnumeratedExpressionMetadata>,\n  searchText: string\n): Array<EnumeratedExpressionMetadata> => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  const matchCritera = (enumeratedExpression: EnumeratedExpressionMetadata) => {\n    return (\n      enumeratedExpression.type.toLowerCase().indexOf(lowercaseSearchText) !==\n      -1\n    );\n  };\n\n  const favorExactMatch = (\n    list: Array<EnumeratedExpressionMetadata>\n  ): Array<EnumeratedExpressionMetadata> => {\n    if (!searchText) {\n      return list;\n    }\n\n    for (var i = 0; i < list.length; ++i) {\n      if (list[i].type.toLowerCase() === lowercaseSearchText) {\n        const exactMatch = list[i];\n        list.splice(i, 1);\n        list.unshift(exactMatch);\n      }\n    }\n\n    return list;\n  };\n\n  // See EnumerateInstructions for a similar logic for instructions\n  return favorExactMatch(list.filter(matchCritera));\n};\n","// @flow\nimport * as React from 'react';\nimport { ListItem } from '../../../UI/List';\nimport ListIcon from '../../../UI/ListIcon';\nimport { type EnumeratedInstructionOrExpressionMetadata } from '../../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\nimport { getInstructionListItemValue, getInstructionListItemKey } from './Keys';\nimport { type SearchMatch } from '../../../UI/Search/UseSearchStructuredItem';\nimport HighlightedText from '../../../UI/Search/HighlightedText';\n\ntype Props = {|\n  instructionOrExpressionMetadata: EnumeratedInstructionOrExpressionMetadata,\n  iconSize: number,\n  onClick: () => void,\n  selectedValue: ?string,\n  matches?: SearchMatch[],\n|};\n\nexport const renderInstructionOrExpressionListItem = ({\n  instructionOrExpressionMetadata,\n  iconSize,\n  onClick,\n  selectedValue,\n  matches,\n}: Props) => {\n  const getRenderedText = (field: 'displayedName' | 'fullGroupName') => {\n    let text = instructionOrExpressionMetadata[field];\n    if (matches && matches.length) {\n      const matchesForGivenField = matches.filter(match => match.key === field);\n      if (!!matchesForGivenField.length) {\n        text = (\n          <HighlightedText\n            text={text}\n            matchesCoordinates={matchesForGivenField[0].indices}\n          />\n        );\n      }\n    }\n    return text;\n  };\n\n  return (\n    <ListItem\n      key={getInstructionListItemKey(instructionOrExpressionMetadata)}\n      selected={\n        selectedValue ===\n        getInstructionListItemValue(instructionOrExpressionMetadata.type)\n      }\n      primaryText={getRenderedText('displayedName')}\n      secondaryText={getRenderedText('fullGroupName')}\n      leftIcon={\n        <ListIcon\n          iconSize={iconSize}\n          src={instructionOrExpressionMetadata.iconFilename}\n        />\n      }\n      onClick={onClick}\n      disableAutoTranslate\n    />\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { ListItem, type ListItemRefType } from '../../../UI/List';\nimport ListIcon from '../../../UI/ListIcon';\nimport { type InstructionOrExpressionTreeNode } from '../../../InstructionOrExpression/CreateTree';\nimport { type EnumeratedInstructionOrExpressionMetadata } from '../../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\nimport Subheader from '../../../UI/Subheader';\nimport flatten from 'lodash/flatten';\nimport { getSubheaderListItemKey, getInstructionListItemValue } from './Keys';\n\ntype Props<T> = {|\n  instructionTreeNode: InstructionOrExpressionTreeNode,\n  onChoose: (type: string, T) => void,\n  iconSize: number,\n  useSubheaders?: boolean,\n  selectedValue: ?string,\n  initiallyOpenedPath?: ?Array<string>,\n  getGroupIconSrc: string => string,\n\n  // Optional ref that will be filled with the selected ListItem\n  selectedItemRef?: { current: null | ListItemRefType },\n|};\n\nexport const renderInstructionOrExpressionTree = <\n  T: EnumeratedInstructionOrExpressionMetadata\n>({\n  instructionTreeNode,\n  onChoose,\n  iconSize,\n  useSubheaders,\n  selectedValue,\n  selectedItemRef,\n  initiallyOpenedPath,\n  getGroupIconSrc,\n}: Props<T>): Array<React$Element<any> | null> => {\n  const [initiallyOpenedKey, ...restOfInitiallyOpenedPath] =\n    initiallyOpenedPath || [];\n\n  return flatten(\n    Object.keys(instructionTreeNode).map(key => {\n      // In theory, we should have a way to distinguish\n      // between instruction (leaf nodes) and group (nodes). We use\n      // the \"type\" properties, but this will fail if a group is called \"type\"\n      // (hence the flow errors, which are valid warnings)\n      // $FlowFixMe\n      const instructionOrGroup = instructionTreeNode[key];\n      if (!instructionOrGroup) return null;\n\n      if (typeof instructionOrGroup.type === 'string') {\n        // $FlowFixMe - see above\n        const instructionInformation: T = instructionOrGroup;\n        const value = getInstructionListItemValue(instructionOrGroup.type);\n        const selected = selectedValue === value;\n        return (\n          <ListItem\n            key={value}\n            primaryText={key}\n            selected={selected}\n            id={'instruction-item-' + instructionInformation.type}\n            leftIcon={\n              <ListIcon\n                iconSize={iconSize}\n                src={instructionInformation.iconFilename}\n              />\n            }\n            onClick={() => {\n              onChoose(instructionInformation.type, instructionInformation);\n            }}\n            ref={selected ? selectedItemRef : undefined}\n          />\n        );\n      } else {\n        // $FlowFixMe - see above\n        const groupOfInstructionInformation: InstructionOrExpressionTreeNode = instructionOrGroup;\n        if (useSubheaders) {\n          return [\n            <Subheader key={getSubheaderListItemKey(key)}>{key}</Subheader>,\n          ].concat(\n            renderInstructionOrExpressionTree({\n              instructionTreeNode: groupOfInstructionInformation,\n              onChoose,\n              iconSize,\n              useSubheaders: false,\n              selectedValue,\n              selectedItemRef,\n              initiallyOpenedPath: restOfInitiallyOpenedPath,\n              getGroupIconSrc,\n            })\n          );\n        } else {\n          const initiallyOpen = initiallyOpenedKey === key;\n          const iconSrc = getGroupIconSrc(key);\n          return (\n            <ListItem\n              key={key}\n              primaryText={key}\n              autoGenerateNestedIndicator={true}\n              initiallyOpen={initiallyOpen}\n              leftIcon={\n                iconSrc ? <ListIcon iconSize={iconSize} src={iconSrc} /> : null\n              }\n              renderNestedItems={() =>\n                renderInstructionOrExpressionTree({\n                  instructionTreeNode: groupOfInstructionInformation,\n                  onChoose,\n                  iconSize,\n                  selectedValue,\n                  selectedItemRef,\n                  initiallyOpenedPath: initiallyOpen\n                    ? restOfInitiallyOpenedPath\n                    : undefined,\n                  getGroupIconSrc,\n                })\n              }\n            />\n          );\n        }\n      }\n    })\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type EventsScope } from '../../../InstructionOrExpression/EventsScope.flow';\nimport * as React from 'react';\nimport { mapFor } from '../../../Utils/MapFor';\nimport EmptyMessage from '../../../UI/EmptyMessage';\n\nexport type ParameterValues = Array<string>;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  project?: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  expressionMetadata: gdExpressionMetadata,\n  parameterValues: ParameterValues,\n  onChangeParameter: (index: number, value: string) => void,\n  parameterRenderingService?: {\n    components: any,\n    getParameterComponent: (type: string) => any,\n  },\n|};\ntype State = {||};\n\nexport const hasNonCodeOnlyParameters = (\n  expressionMetadata: gdExpressionMetadata\n) =>\n  mapFor(0, expressionMetadata.getParametersCount(), i => {\n    const parameterMetadata = expressionMetadata.getParameter(i);\n    return !parameterMetadata.isCodeOnly();\n  }).filter(isVisible => isVisible).length !== 0;\n\nexport default class ExpressionParametersEditor extends React.Component<\n  Props,\n  State\n> {\n  render() {\n    const {\n      expressionMetadata,\n      parameterValues,\n      project,\n      scope,\n      globalObjectsContainer,\n      objectsContainer,\n      parameterRenderingService,\n    } = this.props;\n\n    if (!parameterRenderingService) {\n      console.error(\n        'Missing parameterRenderingService for ExpressionParametersEditor'\n      );\n      return null;\n    }\n\n    // Create an object mimicking Instruction interface so that it can be used by\n    // ParameterFields components.\n    const parametersCount = expressionMetadata.getParametersCount();\n    const expression = {\n      getParametersCount: () => parametersCount,\n      getParameter: index => {\n        return parameterValues[index] || '';\n      },\n    };\n\n    return (\n      <div style={styles.container}>\n        {mapFor(0, expressionMetadata.getParametersCount(), i => {\n          const parameterMetadata = expressionMetadata.getParameter(i);\n          const ParameterComponent = parameterRenderingService.getParameterComponent(\n            parameterMetadata.getType()\n          );\n\n          if (parameterMetadata.isCodeOnly()) return null;\n          return (\n            <ParameterComponent\n              expressionMetadata={expressionMetadata}\n              expression={expression}\n              parameterMetadata={parameterMetadata}\n              parameterIndex={i}\n              value={parameterValues[i]}\n              onChange={value => this.props.onChangeParameter(i, value)}\n              project={project}\n              scope={scope}\n              globalObjectsContainer={globalObjectsContainer}\n              objectsContainer={objectsContainer}\n              key={i}\n              parameterRenderingService={parameterRenderingService}\n            />\n          );\n        })}\n        {!hasNonCodeOnlyParameters(expressionMetadata) && (\n          <EmptyMessage>\n            <Trans>There is nothing to configure.</Trans>\n          </EmptyMessage>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport flatten from 'lodash/flatten';\nimport { mapFor } from '../../Utils/MapFor';\nimport flatMap from 'lodash/flatMap';\nconst gd: libGDevelop = global.gd;\n\n// Note that in theory we could have this function inside gd.ExpressionParser2,\n// to be sure it's following perfectly the grammar of the expression parser. In\n// practice, the disallowed characters are not changing often, so it's fine to have\n// them here.\nconst isValidIdentifier = (variableName: string) => {\n  const identifierDisallowedCharacters = ',.\"()[]{}()[],+-<>?^=:!+-/* \\'';\n\n  for (let i = 0; i < variableName.length; ++i) {\n    if (identifierDisallowedCharacters.indexOf(variableName[i]) !== -1)\n      return false;\n  }\n\n  return true;\n};\n\nconst convertToStringLiteral = (variableName: string) => {\n  return '\"' + variableName.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"') + '\"';\n};\n\ntype EnumeratedVariable = {|\n  name: string,\n  isValidName: boolean,\n|};\n\nexport const enumerateVariables = (\n  variablesContainer: ?gdVariablesContainer\n): Array<EnumeratedVariable> => {\n  if (!variablesContainer) {\n    return [];\n  }\n\n  const enumerateVariableAndChildrenNames = (\n    fullName: string,\n    variable: gdVariable,\n    isTopLevel: boolean,\n    isFullNameValid: boolean\n  ): Array<EnumeratedVariable> => {\n    // When a variable is top level, it should in theory not contain\n    // any special character making it unusable in an expression.\n    const isValidName = isTopLevel\n      ? isValidIdentifier(fullName)\n      : isFullNameValid;\n    const enumeratedVariable = { name: fullName, isValidName };\n\n    if (variable.getType() === gd.Variable.Structure) {\n      return [\n        enumeratedVariable,\n        ...flatMap(variable.getAllChildrenNames().toJSArray(), childName =>\n          enumerateVariableAndChildrenNames(\n            isValidIdentifier(childName)\n              ? `${fullName}.${childName}`\n              : `${fullName}[${convertToStringLiteral(childName)}]`,\n            variable.getChild(childName),\n            false,\n            isValidName\n          )\n        ),\n      ];\n    } else if (variable.getType() === gd.Variable.Array) {\n      return [\n        enumeratedVariable,\n        ...flatMap(\n          new Array(variable.getChildrenCount()).fill(''),\n          (_, index) =>\n            enumerateVariableAndChildrenNames(\n              `${fullName}[${index}]`,\n              variable.getAtIndex(index),\n              false,\n              isValidName\n            )\n        ),\n      ];\n    } else {\n      // Variable of primitive type\n      return [enumeratedVariable];\n    }\n  };\n\n  return flatten(\n    mapFor(0, variablesContainer.count(), i => {\n      return enumerateVariableAndChildrenNames(\n        variablesContainer.getNameAt(i),\n        variablesContainer.getAt(i),\n        true,\n        true\n      );\n    })\n  );\n};\n","// @flow\nimport { mapVector } from '../../Utils/MapFor';\nconst gd: libGDevelop = global.gd;\n\nexport const enumerateParametersUsableInExpressions = (\n  eventsFunction: gdEventsFunction\n): Array<gdParameterMetadata> => {\n  return mapVector(eventsFunction.getParameters(), parameterMetadata =>\n    parameterMetadata.isCodeOnly() ||\n    gd.ParameterMetadata.isObject(parameterMetadata.getType()) ||\n    gd.ParameterMetadata.isBehavior(parameterMetadata.getType())\n      ? null\n      : parameterMetadata\n  ).filter(Boolean);\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport VariableField, { renderVariableWithIcon } from './VariableField';\nimport VariablesEditorDialog from '../../VariablesList/VariablesEditorDialog';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport EventsRootVariablesFinder from '../../Utils/EventsRootVariablesFinder';\n\ntype State = {|\n  editorOpen: boolean,\n|};\n\nexport default class SceneVariableField extends React.Component<\n  ParameterFieldProps,\n  State\n> {\n  _field: ?VariableField;\n  state = {\n    editorOpen: false,\n  };\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const { project, scope } = this.props;\n    const { layout } = scope;\n\n    const onComputeAllVariableNames = () =>\n      project && layout\n        ? EventsRootVariablesFinder.findAllLayoutVariables(\n            project.getCurrentPlatform(),\n            project,\n            layout\n          )\n        : [];\n\n    return (\n      <React.Fragment>\n        <VariableField\n          variablesContainer={layout ? layout.getVariables() : null}\n          onComputeAllVariableNames={onComputeAllVariableNames}\n          parameterMetadata={this.props.parameterMetadata}\n          value={this.props.value}\n          onChange={this.props.onChange}\n          isInline={this.props.isInline}\n          onRequestClose={this.props.onRequestClose}\n          onApply={this.props.onApply}\n          ref={field => (this._field = field)}\n          onOpenDialog={() => this.setState({ editorOpen: true })}\n          globalObjectsContainer={this.props.globalObjectsContainer}\n          objectsContainer={this.props.objectsContainer}\n          scope={scope}\n        />\n        {this.state.editorOpen && layout && (\n          <VariablesEditorDialog\n            title={<Trans>Scene Variables</Trans>}\n            open\n            variablesContainer={layout.getVariables()}\n            onCancel={() => this.setState({ editorOpen: false })}\n            onApply={() => {\n              this.setState({ editorOpen: false });\n              if (this._field) this._field.updateAutocompletions();\n            }}\n            emptyPlaceholderTitle={<Trans>Add your first scene variable</Trans>}\n            emptyPlaceholderDescription={\n              <Trans>\n                These variables hold additional information on a scene.\n              </Trans>\n            }\n            helpPagePath={'/all-features/variables/scene-variables'}\n            onComputeAllVariableNames={onComputeAllVariableNames}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport const renderInlineSceneVariable = (\n  props: ParameterInlineRendererProps\n) => {\n  return renderVariableWithIcon(\n    props,\n    'res/types/scenevar.png',\n    'scene variable'\n  );\n};\n","// @flow\nimport Clipboard, { SafeExtractor } from '../Utils/Clipboard';\nimport {\n  type SelectionState,\n  getSelectedEvents,\n  hasEventSelected,\n  getSelectedEventContexts,\n  hasInstructionSelected,\n  hasInstructionsListSelected,\n  getSelectedInstructionsContexts,\n  getSelectedInstructionsListsContexts,\n  type InstructionsListContext,\n} from './SelectionHandler';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\nconst gd: libGDevelop = global.gd;\n\nexport const CLIPBOARD_KIND = 'EventsAndInstructions';\n\nexport const hasClipboardEvents = () => {\n  if (!Clipboard.has(CLIPBOARD_KIND)) return false;\n  const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n  const eventsCount = SafeExtractor.extractNumberProperty(\n    clipboardContent,\n    'eventsCount'\n  );\n  if (eventsCount === null) return false;\n\n  return eventsCount > 0;\n};\n\nexport const hasClipboardConditions = () => {\n  if (!Clipboard.has(CLIPBOARD_KIND)) return false;\n  const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n  const conditionsCount = SafeExtractor.extractNumberProperty(\n    clipboardContent,\n    'conditionsCount'\n  );\n  if (conditionsCount === null) return false;\n\n  return conditionsCount > 0;\n};\n\nexport const hasClipboardActions = () => {\n  if (!Clipboard.has(CLIPBOARD_KIND)) return false;\n  const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n  const actionsCount = SafeExtractor.extractNumberProperty(\n    clipboardContent,\n    'actionsCount'\n  );\n  if (actionsCount === null) return false;\n\n  return actionsCount > 0;\n};\n\nexport const copySelectionToClipboard = (selection: SelectionState) => {\n  const eventsList = new gd.EventsList();\n  const actionsList = new gd.InstructionsList();\n  const conditionsList = new gd.InstructionsList();\n\n  getSelectedEvents(selection).forEach(event =>\n    eventsList.insertEvent(event, eventsList.getEventsCount())\n  );\n  getSelectedInstructionsContexts(selection).forEach(instructionContext => {\n    if (instructionContext.isCondition) {\n      conditionsList.insert(\n        instructionContext.instruction,\n        conditionsList.size()\n      );\n    } else {\n      actionsList.insert(instructionContext.instruction, actionsList.size());\n    }\n  });\n\n  Clipboard.set(CLIPBOARD_KIND, {\n    eventsList: serializeToJSObject(eventsList),\n    eventsCount: eventsList.getEventsCount(),\n    actionsList: serializeToJSObject(actionsList),\n    actionsCount: actionsList.size(),\n    conditionsList: serializeToJSObject(conditionsList),\n    conditionsCount: conditionsList.size(),\n  });\n\n  eventsList.delete();\n  actionsList.delete();\n  conditionsList.delete();\n};\n\nexport const pasteEventsFromClipboardInSelection = (\n  project: gdProject,\n  selection: SelectionState\n): boolean => {\n  if (!hasEventSelected(selection) || !hasClipboardEvents()) return false;\n\n  const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n  const eventsListContent = SafeExtractor.extractArrayProperty(\n    clipboardContent,\n    'eventsList'\n  );\n  if (!eventsListContent) return false;\n\n  const eventsList = new gd.EventsList();\n  unserializeFromJSObject(\n    eventsList,\n    eventsListContent,\n    'unserializeFrom',\n    project\n  );\n  getSelectedEventContexts(selection).forEach(eventContext => {\n    eventContext.eventsList.insertEvents(\n      eventsList,\n      0,\n      eventsList.getEventsCount(),\n      eventContext.indexInList\n    );\n  });\n  eventsList.delete();\n\n  return true;\n};\n\nexport const pasteInstructionsFromClipboardInSelection = (\n  project: gdProject,\n  selection: SelectionState\n): boolean => {\n  if (\n    (!hasInstructionSelected(selection) &&\n      !hasInstructionsListSelected(selection)) ||\n    (!hasClipboardConditions() && !hasClipboardActions())\n  )\n    return false;\n\n  const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n  const actionsListContent = SafeExtractor.extractArrayProperty(\n    clipboardContent,\n    'actionsList'\n  );\n  const conditionsListContent = SafeExtractor.extractArrayProperty(\n    clipboardContent,\n    'conditionsList'\n  );\n  if (!actionsListContent || !conditionsListContent) return false;\n\n  const actionsList = new gd.InstructionsList();\n  const conditionsList = new gd.InstructionsList();\n  unserializeFromJSObject(\n    actionsList,\n    actionsListContent,\n    'unserializeFrom',\n    project\n  );\n  unserializeFromJSObject(\n    conditionsList,\n    conditionsListContent,\n    'unserializeFrom',\n    project\n  );\n  getSelectedInstructionsContexts(selection).forEach(instructionContext => {\n    if (instructionContext.isCondition) {\n      instructionContext.instrsList.insertInstructions(\n        conditionsList,\n        0,\n        conditionsList.size(),\n        instructionContext.indexInList\n      );\n    } else {\n      instructionContext.instrsList.insertInstructions(\n        actionsList,\n        0,\n        actionsList.size(),\n        instructionContext.indexInList\n      );\n    }\n  });\n  getSelectedInstructionsListsContexts(selection).forEach(\n    instructionsListContext => {\n      if (instructionsListContext.isCondition) {\n        instructionsListContext.instrsList.insertInstructions(\n          conditionsList,\n          0,\n          conditionsList.size(),\n          instructionsListContext.instrsList.size()\n        );\n      } else {\n        instructionsListContext.instrsList.insertInstructions(\n          actionsList,\n          0,\n          actionsList.size(),\n          instructionsListContext.instrsList.size()\n        );\n      }\n    }\n  );\n  conditionsList.delete();\n  actionsList.delete();\n\n  return true;\n};\n\nexport const pasteInstructionsFromClipboardInInstructionsList = (\n  project: gdProject,\n  instructionsListContext: InstructionsListContext\n) => {\n  if (!hasClipboardConditions() && !hasClipboardActions()) return false;\n\n  const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n  const actionsListContent = SafeExtractor.extractArrayProperty(\n    clipboardContent,\n    'actionsList'\n  );\n  const conditionsListContent = SafeExtractor.extractArrayProperty(\n    clipboardContent,\n    'conditionsList'\n  );\n  if (!actionsListContent || !conditionsListContent) return;\n\n  const actionsList = new gd.InstructionsList();\n  const conditionsList = new gd.InstructionsList();\n  unserializeFromJSObject(\n    actionsList,\n    actionsListContent,\n    'unserializeFrom',\n    project\n  );\n  unserializeFromJSObject(\n    conditionsList,\n    conditionsListContent,\n    'unserializeFrom',\n    project\n  );\n\n  if (instructionsListContext.isCondition) {\n    instructionsListContext.instrsList.insertInstructions(\n      conditionsList,\n      0,\n      conditionsList.size(),\n      instructionsListContext.instrsList.size()\n    );\n  } else {\n    instructionsListContext.instrsList.insertInstructions(\n      actionsList,\n      0,\n      actionsList.size(),\n      instructionsListContext.instrsList.size()\n    );\n  }\n  conditionsList.delete();\n  actionsList.delete();\n\n  return true;\n};\n","// @flow\nimport * as React from 'react';\nimport {\n  DropTarget,\n  type DropTargetMonitor,\n  type DropTargetConnector,\n  type ConnectDropTarget,\n} from 'react-dnd';\n\ntype Props<DraggedItemType> = {|\n  children: ({\n    connectDropTarget: ConnectDropTarget,\n    isOver: boolean,\n    canDrop: boolean,\n  }) => ?React.Node,\n  canDrop: (item: DraggedItemType) => boolean,\n  hover?: (monitor: DropTargetMonitor) => void,\n  drop: (monitor: DropTargetMonitor) => void,\n|};\n\ntype DropTargetProps = {|\n  connectDropTarget: ConnectDropTarget,\n  isOver: boolean,\n  canDrop: boolean,\n|};\n\nexport const makeDropTarget = <DraggedItemType>(\n  reactDndType: string\n): ((Props<DraggedItemType>) => React.Node) => {\n  const targetSpec = {\n    canDrop(props: Props<DraggedItemType>, monitor: DropTargetMonitor) {\n      const item = monitor.getItem();\n      return item && props.canDrop(item);\n    },\n    hover(props: Props<DraggedItemType>, monitor: DropTargetMonitor) {\n      if (props.hover) props.hover(monitor);\n    },\n    drop(props: Props<DraggedItemType>, monitor: DropTargetMonitor) {\n      if (monitor.didDrop()) {\n        return; // Drop already handled by another target\n      }\n      props.drop(monitor);\n    },\n  };\n\n  function targetCollect(\n    connect: DropTargetConnector,\n    monitor: DropTargetMonitor\n  ): DropTargetProps {\n    return {\n      connectDropTarget: connect.dropTarget(),\n      isOver: monitor.isOver({ shallow: true }),\n      canDrop: monitor.canDrop(),\n    };\n  }\n\n  const InnerDropTarget = DropTarget(reactDndType, targetSpec, targetCollect)(\n    ({ children, connectDropTarget, isOver, canDrop }) => {\n      return children({\n        connectDropTarget,\n        isOver,\n        canDrop,\n      });\n    }\n  );\n\n  return (props: Props<DraggedItemType>) => <InnerDropTarget {...props} />;\n};\n","// @flow\n\nimport flatten from 'lodash/flatten';\nimport { mapFor } from '../Utils/MapFor';\nconst gd: libGDevelop = global.gd;\n\nexport type EventMetadata = {|\n  type: string,\n  fullName: string,\n  description: string,\n|};\n\nexport const enumerateEventsMetadata = (): Array<EventMetadata> => {\n  const allExtensions = gd\n    .asPlatform(gd.JsPlatform.get())\n    .getAllPlatformExtensions();\n\n  return flatten(\n    mapFor(0, allExtensions.size(), i => {\n      const extension = allExtensions.at(i);\n      const extensionEvents = extension.getAllEvents();\n\n      return extensionEvents\n        .keys()\n        .toJSArray()\n        .map(type => {\n          const metadata = extensionEvents.get(type);\n          return {\n            type,\n            fullName: metadata.getFullName(),\n            description: metadata.getDescription(),\n          };\n        });\n    })\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport * as React from 'react';\nimport Toggle from '../../UI/Toggle';\nimport { mapFor } from '../../Utils/MapFor';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport ParameterRenderingService from '../ParameterRenderingService';\nimport HelpButton from '../../UI/HelpButton';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../../ResourcesList/ResourceExternalEditor.flow';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport AlertMessage from '../../UI/AlertMessage';\nimport DismissableAlertMessage from '../../UI/DismissableAlertMessage';\nimport Window from '../../Utils/Window';\nimport { getExtraInstructionInformation } from '../../Hints';\nimport DismissableTutorialMessage from '../../Hints/DismissableTutorialMessage';\nimport { isAnEventFunctionMetadata } from '../../EventsFunctionsExtensionsLoader';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport IconButton from '../../UI/IconButton';\nimport { type EventsScope } from '../../InstructionOrExpression/EventsScope.flow';\nimport { getObjectParameterIndex } from '../../InstructionOrExpression/EnumerateInstructions';\nimport Text from '../../UI/Text';\nimport { getInstructionMetadata } from './NewInstructionEditor';\nimport { ColumnStackLayout } from '../../UI/Layout';\nimport { setupInstructionParameters } from '../../InstructionOrExpression/SetupInstructionParameters';\nimport ScrollView from '../../UI/ScrollView';\nimport { getInstructionTutorialIds } from '../../Utils/GDevelopServices/Tutorial';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  // When displaying the empty message, center the message:\n  emptyContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  parametersContainer: {\n    flex: 1,\n  },\n  icon: {\n    width: 24,\n    height: 24,\n    marginRight: 8,\n    paddingTop: 6,\n    flexShrink: 0,\n  },\n  invertToggle: {\n    marginTop: 8,\n  },\n  description: {\n    whiteSpace: 'pre-wrap',\n  },\n};\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  objectName?: ?string,\n  instruction: gdInstruction,\n  isCondition: boolean,\n  focusOnMount?: boolean,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  style?: Object,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n  noHelpButton?: boolean,\n|};\ntype State = {|\n  isDirty: boolean,\n|};\n\nconst isParameterVisible = (\n  parameterMetadata: gdParameterMetadata,\n  parameterIndex: number,\n  objectParameterIndex: ?number\n) => {\n  // Hide parameters that are used only for code generation\n  if (parameterMetadata.isCodeOnly()) return false;\n\n  // For objects, hide the first object parameter, which is by convention the object name.\n  if (parameterIndex === objectParameterIndex) return false;\n\n  return true;\n};\n\nexport default class InstructionParametersEditor extends React.Component<\n  Props,\n  State\n> {\n  _firstVisibleField: ?any = {};\n  state = {\n    isDirty: false,\n  };\n\n  componentDidMount() {\n    if (this.props.focusOnMount) {\n      setTimeout(() => {\n        this.focus();\n      }, 300); // Let the time to the dialog that is potentially containing the InstructionParametersEditor to finish its transition.\n    }\n  }\n\n  focus() {\n    const { instruction, isCondition, project } = this.props;\n\n    // Verify that there is a field to focus.\n    if (\n      this._getVisibleParametersCount(\n        getInstructionMetadata({\n          instructionType: instruction.getType(),\n          isCondition,\n          project,\n        }),\n        this.props.objectName\n      ) !== 0\n    ) {\n      if (this._firstVisibleField && this._firstVisibleField.focus) {\n        this._firstVisibleField.focus();\n      }\n    }\n  }\n\n  _getVisibleParametersCount(\n    instructionMetadata: ?gdInstructionMetadata,\n    objectName: ?string\n  ) {\n    if (!instructionMetadata) return 0;\n\n    const objectParameterIndex = objectName\n      ? getObjectParameterIndex(instructionMetadata)\n      : -1;\n\n    return mapFor(0, instructionMetadata.getParametersCount(), i => {\n      if (!instructionMetadata) return false;\n      const parameterMetadata = instructionMetadata.getParameter(i);\n\n      return isParameterVisible(parameterMetadata, i, objectParameterIndex);\n    }).filter(isVisible => isVisible).length;\n  }\n\n  _openExtension = (i18n: I18nType) => {\n    if (this.state.isDirty) {\n      const answer = Window.showConfirmDialog(\n        i18n._(\n          t`You've made some changes here. Are you sure you want to discard them and open the function?`\n        )\n      );\n      if (!answer) return;\n    }\n\n    const { instruction, isCondition, project } = this.props;\n    const instructionType = instruction.getType();\n    if (!instructionType) return null;\n\n    const extension = isCondition\n      ? gd.MetadataProvider.getExtensionAndConditionMetadata(\n          project.getCurrentPlatform(),\n          instructionType\n        ).getExtension()\n      : gd.MetadataProvider.getExtensionAndActionMetadata(\n          project.getCurrentPlatform(),\n          instructionType\n        ).getExtension();\n\n    this.props.openInstructionOrExpression(extension, instructionType);\n  };\n\n  _renderEmpty() {\n    return (\n      <div style={{ ...styles.emptyContainer, ...this.props.style }}>\n        <EmptyMessage>\n          {this.props.isCondition ? (\n            <Trans>\n              Choose a condition (or an object then a condition) on the left\n            </Trans>\n          ) : (\n            <Trans>\n              Choose an action (or an object then an action) on the left\n            </Trans>\n          )}\n        </EmptyMessage>\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      instruction,\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      noHelpButton,\n      objectName,\n      isCondition,\n      scope,\n    } = this.props;\n\n    const instructionType = instruction.getType();\n    const instructionMetadata = getInstructionMetadata({\n      instructionType,\n      isCondition,\n      project,\n    });\n    if (!instructionMetadata) return this._renderEmpty();\n\n    const helpPage = instructionMetadata.getHelpPath();\n    const instructionExtraInformation = getExtraInstructionInformation(\n      instructionType\n    );\n    const tutorialIds = getInstructionTutorialIds(instructionType);\n    const objectParameterIndex = objectName\n      ? getObjectParameterIndex(instructionMetadata)\n      : -1;\n\n    setupInstructionParameters(\n      globalObjectsContainer,\n      objectsContainer,\n      instruction,\n      instructionMetadata,\n      objectName\n    );\n\n    let parameterFieldIndex = 0;\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <ScrollView autoHideScrollbar>\n            <Column expand>\n              <Line alignItems=\"flex-start\">\n                <img\n                  src={instructionMetadata.getIconFilename()}\n                  alt=\"\"\n                  style={styles.icon}\n                />\n                <Text style={styles.description}>\n                  {instructionMetadata.getDescription()}\n                </Text>\n                {isAnEventFunctionMetadata(instructionMetadata) && (\n                  <IconButton\n                    onClick={() => {\n                      this._openExtension(i18n);\n                    }}\n                  >\n                    <OpenInNew />\n                  </IconButton>\n                )}\n              </Line>\n              {instructionExtraInformation && (\n                <Line>\n                  {instructionExtraInformation.identifier === undefined ? (\n                    <AlertMessage kind={instructionExtraInformation.kind}>\n                      {i18n._(instructionExtraInformation.message)}\n                    </AlertMessage>\n                  ) : (\n                    <DismissableAlertMessage\n                      kind={instructionExtraInformation.kind}\n                      identifier={instructionExtraInformation.identifier}\n                    >\n                      {i18n._(instructionExtraInformation.message)}\n                    </DismissableAlertMessage>\n                  )}\n                </Line>\n              )}\n              {tutorialIds.length ? (\n                <Line>\n                  <ColumnStackLayout expand>\n                    {tutorialIds.map(tutorialId => (\n                      <DismissableTutorialMessage\n                        key={tutorialId}\n                        tutorialId={tutorialId}\n                      />\n                    ))}\n                  </ColumnStackLayout>\n                </Line>\n              ) : null}\n              <Spacer />\n              <div\n                key={instructionType}\n                style={styles.parametersContainer}\n                id=\"instruction-parameters-container\"\n              >\n                <ColumnStackLayout noMargin>\n                  {mapFor(0, instructionMetadata.getParametersCount(), i => {\n                    const parameterMetadata = instructionMetadata.getParameter(\n                      i\n                    );\n                    if (\n                      !isParameterVisible(\n                        parameterMetadata,\n                        i,\n                        objectParameterIndex\n                      )\n                    )\n                      return null;\n\n                    const parameterMetadataType = parameterMetadata.getType();\n                    const ParameterComponent = ParameterRenderingService.getParameterComponent(\n                      parameterMetadataType\n                    );\n\n                    // Track the field count on screen, to affect the ref to the\n                    // first visible field.\n                    const isFirstVisibleParameterField =\n                      parameterFieldIndex === 0;\n                    parameterFieldIndex++;\n\n                    return (\n                      <ParameterComponent\n                        instructionMetadata={instructionMetadata}\n                        instruction={instruction}\n                        parameterMetadata={parameterMetadata}\n                        parameterIndex={i}\n                        value={instruction.getParameter(i)}\n                        onChange={value => {\n                          if (instruction.getParameter(i) !== value) {\n                            instruction.setParameter(i, value);\n                            this.setState({\n                              isDirty: true,\n                            });\n                          }\n                        }}\n                        project={project}\n                        scope={scope}\n                        globalObjectsContainer={globalObjectsContainer}\n                        objectsContainer={objectsContainer}\n                        key={i}\n                        parameterRenderingService={ParameterRenderingService}\n                        resourceSources={this.props.resourceSources}\n                        onChooseResource={this.props.onChooseResource}\n                        resourceExternalEditors={\n                          this.props.resourceExternalEditors\n                        }\n                        ref={field => {\n                          if (isFirstVisibleParameterField) {\n                            this._firstVisibleField = field;\n                          }\n                        }}\n                      />\n                    );\n                  })}\n                </ColumnStackLayout>\n                {this._getVisibleParametersCount(\n                  instructionMetadata,\n                  objectName\n                ) === 0 && (\n                  <EmptyMessage>\n                    <Trans>There is nothing to configure.</Trans>\n                  </EmptyMessage>\n                )}\n                {this.props.isCondition && (\n                  <Toggle\n                    label={<Trans>Invert condition</Trans>}\n                    labelPosition=\"right\"\n                    toggled={instruction.isInverted()}\n                    style={styles.invertToggle}\n                    onToggle={(e, enabled) => {\n                      instruction.setInverted(enabled);\n                      this.forceUpdate();\n                    }}\n                  />\n                )}\n              </div>\n              <Line>\n                {!noHelpButton && helpPage && (\n                  <HelpButton\n                    helpPagePath={instructionMetadata.getHelpPath()}\n                    label={\n                      this.props.isCondition ? (\n                        <Trans>Help for this condition</Trans>\n                      ) : (\n                        <Trans>Help for this action</Trans>\n                      )\n                    }\n                  />\n                )}\n              </Line>\n            </Column>\n          </ScrollView>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\nimport Fuse from 'fuse.js';\n\nimport * as React from 'react';\nimport Add from '@material-ui/icons/Add';\nimport { Chip } from '@material-ui/core';\nimport {\n  createTree,\n  type InstructionOrExpressionTreeNode,\n  findInTree,\n} from '../../InstructionOrExpression/CreateTree';\nimport {\n  enumerateAllInstructions,\n  enumerateFreeInstructions,\n  deduplicateInstructionsList,\n} from '../../InstructionOrExpression/EnumerateInstructions';\nimport {\n  type EnumeratedInstructionMetadata,\n  filterEnumeratedInstructionOrExpressionMetadataByScope,\n} from '../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\nimport { List, type ListItemRefType, ListItem } from '../../UI/List';\nimport SearchBar, {\n  useShouldAutofocusSearchbar,\n  type SearchBarInterface,\n} from '../../UI/SearchBar';\nimport ThemeConsumer from '../../UI/Theme/ThemeConsumer';\nimport ScrollView, { type ScrollViewInterface } from '../../UI/ScrollView';\nimport { Tabs, Tab } from '../../UI/Tabs';\nimport Subheader from '../../UI/Subheader';\nimport {\n  enumerateObjectsAndGroups,\n  filterObjectByTags,\n  type ObjectWithContext,\n  type GroupWithContext,\n  enumerateObjects,\n} from '../../ObjectsList/EnumerateObjects';\nimport TagChips from '../../UI/TagChips';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { ResponsiveLineStackLayout } from '../../UI/Layout';\nimport { renderGroupObjectsListItem } from './SelectorListItems/SelectorGroupObjectsListItem';\nimport { renderObjectListItem } from './SelectorListItems/SelectorObjectListItem';\nimport { renderInstructionOrExpressionListItem } from './SelectorListItems/SelectorInstructionOrExpressionListItem';\nimport { renderInstructionOrExpressionTree } from './SelectorListItems/SelectorInstructionsTreeListItem';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport {\n  buildTagsMenuTemplate,\n  getTagsFromString,\n} from '../../Utils/TagsHelper';\nimport {\n  getObjectOrObjectGroupListItemValue,\n  getInstructionListItemValue,\n} from './SelectorListItems/Keys';\nimport { type EventsScope } from '../../InstructionOrExpression/EventsScope.flow';\nimport {\n  type SearchResult,\n  tuneMatches,\n  sharedFuseConfiguration,\n} from '../../UI/Search/UseSearchStructuredItem';\n\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  searchBar: {\n    flexShrink: 0,\n  },\n};\n\nconst DISPLAYED_INSTRUCTIONS_MAX_LENGTH = 20;\n\nexport type TabName = 'objects' | 'free-instructions';\n\ntype State = {|\n  searchText: string,\n  searchResults: {\n    objects: Array<SearchResult<ObjectWithContext>>,\n    groups: Array<SearchResult<GroupWithContext>>,\n    tags: Array<SearchResult<string>>,\n    instructions: Array<SearchResult<EnumeratedInstructionMetadata>>,\n  },\n\n  // State for tags of objects:\n  selectedObjectTags: Array<string>,\n|};\n\ntype Props = {|\n  project: gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  scope: EventsScope,\n  currentTab: TabName,\n  onChangeTab: TabName => void,\n  isCondition: boolean,\n  focusOnMount?: boolean,\n  chosenInstructionType: ?string,\n  onChooseInstruction: (type: string, EnumeratedInstructionMetadata) => void,\n  chosenObjectName: ?string,\n  onChooseObject: (objectName: string) => void,\n  onSearchStartOrReset?: () => void,\n  style?: Object,\n  onClickMore?: () => void,\n|};\n\nconst iconSize = 24;\nconst getGroupIconSrc = (key: string) => {\n  return gd.JsPlatform.get()\n    .getInstructionOrExpressionGroupMetadata(key)\n    .getIcon();\n};\n\nexport default class InstructionOrObjectSelector extends React.PureComponent<\n  Props,\n  State\n> {\n  state = {\n    searchText: '',\n    selectedObjectTags: [],\n    searchResults: { objects: [], groups: [], instructions: [], tags: [] },\n  };\n  _searchBar = React.createRef<SearchBarInterface>();\n  _scrollView = React.createRef<ScrollViewInterface>();\n  _selectedItem = React.createRef<ListItemRefType>();\n\n  // Free instructions, to be displayed in a tab next to the objects.\n  freeInstructionsInfo: Array<EnumeratedInstructionMetadata> = filterEnumeratedInstructionOrExpressionMetadataByScope(\n    enumerateFreeInstructions(this.props.isCondition),\n    this.props.scope\n  );\n  freeInstructionsInfoTree: InstructionOrExpressionTreeNode = createTree(\n    this.freeInstructionsInfo\n  );\n  initialInstructionTypePath = findInTree(\n    this.freeInstructionsInfoTree,\n    this.props.chosenInstructionType\n  );\n\n  instructionSearchApi = null;\n  objectSearchApi = null;\n  groupSearchApi = null;\n  tagSearchApi = null;\n\n  reEnumerateInstructions = () => {\n    this.freeInstructionsInfo = filterEnumeratedInstructionOrExpressionMetadataByScope(\n      enumerateFreeInstructions(this.props.isCondition),\n      this.props.scope\n    );\n    this.freeInstructionsInfoTree = createTree(this.freeInstructionsInfo);\n    this.forceUpdate();\n  };\n\n  // All the instructions, to be used when searching, so that the search is done\n  // across all the instructions (including object and behaviors instructions).\n  allInstructionsInfo: Array<EnumeratedInstructionMetadata> = filterEnumeratedInstructionOrExpressionMetadataByScope(\n    enumerateAllInstructions(this.props.isCondition),\n    this.props.scope\n  );\n\n  componentDidMount() {\n    if (\n      this.props.focusOnMount &&\n      useShouldAutofocusSearchbar() &&\n      this._searchBar.current\n    ) {\n      this._searchBar.current.focus();\n    }\n    if (this._selectedItem.current && this._scrollView.current) {\n      this._scrollView.current.scrollTo(this._selectedItem.current);\n    }\n    const { allObjectsList, allGroupsList } = enumerateObjectsAndGroups(\n      this.props.globalObjectsContainer,\n      this.props.objectsContainer\n    );\n\n    this.instructionSearchApi = new Fuse(\n      deduplicateInstructionsList(this.allInstructionsInfo),\n      {\n        ...sharedFuseConfiguration,\n        keys: [\n          { name: 'displayedName', weight: 5 },\n          { name: 'fullGroupName', weight: 1 },\n        ],\n      }\n    );\n    this.objectSearchApi = new Fuse(allObjectsList, {\n      ...sharedFuseConfiguration,\n      getFn: (item, property) => item.object.getName(),\n      keys: ['name'], // Not used as we only use the name of the object\n    });\n    this.groupSearchApi = new Fuse(allGroupsList, {\n      ...sharedFuseConfiguration,\n      getFn: (item, property) => item.group.getName(),\n      keys: ['name'], // Not used as we only use the name of the group\n    });\n    this.tagSearchApi = new Fuse(this._getAllObjectTags(), {\n      ...sharedFuseConfiguration,\n    });\n  }\n\n  _search = (searchText: string) => {\n    if (searchText === '') return;\n\n    this.setState({\n      searchResults: {\n        objects: this.objectSearchApi\n          ? this.objectSearchApi.search(`'${searchText}`).map(result => ({\n              item: result.item,\n              matches: tuneMatches(result, searchText),\n            }))\n          : [],\n        groups: this.groupSearchApi\n          ? this.groupSearchApi.search(`'${searchText}`).map(result => ({\n              item: result.item,\n              matches: tuneMatches(result, searchText),\n            }))\n          : [],\n        instructions: this.instructionSearchApi\n          ? this.instructionSearchApi.search(`'${searchText}`).map(result => ({\n              item: result.item,\n              matches: tuneMatches(result, searchText),\n            }))\n          : [],\n        tags: this.tagSearchApi\n          ? this.tagSearchApi.search(`'${searchText}`).map(result => ({\n              item: result.item,\n              matches: tuneMatches(result, searchText),\n            }))\n          : [],\n      },\n    });\n  };\n\n  _selectTag = (tag: string) => {\n    this.setState({\n      selectedObjectTags: [...this.state.selectedObjectTags, tag],\n      searchText: '',\n    });\n    this._searchBar.current && this._searchBar.current.focus();\n  };\n\n  _getAllObjectTags = (): Array<string> => {\n    const { globalObjectsContainer, objectsContainer } = this.props;\n\n    const tagsSet: Set<string> = new Set();\n    enumerateObjects(\n      globalObjectsContainer,\n      objectsContainer\n    ).allObjectsList.forEach(({ object }) => {\n      getTagsFromString(object.getTags()).forEach(tag => tagsSet.add(tag));\n    });\n\n    return Array.from(tagsSet);\n  };\n\n  _buildObjectTagsMenuTemplate = (i18n: I18nType): Array<any> => {\n    const { selectedObjectTags } = this.state;\n\n    return buildTagsMenuTemplate({\n      noTagLabel: i18n._(t`No tags - add a tag to an object first`),\n      getAllTags: this._getAllObjectTags,\n      selectedTags: selectedObjectTags,\n      onChange: selectedObjectTags => {\n        this.setState({ selectedObjectTags });\n      },\n    });\n  };\n\n  render() {\n    const {\n      style,\n      globalObjectsContainer,\n      objectsContainer,\n      project,\n      chosenInstructionType,\n      onChooseInstruction,\n      chosenObjectName,\n      onChooseObject,\n      isCondition,\n      currentTab,\n      onChangeTab,\n      onSearchStartOrReset,\n      onClickMore,\n    } = this.props;\n    const { searchText, selectedObjectTags, searchResults } = this.state;\n\n    // If the global objects container is not the project, consider that we're\n    // not in the events of a layout or an external events sheet - but in an extension.\n    const isOutsideLayout = globalObjectsContainer !== project;\n\n    const { allObjectsList, allGroupsList } = enumerateObjectsAndGroups(\n      globalObjectsContainer,\n      objectsContainer\n    );\n    const isSearching = !!searchText;\n\n    let filteredObjectsList = [];\n    let displayedObjectGroupsList = [];\n    let filteredInstructionsList = [];\n    let displayedTags = [];\n\n    if (isSearching) {\n      filteredObjectsList = searchResults.objects;\n      displayedObjectGroupsList = searchResults.groups;\n      filteredInstructionsList = searchResults.instructions;\n      displayedTags = searchResults.tags;\n    } else {\n      filteredObjectsList = allObjectsList.map(object => ({\n        item: object,\n        matches: [],\n      }));\n      displayedObjectGroupsList = allGroupsList.map(object => ({\n        item: object,\n        matches: [],\n      }));\n    }\n    const displayedObjectsList = filteredObjectsList.filter(searchResult =>\n      filterObjectByTags(searchResult.item, selectedObjectTags)\n    );\n\n    const displayedInstructionsList = filteredInstructionsList.slice(\n      0,\n      DISPLAYED_INSTRUCTIONS_MAX_LENGTH\n    );\n\n    const remainingResultsCount = isSearching\n      ? Math.max(\n          filteredInstructionsList.length - DISPLAYED_INSTRUCTIONS_MAX_LENGTH,\n          0\n        )\n      : 0;\n\n    const hasResults =\n      !isSearching ||\n      !!displayedObjectsList.length ||\n      !!displayedObjectGroupsList.length ||\n      !!displayedInstructionsList.length ||\n      !!displayedTags.length;\n\n    const onSubmitSearch = () => {\n      if (!isSearching) return;\n\n      if (displayedObjectsList.length > 0) {\n        onChooseObject(displayedObjectsList[0].item.object.getName());\n      } else if (displayedObjectGroupsList.length > 0) {\n        onChooseObject(displayedObjectGroupsList[0].item.group.getName());\n      } else if (displayedTags.length > 0) {\n        this._selectTag(displayedTags[0].item);\n      } else if (displayedInstructionsList.length > 0) {\n        onChooseInstruction(\n          displayedInstructionsList[0].item.type,\n          displayedInstructionsList[0].item\n        );\n      }\n    };\n\n    return (\n      <I18n key=\"tags\">\n        {({ i18n }) => (\n          <ThemeConsumer>\n            {muiTheme => (\n              <div\n                style={{\n                  backgroundColor: muiTheme.list.itemsBackgroundColor,\n                  minHeight: 0,\n                  ...style,\n                }}\n              >\n                <SearchBar\n                  value={searchText}\n                  onChange={searchText => {\n                    const oldSearchText = this.state.searchText;\n                    if (!!searchText) this._search(searchText);\n                    this.setState({\n                      searchText,\n                    });\n\n                    // Notify if needed that we started or cleared a search\n                    if (\n                      (!oldSearchText && searchText) ||\n                      (oldSearchText && !searchText)\n                    ) {\n                      if (onSearchStartOrReset) onSearchStartOrReset();\n                    }\n                  }}\n                  onRequestSearch={onSubmitSearch}\n                  buildMenuTemplate={() =>\n                    this._buildObjectTagsMenuTemplate(i18n)\n                  }\n                  style={styles.searchBar}\n                  ref={this._searchBar}\n                />\n                {!isSearching && (\n                  <Tabs value={currentTab} onChange={onChangeTab}>\n                    <Tab\n                      label={<Trans>Objects</Trans>}\n                      value={('objects': TabName)}\n                    />\n                    <Tab\n                      label={\n                        isCondition ? (\n                          <Trans>Other conditions</Trans>\n                        ) : (\n                          <Trans>Other actions</Trans>\n                        )\n                      }\n                      value={('free-instructions': TabName)}\n                    />\n                  </Tabs>\n                )}\n                <ScrollView ref={this._scrollView}>\n                  {!isSearching && currentTab === 'objects' && (\n                    <TagChips\n                      tags={selectedObjectTags}\n                      onChange={selectedObjectTags =>\n                        this.setState({\n                          selectedObjectTags,\n                        })\n                      }\n                    />\n                  )}\n                  {hasResults && (\n                    <List>\n                      {(isSearching || currentTab === 'objects') && (\n                        <React.Fragment>\n                          {displayedObjectsList.map(\n                            ({ item: objectWithContext, matches }, index) =>\n                              renderObjectListItem({\n                                project: project,\n                                objectWithContext: objectWithContext,\n                                iconSize: iconSize,\n                                onClick: () =>\n                                  onChooseObject(\n                                    objectWithContext.object.getName()\n                                  ),\n                                matchesCoordinates: matches.length\n                                  ? matches[0].indices // Only field for objects is their name\n                                  : [],\n                                selectedValue: chosenObjectName\n                                  ? getObjectOrObjectGroupListItemValue(\n                                      chosenObjectName\n                                    )\n                                  : undefined,\n                                id: 'object-item-' + index,\n                              })\n                          )}\n\n                          {displayedObjectGroupsList.length > 0 && (\n                            <Subheader>\n                              <Trans>Object groups</Trans>\n                            </Subheader>\n                          )}\n                          {displayedObjectGroupsList.map(\n                            ({ item: groupWithContext, matches }) =>\n                              renderGroupObjectsListItem({\n                                groupWithContext: groupWithContext,\n                                iconSize: iconSize,\n                                onClick: () =>\n                                  onChooseObject(\n                                    groupWithContext.group.getName()\n                                  ),\n                                matchesCoordinates: matches.length\n                                  ? matches[0].indices // Only field for groups is their name\n                                  : [],\n                                selectedValue: chosenObjectName\n                                  ? getObjectOrObjectGroupListItemValue(\n                                      chosenObjectName\n                                    )\n                                  : undefined,\n                              })\n                          )}\n                        </React.Fragment>\n                      )}\n                      {isSearching &&\n                        currentTab === 'objects' &&\n                        displayedTags.length > 0 && (\n                          <Subheader>\n                            <Trans>Object tags</Trans>\n                          </Subheader>\n                        )}\n                      {currentTab === 'objects' &&\n                        displayedTags.map(({ item: tag, matches }) => (\n                          <ListItem\n                            key={tag}\n                            primaryText={<Chip label={tag} />}\n                            onClick={() => {\n                              this._selectTag(tag);\n                            }}\n                            disableAutoTranslate\n                          />\n                        ))}\n                      {isSearching && displayedInstructionsList.length > 0 && (\n                        <Subheader>\n                          {isCondition ? (\n                            <Trans>Conditions</Trans>\n                          ) : (\n                            <Trans>Actions</Trans>\n                          )}\n                        </Subheader>\n                      )}\n                      {isSearching &&\n                        displayedInstructionsList.map(\n                          ({ item: instructionMetadata, matches }) =>\n                            renderInstructionOrExpressionListItem({\n                              instructionOrExpressionMetadata: instructionMetadata,\n                              iconSize: iconSize,\n                              onClick: () =>\n                                onChooseInstruction(\n                                  instructionMetadata.type,\n                                  instructionMetadata\n                                ),\n                              selectedValue: chosenInstructionType\n                                ? getInstructionListItemValue(\n                                    chosenInstructionType\n                                  )\n                                : undefined,\n                              matches,\n                            })\n                        )}\n                      {!isSearching && currentTab === 'free-instructions' && (\n                        <>\n                          {renderInstructionOrExpressionTree({\n                            instructionTreeNode: this.freeInstructionsInfoTree,\n                            onChoose: onChooseInstruction,\n                            iconSize,\n                            useSubheaders: true,\n                            selectedValue: chosenInstructionType\n                              ? getInstructionListItemValue(\n                                  chosenInstructionType\n                                )\n                              : undefined,\n                            initiallyOpenedPath: this\n                              .initialInstructionTypePath,\n                            selectedItemRef: this._selectedItem,\n                            getGroupIconSrc,\n                          })}\n                          {onClickMore && (\n                            <ResponsiveLineStackLayout justifyContent=\"center\">\n                              <RaisedButton\n                                primary\n                                icon={<Add />}\n                                onClick={onClickMore}\n                                label={\n                                  isCondition ? (\n                                    <Trans>\n                                      Search for new conditions in extensions\n                                    </Trans>\n                                  ) : (\n                                    <Trans>\n                                      Search for new actions in extensions\n                                    </Trans>\n                                  )\n                                }\n                              />\n                            </ResponsiveLineStackLayout>\n                          )}\n                        </>\n                      )}\n                      {remainingResultsCount > 0 && (\n                        <ListItem\n                          primaryText={\n                            <Trans>\n                              And {remainingResultsCount} more results.\n                            </Trans>\n                          }\n                          disabled\n                          secondaryText={\n                            <Trans>\n                              Refine your search with more specific keyword to\n                              see them.\n                            </Trans>\n                          }\n                        />\n                      )}\n                    </List>\n                  )}\n                  {!isSearching &&\n                    currentTab === 'objects' &&\n                    !allObjectsList.length && (\n                      <EmptyMessage>\n                        {isOutsideLayout ? (\n                          <Trans>\n                            There are no objects. Objects will appear if you add\n                            some as parameters.\n                          </Trans>\n                        ) : (\n                          <Trans>\n                            There is no object in your game or in this scene.\n                            Start by adding an new object in the scene editor,\n                            using the objects list.\n                          </Trans>\n                        )}\n                      </EmptyMessage>\n                    )}\n                  {!hasResults && (\n                    <EmptyMessage>\n                      <Trans>\n                        Nothing corresponding to your search. Choose an object\n                        first or browse the list of actions/conditions.\n                      </Trans>\n                    </EmptyMessage>\n                  )}\n                </ScrollView>\n              </div>\n            )}\n          </ThemeConsumer>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { Line } from '../Grid';\n\ntype Props<TColumnName> = {|\n  columnsRenderer: { [TColumnName]: () => React.Node },\n  getColumns: () => Array<TColumnName>,\n|};\n\nexport const SelectColumns = (props: Props<string>) => {\n  const columns = props.getColumns();\n  return (\n    <Line noMargin expand>\n      {columns.map(columnName =>\n        props.columnsRenderer[columnName]\n          ? props.columnsRenderer[columnName]()\n          : null\n      )}\n    </Line>\n  );\n};\n","// @flow\nimport { t, Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport HelpButton from '../UI/HelpButton';\nimport FlatButton from '../UI/FlatButton';\nimport Subheader from '../UI/Subheader';\nimport ListIcon from '../UI/ListIcon';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport { List, ListItem } from '../UI/List';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Create from '@material-ui/icons/Create';\nimport { Column, Line } from '../UI/Grid';\nimport { showMessageBox } from '../UI/Messages/MessageBox';\nimport { getDeprecatedBehaviorsInformation } from '../Hints';\nimport { getHelpLink } from '../Utils/HelpLink';\nimport {\n  type EnumeratedBehaviorMetadata,\n  enumerateBehaviorsMetadata,\n  filterEnumeratedBehaviorMetadata,\n} from './EnumerateBehaviorsMetadata';\nimport SearchBar, {\n  useShouldAutofocusSearchbar,\n  type SearchBarInterface,\n} from '../UI/SearchBar';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport { ExtensionStore } from '../AssetStore/ExtensionStore';\nimport Window from '../Utils/Window';\nimport EventsFunctionsExtensionsContext from '../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport { installExtension } from '../AssetStore/ExtensionStore/InstallExtension';\nimport DismissableInfoBar from '../UI/Messages/DismissableInfoBar';\nimport ScrollView, { type ScrollViewInterface } from '../UI/ScrollView';\nimport AuthenticatedUserContext from '../Profile/AuthenticatedUserContext';\nimport {\n  addCreateBadgePreHookIfNotClaimed,\n  TRIVIAL_FIRST_BEHAVIOR,\n  TRIVIAL_FIRST_EXTENSION,\n} from '../Utils/GDevelopServices/Badge';\nimport { type ExtensionShortHeader } from '../Utils/GDevelopServices/Extension';\n\nconst styles = {\n  disabledItem: { opacity: 0.6 },\n};\n\nconst BehaviorListItem = ({\n  i18n,\n  behaviorMetadata,\n  alreadyInstalled,\n  onClick,\n  disabled,\n}: {|\n  i18n: I18nType,\n  behaviorMetadata: EnumeratedBehaviorMetadata,\n  alreadyInstalled: boolean,\n  onClick: () => void,\n  disabled: boolean,\n|}) => (\n  <ListItem\n    leftIcon={\n      <ListIcon\n        src={behaviorMetadata.iconFilename}\n        iconSize={40}\n        isGDevelopIcon\n      />\n    }\n    key={behaviorMetadata.type}\n    primaryText={`${behaviorMetadata.fullName} ${\n      alreadyInstalled ? i18n._(t`(already added to this object)`) : ''\n    }`}\n    secondaryText={behaviorMetadata.description}\n    secondaryTextLines={2}\n    onClick={onClick}\n    style={disabled ? styles.disabledItem : undefined}\n    disabled={disabled}\n    id={'behavior-item-' + behaviorMetadata.type.replace(/:/g, '-')}\n  />\n);\n\ntype Props = {|\n  project: gdProject,\n  objectType: string,\n  objectBehaviorsTypes: Array<string>,\n  open: boolean,\n  onClose: () => void,\n  onChoose: (type: string, defaultName: string) => void,\n|};\n\nexport default function NewBehaviorDialog({\n  project,\n  open,\n  onClose,\n  onChoose,\n  objectType,\n  objectBehaviorsTypes,\n}: Props) {\n  const [showDeprecated, setShowDeprecated] = React.useState(false);\n  const [searchText, setSearchText] = React.useState('');\n  const [currentTab, setCurrentTab] = React.useState<'installed' | 'search'>(\n    'installed'\n  );\n  const searchBar = React.useRef<?SearchBarInterface>(null);\n  const scrollView = React.useRef((null: ?ScrollViewInterface));\n\n  const [isInstalling, setIsInstalling] = React.useState(false);\n  const [extensionInstallTime, setExtensionInstallTime] = React.useState(0);\n  const eventsFunctionsExtensionsState = React.useContext(\n    EventsFunctionsExtensionsContext\n  );\n  const authenticatedUser = React.useContext(AuthenticatedUserContext);\n\n  const installDisplayedExtension = addCreateBadgePreHookIfNotClaimed(\n    authenticatedUser,\n    TRIVIAL_FIRST_EXTENSION,\n    installExtension\n  );\n\n  const platform = project.getCurrentPlatform();\n  const behaviorMetadata: Array<EnumeratedBehaviorMetadata> = React.useMemo(\n    () => {\n      return project && platform\n        ? enumerateBehaviorsMetadata(platform, project)\n        : [];\n    },\n    [project, platform, extensionInstallTime] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  const shouldAutofocusSearchbar = useShouldAutofocusSearchbar();\n  React.useEffect(\n    () => {\n      setTimeout(() => {\n        if (shouldAutofocusSearchbar && searchBar.current)\n          searchBar.current.focus();\n      }, 20 /* Be sure that the search bar is shown */);\n    },\n    [shouldAutofocusSearchbar]\n  );\n\n  if (!open || !project) return null;\n\n  const deprecatedBehaviorsInformation = getDeprecatedBehaviorsInformation();\n\n  const filteredBehaviorMetadata = filterEnumeratedBehaviorMetadata(\n    behaviorMetadata,\n    searchText\n  );\n  const behaviors = filteredBehaviorMetadata.filter(\n    ({ type }) => !deprecatedBehaviorsInformation[type]\n  );\n  const deprecatedBehaviors = filteredBehaviorMetadata.filter(\n    ({ type }) => !!deprecatedBehaviorsInformation[type]\n  );\n\n  const _chooseBehavior = (\n    i18n: I18nType,\n    { type, defaultName }: EnumeratedBehaviorMetadata\n  ) => {\n    if (deprecatedBehaviorsInformation[type]) {\n      showMessageBox(i18n._(deprecatedBehaviorsInformation[type].warning));\n    }\n\n    return onChoose(type, defaultName);\n  };\n  const chooseBehavior = addCreateBadgePreHookIfNotClaimed(\n    authenticatedUser,\n    TRIVIAL_FIRST_BEHAVIOR,\n    _chooseBehavior\n  );\n\n  const isAmongObjectBehaviors = (\n    behaviorMetadata: EnumeratedBehaviorMetadata\n  ) => objectBehaviorsTypes.includes(behaviorMetadata.type);\n\n  const canBehaviorBeUsed = (behaviorMetadata: EnumeratedBehaviorMetadata) => {\n    // An empty object type means the base object, i.e: any object.\n    return (\n      (behaviorMetadata.objectType === '' ||\n        behaviorMetadata.objectType === objectType) &&\n      !isAmongObjectBehaviors(behaviorMetadata)\n    );\n  };\n\n  const hasSearchNoResult =\n    !!searchText && !behaviors.length && !deprecatedBehaviors.length;\n\n  const onInstallExtension = async (\n    i18n: I18nType,\n    extensionShortHeader: ExtensionShortHeader\n  ) => {\n    setIsInstalling(true);\n    try {\n      const wasExtensionInstalled = await installDisplayedExtension(\n        i18n,\n        project,\n        eventsFunctionsExtensionsState,\n        extensionShortHeader\n      );\n\n      if (wasExtensionInstalled) {\n        // Setting the extension install time will force a reload of\n        // the behavior metadata, and so the list of behaviors.\n        setExtensionInstallTime(Date.now());\n        setCurrentTab('installed');\n        if (scrollView.current) scrollView.current.scrollToBottom();\n        return true;\n      }\n      return false;\n    } finally {\n      setIsInstalling(false);\n    }\n  };\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Dialog\n          title={<Trans>Add a new behavior to the object</Trans>}\n          actions={[\n            <FlatButton\n              key=\"close\"\n              label={<Trans>Close</Trans>}\n              primary={false}\n              onClick={onClose}\n            />,\n          ]}\n          secondaryActions={[\n            <HelpButton helpPagePath=\"/behaviors\" key=\"help\" />,\n          ]}\n          open\n          cannotBeDismissed={false}\n          flexBody\n          noMargin\n          fullHeight\n          id=\"new-behavior-dialog\"\n        >\n          <Column expand noMargin>\n            <Tabs value={currentTab} onChange={setCurrentTab}>\n              <Tab\n                label={<Trans>Installed Behaviors</Trans>}\n                value=\"installed\"\n              />\n              <Tab label={<Trans>Search New Behaviors</Trans>} value=\"search\" />\n            </Tabs>\n            {currentTab === 'installed' && (\n              <React.Fragment>\n                <SearchBar\n                  value={searchText}\n                  onRequestSearch={() => {\n                    if (behaviors.length) {\n                      chooseBehavior(i18n, behaviors[0]);\n                    } else if (showDeprecated && deprecatedBehaviors.length) {\n                      chooseBehavior(i18n, deprecatedBehaviors[0]);\n                    }\n                  }}\n                  onChange={setSearchText}\n                  ref={searchBar}\n                />\n                {hasSearchNoResult && (\n                  <EmptyMessage>\n                    <Trans>\n                      No behavior found for your search. Try another search, or\n                      search for new behaviors to install.\n                    </Trans>\n                  </EmptyMessage>\n                )}\n                <ScrollView ref={scrollView}>\n                  <List>\n                    {behaviors.map((behaviorMetadata, index) => (\n                      <BehaviorListItem\n                        i18n={i18n}\n                        key={index}\n                        behaviorMetadata={behaviorMetadata}\n                        alreadyInstalled={isAmongObjectBehaviors(\n                          behaviorMetadata\n                        )}\n                        onClick={() => chooseBehavior(i18n, behaviorMetadata)}\n                        disabled={!canBehaviorBeUsed(behaviorMetadata)}\n                      />\n                    ))}\n                    {showDeprecated && !!deprecatedBehaviors.length && (\n                      <Subheader>\n                        Deprecated (old, prefer not to use anymore)\n                      </Subheader>\n                    )}\n                    {showDeprecated &&\n                      deprecatedBehaviors.map((behaviorMetadata, index) => (\n                        <BehaviorListItem\n                          i18n={i18n}\n                          key={index}\n                          behaviorMetadata={behaviorMetadata}\n                          alreadyInstalled={isAmongObjectBehaviors(\n                            behaviorMetadata\n                          )}\n                          onClick={() => chooseBehavior(i18n, behaviorMetadata)}\n                          disabled={!canBehaviorBeUsed(behaviorMetadata)}\n                        />\n                      ))}\n                  </List>\n                  <Line justifyContent=\"center\" alignItems=\"center\">\n                    {!showDeprecated ? (\n                      <FlatButton\n                        key=\"toggle-experimental\"\n                        icon={<Visibility />}\n                        primary={false}\n                        onClick={() => {\n                          setShowDeprecated(true);\n                        }}\n                        label={<Trans>Show deprecated (old) behaviors</Trans>}\n                      />\n                    ) : (\n                      <FlatButton\n                        key=\"toggle-experimental\"\n                        icon={<VisibilityOff />}\n                        primary={false}\n                        onClick={() => {\n                          setShowDeprecated(false);\n                        }}\n                        label={<Trans>Show deprecated (old) behaviors</Trans>}\n                      />\n                    )}\n                  </Line>\n                  <Line justifyContent=\"center\" alignItems=\"center\">\n                    <FlatButton\n                      icon={<Create />}\n                      primary={false}\n                      onClick={() =>\n                        Window.openExternalURL(\n                          getHelpLink('/behaviors/events-based-behaviors')\n                        )\n                      }\n                      label={<Trans>Create your own behavior</Trans>}\n                    />\n                  </Line>\n                </ScrollView>\n              </React.Fragment>\n            )}\n            {currentTab === 'search' && (\n              <ExtensionStore\n                project={project}\n                isInstalling={isInstalling}\n                onInstall={async extensionShortHeader =>\n                  onInstallExtension(i18n, extensionShortHeader)\n                }\n                showOnlyWithBehaviors\n              />\n            )}\n          </Column>\n          <DismissableInfoBar\n            identifier=\"extension-installed-explanation\"\n            message={\n              <Trans>\n                The behavior was added to the project. You can now add it to\n                your object.\n              </Trans>\n            }\n            show={extensionInstallTime !== 0}\n          />\n        </Dialog>\n      )}\n    </I18n>\n  );\n}\n","// @flow\nimport { mapFor } from '../Utils/MapFor';\nimport flatten from 'lodash/flatten';\n\nexport type EnumeratedBehaviorMetadata = {|\n  extension: gdPlatformExtension,\n  behaviorMetadata: gdBehaviorMetadata,\n  type: string,\n  objectType: string,\n  defaultName: string,\n  fullName: string,\n  description: string,\n  iconFilename: string,\n|};\n\nexport const enumerateBehaviorsMetadata = (\n  platform: gdPlatform,\n  project: gdProject\n): Array<EnumeratedBehaviorMetadata> => {\n  const extensionsList = platform.getAllPlatformExtensions();\n\n  return flatten(\n    mapFor(0, extensionsList.size(), i => {\n      const extension = extensionsList.at(i);\n\n      return extension\n        .getBehaviorsTypes()\n        .toJSArray()\n        .map(behaviorType => ({\n          behaviorType,\n          behaviorMetadata: extension.getBehaviorMetadata(behaviorType),\n        }))\n        .map(({ behaviorType, behaviorMetadata }) => ({\n          extension,\n          behaviorMetadata,\n          type: behaviorType,\n          defaultName: behaviorMetadata.getDefaultName(),\n          fullName: behaviorMetadata.getFullName(),\n          description: behaviorMetadata.getDescription(),\n          iconFilename: behaviorMetadata.getIconFilename(),\n          objectType: behaviorMetadata.getObjectType(),\n        }));\n    })\n  );\n};\n\nexport const filterEnumeratedBehaviorMetadata = (\n  list: Array<EnumeratedBehaviorMetadata>,\n  searchText: string\n): Array<EnumeratedBehaviorMetadata> => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list.filter(enumerateBehaviorsMetadata => {\n    return (\n      enumerateBehaviorsMetadata.fullName\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1 ||\n      enumerateBehaviorsMetadata.description\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1\n    );\n  });\n};\n","// @flow\nimport newNameGenerator from './NewNameGenerator';\nimport Window from './Window';\n\nconst gd: libGDevelop = global.gd;\n\nexport const hasBehaviorWithType = (object: gdObject, type: string) =>\n  object\n    .getAllBehaviorNames()\n    .toJSArray()\n    .filter(\n      behaviorName => object.getBehavior(behaviorName).getTypeName() === type\n    ).length;\n\nexport const addBehaviorToObject = (\n  project: gdProject,\n  object: gdObject,\n  type: string,\n  defaultName: string\n): boolean => {\n  if (hasBehaviorWithType(object, type)) {\n    const answer = Window.showConfirmDialog(\n      \"There is already a behavior of this type attached to the object. It's possible to add this behavior again, but it's unusual and may not always be supported properly. Are you sure you want to add this behavior again?\"\n    );\n\n    if (!answer) return false;\n  }\n\n  const name = newNameGenerator(defaultName, name =>\n    object.hasBehaviorNamed(name)\n  );\n  gd.WholeProjectRefactorer.addBehaviorAndRequiredBehaviors(\n    project,\n    object,\n    type,\n    name\n  );\n  return true;\n};\n\nexport const listObjectBehaviorsTypes = (object: gdObject): Array<string> =>\n  object\n    .getAllBehaviorNames()\n    .toJSArray()\n    .map(behaviorName => object.getBehavior(behaviorName).getTypeName());\n","// @flow\nconst LEFT_KEY = 37;\nconst UP_KEY = 38;\nconst RIGHT_KEY = 39;\nconst DOWN_KEY = 40;\nconst BACKSPACE_KEY = 8;\nconst DELETE_KEY = 46;\nconst EQUAL_KEY = 187;\nconst MINUS_KEY = 189;\nconst NUMPAD_ADD = 107;\nconst NUMPAD_SUBTRACT = 109;\nconst C_KEY = 67;\nconst F_KEY = 70;\nconst V_KEY = 86;\nconst X_KEY = 88;\nconst Y_KEY = 89;\nconst Z_KEY = 90;\nconst ESC_KEY = 27;\n\ntype ShortcutCallbacks = {|\n  onDelete?: () => void,\n  onMove?: (number, number) => void,\n  onCopy?: () => void,\n  onCut?: () => void,\n  onPaste?: () => void,\n  onUndo?: () => void,\n  onRedo?: () => void,\n  onSearch?: () => void,\n  onZoomOut?: KeyboardEvent => void,\n  onZoomIn?: KeyboardEvent => void,\n  onEscape?: () => void,\n|};\n\ntype ConstructorArgs = {|\n  isActive?: () => boolean,\n  shortcutCallbacks: ShortcutCallbacks,\n|};\n\n/**\n * Listen to keyboard shorcuts and call callbacks according to them.\n * Also store the state of the modifier keys (shift, ctrl, alt, meta) to know\n * if some special operations (multi selection, selection duplication) must\n * be done.\n *\n * `onKeyDown`, `onKeyUp` and other methods handling events (`onDragOver`...)\n * must be binded to the `div` element containing your component. We're not\n * using `document` to avoid issues with shortcuts being detected while a\n * component is not focused.\n */\nexport default class KeyboardShortcuts {\n  _shortcutCallbacks: ShortcutCallbacks;\n  _isActive: ?() => boolean;\n  _shiftPressed = false;\n  _ctrlPressed = false;\n  _altPressed = false;\n  _metaPressed = false;\n\n  constructor({ isActive, shortcutCallbacks }: ConstructorArgs) {\n    this._shortcutCallbacks = shortcutCallbacks;\n    this._isActive = isActive;\n  }\n\n  shouldCloneInstances() {\n    return this._isControlOrCmdPressed();\n  }\n\n  shouldMultiSelect() {\n    return this._shiftPressed;\n  }\n\n  _updateModifiersFromEvent = (evt: KeyboardEvent | DragEvent) => {\n    this._metaPressed = evt.metaKey;\n    this._altPressed = evt.altKey;\n    this._ctrlPressed = evt.ctrlKey;\n    this._shiftPressed = evt.shiftKey;\n  };\n\n  _isControlOrCmdPressed = () => {\n    // On macOS, meta key (Apple/Command key) acts as Control key on Windows/Linux.\n    return this._metaPressed || this._ctrlPressed;\n  };\n\n  onDragOver = (evt: DragEvent) => {\n    this._updateModifiersFromEvent(evt);\n  };\n\n  onKeyUp = (evt: KeyboardEvent) => {\n    this._updateModifiersFromEvent(evt);\n  };\n\n  onKeyDown = (evt: KeyboardEvent) => {\n    this._updateModifiersFromEvent(evt);\n\n    if (this._isActive && !this._isActive()) return;\n\n    const textEditorSelectors = 'textarea, input, [contenteditable=\"true\"]';\n    // $FlowFixMe\n    if (evt.target && evt.target.closest(textEditorSelectors)) {\n      return; // Something else is currently being edited.\n    }\n\n    const {\n      onDelete,\n      onMove,\n      onCopy,\n      onCut,\n      onPaste,\n      onUndo,\n      onRedo,\n      onSearch,\n      onZoomOut,\n      onZoomIn,\n      onEscape,\n    } = this._shortcutCallbacks;\n\n    if (onMove) {\n      if (evt.which === UP_KEY) {\n        evt.preventDefault();\n        this._shiftPressed ? onMove(0, -5) : onMove(0, -1);\n      } else if (evt.which === DOWN_KEY) {\n        evt.preventDefault();\n        this._shiftPressed ? onMove(0, 5) : onMove(0, 1);\n      } else if (evt.which === LEFT_KEY) {\n        evt.preventDefault();\n        this._shiftPressed ? onMove(-5, 0) : onMove(-1, 0);\n      } else if (evt.which === RIGHT_KEY) {\n        evt.preventDefault();\n        this._shiftPressed ? onMove(5, 0) : onMove(1, 0);\n      }\n    }\n    if (onDelete && (evt.which === BACKSPACE_KEY || evt.which === DELETE_KEY)) {\n      evt.preventDefault();\n      onDelete();\n    }\n    if (onCopy && this._isControlOrCmdPressed() && evt.which === C_KEY) {\n      evt.preventDefault();\n      onCopy();\n    }\n    if (onCut && this._isControlOrCmdPressed() && evt.which === X_KEY) {\n      evt.preventDefault();\n      onCut();\n    }\n    if (onPaste && this._isControlOrCmdPressed() && evt.which === V_KEY) {\n      evt.preventDefault();\n      onPaste();\n    }\n    if (onUndo && this._isControlOrCmdPressed() && evt.which === Z_KEY) {\n      evt.preventDefault();\n      onUndo();\n    }\n    if (\n      onRedo &&\n      this._isControlOrCmdPressed() &&\n      evt.shiftKey &&\n      evt.which === Z_KEY\n    ) {\n      evt.preventDefault();\n      onRedo();\n    }\n    if (onRedo && this._isControlOrCmdPressed() && evt.which === Y_KEY) {\n      evt.preventDefault();\n      onRedo();\n    }\n    if (onSearch && this._isControlOrCmdPressed() && evt.which === F_KEY) {\n      evt.preventDefault();\n      onSearch();\n    }\n    if (onEscape && evt.which === ESC_KEY) {\n      evt.preventDefault();\n      onEscape();\n    }\n\n    if (onZoomOut && this._isControlOrCmdPressed() && evt.which === MINUS_KEY) {\n      evt.preventDefault();\n      onZoomOut(evt);\n    }\n    if (onZoomOut && evt.which === NUMPAD_SUBTRACT) {\n      evt.preventDefault();\n      onZoomOut(evt);\n    }\n\n    if (onZoomIn && this._isControlOrCmdPressed() && evt.which === EQUAL_KEY) {\n      evt.preventDefault();\n      onZoomIn(evt);\n    }\n    if (onZoomIn && evt.which === NUMPAD_ADD) {\n      evt.preventDefault();\n      onZoomIn(evt);\n    }\n  };\n}\n","// @flow\nimport { serializeToJSObject, unserializeFromJSObject } from './Serializer';\n\n// Tools function to keep track of the history of changes made\n// on a serializable object from libGD.js\n\nexport type HistoryState = {|\n  undoHistory: Array<Object>,\n  current: Object,\n  redoHistory: Array<Object>,\n  maxSize: number,\n|};\n\n/**\n * Return the initial state of the history\n * @param {*} serializableObject\n */\nexport const getHistoryInitialState = (\n  serializableObject: gdSerializable,\n  { historyMaxSize }: { historyMaxSize: number }\n): HistoryState => {\n  return {\n    undoHistory: [],\n    current: serializeToJSObject(serializableObject),\n    redoHistory: [],\n    maxSize: historyMaxSize,\n  };\n};\n\n/**\n * Return true if redo can be applied for the given history\n * @param {*} history\n */\nexport const canRedo = (history: HistoryState): boolean => {\n  return !!history.redoHistory.length;\n};\n\n/**\n * Return true if undo can be applied for the given history\n * @param {*} history\n */\nexport const canUndo = (history: HistoryState): boolean => {\n  return !!history.undoHistory.length;\n};\n\n/**\n * Save a new state of the given serializableObject to the history\n * @param {*} history\n * @param {*} serializableObject\n */\nexport const saveToHistory = (\n  history: HistoryState,\n  serializableObject: gdSerializable\n): HistoryState => {\n  const newUndoHistory = [...history.undoHistory, history.current];\n  if (newUndoHistory.length > history.maxSize) {\n    newUndoHistory.splice(0, newUndoHistory.length - history.maxSize);\n  }\n\n  return {\n    undoHistory: newUndoHistory,\n    current: serializeToJSObject(serializableObject),\n    redoHistory: [],\n    maxSize: history.maxSize,\n  };\n};\n\n/**\n * Update the serializableObject to undo the last changes.\n * /!\\ This mutates the serializableObject and there could be objects owned by it\n * deleted or becoming invalid. Be sure to drop/refresh any reference to them.\n *\n * @param {*} history\n * @param {*} serializableObject\n */\nexport const undo = (\n  history: HistoryState,\n  serializableObject: gdSerializable,\n  project: ?gdProject = undefined\n): HistoryState => {\n  if (!history.undoHistory.length) {\n    return history;\n  }\n\n  const newCurrent = history.undoHistory[history.undoHistory.length - 1];\n  unserializeFromJSObject(\n    serializableObject,\n    newCurrent,\n    'unserializeFrom',\n    project\n  );\n\n  return {\n    undoHistory: history.undoHistory.slice(0, -1),\n    current: newCurrent,\n    redoHistory: [...history.redoHistory, history.current],\n    maxSize: history.maxSize,\n  };\n};\n\n/**\n * Update the serializableObject to undo the last changes.\n * /!\\ This mutates the serializableObject and there could be objects owned by it\n * deleted or becoming invalid. Be sure to drop/refresh any reference to them.\n *\n * @param {*} history\n * @param {*} serializableObject\n */\nexport const redo = (\n  history: HistoryState,\n  serializableObject: gdSerializable,\n  project: ?gdProject = undefined\n): HistoryState => {\n  if (!history.redoHistory.length) {\n    return history;\n  }\n\n  const newCurrent = history.redoHistory[history.redoHistory.length - 1];\n  unserializeFromJSObject(\n    serializableObject,\n    newCurrent,\n    'unserializeFrom',\n    project\n  );\n\n  return {\n    undoHistory: [...history.undoHistory, history.current],\n    current: newCurrent,\n    redoHistory: history.redoHistory.slice(0, -1),\n    maxSize: history.maxSize,\n  };\n};\n","// @flow\nimport { unserializeFromJSObject } from '../../Utils/Serializer';\nimport { mapVector } from '../../Utils/MapFor';\nimport { getFreeEventsFunctionType } from '../../EventsFunctionsExtensionsLoader';\nimport getObjectGroupByName from '../../Utils/GetObjectGroupByName';\nconst gd: libGDevelop = global.gd;\n\n/**\n * Set up an events function with the given serialized events,\n * so that the function contains these events, expecting the objects\n * as parameters.\n */\nexport const setupFunctionFromEvents = ({\n  globalObjectsContainer,\n  objectsContainer,\n  serializedEvents,\n  project,\n  eventsFunction,\n}: {\n  project: gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  serializedEvents: Object,\n  eventsFunction: gdEventsFunction,\n}) => {\n  // Set up the function\n  eventsFunction.setName('MyFunction');\n  eventsFunction.setFunctionType(gd.EventsFunction.Action);\n  unserializeFromJSObject(\n    eventsFunction.getEvents(),\n    serializedEvents,\n    'unserializeFrom',\n    project\n  );\n\n  // Analyze events...\n  const eventsContextAnalyzer = new gd.EventsContextAnalyzer(\n    gd.JsPlatform.get(),\n    globalObjectsContainer,\n    objectsContainer\n  );\n  eventsContextAnalyzer.launch(eventsFunction.getEvents());\n  const eventsContext = eventsContextAnalyzer.getEventsContext();\n\n  // ...to extract objects and groups\n  const objectOrGroupNames: Array<string> = eventsContext\n    .getReferencedObjectOrGroupNames()\n    .toNewVectorString()\n    .toJSArray();\n  const objectNames: Array<string> = eventsContext\n    .getObjectNames()\n    .toNewVectorString()\n    .toJSArray();\n  const groups: Array<gdObjectGroup> = objectOrGroupNames\n    // Filter to only keep groups\n    .filter(\n      (objectOrGroupName: string) =>\n        objectNames.indexOf(objectOrGroupName) === -1\n    )\n    .map(groupName =>\n      getObjectGroupByName(globalObjectsContainer, objectsContainer, groupName)\n    )\n    .filter(Boolean);\n\n  // Compute what the parameters should be:\n  // 1) The groups, but only the ones that have no object directly referenced.\n  const parameterGroups: Array<gdObjectGroup> = groups.filter(group => {\n    return !objectOrGroupNames.some(referencedObjectOrGroupName =>\n      group.find(referencedObjectOrGroupName)\n    );\n  });\n  const parameterGroupNames: Array<string> = parameterGroups.map(group =>\n    group.getName()\n  );\n\n  // 2) The objects, but only the ones that are already in the groups in parameters\n  const parameterObjectNames: Array<string> = objectNames.filter(objectName => {\n    return !parameterGroups.some(group => group.find(objectName));\n  });\n\n  // Create parameters for these objects (or these groups without any object directly referenced)\n  const parameters = eventsFunction.getParameters();\n  parameters.clear();\n  [...parameterGroupNames, ...parameterObjectNames].forEach(objectName => {\n    const newParameter = new gd.ParameterMetadata();\n    newParameter.setType('objectList');\n    newParameter.setName(objectName);\n    newParameter.setExtraInfo(\n      gd.getTypeOfObject(\n        globalObjectsContainer,\n        objectsContainer,\n        objectName,\n        true\n      )\n    );\n    parameters.push_back(newParameter);\n\n    const behaviorNames: Array<string> = eventsContext\n      .getBehaviorNamesOfObjectOrGroup(objectName)\n      .toNewVectorString()\n      .toJSArray();\n\n    behaviorNames.forEach(behaviorName => {\n      const newParameter = new gd.ParameterMetadata();\n      newParameter.setType('behavior');\n      newParameter.setName(behaviorName);\n      newParameter.setExtraInfo(\n        gd.getTypeOfBehavior(\n          globalObjectsContainer,\n          objectsContainer,\n          behaviorName,\n          false\n        )\n      );\n      parameters.push_back(newParameter);\n    });\n  });\n\n  // Import groups that are used in events, but are not in parameters,\n  // inside the events function groups.\n  groups\n    .filter(group => !parameterGroupNames.includes(group.getName()))\n    .forEach(group => {\n      if (group) {\n        eventsFunction.getObjectGroups().insert(group, 0);\n      }\n    });\n\n  eventsContextAnalyzer.delete();\n};\n\n/**\n * Create an instruction to call the given events function\n */\nexport const createNewInstructionForEventsFunction = (\n  extensionName: string,\n  eventsFunction: gdEventsFunction\n): gdInstruction => {\n  const action = new gd.Instruction(); //Add a simple action\n  const runtimeSceneParameterCount = 1; // By convention, first parameter is always the Runtime Scene.\n  const contextParameterCount = 1; // By convention, latest parameter is always the eventsFunctionContext of the calling function (if any).\n\n  action.setType(getFreeEventsFunctionType(extensionName, eventsFunction));\n  action.setParametersCount(\n    eventsFunction.getParameters().size() +\n      runtimeSceneParameterCount +\n      contextParameterCount\n  );\n\n  mapVector(eventsFunction.getParameters(), (parameterMetadata, index) => {\n    action.setParameter(\n      runtimeSceneParameterCount + index,\n      parameterMetadata.getName()\n    );\n  });\n\n  return action;\n};\n\n/**\n * Validate that a function name is valid.\n */\nexport const validateEventsFunctionName = (functionName: string) => {\n  return gd.Project.validateName(functionName);\n};\n\n/**\n * Validate that an events functions extension name is valid.\n */\nexport const validateExtensionName = (extensionName: string) => {\n  return gd.Project.validateName(extensionName);\n};\n\n/**\n * Validate that an events functions extension name is unique in a project.\n */\nexport const validateExtensionNameUniqueness = (\n  project: gdProject,\n  extensionName: string\n) => {\n  return !project.hasEventsFunctionsExtensionNamed(extensionName);\n};\n\n/**\n * Validate that an events function name is unique in a project extension.\n */\nexport const validateEventsFunctionNameUniqueness = (\n  project: gdProject,\n  extensionName: string,\n  eventsFunction: gdEventsFunction\n) => {\n  if (project.hasEventsFunctionsExtensionNamed(extensionName)) {\n    const eventsFunctionsExtension = project.getEventsFunctionsExtension(\n      extensionName\n    );\n\n    return !eventsFunctionsExtension.hasEventsFunctionNamed(\n      eventsFunction.getName()\n    );\n  }\n\n  return true;\n};\n\n/**\n * Return true if the events function can be added to the given extension\n * without any conflict/invalid name.\n */\nexport const canCreateEventsFunction = (\n  project: gdProject,\n  extensionName: string,\n  eventsFunction: gdEventsFunction\n) => {\n  return (\n    extensionName !== '' &&\n    validateExtensionName(extensionName) &&\n    eventsFunction.getName() !== '' &&\n    validateEventsFunctionName(eventsFunction.getName()) &&\n    validateEventsFunctionNameUniqueness(\n      project,\n      extensionName,\n      eventsFunction\n    ) &&\n    eventsFunction.getFullName() !== '' &&\n    eventsFunction.getSentence() !== ''\n  );\n};\n\n/**\n * Return true if the function is considered to have more parameters than usual.\n */\nexport const functionHasLotsOfParameters = (\n  eventsFunction: gdEventsFunction\n) => {\n  return eventsFunction.getParameters().size() > 7;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\nimport { mapVector } from '../../Utils/MapFor';\nimport RaisedButton from '../../UI/RaisedButton';\nimport IconButton from '../../UI/IconButton';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport ElementWithMenu from '../../UI/Menu/ElementWithMenu';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport HelpButton from '../../UI/HelpButton';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport MiniToolbar, { MiniToolbarText } from '../../UI/MiniToolbar';\nimport { showWarningBox } from '../../UI/Messages/MessageBox';\nimport ObjectTypeSelector from '../../ObjectTypeSelector';\nimport BehaviorTypeSelector from '../../BehaviorTypeSelector';\nimport {\n  isBehaviorLifecycleEventsFunction,\n  isExtensionLifecycleEventsFunction,\n} from '../../EventsFunctionsExtensionsLoader/MetadataDeclarationHelpers';\nimport { getParametersIndexOffset } from '../../EventsFunctionsExtensionsLoader';\nimport Add from '@material-ui/icons/Add';\nimport DismissableAlertMessage from '../../UI/DismissableAlertMessage';\nimport { ColumnStackLayout, ResponsiveLineStackLayout } from '../../UI/Layout';\nimport { getLastObjectParameterObjectType } from '../../EventsSheet/ParameterFields/ParameterMetadataTools';\nimport StringArrayEditor from '../../StringArrayEditor';\n\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  eventsFunction: gdEventsFunction,\n  eventsBasedBehavior: ?gdEventsBasedBehavior,\n  onParametersUpdated: () => void,\n  helpPagePath?: string,\n  freezeParameters?: boolean,\n  onMoveFreeEventsParameter?: (\n    eventsFunction: gdEventsFunction,\n    oldIndex: number,\n    newIndex: number,\n    done: () => void\n  ) => void,\n  onMoveBehaviorEventsParameter?: (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    eventsFunction: gdEventsFunction,\n    oldIndex: number,\n    newIndex: number,\n    done: (boolean) => void\n  ) => void,\n|};\n\ntype State = {|\n  longDescriptionShownIndexes: { [number]: boolean },\n|};\n\nconst styles = {\n  parametersContainer: {\n    flex: 1,\n  },\n};\n\nconst validateParameterName = (i18n: I18nType, newName: string) => {\n  if (!newName) {\n    showWarningBox(\n      i18n._(\n        t`The name of a parameter can not be empty. Enter a name for the parameter or you won't be able to use it.`\n      ),\n      { delayToNextTick: true }\n    );\n    return false;\n  }\n\n  if (!gd.Project.validateName(newName)) {\n    showWarningBox(\n      i18n._(\n        t`This name is invalid. Only use alphanumeric characters (0-9, a-z) and underscores. Digits are not allowed as the first character.`\n      ),\n      { delayToNextTick: true }\n    );\n    return false;\n  }\n\n  return true;\n};\n\nconst getExtraInfoArray = (parameter: gdParameterMetadata) => {\n  const extraInfoJson = parameter.getExtraInfo();\n  let array = [];\n  try {\n    if (extraInfoJson !== '') array = JSON.parse(extraInfoJson);\n    if (!Array.isArray(array)) array = [];\n  } catch (e) {\n    console.error('Cannot parse parameter extraInfo: ', e);\n  }\n\n  return array;\n};\n\nexport default class EventsFunctionParametersEditor extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    longDescriptionShownIndexes: {},\n  };\n\n  _addParameter = () => {\n    const { eventsFunction } = this.props;\n    const parameters = eventsFunction.getParameters();\n\n    const newParameter = new gd.ParameterMetadata();\n    newParameter.setType('objectList');\n    parameters.push_back(newParameter);\n    newParameter.delete();\n    this.forceUpdate();\n    this.props.onParametersUpdated();\n  };\n\n  _removeParameter = (index: number) => {\n    const { eventsFunction } = this.props;\n    const parameters = eventsFunction.getParameters();\n\n    gd.removeFromVectorParameterMetadata(parameters, index);\n    this.forceUpdate();\n    this.props.onParametersUpdated();\n  };\n\n  _addLongDescription = (index: number) => {\n    // Show the long description field\n    this.setState(state => ({\n      longDescriptionShownIndexes: {\n        ...state.longDescriptionShownIndexes,\n        [index]: true,\n      },\n    }));\n  };\n\n  _removeLongDescription = (index: number) => {\n    const { eventsFunction } = this.props;\n    const parameters = eventsFunction.getParameters();\n    const parameter = parameters.at(index);\n\n    // Reset the long description and hide the field\n    parameter.setLongDescription('');\n    this.setState(state => ({\n      longDescriptionShownIndexes: {\n        ...state.longDescriptionShownIndexes,\n        [index]: false,\n      },\n    }));\n  };\n\n  _moveParameters = (oldIndex: number, newIndex: number) => {\n    const { eventsFunction, eventsBasedBehavior } = this.props;\n    const parameters = eventsFunction.getParameters();\n\n    if (eventsBasedBehavior) {\n      if (this.props.onMoveBehaviorEventsParameter)\n        this.props.onMoveBehaviorEventsParameter(\n          eventsBasedBehavior,\n          eventsFunction,\n          oldIndex,\n          newIndex,\n          isDone => {\n            if (!isDone) return;\n            gd.swapInVectorParameterMetadata(parameters, oldIndex, newIndex);\n            this.forceUpdate();\n            this.props.onParametersUpdated();\n          }\n        );\n    } else {\n      if (this.props.onMoveFreeEventsParameter)\n        this.props.onMoveFreeEventsParameter(\n          eventsFunction,\n          oldIndex,\n          newIndex,\n          isDone => {\n            if (!isDone) return;\n            gd.swapInVectorParameterMetadata(parameters, oldIndex, newIndex);\n            this.forceUpdate();\n            this.props.onParametersUpdated();\n          }\n        );\n    }\n  };\n\n  _setStringSelectorExtraInfo = (parameter: gdParameterMetadata) => {\n    return (newExtraInfo: Array<string>) => {\n      parameter.setExtraInfo(JSON.stringify(newExtraInfo));\n      this.forceUpdate();\n    };\n  };\n\n  render() {\n    const {\n      project,\n      eventsFunction,\n      eventsBasedBehavior,\n      freezeParameters,\n      helpPagePath,\n    } = this.props;\n\n    const parameters = eventsFunction.getParameters();\n    const isABehaviorLifecycleEventsFunction =\n      !!eventsBasedBehavior &&\n      isBehaviorLifecycleEventsFunction(eventsFunction.getName());\n    if (isABehaviorLifecycleEventsFunction) {\n      return (\n        <EmptyMessage>\n          <Trans>\n            This is a \"lifecycle method\". It will be called automatically by the\n            game engine and has two parameters: \"Object\" (the object the\n            behavior is acting on) and \"Behavior\" (the behavior itself).\n          </Trans>\n        </EmptyMessage>\n      );\n    }\n    const isAnExtensionLifecycleEventsFunction =\n      !eventsBasedBehavior &&\n      isExtensionLifecycleEventsFunction(eventsFunction.getName());\n    if (isAnExtensionLifecycleEventsFunction) {\n      return (\n        <Column>\n          <DismissableAlertMessage\n            kind=\"info\"\n            identifier=\"lifecycle-events-function-included-only-if-extension-used\"\n          >\n            <Trans>\n              For the lifecycle functions to be executed, you need the extension\n              to be used in the game, either by having at least one action,\n              condition or expression used, or a behavior of the extension added\n              to an object. Otherwise, the extension won't be included in the\n              game.\n            </Trans>\n          </DismissableAlertMessage>\n          <EmptyMessage>\n            <Trans>\n              This is a \"lifecycle function\". It will be called automatically by\n              the game engine. It has no parameters. Only global objects can be\n              used as the events will be run for all scenes in your game.\n            </Trans>\n          </EmptyMessage>\n        </Column>\n      );\n    }\n\n    const isParameterDisabled = index => {\n      return !!freezeParameters || (!!eventsBasedBehavior && index < 2);\n    };\n    const isParameterDescriptionAndTypeShown = index => {\n      // The first two parameters of a behavior method should not be changed at all,\n      // so we even hide their description and type to avoid cluttering the interface.\n      return !eventsBasedBehavior || index >= 2;\n    };\n    const isParameterLongDescriptionShown = (parameter, index): boolean => {\n      if (!isParameterDescriptionAndTypeShown(index)) return false;\n\n      return (\n        !!parameter.getLongDescription() ||\n        !!this.state.longDescriptionShownIndexes[index]\n      );\n    };\n    const parametersIndexOffset = getParametersIndexOffset(\n      !!eventsBasedBehavior\n    );\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Column noMargin expand>\n            <Line noMargin>\n              <div style={styles.parametersContainer}>\n                {mapVector(\n                  parameters,\n                  (parameter: gdParameterMetadata, i: number) => (\n                    <React.Fragment key={i}>\n                      <MiniToolbar>\n                        <MiniToolbarText firstChild>\n                          <Trans>Parameter #{i + parametersIndexOffset}:</Trans>\n                        </MiniToolbarText>\n                        <Column expand noMargin>\n                          <SemiControlledTextField\n                            commitOnBlur\n                            margin=\"none\"\n                            hintText={t`Enter the parameter name (mandatory)`}\n                            value={parameter.getName()}\n                            onChange={text => {\n                              if (!validateParameterName(i18n, text)) return;\n\n                              parameter.setName(text);\n                              this.forceUpdate();\n                              this.props.onParametersUpdated();\n                            }}\n                            disabled={isParameterDisabled(i)}\n                            fullWidth\n                          />\n                        </Column>\n                        <ElementWithMenu\n                          element={\n                            <IconButton>\n                              <MoreVert />\n                            </IconButton>\n                          }\n                          buildMenuTemplate={(i18n: I18nType) => [\n                            {\n                              label: i18n._(t`Delete`),\n                              enabled: !isParameterDisabled(i),\n                              click: () => this._removeParameter(i),\n                            },\n                            { type: 'separator' },\n                            {\n                              label: i18n._(t`Add a Long Description`),\n                              enabled: !isParameterDisabled(i),\n                              visible: !isParameterLongDescriptionShown(\n                                parameter,\n                                i\n                              ),\n                              click: () => this._addLongDescription(i),\n                            },\n                            {\n                              label: i18n._(t`Remove the Long Description`),\n                              enabled: !isParameterDisabled(i),\n                              visible: isParameterLongDescriptionShown(\n                                parameter,\n                                i\n                              ),\n                              click: () => this._removeLongDescription(i),\n                            },\n                            {\n                              label: i18n._(t`Move up`),\n                              click: () => this._moveParameters(i, i - 1),\n                              enabled:\n                                !isParameterDisabled(i) &&\n                                i - 1 >= 0 &&\n                                !isParameterDisabled(i - 1),\n                            },\n                            {\n                              label: i18n._(t`Move down`),\n                              click: () => this._moveParameters(i, i + 1),\n                              enabled:\n                                !isParameterDisabled(i) &&\n                                i + 1 < parameters.size() &&\n                                !isParameterDisabled(i + 1),\n                            },\n                          ]}\n                        />\n                      </MiniToolbar>\n                      <Line>\n                        <ColumnStackLayout expand>\n                          <ResponsiveLineStackLayout noMargin>\n                            {isParameterDescriptionAndTypeShown(i) && (\n                              <SelectField\n                                floatingLabelText={<Trans>Type</Trans>}\n                                value={parameter.getType()}\n                                onChange={(e, i, value: string) => {\n                                  parameter.setType(value);\n                                  parameter.setOptional(false);\n                                  parameter.setDefaultValue('');\n                                  this.forceUpdate();\n                                  this.props.onParametersUpdated();\n                                }}\n                                disabled={isParameterDisabled(i)}\n                                fullWidth\n                              >\n                                <SelectOption\n                                  value=\"objectList\"\n                                  primaryText={t`Objects`}\n                                />\n                                <SelectOption\n                                  value=\"behavior\"\n                                  primaryText={t`Behavior (for the previous object)`}\n                                />\n                                <SelectOption\n                                  value=\"expression\"\n                                  primaryText={t`Number`}\n                                />\n                                <SelectOption\n                                  value=\"string\"\n                                  primaryText={t`String (text)`}\n                                />\n                                <SelectOption\n                                  value=\"stringWithSelector\"\n                                  primaryText={t`String from a list of options (text)`}\n                                />\n                                <SelectOption\n                                  value=\"key\"\n                                  primaryText={t`Keyboard Key (text)`}\n                                />\n                                <SelectOption\n                                  value=\"mouse\"\n                                  primaryText={t`Mouse button (text)`}\n                                />\n                                <SelectOption\n                                  value=\"color\"\n                                  primaryText={t`Color (text)`}\n                                />\n                                <SelectOption\n                                  value=\"layer\"\n                                  primaryText={t`Layer (text)`}\n                                />\n                                <SelectOption\n                                  value=\"sceneName\"\n                                  primaryText={t`Scene name (text)`}\n                                />\n                                <SelectOption\n                                  value=\"yesorno\"\n                                  primaryText={t`Yes or No (boolean)`}\n                                />\n                                <SelectOption\n                                  value=\"trueorfalse\"\n                                  primaryText={t`True or False (boolean)`}\n                                />\n                                <SelectOption\n                                  value=\"objectPointName\"\n                                  primaryText={t`Object point (text)`}\n                                />\n                                <SelectOption\n                                  value=\"objectAnimationName\"\n                                  primaryText={t`Object animation (text)`}\n                                />\n                              </SelectField>\n                            )}\n                            {gd.ParameterMetadata.isObject(\n                              parameter.getType()\n                            ) && (\n                              <ObjectTypeSelector\n                                project={project}\n                                value={parameter.getExtraInfo()}\n                                onChange={(value: string) => {\n                                  parameter.setExtraInfo(value);\n                                  this.forceUpdate();\n                                  this.props.onParametersUpdated();\n                                }}\n                                disabled={isParameterDisabled(i)}\n                              />\n                            )}\n                            {parameter.getType() === 'behavior' && (\n                              <BehaviorTypeSelector\n                                project={project}\n                                objectType={getLastObjectParameterObjectType(\n                                  parameters,\n                                  i\n                                )}\n                                value={parameter.getExtraInfo()}\n                                onChange={(value: string) => {\n                                  parameter.setExtraInfo(value);\n                                  this.forceUpdate();\n                                  this.props.onParametersUpdated();\n                                }}\n                                disabled={isParameterDisabled(i)}\n                              />\n                            )}\n                            {parameter.getType() === 'yesorno' && (\n                              <SelectField\n                                floatingLabelText={<Trans>Default value</Trans>}\n                                value={\n                                  parameter.getDefaultValue() === 'yes'\n                                    ? 'yes'\n                                    : 'no'\n                                }\n                                onChange={(e, i, value) => {\n                                  parameter.setOptional(true);\n                                  parameter.setDefaultValue(value);\n                                  this.forceUpdate();\n                                  this.props.onParametersUpdated();\n                                }}\n                                fullWidth\n                              >\n                                <SelectOption\n                                  value=\"yes\"\n                                  primaryText={t`Yes`}\n                                />\n                                <SelectOption value=\"no\" primaryText={t`No`} />\n                              </SelectField>\n                            )}\n                            {parameter.getType() === 'trueorfalse' && (\n                              <SelectField\n                                floatingLabelText={<Trans>Default value</Trans>}\n                                value={\n                                  parameter.getDefaultValue() === 'True'\n                                    ? 'True'\n                                    : 'False'\n                                }\n                                onChange={(e, i, value) => {\n                                  parameter.setOptional(true);\n                                  parameter.setDefaultValue(value);\n                                  this.forceUpdate();\n                                  this.props.onParametersUpdated();\n                                }}\n                                fullWidth\n                              >\n                                <SelectOption\n                                  value=\"True\"\n                                  primaryText={t`True`}\n                                />\n                                <SelectOption\n                                  value=\"False\"\n                                  primaryText={t`False`}\n                                />\n                              </SelectField>\n                            )}\n                          </ResponsiveLineStackLayout>\n                          {parameter.getType() === 'stringWithSelector' && (\n                            <StringArrayEditor\n                              extraInfo={getExtraInfoArray(parameter)}\n                              setExtraInfo={this._setStringSelectorExtraInfo(\n                                parameter\n                              )}\n                            />\n                          )}\n                          {isParameterDescriptionAndTypeShown(i) && (\n                            <SemiControlledTextField\n                              commitOnBlur\n                              floatingLabelText={<Trans>Label</Trans>}\n                              floatingLabelFixed\n                              value={parameter.getDescription()}\n                              onChange={text => {\n                                parameter.setDescription(text);\n                                this.forceUpdate();\n                              }}\n                              fullWidth\n                              disabled={\n                                false /* Label, if shown, can always be changed */\n                              }\n                            />\n                          )}\n                          {isParameterLongDescriptionShown(parameter, i) && (\n                            <SemiControlledTextField\n                              commitOnBlur\n                              floatingLabelText={\n                                <Trans>Long description</Trans>\n                              }\n                              floatingLabelFixed\n                              value={parameter.getLongDescription()}\n                              onChange={text => {\n                                parameter.setLongDescription(text);\n                                this.forceUpdate();\n                              }}\n                              multiline\n                              fullWidth\n                              disabled={\n                                false /* Long description, if shown, can always be changed */\n                              }\n                            />\n                          )}\n                        </ColumnStackLayout>\n                      </Line>\n                    </React.Fragment>\n                  )\n                )}\n                {parameters.size() === 0 ? (\n                  <EmptyMessage>\n                    <Trans>No parameters for this function.</Trans>\n                  </EmptyMessage>\n                ) : null}\n                <Column>\n                  <Line justifyContent=\"flex-end\" expand>\n                    {!freezeParameters && (\n                      <RaisedButton\n                        primary\n                        label={<Trans>Add a parameter</Trans>}\n                        onClick={this._addParameter}\n                        icon={<Add />}\n                      />\n                    )}\n                  </Line>\n                </Column>\n              </div>\n            </Line>\n            {helpPagePath ? (\n              <Line>\n                <HelpButton helpPagePath={helpPagePath} />\n              </Line>\n            ) : (\n              <Spacer />\n            )}\n          </Column>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport {\n  enumerateObjectTypes,\n  type EnumeratedObjectMetadata,\n} from '../ObjectsList/EnumerateObjects';\n\ntype Props = {|\n  project: gdProject,\n  floatingLabelText?: React.Node,\n  value: string,\n  onChange: string => void,\n  disabled?: boolean,\n  allowedObjectTypes?: ?Array<string>,\n|};\ntype State = {|\n  objectMetadata: Array<EnumeratedObjectMetadata>,\n|};\n\nexport default class ObjectTypeSelector extends React.Component<Props, State> {\n  state = {\n    objectMetadata: enumerateObjectTypes(this.props.project),\n  };\n\n  render() {\n    const {\n      disabled,\n      value,\n      onChange,\n      floatingLabelText,\n      allowedObjectTypes,\n    } = this.props;\n    const { objectMetadata } = this.state;\n\n    const isDisabled = (type: string) => {\n      if (!allowedObjectTypes) return false;\n\n      return allowedObjectTypes.indexOf(type) === -1;\n    };\n\n    return (\n      <SelectField\n        floatingLabelText={floatingLabelText || <Trans>Object type</Trans>}\n        value={value}\n        onChange={(e, i, value: string) => {\n          onChange(value);\n        }}\n        disabled={disabled}\n        fullWidth\n      >\n        <SelectOption\n          value=\"\"\n          primaryText={t`Any object`}\n          disabled={isDisabled('')}\n        />\n        {objectMetadata.map((metadata: EnumeratedObjectMetadata) => {\n          if (metadata.name === '') {\n            // Base object is an \"abstract\" object\n            return null;\n          }\n\n          return (\n            <SelectOption\n              key={metadata.name}\n              value={metadata.name}\n              primaryText={metadata.fullName}\n              disabled={isDisabled(metadata.name)}\n            />\n          );\n        })}\n      </SelectField>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport {\n  type EnumeratedBehaviorMetadata,\n  enumerateBehaviorsMetadata,\n} from '../BehaviorsEditor/EnumerateBehaviorsMetadata';\n\ntype Props = {|\n  project: gdProject,\n  objectType: string,\n  value: string,\n  onChange: string => void,\n  disabled?: boolean,\n|};\ntype State = {|\n  behaviorMetadata: Array<EnumeratedBehaviorMetadata>,\n|};\n\nexport default class BehaviorTypeSelector extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    behaviorMetadata: enumerateBehaviorsMetadata(\n      this.props.project.getCurrentPlatform(),\n      this.props.project\n    ),\n  };\n\n  render() {\n    const { disabled, objectType, value, onChange } = this.props;\n    const { behaviorMetadata } = this.state;\n\n    // If the behavior type is not in the list, we'll still\n    // add a menu item for it so that the value is displayed\n    // on screen.\n    const valueIsListed = !!behaviorMetadata.find(({ type }) => type === value);\n\n    return (\n      <SelectField\n        floatingLabelText={<Trans>Behavior type</Trans>}\n        value={value}\n        onChange={(e, i, value: string) => {\n          onChange(value);\n        }}\n        disabled={disabled}\n        fullWidth\n      >\n        {behaviorMetadata.map((metadata: EnumeratedBehaviorMetadata) => (\n          <SelectOption\n            key={metadata.type}\n            value={metadata.type}\n            primaryText={metadata.fullName}\n            disabled={\n              metadata.objectType !== '' && metadata.objectType !== objectType\n            }\n          />\n        ))}\n        {!valueIsListed && value && (\n          <SelectOption value={value} primaryText={value} />\n        )}\n      </SelectField>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { ResponsiveLineStackLayout } from '../UI/Layout';\nimport { Line, Column } from '../UI/Grid';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport { IconButton } from '@material-ui/core';\nimport Delete from '@material-ui/icons/Delete';\nimport RaisedButton from '../UI/RaisedButton';\nimport Add from '@material-ui/icons/Add';\n\ntype StringArrayEditorProps = {|\n  extraInfo: Array<string>,\n  setExtraInfo: (Array<string>) => void,\n|};\n\nconst StringArrayEditor = ({\n  extraInfo,\n  setExtraInfo,\n}: StringArrayEditorProps) => {\n  const updateExtraInfo = () => setExtraInfo(extraInfo);\n\n  return (\n    <ResponsiveLineStackLayout>\n      <Column justifyContent=\"flex-end\" expand>\n        {extraInfo.map((item, index) => (\n          <Line key={index} justifyContent=\"flex-end\" expand>\n            <SemiControlledTextField\n              commitOnBlur\n              value={item}\n              onChange={text => {\n                extraInfo[index] = text;\n                updateExtraInfo();\n              }}\n              fullWidth\n            />\n            <IconButton\n              tooltip={t`Delete option`}\n              onClick={() => {\n                extraInfo.splice(index, 1);\n                updateExtraInfo();\n              }}\n            >\n              <Delete />\n            </IconButton>\n          </Line>\n        ))}\n\n        <Line justifyContent=\"flex-end\" expand>\n          <RaisedButton\n            primary\n            onClick={() => {\n              extraInfo.push('New Option');\n              updateExtraInfo();\n            }}\n            label={<Trans>Add a new option</Trans>}\n            icon={<Add />}\n          />\n        </Line>\n      </Column>\n    </ResponsiveLineStackLayout>\n  );\n};\n\nexport default StringArrayEditor;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport * as React from 'react';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\nimport { mapVector } from '../../Utils/MapFor';\nimport HelpButton from '../../UI/HelpButton';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport {\n  isBehaviorLifecycleEventsFunction,\n  isExtensionLifecycleEventsFunction,\n} from '../../EventsFunctionsExtensionsLoader/MetadataDeclarationHelpers';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport { getParametersIndexOffset } from '../../EventsFunctionsExtensionsLoader';\nimport { type MessageDescriptor } from '../../Utils/i18n/MessageDescriptor.flow';\nimport { ResponsiveLineStackLayout, ColumnStackLayout } from '../../UI/Layout';\nimport DismissableAlertMessage from '../../UI/DismissableAlertMessage';\nimport SemiControlledAutoComplete from '../../UI/SemiControlledAutoComplete';\n\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  eventsFunction: gdEventsFunction,\n  eventsBasedBehavior: ?gdEventsBasedBehavior,\n  helpPagePath?: string,\n  onConfigurationUpdated?: (whatChanged?: 'type') => void,\n  renderConfigurationHeader?: () => React.Node,\n  freezeEventsFunctionType?: boolean,\n  getFunctionGroupNames?: () => string[],\n|};\n\ntype State = {||};\n\nconst getSentenceErrorText = (\n  i18n: I18nType,\n  eventsBasedBehavior: ?gdEventsBasedBehavior,\n  eventsFunction: gdEventsFunction\n) => {\n  const sentence = eventsFunction.getSentence();\n  if (!sentence)\n    return i18n._(\n      t`Enter the sentence that will be displayed in the events sheet`\n    );\n\n  const parametersIndexOffset = getParametersIndexOffset(!!eventsBasedBehavior);\n\n  const missingParameters = mapVector(\n    eventsFunction.getParameters(),\n    (parameter, index) => {\n      if (gd.ParameterMetadata.isBehavior(parameter.getType())) {\n        return null; // Behaviors are usually not shown in sentences.\n      }\n\n      const expectedString = `_PARAM${index + parametersIndexOffset}_`;\n      if (sentence.indexOf(expectedString) === -1) return expectedString;\n\n      return null;\n    }\n  ).filter(Boolean);\n\n  if (missingParameters.length) {\n    return (\n      i18n._(t`The sentence is probably missing this/these parameter(s):`) +\n      missingParameters.join(', ')\n    );\n  }\n\n  return undefined;\n};\n\nconst getFullNameHintText = (type: any): MessageDescriptor => {\n  if (type === gd.EventsFunction.Condition) {\n    return t`Example: Is flashing?`;\n  } else if (type === gd.EventsFunction.Expression) {\n    return t`Example: Life remaining`;\n  } else if (type === gd.EventsFunction.StringExpression) {\n    return t`Example: Equipped shield name`;\n  }\n\n  return t`Example: Flash the object`;\n};\n\nconst getDescriptionHintText = (type: any): MessageDescriptor => {\n  if (type === gd.EventsFunction.Condition) {\n    return t`Example: Check if the object is flashing.`;\n  } else if (type === gd.EventsFunction.Expression) {\n    return t`Example: Life remaining for the player.`;\n  } else if (type === gd.EventsFunction.StringExpression) {\n    return t`Example: Name of the shield equipped by the player.`;\n  }\n\n  return t`Example: Make the object flash for 5 seconds.`;\n};\n\nexport default class EventsFunctionPropertiesEditor extends React.Component<\n  Props,\n  State\n> {\n  render() {\n    const {\n      eventsFunction,\n      freezeEventsFunctionType,\n      onConfigurationUpdated,\n      helpPagePath,\n      renderConfigurationHeader,\n      eventsBasedBehavior,\n      getFunctionGroupNames,\n    } = this.props;\n\n    const type = eventsFunction.getFunctionType();\n    const isABehaviorLifecycleEventsFunction =\n      !!eventsBasedBehavior &&\n      isBehaviorLifecycleEventsFunction(eventsFunction.getName());\n    if (isABehaviorLifecycleEventsFunction) {\n      return (\n        <EmptyMessage>\n          <Trans>\n            This is a \"lifecycle method\". It will be called automatically by the\n            game engine for each instance living on the scene having the\n            behavior.\n          </Trans>\n        </EmptyMessage>\n      );\n    }\n\n    const isAnExtensionLifecycleEventsFunction =\n      !eventsBasedBehavior &&\n      isExtensionLifecycleEventsFunction(eventsFunction.getName());\n    if (isAnExtensionLifecycleEventsFunction) {\n      return (\n        <Column>\n          <DismissableAlertMessage\n            kind=\"info\"\n            identifier=\"lifecycle-events-function-included-only-if-extension-used\"\n          >\n            <Trans>\n              For the lifecycle functions to be executed, you need the extension\n              to be used in the game, either by having at least one action,\n              condition or expression used, or a behavior of the extension added\n              to an object. Otherwise, the extension won't be included in the\n              game.\n            </Trans>\n          </DismissableAlertMessage>\n          <EmptyMessage>\n            <Trans>\n              This is a \"lifecycle function\". It will be called automatically by\n              the game engine. It has no parameters. Only global objects can be\n              used as the events will be run for all scenes in your game.\n            </Trans>\n          </EmptyMessage>\n        </Column>\n      );\n    }\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <ColumnStackLayout expand>\n            {renderConfigurationHeader ? renderConfigurationHeader() : null}\n            <ResponsiveLineStackLayout alignItems=\"center\" noMargin>\n              <Line alignItems=\"center\" noMargin>\n                <SelectField\n                  value={type}\n                  floatingLabelText={<Trans>Function type</Trans>}\n                  fullWidth\n                  disabled={!!freezeEventsFunctionType}\n                  onChange={(e, i, value: string) => {\n                    // $FlowFixMe\n                    eventsFunction.setFunctionType(value);\n                    if (onConfigurationUpdated) onConfigurationUpdated('type');\n                    this.forceUpdate();\n                  }}\n                >\n                  <SelectOption\n                    value={gd.EventsFunction.Action}\n                    primaryText={t`Action`}\n                  />\n                  <SelectOption\n                    value={gd.EventsFunction.Condition}\n                    primaryText={t`Condition`}\n                  />\n                  <SelectOption\n                    value={gd.EventsFunction.Expression}\n                    primaryText={t`Expression`}\n                  />\n                  <SelectOption\n                    value={gd.EventsFunction.StringExpression}\n                    primaryText={t`String Expression`}\n                  />\n                </SelectField>\n              </Line>\n              <SemiControlledTextField\n                commitOnBlur\n                floatingLabelText={<Trans>Full name displayed in editor</Trans>}\n                hintText={getFullNameHintText(type)}\n                value={eventsFunction.getFullName()}\n                onChange={text => {\n                  eventsFunction.setFullName(text);\n                  if (onConfigurationUpdated) onConfigurationUpdated();\n                  this.forceUpdate();\n                }}\n                fullWidth\n              />\n            </ResponsiveLineStackLayout>\n            <Line noMargin>\n              <SemiControlledAutoComplete\n                floatingLabelText={<Trans>Group name</Trans>}\n                hintText={t`Leave it empty to use the default group for this extension.`}\n                fullWidth\n                value={eventsFunction.getGroup()}\n                onChange={text => {\n                  eventsFunction.setGroup(text);\n                  if (onConfigurationUpdated) onConfigurationUpdated();\n                  this.forceUpdate();\n                }}\n                dataSource={\n                  getFunctionGroupNames\n                    ? getFunctionGroupNames().map(name => ({\n                        text: name,\n                        value: name,\n                      }))\n                    : []\n                }\n                openOnFocus={true}\n              />\n            </Line>\n            <Line noMargin>\n              <SemiControlledTextField\n                commitOnBlur\n                floatingLabelText={\n                  <Trans>Description, displayed in editor</Trans>\n                }\n                hintText={getDescriptionHintText(type)}\n                fullWidth\n                multiline\n                value={eventsFunction.getDescription()}\n                onChange={text => {\n                  eventsFunction.setDescription(text);\n                  if (onConfigurationUpdated) onConfigurationUpdated();\n                  this.forceUpdate();\n                }}\n              />\n            </Line>\n            <Line noMargin>\n              {type === gd.EventsFunction.Action ||\n              type === gd.EventsFunction.Condition ? (\n                <SemiControlledTextField\n                  commitOnBlur\n                  floatingLabelText={<Trans>Sentence in Events Sheet</Trans>}\n                  hintText={t`Note: write _PARAMx_ for parameters, e.g: Flash _PARAM1_ for 5 seconds`}\n                  fullWidth\n                  value={eventsFunction.getSentence()}\n                  onChange={text => {\n                    eventsFunction.setSentence(text);\n                    if (onConfigurationUpdated) onConfigurationUpdated();\n                    this.forceUpdate();\n                  }}\n                  errorText={getSentenceErrorText(\n                    i18n,\n                    eventsBasedBehavior,\n                    eventsFunction\n                  )}\n                />\n              ) : null}\n            </Line>\n            {helpPagePath ? (\n              <Line noMargin>\n                <HelpButton helpPagePath={helpPagePath} />\n              </Line>\n            ) : (\n              <Spacer />\n            )}\n          </ColumnStackLayout>\n        )}\n      </I18n>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport IconButton from '../IconButton';\nimport Close from '@material-ui/icons/Close';\nimport { MosaicWindowContext, MosaicContext } from 'react-mosaic-component';\n\nconst styles = {\n  container: {\n    padding: 0,\n    width: 32,\n    height: 32,\n  },\n  icon: {\n    width: 16,\n    height: 16,\n  },\n};\n\nexport default class CloseButton extends Component {\n  render() {\n    return (\n      <MosaicContext.Consumer>\n        {({ mosaicActions }) => (\n          <MosaicWindowContext.Consumer>\n            {({ mosaicWindowActions }) => (\n              <IconButton\n                onClick={() => {\n                  mosaicActions.remove(mosaicWindowActions.getPath());\n                }}\n                style={styles.container}\n              >\n                <Close htmlColor=\"white\" style={styles.icon} />\n              </IconButton>\n            )}\n          </MosaicWindowContext.Consumer>\n        )}\n      </MosaicContext.Consumer>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport EventsFunctionsExtensionEditor from '../../EventsFunctionsExtensionEditor';\nimport {\n  type RenderEditorContainerProps,\n  type RenderEditorContainerPropsWithRef,\n} from './BaseEditor';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 1,\n  },\n};\n\nexport class EventsFunctionsExtensionEditorContainer extends React.Component<RenderEditorContainerProps> {\n  editor: ?EventsFunctionsExtensionEditor;\n\n  getProject(): ?gdProject {\n    return this.props.project;\n  }\n\n  getLayout(): ?gdLayout {\n    return null;\n  }\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  forceUpdateEditor() {\n    // No updates to be done.\n  }\n\n  shouldComponentUpdate(nextProps: RenderEditorContainerProps) {\n    // This optimization is a bit more cautious than the traditional one,\n    // to still be notified when isActive goes from true to false.\n    if (!this.props.isActive && !nextProps.isActive) {\n      return false;\n    }\n\n    return true;\n  }\n\n  componentDidUpdate(prevProps: *) {\n    // Ensure that the editor will trigger the\n    // reload/regeneration of extensions when the user\n    // is focusing another editor\n    if (prevProps.isActive && !this.props.isActive) {\n      this.props.onLoadEventsFunctionsExtensions();\n    }\n  }\n\n  componentWillUnmount() {\n    // Ensure that a closed editor will still trigger the\n    // reload/regeneration of extensions, as changes can have\n    // been made inside before it's closed.\n    if (this.props.isActive) {\n      this.props.onLoadEventsFunctionsExtensions();\n    }\n  }\n\n  _onBehaviorEdited = async () => {\n    // Immediately trigger the reload/regeneration of extensions\n    // as a change in the properties of a behavior can create changes\n    // in actions/conditions/expressions to manipulate these properties.\n    try {\n      await this.props.onLoadEventsFunctionsExtensions();\n    } catch (error) {\n      console.warn(\n        'Error while loading events functions extensions - ignoring this in the context of the EventsFunctionsExtensionEditorContainer.',\n        error\n      );\n    }\n  };\n\n  previewWillStart = () => {\n    // Immediately trigger the reload/regeneration of extensions\n    // if a preview is about to start, as changes chan have been made\n    // inside. The preview is responsible for waiting for extensions\n    // to be loaded before starting.\n    if (this.props.isActive) {\n      this.props.onLoadEventsFunctionsExtensions();\n    }\n  };\n\n  getEventsFunctionsExtension(): ?gdEventsFunctionsExtension {\n    const { project, projectItemName } = this.props;\n    if (!project || !projectItemName) return null;\n\n    if (!project.hasEventsFunctionsExtensionNamed(projectItemName)) {\n      return null;\n    }\n    return project.getEventsFunctionsExtension(projectItemName);\n  }\n\n  selectEventsFunctionByName(\n    eventsFunctionName: string,\n    behaviorName: ?string\n  ) {\n    if (this.editor)\n      this.editor.selectEventsFunctionByName(eventsFunctionName, behaviorName);\n  }\n\n  render() {\n    const { project, projectItemName } = this.props;\n    const eventsFunctionsExtension = this.getEventsFunctionsExtension();\n\n    if (!eventsFunctionsExtension || !project) {\n      //TODO: Error component\n      return <div>No extension called {projectItemName} found!</div>;\n    }\n\n    const { initiallyFocusedFunctionName, initiallyFocusedBehaviorName } =\n      this.props.extraEditorProps || {};\n\n    return (\n      <div style={styles.container}>\n        <EventsFunctionsExtensionEditor\n          key={eventsFunctionsExtension.ptr}\n          project={project}\n          eventsFunctionsExtension={eventsFunctionsExtension}\n          setToolbar={this.props.setToolbar}\n          resourceSources={this.props.resourceSources}\n          onChooseResource={this.props.onChooseResource}\n          resourceExternalEditors={this.props.resourceExternalEditors}\n          openInstructionOrExpression={this.props.openInstructionOrExpression}\n          onCreateEventsFunction={this.props.onCreateEventsFunction}\n          initiallyFocusedFunctionName={initiallyFocusedFunctionName}\n          initiallyFocusedBehaviorName={initiallyFocusedBehaviorName}\n          onBehaviorEdited={this._onBehaviorEdited}\n          ref={editor => (this.editor = editor)}\n          unsavedChanges={this.props.unsavedChanges}\n        />\n      </div>\n    );\n  }\n}\n\nexport const renderEventsFunctionsExtensionEditorContainer = (\n  props: RenderEditorContainerPropsWithRef\n) => <EventsFunctionsExtensionEditorContainer {...props} />;\n","// @flow\nimport { Trans, t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport React from 'react';\nimport { AutoSizer } from 'react-virtualized';\nimport Background from '../UI/Background';\nimport SearchBar from '../UI/SearchBar';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport SortableVirtualizedItemList from '../UI/SortableVirtualizedItemList';\nimport {\n  filterGroupsList,\n  enumerateGroups,\n  isSameGroupWithContext,\n} from '../ObjectsList/EnumerateObjects';\nimport {\n  type GroupWithContextList,\n  type GroupWithContext,\n} from '../ObjectsList/EnumerateObjects';\nimport Window from '../Utils/Window';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\n\nexport const groupWithContextReactDndType = 'GD_GROUP_WITH_CONTEXT';\n\nconst styles = {\n  listContainer: {\n    flex: 1,\n  },\n};\n\nconst getGroupWithContextName = (groupWithContext: GroupWithContext): string =>\n  groupWithContext.group.getName();\nconst isGroupWithContextGlobal = (groupWithContext: GroupWithContext) =>\n  groupWithContext.global;\n\ntype State = {|\n  renamedGroupWithContext: ?GroupWithContext,\n  selectedGroupWithContext: ?GroupWithContext,\n  searchText: string,\n|};\n\ntype Props = {|\n  globalObjectGroups: gdObjectGroupsContainer,\n  objectGroups: gdObjectGroupsContainer,\n  onDeleteGroup: (groupWithContext: GroupWithContext, cb: Function) => void,\n  onEditGroup: gdObjectGroup => void,\n  canRenameGroup: (newName: string) => boolean,\n  onRenameGroup: (\n    groupWithContext: GroupWithContext,\n    newName: string,\n    cb: Function\n  ) => void,\n  onGroupAdded?: () => void,\n  onGroupRemoved?: () => void,\n  onGroupRenamed?: () => void,\n  canSetAsGlobalGroup?: boolean,\n  unsavedChanges?: ?UnsavedChanges,\n|};\n\nexport default class GroupsListContainer extends React.Component<Props, State> {\n  static defaultProps = {\n    onDeleteGroup: (groupWithContext: GroupWithContext, cb: Function) =>\n      cb(true),\n    onRenameGroup: (\n      groupWithContext: GroupWithContext,\n      newName: string,\n      cb: Function\n    ) => cb(true),\n  };\n\n  sortableList: ?SortableVirtualizedItemList<GroupWithContext>;\n  displayedObjectGroupsList: GroupWithContextList = [];\n  displayedGlobalObjectGroupsList: GroupWithContextList = [];\n  state: State = {\n    renamedGroupWithContext: null,\n    selectedGroupWithContext: null,\n    searchText: '',\n  };\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    // The component is costly to render, so avoid any re-rendering as much\n    // as possible.\n    // We make the assumption that no changes to groups list is made outside\n    // from the component.\n    // If a change is made, the component won't notice it: you have to manually\n    // call forceUpdate.\n\n    if (\n      this.state.renamedGroupWithContext !==\n        nextState.renamedGroupWithContext ||\n      this.state.selectedGroupWithContext !==\n        nextState.selectedGroupWithContext ||\n      this.state.searchText !== nextState.searchText\n    )\n      return true;\n\n    if (\n      this.props.globalObjectGroups !== nextProps.globalObjectGroups ||\n      this.props.objectGroups !== nextProps.objectGroups\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  addGroup = () => {\n    const { globalObjectGroups, objectGroups } = this.props;\n\n    const name = newNameGenerator(\n      'Group',\n      name => objectGroups.has(name) || globalObjectGroups.has(name)\n    );\n\n    objectGroups.insertNew(name, objectGroups.count());\n    this._onObjectGroupModified();\n\n    if (this.props.onGroupAdded) {\n      this.props.onGroupAdded();\n    }\n  };\n\n  _onDelete = (groupWithContext: GroupWithContext) => {\n    const { group, global } = groupWithContext;\n    const { globalObjectGroups, objectGroups } = this.props;\n\n    const answer = Window.showConfirmDialog(\n      \"Are you sure you want to remove this group? This can't be undone.\"\n    );\n    if (!answer) return;\n\n    this.props.onDeleteGroup(groupWithContext, doRemove => {\n      if (!doRemove) return;\n\n      if (global) {\n        globalObjectGroups.remove(group.getName());\n      } else {\n        objectGroups.remove(group.getName());\n      }\n\n      this._onObjectGroupModified();\n      if (this.props.onGroupRemoved) {\n        this.props.onGroupRemoved();\n      }\n    });\n  };\n\n  _onEditName = (groupWithContext: GroupWithContext) => {\n    this.setState(\n      {\n        renamedGroupWithContext: groupWithContext,\n      },\n      () => {\n        if (this.sortableList) this.sortableList.forceUpdateGrid();\n      }\n    );\n  };\n\n  _onDuplicate = (groupWithContext: GroupWithContext): ?GroupWithContext => {\n    const { group, global } = groupWithContext;\n    const { globalObjectGroups, objectGroups } = this.props;\n\n    const container: gdObjectGroupsContainer = global\n      ? globalObjectGroups\n      : objectGroups;\n\n    const newName = newNameGenerator(\n      group.getName(),\n      name => container.has(name),\n      ''\n    );\n\n    const newGroup = container.insertNew(\n      newName,\n      container.getPosition(group.getName()) + 1\n    );\n\n    unserializeFromJSObject(\n      newGroup,\n      serializeToJSObject(group),\n      'unserializeFrom'\n    );\n    newGroup.setName(newName); // Unserialization has overwritten the name.\n\n    this._onObjectGroupModified();\n\n    return { group: newGroup, global };\n  };\n\n  _onRename = (groupWithContext: GroupWithContext, newName: string) => {\n    const { group } = groupWithContext;\n    const { globalObjectGroups, objectGroups } = this.props;\n\n    this.setState({\n      renamedGroupWithContext: null,\n    });\n\n    if (group.getName() === newName) return;\n\n    if (objectGroups.has(newName) || globalObjectGroups.has(newName)) {\n      showWarningBox('Another object with this name already exists', {\n        delayToNextTick: true,\n      });\n      return;\n    }\n\n    if (this.props.canRenameGroup(newName)) {\n      this.props.onRenameGroup(groupWithContext, newName, doRename => {\n        if (!doRename) return;\n\n        group.setName(newName);\n\n        this._onObjectGroupModified();\n        if (this.props.onGroupRenamed) {\n          this.props.onGroupRenamed();\n        }\n      });\n    }\n  };\n\n  _setAsGlobalGroup = (groupWithContext: GroupWithContext) => {\n    const { group } = groupWithContext;\n    const { globalObjectGroups, objectGroups } = this.props;\n\n    const groupName = group.getName();\n\n    if (globalObjectGroups.has(groupName)) {\n      showWarningBox(\n        'A global object with this name already exists. Please change the object name before setting it as a global object',\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    const answer = Window.showConfirmDialog(\n      \"This group will be loaded and available in all the scenes. This is only recommended for groups that you reuse a lot and can't be undone. Make this group global?\"\n    );\n    if (!answer) return;\n\n    globalObjectGroups.insert(group, globalObjectGroups.count());\n    objectGroups.remove(groupName);\n    this._onObjectGroupModified();\n  };\n\n  _onObjectGroupModified = () => {\n    if (this.props.unsavedChanges)\n      this.props.unsavedChanges.triggerUnsavedChanges();\n    this.forceUpdate();\n  };\n\n  _canMoveSelectionTo = (targetGroupWithContext: GroupWithContext) => {\n    if (!this.state.selectedGroupWithContext) return false;\n\n    if (\n      this.state.selectedGroupWithContext.global ===\n      targetGroupWithContext.global\n    ) {\n      return true;\n    }\n\n    if (\n      !this.state.selectedGroupWithContext.global &&\n      targetGroupWithContext.global &&\n      this.displayedGlobalObjectGroupsList.indexOf(targetGroupWithContext) === 0\n    ) {\n      // Allow drop on first element of global items to put local item at the end of its list\n      return true;\n    }\n\n    return false;\n  };\n\n  _moveSelectionTo = (targetGroupWithContext: GroupWithContext) => {\n    const { selectedGroupWithContext } = this.state;\n    if (!selectedGroupWithContext) return;\n\n    const { globalObjectGroups, objectGroups } = this.props;\n    let container: gdObjectGroupsContainer;\n    let fromIndex: number;\n    let toIndex: number;\n\n    const areSelectedAndTargetItemsFromSameContext =\n      selectedGroupWithContext.global === targetGroupWithContext.global;\n\n    const isDroppingLocalItemOnFirstGlobalItemOfDisplayedList =\n      !selectedGroupWithContext.global &&\n      targetGroupWithContext.global &&\n      globalObjectGroups.getPosition(targetGroupWithContext.group.getName()) ===\n        0;\n\n    if (areSelectedAndTargetItemsFromSameContext) {\n      container = selectedGroupWithContext.global\n        ? globalObjectGroups\n        : objectGroups;\n\n      fromIndex = container.getPosition(\n        selectedGroupWithContext.group.getName()\n      );\n      toIndex = container.getPosition(targetGroupWithContext.group.getName());\n    } else if (isDroppingLocalItemOnFirstGlobalItemOfDisplayedList) {\n      container = objectGroups;\n      fromIndex = container.getPosition(\n        selectedGroupWithContext.group.getName()\n      );\n      toIndex = !this.state.searchText\n        ? container.count()\n        : container.getPosition(\n            this.displayedObjectGroupsList[\n              this.displayedObjectGroupsList.length - 1\n            ].group.getName()\n          ) + 1;\n    } else {\n      return;\n    }\n    if (toIndex > fromIndex) toIndex -= 1;\n\n    container.move(fromIndex, toIndex);\n    this._onObjectGroupModified();\n    if (this.sortableList) this.sortableList.forceUpdateGrid();\n  };\n\n  _renderGroupMenuTemplate = (i18n: I18nType) => (\n    groupWithContext: GroupWithContext,\n    index: number\n  ) => [\n    {\n      label: i18n._(t`Duplicate`),\n      click: () => this._onDuplicate(groupWithContext),\n    },\n    { type: 'separator' },\n    {\n      label: i18n._(t`Edit group`),\n      click: () => this.props.onEditGroup(groupWithContext.group),\n    },\n    { type: 'separator' },\n    {\n      label: i18n._(t`Rename`),\n      click: () => this._onEditName(groupWithContext),\n    },\n    {\n      label: i18n._(t`Set as global group`),\n      enabled: !isGroupWithContextGlobal(groupWithContext),\n      click: () => this._setAsGlobalGroup(groupWithContext),\n      visible: this.props.canSetAsGlobalGroup !== false,\n    },\n    {\n      label: i18n._(t`Delete`),\n      click: () => this._onDelete(groupWithContext),\n    },\n    { type: 'separator' },\n    {\n      label: i18n._(t`Add a new group...`),\n      click: this.addGroup,\n    },\n  ];\n\n  render() {\n    const { globalObjectGroups, objectGroups } = this.props;\n    const { searchText } = this.state;\n\n    const objectGroupsList: GroupWithContextList = enumerateGroups(\n      objectGroups\n    ).map(group => ({ group, global: false }));\n    const globalObjectGroupsList: GroupWithContextList = enumerateGroups(\n      globalObjectGroups\n    ).map(group => ({ group, global: true }));\n    this.displayedObjectGroupsList = filterGroupsList(objectGroupsList, {\n      searchText,\n    });\n    this.displayedGlobalObjectGroupsList = filterGroupsList(\n      globalObjectGroupsList,\n      {\n        searchText,\n      }\n    );\n    const fullList = filterGroupsList(\n      [...objectGroupsList, ...globalObjectGroupsList],\n      { searchText }\n    );\n\n    // Force List component to be mounted again if globalObjectGroups or objectGroups\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const listKey = objectGroups.ptr + ';' + globalObjectGroups.ptr;\n\n    const renamedGroupWithContext = this.state.renamedGroupWithContext\n      ? fullList.find(\n          isSameGroupWithContext(this.state.renamedGroupWithContext)\n        )\n      : null;\n\n    return (\n      <Background>\n        <div style={styles.listContainer}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <I18n>\n                {({ i18n }) => (\n                  <SortableVirtualizedItemList\n                    key={listKey}\n                    ref={sortableList => (this.sortableList = sortableList)}\n                    fullList={fullList}\n                    width={width}\n                    height={height}\n                    getItemName={getGroupWithContextName}\n                    getItemId={(groupWithContext, index) => {\n                      return 'group-item-' + index;\n                    }}\n                    isItemBold={isGroupWithContextGlobal}\n                    onEditItem={groupWithContext =>\n                      this.props.onEditGroup(groupWithContext.group)\n                    }\n                    onAddNewItem={this.addGroup}\n                    addNewItemLabel={<Trans>Add a new group</Trans>}\n                    addNewItemId=\"add-new-group-button\"\n                    selectedItems={[]}\n                    onItemSelected={groupWithContext => {\n                      this.setState({\n                        selectedGroupWithContext: groupWithContext,\n                      });\n                    }}\n                    renamedItem={renamedGroupWithContext}\n                    onRename={this._onRename}\n                    buildMenuTemplate={this._renderGroupMenuTemplate(i18n)}\n                    onMoveSelectionToItem={this._moveSelectionTo}\n                    canMoveSelectionToItem={this._canMoveSelectionTo}\n                    reactDndType={groupWithContextReactDndType}\n                  />\n                )}\n              </I18n>\n            )}\n          </AutoSizer>\n        </div>\n        <SearchBar\n          value={searchText}\n          onRequestSearch={() => {}}\n          onChange={text =>\n            this.setState({\n              searchText: text,\n            })\n          }\n        />\n      </Background>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport ObjectGroupEditor from '.';\nimport Dialog from '../UI/Dialog';\nimport { useSerializableObjectCancelableEditor } from '../Utils/SerializableObjectCancelableEditor';\nimport useForceUpdate from '../Utils/UseForceUpdate';\n\ntype Props = {|\n  project: gdProject,\n  group: gdObjectGroup,\n  onApply: () => void,\n  onCancel: () => void,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n|};\n\nconst ObjectGroupEditorDialog = ({\n  project,\n  group,\n  onApply,\n  onCancel,\n  globalObjectsContainer,\n  objectsContainer,\n}: Props) => {\n  const forceUpdate = useForceUpdate();\n  const onCancelChanges = useSerializableObjectCancelableEditor({\n    serializableObject: group,\n    onCancel,\n  });\n\n  return (\n    <Dialog\n      onApply={onApply}\n      key={group.ptr}\n      actions={[\n        <FlatButton\n          key=\"cancel\"\n          label={<Trans>Cancel</Trans>}\n          keyboardFocused\n          onClick={onCancelChanges}\n        />,\n        <FlatButton\n          key=\"apply\"\n          label={<Trans>Apply</Trans>}\n          primary\n          keyboardFocused\n          onClick={onApply}\n        />,\n      ]}\n      noMargin\n      cannotBeDismissed={true}\n      onRequestClose={onCancelChanges}\n      open\n      title={`Edit ${group.getName()} group`}\n    >\n      <ObjectGroupEditor\n        project={project}\n        group={group}\n        globalObjectsContainer={globalObjectsContainer}\n        objectsContainer={objectsContainer}\n        onSizeUpdated={\n          forceUpdate /*Force update to ensure dialog is properly positionned*/\n        }\n      />\n    </Dialog>\n  );\n};\n\nexport default ObjectGroupEditorDialog;\n","// @flow\nimport * as React from 'react';\nimport { type FiltersState, useFilters } from '../../UI/Search/FiltersChooser';\nimport {\n  type Resource,\n  type Author,\n  type License,\n  listAllAuthors,\n  listAllLicenses,\n  listAllResources,\n} from '../../Utils/GDevelopServices/Asset';\nimport { type Filters } from '../../Utils/GDevelopServices/Filters';\nimport { useSearchItem } from '../../UI/Search/UseSearchItem';\n\nconst defaultSearchText = '';\n\ntype ResourceStoreState = {|\n  filters: ?Filters,\n  authors: ?Array<Author>,\n  licenses: ?Array<License>,\n  searchResults: ?Array<Resource>,\n  fetchResourcesAndFilters: () => void,\n  error: ?Error,\n  searchText: string,\n  setSearchText: string => void,\n  filtersState: FiltersState,\n|};\n\nexport const ResourceStoreContext = React.createContext<ResourceStoreState>({\n  filters: null,\n  authors: null,\n  licenses: null,\n  searchResults: null,\n  fetchResourcesAndFilters: () => {},\n  error: null,\n  searchText: '',\n  setSearchText: () => {},\n  filtersState: {\n    chosenFilters: new Set(),\n    addFilter: () => {},\n    removeFilter: () => {},\n    chosenCategory: null,\n    setChosenCategory: () => {},\n  },\n});\n\ntype ResourceStoreStateProviderProps = {|\n  children: React.Node,\n|};\n\nconst getResourceSearchTerms = (resource: Resource) => {\n  return resource.name + '\\n' + resource.tags.join(', ');\n};\n\nexport const ResourceStoreStateProvider = ({\n  children,\n}: ResourceStoreStateProviderProps) => {\n  const [resourcesByUrl, setResourcesByUrl] = React.useState<?{\n    [string]: Resource,\n  }>(null);\n  const [filters, setFilters] = React.useState<?Filters>(null);\n  const [authors, setAuthors] = React.useState<?Array<Author>>(null);\n  const [licenses, setLicenses] = React.useState<?Array<License>>(null);\n  const [error, setError] = React.useState<?Error>(null);\n  const isLoading = React.useRef<boolean>(false);\n\n  const [searchText, setSearchText] = React.useState(defaultSearchText);\n  const filtersState = useFilters();\n\n  const fetchResourcesAndFilters = React.useCallback(\n    () => {\n      // Don't attempt to load again resources and filters if they\n      // were loaded already.\n      if (resourcesByUrl || isLoading.current) return;\n\n      (async () => {\n        setError(null);\n        isLoading.current = true;\n\n        try {\n          const { resources, filters } = await listAllResources();\n          const authors = await listAllAuthors();\n          const licenses = await listAllLicenses();\n\n          const resourcesByUrl = {};\n          resources.forEach(resource => {\n            resourcesByUrl[resource.url] = resource;\n          });\n\n          console.info(\n            `Loaded ${resources.length} resources from the asset store.`\n          );\n          setResourcesByUrl(resourcesByUrl);\n          setFilters(filters);\n          setAuthors(authors);\n          setLicenses(licenses);\n        } catch (error) {\n          console.error(\n            `Unable to load the assets from the asset store:`,\n            error\n          );\n          setError(error);\n        }\n\n        isLoading.current = false;\n      })();\n    },\n    [resourcesByUrl, isLoading]\n  );\n\n  const { chosenCategory, chosenFilters } = filtersState;\n  const searchResults: ?Array<Resource> = useSearchItem(\n    resourcesByUrl,\n    getResourceSearchTerms,\n    searchText,\n    chosenCategory,\n    chosenFilters\n  );\n\n  const resourceStoreState = React.useMemo(\n    () => ({\n      searchResults,\n      fetchResourcesAndFilters,\n      filters,\n      authors,\n      licenses,\n      error,\n      searchText,\n      setSearchText,\n      filtersState,\n    }),\n    [\n      searchResults,\n      error,\n      filters,\n      authors,\n      licenses,\n      searchText,\n      filtersState,\n      fetchResourcesAndFilters,\n    ]\n  );\n\n  return (\n    <ResourceStoreContext.Provider value={resourceStoreState}>\n      {children}\n    </ResourceStoreContext.Provider>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport PlaceholderLoader from '../PlaceholderLoader';\nimport PlaceholderError from '../PlaceholderError';\nimport ErrorBoundary from '../ErrorBoundary';\nimport { AutoSizer, Grid } from 'react-virtualized';\nimport EmptyMessage from '../EmptyMessage';\n\ntype Props<SearchItem> = {|\n  searchItems: ?Array<SearchItem>,\n  renderSearchItem: (item: SearchItem, size: number) => React.Node,\n  error: ?Error,\n  onRetry: () => void,\n  baseSize: number,\n|};\n\nconst styles = {\n  container: { flex: 1 },\n  grid: { overflowX: 'hidden' },\n};\n\nexport const BoxSearchResults = <SearchItem>({\n  searchItems,\n  renderSearchItem,\n  error,\n  onRetry,\n  baseSize,\n}: Props<SearchItem>) => {\n  if (!searchItems) {\n    if (!error) return <PlaceholderLoader />;\n    else {\n      return (\n        <PlaceholderError onRetry={onRetry}>\n          <Trans>\n            Can't load the results. Verify your internet connection or retry\n            later.\n          </Trans>\n        </PlaceholderError>\n      );\n    }\n  } else if (searchItems.length === 0) {\n    return (\n      <EmptyMessage>\n        <Trans>\n          No results returned for your search. Try something else, browse the\n          categories or create your object from scratch!\n        </Trans>\n      </EmptyMessage>\n    );\n  }\n\n  return (\n    <ErrorBoundary>\n      <div style={styles.container}>\n        <AutoSizer>\n          {({ width, height }) => {\n            if (!width || !height) return null;\n\n            const columnCount = Math.max(Math.floor((width - 5) / baseSize), 1);\n            const columnWidth = Math.max(Math.floor(width / columnCount), 30);\n            const rowCount = Math.max(\n              1,\n              Math.ceil(searchItems.length / columnCount)\n            );\n\n            function cellRenderer({ columnIndex, key, rowIndex, style }) {\n              const indexInList = rowIndex * columnCount + columnIndex;\n              const searchItem =\n                indexInList < searchItems.length\n                  ? searchItems[indexInList]\n                  : null;\n\n              return (\n                <div key={key} style={style}>\n                  {searchItem\n                    ? renderSearchItem(searchItem, columnWidth)\n                    : null}\n                </div>\n              );\n            }\n\n            return (\n              <Grid\n                width={width}\n                height={height}\n                columnCount={columnCount}\n                columnWidth={columnWidth}\n                rowHeight={columnWidth}\n                rowCount={rowCount}\n                cellRenderer={cellRenderer}\n                style={styles.grid}\n              />\n            );\n          }}\n        </AutoSizer>\n      </div>\n    </ErrorBoundary>\n  );\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props} viewBox=\"0 -3 24 24\">\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g id=\"Create\" fillRule=\"nonzero\">\n        <polygon\n          id=\"Shape\"\n          fill=\"#2B3990\"\n          points=\"24 8 18 2 18 6 14 6 14 10 18 10 18 14\"\n        />\n        <g id=\"Group-2\" fill=\"#27AAE1\">\n          <rect\n            id=\"Rectangle-path\"\n            transform=\"translate(2.999518, 3.574897) rotate(-45.000000) translate(-2.999518, -3.574897) \"\n            x=\"1.58553176\"\n            y=\"0.746924118\"\n            width=\"2.82797288\"\n            height=\"5.65594576\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            transform=\"translate(10.999518, 11.574897) rotate(-45.000000) translate(-10.999518, -11.574897) \"\n            x=\"9.58553176\"\n            y=\"8.74692412\"\n            width=\"2.82797288\"\n            height=\"5.65594576\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            transform=\"translate(2.999518, 11.574897) rotate(-135.000000) translate(-2.999518, -11.574897) \"\n            x=\"1.58553176\"\n            y=\"8.74692412\"\n            width=\"2.82797288\"\n            height=\"5.65594576\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            transform=\"translate(10.999518, 3.574897) rotate(-135.000000) translate(-10.999518, -3.574897) \"\n            x=\"9.58553176\"\n            y=\"0.746924118\"\n            width=\"2.82797288\"\n            height=\"5.65594576\"\n          />\n        </g>\n      </g>\n    </g>\n  </SvgIcon>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props} viewBox=\"0 -6 24 24\">\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g id=\"Step\">\n        <polygon\n          id=\"Shape\"\n          points=\"0 3 0 6 3 6 3 9 7.5 4.5 3 0 3 3\"\n          fill=\"#2b3990\"\n        />\n        <polygon\n          id=\"polygon6\"\n          points=\"16.5 3 16.5 6 19.5 6 19.5 9 24 4.5 19.5 0 19.5 3\"\n          fill=\"#2b3990\"\n        />\n        <circle\n          id=\"path825\"\n          cx=\"12\"\n          cy=\"4.5\"\n          r=\"2.2509\"\n          fill=\"none\"\n          stroke=\"#27aae1\"\n          strokeWidth=\"1.5\"\n        />\n      </g>\n    </g>\n  </SvgIcon>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props} viewBox=\"0 -3 24 24\">\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g\n        id=\"Destroy\"\n        transform=\"translate(0.000000, -1.000000)\"\n        fillRule=\"nonzero\"\n      >\n        <g id=\"Group\" transform=\"translate(0.000000, 1.000000)\">\n          <polygon\n            id=\"Shape\"\n            fill=\"#2B3990\"\n            points=\"9.92307692 7.07692308 4.38461538 1.53846154 4.38461538 5.23076923 0.692307692 5.23076923 0.692307692 8.92307692 4.38461538 8.92307692 4.38461538 12.6153846\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#27AAE1\"\n            transform=\"translate(10.845138, 3.385446) rotate(-45.000000) translate(-10.845138, -3.385446) \"\n            x=\"9.53992021\"\n            y=\"0.77500965\"\n            width=\"2.6104365\"\n            height=\"5.22087301\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#27AAE1\"\n            transform=\"translate(18.229754, 10.770062) rotate(-45.000000) translate(-18.229754, -10.770062) \"\n            x=\"16.9245356\"\n            y=\"8.15962503\"\n            width=\"2.6104365\"\n            height=\"5.22087301\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#27AAE1\"\n            transform=\"translate(10.846985, 10.770246) rotate(-135.000000) translate(-10.846985, -10.770246) \"\n            x=\"9.54176636\"\n            y=\"8.15980965\"\n            width=\"2.6104365\"\n            height=\"5.22087301\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#27AAE1\"\n            transform=\"translate(18.231600, 3.385631) rotate(-135.000000) translate(-18.231600, -3.385631) \"\n            x=\"16.9263817\"\n            y=\"0.775194265\"\n            width=\"2.6104365\"\n            height=\"5.22087301\"\n          />\n        </g>\n        <g id=\"Group\" opacity=\"0.1\" transform=\"translate(2.538462, 0.692308)\">\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#000000\"\n            transform=\"translate(7.616400, 11.768538) rotate(135.000000) translate(-7.616400, -11.768538) \"\n            x=\"5.98441565\"\n            y=\"10.4633202\"\n            width=\"3.2639687\"\n            height=\"2.6104365\"\n          />\n          <polygon\n            id=\"Shape\"\n            fill=\"#FFFFFF\"\n            points=\"7.38461538 7.38461538 1.83645766 1.87268753 1.83645766 3.7132995 6.46153846 8.30769231\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#FFFFFF\"\n            transform=\"translate(8.308523, 3.693323) rotate(-135.000000) translate(-8.308523, -3.693323) \"\n            x=\"5.69808657\"\n            y=\"2.38810482\"\n            width=\"5.22087301\"\n            height=\"2.6104365\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#FFFFFF\"\n            transform=\"translate(15.693138, 11.077938) rotate(-135.000000) translate(-15.693138, -11.077938) \"\n            x=\"13.082702\"\n            y=\"9.77272021\"\n            width=\"5.22087301\"\n            height=\"2.6104365\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#FFFFFF\"\n            transform=\"translate(9.460009, 9.922714) rotate(45.000000) translate(-9.460009, -9.922714) \"\n            x=\"8.15479058\"\n            y=\"8.94333902\"\n            width=\"2.6104365\"\n            height=\"1.95875045\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#FFFFFF\"\n            transform=\"translate(15.693138, 3.693323) rotate(-135.000000) translate(-15.693138, -3.693323) \"\n            x=\"14.3879202\"\n            y=\"1.08288657\"\n            width=\"2.6104365\"\n            height=\"5.22087301\"\n          />\n        </g>\n      </g>\n    </g>\n  </SvgIcon>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props} viewBox=\"0 0 23.109 23.124\">\n    <g id=\"Action\" transform=\"translate(-92.011 -101.74)\" fillRule=\"nonzero\">\n      <path\n        id=\"path1010\"\n        d=\"m101.01 101.74v2.3203a9.525 9.525 0 0 0-2.0743 0.85473l-1.6459-1.6536-1.9498 1.9523 0.0052 5e-3 -1.7436 1.741 1.635 1.6356a9.398 9.398 0 0 0-0.86765 2.0846h-2.3549v5.2307h2.344a9.525 9.525 0 0 0 0.85731 2.0665l-1.6511 1.6536 3.7042 3.7042 1.6567-1.6562a9.4245 9.4245 0 0 0 2.0846 0.84904v2.3363h5.2178v-2.3518a9.4562 9.4562 0 0 0 2.0557-0.8599l1.6485 1.6485 1.8226-1.8231-5e-3 -5e-3 1.8707-1.8707-1.6588-1.6588a9.5806 9.5806 0 0 0 0.83871-2.0324h2.3228v-5.2306h-2.3125a9.525 9.525 0 0 0-0.84905-2.0608l1.6428-1.6407-3.7042-3.7042-1.6376 1.6382a9.4932 9.4932 0 0 0-2.0397-0.85215v-2.3203z\"\n        fill=\"#4db0e1\"\n      />\n      <path\n        id=\"path8-6-0\"\n        d=\"m92.093 110.66v5.2308h2.3125a9.525 9.525 0 0 0 0.84931 2.0611l-1.6431 1.6404 3.7042 3.7042 1.6378-1.6378a9.4932 9.4932 0 0 0 2.0399 0.85196v2.3204h5.2123v-2.3204a9.525 9.525 0 0 0 2.0743-0.8546l1.6457 1.6536 1.95-1.9526-16.404-16.264-1.8759 1.8759 1.6589 1.6589a9.5806 9.5806 0 0 0-0.83873 2.032z\"\n        fill=\"#4db0e1\"\n      />\n      <path\n        id=\"path10-3-0\"\n        d=\"m93.599 106.96 1.6351 1.6351a9.398 9.398 0 0 0-0.86783 2.0849h-2.3548v5.2308h2.3442a9.525 9.525 0 0 0 0.85725 2.0664l-1.651 1.6536 3.7042 3.7042 1.6563-1.6563a9.4245 9.4245 0 0 0 2.0849 0.84931v2.3363h5.2176v-2.3521a9.4562 9.4562 0 0 0 2.0558-0.8599l1.6484 1.6484 1.823-1.823-16.404-16.264z\"\n        fill=\"#283782\"\n        fillOpacity=\".2\"\n      />\n      <path\n        id=\"path871-7\"\n        d=\"m106.69 107.2h-3.4025l3.7809 5.9346-3.7809 5.9346h3.4025l3.7809-5.9346z\"\n        fill=\"#283983\"\n      />\n      <path\n        id=\"path873-9\"\n        d=\"m101.39 107.2h-3.4025l3.7809 5.9346-3.7809 5.9346h3.4025l3.7835-5.9346z\"\n        fill=\"#283983\"\n      />\n    </g>\n  </SvgIcon>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props} viewBox=\"0 0 23.109 23.124\">\n    <g id=\"Action\" fill=\"#283983\">\n      <path\n        id=\"path1010\"\n        d=\"m8.9958 0v2.3203a9.525 9.525 0 0 0-2.0743 0.85473l-1.6459-1.6536-1.9498 1.9523 0.0052 5e-3 -1.7436 1.741 1.635 1.6356a9.398 9.398 0 0 0-0.86765 2.0846h-2.3549v5.2307h2.344a9.525 9.525 0 0 0 0.85731 2.0665l-1.6511 1.6536 3.7042 3.7042 1.6567-1.6562a9.4245 9.4245 0 0 0 2.0846 0.84904v2.3363h5.2178v-2.3518a9.4562 9.4562 0 0 0 2.0557-0.8599l1.6485 1.6485 1.8226-1.8231-0.0052-5e-3 1.8707-1.8707-1.6588-1.6588a9.5806 9.5806 0 0 0 0.83871-2.0324h2.3229v-5.2306h-2.3125a9.525 9.525 0 0 0-0.84904-2.0608l1.6428-1.6407-3.7042-3.7042-1.6376 1.6382a9.4932 9.4932 0 0 0-2.0397-0.85215v-2.3203z\"\n        fill=\"#4db0e1\"\n      />\n      <path\n        id=\"path8-6-0\"\n        d=\"m0.081856 8.9161v5.2308h2.3125a9.525 9.525 0 0 0 0.84931 2.0611l-1.6431 1.6404 3.7042 3.7042 1.6378-1.6378a9.4932 9.4932 0 0 0 2.0399 0.85196v2.3204h5.2123v-2.3204a9.525 9.525 0 0 0 2.0743-0.8546l1.6457 1.6536 1.95-1.9526-16.404-16.264-1.8759 1.8759 1.6589 1.6589a9.5806 9.5806 0 0 0-0.83873 2.032z\"\n        fill=\"#4db0e1\"\n      />\n      <path\n        id=\"path10-3-0\"\n        d=\"m1.5875 5.2198 1.6351 1.6351a9.398 9.398 0 0 0-0.86783 2.0849h-2.3548v5.2308h2.3442a9.525 9.525 0 0 0 0.85725 2.0664l-1.651 1.6536 3.7042 3.7042 1.6563-1.6563a9.4245 9.4245 0 0 0 2.0849 0.84931v2.3363h5.2176v-2.3521a9.4562 9.4562 0 0 0 2.0558-0.8599l1.6484 1.6484 1.823-1.823-16.404-16.264z\"\n        fill=\"#283782\"\n        fillOpacity=\".2\"\n      />\n      <path\n        id=\"path821\"\n        d=\"m13.081 13.524h-2.7983v-0.37982q0-0.63562 0.2558-1.124 0.2558-0.49609 1.0775-1.2557l0.49609-0.44958q0.44183-0.40308 0.64337-0.75964 0.20929-0.35657 0.20929-0.71313 0-0.5426-0.37207-0.84491-0.37207-0.31006-1.0387-0.31006-0.62787 0-1.3565 0.26355-0.72864 0.2558-1.5193 0.7674v-2.434q0.93793-0.32556 1.7131-0.48059 0.77515-0.15503 1.496-0.15503 1.8914 0 2.8835 0.77515 0.99219 0.7674 0.99219 2.2479 0 0.75964-0.30231 1.3643-0.30231 0.59686-1.0309 1.2867l-0.49609 0.44183q-0.5271 0.48059-0.68988 0.77515-0.16278 0.2868-0.16278 0.63562zm-2.7983 1.1472h2.7983v2.7595h-2.7983z\"\n        fill=\"#283983\"\n      />\n    </g>\n  </SvgIcon>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props} viewBox=\"0 0 23.109 23.124\">\n    <g id=\"Expression\">\n      <path\n        id=\"path1010\"\n        d=\"m8.9958 0v2.3203a9.525 9.525 0 0 0-2.0743 0.85473l-1.6459-1.6536-1.9498 1.9523 0.0052 5e-3 -1.7436 1.741 1.635 1.6356a9.398 9.398 0 0 0-0.86765 2.0846h-2.3549v5.2307h2.344a9.525 9.525 0 0 0 0.85731 2.0665l-1.6511 1.6536 3.7042 3.7042 1.6567-1.6562a9.4245 9.4245 0 0 0 2.0846 0.84904v2.3363h5.2178v-2.3518a9.4562 9.4562 0 0 0 2.0557-0.8599l1.6485 1.6485 1.8226-1.8232-0.0052-5e-3 1.8707-1.8707-1.6588-1.6588a9.5806 9.5806 0 0 0 0.83871-2.0324h2.3229v-5.2306h-2.3125a9.525 9.525 0 0 0-0.84904-2.0608l1.6428-1.6407-3.7042-3.7042-1.6376 1.6382a9.4932 9.4932 0 0 0-2.0397-0.85215v-2.3203z\"\n        fill=\"#4db0e1\"\n        strokeWidth=\".26458\"\n      />\n      <path\n        id=\"path8-6-0\"\n        d=\"m0.081857 8.9161v5.2308h2.3125a9.525 9.525 0 0 0 0.84931 2.0611l-1.6431 1.6404 3.7042 3.7042 1.6378-1.6378a9.4932 9.4932 0 0 0 2.0399 0.85196v2.3204h5.2123v-2.3204a9.525 9.525 0 0 0 2.0743-0.8546l1.6457 1.6536 1.95-1.9526-16.404-16.264-1.8759 1.8759 1.6589 1.6589a9.5806 9.5806 0 0 0-0.83873 2.032z\"\n        fill=\"#4db0e1\"\n        strokeWidth=\".26458\"\n      />\n      <path\n        id=\"path10-3-0\"\n        d=\"m1.5875 5.2198 1.6351 1.6351a9.398 9.398 0 0 0-0.86783 2.0849h-2.3548v5.2308h2.3442a9.525 9.525 0 0 0 0.85725 2.0664l-1.651 1.6536 3.7042 3.7042 1.6563-1.6563a9.4245 9.4245 0 0 0 2.0849 0.84931v2.3363h5.2176v-2.3522a9.4562 9.4562 0 0 0 2.0558-0.85989l1.6484 1.6484 1.823-1.823-16.404-16.264z\"\n        fill=\"#283782\"\n        fillOpacity=\".2\"\n        strokeWidth=\".26458\"\n      />\n      <g id=\"text1262\" fill=\"#283983\" strokeWidth=\".21798\" aria-label=\"f(x)\">\n        <path\n          id=\"path936\"\n          d=\"m8.4202 7.2384v1.1256h-0.94835q-0.36401 0-0.5077 0.13411-0.14369 0.12932-0.14369 0.45502v0.37359h1.4656v1.2262h-1.4656v4.1383h-1.7147v-4.1383h-0.85256v-1.2262h0.85256v-0.37359q0-0.87651 0.48854-1.2932 0.48854-0.42149 1.5135-0.42149z\"\n        />\n        <path\n          id=\"path938\"\n          d=\"m10.822 15.984h-1.4225q-0.73282-1.183-1.0825-2.2463-0.34964-1.0681-0.34964-2.117t0.34964-2.1218q0.35443-1.0777 1.0825-2.2511h1.4225q-0.61308 1.1351-0.91961 2.2224-0.30654 1.0825-0.30654 2.141 0 1.0585 0.30175 2.1458 0.30654 1.0873 0.9244 2.2272z\"\n        />\n        <path\n          id=\"path940\"\n          d=\"m12.277 11.947-1.935-2.6199h1.8153l1.0968 1.5902 1.1112-1.5902h1.8153l-1.935 2.6104 2.0308 2.754h-1.8153l-1.207-1.6955-1.1926 1.6955h-1.8153z\"\n        />\n        <path\n          id=\"path942\"\n          d=\"m15.771 15.984q0.61308-1.1399 0.91961-2.2272t0.30654-2.1458q0-1.0585-0.30654-2.141-0.30654-1.0873-0.91961-2.2224h1.4225q0.72803 1.1735 1.0777 2.2511 0.35444 1.0729 0.35444 2.1218t-0.34964 2.117q-0.34964 1.0633-1.0825 2.2463z\"\n        />\n      </g>\n    </g>\n  </SvgIcon>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props} viewBox=\"0 -6 24 24\">\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g id=\"Activate\" fillRule=\"nonzero\">\n        <rect\n          id=\"Rectangle-path\"\n          fill=\"#27AAE1\"\n          x=\"0\"\n          y=\"0\"\n          width=\"24\"\n          height=\"10.2857143\"\n        />\n        <rect\n          id=\"Rectangle-path\"\n          fill=\"#2B3990\"\n          x=\"1.71428571\"\n          y=\"1.71428571\"\n          width=\"10.2857143\"\n          height=\"6.85714286\"\n        />\n        <polygon\n          id=\"Shape\"\n          fill=\"#FFFFFF\"\n          points=\"20.5710245 1.71428571 18.8571429 3.42897546 17.1432612 5.14285714 15.4285714 6.85673883 17.1432612 8.57142857 18.8571429 6.85673883 20.5710245 5.14285714 22.2857143 3.42897546\"\n        />\n        <polygon\n          id=\"Shape\"\n          fill=\"#FFFFFF\"\n          points=\"18.8567388 3.42857143 17.1428571 5.14326117 15.4289755 3.42857143 13.7142857 5.14326117 15.4289755 6.85714286 18.8567388 6.85714286 20.5714286 5.14326117\"\n        />\n      </g>\n    </g>\n  </SvgIcon>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props} viewBox=\"0 -6 24 24\">\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g id=\"Deactivate\" fillRule=\"nonzero\">\n        <rect\n          id=\"Rectangle-path\"\n          fill=\"#2B3990\"\n          x=\"0\"\n          y=\"0\"\n          width=\"24\"\n          height=\"10.2857143\"\n        />\n        <polygon\n          id=\"Shape\"\n          fill=\"#FFFFFF\"\n          points=\"6.85673883 1.71428571 5.14285714 3.42897546 3.42897546 1.71428571 1.71428571 3.42897546 3.42897546 5.14285714 1.71428571 6.85673883 3.42897546 8.57142857 5.14285714 6.85673883 6.85673883 8.57142857 8.57142857 6.85673883 6.85673883 5.14285714 8.57142857 3.42897546\"\n        />\n        <rect\n          id=\"Rectangle-path\"\n          fill=\"#27AAE1\"\n          x=\"12\"\n          y=\"1.71428571\"\n          width=\"10.2857143\"\n          height=\"6.85714286\"\n        />\n      </g>\n    </g>\n  </SvgIcon>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React from 'react';\nimport EventsSheet, { type EventsSheetInterface } from '../../EventsSheet';\nimport RaisedButton from '../../UI/RaisedButton';\nimport PlaceholderMessage from '../../UI/PlaceholderMessage';\nimport {\n  type RenderEditorContainerProps,\n  type RenderEditorContainerPropsWithRef,\n} from './BaseEditor';\nimport ExternalPropertiesDialog, {\n  type ExternalProperties,\n} from './ExternalPropertiesDialog';\nimport Text from '../../UI/Text';\nimport { Line } from '../../UI/Grid';\nimport { sendEventsExtractedAsFunction } from '../../Utils/Analytics/EventSender';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 1,\n  },\n};\n\ntype State = {|\n  externalPropertiesDialogOpen: boolean,\n|};\n\nexport class ExternalEventsEditorContainer extends React.Component<\n  RenderEditorContainerProps,\n  State\n> {\n  editor: ?EventsSheetInterface;\n\n  state = {\n    externalPropertiesDialogOpen: false,\n  };\n\n  shouldComponentUpdate(nextProps: RenderEditorContainerProps) {\n    // Prevent any update to the editor if the editor is not active,\n    // and so not visible to the user.\n    return nextProps.isActive;\n  }\n\n  getProject(): ?gdProject {\n    return this.props.project;\n  }\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  forceUpdateEditor() {\n    // No updates to be done.\n  }\n\n  getExternalEvents(): ?gdExternalEvents {\n    const { project, projectItemName } = this.props;\n    if (!project || !projectItemName) return null;\n\n    if (!project.hasExternalEventsNamed(projectItemName)) {\n      return null;\n    }\n    return project.getExternalEvents(projectItemName);\n  }\n\n  getLayout(): ?gdLayout {\n    const { project } = this.props;\n    if (!project) return null;\n\n    const layoutName = this.getAssociatedLayoutName();\n    if (!layoutName) return null;\n\n    return project.getLayout(layoutName);\n  }\n\n  getAssociatedLayoutName(): ?string {\n    const { project } = this.props;\n    if (!project) return null;\n\n    const externalEvents = this.getExternalEvents();\n    if (!externalEvents) return null;\n\n    const layoutName = externalEvents.getAssociatedLayout();\n    if (!project.hasLayoutNamed(layoutName)) {\n      return null;\n    }\n\n    return layoutName;\n  }\n\n  saveExternalProperties = (externalProps: ExternalProperties) => {\n    const externalEvents = this.getExternalEvents();\n    if (!externalEvents) return;\n\n    externalEvents.setAssociatedLayout(externalProps.layoutName);\n    this.setState(\n      {\n        externalPropertiesDialogOpen: false,\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  openExternalPropertiesDialog = () => {\n    this.setState({\n      externalPropertiesDialogOpen: true,\n    });\n  };\n\n  onBeginCreateEventsFunction = () => {\n    sendEventsExtractedAsFunction({\n      step: 'begin',\n      parentEditor: 'external-events-editor',\n    });\n  };\n\n  onCreateEventsFunction = (extensionName, eventsFunction) => {\n    this.props.onCreateEventsFunction(\n      extensionName,\n      eventsFunction,\n      'external-events-editor'\n    );\n  };\n\n  render() {\n    const { project, projectItemName } = this.props;\n    const externalEvents = this.getExternalEvents();\n    const layout = this.getLayout();\n\n    if (!externalEvents || !project) {\n      //TODO: Error component\n      return <div>No external events called {projectItemName} found!</div>;\n    }\n\n    return (\n      <div style={styles.container}>\n        {layout && (\n          <EventsSheet\n            ref={editor => (this.editor = editor)}\n            setToolbar={this.props.setToolbar}\n            onOpenLayout={this.props.onOpenLayout}\n            resourceSources={this.props.resourceSources}\n            onChooseResource={this.props.onChooseResource}\n            resourceExternalEditors={this.props.resourceExternalEditors}\n            openInstructionOrExpression={this.props.openInstructionOrExpression}\n            onCreateEventsFunction={this.onCreateEventsFunction}\n            onBeginCreateEventsFunction={this.onBeginCreateEventsFunction}\n            unsavedChanges={this.props.unsavedChanges}\n            project={project}\n            scope={{\n              layout,\n              externalEvents,\n            }}\n            globalObjectsContainer={project}\n            objectsContainer={layout}\n            events={externalEvents.getEvents()}\n            onOpenSettings={this.openExternalPropertiesDialog}\n            onOpenExternalEvents={this.props.onOpenExternalEvents}\n          />\n        )}\n        {!layout && (\n          <PlaceholderMessage>\n            <Text>\n              <Trans>\n                To edit the external events, choose the scene in which it will\n                be included:\n              </Trans>\n            </Text>\n            <Line justifyContent=\"center\">\n              <RaisedButton\n                label={<Trans>Choose the scene</Trans>}\n                primary\n                onClick={this.openExternalPropertiesDialog}\n              />\n            </Line>\n          </PlaceholderMessage>\n        )}\n        <ExternalPropertiesDialog\n          title={<Trans>Configure the external events</Trans>}\n          helpTexts={[\n            <Trans>\n              In order to use these external events, you still need to add a\n              \"Link\" event in the events sheet of the corresponding scene\n            </Trans>,\n          ]}\n          open={this.state.externalPropertiesDialogOpen}\n          project={project}\n          onChoose={this.saveExternalProperties}\n          layoutName={this.getAssociatedLayoutName()}\n          onClose={() => this.setState({ externalPropertiesDialogOpen: false })}\n        />\n      </div>\n    );\n  }\n}\n\nexport const renderExternalEventsEditorContainer = (\n  props: RenderEditorContainerPropsWithRef\n) => <ExternalEventsEditorContainer {...props} />;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport FlatButton from '../../UI/FlatButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Dialog from '../../UI/Dialog';\nimport { mapFor } from '../../Utils/MapFor';\nimport Text from '../../UI/Text';\nimport BackgroundText from '../../UI/BackgroundText';\nimport { Line, Column } from '../../UI/Grid';\n\nexport type ExternalProperties = {|\n  layoutName: string,\n|};\n\ntype Props = {|\n  open: boolean,\n  onChoose: ExternalProperties => void,\n  layoutName?: ?string,\n  onClose: () => void,\n  project: gdProject,\n  title?: React.Node,\n  helpTexts?: Array<React.Node>,\n|};\n\nexport default function ExternalPropertiesDialog({\n  open,\n  onChoose,\n  layoutName,\n  onClose,\n  project,\n  title,\n  helpTexts,\n}: Props) {\n  const initialLayoutName = layoutName || '';\n  const [selectedLayoutName, setSelectedLayoutName] = React.useState<string>(\n    initialLayoutName\n  );\n  const onClick = React.useCallback(\n    () => {\n      if (!selectedLayoutName) return;\n\n      const externalProperties: ExternalProperties = {\n        layoutName: selectedLayoutName,\n      };\n      onChoose(externalProperties);\n    },\n    [onChoose, selectedLayoutName]\n  );\n\n  const actions = [\n    <FlatButton\n      key=\"cancel\"\n      label={<Trans>Cancel</Trans>}\n      primary={false}\n      onClick={onClose}\n    />,\n    <FlatButton\n      key=\"choose\"\n      label={<Trans>Choose</Trans>}\n      primary\n      keyboardFocused\n      onClick={onClick}\n      disabled={!selectedLayoutName}\n    />,\n  ];\n\n  const layoutNames = mapFor(0, project.getLayoutsCount(), i => {\n    return project.getLayoutAt(i).getName();\n  });\n\n  return (\n    <Dialog\n      actions={actions}\n      open={open}\n      title={title}\n      onRequestClose={onClose}\n      cannotBeDismissed={false}\n      maxWidth=\"sm\"\n      onApply={onClick}\n    >\n      <Column>\n        {helpTexts &&\n          helpTexts.map(helpText => (\n            <Line>\n              <BackgroundText>{helpText}</BackgroundText>\n            </Line>\n          ))}\n        <Line>\n          <Text>\n            <Trans>Choose the associated scene:</Trans>\n          </Text>\n        </Line>\n        <RadioGroup\n          aria-label=\"Associated scene\"\n          name=\"associated-layout\"\n          value={selectedLayoutName}\n          onChange={event => setSelectedLayoutName(event.target.value)}\n        >\n          {layoutNames.map(name => (\n            <FormControlLabel\n              key={name}\n              value={name}\n              control={<Radio color=\"primary\" />}\n              label={name}\n            />\n          ))}\n        </RadioGroup>\n      </Column>\n    </Dialog>\n  );\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport SceneEditor from '../../SceneEditor';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../../Utils/Serializer';\nimport PlaceholderMessage from '../../UI/PlaceholderMessage';\nimport {\n  type RenderEditorContainerProps,\n  type RenderEditorContainerPropsWithRef,\n} from './BaseEditor';\nimport ExternalPropertiesDialog, {\n  type ExternalProperties,\n} from './ExternalPropertiesDialog';\nimport { Line } from '../../UI/Grid';\nimport Text from '../../UI/Text';\nimport { prepareInstancesEditorSettings } from '../../InstancesEditor/InstancesEditorSettings';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 1,\n  },\n};\n\ntype State = {|\n  externalPropertiesDialogOpen: boolean,\n|};\n\nexport class ExternalLayoutEditorContainer extends React.Component<\n  RenderEditorContainerProps,\n  State\n> {\n  editor: ?SceneEditor;\n  state = {\n    externalPropertiesDialogOpen: false,\n  };\n\n  getProject(): ?gdProject {\n    return this.props.project;\n  }\n\n  shouldComponentUpdate(nextProps: RenderEditorContainerProps) {\n    // This optimization is a bit more cautious than the traditional one, to still allow\n    // children, and in particular SceneEditor and InstancesEditor, to be notified when isActive\n    // goes from true to false (in which case PIXI rendering is halted). If isActive was false\n    // and remains false, it's safe to stop update here (PIXI rendering is already halted).\n    if (!this.props.isActive && !nextProps.isActive) {\n      return false;\n    }\n\n    return true;\n  }\n\n  componentDidMount() {\n    if (this.props.isActive) {\n      const { projectItemName } = this.props;\n      const layout = this.getLayout();\n      this.props.setPreviewedLayout(\n        layout ? layout.getName() : null,\n        projectItemName\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps: RenderEditorContainerProps) {\n    if (!prevProps.isActive && this.props.isActive) {\n      const { projectItemName } = this.props;\n      const layout = this.getLayout();\n      this.props.setPreviewedLayout(\n        layout ? layout.getName() : null,\n        projectItemName\n      );\n    }\n  }\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  forceUpdateEditor() {\n    // No updates to be done.\n  }\n\n  getExternalLayout(): ?gdExternalLayout {\n    const { project, projectItemName } = this.props;\n    if (!project || !projectItemName) return null;\n\n    if (!project.hasExternalLayoutNamed(projectItemName)) {\n      return null;\n    }\n    return project.getExternalLayout(projectItemName);\n  }\n\n  getLayout(): ?gdLayout {\n    const { project } = this.props;\n    if (!project) return null;\n\n    const layoutName = this.getAssociatedLayoutName();\n    if (!layoutName) return;\n\n    return project.getLayout(layoutName);\n  }\n\n  getAssociatedLayoutName(): ?string {\n    const { project } = this.props;\n    if (!project) return null;\n\n    const externalLayout = this.getExternalLayout();\n    if (!externalLayout) return null;\n\n    const layoutName = externalLayout.getAssociatedLayout();\n    if (!project.hasLayoutNamed(layoutName)) {\n      return null;\n    }\n\n    return layoutName;\n  }\n\n  saveExternalProperties = (externalProps: ExternalProperties) => {\n    const externalLayout = this.getExternalLayout();\n    if (!externalLayout) return;\n\n    externalLayout.setAssociatedLayout(externalProps.layoutName);\n    this.setState(\n      {\n        externalPropertiesDialogOpen: false,\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  openExternalPropertiesDialog = () => {\n    this.setState({\n      externalPropertiesDialogOpen: true,\n    });\n  };\n\n  saveUiSettings = () => {\n    const layout = this.getExternalLayout();\n    const editor = this.editor;\n\n    if (editor && layout) {\n      unserializeFromJSObject(\n        layout.getAssociatedEditorSettings(),\n        editor.getInstancesEditorSettings()\n      );\n    }\n  };\n\n  render() {\n    const { project, projectItemName, isActive } = this.props;\n    const externalLayout = this.getExternalLayout();\n    const layout = this.getLayout();\n\n    if (!externalLayout || !project) {\n      //TODO: Error component\n      return <div>No external layout called {projectItemName} found!</div>;\n    }\n\n    return (\n      <div style={styles.container}>\n        {layout && (\n          <SceneEditor\n            setToolbar={this.props.setToolbar}\n            resourceSources={this.props.resourceSources}\n            onChooseResource={this.props.onChooseResource}\n            resourceExternalEditors={this.props.resourceExternalEditors}\n            unsavedChanges={this.props.unsavedChanges}\n            hotReloadPreviewButtonProps={this.props.hotReloadPreviewButtonProps}\n            ref={editor => (this.editor = editor)}\n            project={project}\n            layout={layout}\n            initialInstances={externalLayout.getInitialInstances()}\n            getInitialInstancesEditorSettings={() =>\n              prepareInstancesEditorSettings(\n                serializeToJSObject(\n                  externalLayout.getAssociatedEditorSettings()\n                )\n              )\n            }\n            onOpenEvents={this.props.onOpenEvents}\n            onOpenMoreSettings={this.openExternalPropertiesDialog}\n            isActive={isActive}\n          />\n        )}\n        {!layout && (\n          <PlaceholderMessage>\n            <Text>\n              <Trans>\n                To edit the external layout, choose the scene in which it will\n                be included:\n              </Trans>\n            </Text>\n            <Line justifyContent=\"center\">\n              <RaisedButton\n                label={<Trans>Choose the scene</Trans>}\n                primary\n                onClick={this.openExternalPropertiesDialog}\n              />\n            </Line>\n          </PlaceholderMessage>\n        )}\n        <ExternalPropertiesDialog\n          title={<Trans>Configure the external layout</Trans>}\n          helpTexts={[\n            <Trans>\n              In order to see your objects in the scene, you need to add an\n              action \"Create objects from external layout\" in your events sheet.\n            </Trans>,\n            <Trans>\n              You can also launch a preview from this external layout, but\n              remember that it will still create objects from the scene, as well\n              as trigger its events. Make sure to disable any action loading the\n              external layout before doing so to avoid having duplicate objects!\n            </Trans>,\n          ]}\n          open={this.state.externalPropertiesDialogOpen}\n          project={project}\n          layoutName={this.getAssociatedLayoutName()}\n          onChoose={this.saveExternalProperties}\n          onClose={() => this.setState({ externalPropertiesDialogOpen: false })}\n        />\n      </div>\n    );\n  }\n}\n\nexport const renderExternalLayoutEditorContainer = (\n  props: RenderEditorContainerPropsWithRef\n) => <ExternalLayoutEditorContainer {...props} />;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport uniq from 'lodash/uniq';\nimport ObjectsList from '../ObjectsList';\nimport ObjectGroupsList from '../ObjectGroupsList';\nimport ObjectsRenderingService from '../ObjectsRendering/ObjectsRenderingService';\nimport InstancesEditor from '../InstancesEditor';\nimport InstancePropertiesEditor from '../InstancesEditor/InstancePropertiesEditor';\nimport InstancesList from '../InstancesEditor/InstancesList';\nimport LayersList from '../LayersList';\nimport LayerRemoveDialog from '../LayersList/LayerRemoveDialog';\nimport LayerEditorDialog from '../LayersList/LayerEditorDialog';\nimport VariablesEditorDialog from '../VariablesList/VariablesEditorDialog';\nimport ObjectEditorDialog from '../ObjectEditor/ObjectEditorDialog';\nimport ObjectGroupEditorDialog from '../ObjectGroupEditor/ObjectGroupEditorDialog';\nimport InstancesSelection from '../InstancesEditor/InstancesSelection';\nimport SetupGridDialog from './SetupGridDialog';\nimport ScenePropertiesDialog from './ScenePropertiesDialog';\nimport { type ObjectEditorTab } from '../ObjectEditor/ObjectEditorDialog';\nimport Toolbar from './Toolbar';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\nimport Clipboard, { SafeExtractor } from '../Utils/Clipboard';\nimport Window from '../Utils/Window';\nimport FullSizeInstancesEditorWithScrollbars from '../InstancesEditor/FullSizeInstancesEditorWithScrollbars';\nimport EditorMosaic from '../UI/EditorMosaic';\nimport DismissableInfoBar from '../UI/Messages/DismissableInfoBar';\nimport ContextMenu, { type ContextMenuInterface } from '../UI/Menu/ContextMenu';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport { shortenString } from '../Utils/StringHelpers';\nimport getObjectByName from '../Utils/GetObjectByName';\nimport UseSceneEditorCommands from './UseSceneEditorCommands';\nimport { type InstancesEditorSettings } from '../InstancesEditor/InstancesEditorSettings';\n\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport {\n  type HistoryState,\n  undo,\n  redo,\n  canUndo,\n  canRedo,\n  getHistoryInitialState,\n  saveToHistory,\n} from '../Utils/History';\nimport PixiResourcesLoader from '../ObjectsRendering/PixiResourcesLoader';\nimport {\n  type ObjectWithContext,\n  type GroupWithContext,\n  enumerateObjects,\n} from '../ObjectsList/EnumerateObjects';\nimport TagsButton from '../UI/EditorMosaic/TagsButton';\nimport CloseButton from '../UI/EditorMosaic/CloseButton';\nimport {\n  type SelectedTags,\n  buildTagsMenuTemplate,\n  getTagsFromString,\n} from '../Utils/TagsHelper';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\nimport SceneVariablesDialog from './SceneVariablesDialog';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport { onObjectAdded, onInstanceAdded } from '../Hints/ObjectsAdditionalWork';\nimport { type InfoBarDetails } from '../Hints/ObjectsAdditionalWork';\nimport { type HotReloadPreviewButtonProps } from '../HotReload/HotReloadPreviewButton';\nimport EventsRootVariablesFinder from '../Utils/EventsRootVariablesFinder';\nimport { MOVEMENT_BIG_DELTA } from '../UI/KeyboardShortcuts/DeprecatedKeyboardShortcuts';\n\nconst gd: libGDevelop = global.gd;\n\nconst INSTANCES_CLIPBOARD_KIND = 'Instances';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 1,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n};\n\nconst initialMosaicEditorNodes = {\n  direction: 'row',\n  first: 'properties',\n  splitPercentage: 23,\n  second: {\n    direction: 'row',\n    first: 'instances-editor',\n    second: 'objects-list',\n    splitPercentage: 77,\n  },\n};\n\nconst initialMosaicEditorNodesSmallWindow = {\n  direction: 'row',\n  first: 'instances-editor',\n  second: 'objects-list',\n  splitPercentage: 70,\n};\n\ntype Props = {|\n  initialInstances: gdInitialInstancesContainer,\n  getInitialInstancesEditorSettings: () => InstancesEditorSettings,\n  layout: gdLayout,\n  onEditObject?: ?(object: gdObject) => void,\n  onOpenMoreSettings?: ?() => void,\n  onOpenEvents: (sceneName: string) => void,\n  project: gdProject,\n  setToolbar: (?React.Node) => void,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  isActive: boolean,\n  unsavedChanges?: ?UnsavedChanges,\n\n  // Preview:\n  hotReloadPreviewButtonProps: HotReloadPreviewButtonProps,\n|};\n\ntype State = {|\n  setupGridOpen: boolean,\n  scenePropertiesDialogOpen: boolean,\n  layersListOpen: boolean,\n  layerRemoveDialogOpen: boolean,\n  onCloseLayerRemoveDialog: ?(doRemove: boolean, newLayer: string) => void,\n  layerRemoved: ?string,\n  editedLayer: ?gdLayer,\n  editedLayerInitialTab: 'properties' | 'effects',\n  editedObjectWithContext: ?ObjectWithContext,\n  editedObjectInitialTab: ?ObjectEditorTab,\n  variablesEditedInstance: ?gdInitialInstance,\n  selectedObjectNames: Array<string>,\n  newObjectInstanceSceneCoordinates: ?[number, number],\n\n  editedGroup: ?gdObjectGroup,\n\n  instancesEditorSettings: Object,\n  history: HistoryState,\n\n  showObjectsListInfoBar: boolean,\n  layoutVariablesDialogOpen: boolean,\n  showPropertiesInfoBar: boolean,\n  showLayersInfoBar: boolean,\n  showInstancesInfoBar: boolean,\n  showAdditionalWorkInfoBar: boolean,\n  additionalWorkInfoBar: InfoBarDetails,\n\n  // State for tags of objects:\n  selectedObjectTags: SelectedTags,\n|};\n\ntype CopyCutPasteOptions = { useLastCursorPosition?: boolean };\n\nexport default class SceneEditor extends React.Component<Props, State> {\n  static defaultProps = {\n    setToolbar: () => {},\n  };\n\n  instancesSelection: InstancesSelection;\n  editor: ?InstancesEditor;\n  contextMenu: ?ContextMenuInterface;\n  editorMosaic: ?EditorMosaic;\n  _objectsList: ?ObjectsList;\n  _layersList: ?LayersList;\n  _propertiesEditor: ?InstancePropertiesEditor;\n  _instancesList: ?InstancesList;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.instancesSelection = new InstancesSelection();\n    this.state = {\n      setupGridOpen: false,\n      scenePropertiesDialogOpen: false,\n      layersListOpen: false,\n      layerRemoveDialogOpen: false,\n      onCloseLayerRemoveDialog: null,\n      layerRemoved: null,\n      editedLayer: null,\n      editedLayerInitialTab: 'properties',\n      editedObjectWithContext: null,\n      editedObjectInitialTab: 'properties',\n      variablesEditedInstance: null,\n      selectedObjectNames: [],\n      newObjectInstanceSceneCoordinates: null,\n      editedGroup: null,\n\n      instancesEditorSettings: props.getInitialInstancesEditorSettings(),\n      history: getHistoryInitialState(props.initialInstances, {\n        historyMaxSize: 50,\n      }),\n\n      showObjectsListInfoBar: false,\n      layoutVariablesDialogOpen: false,\n      showPropertiesInfoBar: false,\n      showLayersInfoBar: false,\n      showInstancesInfoBar: false,\n\n      showAdditionalWorkInfoBar: false,\n      additionalWorkInfoBar: {\n        identifier: 'default-additional-work',\n        message: '',\n        touchScreenMessage: '',\n      },\n\n      selectedObjectTags: [],\n    };\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (this.state.history !== prevState.history)\n      if (this.props.unsavedChanges)\n        this.props.unsavedChanges.triggerUnsavedChanges();\n  }\n\n  getInstancesEditorSettings() {\n    return this.state.instancesEditorSettings;\n  }\n\n  updateToolbar() {\n    this.props.setToolbar(\n      <Toolbar\n        instancesSelection={this.instancesSelection}\n        openObjectsList={this.openObjectsList}\n        openObjectGroupsList={this.openObjectGroupsList}\n        openProperties={this.openProperties}\n        deleteSelection={this.deleteSelection}\n        toggleInstancesList={this.toggleInstancesList}\n        toggleLayersList={this.toggleLayersList}\n        toggleWindowMask={this.toggleWindowMask}\n        toggleGrid={this.toggleGrid}\n        isGridShown={() => !!this.state.instancesEditorSettings.grid}\n        isWindowMaskShown={() =>\n          !!this.state.instancesEditorSettings.windowMask\n        }\n        openSetupGrid={this.openSetupGrid}\n        setZoomFactor={this.setZoomFactor}\n        centerView={this.centerView}\n        canUndo={canUndo(this.state.history)}\n        canRedo={canRedo(this.state.history)}\n        undo={this.undo}\n        redo={this.redo}\n        zoomIn={this.zoomIn}\n        zoomOut={this.zoomOut}\n        onOpenSettings={this.openSceneProperties}\n      />\n    );\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (\n      this.props.layout !== nextProps.layout ||\n      this.props.initialInstances !== nextProps.initialInstances ||\n      this.props.project !== nextProps.project\n    ) {\n      this.instancesSelection.clearSelection();\n      this.openSetupGrid(false);\n      this.editInstanceVariables(null);\n      this.openSceneProperties(false);\n    }\n  }\n\n  openObjectsList = () => {\n    if (!this.editorMosaic) return;\n    if (!this.editorMosaic.openEditor('objects-list', 'end', 75, 'column')) {\n      this.setState({\n        showObjectsListInfoBar: true,\n      });\n    }\n  };\n\n  openProperties = () => {\n    if (!this.editorMosaic) return;\n    if (!this.editorMosaic.openEditor('properties', 'start', 25, 'column')) {\n      this.setState({\n        showPropertiesInfoBar: true,\n      });\n    }\n  };\n\n  openObjectGroupsList = () => {\n    if (!this.editorMosaic) return;\n    this.editorMosaic.openEditor('object-groups-list', 'end', 75, 'column');\n  };\n\n  toggleInstancesList = () => {\n    if (!this.editorMosaic) return;\n    if (!this.editorMosaic.openEditor('instances-list', 'end', 75, 'row')) {\n      this.setState({\n        showInstancesInfoBar: true,\n      });\n    }\n  };\n\n  toggleLayersList = () => {\n    if (!this.editorMosaic) return;\n    if (!this.editorMosaic.openEditor('layers-list', 'end', 75, 'row')) {\n      this.setState({\n        showLayersInfoBar: true,\n      });\n    }\n  };\n\n  toggleWindowMask = () => {\n    this.setState({\n      instancesEditorSettings: {\n        ...this.state.instancesEditorSettings,\n        windowMask: !this.state.instancesEditorSettings.windowMask,\n      },\n    });\n  };\n\n  toggleGrid = () => {\n    this.setState({\n      instancesEditorSettings: {\n        ...this.state.instancesEditorSettings,\n        grid: !this.state.instancesEditorSettings.grid,\n        snap: !this.state.instancesEditorSettings.grid,\n      },\n    });\n  };\n\n  openSetupGrid = (open: boolean = true) => {\n    this.setState({ setupGridOpen: open });\n  };\n\n  openSceneProperties = (open: boolean = true) => {\n    this.setState({ scenePropertiesDialogOpen: open });\n  };\n\n  openObjectEditor = () => {\n    if (!this.instancesSelection.hasSelectedInstances()) {\n      return;\n    }\n    const selectedInstanceObjectName = this.instancesSelection\n      .getSelectedInstances()[0]\n      .getObjectName();\n    this.editObjectByName(selectedInstanceObjectName);\n  };\n\n  editLayerEffects = (layer: ?gdLayer) => {\n    this.setState({ editedLayer: layer, editedLayerInitialTab: 'effects' });\n  };\n\n  editLayer = (layer: ?gdLayer) => {\n    this.setState({ editedLayer: layer, editedLayerInitialTab: 'properties' });\n  };\n\n  editInstanceVariables = (instance: ?gdInitialInstance) => {\n    this.setState({ variablesEditedInstance: instance });\n  };\n\n  editLayoutVariables = (open: boolean = true) => {\n    this.setState({ layoutVariablesDialogOpen: open });\n  };\n\n  editObject = (editedObject: ?gdObject, initialTab: ?ObjectEditorTab) => {\n    const { project } = this.props;\n    if (editedObject) {\n      this.setState({\n        editedObjectWithContext: {\n          object: editedObject,\n          global: project.hasObjectNamed(editedObject.getName()),\n        },\n        editedObjectInitialTab: initialTab || 'properties',\n      });\n    } else {\n      this.setState({\n        editedObjectWithContext: null,\n        editedObjectInitialTab: 'properties',\n      });\n    }\n  };\n\n  editObjectByName = (objectName: string, initialTab?: ObjectEditorTab) => {\n    const { project, layout } = this.props;\n    if (layout.hasObjectNamed(objectName))\n      this.editObject(layout.getObject(objectName), initialTab);\n    else if (project.hasObjectNamed(objectName))\n      this.editObject(project.getObject(objectName), initialTab);\n  };\n\n  editGroup = (group: ?gdObjectGroup) => {\n    this.setState({ editedGroup: group });\n  };\n\n  setInstancesEditorSettings = (\n    instancesEditorSettings: InstancesEditorSettings\n  ) => {\n    this.setState({\n      instancesEditorSettings,\n    });\n  };\n\n  undo = () => {\n    this.instancesSelection.clearSelection();\n    this.setState(\n      {\n        history: undo(this.state.history, this.props.initialInstances),\n      },\n      () => {\n        // /!\\ Force the instances editor to destroy and mount again the\n        // renderers to avoid keeping any references to existing instances\n        if (this.editor) this.editor.forceRemount();\n        this.updateToolbar();\n      }\n    );\n  };\n\n  redo = () => {\n    this.instancesSelection.clearSelection();\n    this.setState(\n      {\n        history: redo(this.state.history, this.props.initialInstances),\n      },\n      () => {\n        // /!\\ Force the instances editor to destroy and mount again the\n        // renderers to avoid keeping any references to existing instances\n        if (this.editor) this.editor.forceRemount();\n        this.updateToolbar();\n      }\n    );\n  };\n\n  _onObjectSelected = (selectedObjectName: string) => {\n    if (!selectedObjectName) {\n      this.setState({\n        selectedObjectNames: [],\n      });\n    } else {\n      this.setState({\n        selectedObjectNames: [selectedObjectName],\n      });\n    }\n  };\n\n  _createNewObjectAndInstanceUnderCursor = () => {\n    if (!this.editor) {\n      return;\n    }\n\n    // Remember where to create the instance, when the object will be created\n    this.setState({\n      newObjectInstanceSceneCoordinates: this.editor.getLastCursorSceneCoordinates(),\n    });\n\n    if (this._objectsList)\n      this._objectsList.setState({ newObjectDialogOpen: true });\n  };\n\n  _onAddInstanceUnderCursor = () => {\n    if (!this.state.selectedObjectNames.length || !this.editor) {\n      return;\n    }\n\n    const objectSelected = this.state.selectedObjectNames[0];\n    const cursorPosition = this.editor.getLastCursorSceneCoordinates();\n    this._addInstance(cursorPosition, objectSelected);\n    this.setState({\n      selectedObjectNames: [objectSelected],\n    });\n  };\n\n  addInstanceAtTheCenter = (objectName: string) => {\n    const { editor } = this;\n    if (editor)\n      this._addInstance(\n        [editor.grid.viewPosition.viewX, editor.grid.viewPosition.viewY],\n        objectName\n      );\n  };\n\n  _addInstance = (pos: [number, number], objectName: string) => {\n    if (!objectName || !this.editor) return;\n\n    const instances = this.editor.addInstances(pos, [objectName]);\n    this._onInstancesAdded(instances);\n  };\n\n  _onInstancesAdded = (instances: Array<gdInitialInstance>) => {\n    instances.forEach(instance => {\n      const infoBarDetails = onInstanceAdded(\n        instance,\n        this.props.layout,\n        this.props.project\n      );\n      if (infoBarDetails) {\n        this.setState({\n          additionalWorkInfoBar: infoBarDetails,\n          showAdditionalWorkInfoBar: true,\n        });\n      }\n    });\n\n    this.setState(\n      {\n        history: saveToHistory(this.state.history, this.props.initialInstances),\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  _onInstancesSelected = (instances: Array<gdInitialInstance>) => {\n    this.setState({\n      selectedObjectNames: uniq(\n        instances.map(instance => instance.getObjectName())\n      ),\n    });\n    this.forceUpdatePropertiesEditor();\n    this.updateToolbar();\n  };\n\n  _onInstanceDoubleClicked = (instance: gdInitialInstance) => {\n    this.editObjectByName(instance.getObjectName());\n  };\n\n  _onInstancesMoved = (instances: Array<gdInitialInstance>) => {\n    this.setState(\n      {\n        history: saveToHistory(this.state.history, this.props.initialInstances),\n      },\n      () => this.forceUpdatePropertiesEditor()\n    );\n  };\n\n  _onInstancesResized = (instances: Array<gdInitialInstance>) => {\n    this.setState(\n      {\n        history: saveToHistory(this.state.history, this.props.initialInstances),\n      },\n      () => this.forceUpdatePropertiesEditor()\n    );\n  };\n\n  _onInstancesRotated = (instances: Array<gdInitialInstance>) => {\n    this.setState(\n      {\n        history: saveToHistory(this.state.history, this.props.initialInstances),\n      },\n      () => this.forceUpdatePropertiesEditor()\n    );\n  };\n\n  _onInstancesModified = (instances: Array<gdInitialInstance>) => {\n    this.forceUpdate();\n    //TODO: Save for redo with debounce (and cancel on unmount)\n  };\n\n  _onSelectInstances = (\n    instances: Array<gdInitialInstance>,\n    multiSelect: boolean\n  ) => {\n    this.instancesSelection.selectInstances(instances, multiSelect);\n\n    if (this.editor) this.editor.centerViewOn(instances);\n    this.forceUpdateInstancesList();\n    this.forceUpdatePropertiesEditor();\n    this.updateToolbar();\n  };\n\n  /**\n   * Create an instance of the given object, at the position\n   * previously chosen (see `newObjectInstanceSceneCoordinates`).\n   */\n  _addInstanceForNewObject = (newObjectName: string) => {\n    const { newObjectInstanceSceneCoordinates } = this.state;\n    if (!newObjectInstanceSceneCoordinates) {\n      return;\n    }\n\n    this._addInstance(newObjectInstanceSceneCoordinates, newObjectName);\n    this.setState({ newObjectInstanceSceneCoordinates: null });\n  };\n\n  _onObjectCreated = (object: gdObject) => {\n    const infoBarDetails = onObjectAdded(\n      object,\n      this.props.layout,\n      this.props.project\n    );\n    if (infoBarDetails) {\n      this.setState({\n        additionalWorkInfoBar: infoBarDetails,\n        showAdditionalWorkInfoBar: true,\n      });\n    }\n\n    this._addInstanceForNewObject(object.getName());\n  };\n\n  _onRemoveLayer = (layerName: string, done: boolean => void) => {\n    this.setState({\n      layerRemoveDialogOpen: true,\n      layerRemoved: layerName,\n      onCloseLayerRemoveDialog: (doRemove, newLayer) => {\n        this.setState(\n          {\n            layerRemoveDialogOpen: false,\n          },\n          () => {\n            if (doRemove) {\n              if (newLayer === null) {\n                this.instancesSelection.unselectInstancesOnLayer(layerName);\n                this.props.initialInstances.removeAllInstancesOnLayer(\n                  layerName\n                );\n              } else {\n                // Instances are not invalidated, so we can keep the selection.\n                this.props.initialInstances.moveInstancesToLayer(\n                  layerName,\n                  newLayer\n                );\n              }\n            }\n\n            done(doRemove);\n            // /!\\ Force the instances editor to destroy and mount again the\n            // renderers to avoid keeping any references to existing instances\n            if (this.editor) this.editor.forceRemount();\n\n            this.forceUpdateLayersList();\n\n            // We may have modified the selection, so force an update of editors dealing with it.\n            this.forceUpdatePropertiesEditor();\n            this.updateToolbar();\n          }\n        );\n      },\n    });\n  };\n\n  _onRenameLayer = (\n    oldName: string,\n    newName: string,\n    done: boolean => void\n  ) => {\n    this.props.initialInstances.moveInstancesToLayer(oldName, newName);\n    done(true);\n  };\n\n  _onDeleteObject = (i18n: I18nType) => (\n    objectWithContext: ObjectWithContext,\n    done: boolean => void\n  ) => {\n    const { object, global } = objectWithContext;\n    const { project, layout } = this.props;\n\n    const answer = Window.showYesNoCancelDialog(\n      i18n._(\n        t`Do you want to remove all references to this object in groups and events (actions and conditions using the object)?`\n      )\n    );\n\n    if (answer === 'cancel') return;\n    const shouldRemoveReferences = answer === 'yes';\n\n    // Unselect instances of the deleted object because these instances\n    // will be deleted by gd.WholeProjectRefactorer (and after that, they will\n    // be invalid references, as pointing to deleted objects).\n    this.instancesSelection.unselectInstancesOfObject(object.getName());\n\n    if (global) {\n      gd.WholeProjectRefactorer.globalObjectOrGroupRemoved(\n        project,\n        object.getName(),\n        /* isObjectGroup=*/ false,\n        shouldRemoveReferences\n      );\n    } else {\n      gd.WholeProjectRefactorer.objectOrGroupRemovedInLayout(\n        project,\n        layout,\n        object.getName(),\n        /* isObjectGroup=*/ false,\n        shouldRemoveReferences\n      );\n    }\n\n    done(true);\n\n    // We modified the selection, so force an update of editors dealing with it.\n    this.forceUpdatePropertiesEditor();\n    this.updateToolbar();\n  };\n\n  _canObjectOrGroupUseNewName = (newName: string) => {\n    const { project, layout } = this.props;\n\n    if (\n      layout.hasObjectNamed(newName) ||\n      project.hasObjectNamed(newName) ||\n      layout.getObjectGroups().has(newName) ||\n      project.getObjectGroups().has(newName)\n    ) {\n      showWarningBox('Another object or group with this name already exists.', {\n        delayToNextTick: true,\n      });\n      return false;\n    } else if (!gd.Project.validateName(newName)) {\n      showWarningBox(\n        'This name is invalid. Only use alphanumeric characters (0-9, a-z) and underscores. Digits are not allowed as the first character.',\n        { delayToNextTick: true }\n      );\n      return false;\n    }\n\n    return true;\n  };\n\n  _onRenameEditedObject = (newName: string) => {\n    const { editedObjectWithContext } = this.state;\n\n    if (editedObjectWithContext) {\n      this._onRenameObject(editedObjectWithContext, newName, () => {});\n    }\n  };\n\n  _onRenameObject = (\n    objectWithContext: ObjectWithContext,\n    newName: string,\n    done: boolean => void\n  ) => {\n    const { object, global } = objectWithContext;\n    const { project, layout } = this.props;\n\n    // newName is supposed to have been already validated\n\n    // Avoid triggering renaming refactoring if name has not really changed\n    if (object.getName() !== newName) {\n      if (global) {\n        gd.WholeProjectRefactorer.globalObjectOrGroupRenamed(\n          project,\n          object.getName(),\n          newName,\n          /* isObjectGroup=*/ false\n        );\n      } else {\n        gd.WholeProjectRefactorer.objectOrGroupRenamedInLayout(\n          project,\n          layout,\n          object.getName(),\n          newName,\n          /* isObjectGroup=*/ false\n        );\n      }\n    }\n\n    object.setName(newName);\n    done(true);\n  };\n\n  _onDeleteGroup = (\n    groupWithContext: GroupWithContext,\n    done: boolean => void\n  ) => {\n    const { group, global } = groupWithContext;\n    const { project, layout } = this.props;\n\n    const answer = Window.showConfirmDialog(\n      'Do you want to remove all references to this group in events (actions and conditions using the group)?'\n    );\n\n    if (global) {\n      gd.WholeProjectRefactorer.globalObjectOrGroupRemoved(\n        project,\n        group.getName(),\n        /* isObjectGroup=*/ true,\n        !!answer\n      );\n    } else {\n      gd.WholeProjectRefactorer.objectOrGroupRemovedInLayout(\n        project,\n        layout,\n        group.getName(),\n        /* isObjectGroup=*/ true,\n        !!answer\n      );\n    }\n\n    done(true);\n  };\n\n  _onRenameGroup = (\n    groupWithContext: GroupWithContext,\n    newName: string,\n    done: boolean => void\n  ) => {\n    const { group, global } = groupWithContext;\n    const { project, layout } = this.props;\n\n    // newName is supposed to have been already validated\n\n    // Avoid triggering renaming refactoring if name has not really changed\n    if (group.getName() !== newName) {\n      if (global) {\n        gd.WholeProjectRefactorer.globalObjectOrGroupRenamed(\n          project,\n          group.getName(),\n          newName,\n          /* isObjectGroup=*/ true\n        );\n      } else {\n        gd.WholeProjectRefactorer.objectOrGroupRenamedInLayout(\n          project,\n          layout,\n          group.getName(),\n          newName,\n          /* isObjectGroup=*/ true\n        );\n      }\n    }\n\n    done(true);\n  };\n\n  deleteSelection = () => {\n    const selectedInstances = this.instancesSelection.getSelectedInstances();\n    selectedInstances.forEach(instance => {\n      if (instance.isLocked()) return;\n      this.props.initialInstances.removeInstance(instance);\n    });\n\n    this.instancesSelection.clearSelection();\n    if (this.editor) this.editor.clearHighlightedInstance();\n\n    this.setState(\n      {\n        selectedObjectNames: [],\n        history: saveToHistory(this.state.history, this.props.initialInstances),\n      },\n      () => {\n        this.updateToolbar();\n        this.forceUpdatePropertiesEditor();\n      }\n    );\n  };\n\n  centerView = () => {\n    if (this.editor) this.editor.centerView();\n  };\n\n  setZoomFactor = (zoomFactor: number) => {\n    if (this.editor) this.editor.setZoomFactor(zoomFactor);\n  };\n\n  zoomIn = () => {\n    if (this.editor) this.editor.zoomBy(0.1);\n  };\n\n  zoomOut = () => {\n    if (this.editor) this.editor.zoomBy(-0.1);\n  };\n\n  _onContextMenu = (\n    x: number,\n    y: number,\n    ignoreSelectedObjectNamesForContextMenu?: boolean = false\n  ) => {\n    if (this.contextMenu)\n      this.contextMenu.open(x, y, {\n        ignoreSelectedObjectNamesForContextMenu: !!ignoreSelectedObjectNamesForContextMenu,\n      });\n  };\n\n  buildContextMenu = (i18n: I18nType, layout: gdLayout, options: any) => {\n    let contextMenuItems = [];\n    if (\n      options.ignoreSelectedObjectNamesForContextMenu ||\n      this.state.selectedObjectNames.length === 0\n    ) {\n      contextMenuItems = [\n        ...contextMenuItems,\n        {\n          label: i18n._(t`Paste`),\n          click: () => this.paste(),\n          enabled: Clipboard.has(INSTANCES_CLIPBOARD_KIND),\n          accelerator: 'CmdOrCtrl+V',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Insert new...`),\n          click: () => this._createNewObjectAndInstanceUnderCursor(),\n        },\n      ];\n    } else {\n      contextMenuItems = [\n        ...contextMenuItems,\n        {\n          label: i18n._(t`Copy`),\n          click: () => this.copySelection(),\n          enabled: this.instancesSelection.hasSelectedInstances(),\n          accelerator: 'CmdOrCtrl+C',\n        },\n        {\n          label: i18n._(t`Cut`),\n          click: () => this.cutSelection(),\n          enabled: this.instancesSelection.hasSelectedInstances(),\n          accelerator: 'CmdOrCtrl+X',\n        },\n        {\n          label: i18n._(t`Paste`),\n          click: () => this.paste(),\n          enabled: Clipboard.has(INSTANCES_CLIPBOARD_KIND),\n          accelerator: 'CmdOrCtrl+V',\n        },\n        {\n          label: i18n._(t`Duplicate`),\n          click: () => {\n            this.duplicateSelection();\n          },\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Delete`),\n          click: () => this.deleteSelection(),\n          enabled: this.instancesSelection.hasSelectedInstances(),\n          accelerator: 'Delete',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(\n            t`Edit object ${shortenString(\n              this.state.selectedObjectNames[0],\n              14\n            )}`\n          ),\n          click: () =>\n            this.editObjectByName(\n              this.state.selectedObjectNames[0],\n              'properties'\n            ),\n        },\n        {\n          label: i18n._(t`Edit object variables`),\n          click: () =>\n            this.editObjectByName(\n              this.state.selectedObjectNames[0],\n              'variables'\n            ),\n        },\n        {\n          label: i18n._(t`Edit behaviors`),\n          click: () =>\n            this.editObjectByName(\n              this.state.selectedObjectNames[0],\n              'behaviors'\n            ),\n        },\n        {\n          label: i18n._(t`Edit effects`),\n          click: () =>\n            this.editObjectByName(this.state.selectedObjectNames[0], 'effects'),\n        },\n      ];\n    }\n\n    contextMenuItems = [\n      ...contextMenuItems,\n      { type: 'separator' },\n      {\n        label: i18n._(t`Open scene events`),\n        click: () => this.props.onOpenEvents(layout.getName()),\n      },\n      {\n        label: i18n._(t`Open scene properties`),\n        click: () => this.openSceneProperties(true),\n      },\n    ];\n\n    return contextMenuItems;\n  };\n\n  copySelection = ({ useLastCursorPosition }: CopyCutPasteOptions = {}) => {\n    const serializedSelection = this.instancesSelection\n      .getSelectedInstances()\n      .map(instance => serializeToJSObject(instance));\n\n    if (this.editor) {\n      const position = useLastCursorPosition\n        ? this.editor.getLastCursorSceneCoordinates()\n        : this.editor.getLastContextMenuSceneCoordinates();\n      Clipboard.set(INSTANCES_CLIPBOARD_KIND, {\n        x: position[0],\n        y: position[1],\n        instances: serializedSelection,\n      });\n    }\n  };\n\n  cutSelection = (options: CopyCutPasteOptions = {}) => {\n    this.copySelection(options);\n    this.deleteSelection();\n  };\n\n  duplicateSelection = () => {\n    const serializedSelection = this.instancesSelection\n      .getSelectedInstances()\n      .map(instance => serializeToJSObject(instance));\n\n    if (!this.editor) return;\n\n    const newInstances = serializedSelection.map(serializedInstance => {\n      const instance = new gd.InitialInstance();\n      unserializeFromJSObject(instance, serializedInstance);\n      instance.setX(instance.getX() + 2 * MOVEMENT_BIG_DELTA);\n      instance.setY(instance.getY() + 2 * MOVEMENT_BIG_DELTA);\n      const newInstance = this.props.initialInstances\n        .insertInitialInstance(instance)\n        .resetPersistentUuid();\n      instance.delete();\n      return newInstance;\n    });\n    this._onInstancesAdded(newInstances);\n    this.instancesSelection.clearSelection();\n    this.instancesSelection.selectInstances(newInstances, true);\n  };\n\n  paste = ({ useLastCursorPosition }: CopyCutPasteOptions = {}) => {\n    if (!this.editor) return;\n\n    const position = useLastCursorPosition\n      ? this.editor.getLastCursorSceneCoordinates()\n      : this.editor.getLastContextMenuSceneCoordinates();\n\n    const clipboardContent = Clipboard.get(INSTANCES_CLIPBOARD_KIND);\n    const instancesContent = SafeExtractor.extractArrayProperty(\n      clipboardContent,\n      'instances'\n    );\n    const x = SafeExtractor.extractNumberProperty(clipboardContent, 'x');\n    const y = SafeExtractor.extractNumberProperty(clipboardContent, 'y');\n    if (x === null || y === null || instancesContent === null) return;\n\n    const newInstances = instancesContent.map(serializedInstance => {\n      const instance = new gd.InitialInstance();\n      unserializeFromJSObject(instance, serializedInstance);\n      instance.setX(instance.getX() - x + position[0]);\n      instance.setY(instance.getY() - y + position[1]);\n      const newInstance = this.props.initialInstances\n        .insertInitialInstance(instance)\n        .resetPersistentUuid();\n      instance.delete();\n      return newInstance;\n    });\n    this._onInstancesAdded(newInstances);\n    this.instancesSelection.clearSelection();\n    this.instancesSelection.selectInstances(newInstances, true);\n  };\n\n  updateBehaviorsSharedData = () => {\n    const { layout, project } = this.props;\n    layout.updateBehaviorsSharedData(project);\n  };\n\n  forceUpdateObjectsList = () => {\n    if (this._objectsList) this._objectsList.forceUpdateList();\n  };\n\n  forceUpdateLayersList = () => {\n    if (this._layersList) this._layersList.forceUpdate();\n  };\n\n  forceUpdateInstancesList = () => {\n    if (this._instancesList) this._instancesList.forceUpdate();\n  };\n\n  forceUpdatePropertiesEditor = () => {\n    if (this._propertiesEditor) this._propertiesEditor.forceUpdate();\n  };\n\n  reloadResourcesFor = (object: gdObject) => {\n    const { project } = this.props;\n\n    const resourcesInUse = new gd.ResourcesInUseHelper();\n    object.exposeResources(resourcesInUse);\n    const objectResourceNames = resourcesInUse\n      .getAllImages()\n      .toNewVectorString()\n      .toJSArray();\n    resourcesInUse.delete();\n\n    PixiResourcesLoader.loadTextures(\n      project,\n      objectResourceNames,\n      () => {},\n      () => {\n        if (this.editor)\n          this.editor.resetInstanceRenderersFor(object.getName());\n      }\n    );\n  };\n\n  _getAllObjectTags = (): Array<string> => {\n    const { project, layout } = this.props;\n\n    const tagsSet: Set<string> = new Set();\n    enumerateObjects(project, layout).allObjectsList.forEach(({ object }) => {\n      getTagsFromString(object.getTags()).forEach(tag => tagsSet.add(tag));\n    });\n\n    return Array.from(tagsSet);\n  };\n\n  _buildObjectTagsMenuTemplate = (i18n: I18nType): Array<any> => {\n    const { selectedObjectTags } = this.state;\n\n    return buildTagsMenuTemplate({\n      noTagLabel: i18n._(t`No tags - add a tag to an object first`),\n      getAllTags: this._getAllObjectTags,\n      selectedTags: selectedObjectTags,\n      onChange: selectedObjectTags => {\n        this.setState({ selectedObjectTags });\n      },\n    });\n  };\n\n  render() {\n    const {\n      project,\n      layout,\n      initialInstances,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n      isActive,\n    } = this.props;\n    const selectedInstances = this.instancesSelection.getSelectedInstances();\n\n    const editors = {\n      properties: {\n        type: 'secondary',\n        title: t`Properties`,\n        renderEditor: () => (\n          <I18n>\n            {({ i18n }) => (\n              <InstancePropertiesEditor\n                i18n={i18n}\n                project={project}\n                layout={layout}\n                instances={selectedInstances}\n                editInstanceVariables={this.editInstanceVariables}\n                onEditObjectByName={this.editObjectByName}\n                onInstancesModified={instances =>\n                  this.forceUpdateInstancesList()\n                }\n                ref={propertiesEditor =>\n                  (this._propertiesEditor = propertiesEditor)\n                }\n                unsavedChanges={this.props.unsavedChanges}\n              />\n            )}\n          </I18n>\n        ),\n      },\n      'layers-list': {\n        type: 'secondary',\n        title: t`Layers`,\n        renderEditor: () => (\n          <LayersList\n            project={project}\n            resourceSources={resourceSources}\n            resourceExternalEditors={resourceExternalEditors}\n            onChooseResource={onChooseResource}\n            onEditLayerEffects={this.editLayerEffects}\n            onEditLayer={this.editLayer}\n            onRemoveLayer={this._onRemoveLayer}\n            onRenameLayer={this._onRenameLayer}\n            layersContainer={layout}\n            unsavedChanges={this.props.unsavedChanges}\n            ref={layersList => (this._layersList = layersList)}\n            hotReloadPreviewButtonProps={this.props.hotReloadPreviewButtonProps}\n          />\n        ),\n      },\n      'instances-list': {\n        type: 'secondary',\n        title: t`Instances list`,\n        renderEditor: () => (\n          <InstancesList\n            instances={initialInstances}\n            selectedInstances={selectedInstances}\n            onSelectInstances={this._onSelectInstances}\n            ref={instancesList => (this._instancesList = instancesList)}\n          />\n        ),\n      },\n      'instances-editor': {\n        type: 'primary',\n        noTitleBar: true,\n        renderEditor: () => (\n          <FullSizeInstancesEditorWithScrollbars\n            project={project}\n            layout={layout}\n            initialInstances={initialInstances}\n            instancesEditorSettings={this.state.instancesEditorSettings}\n            onChangeInstancesEditorSettings={this.setInstancesEditorSettings}\n            instancesSelection={this.instancesSelection}\n            onDeleteSelection={this.deleteSelection}\n            onInstancesAdded={this._onInstancesAdded}\n            onInstancesSelected={this._onInstancesSelected}\n            onInstanceDoubleClicked={this._onInstanceDoubleClicked}\n            onInstancesMoved={this._onInstancesMoved}\n            onInstancesResized={this._onInstancesResized}\n            onInstancesRotated={this._onInstancesRotated}\n            selectedObjectNames={this.state.selectedObjectNames}\n            onContextMenu={this._onContextMenu}\n            onCopy={() => this.copySelection({ useLastCursorPosition: true })}\n            onCut={() => this.cutSelection({ useLastCursorPosition: true })}\n            onPaste={() => this.paste({ useLastCursorPosition: true })}\n            onUndo={this.undo}\n            onRedo={this.redo}\n            onZoomOut={this.zoomOut}\n            onZoomIn={this.zoomIn}\n            wrappedEditorRef={editor => {\n              this.editor = editor;\n            }}\n            pauseRendering={!isActive}\n          />\n        ),\n      },\n      'objects-list': {\n        type: 'secondary',\n        title: t`Objects`,\n        toolbarControls: [\n          <I18n key=\"tags\">\n            {({ i18n }) => (\n              <TagsButton\n                buildMenuTemplate={(i18n: I18nType) =>\n                  this._buildObjectTagsMenuTemplate(i18n)\n                }\n              />\n            )}\n          </I18n>,\n          <CloseButton key=\"close\" />,\n        ],\n        renderEditor: () => (\n          <I18n>\n            {({ i18n }) => (\n              <ObjectsList\n                getThumbnail={ObjectsRenderingService.getThumbnail.bind(\n                  ObjectsRenderingService\n                )}\n                project={project}\n                objectsContainer={layout}\n                layout={layout}\n                events={layout.getEvents()}\n                resourceSources={resourceSources}\n                resourceExternalEditors={resourceExternalEditors}\n                onChooseResource={onChooseResource}\n                selectedObjectNames={this.state.selectedObjectNames}\n                onEditObject={this.props.onEditObject || this.editObject}\n                onDeleteObject={this._onDeleteObject(i18n)}\n                canRenameObject={this._canObjectOrGroupUseNewName}\n                onObjectCreated={this._onObjectCreated}\n                onObjectSelected={this._onObjectSelected}\n                onRenameObject={this._onRenameObject}\n                onAddObjectInstance={this.addInstanceAtTheCenter}\n                onObjectPasted={() => this.updateBehaviorsSharedData()}\n                selectedObjectTags={this.state.selectedObjectTags}\n                onChangeSelectedObjectTags={selectedObjectTags =>\n                  this.setState({\n                    selectedObjectTags,\n                  })\n                }\n                getAllObjectTags={this._getAllObjectTags}\n                ref={objectsList => (this._objectsList = objectsList)}\n                unsavedChanges={this.props.unsavedChanges}\n                hotReloadPreviewButtonProps={\n                  this.props.hotReloadPreviewButtonProps\n                }\n              />\n            )}\n          </I18n>\n        ),\n      },\n      'object-groups-list': {\n        type: 'secondary',\n        title: t`Object Groups`,\n        renderEditor: () => (\n          <ObjectGroupsList\n            globalObjectGroups={project.getObjectGroups()}\n            objectGroups={layout.getObjectGroups()}\n            onEditGroup={this.editGroup}\n            onDeleteGroup={this._onDeleteGroup}\n            onRenameGroup={this._onRenameGroup}\n            canRenameGroup={this._canObjectOrGroupUseNewName}\n            unsavedChanges={this.props.unsavedChanges}\n          />\n        ),\n      },\n    };\n    return (\n      <div style={styles.container}>\n        <UseSceneEditorCommands\n          project={project}\n          layout={layout}\n          onEditObject={this.props.onEditObject || this.editObject}\n          onEditObjectVariables={object => {\n            this.editObject(object, 'variables');\n          }}\n          onOpenSceneProperties={this.openSceneProperties}\n          onOpenSceneVariables={this.editLayoutVariables}\n          onEditObjectGroup={this.editGroup}\n          onEditLayerEffects={this.editLayerEffects}\n          onEditLayer={this.editLayer}\n        />\n        <ResponsiveWindowMeasurer>\n          {windowWidth => (\n            <PreferencesContext.Consumer>\n              {({ getDefaultEditorMosaicNode, setDefaultEditorMosaicNode }) => (\n                <EditorMosaic\n                  editors={editors}\n                  limitToOneSecondaryEditor={windowWidth === 'small'}\n                  initialNodes={\n                    windowWidth === 'small'\n                      ? getDefaultEditorMosaicNode('scene-editor-small') ||\n                        initialMosaicEditorNodesSmallWindow\n                      : getDefaultEditorMosaicNode('scene-editor') ||\n                        initialMosaicEditorNodes\n                  }\n                  onPersistNodes={node =>\n                    setDefaultEditorMosaicNode(\n                      windowWidth === 'small'\n                        ? 'scene-editor-small'\n                        : 'scene-editor',\n                      node\n                    )\n                  }\n                  ref={editorMosaic => (this.editorMosaic = editorMosaic)}\n                />\n              )}\n            </PreferencesContext.Consumer>\n          )}\n        </ResponsiveWindowMeasurer>\n        {this.state.editedObjectWithContext && (\n          <ObjectEditorDialog\n            open\n            object={this.state.editedObjectWithContext.object}\n            initialTab={this.state.editedObjectInitialTab}\n            project={project}\n            resourceSources={resourceSources}\n            resourceExternalEditors={resourceExternalEditors}\n            onChooseResource={onChooseResource}\n            onComputeAllVariableNames={() => {\n              const { editedObjectWithContext } = this.state;\n              if (!editedObjectWithContext) return [];\n\n              return EventsRootVariablesFinder.findAllObjectVariables(\n                project.getCurrentPlatform(),\n                project,\n                layout,\n                editedObjectWithContext.object\n              );\n            }}\n            onCancel={() => {\n              if (this.state.editedObjectWithContext) {\n                this.reloadResourcesFor(\n                  this.state.editedObjectWithContext.object\n                );\n              }\n              this.editObject(null);\n            }}\n            canRenameObject={this._canObjectOrGroupUseNewName}\n            onRename={newName => {\n              this._onRenameEditedObject(newName);\n            }}\n            onApply={() => {\n              if (this.state.editedObjectWithContext) {\n                this.reloadResourcesFor(\n                  this.state.editedObjectWithContext.object\n                );\n              }\n              this.editObject(null);\n              this.updateBehaviorsSharedData();\n              this.forceUpdateObjectsList();\n\n              if (this.props.unsavedChanges)\n                this.props.unsavedChanges.triggerUnsavedChanges();\n            }}\n            hotReloadPreviewButtonProps={this.props.hotReloadPreviewButtonProps}\n            onUpdateBehaviorsSharedData={() => this.updateBehaviorsSharedData()}\n          />\n        )}\n        {!!this.state.editedGroup && (\n          <ObjectGroupEditorDialog\n            project={project}\n            group={this.state.editedGroup}\n            objectsContainer={layout}\n            globalObjectsContainer={project}\n            onCancel={() => this.editGroup(null)}\n            onApply={() => this.editGroup(null)}\n          />\n        )}\n        <DismissableInfoBar\n          identifier=\"instance-drag-n-drop-explanation\"\n          message={\n            <Trans>\n              Drag and Drop the object to the scene or use the right click menu\n              to add an instance of it.\n            </Trans>\n          }\n          touchScreenMessage={\n            <Trans>\n              Drag and Drop the object icon to the scene or long press to show\n              options to edit the object.\n            </Trans>\n          }\n          show={!!this.state.selectedObjectNames.length}\n        />\n        <DismissableInfoBar\n          identifier=\"objects-panel-explanation\"\n          message={\n            <Trans>\n              Objects panel is already opened: use it to add and edit objects.\n            </Trans>\n          }\n          show={!!this.state.showObjectsListInfoBar}\n        />\n        <DismissableInfoBar\n          identifier=\"instance-properties-panel-explanation\"\n          message={\n            <Trans>\n              Properties panel is already opened. After selecting an instance on\n              the scene, inspect and change its properties from this panel.\n            </Trans>\n          }\n          show={!!this.state.showPropertiesInfoBar}\n        />\n        <DismissableInfoBar\n          identifier=\"layers-panel-explanation\"\n          message={\n            <Trans>\n              Layers panel is already opened. You can add new layers and apply\n              effects on them from this panel.\n            </Trans>\n          }\n          show={!!this.state.showLayersInfoBar}\n        />\n        <DismissableInfoBar\n          identifier=\"instances-panel-explanation\"\n          message={\n            <Trans>\n              Instances panel is already opened. You can search instances in the\n              scene and click one to move the view to it.\n            </Trans>\n          }\n          show={!!this.state.showInstancesInfoBar}\n        />\n        {this.state.setupGridOpen && (\n          <SetupGridDialog\n            instancesEditorSettings={this.state.instancesEditorSettings}\n            onChangeInstancesEditorSettings={this.setInstancesEditorSettings}\n            onCancel={() => this.openSetupGrid(false)}\n            onApply={() => this.openSetupGrid(false)}\n          />\n        )}\n        {!!this.state.variablesEditedInstance && (\n          <VariablesEditorDialog\n            open\n            variablesContainer={\n              this.state.variablesEditedInstance &&\n              this.state.variablesEditedInstance.getVariables()\n            }\n            onCancel={() => this.editInstanceVariables(null)}\n            onApply={() => this.editInstanceVariables(null)}\n            emptyPlaceholderTitle={\n              <Trans>Add your first instance variable</Trans>\n            }\n            emptyPlaceholderDescription={\n              <Trans>\n                Instance variables overwrite the default values of the variables\n                of the object.\n              </Trans>\n            }\n            helpPagePath={'/all-features/variables/instance-variables'}\n            title={<Trans>Instance Variables</Trans>}\n            onEditObjectVariables={() => {\n              if (!this.instancesSelection.hasSelectedInstances()) {\n                return;\n              }\n              const associatedObjectName = this.instancesSelection\n                .getSelectedInstances()[0]\n                .getObjectName();\n              const object = getObjectByName(\n                project,\n                layout,\n                associatedObjectName\n              );\n              if (object) {\n                this.editObject(object, 'variables');\n                this.editInstanceVariables(null);\n              }\n            }}\n            hotReloadPreviewButtonProps={this.props.hotReloadPreviewButtonProps}\n            onComputeAllVariableNames={() => {\n              const variablesEditedInstance = this.state\n                .variablesEditedInstance;\n              if (!variablesEditedInstance) {\n                return [];\n              }\n              const variablesEditedObject = getObjectByName(\n                project,\n                layout,\n                variablesEditedInstance.getObjectName()\n              );\n              return variablesEditedObject\n                ? EventsRootVariablesFinder.findAllObjectVariables(\n                    project.getCurrentPlatform(),\n                    project,\n                    layout,\n                    variablesEditedObject\n                  )\n                : [];\n            }}\n          />\n        )}\n        {!!this.state.layerRemoveDialogOpen && (\n          <LayerRemoveDialog\n            open\n            layersContainer={layout}\n            layerRemoved={this.state.layerRemoved}\n            onClose={this.state.onCloseLayerRemoveDialog}\n          />\n        )}\n        {!!this.state.editedLayer && (\n          <LayerEditorDialog\n            project={project}\n            resourceSources={resourceSources}\n            onChooseResource={onChooseResource}\n            resourceExternalEditors={resourceExternalEditors}\n            layer={this.state.editedLayer}\n            initialInstances={initialInstances}\n            initialTab={this.state.editedLayerInitialTab}\n            onClose={() =>\n              this.setState({\n                editedLayer: null,\n              })\n            }\n            hotReloadPreviewButtonProps={this.props.hotReloadPreviewButtonProps}\n          />\n        )}\n        {this.state.scenePropertiesDialogOpen && (\n          <ScenePropertiesDialog\n            open\n            project={project}\n            layout={layout}\n            onClose={() => this.openSceneProperties(false)}\n            onApply={() => this.openSceneProperties(false)}\n            onEditVariables={() => this.editLayoutVariables(true)}\n            onOpenMoreSettings={this.props.onOpenMoreSettings}\n          />\n        )}\n        {!!this.state.layoutVariablesDialogOpen && (\n          <SceneVariablesDialog\n            open\n            project={project}\n            layout={layout}\n            onApply={() => this.editLayoutVariables(false)}\n            onClose={() => this.editLayoutVariables(false)}\n            hotReloadPreviewButtonProps={this.props.hotReloadPreviewButtonProps}\n          />\n        )}\n        <I18n>\n          {({ i18n }) => (\n            <React.Fragment>\n              <DismissableInfoBar\n                show={this.state.showAdditionalWorkInfoBar}\n                identifier={this.state.additionalWorkInfoBar.identifier}\n                message={i18n._(this.state.additionalWorkInfoBar.message)}\n                touchScreenMessage={i18n._(\n                  this.state.additionalWorkInfoBar.touchScreenMessage\n                )}\n              />\n              <ContextMenu\n                ref={contextMenu => (this.contextMenu = contextMenu)}\n                buildMenuTemplate={(i18n, buildOptions) =>\n                  this.buildContextMenu(i18n, layout, buildOptions)\n                }\n              />\n            </React.Fragment>\n          )}\n        </I18n>\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\n\nimport React from 'react';\nimport { AutoSizer } from 'react-virtualized';\nimport SortableVirtualizedItemList from '../UI/SortableVirtualizedItemList';\nimport Background from '../UI/Background';\nimport SearchBar from '../UI/SearchBar';\nimport NewObjectDialog from '../AssetStore/NewObjectDialog';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport Clipboard, { SafeExtractor } from '../Utils/Clipboard';\nimport Window from '../Utils/Window';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport {\n  enumerateObjects,\n  filterObjectsList,\n  isSameObjectWithContext,\n} from './EnumerateObjects';\nimport { type ObjectEditorTab } from '../ObjectEditor/ObjectEditorDialog';\nimport type {\n  ObjectWithContextList,\n  ObjectWithContext,\n} from '../ObjectsList/EnumerateObjects';\nimport { CLIPBOARD_KIND } from './ClipboardKind';\nimport TagChips from '../UI/TagChips';\nimport EditTagsDialog from '../UI/EditTagsDialog';\nimport {\n  type Tags,\n  type SelectedTags,\n  getStringFromTags,\n  buildTagsMenuTemplate,\n  getTagsFromString,\n} from '../Utils/TagsHelper';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\nimport { type HotReloadPreviewButtonProps } from '../HotReload/HotReloadPreviewButton';\nimport { useScreenType } from '../UI/Reponsive/ScreenTypeMeasurer';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  listContainer: {\n    flex: 1,\n  },\n};\n\nconst objectTypeToDefaultName = {\n  Sprite: 'NewSprite',\n  'TiledSpriteObject::TiledSprite': 'NewTiledSprite',\n  'ParticleSystem::ParticleEmitter': 'NewParticlesEmitter',\n  'PanelSpriteObject::PanelSprite': 'NewPanelSprite',\n  'PrimitiveDrawing::Drawer': 'NewShapePainter',\n  'TextObject::Text': 'NewText',\n  'BBText::BBText': 'NewBBText',\n  'BitmapText::BitmapTextObject': 'NewBitmapText',\n  'TextEntryObject::TextEntry': 'NewTextEntry',\n  'TileMap::TileMap': 'NewTileMap',\n  'MyDummyExtension::DummyObject': 'NewDummyObject',\n  'Lighting::LightObject': 'NewLight',\n  'TextInput::TextInputObject': 'NewTextInput',\n  'Video::VideoObject': 'NewVideo',\n};\n\nexport const objectWithContextReactDndType = 'GD_OBJECT_WITH_CONTEXT';\n\nconst getObjectWithContextName = (objectWithContext: ObjectWithContext) =>\n  objectWithContext.object.getName();\n\nconst isObjectWithContextGlobal = (objectWithContext: ObjectWithContext) =>\n  objectWithContext.global;\n\nconst getPasteLabel = isGlobalObject => {\n  let clipboardObjectName = '';\n  if (Clipboard.has(CLIPBOARD_KIND)) {\n    const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n    clipboardObjectName =\n      SafeExtractor.extractStringProperty(clipboardContent, 'name') || '';\n  }\n\n  return isGlobalObject\n    ? 'Paste ' + clipboardObjectName + ' as a Global Object'\n    : 'Paste ' + clipboardObjectName;\n};\n\ntype State = {|\n  newObjectDialogOpen: boolean,\n  renamedObjectWithContext: ?ObjectWithContext,\n  searchText: string,\n  tagEditedObject: ?gdObject,\n|};\n\ntype Props = {|\n  project: gdProject,\n  layout: ?gdLayout,\n  objectsContainer: gdObjectsContainer,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  events: gdEventsList,\n  onDeleteObject: (\n    objectWithContext: ObjectWithContext,\n    cb: (boolean) => void\n  ) => void,\n  onRenameObject: (\n    objectWithContext: ObjectWithContext,\n    newName: string,\n    cb: (boolean) => void\n  ) => void,\n  selectedObjectNames: Array<string>,\n\n  selectedObjectTags: SelectedTags,\n  getAllObjectTags: () => Tags,\n  onChangeSelectedObjectTags: SelectedTags => void,\n\n  onEditObject: (object: gdObject, initialTab: ?ObjectEditorTab) => void,\n  onObjectCreated: gdObject => void,\n  onObjectSelected: string => void,\n  onObjectPasted?: gdObject => void,\n  canRenameObject: (newName: string) => boolean,\n  onAddObjectInstance: (objectName: string) => void,\n\n  getThumbnail: (project: gdProject, object: Object) => string,\n  unsavedChanges?: ?UnsavedChanges,\n  hotReloadPreviewButtonProps: HotReloadPreviewButtonProps,\n|};\n\nexport default class ObjectsList extends React.Component<Props, State> {\n  sortableList: ?SortableVirtualizedItemList<ObjectWithContext>;\n  _displayedObjectWithContextsList: ObjectWithContextList = [];\n  state = {\n    newObjectDialogOpen: false,\n    renamedObjectWithContext: null,\n    searchText: '',\n    tagEditedObject: null,\n  };\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    // The component is costly to render, so avoid any re-rendering as much\n    // as possible.\n    // We make the assumption that no changes to objects list is made outside\n    // from the component.\n    // If a change is made, the component won't notice it: you have to manually\n    // call forceUpdate.\n\n    if (\n      this.state.newObjectDialogOpen !== nextState.newObjectDialogOpen ||\n      this.state.renamedObjectWithContext !==\n        nextState.renamedObjectWithContext ||\n      this.state.searchText !== nextState.searchText ||\n      this.state.tagEditedObject !== nextState.tagEditedObject\n    )\n      return true;\n\n    if (\n      this.props.selectedObjectNames !== nextProps.selectedObjectNames ||\n      this.props.selectedObjectTags !== nextProps.selectedObjectTags\n    )\n      return true;\n\n    if (\n      this.props.project !== nextProps.project ||\n      this.props.objectsContainer !== nextProps.objectsContainer\n    )\n      return true;\n\n    return false;\n  }\n\n  addObject = (objectType: string) => {\n    const {\n      project,\n      objectsContainer,\n      onEditObject,\n      onObjectCreated,\n      onObjectSelected,\n    } = this.props;\n\n    const name = newNameGenerator(\n      objectTypeToDefaultName[objectType] || 'NewObject',\n      name =>\n        objectsContainer.hasObjectNamed(name) || project.hasObjectNamed(name)\n    );\n\n    const object = objectsContainer.insertNewObject(\n      project,\n      objectType,\n      name,\n      objectsContainer.getObjectsCount()\n    );\n    object.setTags(getStringFromTags(this.props.selectedObjectTags));\n\n    this.setState(\n      {\n        newObjectDialogOpen: false,\n      },\n      () => {\n        if (onEditObject) {\n          onEditObject(object);\n          onObjectCreated(object);\n          onObjectSelected(name);\n        }\n      }\n    );\n  };\n\n  _onObjectAddedFromAsset = (object: gdObject) => {\n    const { onObjectCreated } = this.props;\n\n    object.setTags(getStringFromTags(this.props.selectedObjectTags));\n    onObjectCreated(object);\n  };\n\n  onAddNewObject = () => {\n    this.setState({ newObjectDialogOpen: true });\n  };\n\n  _deleteObject = (i18n: I18nType, objectWithContext: ObjectWithContext) => {\n    const { object, global } = objectWithContext;\n    const { project, objectsContainer } = this.props;\n\n    const answer = Window.showConfirmDialog(\n      i18n._(\n        t`Are you sure you want to remove this object? This can't be undone.`\n      )\n    );\n    if (!answer) return;\n\n    // It's important to call onDeleteObject, because the parent might\n    // have to do some refactoring/clean up work before the object is deleted\n    // (typically, the SceneEditor will remove instances refering to the object,\n    // leading to the removal of their renderer - which can keep a reference to\n    // the object).\n    this.props.onDeleteObject(objectWithContext, doRemove => {\n      if (!doRemove) return;\n\n      if (global) {\n        project.removeObject(object.getName());\n      } else {\n        objectsContainer.removeObject(object.getName());\n      }\n\n      this._onObjectModified(false);\n    });\n  };\n\n  _copyObject = (objectWithContext: ObjectWithContext) => {\n    const { object } = objectWithContext;\n    Clipboard.set(CLIPBOARD_KIND, {\n      type: object.getType(),\n      name: object.getName(),\n      object: serializeToJSObject(object),\n    });\n  };\n\n  _cutObject = (i18n: I18nType, objectWithContext: ObjectWithContext) => {\n    this._copyObject(objectWithContext);\n    this._deleteObject(i18n, objectWithContext);\n  };\n\n  _duplicateObject = (objectWithContext: ObjectWithContext) => {\n    this._copyObject(objectWithContext);\n    this._pasteAndRename(objectWithContext);\n  };\n\n  _pasteAndRename = (objectWithContext: ObjectWithContext) => {\n    this._editName(this._paste(objectWithContext));\n  };\n\n  _paste = (objectWithContext: ObjectWithContext): ?ObjectWithContext => {\n    if (!Clipboard.has(CLIPBOARD_KIND)) return null;\n\n    const { object: pasteObject, global } = objectWithContext;\n    const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n    const copiedObject = SafeExtractor.extractObjectProperty(\n      clipboardContent,\n      'object'\n    );\n    const name = SafeExtractor.extractStringProperty(clipboardContent, 'name');\n    const type = SafeExtractor.extractStringProperty(clipboardContent, 'type');\n    if (!name || !type || !copiedObject) return;\n\n    const { project, objectsContainer, onObjectPasted } = this.props;\n\n    const newName = newNameGenerator(\n      name,\n      name =>\n        objectsContainer.hasObjectNamed(name) || project.hasObjectNamed(name),\n      ''\n    );\n\n    const newObject = global\n      ? project.insertNewObject(\n          project,\n          type,\n          newName,\n          project.getObjectPosition(pasteObject.getName()) + 1\n        )\n      : objectsContainer.insertNewObject(\n          project,\n          type,\n          newName,\n          objectsContainer.getObjectPosition(pasteObject.getName()) + 1\n        );\n\n    unserializeFromJSObject(\n      newObject,\n      copiedObject,\n      'unserializeFrom',\n      project\n    );\n    newObject.setName(newName); // Unserialization has overwritten the name.\n\n    this._onObjectModified(false);\n    if (onObjectPasted) onObjectPasted(newObject);\n\n    return { object: newObject, global };\n  };\n\n  _editName = (objectWithContext: ?ObjectWithContext) => {\n    this.setState(\n      {\n        renamedObjectWithContext: objectWithContext,\n      },\n      () => {\n        if (this.sortableList) this.sortableList.forceUpdateGrid();\n      }\n    );\n  };\n\n  _rename = (objectWithContext: ObjectWithContext, newName: string) => {\n    const { object } = objectWithContext;\n    this.setState({\n      renamedObjectWithContext: null,\n    });\n\n    if (getObjectWithContextName(objectWithContext) === newName) return;\n\n    if (this.props.canRenameObject(newName)) {\n      this.props.onRenameObject(objectWithContext, newName, doRename => {\n        if (!doRename) return;\n\n        object.setName(newName);\n        this._onObjectModified(false);\n      });\n    }\n  };\n\n  _canMoveSelectionTo = (destinationObjectWithContext: ObjectWithContext) => {\n    // Check if at least one element in the selection can be moved.\n    const selectedObjectsWithContext = this._displayedObjectWithContextsList.filter(\n      objectWithContext =>\n        this.props.selectedObjectNames.indexOf(\n          objectWithContext.object.getName()\n        ) !== -1\n    );\n    if (\n      selectedObjectsWithContext.every(\n        selectedObject =>\n          selectedObject.global === destinationObjectWithContext.global\n      )\n    ) {\n      return true;\n    }\n\n    const displayedGlobalObjectsWithContext = this._displayedObjectWithContextsList.filter(\n      objectWithContext => objectWithContext.global\n    );\n\n    if (\n      selectedObjectsWithContext.every(\n        selectedObject => !selectedObject.global\n      ) &&\n      destinationObjectWithContext.global &&\n      displayedGlobalObjectsWithContext.indexOf(\n        destinationObjectWithContext\n      ) === 0\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  _moveSelectionTo = (destinationObjectWithContext: ObjectWithContext) => {\n    const { project, objectsContainer } = this.props;\n\n    const displayedGlobalObjectsWithContext = this._displayedObjectWithContextsList.filter(\n      objectWithContext => objectWithContext.global\n    );\n    const displayedLocalObjectsWithContext = this._displayedObjectWithContextsList.filter(\n      objectWithContext => !objectWithContext.global\n    );\n\n    const isDestinationItemFirstItemOfGlobalDisplayedList =\n      destinationObjectWithContext.global &&\n      displayedGlobalObjectsWithContext.indexOf(\n        destinationObjectWithContext\n      ) === 0;\n\n    const selectedObjectsWithContext = this._displayedObjectWithContextsList.filter(\n      objectWithContext =>\n        this.props.selectedObjectNames.indexOf(\n          objectWithContext.object.getName()\n        ) !== -1\n    );\n    selectedObjectsWithContext.forEach(movedObjectWithContext => {\n      let container: gdObjectsContainer;\n      let fromIndex: number;\n      let toIndex: number;\n      if (\n        movedObjectWithContext.global === destinationObjectWithContext.global\n      ) {\n        container = destinationObjectWithContext.global\n          ? project\n          : objectsContainer;\n\n        fromIndex = container.getObjectPosition(\n          movedObjectWithContext.object.getName()\n        );\n        toIndex = container.getObjectPosition(\n          destinationObjectWithContext.object.getName()\n        );\n      } else if (\n        !movedObjectWithContext.global &&\n        isDestinationItemFirstItemOfGlobalDisplayedList\n      ) {\n        container = objectsContainer;\n        fromIndex = container.getObjectPosition(\n          movedObjectWithContext.object.getName()\n        );\n        toIndex = !this.state.searchText\n          ? container.getObjectsCount()\n          : container.getObjectPosition(\n              displayedLocalObjectsWithContext[\n                displayedLocalObjectsWithContext.length - 1\n              ].object.getName()\n            ) + 1;\n      } else {\n        return;\n      }\n      if (toIndex > fromIndex) toIndex -= 1;\n      container.moveObject(fromIndex, toIndex);\n    });\n    this._onObjectModified(true);\n  };\n\n  _setAsGlobalObject = (objectWithContext: ObjectWithContext) => {\n    const { object } = objectWithContext;\n    const { project, objectsContainer } = this.props;\n\n    const objectName: string = object.getName();\n    if (!objectsContainer.hasObjectNamed(objectName)) return;\n\n    if (project.hasObjectNamed(objectName)) {\n      showWarningBox(\n        'A global object with this name already exists. Please change the object name before setting it as a global object',\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    const answer = Window.showConfirmDialog(\n      \"This object will be loaded and available in all the scenes. This is only recommended for objects that you reuse a lot and can't be undone. Make this object global?\"\n    );\n    if (!answer) return;\n\n    // It's safe to call moveObjectToAnotherContainer because it does not invalidate the\n    // references to the object in memory - so other editors like InstancesRenderer can\n    // continue to work.\n    objectsContainer.moveObjectToAnotherContainer(\n      objectName,\n      project,\n      project.getObjectsCount()\n    );\n    this._onObjectModified(true);\n  };\n\n  forceUpdateList = () => {\n    this.forceUpdate();\n    if (this.sortableList) this.sortableList.forceUpdateGrid();\n  };\n\n  _openEditTagDialog = (tagEditedObject: ?gdObject) => {\n    this.setState({\n      tagEditedObject,\n    });\n  };\n\n  _changeObjectTags = (object: gdObject, tags: Tags) => {\n    object.setTags(getStringFromTags(tags));\n\n    // Force update the list as it's possible that user removed a tag\n    // from an object, that should then not be shown anymore in the list.\n    this._onObjectModified(true);\n  };\n\n  _selectObject = (objectWithContext: ?ObjectWithContext) => {\n    this.props.onObjectSelected(\n      objectWithContext ? objectWithContext.object.getName() : ''\n    );\n  };\n\n  _getObjectThumbnail = (objectWithContext: ObjectWithContext) =>\n    this.props.getThumbnail(this.props.project, objectWithContext.object);\n\n  _renderObjectMenuTemplate = (i18n: I18nType) => (\n    objectWithContext: ObjectWithContext,\n    index: number\n  ) => {\n    const { object } = objectWithContext;\n    const objectMetadata = gd.MetadataProvider.getObjectMetadata(\n      this.props.project.getCurrentPlatform(),\n      object.getType()\n    );\n    return [\n      {\n        label: i18n._(t`Copy`),\n        click: () => this._copyObject(objectWithContext),\n      },\n      {\n        label: i18n._(t`Cut`),\n        click: () => this._cutObject(i18n, objectWithContext),\n      },\n      {\n        label: getPasteLabel(objectWithContext.global),\n        enabled: Clipboard.has(CLIPBOARD_KIND),\n        click: () => this._paste(objectWithContext),\n      },\n      {\n        label: i18n._(t`Duplicate`),\n        click: () => this._duplicateObject(objectWithContext),\n      },\n      { type: 'separator' },\n      {\n        label: i18n._(t`Edit object`),\n        click: () => this.props.onEditObject(object),\n      },\n      {\n        label: i18n._(t`Edit object variables`),\n        click: () => this.props.onEditObject(object, 'variables'),\n      },\n      {\n        label: i18n._(t`Edit behaviors`),\n        click: () => this.props.onEditObject(object, 'behaviors'),\n      },\n      {\n        label: i18n._(t`Edit effects`),\n        click: () => this.props.onEditObject(object, 'effects'),\n        enabled: !objectMetadata.isUnsupportedBaseObjectCapability('effect'),\n      },\n      { type: 'separator' },\n      {\n        label: i18n._(t`Rename`),\n        click: () => this._editName(objectWithContext),\n      },\n      {\n        label: i18n._(t`Set as global object`),\n        enabled: !isObjectWithContextGlobal(objectWithContext),\n        click: () => this._setAsGlobalObject(objectWithContext),\n      },\n      {\n        label: i18n._(t`Tags`),\n        submenu: buildTagsMenuTemplate({\n          noTagLabel: 'No tags',\n          getAllTags: this.props.getAllObjectTags,\n          selectedTags: getTagsFromString(object.getTags()),\n          onChange: objectTags => {\n            this._changeObjectTags(object, objectTags);\n          },\n          editTagsLabel: 'Add/edit tags...',\n          onEditTags: () => this._openEditTagDialog(object),\n        }),\n      },\n      {\n        label: i18n._(t`Delete`),\n        click: () => this._deleteObject(i18n, objectWithContext),\n      },\n      { type: 'separator' },\n      {\n        label: i18n._(t`Add instance to the scene`),\n        click: () => this.props.onAddObjectInstance(object.getName()),\n      },\n      { type: 'separator' },\n      {\n        label: i18n._(t`Add a new object...`),\n        click: () => this.onAddNewObject(),\n      },\n    ];\n  };\n\n  _onObjectModified = (shouldForceUpdateList: boolean) => {\n    if (this.props.unsavedChanges)\n      this.props.unsavedChanges.triggerUnsavedChanges();\n\n    if (shouldForceUpdateList) this.forceUpdateList();\n    else this.forceUpdate();\n  };\n\n  render() {\n    const {\n      project,\n      layout,\n      objectsContainer,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n      selectedObjectTags,\n      events,\n    } = this.props;\n    const { searchText, tagEditedObject } = this.state;\n\n    const lists = enumerateObjects(project, objectsContainer);\n    this._displayedObjectWithContextsList = filterObjectsList(\n      lists.allObjectsList,\n      {\n        searchText,\n        selectedTags: selectedObjectTags,\n      }\n    );\n    const selectedObjects = this._displayedObjectWithContextsList.filter(\n      objectWithContext =>\n        this.props.selectedObjectNames.indexOf(\n          objectWithContext.object.getName()\n        ) !== -1\n    );\n    const renamedObjectWithContext = this._displayedObjectWithContextsList.find(\n      isSameObjectWithContext(this.state.renamedObjectWithContext)\n    );\n\n    // Force List component to be mounted again if project or objectsContainer\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const listKey = project.ptr + ';' + objectsContainer.ptr;\n\n    return (\n      <Background maxWidth>\n        <TagChips\n          tags={this.props.selectedObjectTags}\n          onChange={this.props.onChangeSelectedObjectTags}\n        />\n        <div style={styles.listContainer}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <I18n>\n                {({ i18n }) => (\n                  <SortableVirtualizedItemList\n                    key={listKey}\n                    ref={sortableList => (this.sortableList = sortableList)}\n                    fullList={this._displayedObjectWithContextsList}\n                    width={width}\n                    height={height}\n                    getItemName={getObjectWithContextName}\n                    getItemThumbnail={this._getObjectThumbnail}\n                    getItemId={(objectWithContext, index) => {\n                      return 'object-item-' + index;\n                    }}\n                    isItemBold={isObjectWithContextGlobal}\n                    onEditItem={objectWithContext =>\n                      this.props.onEditObject(objectWithContext.object)\n                    }\n                    onAddNewItem={this.onAddNewObject}\n                    addNewItemLabel={<Trans>Add a new object</Trans>}\n                    addNewItemId=\"add-new-object-button\"\n                    selectedItems={selectedObjects}\n                    onItemSelected={this._selectObject}\n                    renamedItem={renamedObjectWithContext}\n                    onRename={this._rename}\n                    buildMenuTemplate={this._renderObjectMenuTemplate(i18n)}\n                    onMoveSelectionToItem={this._moveSelectionTo}\n                    canMoveSelectionToItem={this._canMoveSelectionTo}\n                    scaleUpItemIconWhenSelected={useScreenType() === 'touch'}\n                    reactDndType={objectWithContextReactDndType}\n                  />\n                )}\n              </I18n>\n            )}\n          </AutoSizer>\n        </div>\n        <SearchBar\n          value={searchText}\n          onRequestSearch={() => {}}\n          onChange={text =>\n            this.setState({\n              searchText: text,\n            })\n          }\n        />\n        {this.state.newObjectDialogOpen && (\n          <NewObjectDialog\n            onClose={() =>\n              this.setState({\n                newObjectDialogOpen: false,\n              })\n            }\n            onCreateNewObject={this.addObject}\n            onObjectAddedFromAsset={this._onObjectAddedFromAsset}\n            project={project}\n            layout={layout}\n            objectsContainer={objectsContainer}\n            events={events}\n            resourceSources={resourceSources}\n            onChooseResource={onChooseResource}\n            resourceExternalEditors={resourceExternalEditors}\n          />\n        )}\n        {tagEditedObject && (\n          <EditTagsDialog\n            tagsString={tagEditedObject.getTags()}\n            onEdit={tags => {\n              this._changeObjectTags(tagEditedObject, tags);\n              this._openEditTagDialog(null);\n            }}\n            onCancel={() => this._openEditTagDialog(null)}\n          />\n        )}\n      </Background>\n    );\n  }\n}\n","import { isMacLike } from '../../Utils/Platform';\n\nexport const MOVEMENT_BIG_DELTA = 5;\n\nconst CTRL_KEY = 17;\nconst SHIFT_KEY = 16;\nconst LEFT_KEY = 37;\nconst UP_KEY = 38;\nconst RIGHT_KEY = 39;\nconst DOWN_KEY = 40;\nconst BACKSPACE_KEY = 8;\nconst SPACE_KEY = 32;\nconst DELETE_KEY = 46;\nconst EQUAL_KEY = 187;\nconst MINUS_KEY = 189;\nconst NUMPAD_ADD = 107;\nconst NUMPAD_SUBTRACT = 109;\nconst C_KEY = 67;\nconst F_KEY = 70;\nconst V_KEY = 86;\nconst X_KEY = 88;\nconst Y_KEY = 89;\nconst Z_KEY = 90;\nconst MID_MOUSE_BUTTON = 1;\n\n/**\n * Deprecated class to handle shortcut. Don't use this anymore, prefer the non\n * deprecated version that does not add listener on the document (risking catching events\n * when the components are not focused).\n *\n * TODO: Replace InstancesEditor shortcuts by the new `KeyboardShortcuts`.\n */\nexport default class DeprecatedKeyboardShortcuts {\n  constructor({\n    onDelete,\n    onMove,\n    onCopy,\n    onCut,\n    onPaste,\n    onUndo,\n    onRedo,\n    onSearch,\n    onZoomOut,\n    onZoomIn,\n  }) {\n    this.onDelete = onDelete || this._noop;\n    this.onMove = onMove || this._noop;\n    this.onCopy = onCopy || this._noop;\n    this.onCut = onCut || this._noop;\n    this.onPaste = onPaste || this._noop;\n    this.onUndo = onUndo || this._noop;\n    this.onRedo = onRedo || this._noop;\n    this.onZoomOut = onZoomOut || this._noop;\n    this.onZoomIn = onZoomIn || this._noop;\n    this.onSearch = onSearch || this._noop;\n    this.isFocused = false;\n    this.shiftPressed = false;\n    this.rawCtrlPressed = false;\n    this.metaPressed = false;\n    this.spacePressed = false;\n    this.mouseMidButtonPressed = false;\n    this.mount();\n  }\n\n  shouldCloneInstances() {\n    return this._isControlPressed();\n  }\n\n  shouldMultiSelect() {\n    return this.shiftPressed;\n  }\n\n  shouldFollowAxis() {\n    return this.shiftPressed;\n  }\n\n  shouldNotSnapToGrid() {\n    return this.altPressed;\n  }\n\n  shouldResizeProportionally() {\n    return this.shiftPressed;\n  }\n\n  shouldScrollHorizontally() {\n    return this.altPressed;\n  }\n\n  shouldZoom() {\n    if (isMacLike()) {\n      return this._isControlPressed();\n    } else {\n      if (!this._isControlPressed() && !this.altPressed && !this.shiftPressed) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  shouldMoveView() {\n    return this.spacePressed || this.mouseMidButtonPressed;\n  }\n\n  _isControlPressed = () => {\n    // On macOS, meta key (Apple/Command key) acts as Control key on Windows/Linux.\n    return this.metaPressed || this.rawCtrlPressed;\n  };\n\n  _onKeyDown = evt => {\n    if (!this.isFocused) return;\n\n    let preventDefault = false;\n\n    if (evt.metaKey) this.metaPressed = true;\n    if (evt.altKey) this.altPressed = true;\n    if (evt.which === CTRL_KEY) this.rawCtrlPressed = true;\n    if (evt.which === SHIFT_KEY) this.shiftPressed = true;\n    if (evt.which === SPACE_KEY) this.spacePressed = true;\n\n    const textEditorSelectors = 'textarea, input, [contenteditable=\"true\"]';\n    if (evt.target && evt.target.closest(textEditorSelectors)) {\n      return; // Something else is currently being edited.\n    }\n\n    if (this.onMove) {\n      if (evt.which === UP_KEY) {\n        this.shiftPressed\n          ? this.onMove(0, -MOVEMENT_BIG_DELTA)\n          : this.onMove(0, -1);\n      } else if (evt.which === DOWN_KEY) {\n        this.shiftPressed\n          ? this.onMove(0, MOVEMENT_BIG_DELTA)\n          : this.onMove(0, 1);\n      } else if (evt.which === LEFT_KEY) {\n        this.shiftPressed\n          ? this.onMove(-MOVEMENT_BIG_DELTA, 0)\n          : this.onMove(-1, 0);\n      } else if (evt.which === RIGHT_KEY) {\n        this.shiftPressed\n          ? this.onMove(MOVEMENT_BIG_DELTA, 0)\n          : this.onMove(1, 0);\n      }\n    }\n    if (evt.which === BACKSPACE_KEY || evt.which === DELETE_KEY) {\n      this.onDelete();\n      preventDefault = true;\n    }\n    if (this._isControlPressed() && evt.which === C_KEY) {\n      this.onCopy();\n    }\n    if (this._isControlPressed() && evt.which === X_KEY) {\n      this.onCut();\n    }\n    if (this._isControlPressed() && evt.which === V_KEY) {\n      this.onPaste();\n    }\n    if (this._isControlPressed() && evt.which === Z_KEY) {\n      if (this.shiftPressed) {\n        this.onRedo();\n      } else {\n        this.onUndo();\n      }\n    }\n    if (this._isControlPressed() && evt.which === Y_KEY) {\n      this.onRedo();\n    }\n    if (this._isControlPressed() && evt.which === F_KEY) {\n      this.onSearch();\n    }\n\n    if (this._isControlPressed() && evt.which === MINUS_KEY) {\n      this.onZoomOut();\n    }\n    if (evt.which === NUMPAD_SUBTRACT) {\n      this.onZoomOut();\n    }\n\n    if (this._isControlPressed() && evt.which === EQUAL_KEY) {\n      this.onZoomIn();\n    }\n    if (evt.which === NUMPAD_ADD) {\n      this.onZoomIn();\n    }\n\n    if (preventDefault) {\n      if (evt.preventDefault) evt.preventDefault();\n      return false;\n    }\n  };\n\n  _onKeyUp = evt => {\n    // Always handle key up event, even if we don't have the focus,\n    // for modifier keys to ensure we don't lose track of their pressed/unpressed status.\n\n    if (!evt.metaKey) this.metaPressed = false;\n    if (!evt.altKey) this.altPressed = false;\n    if (evt.which === CTRL_KEY) this.rawCtrlPressed = false;\n    if (evt.which === SHIFT_KEY) this.shiftPressed = false;\n    if (evt.which === SPACE_KEY) this.spacePressed = false;\n\n    let preventDefault = false;\n\n    if (evt.which === BACKSPACE_KEY || evt.which === DELETE_KEY) {\n      preventDefault = true;\n    }\n\n    if (preventDefault) {\n      if (evt.preventDefault) evt.preventDefault();\n      return false;\n    }\n  };\n\n  _onMouseDown = evt => {\n    if (!this.isFocused) return;\n\n    if (!isMacLike()) {\n      if (evt.button === MID_MOUSE_BUTTON) {\n        this.mouseMidButtonPressed = true;\n      } else {\n        this.mouseMidButtonPressed = false;\n      }\n    }\n  };\n\n  _onMouseUp = evt => {\n    if (!this.isFocused) return;\n\n    if (!isMacLike() && evt.button === MID_MOUSE_BUTTON) {\n      this.mouseMidButtonPressed = false;\n    }\n  };\n\n  _onKeyPress = evt => {};\n\n  _noop = () => {};\n\n  focus() {\n    this.isFocused = true;\n  }\n\n  blur() {\n    this.isFocused = false;\n\n    // Clear these keys on blur to handle the case where app switching via\n    // Cmd+Tab, Win+Tab, or Alt+Tab prevents us from capturing the \"keyup\" event.\n    this.metaPressed = false;\n    this.altPressed = false;\n  }\n\n  mount() {\n    if (typeof document === 'undefined') return;\n\n    document.addEventListener('keydown', this._onKeyDown, true);\n    document.addEventListener('keyup', this._onKeyUp, true);\n    document.addEventListener('keypress', this._onKeyPress, true);\n    document.addEventListener('mousedown', this._onMouseDown, true);\n    document.addEventListener('mouseup', this._onMouseUp, true);\n  }\n\n  unmount() {\n    if (typeof document === 'undefined') return;\n\n    document.removeEventListener('keydown', this._onKeyDown, true);\n    document.removeEventListener('keyup', this._onKeyUp, true);\n    document.removeEventListener('keypress', this._onKeyPress, true);\n    document.removeEventListener('mousedown', this._onMouseDown, true);\n    document.removeEventListener('mouseup', this._onMouseUp, true);\n  }\n}\n","// @flow\nimport ViewPosition from './ViewPosition';\n\nexport const shouldBeHandledByPinch = (event: ?TouchEvent) => {\n  if (!event) return false;\n\n  const { targetTouches } = event;\n  return targetTouches && targetTouches.length >= 2;\n};\n\ntype PinchDetectorArgs = {|\n  canvas: HTMLCanvasElement,\n  onPinchStart: () => void,\n  onPinchMove: (x: number, y: number, scale: number) => void,\n  onPinchEnd: () => void,\n|};\n\n/**\n * Attach events to the canvas that will notify of a pinch at some position\n * and scaling associated with it.\n * Returns a function that can be called to remove these events.\n */\nconst registerCanvasPinchDetector = ({\n  canvas,\n  onPinchStart,\n  onPinchMove,\n  onPinchEnd,\n}: PinchDetectorArgs) => {\n  let lastPinch = null;\n\n  function start() {\n    canvas.addEventListener('touchmove', move);\n  }\n\n  function move(e: TouchEvent) {\n    if (!shouldBeHandledByPinch(e)) {\n      return;\n    }\n    var t = e.targetTouches;\n\n    var dx = t[0].clientX - t[1].clientX;\n    var dy = t[0].clientY - t[1].clientY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    if (!lastPinch) {\n      lastPinch = {\n        p: {\n          distance: distance,\n          date: new Date(),\n        },\n      };\n      onPinchStart();\n      return;\n    }\n    var now = new Date();\n    var interval = now - lastPinch.p.date;\n    if (interval < 12) {\n      return;\n    }\n    const newCenter = {\n      x: (t[0].clientX + t[1].clientX) / 2,\n      y: (t[0].clientY + t[1].clientY) / 2,\n    };\n    const scaleChange = distance / lastPinch.p.distance;\n\n    onPinchMove(newCenter.x, newCenter.y, scaleChange);\n    lastPinch.p = {\n      distance: distance,\n      date: now,\n    };\n  }\n\n  function end(e: TouchEvent) {\n    canvas.removeEventListener('touchmove', move);\n    if (!lastPinch) {\n      return;\n    }\n\n    onPinchEnd();\n    lastPinch = null;\n  }\n\n  canvas.addEventListener('touchstart', start);\n  canvas.addEventListener('touchend', end);\n\n  function unregisterCanvasPinchDetector() {\n    canvas.removeEventListener('touchstart', start);\n    canvas.removeEventListener('touchmove', move);\n    canvas.removeEventListener('touchend', end);\n  }\n\n  return unregisterCanvasPinchDetector;\n};\n\ntype Props = {|\n  canvas: HTMLCanvasElement,\n  setZoomFactor: number => void,\n  getZoomFactor: () => number,\n  viewPosition: ViewPosition,\n|};\n\n/**\n * Handle pinch to zoom/move on the canvas, changing the zoom factor or view\n * position accordingly.\n */\nexport default class PinchHandler {\n  _lastPinchCenterX: number | null = null;\n  _lastPinchCenterY: number | null = null;\n  _setZoomFactor: number => void;\n  _getZoomFactor: () => number;\n  _viewPosition: ViewPosition;\n  _unregisterCanvasPinchDetector: () => void;\n\n  constructor({ canvas, setZoomFactor, getZoomFactor, viewPosition }: Props) {\n    this._setZoomFactor = setZoomFactor;\n    this._getZoomFactor = getZoomFactor;\n    this._viewPosition = viewPosition;\n    this._unregisterCanvasPinchDetector = registerCanvasPinchDetector({\n      canvas,\n      onPinchStart: this._startPinch,\n      onPinchMove: this._onPinchMove,\n      onPinchEnd: this._endPinch,\n    });\n  }\n\n  _startPinch = () => {\n    // Nothing to do\n  };\n\n  _onPinchMove = (centerX: number, centerY: number, scale: number) => {\n    if (this._lastPinchCenterX === null || this._lastPinchCenterY === null) {\n      this._lastPinchCenterX = centerX;\n      this._lastPinchCenterY = centerY;\n      return;\n    }\n\n    const deltaX = centerX - this._lastPinchCenterX;\n    const deltaY = centerY - this._lastPinchCenterY;\n    const sceneDeltaX = deltaX / this._getZoomFactor();\n    const sceneDeltaY = deltaY / this._getZoomFactor();\n    this._viewPosition.scrollBy(-sceneDeltaX, -sceneDeltaY);\n    this._lastPinchCenterX = centerX;\n    this._lastPinchCenterY = centerY;\n\n    this._setZoomFactor(this._getZoomFactor() * scale);\n  };\n\n  _endPinch = () => {\n    this._lastPinchCenterX = null;\n    this._lastPinchCenterY = null;\n  };\n\n  unmount = () => {\n    this._unregisterCanvasPinchDetector();\n  };\n}\n","import { mapFor } from '../Utils/MapFor';\n\nexport default layersContainer =>\n  mapFor(0, layersContainer.getLayersCount(), i => {\n    return {\n      value: layersContainer.getLayerAt(i).getName(),\n      label: layersContainer.getLayerAt(i).getName() || 'Base layer',\n    };\n  });\n","// @flow\nimport * as React from 'react';\nimport Measure from 'react-measure';\n\nconst styles = {\n  flexContainer: { display: 'flex', flex: 1, position: 'relative' },\n};\n\ntype Props = {|\n  children: ({| width: number, height: number |}) => React.Node,\n|};\n\n/**\n * Take a component and pass the maximum size that the component can take\n * as width and height props.\n */\nexport const FullSizeMeasurer = ({ children }: Props) => (\n  <Measure bounds>\n    {({ contentRect, measureRef }) => (\n      <div style={styles.flexContainer} ref={measureRef}>\n        {!!contentRect &&\n          !!contentRect.bounds &&\n          children({\n            width: contentRect.bounds.width,\n            height: contentRect.bounds.height,\n          })}\n      </div>\n    )}\n  </Measure>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport { Column, Line } from '../UI/Grid';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport { mapFor } from '../Utils/MapFor';\nimport RaisedButton from '../UI/RaisedButton';\nimport IconButton from '../UI/IconButton';\nimport ElementWithMenu from '../UI/Menu/ElementWithMenu';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport MiniToolbar, { MiniToolbarText } from '../UI/MiniToolbar';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport Add from '@material-ui/icons/Add';\nimport PropertiesEditor from '../PropertiesEditor';\nimport DismissableAlertMessage from '../UI/DismissableAlertMessage';\nimport BackgroundText from '../UI/BackgroundText';\nimport { MarkdownText } from '../UI/MarkdownText';\nimport useForceUpdate from '../Utils/UseForceUpdate';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport {\n  enumerateEffectsMetadata,\n  type EnumeratedEffectMetadata,\n  setEffectDefaultParameters,\n} from './EnumerateEffects';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport ScrollView from '../UI/ScrollView';\nimport { EmptyPlaceholder } from '../UI/EmptyPlaceholder';\nimport {\n  addCreateBadgePreHookIfNotClaimed,\n  TRIVIAL_FIRST_EFFECT,\n} from '../Utils/GDevelopServices/Badge';\nimport AuthenticatedUserContext from '../Profile/AuthenticatedUserContext';\n\ntype Props = {|\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  effectsContainer: gdEffectsContainer,\n  onEffectsUpdated: () => void,\n  target: 'object' | 'layer',\n|};\n\nconst getEnumeratedEffectMetadata = (\n  allEffectDescriptions: Array<EnumeratedEffectMetadata>,\n  effectType: string\n): ?EnumeratedEffectMetadata => {\n  return allEffectDescriptions.find(\n    effectMetadata => effectMetadata.type === effectType\n  );\n};\n\n/**\n * Display a list of effects and allow to add/remove/edit them.\n *\n * All available effects are fetched from the project's platform.\n */\nexport default function EffectsList(props: Props) {\n  const { effectsContainer, onEffectsUpdated } = props;\n\n  const preferences = React.useContext(PreferencesContext);\n  const authenticatedUser = React.useContext(AuthenticatedUserContext);\n  const showEffectParameterNames = preferences.values.showEffectParameterNames;\n  const setShowEffectParameterNames = preferences.setShowEffectParameterNames;\n\n  const allEffectMetadata = React.useMemo(\n    () => enumerateEffectsMetadata(props.project),\n    [props.project]\n  );\n\n  const forceUpdate = useForceUpdate();\n\n  const _addEffect = () => {\n    const newName = newNameGenerator('Effect', name =>\n      effectsContainer.hasEffectNamed(name)\n    );\n    effectsContainer.insertNewEffect(\n      newName,\n      effectsContainer.getEffectsCount()\n    );\n\n    forceUpdate();\n    onEffectsUpdated();\n  };\n\n  const addEffect = addCreateBadgePreHookIfNotClaimed(\n    authenticatedUser,\n    TRIVIAL_FIRST_EFFECT,\n    _addEffect\n  );\n\n  const removeEffect = (name: string) => {\n    effectsContainer.removeEffect(name);\n    forceUpdate();\n    onEffectsUpdated();\n  };\n\n  const chooseEffectType = (effect: gdEffect, newEffectType: string) => {\n    effect.setEffectType(newEffectType);\n    const effectMetadata = getEnumeratedEffectMetadata(\n      allEffectMetadata,\n      newEffectType\n    );\n\n    if (effectMetadata) {\n      setEffectDefaultParameters(effect, effectMetadata.effectMetadata);\n    }\n\n    forceUpdate();\n    onEffectsUpdated();\n  };\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Column noMargin expand useFullHeight>\n          {effectsContainer.getEffectsCount() !== 0 ? (\n            <React.Fragment>\n              <ScrollView>\n                {effectsContainer.getEffectsCount() > 3 && (\n                  <Line>\n                    <Column>\n                      <DismissableAlertMessage\n                        identifier=\"too-much-effects\"\n                        kind=\"warning\"\n                      >\n                        <Trans>\n                          Using a lot of effects can have a severe negative\n                          impact on the rendering performance, especially on\n                          low-end or mobile devices. Consider using less effects\n                          if possible. You can also disable and re-enable\n                          effects as needed using events.\n                        </Trans>\n                      </DismissableAlertMessage>\n                    </Column>\n                  </Line>\n                )}\n                {mapFor(0, effectsContainer.getEffectsCount(), (i: number) => {\n                  const effect: gdEffect = effectsContainer.getEffectAt(i);\n                  const effectType = effect.getEffectType();\n                  const effectMetadata = getEnumeratedEffectMetadata(\n                    allEffectMetadata,\n                    effectType\n                  );\n\n                  return (\n                    <React.Fragment key={i}>\n                      <MiniToolbar>\n                        <MiniToolbarText firstChild>\n                          <Trans>Effect name:</Trans>\n                        </MiniToolbarText>\n                        <SemiControlledTextField\n                          margin=\"none\"\n                          commitOnBlur\n                          hintText={t`Enter the effect name`}\n                          value={effect.getName()}\n                          onChange={newName => {\n                            if (newName === effect.getName()) return;\n\n                            effect.setName(newName);\n                            forceUpdate();\n                            onEffectsUpdated();\n                          }}\n                          fullWidth\n                        />\n                        <MiniToolbarText>\n                          <Trans>Type:</Trans>\n                        </MiniToolbarText>\n                        <SelectField\n                          margin=\"none\"\n                          value={effectType}\n                          onChange={(e, i, newEffectType: string) =>\n                            chooseEffectType(effect, newEffectType)\n                          }\n                          fullWidth\n                          hintText={t`Choose the effect to apply`}\n                        >\n                          {allEffectMetadata.map(effectMetadata => (\n                            <SelectOption\n                              key={effectMetadata.type}\n                              value={effectMetadata.type}\n                              primaryText={effectMetadata.fullName}\n                              disabled={\n                                props.target === 'object' &&\n                                effectMetadata.isMarkedAsNotWorkingForObjects\n                              }\n                            />\n                          ))}\n                        </SelectField>\n                        <ElementWithMenu\n                          element={\n                            <IconButton>\n                              <MoreVert />\n                            </IconButton>\n                          }\n                          buildMenuTemplate={(i18n: I18nType) => [\n                            {\n                              label: i18n._(t`Delete`),\n                              click: () => removeEffect(effect.getName()),\n                            },\n                            { type: 'separator' },\n                            {\n                              type: 'checkbox',\n                              label: i18n._(t`Show Parameter Names`),\n                              checked: showEffectParameterNames,\n                              click: () =>\n                                setShowEffectParameterNames(\n                                  !showEffectParameterNames\n                                ),\n                            },\n                          ]}\n                        />\n                      </MiniToolbar>\n                      <Line expand noMargin>\n                        <Column expand>\n                          {!!effectType && effectMetadata ? (\n                            <React.Fragment>\n                              <Line>\n                                <BackgroundText>\n                                  <MarkdownText\n                                    source={effectMetadata.description}\n                                  />\n                                </BackgroundText>\n                              </Line>\n                              <PropertiesEditor\n                                instances={[effect]}\n                                schema={effectMetadata.parametersSchema}\n                                project={props.project}\n                                resourceSources={props.resourceSources}\n                                onChooseResource={props.onChooseResource}\n                                resourceExternalEditors={\n                                  props.resourceExternalEditors\n                                }\n                                renderExtraDescriptionText={\n                                  showEffectParameterNames\n                                    ? parameterName =>\n                                        i18n._(\n                                          t`Parameter name in events: \\`${parameterName}\\` `\n                                        )\n                                    : undefined\n                                }\n                              />\n                            </React.Fragment>\n                          ) : null}\n                        </Column>\n                      </Line>\n                    </React.Fragment>\n                  );\n                })}\n              </ScrollView>\n              <Column>\n                <Line justifyContent=\"flex-end\" expand>\n                  <RaisedButton\n                    primary\n                    label={<Trans>Add an effect</Trans>}\n                    onClick={addEffect}\n                    icon={<Add />}\n                  />\n                </Line>\n              </Column>\n            </React.Fragment>\n          ) : (\n            <Column noMargin expand justifyContent=\"center\">\n              <EmptyPlaceholder\n                title={<Trans>Add your first effect</Trans>}\n                description={\n                  <Trans>Effects create visual changes to the object.</Trans>\n                }\n                actionLabel={<Trans>Add an effect</Trans>}\n                helpPagePath={\n                  props.target === 'object'\n                    ? '/objects/effects'\n                    : '/interface/scene-editor/layer-effects'\n                }\n                onAdd={addEffect}\n              />\n            </Column>\n          )}\n        </Column>\n      )}\n    </I18n>\n  );\n}\n","//TODO: Factor with styles.js from LayersList.\nexport default {\n  handleColumn: {\n    width: 24,\n    paddingLeft: 8,\n    paddingRight: 0,\n  },\n  coordinateColumn: {\n    width: 48,\n  },\n  toolColumn: {\n    width: 48,\n    height: 32,\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport SelectField from '../../../../UI/SelectField';\nimport SelectOption from '../../../../UI/SelectOption';\n\nimport Toggle from '../../../../UI/Toggle';\nimport { mapFor } from '../../../../Utils/MapFor';\nimport { getCurrentElements } from './SpriteObjectHelper';\nimport { ResponsiveLineStackLayout } from '../../../../UI/Layout';\n\ntype Props = {|\n  spriteObject: gdSpriteObject,\n\n  animationIndex: number,\n  directionIndex: number,\n  spriteIndex: number,\n\n  chooseAnimation: number => void,\n  chooseDirection: number => void,\n  chooseSprite: number => void,\n\n  sameForAllAnimations: boolean,\n  sameForAllSprites: boolean,\n\n  setSameForAllAnimations: boolean => void,\n  setSameForAllSprites: boolean => void,\n\n  setSameForAllAnimationsLabel: string | React.Node,\n  setSameForAllSpritesLabel: string | React.Node,\n|};\n\n/**\n * A component that displays selector to browse the animations/directions/sprite\n * of a Sprite object. Also have toggles so that the user can choose if the edited property\n * (typically, the points or the collision masks of the sprite) should be shared between\n * all sprites of an animation, or between all sprites of all animations of the object.\n */\nexport default class SpriteSelector extends React.Component<Props, void> {\n  render() {\n    const {\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex,\n      sameForAllAnimations,\n      sameForAllSprites,\n      chooseAnimation,\n      chooseDirection,\n      chooseSprite,\n      setSameForAllAnimations,\n      setSameForAllSprites,\n      setSameForAllAnimationsLabel,\n      setSameForAllSpritesLabel,\n    } = this.props;\n\n    const {\n      hasValidAnimation,\n      animation,\n      hasValidDirection,\n      direction,\n    } = getCurrentElements(\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex\n    );\n\n    return (\n      <React.Fragment>\n        <ResponsiveLineStackLayout>\n          <SelectField\n            fullWidth\n            floatingLabelText={<Trans>Animation</Trans>}\n            value={this.props.animationIndex}\n            onChange={(e, i, value: string) =>\n              chooseAnimation(parseInt(value, 10) || 0)\n            }\n          >\n            {mapFor(0, spriteObject.getAnimationsCount(), i => {\n              const animation = spriteObject.getAnimation(i);\n              return (\n                <SelectOption\n                  key={i}\n                  value={i}\n                  primaryText={t`Animation #${i} ${animation.getName()}`}\n                />\n              );\n            })}\n          </SelectField>\n          {hasValidAnimation && animation.getDirectionsCount() > 1 && (\n            <SelectField\n              fullWidth\n              floatingLabelText={<Trans>Direction</Trans>}\n              value={this.props.directionIndex}\n              onChange={(e, i, value: string) =>\n                chooseDirection(parseInt(value, 10) || 0)\n              }\n            >\n              {mapFor(0, animation.getDirectionsCount(), i => {\n                return (\n                  <SelectOption\n                    value={i}\n                    key={i}\n                    primaryText={t`Direction #${i}`}\n                  />\n                );\n              })}\n            </SelectField>\n          )}\n          {hasValidDirection && (\n            <SelectField\n              fullWidth\n              floatingLabelText={<Trans>Frame</Trans>}\n              value={this.props.spriteIndex}\n              onChange={(e, i, value: string) =>\n                chooseSprite(parseInt(value, 10) || 0)\n              }\n            >\n              {mapFor(0, direction.getSpritesCount(), i => {\n                return (\n                  <SelectOption\n                    value={i}\n                    key={i}\n                    primaryText={t`Frame #${i}`}\n                  />\n                );\n              })}\n            </SelectField>\n          )}\n        </ResponsiveLineStackLayout>\n        <Toggle\n          label={setSameForAllAnimationsLabel}\n          labelPosition=\"right\"\n          toggled={sameForAllAnimations}\n          onToggle={(e, checked) => setSameForAllAnimations(checked)}\n        />\n        <Toggle\n          label={setSameForAllSpritesLabel}\n          labelPosition=\"right\"\n          toggled={sameForAllSprites}\n          onToggle={(e, checked) => setSameForAllSprites(checked)}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","export default {\n  coordinateColumn: {\n    width: 96,\n  },\n  toolColumn: {\n    width: 48,\n  },\n};\n","// @flow\nimport React from 'react';\nimport {\n  type RenderEditorContainerProps,\n  type RenderEditorContainerPropsWithRef,\n} from './BaseEditor';\nimport ResourcesEditor from '../../ResourcesEditor';\n\nexport class ResourcesEditorContainer extends React.Component<RenderEditorContainerProps> {\n  editor: ?ResourcesEditor;\n\n  shouldComponentUpdate(nextProps: RenderEditorContainerProps) {\n    // Prevent any update to the editor if the editor is not active,\n    // and so not visible to the user.\n    return nextProps.isActive;\n  }\n\n  getProject(): ?gdProject {\n    return this.props.project;\n  }\n\n  getLayout(): ?gdLayout {\n    return null;\n  }\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  forceUpdateEditor() {\n    // No updates to be done.\n  }\n\n  componentDidUpdate(prevProps: RenderEditorContainerProps) {\n    if (\n      this.editor &&\n      this.props.isActive &&\n      prevProps.isActive !== this.props.isActive\n    )\n      this.editor.refreshResourcesList();\n  }\n\n  render() {\n    const { project } = this.props;\n    if (!project) return null;\n\n    return (\n      <ResourcesEditor\n        setToolbar={this.props.setToolbar}\n        onDeleteResource={this.props.onDeleteResource}\n        onRenameResource={this.props.onRenameResource}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        ref={editor => (this.editor = editor)}\n        project={project}\n      />\n    );\n  }\n}\n\nexport const renderResourcesEditorContainer = (\n  props: RenderEditorContainerPropsWithRef\n) => <ResourcesEditorContainer {...props} />;\n","// @flow\nimport * as React from 'react';\nimport { prepareInstancesEditorSettings } from '../../InstancesEditor/InstancesEditorSettings';\nimport SceneEditor from '../../SceneEditor';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../../Utils/Serializer';\nimport {\n  type RenderEditorContainerProps,\n  type RenderEditorContainerPropsWithRef,\n} from './BaseEditor';\n\nexport class SceneEditorContainer extends React.Component<RenderEditorContainerProps> {\n  editor: ?SceneEditor;\n\n  getProject(): ?gdProject {\n    return this.props.project;\n  }\n\n  shouldComponentUpdate(nextProps: RenderEditorContainerProps) {\n    // This optimization is a bit more cautious than the traditional one, to still allow\n    // children, and in particular SceneEditor and InstancesEditor, to be notified when isActive\n    // goes from true to false (in which case PIXI rendering is halted). If isActive was false\n    // and remains false, it's safe to stop update here (PIXI rendering is already halted).\n    if (!this.props.isActive && !nextProps.isActive) {\n      return false;\n    }\n\n    return true;\n  }\n\n  componentDidMount() {\n    if (this.props.isActive) {\n      const { projectItemName } = this.props;\n      this.props.setPreviewedLayout(projectItemName);\n    }\n  }\n\n  componentDidUpdate(prevProps: RenderEditorContainerProps) {\n    if (!prevProps.isActive && this.props.isActive) {\n      const { projectItemName } = this.props;\n      this.props.setPreviewedLayout(projectItemName);\n    }\n  }\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  forceUpdateEditor() {\n    if (this.editor) this.editor.forceUpdateObjectsList();\n  }\n\n  getLayout(): ?gdLayout {\n    const { project, projectItemName } = this.props;\n    if (\n      !project ||\n      !projectItemName ||\n      !project.hasLayoutNamed(projectItemName)\n    )\n      return null;\n\n    return project.getLayout(projectItemName);\n  }\n\n  saveUiSettings = () => {\n    const layout = this.getLayout();\n    const editor = this.editor;\n\n    if (editor && layout) {\n      unserializeFromJSObject(\n        layout.getAssociatedEditorSettings(),\n        editor.getInstancesEditorSettings()\n      );\n    }\n  };\n\n  render() {\n    const { project, projectItemName, isActive } = this.props;\n    const layout = this.getLayout();\n    if (!layout || !project) {\n      //TODO: Error component\n      return <div>No layout called {projectItemName} found!</div>;\n    }\n\n    return (\n      <SceneEditor\n        setToolbar={this.props.setToolbar}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        unsavedChanges={this.props.unsavedChanges}\n        ref={editor => (this.editor = editor)}\n        project={project}\n        layout={layout}\n        initialInstances={layout.getInitialInstances()}\n        getInitialInstancesEditorSettings={() =>\n          prepareInstancesEditorSettings(\n            serializeToJSObject(layout.getAssociatedEditorSettings())\n          )\n        }\n        onOpenEvents={this.props.onOpenEvents}\n        isActive={isActive}\n        hotReloadPreviewButtonProps={this.props.hotReloadPreviewButtonProps}\n      />\n    );\n  }\n}\n\nexport const renderSceneEditorContainer = (\n  props: RenderEditorContainerPropsWithRef\n) => <SceneEditorContainer {...props} />;\n","// @flow\n\nexport const timeFunction = (fn: Function, onResult: number => void) => {\n  var t0 = performance.now();\n  fn();\n  var t1 = performance.now();\n  onResult(t1 - t0);\n};\n\nexport const timePromise = <T>(\n  promiseFn: () => Promise<T>,\n  onResult: number => void\n): Promise<T> => {\n  const t0 = performance.now();\n  return promiseFn().then(result => {\n    const t1 = performance.now();\n    onResult(t1 - t0);\n\n    return result;\n  });\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M5.06 3C4.63 3 4.22 3.14 3.84 3.42C3.46 3.7 3.24 4.06 3.14 4.5L2.11 8.91C1.86 10 2.06 10.92 2.69 11.73C2.81 11.85 2.93 11.97 3.04 12.07C3.63 12.64 4.28 13 5.22 13C6.16 13 6.91 12.59 7.47 12.05C8.1 12.67 8.86 13 9.8 13C10.64 13 11.44 12.63 12 12.07C12.68 12.7 13.45 13 14.3 13C15.17 13 15.91 12.67 16.54 12.05C17.11 12.62 17.86 13 18.81 13C19.76 13 20.43 12.65 21 12.06C21.09 11.97 21.18 11.87 21.28 11.77C21.94 10.95 22.14 10 21.89 8.91L20.86 4.5C20.73 4.06 20.5 3.7 20.13 3.42C19.77 3.14 19.38 3 18.94 3M18.89 4.97L19.97 9.38C20.06 9.81 19.97 10.2 19.69 10.55C19.44 10.86 19.13 11 18.75 11C18.44 11 18.17 10.9 17.95 10.66C17.73 10.43 17.61 10.16 17.58 9.84L16.97 5M5.06 5H7.03L6.42 9.84C6.3 10.63 5.91 11 5.25 11C4.84 11 4.53 10.86 4.31 10.55C4.03 10.2 3.94 9.81 4.03 9.38M9.05 5H11V9.7C11 10.05 10.89 10.35 10.64 10.62C10.39 10.88 10.08 11 9.7 11C9.36 11 9.07 10.88 8.84 10.59C8.61 10.3 8.5 10 8.5 9.66V9.5M13 5H14.95L15.5 9.5C15.58 9.92 15.5 10.27 15.21 10.57C14.95 10.87 14.61 11 14.2 11C13.89 11 13.61 10.88 13.36 10.62C13.11 10.35 13 10.05 13 9.7M3 14.03V19C3 20.11 3.89 21 5 21C9.67 21 14.33 21 19 21C20.1 21 21 20.11 21 19V14.05C20.45 14.63 19.75 14.96 19 15C18 15.03 17.25 14.74 16.54 14.05C15.94 14.65 15.14 15 14.3 15C13.4 15 12.6 14.64 12 14.07C11.43 14.64 10.65 15 9.78 15C8.87 15 8.07 14.65 7.47 14.05C6.89 14.64 6.1 15 5.23 15C4.33 15 3.66 14.65 3 14.03Z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../UI/Text';\nimport { type ShowcasedGame } from '../Utils/GDevelopServices/Game';\nimport { ColumnStackLayout, ResponsiveLineStackLayout } from '../UI/Layout';\n\nconst ShowcasedGameTitle = ({\n  showcasedGame,\n  forceColumn = false,\n}: {|\n  showcasedGame: ShowcasedGame,\n  forceColumn?: boolean,\n|}): React.Node => {\n  const { title, author } = showcasedGame;\n  const StackLayout = forceColumn\n    ? ColumnStackLayout\n    : ResponsiveLineStackLayout;\n  return (\n    <StackLayout noMargin alignItems=\"baseline\" expand>\n      <Text noMargin displayInlineAsSpan>\n        {title}\n      </Text>\n      <Text noMargin size=\"body2\" displayInlineAsSpan>\n        <Trans>by {author}</Trans>\n      </Text>\n    </StackLayout>\n  );\n};\n\nexport default ShowcasedGameTitle;\n","// @flow\nimport * as React from 'react';\nimport { type ExampleShortHeader } from '../../Utils/GDevelopServices/Example';\nimport { CorsAwareImage } from '../../UI/CorsAwareImage';\n\nconst styles = {\n  iconBackground: {\n    flex: 0,\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  icon: {\n    background: 'linear-gradient(45deg, #FFFFFF33, #FFFFFF)',\n    padding: 4,\n    borderRadius: 4,\n  },\n};\n\ntype Props = {|\n  exampleShortHeader: ExampleShortHeader,\n  size: number,\n|};\n\nexport const ExampleIcon = ({ exampleShortHeader, size }: Props) => {\n  return (\n    <div style={styles.iconBackground}>\n      <CorsAwareImage\n        style={{ ...styles.icon, height: size }}\n        src={\n          exampleShortHeader.previewImageUrls.find(url =>\n            url.endsWith('thumbnail.png')\n          ) || exampleShortHeader.previewImageUrls[0]\n        }\n        alt={exampleShortHeader.name}\n      />\n    </div>\n  );\n};\n","// @flow\nimport { useEffect, useRef } from 'react';\n\n/**\n * Creates an interval effect for a callback, with a specified delay.\n */\nexport const useInterval = (callback: () => void, delay: number | null) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(\n    () => {\n      function tick() {\n        if (savedCallback.current) savedCallback.current();\n      }\n\n      if (delay !== null) {\n        const id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    },\n    [delay]\n  );\n};\n","// @flow\nimport { type I18n } from '@lingui/core';\n\ntype TranslationFunction = (string => string) | null;\ntype NotNullTranslationFunction = string => string;\n\n/**\n * Given the i18n object, return the function that can be used\n * to translate strings. Useful for wiring i18n to extensions\n * and libGD.js, where translations is done with a simple string\n * to string function.\n */\nexport const getTranslationFunction = (i18n: ?I18n): TranslationFunction => {\n  const i18nModule = i18n; // Make flow happy, ensure i18nModule is const.\n  if (i18nModule) {\n    return (str: string) => i18nModule._(str);\n  }\n\n  return null;\n};\n\n/**\n * Given the i18n object, return the function that can be used\n * to translate strings. Useful for wiring i18n to extensions\n * and libGD.js, where translations is done with a simple string\n * to string function.\n */\nexport const getNotNullTranslationFunction = (\n  i18n: ?I18n\n): NotNullTranslationFunction => {\n  const i18nModule = i18n; // Make flow happy, ensure i18nModule is const.\n  if (i18nModule) {\n    return (str: string) => i18nModule._(str);\n  }\n\n  return (str: string) => str;\n};\n","// @flow\n// Note: this file does not use export/imports and use Flow comments to allow its usage from Node.js\n\nconst some = require('lodash/some');\n/*flow-include\nexport type TranslationFunction = (string) => string;\n\nexport type JsExtensionModule = {\n  createExtension(_: TranslationFunction, gd: any): gdPlatformExtension,\n  runExtensionSanityTests(gd: any, extension: gdPlatformExtension): Array<string>,\n};\n\nexport type ExtensionLoadingResult = {\n  error: boolean,\n  message: string,\n  dangerous?: boolean,\n  rawError?: any,\n};\n\nexport interface JsExtensionsLoader {\n  loadAllExtensions(_: TranslationFunction): Promise<\n    Array<{ extensionModulePath: string, result: ExtensionLoadingResult }>\n  >,\n}\n*/\n\n/**\n * Run extensions tests and check for any non-empty results.\n */\nconst runExtensionSanityTests = (\n  gd /*: any */,\n  extension /*: gdPlatformExtension*/,\n  jsExtensionModule /*: JsExtensionModule*/\n) /*: ExtensionLoadingResult*/ => {\n  if (!jsExtensionModule.runExtensionSanityTests) {\n    return {\n      error: true,\n      message:\n        'Missing runExtensionSanityTests in the extension module exports',\n    };\n  }\n\n  const testResults = jsExtensionModule.runExtensionSanityTests(gd, extension);\n  if (some(testResults)) {\n    return {\n      error: true,\n      message: 'One or more tests are failing for the extension (see rawError)',\n      rawError: testResults,\n    };\n  }\n\n  return {\n    error: false,\n    message: 'Tests passed successfully',\n  };\n};\n\n/**\n * Load an extension from the specified JavaScript module, which is supposed\n * to contain a \"createExtension\" function returning a gd.PlatformExtension.\n */\nconst loadExtension = (\n  _ /*: TranslationFunction */,\n  gd /*: any */,\n  platform /*: gdJsPlatform*/,\n  jsExtensionModule /*: JsExtensionModule*/\n) /*: ExtensionLoadingResult*/ => {\n  if (!jsExtensionModule.createExtension) {\n    return {\n      message:\n        'Extension module found, but no createExtension method is exported',\n      error: true,\n    };\n  }\n\n  let extension = null;\n  try {\n    extension = jsExtensionModule.createExtension(_, gd);\n    if (!extension) {\n      return {\n        message: `createExtension did not return any extension. Did you forget to return the extension created?`,\n        error: true,\n      };\n    }\n  } catch (ex) {\n    return {\n      message: `🚨 Exception caught while running createExtension. 💣 Please fix this error as this will make GDevelop crash at some point.`,\n      error: true,\n      dangerous: true,\n      rawError: ex,\n    };\n  }\n\n  try {\n    const testsResult = runExtensionSanityTests(\n      gd,\n      extension,\n      jsExtensionModule\n    );\n    if (testsResult.error) {\n      extension.delete();\n      return testsResult;\n    }\n  } catch (ex) {\n    return {\n      message: `🚨 Exception caught while running runExtensionSanityTests. 💣 Please fix this error as this will make GDevelop crash at some point.`,\n      error: true,\n      dangerous: true,\n      rawError: ex,\n    };\n  }\n\n  platform.addNewExtension(extension);\n  extension.delete(); // Release the extension as it was copied inside gd.JsPlatform\n\n  return {\n    message: '✅ Successfully loaded the extension.',\n    error: false,\n  };\n};\n\nmodule.exports = {\n  runExtensionSanityTests,\n  loadExtension,\n};\n","// @flow\nimport * as React from 'react';\nimport {\n  type StorageProvider,\n  type StorageProviderOperations,\n  type FileMetadata,\n} from '.';\nimport { type AppArguments } from '../Utils/Window';\n\n/**\n * An empty StorageProvider doing nothing.\n */\nconst emptyStorageProvider: StorageProvider = {\n  internalName: 'Empty',\n  name: 'No storage',\n  createOperations: () => ({\n    onOpenWithPicker: () => Promise.reject('No storage provider set up'),\n    onOpen: () => Promise.reject('No storage provider set up'),\n    hasAutoSave: () => Promise.resolve(false),\n    onSaveProject: (project: gdProject) =>\n      Promise.reject('No storage provider set up'),\n    onSaveProjectAs: (project: gdProject) =>\n      Promise.reject('No storage provider set up'),\n    onAutoSaveProject: (project: gdProject) => Promise.resolve(),\n  }),\n};\n\ntype Props = {|\n  appArguments: AppArguments,\n  storageProviders: Array<StorageProvider>,\n  defaultStorageProvider?: StorageProvider,\n  children: ({\n    storageProviders: Array<StorageProvider>,\n    getStorageProviderOperations: (\n      newStorageProvider: ?StorageProvider\n    ) => Promise<StorageProviderOperations>,\n    initialFileMetadataToOpen: ?FileMetadata,\n    getStorageProvider: () => StorageProvider,\n  }) => React.Node,\n|};\n\ntype InitialStorageProviderAndFileMetadata = {|\n  currentStorageProvider: ?StorageProvider,\n  initialFileMetadataToOpen: ?FileMetadata,\n|};\n\ntype State = {|\n  ...InitialStorageProviderAndFileMetadata,\n  storageProviderOperations: ?StorageProviderOperations,\n  renderDialog: ?() => React.Node,\n|};\n\nconst computeInitialFileMetadataToOpen = (\n  defaultStorageProvider: ?StorageProvider,\n  storageProviders: Array<StorageProvider>,\n  appArguments: AppArguments\n): InitialStorageProviderAndFileMetadata => {\n  const candidates = storageProviders\n    .map(currentStorageProvider => {\n      return {\n        currentStorageProvider,\n        initialFileMetadataToOpen: currentStorageProvider.getFileMetadataFromAppArguments\n          ? currentStorageProvider.getFileMetadataFromAppArguments(appArguments)\n          : null,\n      };\n    })\n    .filter(({ initialFileMetadataToOpen }) => !!initialFileMetadataToOpen);\n\n  if (candidates.length === 0)\n    return {\n      currentStorageProvider: defaultStorageProvider,\n      initialFileMetadataToOpen: null,\n    };\n\n  if (candidates.length > 1) {\n    console.warn(\n      'More than one storage provider can understand the app arguments. Selecting the first one.'\n    );\n  }\n\n  return candidates[0];\n};\n\nexport default class ProjectStorageProviders extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    ...computeInitialFileMetadataToOpen(\n      this.props.defaultStorageProvider,\n      this.props.storageProviders,\n      this.props.appArguments\n    ),\n    storageProviderOperations: null,\n    renderDialog: null,\n  };\n\n  _setDialog = (renderDialog: () => React.Node) => {\n    this.setState({\n      renderDialog,\n    });\n  };\n\n  _closeDialog = () => {\n    this.setState({\n      renderDialog: null,\n    });\n  };\n\n  _getStorageProviderOperations = (\n    storageProvider: ?StorageProvider\n  ): Promise<StorageProviderOperations> => {\n    // Avoid creating a new storageProviderOperations\n    // if we're not changing the storage provider.\n    if (\n      !storageProvider ||\n      storageProvider === this.state.currentStorageProvider\n    ) {\n      if (this.state.storageProviderOperations) {\n        return Promise.resolve(this.state.storageProviderOperations);\n      }\n    }\n\n    const newStorageProvider: StorageProvider =\n      storageProvider ||\n      this.state.currentStorageProvider ||\n      emptyStorageProvider;\n    const storageProviderOperations = newStorageProvider.createOperations({\n      setDialog: this._setDialog,\n      closeDialog: this._closeDialog,\n    });\n\n    return new Promise(resolve => {\n      this.setState(\n        {\n          currentStorageProvider: newStorageProvider,\n          storageProviderOperations,\n        },\n        () => {\n          resolve(storageProviderOperations);\n        }\n      );\n    });\n  };\n\n  _getStorageProvider = () => {\n    return this.state.currentStorageProvider || emptyStorageProvider;\n  };\n\n  render() {\n    const { children, storageProviders } = this.props;\n    const { renderDialog, initialFileMetadataToOpen } = this.state;\n\n    return (\n      <React.Fragment>\n        {children({\n          storageProviders,\n          getStorageProviderOperations: this._getStorageProviderOperations,\n          initialFileMetadataToOpen,\n          getStorageProvider: this._getStorageProvider,\n        })}\n        {renderDialog && renderDialog()}\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport LayerRenderer from './LayerRenderer';\nimport ViewPosition from '../ViewPosition';\nimport * as PIXI from 'pixi.js-legacy';\nimport Rectangle from '../../Utils/Rectangle';\n\nexport default class InstancesRenderer {\n  project: gdProject;\n  instances: gdInitialInstancesContainer;\n  layout: gdLayout;\n  viewPosition: ViewPosition;\n  onInstanceClicked: gdInitialInstance => void;\n  onInstanceRightClicked: ({|\n    offsetX: number,\n    offsetY: number,\n    x: number,\n    y: number,\n  |}) => void;\n  onInstanceDoubleClicked: gdInitialInstance => void;\n  onOverInstance: gdInitialInstance => void;\n  onOutInstance: gdInitialInstance => void;\n  onMoveInstance: (gdInitialInstance, number, number) => void;\n  onMoveInstanceEnd: void => void;\n  onDownInstance: (gdInitialInstance, number, number) => void;\n\n  layersRenderers: { [string]: LayerRenderer };\n\n  pixiContainer: PIXI.Container;\n\n  temporaryRectangle: Rectangle;\n  instanceMeasurer: any;\n\n  constructor({\n    project,\n    layout,\n    instances,\n    viewPosition,\n    onInstanceClicked,\n    onInstanceRightClicked,\n    onInstanceDoubleClicked,\n    onOverInstance,\n    onOutInstance,\n    onMoveInstance,\n    onMoveInstanceEnd,\n    onDownInstance,\n  }: {\n    project: gdProject,\n    instances: gdInitialInstancesContainer,\n    layout: gdLayout,\n    viewPosition: ViewPosition,\n    onInstanceClicked: gdInitialInstance => void,\n    onInstanceRightClicked: ({|\n      offsetX: number,\n      offsetY: number,\n      x: number,\n      y: number,\n    |}) => void,\n    onInstanceDoubleClicked: gdInitialInstance => void,\n    onOverInstance: gdInitialInstance => void,\n    onOutInstance: gdInitialInstance => void,\n    onMoveInstance: (gdInitialInstance, number, number) => void,\n    onMoveInstanceEnd: void => void,\n    onDownInstance: (gdInitialInstance, number, number) => void,\n  }) {\n    this.project = project;\n    this.instances = instances;\n    this.layout = layout;\n    this.viewPosition = viewPosition;\n    this.onInstanceClicked = onInstanceClicked;\n    this.onInstanceRightClicked = onInstanceRightClicked;\n    this.onInstanceDoubleClicked = onInstanceDoubleClicked;\n    this.onOverInstance = onOverInstance;\n    this.onOutInstance = onOutInstance;\n    this.onMoveInstance = onMoveInstance;\n    this.onMoveInstanceEnd = onMoveInstanceEnd;\n    this.onDownInstance = onDownInstance;\n\n    this.layersRenderers = {};\n\n    this.pixiContainer = new PIXI.Container();\n\n    this.temporaryRectangle = new Rectangle();\n    //TODO extract this to a class to have type checking (maybe rethink it)\n    this.instanceMeasurer = {\n      getInstanceAABB: (instance, bounds) => {\n        const layerName = instance.getLayer();\n        const layerRenderer = this.layersRenderers[layerName];\n        if (!layerRenderer) {\n          bounds.left = instance.getX();\n          bounds.top = instance.getY();\n          bounds.right = instance.getX();\n          bounds.bottom = instance.getY();\n          return bounds;\n        }\n\n        return layerRenderer.getInstanceAABB(instance, bounds);\n      },\n      getUnrotatedInstanceAABB: (instance, bounds) => {\n        const layerName = instance.getLayer();\n        const layerRenderer = this.layersRenderers[layerName];\n        if (!layerRenderer) {\n          bounds.left = instance.getX();\n          bounds.top = instance.getY();\n          bounds.right = instance.getX();\n          bounds.bottom = instance.getY();\n          return bounds;\n        }\n\n        return layerRenderer.getUnrotatedInstanceAABB(instance, bounds);\n      },\n      //TODO Replace by getInstanceAABB (make TransformRect uses Rectangle)\n      getInstanceRect: instance => {\n        const aabb = this.instanceMeasurer.getInstanceAABB(\n          instance,\n          this.temporaryRectangle\n        );\n        return {\n          x: aabb.left,\n          y: aabb.top,\n          width: aabb.width(),\n          height: aabb.height(),\n        };\n      },\n    };\n  }\n\n  getPixiContainer() {\n    return this.pixiContainer;\n  }\n\n  getInstanceMeasurer() {\n    return this.instanceMeasurer;\n  }\n\n  render() {\n    for (let i = 0; i < this.layout.getLayersCount(); i++) {\n      const layer = this.layout.getLayerAt(i);\n      const layerName = layer.getName();\n\n      let layerRenderer = this.layersRenderers[layerName];\n      if (!layerRenderer) {\n        this.layersRenderers[layerName] = layerRenderer = new LayerRenderer({\n          project: this.project,\n          layout: this.layout,\n          instances: this.instances,\n          viewPosition: this.viewPosition,\n          layer: layer,\n          onInstanceClicked: this.onInstanceClicked,\n          onInstanceRightClicked: this.onInstanceRightClicked,\n          onInstanceDoubleClicked: this.onInstanceDoubleClicked,\n          onOverInstance: this.onOverInstance,\n          onOutInstance: this.onOutInstance,\n          onMoveInstance: this.onMoveInstance,\n          onMoveInstanceEnd: this.onMoveInstanceEnd,\n          onDownInstance: this.onDownInstance,\n        });\n        this.pixiContainer.addChild(layerRenderer.getPixiContainer());\n      }\n\n      // /!\\ Objects representing layers can be deleted at any moment and replaced\n      // by new one, for example when two layers are swapped.\n      // We update the layer object of the renderer so that the renderer always has\n      // a valid layer object that can be used.\n      layerRenderer.layer = layer;\n      layerRenderer.wasUsed = true;\n      layerRenderer.getPixiContainer().zOrder = i;\n      layerRenderer.render();\n    }\n\n    this._updatePixiObjectsZOrder();\n    this._cleanUnusedLayerRenderers();\n  }\n\n  _updatePixiObjectsZOrder() {\n    this.pixiContainer.children.sort((a, b) => {\n      a.zOrder = a.zOrder || 0;\n      b.zOrder = b.zOrder || 0;\n      return a.zOrder - b.zOrder;\n    });\n  }\n\n  /**\n   * Delete instance renderers of the specified objects, which will then be recreated during\n   * the next render.\n   * @param {string} objectName The name of the object for which instance must be re-rendered.\n   */\n  resetInstanceRenderersFor(objectName: string) {\n    for (let i in this.layersRenderers) {\n      if (this.layersRenderers.hasOwnProperty(i)) {\n        const layerRenderer = this.layersRenderers[i];\n        layerRenderer.resetInstanceRenderersFor(objectName);\n      }\n    }\n  }\n\n  /**\n   * Clean up rendered layers that are not existing anymore\n   */\n  _cleanUnusedLayerRenderers() {\n    for (let i in this.layersRenderers) {\n      if (this.layersRenderers.hasOwnProperty(i)) {\n        const layerRenderer = this.layersRenderers[i];\n        if (!layerRenderer.wasUsed) {\n          this.pixiContainer.removeChild(layerRenderer.getPixiContainer());\n          layerRenderer.delete();\n          delete this.layersRenderers[i];\n        } else layerRenderer.wasUsed = false;\n      }\n    }\n  }\n\n  delete() {\n    // Destroy the layers first.\n    for (let i in this.layersRenderers) {\n      if (this.layersRenderers.hasOwnProperty(i)) {\n        this.layersRenderers[i].delete();\n      }\n    }\n\n    // Finish by the pixi container.\n    this.pixiContainer.destroy();\n  }\n}\n","export default function transformRect(transformPoint, { x, y, width, height }) {\n  const startPos = transformPoint(x, y);\n  const endPos = transformPoint(x + width, y + height);\n  return {\n    x: startPos[0],\n    y: startPos[1],\n    width: endPos[0] - startPos[0],\n    height: endPos[1] - startPos[1],\n  };\n}\n","// @flow\nimport Rectangle from '../Utils/Rectangle';\nimport { roundPositionForResizing } from '../Utils/GridHelpers';\nimport { type InstancesEditorSettings } from './InstancesEditorSettings';\n\nexport type ResizeGrabbingLocation =\n  | 'TopLeft'\n  | 'BottomLeft'\n  | 'BottomRight'\n  | 'TopRight'\n  | 'Top'\n  | 'Left'\n  | 'Bottom'\n  | 'Right';\n\nexport const resizeGrabbingLocationValues = [\n  'TopLeft',\n  'BottomLeft',\n  'BottomRight',\n  'TopRight',\n  'Top',\n  'Left',\n  'Bottom',\n  'Right',\n];\n\nexport const resizeGrabbingRelativePositions = {\n  TopLeft: [0, 0],\n  BottomLeft: [0, 1],\n  BottomRight: [1, 1],\n  TopRight: [1, 0],\n  Top: [0.5, 0],\n  Left: [0, 0.5],\n  Bottom: [0.5, 1],\n  Right: [1, 0.5],\n};\n\nexport const canMoveOnX = (location: ResizeGrabbingLocation) =>\n  location !== 'Top' && location !== 'Bottom';\n\nexport const canMoveOnY = (location: ResizeGrabbingLocation) =>\n  location !== 'Left' && location !== 'Right';\n\nconst areAnyInstancesNotStraight = (instances: gdInitialInstance[]) => {\n  for (let i = 0; i < instances.length; i++) {\n    if (instances[i].getAngle() % 90 !== 0) return true;\n  }\n  return false;\n};\n\nexport default class InstancesResizer {\n  instanceMeasurer: any;\n  instancesEditorSettings: InstancesEditorSettings;\n\n  // The initial state of instances before a resize:\n  _initialSelectionAABB: ?Rectangle = null;\n  _unrotatedInstanceAABBs: { [number]: Rectangle } = {};\n  _instanceAABBs: { [number]: Rectangle } = {};\n  _instancePositions: { [number]: { x: number, y: number } } = {};\n\n  // The coordinates of the vector of the resize being done:\n  totalDeltaX: number = 0;\n  totalDeltaY: number = 0;\n\n  /**\n   * Used when rounding on the grid\n   */\n  _temporaryGrabbingPosition: [number, number] = [0, 0];\n\n  constructor({\n    instanceMeasurer,\n    instancesEditorSettings,\n  }: {\n    instanceMeasurer: any,\n    instancesEditorSettings: InstancesEditorSettings,\n  }) {\n    this.instanceMeasurer = instanceMeasurer;\n    this.instancesEditorSettings = instancesEditorSettings;\n  }\n\n  setInstancesEditorSettings(instancesEditorSettings: InstancesEditorSettings) {\n    this.instancesEditorSettings = instancesEditorSettings;\n  }\n\n  _getOrCreateInstanceAABB(instance: gdInitialInstance) {\n    const initialInstanceAABB = this._instanceAABBs[instance.ptr];\n    if (initialInstanceAABB) return initialInstanceAABB;\n\n    return (this._instanceAABBs[\n      instance.ptr\n    ] = this.instanceMeasurer.getInstanceAABB(instance, new Rectangle()));\n  }\n\n  _getOrCreateUnrotatedInstanceAABB(instance: gdInitialInstance) {\n    const initialUnrotatedInstanceAABB = this._unrotatedInstanceAABBs[\n      instance.ptr\n    ];\n    if (initialUnrotatedInstanceAABB) return initialUnrotatedInstanceAABB;\n\n    return (this._unrotatedInstanceAABBs[\n      instance.ptr\n    ] = this.instanceMeasurer.getUnrotatedInstanceAABB(\n      instance,\n      new Rectangle()\n    ));\n  }\n\n  _getOrCreateInstanceOriginPosition(instance: gdInitialInstance) {\n    const initialPosition = this._instancePositions[instance.ptr];\n    if (initialPosition) return initialPosition;\n\n    return (this._instancePositions[instance.ptr] = {\n      x: instance.getX(),\n      y: instance.getY(),\n    });\n  }\n\n  _getOrCreateSelectionAABB(instances: gdInitialInstance[]): ?Rectangle {\n    let initialSelectionAABB = this._initialSelectionAABB;\n    if (initialSelectionAABB) {\n      return initialSelectionAABB;\n    }\n    if (!instances.length) return null;\n    initialSelectionAABB = new Rectangle();\n    initialSelectionAABB.setRectangle(\n      this._getOrCreateInstanceAABB(instances[0])\n    );\n    for (let i = 1; i < instances.length; i++) {\n      initialSelectionAABB.union(this._getOrCreateInstanceAABB(instances[i]));\n    }\n    this._initialSelectionAABB = initialSelectionAABB;\n    return initialSelectionAABB;\n  }\n\n  resizeBy(\n    instances: gdInitialInstance[],\n    deltaX: number,\n    deltaY: number,\n    grabbingLocation: ResizeGrabbingLocation,\n    proportional: boolean\n  ) {\n    this.totalDeltaX += deltaX;\n    this.totalDeltaY += deltaY;\n\n    const nonLockedInstances = instances.filter(\n      instance => !instance.isLocked()\n    );\n\n    const initialSelectionAABB = this._getOrCreateSelectionAABB(\n      nonLockedInstances\n    );\n    if (!initialSelectionAABB) return;\n\n    // Round the grabbed handle position on the grid.\n    const grabbingRelativePosition =\n      resizeGrabbingRelativePositions[grabbingLocation];\n    const initialGrabbingX =\n      initialSelectionAABB.left +\n      initialSelectionAABB.width() * grabbingRelativePosition[0];\n    const initialGrabbingY =\n      initialSelectionAABB.top +\n      initialSelectionAABB.height() * grabbingRelativePosition[1];\n    const grabbingPosition = this._temporaryGrabbingPosition;\n    grabbingPosition[0] = initialGrabbingX + this.totalDeltaX;\n    grabbingPosition[1] = initialGrabbingY + this.totalDeltaY;\n    if (\n      this.instancesEditorSettings.snap &&\n      this.instancesEditorSettings.grid\n    ) {\n      roundPositionForResizing(\n        grabbingPosition,\n        this.instancesEditorSettings.gridWidth,\n        this.instancesEditorSettings.gridHeight,\n        this.instancesEditorSettings.gridOffsetX,\n        this.instancesEditorSettings.gridOffsetY,\n        this.instancesEditorSettings.gridType\n      );\n    } else {\n      // Without a grid, the position is still rounded to the nearest pixel.\n      grabbingPosition[0] = Math.round(grabbingPosition[0]);\n      grabbingPosition[1] = Math.round(grabbingPosition[1]);\n    }\n    let roundedTotalDeltaX = grabbingPosition[0] - initialGrabbingX;\n    let roundedTotalDeltaY = grabbingPosition[1] - initialGrabbingY;\n\n    if (!canMoveOnX(grabbingLocation)) {\n      roundedTotalDeltaX = 0;\n    }\n    if (!canMoveOnY(grabbingLocation)) {\n      roundedTotalDeltaY = 0;\n    }\n\n    const isLeft =\n      grabbingLocation === 'TopLeft' ||\n      grabbingLocation === 'BottomLeft' ||\n      grabbingLocation === 'Left';\n    const isTop =\n      grabbingLocation === 'TopLeft' ||\n      grabbingLocation === 'TopRight' ||\n      grabbingLocation === 'Top';\n\n    // Flip the deltas to end up in the nominal case of a bottom-right grabbed node.\n    // Because a negative deltaX on the left grabbing handle will make the width greater\n    // as a positive deltaX on the right grabbing handle would do.\n    const flippedTotalDeltaX = isLeft\n      ? -roundedTotalDeltaX\n      : roundedTotalDeltaX;\n    const flippedTotalDeltaY = isTop ? -roundedTotalDeltaY : roundedTotalDeltaY;\n\n    let scaleX =\n      initialSelectionAABB.width() !== 0\n        ? (initialSelectionAABB.width() + flippedTotalDeltaX) /\n          initialSelectionAABB.width()\n        : flippedTotalDeltaX;\n    let scaleY =\n      initialSelectionAABB.height() !== 0\n        ? (initialSelectionAABB.height() + flippedTotalDeltaY) /\n          initialSelectionAABB.height()\n        : flippedTotalDeltaY;\n\n    const hasRotatedInstance = areAnyInstancesNotStraight(nonLockedInstances);\n\n    // Applying a rotation then a scaling can result to\n    // an affine transformation with a shear transformation - which we don't want.\n    // If any instance is rotated, we keep the aspect ratio (i.e: force proportional resizing)\n    // to ensure a transformation without any shear.\n    if (proportional || hasRotatedInstance) {\n      // Choose the axis where the selection is the biggest.\n      // That way the cursor is always on one edge.\n      if (\n        !canMoveOnY(grabbingLocation) ||\n        (canMoveOnX(grabbingLocation) &&\n          flippedTotalDeltaX * initialSelectionAABB.height() >\n            flippedTotalDeltaY * initialSelectionAABB.width())\n      ) {\n        scaleY = scaleX;\n      } else {\n        scaleX = scaleY;\n      }\n    }\n\n    // No negative scale because instances can't be mirrored.\n    // Make the minimal selection size to 1 to avoid absorption.\n    // If size is already 0, use a minimum scale to avoid negative scales.\n    scaleX = Math.max(\n      initialSelectionAABB.width() !== 0\n        ? 1 / initialSelectionAABB.width()\n        : 0.00001,\n      scaleX\n    );\n    scaleY = Math.max(\n      initialSelectionAABB.height() !== 0\n        ? 1 / initialSelectionAABB.height()\n        : 0.00001,\n      scaleY\n    );\n\n    const fixedPointX =\n      initialSelectionAABB.right -\n      resizeGrabbingRelativePositions[grabbingLocation][0] *\n        initialSelectionAABB.width();\n    const fixedPointY =\n      initialSelectionAABB.bottom -\n      resizeGrabbingRelativePositions[grabbingLocation][1] *\n        initialSelectionAABB.height();\n\n    for (let i = 0; i < nonLockedInstances.length; i++) {\n      const selectedInstance = nonLockedInstances[i];\n\n      let initialUnrotatedInstanceAABB = this._getOrCreateUnrotatedInstanceAABB(\n        selectedInstance\n      );\n      let initialInstanceOriginPosition = this._getOrCreateInstanceOriginPosition(\n        selectedInstance\n      );\n\n      // Assume a size of 1 pixel to start the resizing\n      // if the instance had a size of 0.\n      const initialWidth =\n        initialUnrotatedInstanceAABB.width() !== 0\n          ? initialUnrotatedInstanceAABB.width()\n          : 1;\n      const initialHeight =\n        initialUnrotatedInstanceAABB.height() !== 0\n          ? initialUnrotatedInstanceAABB.height()\n          : 1;\n\n      // The position and size of an instance describe the shape\n      // before the rotation is applied.\n      // The calculus is like a 90° or 270° rotation of the basis around the scaling.\n      // The AABB dimensions are the same in both cases and the AABB center\n      // is stable by instance rotation. This allows to use the same formula\n      // for both 90° or 270°.\n      const angle = ((selectedInstance.getAngle() % 360) + 360) % 360;\n      if (\n        !proportional &&\n        !hasRotatedInstance &&\n        (angle === 90 || angle === 270)\n      ) {\n        selectedInstance.setCustomWidth(scaleY * initialWidth);\n        selectedInstance.setCustomHeight(scaleX * initialHeight);\n        selectedInstance.setHasCustomSize(true);\n\n        // These 4 variables are the positions and vector after the scaling.\n        // It's easier to scale the instance center\n        // because it's not affected by the instance rotation.\n        const centerX =\n          (initialUnrotatedInstanceAABB.centerX() - fixedPointX) * scaleX +\n          fixedPointX;\n        const centerY =\n          (initialUnrotatedInstanceAABB.centerY() - fixedPointY) * scaleY +\n          fixedPointY;\n        // and then add the vector from the center to the origin.\n        // It's the vector on the unrotated instance\n        // and the scale was applied on the rotated one so it's switched.\n        const centerToOriginX =\n          scaleY *\n          (initialInstanceOriginPosition.x -\n            initialUnrotatedInstanceAABB.centerX());\n        const centerToOriginY =\n          scaleX *\n          (initialInstanceOriginPosition.y -\n            initialUnrotatedInstanceAABB.centerY());\n        selectedInstance.setX(centerX + centerToOriginX);\n        selectedInstance.setY(centerY + centerToOriginY);\n      } else {\n        selectedInstance.setCustomWidth(scaleX * initialWidth);\n        selectedInstance.setCustomHeight(scaleY * initialHeight);\n        selectedInstance.setHasCustomSize(true);\n\n        selectedInstance.setX(\n          (initialInstanceOriginPosition.x - fixedPointX) * scaleX + fixedPointX\n        );\n        selectedInstance.setY(\n          (initialInstanceOriginPosition.y - fixedPointY) * scaleY + fixedPointY\n        );\n      }\n    }\n  }\n\n  endResize() {\n    this._initialSelectionAABB = null;\n    this._unrotatedInstanceAABBs = {};\n    this._instanceAABBs = {};\n    this._instancePositions = {};\n    this.totalDeltaX = 0;\n    this.totalDeltaY = 0;\n  }\n}\n","// @flow\nimport gesture from 'pixi-simple-gesture';\nimport transformRect from '../Utils/TransformRect';\nimport * as PIXI from 'pixi.js-legacy';\nimport { type ScreenType } from '../UI/Reponsive/ScreenTypeMeasurer';\nimport InstancesSelection from './InstancesSelection';\nimport {\n  type ResizeGrabbingLocation,\n  resizeGrabbingLocationValues,\n  resizeGrabbingRelativePositions,\n  canMoveOnX,\n  canMoveOnY,\n} from './InstancesResizer';\n\ntype Props = {|\n  instancesSelection: InstancesSelection,\n  instanceMeasurer: Object, // To be typed in InstancesRenderer\n  onResize: (\n    deltaX: number,\n    deltaY: number,\n    grabbingLocation: ResizeGrabbingLocation\n  ) => void,\n  onResizeEnd: () => void,\n  onRotate: (number, number) => void,\n  onRotateEnd: () => void,\n  toCanvasCoordinates: (x: number, y: number) => [number, number],\n  screenType: ScreenType,\n|};\n\nconst getButtonSizes = (screenType: ScreenType) => {\n  if (screenType === 'touch') {\n    return {\n      bigButtonSize: 14,\n      smallButtonSize: 12,\n      buttonPadding: 5,\n      hitAreaPadding: 12,\n    };\n  }\n\n  return {\n    bigButtonSize: 10,\n    smallButtonSize: 8,\n    buttonPadding: 5,\n    hitAreaPadding: 5,\n  };\n};\n\nconst RECTANGLE_BUTTON_SHAPE = 0;\nconst CIRCLE_BUTTON_SHAPE = 1;\n\nconst resizeGrabbingIconNames = {\n  TopLeft: 'nwse-resize',\n  BottomLeft: 'nesw-resize',\n  BottomRight: 'nwse-resize',\n  TopRight: 'nesw-resize',\n  Top: 'ns-resize',\n  Left: 'ew-resize',\n  Bottom: 'ns-resize',\n  Right: 'ew-resize',\n};\n\n/**\n * Render selection rectangle for selected instances.\n */\nexport default class SelectedInstances {\n  instancesSelection: InstancesSelection;\n  instanceMeasurer: Object; // To be typed in InstancesRenderer\n  onResize: (\n    deltaX: number,\n    deltaY: number,\n    grabbingLocation: ResizeGrabbingLocation\n  ) => void;\n  onResizeEnd: () => void;\n  onRotate: (number, number) => void;\n  onRotateEnd: () => void;\n  toCanvasCoordinates: (x: number, y: number) => [number, number];\n  _screenType: ScreenType;\n\n  pixiContainer = new PIXI.Container();\n  rectanglesContainer = new PIXI.Container();\n  selectedRectangles = [];\n  resizeButtons: { [ResizeGrabbingLocation]: PIXI.Graphics } = {};\n  rotateButton = new PIXI.Graphics();\n\n  constructor({\n    instancesSelection,\n    instanceMeasurer,\n    onResize,\n    onResizeEnd,\n    onRotate,\n    onRotateEnd,\n    toCanvasCoordinates,\n    screenType,\n  }: Props) {\n    this.instanceMeasurer = instanceMeasurer;\n    this.onResize = onResize;\n    this.onResizeEnd = onResizeEnd;\n    this.onRotate = onRotate;\n    this.onRotateEnd = onRotateEnd;\n    this.toCanvasCoordinates = toCanvasCoordinates;\n    this.instancesSelection = instancesSelection;\n    this._screenType = screenType;\n\n    this.pixiContainer.addChild(this.rectanglesContainer);\n\n    for (const resizeGrabbingLocation of resizeGrabbingLocationValues) {\n      const resizeButton = new PIXI.Graphics();\n      this.resizeButtons[resizeGrabbingLocation] = resizeButton;\n      this._makeButton(\n        resizeButton,\n        event => {\n          this.onResize(event.deltaX, event.deltaY, resizeGrabbingLocation);\n        },\n        () => {\n          this.onResizeEnd();\n        },\n        resizeGrabbingIconNames[resizeGrabbingLocation]\n      );\n    }\n    this._makeButton(\n      this.rotateButton,\n      event => {\n        this.onRotate(event.deltaX, event.deltaY);\n      },\n      () => {\n        this.onRotateEnd();\n      },\n      'url(\"res/actions/rotate24.png\"),auto'\n    );\n  }\n\n  setScreenType(screenType: ScreenType) {\n    this._screenType = screenType;\n  }\n\n  _makeButton(\n    objectButton: PIXI.Graphics,\n    onMove: (event: any) => void,\n    onEnd: () => void,\n    cursor: string\n  ) {\n    objectButton.interactive = true;\n    objectButton.buttonMode = true;\n    objectButton.cursor = cursor;\n    gesture.panable(objectButton);\n    objectButton.on('panmove', onMove);\n    objectButton.on('panend', onEnd);\n    this.pixiContainer.addChild(objectButton);\n  }\n\n  getPixiContainer() {\n    return this.pixiContainer;\n  }\n\n  _renderButton(\n    show: boolean,\n    buttonObject: PIXI.Graphics,\n    canvasPosition: [number, number],\n    size: number,\n    shape: 0 | 1,\n    hitAreaPadding: number\n  ) {\n    buttonObject.clear();\n    if (!show) {\n      buttonObject.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n      return;\n    }\n\n    buttonObject.beginFill(0xffffff);\n    buttonObject.lineStyle(1, 0x6868e8, 1);\n    buttonObject.fill.alpha = 0.9;\n    if (shape === RECTANGLE_BUTTON_SHAPE) {\n      buttonObject.drawRect(canvasPosition[0], canvasPosition[1], size, size);\n    } else if (shape === CIRCLE_BUTTON_SHAPE) {\n      buttonObject.drawCircle(\n        canvasPosition[0] + size / 2,\n        canvasPosition[1] + size / 2,\n        size / 2\n      );\n    }\n\n    buttonObject.endFill();\n    buttonObject.hitArea = new PIXI.Rectangle(\n      canvasPosition[0] - hitAreaPadding,\n      canvasPosition[1] - hitAreaPadding,\n      size + hitAreaPadding * 2,\n      size + hitAreaPadding * 2\n    );\n  }\n\n  render() {\n    const {\n      bigButtonSize,\n      smallButtonSize,\n      buttonPadding,\n      hitAreaPadding,\n    } = getButtonSizes(this._screenType);\n    const selection = this.instancesSelection.getSelectedInstances();\n    let x1 = 0;\n    let y1 = 0;\n    let x2 = 0;\n    let y2 = 0;\n    let initialised = false;\n\n    // Update the selection rectangle of each instance.\n    for (var i = 0; i < selection.length; i++) {\n      if (this.selectedRectangles.length === i) {\n        const newRectangle = new PIXI.Graphics();\n        newRectangle.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n        this.selectedRectangles.push(newRectangle);\n        this.rectanglesContainer.addChild(newRectangle);\n      }\n\n      const instance = selection[i];\n      const instanceRect = this.instanceMeasurer.getInstanceRect(instance);\n      const selectionRectangle = transformRect(\n        this.toCanvasCoordinates,\n        instanceRect\n      );\n\n      this.selectedRectangles[i].clear();\n      const selectionRectangleColor = instance.isLocked() ? 0xbc5753 : 0x6868e8;\n      this.selectedRectangles[i].beginFill(selectionRectangleColor);\n      this.selectedRectangles[i].lineStyle(1, selectionRectangleColor, 1);\n      this.selectedRectangles[i].fill.alpha = 0.3;\n      this.selectedRectangles[i].alpha = 0.8;\n      this.selectedRectangles[i].drawRect(\n        selectionRectangle.x,\n        selectionRectangle.y,\n        selectionRectangle.width,\n        selectionRectangle.height\n      );\n      this.selectedRectangles[i].endFill();\n\n      if (instance.isLocked()) {\n        continue;\n      }\n      if (!initialised) {\n        x1 = instanceRect.x;\n        y1 = instanceRect.y;\n        x2 = instanceRect.x + instanceRect.width;\n        y2 = instanceRect.y + instanceRect.height;\n        initialised = true;\n      } else {\n        if (instanceRect.x < x1) x1 = instanceRect.x;\n        if (instanceRect.y < y1) y1 = instanceRect.y;\n        if (instanceRect.x + instanceRect.width > x2)\n          x2 = instanceRect.x + instanceRect.width;\n        if (instanceRect.y + instanceRect.height > y2)\n          y2 = instanceRect.y + instanceRect.height;\n      }\n    }\n\n    while (this.selectedRectangles.length > selection.length) {\n      this.rectanglesContainer.removeChild(this.selectedRectangles.pop());\n    }\n\n    // If there are no unlocked instances, hide the resize buttons.\n    const show =\n      selection.filter(instance => !instance.isLocked()).length !== 0;\n\n    // Position the resize buttons.\n    for (const grabbingLocation of resizeGrabbingLocationValues) {\n      const resizeButton = this.resizeButtons[grabbingLocation];\n      const relativePositions =\n        resizeGrabbingRelativePositions[grabbingLocation];\n\n      const useBigButton =\n        canMoveOnX(grabbingLocation) && canMoveOnY(grabbingLocation);\n      const buttonSize = useBigButton ? bigButtonSize : smallButtonSize;\n      const padding = buttonPadding + buttonSize / 2;\n      const resizeButtonPos = this.toCanvasCoordinates(\n        x1 - padding + relativePositions[0] * (x2 - x1 + 2 * padding),\n        y1 - padding + relativePositions[1] * (y2 - y1 + 2 * padding)\n      );\n      resizeButtonPos[0] -= buttonSize / 2;\n      resizeButtonPos[1] -= buttonSize / 2;\n\n      this._renderButton(\n        show,\n        resizeButton,\n        resizeButtonPos,\n        buttonSize,\n        RECTANGLE_BUTTON_SHAPE,\n        hitAreaPadding\n      );\n    }\n\n    const rotateButtonPos = this.toCanvasCoordinates(x1 + (x2 - x1) / 2, y1);\n    rotateButtonPos[0] -= smallButtonSize / 2;\n    rotateButtonPos[1] -= buttonPadding * 8;\n\n    this._renderButton(\n      show,\n      this.rotateButton,\n      rotateButtonPos,\n      smallButtonSize,\n      CIRCLE_BUTTON_SHAPE,\n      hitAreaPadding\n    );\n  }\n}\n","import transformRect from '../Utils/TransformRect';\nimport * as PIXI from 'pixi.js-legacy';\n\nexport default class InstancesSelection {\n  constructor({ instanceMeasurer, toCanvasCoordinates }) {\n    this.instanceMeasurer = instanceMeasurer;\n    this.toCanvasCoordinates = toCanvasCoordinates;\n\n    this.highlightedInstance = null;\n    this.highlightRectangle = new PIXI.Graphics();\n    this.highlightRectangle.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n\n    this.tooltipBackground = new PIXI.Graphics();\n    this.tooltipText = new PIXI.Text('', {\n      fontSize: 15,\n      fill: 0xffffff,\n      align: 'center',\n    });\n    this.highlightRectangle.addChild(this.tooltipBackground);\n    this.highlightRectangle.addChild(this.tooltipText);\n  }\n\n  setInstance(instance) {\n    this.highlightedInstance = instance;\n  }\n\n  getInstance() {\n    return this.highlightedInstance;\n  }\n\n  getPixiObject(instance) {\n    return this.highlightRectangle;\n  }\n\n  render() {\n    if (this.highlightedInstance === null) {\n      this.highlightRectangle.visible = false;\n      return;\n    }\n\n    const highlightRectangle = transformRect(\n      this.toCanvasCoordinates,\n      this.instanceMeasurer.getInstanceRect(this.highlightedInstance)\n    );\n\n    this.highlightRectangle.visible = true;\n    this.highlightRectangle.clear();\n    this.highlightRectangle.beginFill(0xeeeeff);\n    this.highlightRectangle.fill.alpha = 0.1;\n    this.highlightRectangle.alpha = 0.8;\n    this.highlightRectangle.lineStyle(1, 0x000000, 1);\n    this.highlightRectangle.drawRect(\n      highlightRectangle.x,\n      highlightRectangle.y,\n      highlightRectangle.width,\n      highlightRectangle.height\n    );\n    this.highlightRectangle.endFill();\n\n    const tooltipInfo =\n      this.highlightedInstance.getObjectName() +\n      '\\n' +\n      'X: ' +\n      parseInt(this.highlightedInstance.getX()) +\n      '  Y: ' +\n      parseInt(this.highlightedInstance.getY()) +\n      '\\n' +\n      'Layer: ' +\n      this.highlightedInstance.getLayer() +\n      '  Z: ' +\n      this.highlightedInstance.getZOrder() +\n      '\\n';\n    this.tooltipText.text = tooltipInfo;\n\n    this.tooltipText.x = Math.round(\n      highlightRectangle.x -\n        this.tooltipText.width / 2 +\n        highlightRectangle.width / 2\n    );\n    this.tooltipText.y = Math.round(\n      highlightRectangle.y - this.tooltipText.height\n    );\n\n    const padding = 5;\n    this.tooltipBackground.clear();\n    this.tooltipBackground.beginFill(0x000000, 0.8);\n    this.tooltipBackground.drawRoundedRect(\n      this.tooltipText.x - padding,\n      this.tooltipText.y - padding,\n      this.tooltipText.width + padding * 2,\n      this.tooltipText.height - padding,\n      4\n    );\n    this.tooltipBackground.endFill();\n  }\n}\n","// @flow\nimport Rectangle from '../Utils/Rectangle';\n\nexport default class InstancesRotator {\n  _instanceMeasurer: any;\n\n  // Initial state of the instances\n  // from which the rotation is calculated.\n  _instanceAngles: { [number]: number } = {};\n  _instancePositions: { [number]: {| x: number, y: number |} } = {};\n  _instanceAABBs: { [number]: Rectangle } = {};\n\n  totalDeltaX: number = 0;\n  totalDeltaY: number = 0;\n\n  /**\n   * The fixed point is invalidated when the rotation end.\n   */\n  _fixedPointIsUpToDate: boolean = false;\n\n  // TODO: the fixed point could be made draggable.\n  /**\n   * The fixed point is the center of the selection\n   */\n  _fixedPoint: [number, number] = [0, 0];\n\n  constructor(instanceMeasurer: any) {\n    this._instanceMeasurer = instanceMeasurer;\n  }\n\n  _getNewAngle(proportional: boolean, initialAngle: number) {\n    // The grabbable handle for rotation is on top.\n    // Initially, totalDelta = (0 , selectionAABB.height() / 2)\n    // (see the affectation of totalDeltaY in the rotateBy method).\n    // So the initial angle given by atan2 is -90.\n    // 90 is added to start with a angle delta of 0.\n    const angle =\n      (Math.atan2(this.totalDeltaY, this.totalDeltaX) * 180) / Math.PI +\n      90 +\n      initialAngle;\n    return proportional ? Math.round(angle / 15) * 15 : angle;\n  }\n\n  _getOrCreateInstanceAABB(instance: gdInitialInstance) {\n    const initialAABB = this._instanceAABBs[instance.ptr];\n    if (initialAABB) return initialAABB;\n\n    return (this._instanceAABBs[\n      instance.ptr\n    ] = this._instanceMeasurer.getInstanceAABB(instance, new Rectangle()));\n  }\n\n  _getOrCreateInstanceOriginPosition(instance: gdInitialInstance) {\n    const initialPosition = this._instancePositions[instance.ptr];\n    if (initialPosition) return initialPosition;\n\n    return (this._instancePositions[instance.ptr] = {\n      x: instance.getX(),\n      y: instance.getY(),\n    });\n  }\n\n  _getOrCreateInstanceAngle(instance: gdInitialInstance) {\n    const initialAngle = this._instanceAngles[instance.ptr];\n    if (initialAngle !== undefined) return initialAngle;\n\n    return (this._instanceAngles[instance.ptr] = instance.getAngle());\n  }\n\n  rotateBy(\n    instances: gdInitialInstance[],\n    deltaX: number,\n    deltaY: number,\n    proportional: boolean\n  ) {\n    const nonLockedInstances = instances.filter(\n      instance => !instance.isLocked()\n    );\n\n    if (!this._fixedPointIsUpToDate) {\n      this._fixedPointIsUpToDate = true;\n      let selectionAABB = new Rectangle();\n      selectionAABB.setRectangle(\n        this._getOrCreateInstanceAABB(nonLockedInstances[0])\n      );\n      for (let i = 1; i < nonLockedInstances.length; i++) {\n        selectionAABB.union(\n          this._getOrCreateInstanceAABB(nonLockedInstances[i])\n        );\n      }\n      this._fixedPoint[0] = selectionAABB.centerX();\n      this._fixedPoint[1] = selectionAABB.centerY();\n\n      // Because the button is on top, consider the initial rotation vector to\n      // be directed to the top.\n      this.totalDeltaY -= selectionAABB.height() / 2;\n    }\n\n    this.totalDeltaX += deltaX;\n    this.totalDeltaY += deltaY;\n\n    for (let i = 0; i < nonLockedInstances.length; i++) {\n      const selectedInstance = nonLockedInstances[i];\n\n      const initialAABB = this._getOrCreateInstanceAABB(selectedInstance);\n      const initialAngle = this._getOrCreateInstanceAngle(selectedInstance);\n      const initialInstanceOriginPosition = this._getOrCreateInstanceOriginPosition(\n        selectedInstance\n      );\n\n      const degreeAngle = this._getNewAngle(proportional, initialAngle);\n      selectedInstance.setAngle(((degreeAngle % 360) + 360) % 360);\n\n      const rotationAngle = ((degreeAngle - initialAngle) * Math.PI) / 180;\n      const cosa = Math.cos(-rotationAngle);\n      const sina = Math.sin(-rotationAngle);\n      const deltaX = initialAABB.centerX() - this._fixedPoint[0];\n      const deltaY = initialAABB.centerY() - this._fixedPoint[1];\n      selectedInstance.setX(\n        this._fixedPoint[0] +\n          (initialInstanceOriginPosition.x - initialAABB.centerX()) +\n          cosa * deltaX +\n          sina * deltaY\n      );\n      selectedInstance.setY(\n        this._fixedPoint[1] +\n          (initialInstanceOriginPosition.y - initialAABB.centerY()) -\n          sina * deltaX +\n          cosa * deltaY\n      );\n    }\n  }\n\n  endRotate() {\n    this._instanceAngles = {};\n    this._instancePositions = {};\n    this._instanceAABBs = {};\n    this.totalDeltaX = 0;\n    this.totalDeltaY = 0;\n    this._fixedPointIsUpToDate = false;\n  }\n}\n","// @flow\nimport { roundPosition } from '../Utils/GridHelpers';\nimport Rectangle from '../Utils/Rectangle';\nimport { type InstancesEditorSettings } from './InstancesEditorSettings';\n\nexport default class InstancesMover {\n  instanceMeasurer: any;\n  instancesEditorSettings: InstancesEditorSettings;\n  instancePositions: { [number]: { x: number, y: number } };\n  totalDeltaX: number;\n  totalDeltaY: number;\n  _temporaryPoint: [number, number];\n  _initialSelectionAABB: ?Rectangle = null;\n  _startX: number = 0;\n  _startY: number = 0;\n\n  constructor({\n    instanceMeasurer,\n    instancesEditorSettings,\n  }: {\n    instanceMeasurer: any,\n    instancesEditorSettings: InstancesEditorSettings,\n  }) {\n    this.instanceMeasurer = instanceMeasurer;\n    this.instancesEditorSettings = instancesEditorSettings;\n    this.instancePositions = {};\n    this.totalDeltaX = 0;\n    this.totalDeltaY = 0;\n    this._temporaryPoint = [0, 0];\n  }\n\n  setInstancesEditorSettings(instancesEditorSettings: InstancesEditorSettings) {\n    this.instancesEditorSettings = instancesEditorSettings;\n  }\n\n  _getMoveDeltaX(\n    totalDeltaX: number,\n    totalDeltaY: number,\n    followAxis: boolean\n  ) {\n    if (followAxis && Math.abs(totalDeltaX) < Math.abs(totalDeltaY)) return 0;\n\n    return totalDeltaX;\n  }\n\n  _getMoveDeltaY(\n    totalDeltaX: number,\n    totalDeltaY: number,\n    followAxis: boolean\n  ) {\n    if (followAxis && Math.abs(totalDeltaY) < Math.abs(totalDeltaX)) return 0;\n\n    return totalDeltaY;\n  }\n\n  _getOrCreateSelectionAABB(instances: gdInitialInstance[]): ?Rectangle {\n    if (this._initialSelectionAABB) {\n      return this._initialSelectionAABB;\n    }\n    if (!instances.length) return null;\n    let initialSelectionAABB = new Rectangle();\n    this.instanceMeasurer.getInstanceAABB(instances[0], initialSelectionAABB);\n    const initialInstanceAABB = new Rectangle();\n    for (let i = 1; i < instances.length; i++) {\n      this.instanceMeasurer.getInstanceAABB(instances[i], initialInstanceAABB);\n      initialSelectionAABB.union(initialInstanceAABB);\n    }\n    this._initialSelectionAABB = initialSelectionAABB;\n    return initialSelectionAABB;\n  }\n\n  startMove(startX: number, startY: number) {\n    this._startX = startX;\n    this._startY = startY;\n  }\n\n  moveBy(\n    instances: gdInitialInstance[],\n    deltaX: number,\n    deltaY: number,\n    followAxis: boolean,\n    noGridSnap: boolean\n  ) {\n    this.totalDeltaX += deltaX;\n    this.totalDeltaY += deltaY;\n\n    const nonLockedInstances = instances.filter(\n      instance => !instance.isLocked()\n    );\n\n    // It will magnet the corner nearest to the grabbing position\n    const initialSelectionAABB = this._getOrCreateSelectionAABB(\n      nonLockedInstances\n    );\n    if (!initialSelectionAABB) return;\n    const magnetLeft = this._startX < initialSelectionAABB.centerX();\n    const magnetTop = this._startY < initialSelectionAABB.centerY();\n\n    const initialMagnetX = magnetLeft\n      ? initialSelectionAABB.left\n      : initialSelectionAABB.right;\n    const initialMagnetY = magnetTop\n      ? initialSelectionAABB.top\n      : initialSelectionAABB.bottom;\n    const magnetPosition = this._temporaryPoint;\n    magnetPosition[0] = initialMagnetX + this.totalDeltaX;\n    magnetPosition[1] = initialMagnetY + this.totalDeltaY;\n    if (\n      this.instancesEditorSettings.snap &&\n      this.instancesEditorSettings.grid &&\n      !noGridSnap\n    ) {\n      roundPosition(\n        magnetPosition,\n        this.instancesEditorSettings.gridWidth,\n        this.instancesEditorSettings.gridHeight,\n        this.instancesEditorSettings.gridOffsetX,\n        this.instancesEditorSettings.gridOffsetY,\n        this.instancesEditorSettings.gridType\n      );\n    } else {\n      // Without a grid, the position is still rounded to the nearest pixel.\n      // The size of the instance (or selection of instances) might not be round,\n      // so the magnet corner is still relevant.\n      magnetPosition[0] = Math.round(magnetPosition[0]);\n      magnetPosition[1] = Math.round(magnetPosition[1]);\n    }\n    const roundedTotalDeltaX = magnetPosition[0] - initialMagnetX;\n    const roundedTotalDeltaY = magnetPosition[1] - initialMagnetY;\n\n    for (var i = 0; i < nonLockedInstances.length; i++) {\n      const selectedInstance = nonLockedInstances[i];\n\n      let initialPosition = this.instancePositions[selectedInstance.ptr];\n      if (!initialPosition) {\n        initialPosition = this.instancePositions[selectedInstance.ptr] = {\n          x: selectedInstance.getX(),\n          y: selectedInstance.getY(),\n        };\n      }\n      selectedInstance.setX(\n        initialPosition.x +\n          this._getMoveDeltaX(\n            roundedTotalDeltaX,\n            roundedTotalDeltaY,\n            followAxis\n          )\n      );\n      selectedInstance.setY(\n        initialPosition.y +\n          this._getMoveDeltaY(\n            roundedTotalDeltaX,\n            roundedTotalDeltaY,\n            followAxis\n          )\n      );\n    }\n  }\n\n  endMove() {\n    this._initialSelectionAABB = null;\n    this.instancePositions = {};\n    this.totalDeltaX = 0;\n    this.totalDeltaY = 0;\n  }\n}\n","// @flow\nimport * as PIXI from 'pixi.js-legacy';\nimport ViewPosition from './ViewPosition';\nimport { type InstancesEditorSettings } from './InstancesEditorSettings';\n\ntype Props = {|\n  viewPosition: ViewPosition,\n  instancesEditorSettings: InstancesEditorSettings,\n|};\n\nexport default class Grid {\n  pixiGrid = new PIXI.Graphics();\n  instancesEditorSettings: InstancesEditorSettings;\n  viewPosition: ViewPosition;\n\n  constructor({ viewPosition, instancesEditorSettings }: Props) {\n    this.viewPosition = viewPosition;\n    this.instancesEditorSettings = instancesEditorSettings;\n\n    this.pixiGrid.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n  }\n\n  setInstancesEditorSettings(instancesEditorSettings: InstancesEditorSettings) {\n    this.instancesEditorSettings = instancesEditorSettings;\n  }\n\n  getPixiObject() {\n    return this.pixiGrid;\n  }\n\n  render() {\n    const instancesEditorSettings = this.instancesEditorSettings;\n\n    if (!instancesEditorSettings.grid) {\n      this.pixiGrid.visible = false;\n      return;\n    }\n\n    const gridColor = instancesEditorSettings.gridColor;\n    const gridAlpha = instancesEditorSettings.gridAlpha;\n\n    this.pixiGrid.visible = true;\n    this.pixiGrid.clear();\n    this.pixiGrid.beginFill(gridColor);\n    this.pixiGrid.lineStyle(1, gridColor, 1);\n    this.pixiGrid.alpha = gridAlpha;\n\n    const sceneStartPoint = this.viewPosition.toSceneCoordinates(0, 0);\n    const sceneEndPoint = this.viewPosition.toSceneCoordinates(\n      this.viewPosition.getWidth(),\n      this.viewPosition.getHeight()\n    );\n\n    const offsetX =\n      ((instancesEditorSettings.gridOffsetX %\n        instancesEditorSettings.gridWidth) +\n        instancesEditorSettings.gridWidth) %\n      instancesEditorSettings.gridWidth;\n    const offsetY =\n      ((instancesEditorSettings.gridOffsetY %\n        instancesEditorSettings.gridHeight) +\n        instancesEditorSettings.gridHeight) %\n      instancesEditorSettings.gridHeight;\n\n    const startX =\n      Math.floor(\n        (sceneStartPoint[0] - offsetX) / instancesEditorSettings.gridWidth\n      ) *\n        instancesEditorSettings.gridWidth +\n      offsetX;\n    const startY =\n      Math.floor(\n        (sceneStartPoint[1] - offsetY) / instancesEditorSettings.gridHeight\n      ) *\n        instancesEditorSettings.gridHeight +\n      offsetY;\n\n    const endX =\n      Math.ceil(\n        (sceneEndPoint[0] - offsetX) / instancesEditorSettings.gridWidth\n      ) *\n        instancesEditorSettings.gridWidth +\n      offsetX;\n    const endY =\n      Math.ceil(\n        (sceneEndPoint[1] - offsetY) / instancesEditorSettings.gridHeight\n      ) *\n        instancesEditorSettings.gridHeight +\n      offsetY;\n\n    if (instancesEditorSettings.gridType === 'isometric') {\n      const countX = Math.round(\n        (endX - startX) / instancesEditorSettings.gridWidth\n      );\n      const countY = Math.round(\n        (endY - startY) / instancesEditorSettings.gridHeight\n      );\n      const lineCount = countX + countY;\n      for (let i = 0; i < lineCount; ++i) {\n        let lineStartX;\n        let lineStartY;\n        if (i < countX) {\n          // top\n          lineStartX =\n            startX +\n            instancesEditorSettings.gridWidth / 2 +\n            i * instancesEditorSettings.gridWidth;\n          lineStartY = startY;\n        } else {\n          // right\n          lineStartX = endX;\n          lineStartY =\n            startY +\n            instancesEditorSettings.gridHeight / 2 +\n            (i - countX) * instancesEditorSettings.gridHeight;\n        }\n        let lineEndX;\n        let lineEndY;\n        if (i < countY) {\n          // left\n          lineEndX = startX;\n          lineEndY =\n            startY +\n            instancesEditorSettings.gridHeight / 2 +\n            i * instancesEditorSettings.gridHeight;\n        } else {\n          // bottom\n          lineEndX =\n            startX +\n            instancesEditorSettings.gridWidth / 2 +\n            (i - countY) * instancesEditorSettings.gridWidth;\n          lineEndY = endY;\n        }\n        const start = this.viewPosition.toCanvasCoordinates(\n          lineStartX,\n          lineStartY\n        );\n        const end = this.viewPosition.toCanvasCoordinates(lineEndX, lineEndY);\n        this.pixiGrid.moveTo(start[0], start[1]);\n        this.pixiGrid.lineTo(end[0], end[1]);\n      }\n      for (let i = 0; i < lineCount; ++i) {\n        let lineStartX;\n        let lineStartY;\n        if (i < countY) {\n          // reverse left\n          lineStartX = startX;\n          lineStartY =\n            startY +\n            instancesEditorSettings.gridHeight / 2 +\n            (countY - 1 - i) * instancesEditorSettings.gridHeight;\n        } else {\n          // top\n          lineStartX =\n            startX +\n            instancesEditorSettings.gridWidth / 2 +\n            (i - countY) * instancesEditorSettings.gridWidth;\n          lineStartY = startY;\n        }\n        let lineEndX;\n        let lineEndY;\n        if (i < countX) {\n          // bottom\n          lineEndX =\n            startX +\n            instancesEditorSettings.gridWidth / 2 +\n            i * instancesEditorSettings.gridWidth;\n          lineEndY = endY;\n        } else {\n          // reverse right\n          lineEndX = endX;\n          lineEndY =\n            startY +\n            instancesEditorSettings.gridHeight / 2 +\n            (lineCount - 1 - i) * instancesEditorSettings.gridHeight;\n        }\n        const start = this.viewPosition.toCanvasCoordinates(\n          lineStartX,\n          lineStartY\n        );\n        const end = this.viewPosition.toCanvasCoordinates(lineEndX, lineEndY);\n        this.pixiGrid.moveTo(start[0], start[1]);\n        this.pixiGrid.lineTo(end[0], end[1]);\n      }\n    } else {\n      for (let x = startX; x < endX; x += instancesEditorSettings.gridWidth) {\n        const start = this.viewPosition.toCanvasCoordinates(x, startY);\n        const end = this.viewPosition.toCanvasCoordinates(x, endY);\n\n        this.pixiGrid.moveTo(start[0], start[1]);\n        this.pixiGrid.lineTo(end[0], end[1]);\n      }\n\n      for (let y = startY; y < endY; y += instancesEditorSettings.gridHeight) {\n        const start = this.viewPosition.toCanvasCoordinates(startX, y);\n        const end = this.viewPosition.toCanvasCoordinates(endX, y);\n\n        this.pixiGrid.moveTo(start[0], start[1]);\n        this.pixiGrid.lineTo(end[0], end[1]);\n      }\n    }\n\n    this.pixiGrid.endFill();\n  }\n}\n","// @flow\nimport * as PIXI from 'pixi.js-legacy';\nimport transformRect from '../Utils/TransformRect';\nimport { rgbToHexNumber } from '../Utils/ColorTransformer';\n\ntype Props = {|\n  project: gdProject,\n  layout: gdLayout,\n  toCanvasCoordinates: (x: number, y: number) => [number, number],\n|};\n\nexport default class WindowBorder {\n  project: gdProject;\n  layout: gdLayout;\n  toCanvasCoordinates: (x: number, y: number) => [number, number];\n  pixiRectangle = new PIXI.Graphics();\n  windowRectangle: { x: number, y: number, width: number, height: number };\n\n  constructor({ project, layout, toCanvasCoordinates }: Props) {\n    this.project = project;\n    this.layout = layout;\n    this.toCanvasCoordinates = toCanvasCoordinates;\n\n    this.pixiRectangle.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n    this.windowRectangle = {\n      x: 0,\n      y: 0,\n      width: this.project.getGameResolutionWidth(),\n      height: this.project.getGameResolutionHeight(),\n    };\n  }\n\n  getPixiObject() {\n    return this.pixiRectangle;\n  }\n\n  render() {\n    this.windowRectangle.width = this.project.getGameResolutionWidth();\n    this.windowRectangle.height = this.project.getGameResolutionHeight();\n\n    const displayedRectangle = transformRect(\n      this.toCanvasCoordinates,\n      this.windowRectangle\n    );\n\n    this.pixiRectangle.clear();\n    this.pixiRectangle.beginFill(0x000000);\n    this.pixiRectangle.lineStyle(\n      1,\n      rgbToHexNumber(\n        128 + (this.layout.getBackgroundColorRed() % 256),\n        128 + (this.layout.getBackgroundColorBlue() % 256),\n        128 + (this.layout.getBackgroundColorGreen() % 256)\n      ),\n      1\n    );\n    this.pixiRectangle.alpha = 1;\n    this.pixiRectangle.fill.alpha = 0;\n    this.pixiRectangle.drawRect(\n      displayedRectangle.x,\n      displayedRectangle.y,\n      displayedRectangle.width,\n      displayedRectangle.height\n    );\n    this.pixiRectangle.endFill();\n  }\n}\n","// @flow\nimport * as PIXI from 'pixi.js-legacy';\nimport transformRect from '../Utils/TransformRect';\nimport ViewPosition from './ViewPosition';\nimport { type InstancesEditorSettings } from './InstancesEditorSettings';\n\ntype Props = {|\n  project: gdProject,\n  instancesEditorSettings: InstancesEditorSettings,\n  viewPosition: ViewPosition,\n|};\n\nexport default class WindowMask {\n  project: gdProject;\n  instancesEditorSettings: InstancesEditorSettings;\n  viewPosition: ViewPosition;\n  pixiRectangle = new PIXI.Graphics();\n  windowRectangle = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  };\n\n  constructor({ project, viewPosition, instancesEditorSettings }: Props) {\n    this.project = project;\n    this.viewPosition = viewPosition;\n    this.instancesEditorSettings = instancesEditorSettings;\n\n    this.pixiRectangle.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n  }\n\n  setInstancesEditorSettings(instancesEditorSettings: InstancesEditorSettings) {\n    this.instancesEditorSettings = instancesEditorSettings;\n  }\n\n  getPixiObject() {\n    return this.pixiRectangle;\n  }\n\n  render() {\n    if (!this.instancesEditorSettings.windowMask) {\n      this.pixiRectangle.visible = false;\n      return;\n    }\n\n    const width = this.project.getGameResolutionWidth();\n    const height = this.project.getGameResolutionHeight();\n    this.windowRectangle.x = this.viewPosition.getViewX() - width / 2;\n    this.windowRectangle.y = this.viewPosition.getViewY() - height / 2;\n    this.windowRectangle.width = width;\n    this.windowRectangle.height = height;\n\n    const displayedRectangle = transformRect(\n      this.viewPosition.toCanvasCoordinates,\n      this.windowRectangle\n    );\n\n    this.pixiRectangle.visible = true;\n    this.pixiRectangle.clear();\n    this.pixiRectangle.beginFill(0x000000);\n    this.pixiRectangle.lineStyle(1, 0x000000, 1);\n    this.pixiRectangle.alpha = 1;\n    this.pixiRectangle.fill.alpha = 0;\n    this.pixiRectangle.drawRect(\n      displayedRectangle.x,\n      displayedRectangle.y,\n      displayedRectangle.width,\n      displayedRectangle.height\n    );\n    this.pixiRectangle.endFill();\n  }\n}\n","// @flow\nimport * as PIXI from 'pixi.js-legacy';\nimport { rgbToHex } from '../Utils/ColorTransformer';\n\ntype Props = {|\n  layout: gdLayout,\n  pixiRenderer: PIXI.Renderer,\n|};\n\nexport default class BackgroundColor {\n  layout: gdLayout;\n  pixiRenderer: PIXI.Renderer;\n\n  constructor({ layout, pixiRenderer }: Props) {\n    this.layout = layout;\n    this.pixiRenderer = pixiRenderer;\n  }\n\n  render() {\n    this.pixiRenderer.backgroundColor = parseInt(\n      parseInt(\n        rgbToHex(\n          this.layout.getBackgroundColorRed(),\n          this.layout.getBackgroundColorGreen(),\n          this.layout.getBackgroundColorBlue()\n        ),\n        16\n      ),\n      10\n    );\n  }\n}\n","// @flow\n\n/**\n * Provide a method shouldUpdate that can be called in a game loop or in\n * a method used in renderAnimationFrame, and which indicate if the rendering/update\n * of the scene should be done according to the desired framerate.\n */\nexport default class FpsLimiter {\n  _lastFrameTime: number;\n  _interval: number;\n  _forceUpdate: boolean;\n\n  constructor(maxFps: number) {\n    this._lastFrameTime = Date.now();\n    this._interval = 1000 / maxFps;\n    this._forceUpdate = false;\n  }\n\n  shouldUpdate() {\n    const now = Date.now();\n    const delta = now - this._lastFrameTime;\n\n    if (delta > this._interval || this._forceUpdate) {\n      this._lastFrameTime = now - (delta % this._interval);\n      this._forceUpdate = false;\n      return true;\n    }\n\n    return false;\n  }\n\n  forceNextUpdate() {\n    this._forceUpdate = true;\n  }\n}\n","import * as PIXI from 'pixi.js-legacy';\n\n// PIXI has a ticker that is used by PIXI InteractionManager, and which\n// frequently check if interaction happened. We may want to disable it\n// when it's useless to do these interaction checks to save CPU usage.\n\n/**\n *  Stop the PIXI Ticker used to monitor interactions\n */\nexport const stopPIXITicker = () => {\n  const ticker = PIXI.Ticker && PIXI.Ticker.shared;\n  if (ticker) ticker.stop();\n  // TODO: same for the PIXI.Ticker.system\n};\n\n/**\n * Start the PIXI Ticker used to monitor interactions\n */\nexport const startPIXITicker = () => {\n  // Timeout ensure that the ticker is started even if other components\n  // call stopPIXITicker during the same tick (for example, when switching\n  // between SceneEditor tabs).\n  setTimeout(() => {\n    const ticker = PIXI.Ticker && PIXI.Ticker.shared;\n    if (ticker) ticker.start();\n    // TODO: same for the PIXI.Ticker.system\n  }, 50);\n};\n","// @flow\nimport * as PIXI from 'pixi.js-legacy';\n\ntype Props = {\n  getLastCursorSceneCoordinates: () => [number, number],\n  width: number,\n  height: number,\n};\n\nexport default class StatusBar {\n  _width: number;\n  _height: number;\n  _getLastCursorSceneCoordinates: () => [number, number];\n  _statusBarContainer: PIXI.Container;\n  _statusBarBackground: PIXI.Graphics;\n  _statusBarText: PIXI.Text;\n\n  constructor({ getLastCursorSceneCoordinates, width, height }: Props) {\n    this._getLastCursorSceneCoordinates = getLastCursorSceneCoordinates;\n    this._statusBarContainer = new PIXI.Container();\n    this._statusBarContainer.alpha = 0.8;\n    this._statusBarContainer.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n    this._statusBarBackground = new PIXI.Graphics();\n    this._statusBarText = new PIXI.Text('', {\n      fontSize: 15,\n      fill: 0xffffff,\n      align: 'left',\n    });\n    this._statusBarContainer.addChild(this._statusBarBackground);\n    this._statusBarContainer.addChild(this._statusBarText);\n    this.resize(width, height);\n  }\n\n  resize(width: number, height: number) {\n    this._width = width;\n    this._height = height;\n  }\n\n  getPixiObject(): PIXI.Container {\n    return this._statusBarContainer;\n  }\n\n  render() {\n    const padding = 5;\n    const borderRadius = 4;\n    const [x, y] = this._getLastCursorSceneCoordinates();\n    this._statusBarText.text = `${x.toFixed(0)};${y.toFixed(0)}`;\n    this._statusBarText.position.x = 0 + padding;\n    this._statusBarText.position.y = Math.round(\n      this._height - padding - this._statusBarText.height\n    );\n\n    this._statusBarBackground.clear();\n    this._statusBarBackground.beginFill(0x000000, 0.8);\n    this._statusBarBackground.drawRoundedRect(\n      0 - borderRadius,\n      this._height - padding * 2 - this._statusBarText.height,\n      this._statusBarText.width + padding * 2 + borderRadius,\n      this._statusBarText.height + padding * 2 + borderRadius,\n      borderRadius\n    );\n    this._statusBarBackground.endFill();\n  }\n}\n","// @flow\n\ntype Props = {|\n  canvas: HTMLDivElement,\n  shouldMoveView: () => boolean,\n|};\n\n/**\n * Change the cursor displayed when hovering the canvas.\n *\n * Some elements on the canvas (for example, resize buttons)\n * can also set their own cursor - this class is only for the canvas.\n */\nexport default class CanvasCursor {\n  canvas: HTMLDivElement;\n  shouldMoveView: () => boolean;\n\n  constructor({ canvas, shouldMoveView }: Props) {\n    this.canvas = canvas;\n    this.shouldMoveView = shouldMoveView;\n  }\n\n  render() {\n    if (this.shouldMoveView()) {\n      this.canvas.style.cursor = 'grab';\n      if (this.canvas.style.cursor !== 'grab') {\n        this.canvas.style.cursor = '-webkit-grab';\n      }\n      return;\n    }\n\n    this.canvas.style.cursor = 'default';\n  }\n}\n","// @flow\n\ntype CallbackEvent = {|\n  /* The X position, relative to the viewport, not including scroll offset, of the long touch */\n  clientX: number,\n  /* The Y position, relative to the viewport, not including scroll offset, of the long touch */\n  clientY: number,\n|};\n\ntype Props = {|\n  canvas: HTMLCanvasElement,\n  onLongTouch: (event: CallbackEvent) => void,\n|};\n\nconst delay = 600; // ms\nconst moveTolerance = 10; // px\n\n/**\n * Listen for a long touch on a canvas. Usually used to simulate the equivalent of a right click.\n *\n * A long press is characterized by starting a touch and staying pressed, without\n * moving too far from the initial position (to avoid being confused with a drag/scroll).\n */\nexport default class LongTouchHandler {\n  _lastTouchX: number = 0;\n  _lastTouchY: number = 0;\n  _longTouchTimeoutID: TimeoutID;\n  _canvas: HTMLCanvasElement;\n  _onLongTouch: ?(event: CallbackEvent) => void;\n\n  constructor({ canvas, onLongTouch }: Props) {\n    this._canvas = canvas;\n    this._onLongTouch = onLongTouch;\n\n    canvas.addEventListener('touchstart', this._onTouchStart);\n    canvas.addEventListener('touchmove', this._onTouchMove);\n    canvas.addEventListener('touchend', this._clear);\n  }\n\n  _onTouchStart = (event: TouchEvent) => {\n    // If more than one touch,\n    // it's not a long press.\n    if (event.touches.length !== 1) return;\n\n    const touch = event.touches[0];\n    this._lastTouchX = touch.clientX;\n    this._lastTouchY = touch.clientY;\n\n    // Ensure we're tracking a single long press, as sometimes\n    // the 'touchstart' event is called more than once.\n    this._clear();\n    this._longTouchTimeoutID = setTimeout(() => {\n      if (this._onLongTouch)\n        this._onLongTouch({\n          clientX: this._lastTouchX,\n          clientY: this._lastTouchY,\n        });\n    }, delay);\n  };\n\n  _onTouchMove = (event: TouchEvent) => {\n    // If more than one touch,\n    // it's not a long press anymore.\n    if (event.touches.length !== 1) {\n      this._clear();\n      return;\n    }\n\n    // If touch moved too far from the initial touch position,\n    // it's not a long press anymore.\n    const touch = event.touches[0];\n    if (\n      Math.abs(touch.clientX - this._lastTouchX) > moveTolerance ||\n      Math.abs(touch.clientY - this._lastTouchY) > moveTolerance\n    ) {\n      this._clear();\n      return;\n    }\n  };\n\n  _clear = () => {\n    clearTimeout(this._longTouchTimeoutID);\n  };\n\n  unmount = () => {\n    this._canvas.removeEventListener('touchstart', this._onTouchStart);\n    this._canvas.removeEventListener('touchmove', this._onTouchMove);\n    this._canvas.removeEventListener('touchend', this._clear);\n  };\n}\n","// @flow\nimport React, { Component } from 'react';\nimport gesture from 'pixi-simple-gesture';\nimport DeprecatedKeyboardShortcuts from '../UI/KeyboardShortcuts/DeprecatedKeyboardShortcuts';\nimport InstancesRenderer from './InstancesRenderer';\nimport ViewPosition from './ViewPosition';\nimport SelectedInstances from './SelectedInstances';\nimport HighlightedInstance from './HighlightedInstance';\nimport SelectionRectangle from './SelectionRectangle';\nimport InstancesResizer, {\n  type ResizeGrabbingLocation,\n  canMoveOnX,\n  canMoveOnY,\n} from './InstancesResizer';\nimport InstancesRotator from './InstancesRotator';\nimport InstancesMover from './InstancesMover';\nimport Grid from './Grid';\nimport WindowBorder from './WindowBorder';\nimport WindowMask from './WindowMask';\nimport BackgroundColor from './BackgroundColor';\nimport * as PIXI from 'pixi.js-legacy';\nimport FpsLimiter from './FpsLimiter';\nimport { startPIXITicker, stopPIXITicker } from '../Utils/PIXITicker';\nimport StatusBar from './StatusBar';\nimport CanvasCursor from './CanvasCursor';\nimport InstancesAdder from './InstancesAdder';\nimport { makeDropTarget } from '../UI/DragAndDrop/DropTarget';\nimport { objectWithContextReactDndType } from '../ObjectsList';\nimport PinchHandler, { shouldBeHandledByPinch } from './PinchHandler';\nimport { type ScreenType } from '../UI/Reponsive/ScreenTypeMeasurer';\nimport InstancesSelection from './InstancesSelection';\nimport LongTouchHandler from './LongTouchHandler';\nimport { type InstancesEditorSettings } from './InstancesEditorSettings';\n\nconst styles = {\n  canvasArea: { flex: 1, position: 'absolute', overflow: 'hidden' },\n  dropCursor: { cursor: 'copy' },\n};\n\nconst DropTarget = makeDropTarget<{||}>(objectWithContextReactDndType);\n\nexport type InstancesEditorPropsWithoutSizeAndScroll = {|\n  project: gdProject,\n  layout: gdLayout,\n  initialInstances: gdInitialInstancesContainer,\n  instancesEditorSettings: InstancesEditorSettings,\n  onChangeInstancesEditorSettings: (\n    instancesEditorSettings: InstancesEditorSettings\n  ) => void,\n  instancesSelection: InstancesSelection,\n  onDeleteSelection: () => void,\n  onInstancesAdded: (instances: Array<gdInitialInstance>) => void,\n  onInstancesSelected: (instances: Array<gdInitialInstance>) => void,\n  onInstanceDoubleClicked: (instance: gdInitialInstance) => void,\n  onInstancesMoved: (instances: Array<gdInitialInstance>) => void,\n  onInstancesResized: (instances: Array<gdInitialInstance>) => void,\n  onInstancesRotated: (instances: Array<gdInitialInstance>) => void,\n  selectedObjectNames: Array<string>,\n  onContextMenu: (\n    x: number,\n    y: number,\n    ignoreSelectedObjectNamesForContextMenu?: boolean\n  ) => void,\n  onCopy: () => void,\n  onCut: () => void,\n  onPaste: () => void,\n  onUndo: () => void,\n  onRedo: () => void,\n  onZoomOut: () => void,\n  onZoomIn: () => void,\n  pauseRendering: boolean,\n|};\n\ntype Props = {|\n  ...InstancesEditorPropsWithoutSizeAndScroll,\n  width: number,\n  height: number,\n  onViewPositionChanged: ViewPosition => void,\n  screenType: ScreenType,\n|};\n\nexport default class InstancesEditor extends Component<Props> {\n  lastContextMenuX = 0;\n  lastContextMenuY = 0;\n  lastCursorX = 0;\n  lastCursorY = 0;\n  fpsLimiter = new FpsLimiter(28);\n  canvasArea: ?HTMLDivElement;\n  pixiRenderer: any;\n  keyboardShortcuts: DeprecatedKeyboardShortcuts;\n  pinchHandler: PinchHandler;\n  canvasCursor: CanvasCursor;\n  _instancesAdder: InstancesAdder;\n  selectionRectangle: SelectionRectangle;\n  selectedInstances: SelectedInstances;\n  highlightedInstance: HighlightedInstance;\n  instancesResizer: InstancesResizer;\n  instancesRotator: InstancesRotator;\n  instancesMover: InstancesMover;\n  windowBorder: WindowBorder;\n  windowMask: WindowMask;\n  statusBar: StatusBar;\n  pixiContainer: PIXI.Container;\n  backgroundArea: PIXI.Container;\n  backgroundColor: BackgroundColor;\n  instancesRenderer: InstancesRenderer;\n  viewPosition: ViewPosition;\n  longTouchHandler: LongTouchHandler;\n  grid: Grid;\n  _unmounted = false;\n  _renderingPaused = false;\n  nextFrame: AnimationFrameID;\n  contextMenuLongTouchTimeoutID: TimeoutID;\n\n  componentDidMount() {\n    // Initialize the PIXI renderer, if possible\n    if (this.canvasArea && !this.pixiRenderer) {\n      this._initializeCanvasAndRenderer();\n    }\n  }\n\n  componentDidUpdate() {\n    // Initialize the PIXI renderer, if not already done.\n    // This can happen if canvasArea was not rendered\n    // just after the mount (depends on react-dnd versions?).\n    if (this.canvasArea && !this.pixiRenderer) {\n      this._initializeCanvasAndRenderer();\n    }\n  }\n\n  _initializeCanvasAndRenderer() {\n    const { canvasArea } = this;\n    if (!canvasArea) return;\n\n    // project can be used here for initializing stuff, but don't keep references to it.\n    // Instead, create editors in _mountEditorComponents (as they will be destroyed/recreated\n    // if the project changes).\n    const { project } = this.props;\n\n    //Create the renderer and setup the rendering area for scene editor.\n    //\"preserveDrawingBuffer: true\" is needed to avoid flickering and background issues on some mobile phones (see #585 #572 #566 #463)\n    this.pixiRenderer = PIXI.autoDetectRenderer(\n      {\n        width: this.props.width,\n        height: this.props.height,\n        preserveDrawingBuffer: true,\n        antialias: false,\n      }\n      // Disable anti-aliasing(default) to avoid rendering issue (1px width line of extra pixels) when rendering pixel perfect tiled sprites.\n    );\n    canvasArea.appendChild(this.pixiRenderer.view);\n\n    this.longTouchHandler = new LongTouchHandler({\n      canvas: this.pixiRenderer.view,\n      onLongTouch: event =>\n        this.props.onContextMenu(event.clientX, event.clientY),\n    });\n\n    this.pixiRenderer.view.onwheel = (event: any) => {\n      const zoomFactor = this.getZoomFactor();\n      if (this.keyboardShortcuts.shouldZoom()) {\n        this.zoomOnCursorBy(-event.deltaY / 5000);\n      } else if (this.keyboardShortcuts.shouldScrollHorizontally()) {\n        const deltaX = event.deltaY / (5 * zoomFactor);\n        this.viewPosition.scrollBy(-deltaX, 0);\n      } else {\n        const deltaX = event.deltaX / (5 * zoomFactor);\n        const deltaY = event.deltaY / (5 * zoomFactor);\n        this.viewPosition.scrollBy(deltaX, deltaY);\n      }\n\n      if (this.props.onViewPositionChanged) {\n        this.props.onViewPositionChanged(this.viewPosition);\n      }\n      event.preventDefault();\n    };\n    this.pixiRenderer.view.setAttribute('tabIndex', -1);\n    this.pixiRenderer.view.addEventListener('focus', e => {\n      this.keyboardShortcuts.focus();\n    });\n    this.pixiRenderer.view.addEventListener('blur', e => {\n      this.keyboardShortcuts.blur();\n    });\n    this.pixiRenderer.view.addEventListener('mouseover', e => {\n      this.keyboardShortcuts.focus();\n    });\n    this.pixiRenderer.view.addEventListener('mouseout', e => {\n      this.keyboardShortcuts.blur();\n    });\n\n    this.pixiContainer = new PIXI.Container();\n\n    this.backgroundArea = new PIXI.Container();\n    this.backgroundArea.hitArea = new PIXI.Rectangle(\n      0,\n      0,\n      this.props.width,\n      this.props.height\n    );\n    gesture.panable(this.backgroundArea);\n    this.backgroundArea.on('mousedown', event =>\n      this._onBackgroundClicked(event.data.global.x, event.data.global.y)\n    );\n    this.backgroundArea.on(\n      'rightclick',\n      (interactionEvent: PIXI.InteractionEvent) => {\n        const {\n          data: { originalEvent: event },\n        } = interactionEvent;\n        this._onRightClicked({\n          offsetX: event.offsetX,\n          offsetY: event.offsetY,\n          x: event.clientX,\n          y: event.clientY,\n          ignoreSelectedObjectNamesForContextMenu: true,\n        });\n\n        return false;\n      }\n    );\n    this.backgroundArea.on('touchstart', event => {\n      if (shouldBeHandledByPinch(event.data && event.data.originalEvent)) {\n        return;\n      }\n\n      this._onBackgroundClicked(event.data.global.x, event.data.global.y);\n    });\n    this.backgroundArea.on('mousemove', event => {\n      const cursorX = event.data.global.x || 0;\n      const cursorY = event.data.global.y || 0;\n      this._onMouseMove(cursorX, cursorY);\n    });\n    this.backgroundArea.on('panmove', event =>\n      this._onPanMove(\n        event.deltaX,\n        event.deltaY,\n        event.data.global.x,\n        event.data.global.y\n      )\n    );\n    this.backgroundArea.on('panend', event => this._onPanEnd());\n    this.pixiContainer.addChild(this.backgroundArea);\n\n    this.viewPosition = new ViewPosition({\n      initialViewX: project ? project.getGameResolutionWidth() / 2 : 0,\n      initialViewY: project ? project.getGameResolutionHeight() / 2 : 0,\n      width: this.props.width,\n      height: this.props.height,\n      instancesEditorSettings: this.props.instancesEditorSettings,\n    });\n    this.pixiContainer.addChild(this.viewPosition.getPixiContainer());\n\n    this.grid = new Grid({\n      viewPosition: this.viewPosition,\n      instancesEditorSettings: this.props.instancesEditorSettings,\n    });\n    this.pixiContainer.addChild(this.grid.getPixiObject());\n\n    this.keyboardShortcuts = new DeprecatedKeyboardShortcuts({\n      onDelete: this.props.onDeleteSelection,\n      onMove: this.moveSelection,\n      onCopy: this.props.onCopy,\n      onCut: this.props.onCut,\n      onPaste: this.props.onPaste,\n      onUndo: this.props.onUndo,\n      onRedo: this.props.onRedo,\n      onZoomOut: this.props.onZoomOut,\n      onZoomIn: this.props.onZoomIn,\n    });\n\n    this.pinchHandler = new PinchHandler({\n      canvas: this.pixiRenderer.view,\n      setZoomFactor: this.setZoomFactor,\n      getZoomFactor: this.getZoomFactor,\n      viewPosition: this.viewPosition,\n    });\n\n    this.canvasCursor = new CanvasCursor({\n      canvas: canvasArea,\n      shouldMoveView: () => this.keyboardShortcuts.shouldMoveView(),\n    });\n\n    this._instancesAdder = new InstancesAdder({\n      instances: this.props.initialInstances,\n      instancesEditorSettings: this.props.instancesEditorSettings,\n    });\n\n    this._mountEditorComponents(this.props);\n    this._renderScene();\n  }\n\n  /**\n   * Force the internal InstancesRenderer to be destroyed and recreated\n   * (as well as other components holding references to instances). Call\n   * this when the initial instances were recreated to ensure that there\n   * is not mismatch between renderers and the instances that were updated.\n   */\n  forceRemount() {\n    this._mountEditorComponents(this.props);\n  }\n\n  _mountEditorComponents(props: Props) {\n    //Remove and delete any existing editor component\n    if (this.highlightedInstance) {\n      this.pixiContainer.removeChild(this.highlightedInstance.getPixiObject());\n    }\n    if (this.selectedInstances) {\n      this.pixiContainer.removeChild(this.selectedInstances.getPixiContainer());\n    }\n    if (this.instancesRenderer) {\n      this.viewPosition\n        .getPixiContainer()\n        .removeChild(this.instancesRenderer.getPixiContainer());\n      this.instancesRenderer.delete();\n    }\n    if (this.selectionRectangle) {\n      this.pixiContainer.removeChild(this.selectionRectangle.getPixiObject());\n      this.selectionRectangle.delete();\n    }\n    if (this.windowBorder) {\n      this.pixiContainer.removeChild(this.windowBorder.getPixiObject());\n    }\n    if (this.windowMask) {\n      this.pixiContainer.removeChild(this.windowMask.getPixiObject());\n    }\n    if (this.statusBar) {\n      this.pixiContainer.removeChild(this.statusBar.getPixiObject());\n    }\n\n    this.backgroundColor = new BackgroundColor({\n      layout: props.layout,\n      pixiRenderer: this.pixiRenderer,\n    });\n    this.instancesRenderer = new InstancesRenderer({\n      project: props.project,\n      layout: props.layout,\n      instances: props.initialInstances,\n      viewPosition: this.viewPosition,\n      onOverInstance: this._onOverInstance,\n      onMoveInstance: this._onMoveInstance,\n      onMoveInstanceEnd: this._onMoveInstanceEnd,\n      onDownInstance: this._onDownInstance,\n      onOutInstance: this._onOutInstance,\n      onInstanceClicked: this._onInstanceClicked,\n      onInstanceRightClicked: this._onInstanceRightClicked,\n      onInstanceDoubleClicked: this._onInstanceDoubleClicked,\n    });\n    this.selectionRectangle = new SelectionRectangle({\n      instances: props.initialInstances,\n      instanceMeasurer: this.instancesRenderer.getInstanceMeasurer(),\n      toSceneCoordinates: this.viewPosition.toSceneCoordinates,\n    });\n    this.selectedInstances = new SelectedInstances({\n      instancesSelection: this.props.instancesSelection,\n      onResize: this._onResize,\n      onResizeEnd: this._onResizeEnd,\n      onRotate: this._onRotate,\n      onRotateEnd: this._onRotateEnd,\n      instanceMeasurer: this.instancesRenderer.getInstanceMeasurer(),\n      toCanvasCoordinates: this.viewPosition.toCanvasCoordinates,\n      screenType: this.props.screenType,\n    });\n    this.highlightedInstance = new HighlightedInstance({\n      instanceMeasurer: this.instancesRenderer.getInstanceMeasurer(),\n      toCanvasCoordinates: this.viewPosition.toCanvasCoordinates,\n    });\n    this.instancesResizer = new InstancesResizer({\n      instanceMeasurer: this.instancesRenderer.getInstanceMeasurer(),\n      instancesEditorSettings: this.props.instancesEditorSettings,\n    });\n    this.instancesRotator = new InstancesRotator(\n      this.instancesRenderer.getInstanceMeasurer()\n    );\n    this.instancesMover = new InstancesMover({\n      instanceMeasurer: this.instancesRenderer.getInstanceMeasurer(),\n      instancesEditorSettings: this.props.instancesEditorSettings,\n    });\n    this.windowBorder = new WindowBorder({\n      project: props.project,\n      layout: props.layout,\n      toCanvasCoordinates: this.viewPosition.toCanvasCoordinates,\n    });\n    this.windowMask = new WindowMask({\n      project: props.project,\n      viewPosition: this.viewPosition,\n      instancesEditorSettings: this.props.instancesEditorSettings,\n    });\n    this.statusBar = new StatusBar({\n      width: this.props.width,\n      height: this.props.height,\n      getLastCursorSceneCoordinates: this.getLastCursorSceneCoordinates,\n    });\n\n    this.pixiContainer.addChild(this.selectionRectangle.getPixiObject());\n    this.viewPosition\n      .getPixiContainer()\n      .addChild(this.instancesRenderer.getPixiContainer());\n    this.pixiContainer.addChild(this.windowBorder.getPixiObject());\n    this.pixiContainer.addChild(this.windowMask.getPixiObject());\n    this.pixiContainer.addChild(this.selectedInstances.getPixiContainer());\n    this.pixiContainer.addChild(this.highlightedInstance.getPixiObject());\n    this.pixiContainer.addChild(this.statusBar.getPixiObject());\n  }\n\n  componentWillUnmount() {\n    // This is an antipattern and is theorically not needed, but help\n    // to protect against renders after the component is unmounted.\n    this._unmounted = true;\n\n    this.keyboardShortcuts.unmount();\n    this.selectionRectangle.delete();\n    this.instancesRenderer.delete();\n    this._instancesAdder.unmount();\n    this.pinchHandler.unmount();\n    this.longTouchHandler.unmount();\n    if (this.nextFrame) cancelAnimationFrame(this.nextFrame);\n    stopPIXITicker();\n    this.pixiRenderer.destroy();\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (\n      nextProps.width !== this.props.width ||\n      nextProps.height !== this.props.height\n    ) {\n      this.pixiRenderer.resize(nextProps.width, nextProps.height);\n      this.viewPosition.resize(nextProps.width, nextProps.height);\n      this.statusBar.resize(nextProps.width, nextProps.height);\n      this.backgroundArea.hitArea = new PIXI.Rectangle(\n        0,\n        0,\n        nextProps.width,\n        nextProps.height\n      );\n\n      // Avoid flickering that could happen while waiting for next animation frame.\n      this.fpsLimiter.forceNextUpdate();\n      this._renderScene();\n    }\n\n    if (\n      nextProps.instancesEditorSettings !== this.props.instancesEditorSettings\n    ) {\n      this.grid.setInstancesEditorSettings(nextProps.instancesEditorSettings);\n      this.instancesMover.setInstancesEditorSettings(\n        nextProps.instancesEditorSettings\n      );\n      this.instancesResizer.setInstancesEditorSettings(\n        nextProps.instancesEditorSettings\n      );\n      this.windowMask.setInstancesEditorSettings(\n        nextProps.instancesEditorSettings\n      );\n      this.viewPosition.setInstancesEditorSettings(\n        nextProps.instancesEditorSettings\n      );\n      this._instancesAdder.setInstancesEditorSettings(\n        nextProps.instancesEditorSettings\n      );\n    }\n\n    if (nextProps.screenType !== this.props.screenType) {\n      this.selectedInstances.setScreenType(this.props.screenType);\n    }\n\n    if (\n      this.props.layout !== nextProps.layout ||\n      this.props.initialInstances !== nextProps.initialInstances ||\n      this.props.project !== nextProps.project\n    ) {\n      this._mountEditorComponents(nextProps);\n    }\n\n    // For avoiding useless renderings, which is costly for CPU/GPU, when the editor\n    // is not displayed, `pauseRendering` prop can be set to true.\n    if (nextProps.pauseRendering && !this.props.pauseRendering)\n      this.pauseSceneRendering();\n\n    if (!nextProps.pauseRendering && this.props.pauseRendering)\n      this.restartSceneRendering();\n  }\n\n  /**\n   * Delete instance renderers of the specified objects, which will then be recreated during\n   * the next render. Call this when an object resources may have changed (for example, a modified image),\n   * and you want the instances of objects to reflect the changes.\n   * See also ResourcesLoader and PixiResourcesLoader.\n   * @param {string} objectName The name of the object for which instance must be re-rendered.\n   */\n  resetInstanceRenderersFor(objectName: string) {\n    if (this.instancesRenderer)\n      this.instancesRenderer.resetInstanceRenderersFor(objectName);\n  }\n\n  zoomBy(value: number) {\n    this.setZoomFactor(this.getZoomFactor() + value);\n  }\n\n  /**\n   * Zoom and scroll so that the cursor stays on the same position scene-wise.\n   */\n  zoomOnCursorBy(value: number) {\n    const beforeZoomCursorPosition = this.getLastCursorSceneCoordinates();\n    this.setZoomFactor(this.getZoomFactor() + value);\n    const afterZoomCursorPosition = this.getLastCursorSceneCoordinates();\n    // Compensate for the cursor change in position\n    this.viewPosition.scrollBy(\n      beforeZoomCursorPosition[0] - afterZoomCursorPosition[0],\n      beforeZoomCursorPosition[1] - afterZoomCursorPosition[1]\n    );\n    if (this.props.onViewPositionChanged) {\n      this.props.onViewPositionChanged(this.viewPosition);\n    }\n  }\n\n  getZoomFactor = () => {\n    return this.props.instancesEditorSettings.zoomFactor;\n  };\n\n  setZoomFactor = (zoomFactor: number) => {\n    this.props.onChangeInstancesEditorSettings({\n      ...this.props.instancesEditorSettings,\n      zoomFactor: Math.max(Math.min(zoomFactor, 10), 0.01),\n    });\n  };\n\n  /**\n   * Immediately add instances for the specified objects at the given\n   * position (in scene coordinates).\n   */\n  addInstances = (\n    pos /*: [number, number] */,\n    objectNames /*: Array<string> */\n  ): Array<gdInitialInstance> => {\n    return this._instancesAdder.addInstances(pos, objectNames);\n  };\n\n  _onMouseMove = (x: number, y: number) => {\n    this.lastCursorX = x;\n    this.lastCursorY = y;\n  };\n\n  _onBackgroundClicked = (x: number, y: number) => {\n    this.lastCursorX = x;\n    this.lastCursorY = y;\n    this.pixiRenderer.view.focus();\n\n    // Selection rectangle is only drawn in _onPanMove,\n    // which can happen a few milliseconds after a background\n    // click/touch - enough to have the selection rectangle being\n    // offset from the first click - which looks laggy. Set\n    // the start position now.\n    if (!this.keyboardShortcuts.shouldMoveView()) {\n      this.selectionRectangle.startSelectionRectangle(x, y);\n    }\n\n    if (\n      !this.keyboardShortcuts.shouldMultiSelect() &&\n      !this.keyboardShortcuts.shouldMoveView()\n    ) {\n      this.props.instancesSelection.clearSelection();\n      this.props.onInstancesSelected([]);\n    }\n  };\n\n  _onPanMove = (deltaX: number, deltaY: number, x: number, y: number) => {\n    if (this.keyboardShortcuts.shouldMoveView()) {\n      const sceneDeltaX = deltaX / this.getZoomFactor();\n      const sceneDeltaY = deltaY / this.getZoomFactor();\n\n      this.viewPosition.scrollBy(-sceneDeltaX, -sceneDeltaY);\n\n      if (this.props.onViewPositionChanged) {\n        this.props.onViewPositionChanged(this.viewPosition);\n      }\n    } else {\n      this.selectionRectangle.updateSelectionRectangle(x, y);\n    }\n  };\n\n  _getLayersVisibility = () => {\n    const { layout } = this.props;\n    const layersVisibility = {};\n    for (let i = 0; i < layout.getLayersCount(); i++) {\n      layersVisibility[layout.getLayerAt(i).getName()] = layout\n        .getLayerAt(i)\n        .getVisibility();\n    }\n    return layersVisibility;\n  };\n\n  _onPanEnd = () => {\n    // When a pan is ended, this can be that either the user was making\n    // a selection, or that the user was moving the view.\n    if (this.selectionRectangle.hasStartedSelectionRectangle()) {\n      let instancesSelected = this.selectionRectangle.endSelectionRectangle();\n\n      this.props.instancesSelection.selectInstances(\n        instancesSelected,\n        this.keyboardShortcuts.shouldMultiSelect(),\n        this._getLayersVisibility()\n      );\n      instancesSelected = this.props.instancesSelection.getSelectedInstances();\n      this.props.onInstancesSelected(instancesSelected);\n    }\n  };\n\n  _onInstanceClicked = (instance: gdInitialInstance) => {\n    this.pixiRenderer.view.focus();\n  };\n\n  _onInstanceRightClicked = (coordinates: {|\n    offsetX: number,\n    offsetY: number,\n    x: number,\n    y: number,\n  |}) => {\n    this._onRightClicked({\n      ...coordinates,\n      ignoreSelectedObjectNamesForContextMenu: false,\n    });\n  };\n\n  _onRightClicked = ({\n    offsetX,\n    offsetY,\n    x,\n    y,\n    ignoreSelectedObjectNamesForContextMenu,\n  }: {|\n    offsetX: number,\n    offsetY: number,\n    x: number,\n    y: number,\n    ignoreSelectedObjectNamesForContextMenu?: boolean,\n  |}) => {\n    this.lastContextMenuX = offsetX;\n    this.lastContextMenuY = offsetY;\n    if (this.props.onContextMenu) {\n      this.props.onContextMenu(x, y, !!ignoreSelectedObjectNamesForContextMenu);\n    }\n  };\n\n  _onInstanceDoubleClicked = (instance: gdInitialInstance) => {\n    this.props.onInstanceDoubleClicked(instance);\n  };\n\n  _onOverInstance = (instance: gdInitialInstance) => {\n    this.highlightedInstance.setInstance(instance);\n  };\n\n  _onDownInstance = (\n    instance: gdInitialInstance,\n    sceneX: number,\n    sceneY: number\n  ) => {\n    if (this.keyboardShortcuts.shouldMoveView()) {\n      // If the user wants to move the view, discard the click on an instance:\n      // it's just the beginning of the user panning the view.\n      return;\n    }\n\n    if (this.keyboardShortcuts.shouldCloneInstances()) {\n      const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n      for (var i = 0; i < selectedInstances.length; i++) {\n        const instance = selectedInstances[i];\n        this.props.initialInstances\n          .insertInitialInstance(instance)\n          .resetPersistentUuid();\n      }\n    } else {\n      this.props.instancesSelection.selectInstance(\n        instance,\n        this.keyboardShortcuts.shouldMultiSelect(),\n        this._getLayersVisibility()\n      );\n\n      if (this.props.onInstancesSelected) {\n        this.props.onInstancesSelected(\n          this.props.instancesSelection.getSelectedInstances()\n        );\n      }\n    }\n\n    this.instancesMover.startMove(sceneX, sceneY);\n  };\n\n  _onOutInstance = (instance: gdInitialInstance) => {\n    if (instance === this.highlightedInstance.getInstance())\n      this.highlightedInstance.setInstance(null);\n  };\n\n  _onMoveInstance = (\n    instance: gdInitialInstance,\n    deltaX: number,\n    deltaY: number\n  ) => {\n    const sceneDeltaX = deltaX / this.getZoomFactor();\n    const sceneDeltaY = deltaY / this.getZoomFactor();\n\n    // It is possible for the user to start moving an instance, then press the button\n    // to move the view, move it, then unpress it and continue to move the instance.\n    // This means that while we're in \"_onMoveInstance\", we must handle view moving.\n    if (this.keyboardShortcuts.shouldMoveView()) {\n      this.viewPosition.scrollBy(-sceneDeltaX, -sceneDeltaY);\n\n      if (this.props.onViewPositionChanged) {\n        this.props.onViewPositionChanged(this.viewPosition);\n      }\n      return;\n    }\n\n    if (!this.props.instancesSelection.isInstanceSelected(instance)) {\n      this._onInstanceClicked(instance);\n    }\n\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    this.instancesMover.moveBy(\n      selectedInstances,\n      sceneDeltaX,\n      sceneDeltaY,\n      this.keyboardShortcuts.shouldFollowAxis(),\n      this.keyboardShortcuts.shouldNotSnapToGrid()\n    );\n  };\n\n  _onMoveInstanceEnd = () => {\n    this.instancesMover.endMove();\n\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    this.props.onInstancesMoved(selectedInstances);\n  };\n\n  _onResize = (\n    deltaX: number,\n    deltaY: number,\n    grabbingLocation: ResizeGrabbingLocation\n  ) => {\n    const sceneDeltaX = deltaX / this.getZoomFactor();\n    const sceneDeltaY = deltaY / this.getZoomFactor();\n\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    const forceProportional =\n      this.props.screenType === 'touch' &&\n      canMoveOnX(grabbingLocation) &&\n      canMoveOnY(grabbingLocation);\n    const proportional =\n      forceProportional || this.keyboardShortcuts.shouldResizeProportionally();\n    this.instancesResizer.resizeBy(\n      selectedInstances,\n      sceneDeltaX,\n      sceneDeltaY,\n      grabbingLocation,\n      proportional\n    );\n  };\n\n  _onResizeEnd = () => {\n    this.instancesResizer.endResize();\n\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    this.props.onInstancesResized(selectedInstances);\n  };\n\n  _onRotate = (deltaX: number, deltaY: number) => {\n    const sceneDeltaX = deltaX / this.getZoomFactor();\n    const sceneDeltaY = deltaY / this.getZoomFactor();\n\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    this.instancesRotator.rotateBy(\n      selectedInstances,\n      sceneDeltaX,\n      sceneDeltaY,\n      this.keyboardShortcuts.shouldResizeProportionally()\n    );\n  };\n\n  _onRotateEnd = () => {\n    this.instancesRotator.endRotate();\n\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    this.props.onInstancesRotated(selectedInstances);\n  };\n\n  clearHighlightedInstance = () => {\n    this.highlightedInstance.setInstance(null);\n  };\n\n  moveSelection = (x: number, y: number) => {\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    const unlockedSelectedInstances = selectedInstances.filter(\n      instance => !instance.isLocked()\n    );\n    unlockedSelectedInstances.forEach(instance => {\n      instance.setX(instance.getX() + x);\n      instance.setY(instance.getY() + y);\n    });\n    this.props.onInstancesMoved(unlockedSelectedInstances);\n  };\n\n  scrollTo(x: number, y: number) {\n    this.viewPosition.scrollTo(x, y);\n  }\n\n  centerView() {\n    const x = this.props.project.getGameResolutionWidth() / 2;\n    const y = this.props.project.getGameResolutionHeight() / 2;\n    this.viewPosition.scrollTo(x, y);\n  }\n\n  centerViewOn(instances: Array<gdInitialInstance>) {\n    if (!instances.length) return;\n\n    this.viewPosition.scrollToInstance(instances[instances.length - 1]);\n    if (this.props.onViewPositionChanged) {\n      this.props.onViewPositionChanged(this.viewPosition);\n    }\n  }\n\n  getLastContextMenuSceneCoordinates = () => {\n    return this.viewPosition.toSceneCoordinates(\n      this.lastContextMenuX,\n      this.lastContextMenuY\n    );\n  };\n\n  getLastCursorSceneCoordinates = () => {\n    return this.viewPosition.toSceneCoordinates(\n      this.lastCursorX,\n      this.lastCursorY\n    );\n  };\n\n  getViewPosition = () /*: ?ViewPosition */ => {\n    return this.viewPosition;\n  };\n\n  _renderScene = () => {\n    // Protect against rendering scheduled after the component is unmounted.\n    if (this._unmounted) return;\n    if (this._renderingPaused) return;\n\n    // Avoid killing the CPU by limiting the rendering calls.\n    if (this.fpsLimiter.shouldUpdate()) {\n      this.backgroundColor.render();\n      this.viewPosition.render();\n      this.canvasCursor.render();\n      this.grid.render();\n      this.instancesRenderer.render();\n      this.highlightedInstance.render();\n      this.selectedInstances.render();\n      this.selectionRectangle.render();\n      this.windowBorder.render();\n      this.windowMask.render();\n      this.statusBar.render();\n      this.pixiRenderer.render(this.pixiContainer);\n    }\n    this.nextFrame = requestAnimationFrame(this._renderScene);\n  };\n\n  pauseSceneRendering = () => {\n    if (this.nextFrame) cancelAnimationFrame(this.nextFrame);\n    this._renderingPaused = true;\n\n    stopPIXITicker();\n  };\n\n  restartSceneRendering = () => {\n    this._renderingPaused = false;\n    this._renderScene();\n\n    startPIXITicker();\n  };\n\n  render() {\n    if (!this.props.project) return null;\n\n    return (\n      <DropTarget\n        canDrop={() => true}\n        hover={monitor => {\n          const { _instancesAdder, viewPosition, canvasArea } = this;\n          if (!_instancesAdder || !canvasArea || !viewPosition) return;\n\n          const { x, y } = monitor.getClientOffset();\n          const canvasRect = canvasArea.getBoundingClientRect();\n          const pos = viewPosition.toSceneCoordinates(\n            x - canvasRect.left,\n            y - canvasRect.top\n          );\n          _instancesAdder.createOrUpdateTemporaryInstancesFromObjectNames(\n            pos,\n            this.props.selectedObjectNames\n          );\n        }}\n        drop={monitor => {\n          const { _instancesAdder, viewPosition, canvasArea } = this;\n          if (!_instancesAdder || !canvasArea || !viewPosition) return;\n\n          if (monitor.didDrop()) {\n            // Drop was done somewhere else (in a child of the canvas:\n            // should not happen, but still handling this case).\n            _instancesAdder.deleteTemporaryInstances();\n            return;\n          }\n\n          const { x, y } = monitor.getClientOffset();\n          const canvasRect = canvasArea.getBoundingClientRect();\n          const pos = viewPosition.toSceneCoordinates(\n            x - canvasRect.left,\n            y - canvasRect.top\n          );\n          const instances = _instancesAdder.updateTemporaryInstancePositions(\n            pos\n          );\n          _instancesAdder.commitTemporaryInstances();\n          this.props.onInstancesAdded(instances);\n        }}\n      >\n        {({ connectDropTarget, isOver }) => {\n          // The children are re-rendered when isOver change:\n          // take this opportunity to delete any temporary instances\n          // if the dragging is not done anymore over the canvas.\n          if (this._instancesAdder && !isOver) {\n            this._instancesAdder.deleteTemporaryInstances();\n          }\n\n          return connectDropTarget(\n            <div\n              ref={canvasArea => (this.canvasArea = canvasArea)}\n              style={styles.canvasArea}\n            />\n          );\n        }}\n      </DropTarget>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { ToolbarGroup } from '../UI/Toolbar';\nimport ToolbarIcon from '../UI/ToolbarIcon';\nimport ToolbarSeparator from '../UI/ToolbarSeparator';\n\ntype Props = {|\n  onPlay: () => void,\n  canPlay: boolean,\n  onPause: () => void,\n  canPause: boolean,\n  onOpenProfiler: () => void,\n  canOpenProfiler: boolean,\n  onOpenConsole: () => void,\n  canOpenConsole: boolean,\n|};\n\nexport class Toolbar extends React.PureComponent<Props> {\n  render() {\n    const {\n      onPlay,\n      onPause,\n      canPlay,\n      canPause,\n      onOpenProfiler,\n      canOpenProfiler,\n      onOpenConsole,\n      canOpenConsole,\n    } = this.props;\n\n    return (\n      <ToolbarGroup lastChild>\n        <ToolbarIcon\n          onClick={onPlay}\n          src=\"res/ribbon_default/preview64.png\"\n          disabled={!canPlay}\n          tooltip={t`Play the game`}\n        />\n        <ToolbarIcon\n          onClick={onPause}\n          src=\"res/ribbon_default/pause64.png\"\n          disabled={!canPause}\n          tooltip={t`Pause the game`}\n        />\n        <ToolbarSeparator />\n        <ToolbarIcon\n          onClick={onOpenProfiler}\n          src=\"res/ribbon_default/profiler32.png\"\n          disabled={!canOpenProfiler}\n          tooltip={t`Open the performance profiler`}\n        />\n        <ToolbarIcon\n          onClick={onOpenConsole}\n          src=\"res/ribbon_default/source_cpp32.png\"\n          disabled={!canOpenConsole}\n          tooltip={t`Open the console`}\n        />\n      </ToolbarGroup>\n    );\n  }\n}\n\nexport default Toolbar;\n","// @flow\nimport * as React from 'react';\nimport { List, ListItem } from '../UI/List';\nimport get from 'lodash/get';\nimport {\n  type InspectorDescription,\n  type InspectorDescriptionsGetter,\n  type GameData,\n} from './GDJSInspectorDescriptions';\n\ntype Props = {|\n  gameData: GameData,\n  getInspectorDescriptions: InspectorDescriptionsGetter,\n  onChooseInspector: (\n    InspectorDescription,\n    fullInspectorPath: Array<string>\n  ) => void,\n|};\n\nconst styles = {\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  list: {\n    overflowY: 'scroll',\n    flex: 1,\n  },\n};\n\n/**\n * Generate a visual list of inspectors, using gameData and getInspectorDescriptions\n */\nexport default class InspectorsList extends React.Component<Props, void> {\n  _renderInspectorList(\n    gameData: GameData,\n    getInspectorDescriptions: InspectorDescriptionsGetter,\n    path: Array<string>\n  ): Array<React$Element<any> | null> {\n    return getInspectorDescriptions(gameData).map(inspectorDescription => {\n      if (!inspectorDescription) return null;\n      const fullInspectorPath = path.concat(inspectorDescription.key);\n\n      const getSubInspectors = inspectorDescription.getSubInspectors;\n\n      return (\n        <ListItem\n          key={fullInspectorPath.join('.')}\n          primaryText={inspectorDescription.label}\n          initiallyOpen={!!inspectorDescription.initiallyOpen}\n          onClick={() =>\n            this.props.onChooseInspector(\n              inspectorDescription,\n              fullInspectorPath\n            )\n          }\n          renderNestedItems={\n            getSubInspectors\n              ? () =>\n                  this._renderInspectorList(\n                    get(gameData, inspectorDescription.key, null),\n                    getSubInspectors,\n                    fullInspectorPath\n                  )\n              : undefined\n          }\n        />\n      );\n    });\n  }\n\n  render() {\n    return this.props.gameData ? (\n      <List style={styles.list}>\n        {this._renderInspectorList(\n          this.props.gameData,\n          this.props.getInspectorDescriptions,\n          []\n        )}\n      </List>\n    ) : null;\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ReactJsonView from 'react-json-view';\nimport {\n  type EditFunction,\n  type CallFunction,\n} from '../GDJSInspectorDescriptions';\nimport mapValues from 'lodash/mapValues';\n\n// This mirrors the internals of gdjs.Variable.\ntype Variable = {|\n  _type: 'string' | 'number' | 'boolean' | 'structure' | 'array',\n  _str: string,\n  _value: number,\n  _bool: boolean,\n  _children: { [string]: Variable },\n  _childrenArray: Array<Variable>,\n|};\n\n// This mirrors the internals of gdjs.VariablesContainer.\ntype VariablesContainer = {|\n  _variables: { items: { [string]: Variable } },\n|};\n\nconst transformVariable = (variable: Variable) => {\n  if (!variable) return null;\n\n  const transformedVariable: any = {\n    type: variable._type,\n    value: null,\n  };\n\n  if (variable._type === 'string') transformedVariable.value = variable._str;\n  else if (variable._type === 'number')\n    transformedVariable.value = variable._value;\n  else if (variable._type === 'boolean')\n    transformedVariable.value = variable._bool;\n  else if (variable._type === 'structure')\n    transformedVariable.value = mapValues(\n      variable._children,\n      transformVariable\n    );\n  else if (variable._type === 'array')\n    transformedVariable.value = variable._childrenArray.map(transformVariable);\n\n  return transformedVariable;\n};\n\nconst transform = (variablesContainer: VariablesContainer) => {\n  if (\n    !variablesContainer ||\n    !variablesContainer._variables ||\n    !variablesContainer._variables.items\n  )\n    return null;\n\n  return mapValues(variablesContainer._variables.items, transformVariable);\n};\n\n/**\n * Returns the list of properties to access the variable at the specified path in the specified variables container.\n * Also returns the variable already living there.\n */\nconst constructPathToVariable = (\n  editPath: Array<string>,\n  variablesContainer: VariablesContainer\n): {| path: ?Array<string>, variable: ?Variable |} => {\n  const variableInContainerName = editPath.shift();\n  const path = ['_variables', 'items', variableInContainerName];\n  let variable = variablesContainer._variables.items[variableInContainerName];\n  let skip = false;\n\n  for (const variableName of editPath) {\n    // Skip every second key as it is the \"value\"\n    // key which is displayed only for better user\n    // experience but doesn't really exists\n    skip = !skip;\n    if (skip) continue;\n\n    // Walk down in the children of the collection.\n    if (variable._type === 'structure') {\n      path.push('_children', variableName);\n      variable = variable._children[variableName];\n    } else if (variable._type === 'array') {\n      path.push('_childrenArray', variableName);\n      variable = variable._childrenArray[parseInt(variableName, 10)];\n    }\n    // Bad path: abort.\n    else return { path: null, variable: null };\n  }\n\n  return { path, variable };\n};\n\nconst handleEdit = (edit, { onCall, onEdit, variablesContainer }: Props) => {\n  if (!variablesContainer) return;\n\n  // Reconstruct the variable to edit from the path\n  const { path, variable } = constructPathToVariable(\n    edit.namespace,\n    variablesContainer\n  );\n  if (!path) {\n    console.error('Invalid path passed to the debugger: ', edit);\n    return false;\n  }\n  if (!variable) {\n    console.error(\"Variable doesn't exist: \", edit);\n    return false;\n  }\n\n  if (edit.name === 'type') {\n    path.push('castTo');\n    if (\n      edit.new_value === 'string' ||\n      edit.new_value === 'number' ||\n      edit.new_value === 'boolean' ||\n      edit.new_value === 'structure' ||\n      edit.new_value === 'array'\n    ) {\n      if (edit.new_value !== variable._type) onCall(path, [edit.new_value]);\n    } else {\n      console.error('Invalid type name: ' + edit.new_value);\n      return false;\n    }\n  } else if (edit.name === 'value') {\n    // Validate data type\n    if (variable._type === 'string' && typeof edit.new_value !== 'string')\n      edit.new_value = '' + edit.new_value;\n    else if (\n      variable._type === 'number' &&\n      typeof edit.new_value !== 'number'\n    ) {\n      edit.new_value = parseFloat(edit.new_value);\n      if (isNaN(edit.new_value)) {\n        console.error(`Cannot set variable of type number to NaN!`);\n        return false;\n      }\n    } else if (\n      variable._type === 'boolean' &&\n      typeof edit.new_value !== 'boolean'\n    )\n      edit.new_value =\n        typeof edit.new_value === 'string'\n          ? edit.new_value.toLowerCase() !== 'false' && edit.new_value !== '0'\n          : !!edit.new_value;\n    else if (variable._type === 'structure' || variable._type === 'array') {\n      console.error('Cannot set the value of a collection.');\n      return false;\n    }\n\n    path.push('setValue');\n    onCall(path, [edit.new_value]);\n  }\n\n  return true;\n};\n\ntype Props = {|\n  variablesContainer: ?VariablesContainer,\n  onCall: CallFunction,\n  onEdit: EditFunction,\n|};\n\nexport default (props: Props) => (\n  <ReactJsonView\n    collapsed={false}\n    name={false}\n    src={props.variablesContainer ? transform(props.variablesContainer) : null}\n    enableClipboard={false}\n    displayDataTypes={false}\n    displayObjectSize={false}\n    onEdit={edit => handleEdit(edit, props)}\n    groupArraysAfterLength={50}\n    theme=\"monokai\"\n    validationMessage=\"Invalid value\"\n  />\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport ReactJsonView from 'react-json-view';\nimport {\n  type GameData,\n  type EditFunction,\n  type CallFunction,\n} from '../GDJSInspectorDescriptions';\nimport VariablesContainerInspector from './VariablesContainerInspector';\nimport Text from '../../UI/Text';\n\ntype Props = {|\n  runtimeObject: GameData,\n  onCall: CallFunction,\n  onEdit: EditFunction,\n|};\n\nconst transform = runtimeObject => {\n  if (!runtimeObject) return null;\n  return {\n    'X position': runtimeObject.x,\n    'Y position': runtimeObject.y,\n    Angle: runtimeObject.angle,\n    Layer: runtimeObject.layer,\n    'Z order': runtimeObject.zOrder,\n    'Is hidden?': runtimeObject.hidden,\n  };\n};\n\nconst handleEdit = (edit, { onCall, onEdit }: Props) => {\n  if (edit.name === 'X position') {\n    onCall(['setX'], [parseFloat(edit.new_value)]);\n  } else if (edit.name === 'Y position') {\n    onCall(['setY'], [parseFloat(edit.new_value)]);\n  } else if (edit.name === 'Angle') {\n    onCall(['setAngle'], [parseFloat(edit.new_value)]);\n  } else if (edit.name === 'Layer') {\n    onCall(['setLayer'], [edit.new_value]);\n  } else if (edit.name === 'Z order') {\n    onCall(['setZOrder'], [parseFloat(edit.new_value)]);\n  } else if (edit.name === 'Is hidden?') {\n    onCall(['hide'], [!!edit.new_value]);\n  } else return false;\n\n  return true;\n};\n\nexport default (props: Props) => (\n  <React.Fragment>\n    <Text>\n      <Trans>General:</Trans>\n    </Text>\n    <ReactJsonView\n      collapsed={false}\n      name={false}\n      src={transform(props.runtimeObject)}\n      enableClipboard={false}\n      displayDataTypes={false}\n      displayObjectSize={false}\n      onEdit={edit => handleEdit(edit, props)}\n      groupArraysAfterLength={50}\n      theme=\"monokai\"\n    />\n    <Text>\n      <Trans>Instance variables:</Trans>\n    </Text>\n    <VariablesContainerInspector\n      variablesContainer={\n        props.runtimeObject ? props.runtimeObject._variables : null\n      }\n      // TODO: onEdit and onCall could benefit from a \"forward\" utility function\n      // (can also be applied in DebuggerContent.js)\n      onEdit={(path, newValue) =>\n        props.onEdit(['_variables'].concat(path), newValue)\n      }\n      onCall={(path, args) => props.onCall(['_variables'].concat(path), args)}\n    />\n  </React.Fragment>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport ReactJsonView from 'react-json-view';\nimport {\n  type GameData,\n  type EditFunction,\n  type CallFunction,\n} from '../GDJSInspectorDescriptions';\nimport { TextFieldWithButtonLayout } from '../../UI/Layout';\nimport mapValues from 'lodash/mapValues';\nimport RaisedButton from '../../UI/RaisedButton';\nimport SemiControlledAutoComplete from '../../UI/SemiControlledAutoComplete';\nimport Text from '../../UI/Text';\n\ntype Props = {|\n  runtimeScene: GameData,\n  onCall: CallFunction,\n  onEdit: EditFunction,\n|};\n\ntype State = {|\n  newObjectName: string,\n|};\n\nconst transformLayer = layer => {\n  if (!layer) return null;\n  return {\n    'Camera rotation (in deg)': layer._cameraRotation,\n    'Camera zoom': layer._zoomFactor,\n    'Layer is hidden': !!layer._hidden,\n    'Camera X position': layer._cameraX,\n    'Camera Y position': layer._cameraY,\n    'Time scale': layer._timeScale,\n  };\n};\n\nconst transform = runtimeScene => {\n  if (!runtimeScene) return null;\n\n  return {\n    'Time scale': runtimeScene._timeManager\n      ? runtimeScene._timeManager._timeScale\n      : null,\n    Layers:\n      runtimeScene._layers && runtimeScene._layers.items\n        ? mapValues(runtimeScene._layers.items, transformLayer)\n        : null,\n  };\n};\n\nconst handleEdit = (edit, { onCall, onEdit }: Props) => {\n  if (edit.namespace.length === 0 && edit.name === 'Time scale') {\n    onCall(['_timeManager', 'setTimeScale'], [parseFloat(edit.new_value)]);\n  } else if (edit.namespace.length >= 2) {\n    if (edit.namespace[0] === 'Layers') {\n      if (edit.name === 'Camera rotation (in deg)') {\n        onCall(\n          ['_layers', 'items', edit.namespace[1], 'setCameraRotation'],\n          [parseFloat(edit.new_value)]\n        );\n      } else if (edit.name === 'Camera zoom') {\n        onCall(\n          ['_layers', 'items', edit.namespace[1], 'setCameraZoom'],\n          [parseFloat(edit.new_value)]\n        );\n      } else if (edit.name === 'Layer is hidden') {\n        onCall(\n          ['_layers', 'items', edit.namespace[1], 'show'],\n          [!edit.new_value]\n        );\n      } else if (edit.name === 'Camera X position') {\n        onCall(\n          ['_layers', 'items', edit.namespace[1], 'setCameraX'],\n          [parseFloat(edit.new_value)]\n        );\n      } else if (edit.name === 'Camera Y position') {\n        onCall(\n          ['_layers', 'items', edit.namespace[1], 'setCameraY'],\n          [parseFloat(edit.new_value)]\n        );\n      } else if (edit.name === 'Time scale') {\n        onCall(\n          ['_layers', 'items', edit.namespace[1], 'setTimeScale'],\n          [parseFloat(edit.new_value)]\n        );\n      }\n    }\n  } else return false;\n\n  return true;\n};\n\nexport default class RuntimeSceneInspector extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    newObjectName: '',\n  };\n\n  render() {\n    const { runtimeScene, onCall } = this.props;\n    if (!runtimeScene) return null;\n\n    return (\n      <React.Fragment>\n        <Text>\n          <Trans>Layers:</Trans>\n        </Text>\n        <ReactJsonView\n          collapsed={false}\n          name={false}\n          src={transform(runtimeScene)}\n          enableClipboard={false}\n          displayDataTypes={false}\n          displayObjectSize={false}\n          onEdit={edit => handleEdit(edit, this.props)}\n          groupArraysAfterLength={50}\n          theme=\"monokai\"\n        />\n        <Text>\n          <Trans>\n            Create a new instance on the scene (will be at position 0;0):\n          </Trans>\n        </Text>\n        {runtimeScene._objects && runtimeScene._objects.items && (\n          <TextFieldWithButtonLayout\n            noFloatingLabelText\n            renderTextField={() => (\n              <SemiControlledAutoComplete\n                hintText={t`Enter the name of the object`}\n                value={this.state.newObjectName}\n                onChange={value => {\n                  this.setState({\n                    newObjectName: value,\n                  });\n                }}\n                dataSource={Object.keys(runtimeScene._objects.items).map(\n                  objectName => ({\n                    text: objectName,\n                    value: objectName,\n                  })\n                )}\n                openOnFocus\n                fullWidth\n              />\n            )}\n            renderButton={style => (\n              <RaisedButton\n                style={style}\n                label={<Trans>Create</Trans>}\n                primary\n                onClick={() => {\n                  onCall(['createObject'], [this.state.newObjectName]);\n                }}\n              />\n            )}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport RuntimeObjectInspector from './Inspectors/RuntimeObjectInspector';\nimport VariablesContainerInspector from './Inspectors/VariablesContainerInspector';\nimport RuntimeSceneInspector from './Inspectors/RuntimeSceneInspector';\n\nexport type GameData = any;\nexport type EditFunction = (path: Array<string>, newValue: any) => boolean;\nexport type CallFunction = (path: Array<string>, args: Array<any>) => boolean;\n\nexport type InspectorDescriptionsGetter = (\n  gameData: GameData\n) => Array<InspectorDescription>; //eslint-disable-line\n\nexport type InspectorDescription = {|\n  label: string,\n  key: string | Array<string>,\n  renderInspector: (\n    gameData: GameData,\n    {\n      onCall: CallFunction,\n      onEdit: EditFunction,\n    }\n  ) => React.Node,\n  getSubInspectors?: InspectorDescriptionsGetter,\n  initiallyOpen?: boolean,\n|};\n\n/**\n * Returns the list of inspectors, given the data coming from a GDJS RuntimeGame.\n * @param {*} gdjsRuntimeGame\n */\nexport const getInspectorDescriptions = (\n  gdjsRuntimeGame: GameData\n): Array<InspectorDescription> => {\n  return [\n    {\n      label: 'Global variables',\n      key: '_variables',\n      renderInspector: (gameData, { onCall, onEdit }) => (\n        <VariablesContainerInspector\n          variablesContainer={gameData}\n          onCall={onCall}\n          onEdit={onEdit}\n        />\n      ),\n    },\n    {\n      label: 'Scenes',\n      key: ['_sceneStack', '_stack'],\n      renderInspector: () => null,\n      initiallyOpen: true,\n      getSubInspectors: gdjsStack => {\n        if (!gdjsStack) return [];\n\n        return gdjsStack.map((runtimeScene, index) => ({\n          label: runtimeScene._name,\n          key: index,\n          renderInspector: (gameData, { onCall, onEdit }) => (\n            <RuntimeSceneInspector\n              runtimeScene={gameData}\n              onCall={onCall}\n              onEdit={onEdit}\n            />\n          ),\n          initiallyOpen: true,\n          getSubInspectors: runtimeScene => [\n            {\n              label: 'Scene variables',\n              key: `_variables`,\n              renderInspector: (gameData, { onCall, onEdit }) => (\n                <VariablesContainerInspector\n                  variablesContainer={gameData}\n                  onCall={onCall}\n                  onEdit={onEdit}\n                />\n              ),\n            },\n            {\n              label: 'Instances',\n              key: `_instances`,\n              renderInspector: () => null,\n              initiallyOpen: true,\n              getSubInspectors: instances => {\n                if (!instances || !instances.items) return [];\n\n                return Object.keys(instances.items).map(objectName => {\n                  if (\n                    !instances.items[objectName] ||\n                    typeof instances.items[objectName].length === undefined\n                  )\n                    return null;\n\n                  return {\n                    label: `${objectName} (${\n                      instances.items[objectName].length\n                    })`,\n                    key: ['items', objectName],\n                    renderInspector: () => null,\n                    getSubInspectors: instancesList =>\n                      instancesList\n                        ? instancesList\n                            .filter(runtimeObject => !!runtimeObject)\n                            .map((runtimeObject, index) => {\n                              return {\n                                label: `#${runtimeObject.id}`,\n                                key: index,\n                                renderInspector: (\n                                  gameData,\n                                  { onCall, onEdit }\n                                ) => (\n                                  <RuntimeObjectInspector\n                                    runtimeObject={gameData}\n                                    onCall={onCall}\n                                    onEdit={onEdit}\n                                  />\n                                ),\n                              };\n                            })\n                        : [],\n                  };\n                });\n              },\n            },\n          ],\n        }));\n      },\n    },\n  ];\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport ReactJsonView from 'react-json-view';\nimport { type GameData } from '../GDJSInspectorDescriptions';\nimport EmptyMessage from '../../UI/EmptyMessage';\n\ntype Props = {|\n  gameData: GameData,\n  onEdit: (path: Array<string>, newValue: any) => boolean,\n|};\n\n/**\n * A very simple inspector that display the raw information given by the gameData\n * object.\n */\nexport default ({ gameData, onEdit }: Props) => (\n  <React.Fragment>\n    <EmptyMessage>\n      <Trans>\n        You are in raw mode. You can edit the fields, but be aware that this can\n        lead to unexpected results or even crash the debugged game!\n      </Trans>\n    </EmptyMessage>\n    <ReactJsonView\n      collapsed={1}\n      name={false}\n      src={gameData}\n      onEdit={edit => {\n        return onEdit(edit.namespace.concat(edit.name), edit.new_value);\n      }}\n      groupArraysAfterLength={50}\n      theme=\"monokai\"\n    />\n  </React.Fragment>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { AutoSizer, Table, Column } from 'react-virtualized';\nimport ThemeConsumer from '../../UI/Theme/ThemeConsumer';\nimport flatMap from 'lodash/flatMap';\nimport { type ProfilerMeasuresSection } from '..';\nimport IconButton from '../../UI/IconButton';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\n\nconst styles = {\n  indent: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n};\n\ntype Props = {|\n  profilerMeasures: ?ProfilerMeasuresSection,\n|};\n\ntype ProfilerRowData = {|\n  name: string,\n  time: string,\n  parentPercent: string,\n  totalPercent: string,\n  depth: number,\n  hasSubsections: boolean,\n  path: string,\n  isCollapsed: boolean,\n|};\n\ntype State = {|\n  collapsedPaths: { [string]: boolean },\n|};\n\nexport default class MeasuresTable extends React.Component<Props, State> {\n  state = {\n    collapsedPaths: {},\n  };\n\n  _convertToDataRows = (\n    name: string,\n    parentSection: ?ProfilerMeasuresSection,\n    section: ProfilerMeasuresSection,\n    depth: number = 0,\n    path: string = ''\n  ): Array<ProfilerRowData> => {\n    const { profilerMeasures } = this.props;\n\n    const parentPercent =\n      parentSection && section.time && parentSection.time !== 0\n        ? (section.time / parentSection.time) * 100\n        : 100;\n    const totalPercent =\n      profilerMeasures && section.time && profilerMeasures.time !== 0\n        ? (section.time / profilerMeasures.time) * 100\n        : 100;\n    const isCollapsed = this._isSectionCollapsed(path);\n\n    return [\n      {\n        name,\n        time: section.time ? `${section.time.toFixed(2)}ms` : '?',\n        parentPercent: `${parentPercent.toFixed(2)}%`,\n        totalPercent: `${totalPercent.toFixed(2)}%`,\n        depth,\n        hasSubsections: !!Object.keys(section.subsections).length,\n        path,\n        isCollapsed,\n      },\n      ...(isCollapsed\n        ? []\n        : flatMap(section.subsections, (subsection, subsectionName) =>\n            this._convertToDataRows(\n              subsectionName,\n              section,\n              subsection,\n              depth + 1,\n              `${path}>${depth}.${subsectionName}`\n            )\n          )),\n    ];\n  };\n\n  _isSectionCollapsed = (path: string) => {\n    return this.state.collapsedPaths[path];\n  };\n\n  _toggleSection = (path: string) => {\n    this.setState(state => ({\n      collapsedPaths: {\n        ...state.collapsedPaths,\n        [path]: !state.collapsedPaths[path],\n      },\n    }));\n  };\n\n  _rowClassName = ({ index }: { index: number }) => {\n    if (index < 0) {\n      return 'tableHeaderRow';\n    } else {\n      return index % 2 === 0 ? 'tableEvenRow' : 'tableOddRow';\n    }\n  };\n\n  _renderSectionNameCell = ({ rowData }: { rowData: ProfilerRowData }) => {\n    return (\n      <div style={styles.indent}>\n        <div style={{ width: rowData.depth * 8 }} />\n        {rowData.hasSubsections ? (\n          <IconButton onClick={() => this._toggleSection(rowData.path)}>\n            {rowData.isCollapsed ? <ChevronRight /> : <ExpandMore />}\n          </IconButton>\n        ) : (\n          <div style={{ width: 24 }} />\n        )}\n        {rowData.name}\n      </div>\n    );\n  };\n\n  render() {\n    const { profilerMeasures } = this.props;\n    if (!profilerMeasures) return null;\n\n    const dataRows = this._convertToDataRows('All', null, profilerMeasures);\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <AutoSizer>\n            {({ height, width }) => (\n              <Table\n                headerHeight={30}\n                height={height}\n                className={`gd-table ${muiTheme.tableRootClassName}`}\n                headerClassName={'tableHeaderColumn'}\n                rowCount={dataRows.length}\n                rowGetter={({ index }) => dataRows[index]}\n                rowHeight={35}\n                onRowClick={() => {}}\n                rowClassName={this._rowClassName}\n                width={width}\n              >\n                <Column\n                  label={<Trans>Section name</Trans>}\n                  dataKey=\"name\"\n                  width={width * 0.4}\n                  className={'tableColumn'}\n                  cellRenderer={this._renderSectionNameCell}\n                />\n                <Column\n                  label={<Trans>Time (ms)</Trans>}\n                  dataKey=\"time\"\n                  width={width * 0.2}\n                  className={'tableColumn'}\n                />\n                <Column\n                  label={<Trans>% of parent</Trans>}\n                  dataKey=\"parentPercent\"\n                  width={width * 0.2}\n                  className={'tableColumn'}\n                />\n                <Column\n                  label={<Trans>% of total</Trans>}\n                  dataKey=\"totalPercent\"\n                  width={width * 0.2}\n                  className={'tableColumn'}\n                />\n              </Table>\n            )}\n          </AutoSizer>\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport MeasuresTable from './MeasuresTable';\nimport { type ProfilerOutput } from '..';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport { Line } from '../../UI/Grid';\nimport Background from '../../UI/Background';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Text from '../../UI/Text';\n\nconst styles = {\n  tableContainer: {\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  onStart: () => void,\n  onStop: () => void,\n  profilerOutput: ?ProfilerOutput,\n  profilingInProgress: boolean,\n|};\n\nexport default class Profiler extends React.Component<Props, void> {\n  render() {\n    const { onStart, onStop, profilerOutput, profilingInProgress } = this.props;\n\n    return (\n      <Background>\n        <Line alignItems=\"center\" justifyContent=\"center\">\n          {!profilingInProgress && profilerOutput && (\n            <Text>\n              <Trans>\n                Last run collected on {profilerOutput.stats.framesCount} frames.\n              </Trans>\n            </Text>\n          )}\n          {!profilingInProgress && profilerOutput && (\n            <RaisedButton label={<Trans>Restart</Trans>} onClick={onStart} />\n          )}\n          {!profilingInProgress && !profilerOutput && (\n            <RaisedButton\n              label={<Trans>Start profiling</Trans>}\n              onClick={onStart}\n            />\n          )}\n          {profilingInProgress && (\n            <RaisedButton\n              label={<Trans>Stop profiling</Trans>}\n              onClick={onStop}\n            />\n          )}\n        </Line>\n        {profilingInProgress && (\n          <Line alignItems=\"center\">\n            <LinearProgress style={{ flex: 1 }} variant={'indeterminate'} />\n          </Line>\n        )}\n        <div style={styles.tableContainer}>\n          {profilerOutput && (\n            <MeasuresTable\n              profilerMeasures={profilerOutput.framesAverageMeasures}\n            />\n          )}\n          {!profilerOutput && (\n            <EmptyMessage>\n              <Trans>\n                Start profiling and then stop it after a few seconds to see the\n                results.\n              </Trans>\n            </EmptyMessage>\n          )}\n        </div>\n      </Background>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { Trans, t } from '@lingui/macro';\n\nimport {\n  List,\n  CellMeasurer,\n  CellMeasurerCache,\n  AutoSizer,\n} from 'react-virtualized';\nimport useForceUpdate from '../Utils/UseForceUpdate';\n\nimport Chip from '@material-ui/core/Chip';\n\nimport { Line, Column, Spacer } from '../UI/Grid';\nimport Dialog from '../UI/Dialog';\nimport MiniToolbar from '../UI/MiniToolbar';\nimport IconButton from '../UI/IconButton';\nimport FlatButton from '../UI/FlatButton';\nimport Checkbox from '../UI/Checkbox';\n\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport MinimizeIcon from '@material-ui/icons/PhotoSizeSelectSmall';\nimport ExpandIcon from '@material-ui/icons/AspectRatio';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport FilterIcon from '@material-ui/icons/FilterList';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport FolderIcon from '@material-ui/icons/Folder';\n\nexport type Log = {\n  message: string,\n  type: 'info' | 'warning' | 'error',\n  group: string,\n  internal?: boolean,\n  timestamp: number,\n};\n\n/**\n * Store logs and groups that are received, batch the logs and allow to register callbacks called when a batch of log is received.\n * This helps avoiding too much re-render on React side when a lot of logs are received.\n */\nexport class LogsManager {\n  logs: Array<Log> = [];\n  groups: Set<string> = new Set();\n  _onNewLog: Set<() => void> = new Set();\n  _onNewGroup: Set<() => void> = new Set();\n  _pendingLogs: Array<Log> = [];\n  _pendingCommit: boolean = false;\n\n  _commitLogs() {\n    this.logs.unshift(...this._pendingLogs);\n    this._pendingLogs.length = 0;\n    this._pendingCommit = false;\n    this._onNewLog.forEach(f => f());\n  }\n\n  addLog(log: Log) {\n    this._pendingLogs.unshift(log);\n    if (!this.groups.has(log.group)) {\n      this.groups.add(log.group);\n      this._onNewGroup.forEach(f => f());\n    }\n    if (!this._pendingCommit) {\n      setTimeout(this._commitLogs.bind(this), 200);\n      this._pendingCommit = true;\n    }\n  }\n\n  on(event: 'group' | 'log', handler: () => void) {\n    if (event === 'group') this._onNewGroup.add(handler);\n    if (event === 'log') this._onNewLog.add(handler);\n  }\n\n  off(event: 'group' | 'log', handler: () => void) {\n    if (event === 'group') this._onNewGroup.delete(handler);\n    if (event === 'log') this._onNewLog.delete(handler);\n  }\n}\n\nconst selectableTextStyle = {\n  userSelect: 'text',\n  cursor: 'text',\n  wordBreak: 'break-word',\n};\n\nconst styles = {\n  list: {\n    // While in theory it should not happen, be sure there is never a horizontal scrollbar:\n    overflowX: 'hidden',\n    // Always show the vertical scrollbar to avoid rendering issues:\n    overflowY: 'scroll',\n  },\n  tag: { marginRight: 2 },\n  consoleTextArea: {\n    ...selectableTextStyle,\n    width: '100%',\n    backgroundColor: '#292929',\n    borderRadius: '4px',\n    border: '1px solid slategray',\n    color: 'white',\n    fontFamily: \"'Courier New', monospace\",\n    fontSize: 11,\n    padding: 3,\n  },\n};\n\nconst Tag = ({ icon, label }: {| icon: React.Node, label: React.Node |}) => (\n  <Chip\n    icon={icon}\n    style={styles.tag}\n    size=\"small\"\n    label={<span style={selectableTextStyle}>{label}</span>}\n  />\n);\n\nconst iconMap = {\n  info: <InfoIcon color=\"primary\" fontSize=\"small\" />,\n  warning: <WarningIcon color=\"secondary\" fontSize=\"small\" />,\n  error: <ErrorIcon color=\"error\" fontSize=\"small\" />,\n};\n\nexport const DebuggerConsole = ({\n  logsManager,\n}: {\n  logsManager: LogsManager,\n}) => {\n  const forceUpdate = useForceUpdate();\n\n  const { logs, groups } = logsManager;\n  React.useEffect(\n    () => {\n      // Rerender when the logs are updated\n      const onUpdate = () => {\n        forceUpdate();\n      };\n      logsManager.on('log', onUpdate);\n      return () => {\n        logsManager.off('log', onUpdate);\n      };\n    },\n    [forceUpdate, logsManager]\n  );\n\n  const cachedHeightsForWidth = React.useRef(0);\n  const cellMeasurerCache = React.useMemo(\n    () =>\n      new CellMeasurerCache({\n        defaultHeight: 45,\n        minHeight: 25,\n        fixedWidth: true,\n        // Inverse index so that each log always\n        // get assigned the same ID despite all indices\n        // shifting when a log is added.\n        keyMapper: index => logs.length - index,\n      }),\n    [logs]\n  );\n\n  const [hideInternal, setHideInternal] = React.useState(false);\n  const [showDetails, _setShowDetails] = React.useState(true);\n  const setShowDetails = (show: boolean) => {\n    _setShowDetails(show);\n    // As the size of the cells have changed, clear the measurer cache to allow remeasuring them.\n    cellMeasurerCache.clearAll();\n  };\n\n  const [editingHiddenGroups, setEditingHiddenGroups] = React.useState(false);\n  const hiddenGroups = React.useRef(new Set()).current;\n  React.useEffect(\n    () => {\n      // Do not register for group updates to avoid rerendering when the groups are not displayed.\n      if (!editingHiddenGroups) return;\n\n      // Rerender when the groups are updated\n      const onUpdate = () => forceUpdate();\n      logsManager.on('group', onUpdate);\n      return () => {\n        logsManager.off('group', onUpdate);\n      };\n    },\n    [editingHiddenGroups, forceUpdate, logsManager]\n  );\n\n  const filteredLogs = logs\n    .filter(({ internal }) => !(hideInternal && internal))\n    .filter(({ group }) => !hiddenGroups.has(group));\n\n  return (\n    <Column noMargin noOverflowParent expand>\n      <Line noMargin expand>\n        <AutoSizer>\n          {({ width, height }) => {\n            if (!width || !height) return null;\n\n            // Reset the cached heights in case the width changed.\n            if (cachedHeightsForWidth.current !== width) {\n              cellMeasurerCache.clearAll();\n              cachedHeightsForWidth.current = width;\n            }\n\n            return (\n              <List\n                deferredMeasurementCache={cellMeasurerCache}\n                height={height}\n                width={width}\n                style={styles.list}\n                rowCount={filteredLogs.length}\n                rowHeight={cellMeasurerCache.rowHeight}\n                rowRenderer={({ index, key, parent, style }) => (\n                  <CellMeasurer\n                    cache={cellMeasurerCache}\n                    columnIndex={0}\n                    key={key}\n                    parent={parent}\n                    rowIndex={index}\n                  >\n                    {({ registerChild }) => (\n                      <div\n                        key={key}\n                        style={{\n                          ...style,\n                          padding: 2,\n                          display: 'flex',\n                          alignItems: 'flex-start',\n                        }}\n                        ref={registerChild}\n                      >\n                        <Column noMargin>\n                          {iconMap[filteredLogs[index].type] || iconMap['info']}\n                        </Column>\n                        <Spacer />\n                        <Column noMargin expand>\n                          <Line noMargin>\n                            <div style={styles.consoleTextArea}>\n                              {filteredLogs[index].message}\n                            </div>\n                          </Line>\n                          {showDetails && (\n                            <>\n                              <Spacer />\n                              <Line noMargin>\n                                {filteredLogs[index].group ? (\n                                  <Tag\n                                    icon={<FolderIcon />}\n                                    label={\n                                      <Trans>\n                                        Group: {filteredLogs[index].group}\n                                      </Trans>\n                                    }\n                                  />\n                                ) : null}\n                                <Tag\n                                  icon={<TimerIcon />}\n                                  label={\n                                    <Trans>\n                                      Timestamp:{' '}\n                                      {Math.round(\n                                        filteredLogs[index].timestamp * 1000\n                                      ) /\n                                        1000000 +\n                                        's'}\n                                    </Trans>\n                                  }\n                                />\n                              </Line>\n                            </>\n                          )}\n                        </Column>\n                      </div>\n                    )}\n                  </CellMeasurer>\n                )}\n              />\n            );\n          }}\n        </AutoSizer>\n      </Line>\n      <MiniToolbar>\n        <Line justifyContent=\"space-between\" alignItems=\"center\" noMargin>\n          <Checkbox\n            label={\n              showDetails ? (\n                <Trans>Hide details</Trans>\n              ) : (\n                <Trans>Show details</Trans>\n              )\n            }\n            checkedIcon={<MinimizeIcon />}\n            uncheckedIcon={<ExpandIcon />}\n            checked={showDetails}\n            onCheck={(_, enabled) => setShowDetails(enabled)}\n          />\n          <Checkbox\n            label={<Trans>Show internal</Trans>}\n            checkedIcon={<VisibilityIcon />}\n            uncheckedIcon={<VisibilityOffIcon />}\n            checked={!hideInternal}\n            onCheck={(_, value) => setHideInternal(!value)}\n          />\n          <IconButton\n            tooltip={t`Filter the logs by group`}\n            onClick={() => setEditingHiddenGroups(true)}\n            edge=\"start\"\n            size=\"small\"\n          >\n            <FilterIcon />\n          </IconButton>\n        </Line>\n      </MiniToolbar>\n\n      {editingHiddenGroups && (\n        <Dialog\n          open\n          title={<Trans>Select log groups to display</Trans>}\n          onRequestClose={() => setEditingHiddenGroups(false)}\n          actions={[\n            <FlatButton\n              key=\"close\"\n              label={<Trans>Close</Trans>}\n              primary={false}\n              onClick={() => setEditingHiddenGroups(false)}\n            />,\n          ]}\n          onApply={() => setEditingHiddenGroups(false)}\n        >\n          <Column>\n            {(() => {\n              const list = [];\n              for (const group of groups.values())\n                list.push(\n                  <Line key={group}>\n                    <Checkbox\n                      label={group}\n                      checked={!hiddenGroups.has(group)}\n                      onCheck={(_, checked) => {\n                        if (checked) hiddenGroups.delete(group);\n                        else hiddenGroups.add(group);\n                        // Since hiddenGroups is a ref, not a state, we need to manually update.\n                        forceUpdate();\n                      }}\n                    />\n                  </Line>\n                );\n              return list;\n            })()}\n          </Column>\n        </Dialog>\n      )}\n    </Column>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport EditorMosaic from '../UI/EditorMosaic';\nimport Background from '../UI/Background';\nimport get from 'lodash/get';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Column, Line } from '../UI/Grid';\nimport InspectorsList from './InspectorsList';\nimport {\n  getInspectorDescriptions,\n  type InspectorDescription,\n  type EditFunction,\n  type CallFunction,\n} from './GDJSInspectorDescriptions';\nimport RawContentInspector from './Inspectors/RawContentInspector';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport Checkbox from '../UI/Checkbox';\nimport Flash from '@material-ui/icons/FlashOn';\nimport FlashOff from '@material-ui/icons/FlashOff';\nimport HelpButton from '../UI/HelpButton';\nimport Profiler from './Profiler';\nimport { DebuggerConsole, type LogsManager } from './DebuggerConsole';\nimport { type ProfilerOutput } from '.';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport MiniToolbar from '../UI/MiniToolbar';\nimport ScrollView from '../UI/ScrollView';\n\ntype Props = {|\n  gameData: ?any,\n  onEdit: EditFunction,\n  onCall: CallFunction,\n  onPlay: () => void,\n  onPause: () => void,\n  onRefresh: () => void,\n  onStartProfiler: () => void,\n  onStopProfiler: () => void,\n  profilerOutput: ?ProfilerOutput,\n  profilingInProgress: boolean,\n  logsManager: LogsManager,\n|};\n\ntype State = {|\n  selectedInspector: ?InspectorDescription,\n  selectedInspectorFullPath: Array<string>,\n  rawMode: boolean,\n|};\n\nconst initialMosaicEditorNodes = {\n  direction: 'column',\n  first: {\n    direction: 'row',\n    first: 'inspectors',\n    second: 'selected-inspector',\n    splitPercentage: 25,\n  },\n  second: {\n    direction: 'row',\n    first: 'profiler',\n    second: 'console',\n    splitPercentage: 25,\n  },\n  splitPercentage: 65,\n};\n\n/**\n * The debugger interface: show the list of inspectors for a game, along with the\n * currently selected inspector.\n */\nexport default class DebuggerContent extends React.Component<Props, State> {\n  state = {\n    selectedInspector: null,\n    selectedInspectorFullPath: [],\n    rawMode: false,\n  };\n\n  _editors: ?EditorMosaic = null;\n\n  openProfiler = () => {\n    if (this._editors) this._editors.openEditor('profiler', 'end', 75, 'row');\n  };\n\n  openConsole = () => {\n    if (this._editors) this._editors.openEditor('console', 'start', 40, 'row');\n  };\n\n  render() {\n    const {\n      gameData,\n      onRefresh,\n      onCall,\n      onEdit,\n      onStartProfiler,\n      onStopProfiler,\n      profilerOutput,\n      profilingInProgress,\n      logsManager,\n    } = this.props;\n    const {\n      selectedInspector,\n      selectedInspectorFullPath,\n      rawMode,\n    } = this.state;\n\n    const editors = {\n      inspectors: {\n        type: 'primary',\n        title: t`Inspectors`,\n        toolbarControls: [],\n        renderEditor: () => (\n          <Background>\n            <Column expand noMargin useFullHeight>\n              <Line justifyContent=\"center\">\n                <RaisedButton\n                  label={<Trans>Refresh</Trans>}\n                  onClick={onRefresh}\n                  primary\n                />\n              </Line>\n              <InspectorsList\n                gameData={gameData}\n                getInspectorDescriptions={getInspectorDescriptions}\n                onChooseInspector={(\n                  selectedInspector,\n                  selectedInspectorFullPath\n                ) =>\n                  this.setState({\n                    selectedInspector,\n                    selectedInspectorFullPath,\n                  })\n                }\n              />\n            </Column>\n          </Background>\n        ),\n      },\n      'selected-inspector': {\n        type: 'primary',\n        noTitleBar: true,\n        renderEditor: () => (\n          <Background>\n            <ScrollView>\n              <Column>\n                {selectedInspector ? (\n                  rawMode ? (\n                    <RawContentInspector\n                      gameData={get(gameData, selectedInspectorFullPath, null)}\n                      onEdit={(path, newValue) =>\n                        onEdit(selectedInspectorFullPath.concat(path), newValue)\n                      }\n                    />\n                  ) : (\n                    selectedInspector.renderInspector(\n                      get(gameData, selectedInspectorFullPath, null),\n                      {\n                        onCall: (path, args) =>\n                          onCall(selectedInspectorFullPath.concat(path), args),\n                        onEdit: (path, newValue) =>\n                          onEdit(\n                            selectedInspectorFullPath.concat(path),\n                            newValue\n                          ),\n                      }\n                    ) || (\n                      <EmptyMessage>\n                        <Trans>\n                          No inspector, choose another element in the list or\n                          toggle the raw data view.\n                        </Trans>\n                      </EmptyMessage>\n                    )\n                  )\n                ) : (\n                  <EmptyMessage>\n                    {gameData ? (\n                      <Trans>Choose an element to inspect in the list</Trans>\n                    ) : (\n                      <Trans>\n                        Pause the game (from the toolbar) or hit refresh (on the\n                        left) to inspect the game\n                      </Trans>\n                    )}\n                  </EmptyMessage>\n                )}\n              </Column>\n            </ScrollView>\n            <MiniToolbar>\n              <Line justifyContent=\"space-between\" alignItems=\"center\" noMargin>\n                <HelpButton helpPagePath=\"/interface/debugger\" />\n                <div>\n                  <Checkbox\n                    checkedIcon={<Flash />}\n                    uncheckedIcon={<FlashOff />}\n                    checked={rawMode}\n                    onCheck={(e, enabled) =>\n                      this.setState({\n                        rawMode: enabled,\n                      })\n                    }\n                  />\n                </div>\n              </Line>\n            </MiniToolbar>\n          </Background>\n        ),\n      },\n      profiler: {\n        type: 'secondary',\n        title: t`Profiler`,\n        renderEditor: () => (\n          <Profiler\n            onStart={onStartProfiler}\n            onStop={onStopProfiler}\n            profilerOutput={profilerOutput}\n            profilingInProgress={profilingInProgress}\n          />\n        ),\n      },\n      console: {\n        type: 'secondary',\n        title: t`Console`,\n        renderEditor: () => (\n          <Background>\n            <DebuggerConsole logsManager={logsManager || []} />\n          </Background>\n        ),\n      },\n    };\n\n    return (\n      <PreferencesContext.Consumer>\n        {({ getDefaultEditorMosaicNode, setDefaultEditorMosaicNode }) => (\n          <EditorMosaic\n            ref={editors => (this._editors = editors)}\n            editors={editors}\n            initialNodes={\n              getDefaultEditorMosaicNode('debugger') || initialMosaicEditorNodes\n            }\n            onPersistNodes={node =>\n              setDefaultEditorMosaicNode('debugger', node)\n            }\n          />\n        )}\n      </PreferencesContext.Consumer>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport { type DebuggerId } from '../Export/PreviewLauncher.flow';\n\ntype Props = {|\n  selectedId: DebuggerId,\n  debuggerIds: Array<DebuggerId>,\n  onChooseDebugger: DebuggerId => void,\n|};\n\nexport default class DebuggerSelector extends React.Component<Props, void> {\n  render() {\n    const hasDebuggers = !!this.props.debuggerIds.length;\n    return (\n      <SelectField\n        fullWidth\n        value={hasDebuggers ? this.props.selectedId : 0}\n        onChange={(e, i, value) =>\n          this.props.onChooseDebugger(parseInt(value, 10) || 0)\n        }\n        disabled={!hasDebuggers}\n      >\n        {this.props.debuggerIds.map(id => (\n          <SelectOption\n            value={id}\n            key={id}\n            primaryText={t`Game preview #${id}`}\n          />\n        ))}\n        {!hasDebuggers && (\n          <SelectOption\n            value={0}\n            primaryText={t`No preview running. Run a preview and you will be able to inspect it with the debugger`}\n          />\n        )}\n      </SelectField>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Toolbar from './Toolbar';\nimport DebuggerContent from './DebuggerContent';\nimport DebuggerSelector from './DebuggerSelector';\nimport { Column } from '../UI/Grid';\nimport Text from '../UI/Text';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport PlaceholderMessage from '../UI/PlaceholderMessage';\nimport Background from '../UI/Background';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport {\n  type PreviewDebuggerServer,\n  type DebuggerId,\n} from '../Export/PreviewLauncher.flow';\nimport { type Log, LogsManager } from './DebuggerConsole';\n\nexport type ProfilerMeasuresSection = {|\n  time: number,\n  subsections: { [string]: ProfilerMeasuresSection },\n|};\n\nexport type ProfilerOutput = {|\n  framesAverageMeasures: ProfilerMeasuresSection,\n  stats: {\n    framesCount: number,\n  },\n|};\n\n/**\n * Returns true if a log is a warning or debug log from a library out of our control that we do not want to bother users with.\n * This is used in Debugger#_handleMessage below to filter out those kinds of messages.\n */\nconst isUnavoidableLibraryWarning = ({ group, message }: Log): boolean =>\n  group === 'JavaScript' &&\n  (message.includes('Electron Security Warning') ||\n    message.includes('Warning: This is a browser-targeted Firebase bundle'));\n\ntype Props = {|\n  project: gdProject,\n  setToolbar: React.Node => void,\n  previewDebuggerServer: PreviewDebuggerServer,\n|};\n\ntype State = {|\n  debuggerServerState: 'started' | 'stopped',\n  debuggerServerError: ?any,\n  debuggerIds: Array<DebuggerId>,\n  unregisterDebuggerServerCallbacks: ?() => void,\n\n  debuggerGameData: { [DebuggerId]: any },\n  profilerOutputs: { [DebuggerId]: ProfilerOutput },\n  profilingInProgress: { [DebuggerId]: boolean },\n  selectedId: DebuggerId,\n  logs: { [DebuggerId]: Array<Log> },\n|};\n\n/**\n * Start the debugger server, listen to commands received and issue commands to it.\n * This is only supported on Electron runtime for now.\n */\nexport default class Debugger extends React.Component<Props, State> {\n  state = {\n    debuggerServerState: this.props.previewDebuggerServer.getServerState(),\n    debuggerServerError: null,\n    debuggerIds: this.props.previewDebuggerServer.getExistingDebuggerIds(),\n    unregisterDebuggerServerCallbacks: null,\n    debuggerGameData: {},\n    profilerOutputs: {},\n    profilingInProgress: {},\n    selectedId: 0,\n    logs: {},\n  };\n\n  _debuggerContents: { [DebuggerId]: ?DebuggerContent } = {};\n  _debuggerLogs: Map<number, LogsManager> = new Map();\n\n  updateToolbar() {\n    this.props.setToolbar(\n      <Toolbar\n        onPlay={() => this._play(this.state.selectedId)}\n        onPause={() => this._pause(this.state.selectedId)}\n        canPlay={this._hasSelectedDebugger()}\n        canPause={this._hasSelectedDebugger()}\n        canOpenProfiler={this._hasSelectedDebugger()}\n        onOpenProfiler={() => {\n          if (this._debuggerContents[this.state.selectedId])\n            this._debuggerContents[this.state.selectedId].openProfiler();\n        }}\n        canOpenConsole={this._hasSelectedDebugger()}\n        onOpenConsole={() => {\n          if (this._debuggerContents[this.state.selectedId])\n            this._debuggerContents[this.state.selectedId].openConsole();\n        }}\n      />\n    );\n  }\n\n  componentDidMount() {\n    this._registerServerCallbacks();\n  }\n\n  componentWillUnmount() {\n    if (this.state.unregisterDebuggerServerCallbacks) {\n      this.state.unregisterDebuggerServerCallbacks();\n    }\n  }\n\n  _getLogsManager(id: number): LogsManager {\n    let result = this._debuggerLogs.get(id);\n    if (!result) {\n      result = new LogsManager();\n      this._debuggerLogs.set(id, result);\n    }\n    return result;\n  }\n\n  _registerServerCallbacks = () => {\n    const { previewDebuggerServer } = this.props;\n    const { unregisterDebuggerServerCallbacks } = this.state;\n    if (\n      unregisterDebuggerServerCallbacks &&\n      previewDebuggerServer.getServerState() === 'started'\n    )\n      return; // Server already started and callbacks registered\n\n    if (unregisterDebuggerServerCallbacks) unregisterDebuggerServerCallbacks(); // Unregister old callbacks, if any\n\n    // Register new callbacks\n    const unregisterCallbacks = previewDebuggerServer.registerCallbacks({\n      onErrorReceived: err => {\n        this.setState(\n          {\n            debuggerServerError: err,\n          },\n          () => this.updateToolbar()\n        );\n      },\n      onConnectionClosed: ({ id, debuggerIds }) => {\n        this._debuggerLogs.delete(id);\n        this.setState(\n          ({\n            selectedId,\n            debuggerGameData,\n            profilerOutputs,\n            profilingInProgress,\n          }) => {\n            // Remove any data bound to the instance that might have been stored.\n            // Otherwise this would be a memory leak.\n            if (debuggerGameData[id]) delete debuggerGameData[id];\n            if (profilerOutputs[id]) delete profilerOutputs[id];\n            if (profilingInProgress[id]) delete profilingInProgress[id];\n\n            return {\n              debuggerIds,\n              selectedId:\n                selectedId !== id\n                  ? selectedId\n                  : debuggerIds.length\n                  ? debuggerIds[debuggerIds.length - 1]\n                  : selectedId,\n              debuggerGameData,\n              profilerOutputs,\n              profilingInProgress,\n            };\n          },\n          () => this.updateToolbar()\n        );\n      },\n      onConnectionOpened: ({ id, debuggerIds }) => {\n        this.setState(\n          {\n            debuggerIds,\n            selectedId: id,\n          },\n          () => this.updateToolbar()\n        );\n      },\n      onServerStateChanged: () => {\n        this.setState(\n          {\n            debuggerServerState: previewDebuggerServer.getServerState(),\n          },\n          () => this.updateToolbar()\n        );\n      },\n      onHandleParsedMessage: ({ id, parsedMessage }) => {\n        this._handleMessage(id, parsedMessage);\n      },\n    });\n    this.setState({\n      unregisterDebuggerServerCallbacks: unregisterCallbacks,\n    });\n  };\n\n  _handleMessage = (id: DebuggerId, data: any) => {\n    if (data.command === 'dump') {\n      this.setState({\n        debuggerGameData: {\n          ...this.state.debuggerGameData,\n          [id]: data.payload,\n        },\n      });\n    } else if (data.command === 'profiler.output') {\n      this.setState({\n        profilerOutputs: {\n          ...this.state.profilerOutputs,\n          [id]: data.payload,\n        },\n      });\n    } else if (data.command === 'profiler.started') {\n      this.setState(state => ({\n        profilingInProgress: { ...state.profilingInProgress, [id]: true },\n      }));\n    } else if (data.command === 'profiler.stopped') {\n      this.setState(state => ({\n        profilingInProgress: { ...state.profilingInProgress, [id]: false },\n      }));\n    } else if (data.command === 'hotReloader.logs') {\n      // Nothing to do.\n    } else if (data.command === 'console.log') {\n      // Filter out unavoidable warnings that do not concern non-engine devs.\n      if (isUnavoidableLibraryWarning(data.payload)) return;\n      this._getLogsManager(id).addLog(data.payload);\n    } else {\n      console.warn(\n        'Unknown command received from debugger client:',\n        data.command\n      );\n    }\n  };\n\n  _play = (id: DebuggerId) => {\n    const { previewDebuggerServer } = this.props;\n    previewDebuggerServer.sendMessage(id, { command: 'play' });\n  };\n\n  _pause = (id: DebuggerId) => {\n    const { previewDebuggerServer } = this.props;\n    previewDebuggerServer.sendMessage(id, { command: 'pause' });\n  };\n\n  _refresh = (id: DebuggerId) => {\n    const { previewDebuggerServer } = this.props;\n    previewDebuggerServer.sendMessage(id, { command: 'refresh' });\n  };\n\n  _edit = (id: DebuggerId, path: Array<string>, newValue: any) => {\n    const { previewDebuggerServer } = this.props;\n    previewDebuggerServer.sendMessage(id, {\n      command: 'set',\n      path,\n      newValue,\n    });\n\n    setTimeout(() => this._refresh(id), 100);\n    return true;\n  };\n\n  _call = (id: DebuggerId, path: Array<string>, args: Array<any>) => {\n    const { previewDebuggerServer } = this.props;\n    previewDebuggerServer.sendMessage(id, {\n      command: 'call',\n      path,\n      args,\n    });\n\n    setTimeout(() => this._refresh(id), 100);\n    return true;\n  };\n\n  _startProfiler = (id: DebuggerId) => {\n    const { previewDebuggerServer } = this.props;\n    previewDebuggerServer.sendMessage(id, { command: 'profiler.start' });\n  };\n\n  _stopProfiler = (id: DebuggerId) => {\n    const { previewDebuggerServer } = this.props;\n    previewDebuggerServer.sendMessage(id, { command: 'profiler.stop' });\n  };\n\n  _hasSelectedDebugger = () => {\n    const { selectedId, debuggerIds } = this.state;\n    return debuggerIds.indexOf(selectedId) !== -1;\n  };\n\n  render() {\n    const {\n      debuggerServerError,\n      debuggerServerState,\n      selectedId,\n      debuggerIds,\n      debuggerGameData,\n      profilerOutputs,\n      profilingInProgress,\n    } = this.state;\n\n    return (\n      <Background>\n        {debuggerServerState === 'stopped' && !debuggerServerError && (\n          <PlaceholderMessage>\n            <PlaceholderLoader />\n            <Text>\n              <Trans>Debugger is starting...</Trans>\n            </Text>\n          </PlaceholderMessage>\n        )}\n        {debuggerServerState === 'stopped' && debuggerServerError && (\n          <PlaceholderMessage>\n            <Text>\n              <Trans>\n                Unable to start the debugger server! Make sure that you are\n                authorized to run servers on this computer.\n              </Trans>\n            </Text>\n          </PlaceholderMessage>\n        )}\n        {debuggerServerState === 'started' && (\n          <Column expand noMargin>\n            <DebuggerSelector\n              selectedId={selectedId}\n              debuggerIds={debuggerIds}\n              onChooseDebugger={id =>\n                this.setState(\n                  {\n                    selectedId: id,\n                  },\n                  () => this.updateToolbar()\n                )\n              }\n            />\n            {this._hasSelectedDebugger() && (\n              <DebuggerContent\n                ref={debuggerContent =>\n                  (this._debuggerContents[selectedId] = debuggerContent)\n                }\n                gameData={debuggerGameData[selectedId]}\n                onPlay={() => this._play(selectedId)}\n                onPause={() => this._pause(selectedId)}\n                onRefresh={() => this._refresh(selectedId)}\n                onEdit={(path, args) => this._edit(selectedId, path, args)}\n                onCall={(path, args) => this._call(selectedId, path, args)}\n                onStartProfiler={() => this._startProfiler(selectedId)}\n                onStopProfiler={() => this._stopProfiler(selectedId)}\n                profilerOutput={profilerOutputs[selectedId]}\n                profilingInProgress={profilingInProgress[selectedId]}\n                logsManager={this._getLogsManager(selectedId)}\n              />\n            )}\n            {!this._hasSelectedDebugger() && (\n              <EmptyMessage>\n                <Trans>\n                  Run a preview and you will be able to inspect it with the\n                  debugger.\n                </Trans>\n              </EmptyMessage>\n            )}\n          </Column>\n        )}\n      </Background>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Debugger from '../../Debugger';\nimport {\n  type RenderEditorContainerProps,\n  type RenderEditorContainerPropsWithRef,\n} from './BaseEditor';\nimport SubscriptionChecker from '../../Profile/SubscriptionChecker';\n\ntype State = {|\n  subscriptionChecked: boolean,\n|};\n\nexport class DebuggerEditorContainer extends React.Component<\n  RenderEditorContainerProps,\n  State\n> {\n  editor: ?Debugger;\n  _subscriptionChecker: ?SubscriptionChecker;\n  state = {\n    subscriptionChecked: false,\n  };\n\n  shouldComponentUpdate(nextProps: RenderEditorContainerProps) {\n    // We stop updates when the component is inactive.\n    // If it's active, was active or becoming active again we let update propagate.\n    // Especially important to note that when becoming inactive, a \"last\" update is allowed.\n    return this.props.isActive || nextProps.isActive;\n  }\n\n  getProject(): ?gdProject {\n    return this.props.project;\n  }\n\n  getLayout(): ?gdLayout {\n    return null;\n  }\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  forceUpdateEditor() {\n    // No updates to be done.\n  }\n\n  componentWillReceiveProps() {\n    this._checkHasSubscription();\n  }\n\n  componentDidMount() {\n    this._checkHasSubscription();\n  }\n\n  _checkHasSubscription() {\n    if (\n      this._subscriptionChecker &&\n      this.props.isActive &&\n      !this.state.subscriptionChecked\n    ) {\n      this._subscriptionChecker.checkHasSubscription();\n      this.setState({\n        subscriptionChecked: true,\n      });\n    }\n  }\n\n  render() {\n    const { project, previewDebuggerServer } = this.props;\n    if (!project || !previewDebuggerServer) return null;\n\n    return (\n      <React.Fragment>\n        <Debugger\n          project={project}\n          setToolbar={this.props.setToolbar}\n          previewDebuggerServer={previewDebuggerServer}\n          ref={editor => (this.editor = editor)}\n        />\n        <SubscriptionChecker\n          ref={subscriptionChecker =>\n            (this._subscriptionChecker = subscriptionChecker)\n          }\n          onChangeSubscription={() => {\n            if (this.props.onChangeSubscription)\n              this.props.onChangeSubscription();\n          }}\n          id=\"Debugger\"\n          title={<Trans>Debugger</Trans>}\n          mode=\"try\"\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport const renderDebuggerEditorContainer = (\n  props: RenderEditorContainerPropsWithRef\n) => <DebuggerEditorContainer {...props} />;\n","import { Component } from 'react';\nimport MultiBackend from 'react-dnd-multi-backend';\nimport HTML5toTouch from 'react-dnd-multi-backend/lib/HTML5toTouch';\nimport { DragDropContext } from 'react-dnd';\n\nclass DragAndDropContextProvider extends Component {\n  render() {\n    return this.props.children;\n  }\n}\n\n/**\n * A react-dnd provider that automatically switch to react-dnd-touch-backend\n * when a touch event is recognized (react-dnd-html5-backend won't work on\n * touch devices like phones).\n *\n * When doing the switch from HTML5 backend to Touch backend, the existing events\n * are passed to the new backend. Unsure if this is necessary in GDevelop case.\n */\nexport default DragDropContext(MultiBackend(HTML5toTouch))(\n  DragAndDropContextProvider\n);\n","// @flow\nimport * as React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = {\n  progress: { marginLeft: 8, verticalAlign: 'middle' },\n};\n\nexport default ({\n  children,\n  isLoading,\n}: {\n  children: React.Node,\n  isLoading: ?boolean,\n}) => (\n  <span>\n    {children}\n    {isLoading && <CircularProgress size={20} style={styles.progress} />}\n  </span>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport TextField from '../UI/TextField';\n\ntype Props = {|\n  value: string,\n  onChange: Function,\n  errorText?: ?string,\n  allowEmpty?: boolean,\n|};\n\nexport const isUsernameValid = (\n  username: string,\n  allowEmpty: ?boolean\n): boolean => {\n  if (allowEmpty && username === '') return true;\n  return !!username && /^[\\w|-]+$/.test(username) && username.length < 31;\n};\n\nexport const usernameFormatError =\n  'Please pick a short username with only alphanumeric characters as well as _ and -';\n\nexport const UsernameField = ({\n  value,\n  onChange,\n  errorText,\n  allowEmpty,\n}: Props) => {\n  const getUsernameErrorText = () =>\n    isUsernameValid(value, allowEmpty) ? undefined : usernameFormatError;\n\n  return (\n    <TextField\n      autoFocus\n      value={value}\n      floatingLabelText={<Trans>Username</Trans>}\n      fullWidth\n      onChange={onChange}\n      errorText={getUsernameErrorText() || errorText}\n    />\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport Dialog from '../UI/Dialog';\nimport TextField from '../UI/TextField';\nimport {\n  type RegisterForm,\n  type AuthError,\n} from '../Utils/GDevelopServices/Authentication';\nimport LeftLoader from '../UI/LeftLoader';\nimport BackgroundText from '../UI/BackgroundText';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport { MarkdownText } from '../UI/MarkdownText';\nimport { UsernameField, isUsernameValid } from './UsernameField';\n\ntype Props = {|\n  onClose: () => void,\n  onGoToLogin: () => void,\n  onCreateAccount: (form: RegisterForm) => Promise<void>,\n  createAccountInProgress: boolean,\n  error: ?AuthError,\n|};\n\ntype State = {|\n  form: RegisterForm,\n|};\n\nexport const getEmailErrorText = (error: ?AuthError) => {\n  if (!error) return undefined;\n\n  if (error.code === 'auth/invalid-email')\n    return <Trans>This email is invalid.</Trans>;\n  if (error.code === 'auth/user-disabled')\n    return <Trans>The user was disabled.</Trans>;\n  if (error.code === 'auth/user-not-found')\n    return (\n      <Trans>This user was not found: have you created your account?</Trans>\n    );\n  if (error.code === 'auth/email-already-in-use')\n    return <Trans>This email was already used for another account.</Trans>;\n  if (error.code === 'auth/operation-not-allowed')\n    return (\n      <Trans>Service seems to be unavailable, please try again later.</Trans>\n    );\n  if (error.code === 'auth/requires-recent-login')\n    return (\n      <Trans>\n        Please log out and log in again to verify your identify, then change\n        your email.\n      </Trans>\n    );\n  return undefined;\n};\n\nexport const getPasswordErrorText = (error: ?AuthError) => {\n  if (!error) return undefined;\n\n  if (error.code === 'auth/too-many-requests')\n    return (\n      <Trans>\n        That's a lot of unsuccessful login attempts! Wait a bit before trying\n        again or reset your password.\n      </Trans>\n    );\n  if (error.code === 'auth/wrong-password')\n    return <Trans>The password is invalid.</Trans>;\n  if (error.code === 'auth/weak-password')\n    return (\n      <Trans>\n        This password is too weak: please use more letters and digits.\n      </Trans>\n    );\n  return undefined;\n};\n\nexport default class CreateAccountDialog extends Component<Props, State> {\n  state = {\n    form: {\n      email: '',\n      password: '',\n      username: '',\n    },\n  };\n\n  _canCreateAccount = () => {\n    return (\n      !this.props.createAccountInProgress &&\n      isUsernameValid(this.state.form.username, true)\n    );\n  };\n\n  _onCreateAccount = () => {\n    if (!this._canCreateAccount()) return;\n\n    const { form } = this.state;\n    this.props.onCreateAccount(form);\n  };\n\n  render() {\n    const { onClose, createAccountInProgress, onGoToLogin, error } = this.props;\n\n    return (\n      <Dialog\n        title={<Trans>Create a new GDevelop account</Trans>}\n        actions={[\n          <FlatButton\n            label={<Trans>Back</Trans>}\n            disabled={createAccountInProgress}\n            key=\"close\"\n            primary={false}\n            onClick={onClose}\n          />,\n          <LeftLoader isLoading={createAccountInProgress} key=\"create-account\">\n            <RaisedButton\n              label={<Trans>Create my account</Trans>}\n              primary\n              disabled={!this._canCreateAccount()}\n              onClick={this._onCreateAccount}\n            />\n          </LeftLoader>,\n        ]}\n        secondaryActions={[\n          <FlatButton\n            label={<Trans>Already have an account?</Trans>}\n            primary={false}\n            key=\"already-have-account\"\n            onClick={onGoToLogin}\n          />,\n        ]}\n        onApply={this._onCreateAccount}\n        onRequestClose={() => {\n          if (!createAccountInProgress) onClose();\n        }}\n        maxWidth=\"sm\"\n        cannotBeDismissed={true}\n        open\n      >\n        <ColumnStackLayout noMargin>\n          <BackgroundText>\n            <MarkdownText\n              translatableSource={t`By creating an account and using GDevelop, you agree to the [Terms and Conditions](https://gdevelop-app.com/legal/terms-and-conditions). Having an account allows you to export your game on Android or as a Desktop app and it unlocks other services for your project!`}\n            />\n          </BackgroundText>\n          <UsernameField\n            value={this.state.form.username}\n            onChange={(e, value) => {\n              this.setState({\n                form: {\n                  ...this.state.form,\n                  username: value,\n                },\n              });\n            }}\n            allowEmpty\n          />\n          <TextField\n            value={this.state.form.email}\n            floatingLabelText={<Trans>Email</Trans>}\n            errorText={getEmailErrorText(error)}\n            fullWidth\n            required\n            onChange={(e, value) => {\n              this.setState({\n                form: {\n                  ...this.state.form,\n                  email: value,\n                },\n              });\n            }}\n          />\n          <TextField\n            value={this.state.form.password}\n            floatingLabelText={<Trans>Password</Trans>}\n            errorText={getPasswordErrorText(error)}\n            type=\"password\"\n            fullWidth\n            required\n            onChange={(e, value) => {\n              this.setState({\n                form: {\n                  ...this.state.form,\n                  password: value,\n                },\n              });\n            }}\n          />\n        </ColumnStackLayout>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport Dialog from '../UI/Dialog';\nimport { Column } from '../UI/Grid';\nimport TextField from '../UI/TextField';\nimport {\n  type LoginForm,\n  type AuthError,\n} from '../Utils/GDevelopServices/Authentication';\nimport RightLoader from '../UI/RightLoader';\nimport LeftLoader from '../UI/LeftLoader';\nimport Text from '../UI/Text';\nimport { getEmailErrorText, getPasswordErrorText } from './CreateAccountDialog';\nimport AlertMessage from '../UI/AlertMessage';\nimport { ColumnStackLayout } from '../UI/Layout';\n\ntype Props = {|\n  onClose: () => void,\n  onGoToCreateAccount: () => void,\n  onLogin: (form: LoginForm) => Promise<void>,\n  onForgotPassword: (form: LoginForm) => Promise<void>,\n  loginInProgress: boolean,\n  error: ?AuthError,\n  resetPasswordDialogOpen: boolean,\n  onCloseResetPasswordDialog: () => void,\n  forgotPasswordInProgress: boolean,\n|};\n\ntype State = {|\n  form: LoginForm,\n|};\n\nexport default class LoginDialog extends Component<Props, State> {\n  state = {\n    form: {\n      email: '',\n      password: '',\n    },\n  };\n\n  _canLogin = () => {\n    return !(this.props.loginInProgress || this.props.forgotPasswordInProgress);\n  };\n\n  _onLogin = () => {\n    if (!this._canLogin()) return;\n\n    const { form } = this.state;\n    this.props.onLogin(form);\n  };\n\n  _onForgotPassword = () => {\n    const { form } = this.state;\n    this.props.onForgotPassword(form);\n  };\n\n  render() {\n    const {\n      onClose,\n      onGoToCreateAccount,\n      loginInProgress,\n      error,\n      resetPasswordDialogOpen,\n      onCloseResetPasswordDialog,\n      forgotPasswordInProgress,\n    } = this.props;\n    const actions = [\n      <FlatButton\n        label={<Trans>Back</Trans>}\n        disabled={!this._canLogin()}\n        key=\"back\"\n        primary={false}\n        onClick={onClose}\n      />,\n      <LeftLoader isLoading={loginInProgress} key=\"login\">\n        <RaisedButton\n          label={<Trans>Login</Trans>}\n          primary\n          onClick={this._onLogin}\n          disabled={!this._canLogin()}\n        />\n      </LeftLoader>,\n    ];\n\n    return (\n      <Dialog\n        title={<Trans>Login to your GDevelop account</Trans>}\n        actions={actions}\n        secondaryActions={[\n          <RightLoader\n            isLoading={forgotPasswordInProgress}\n            key=\"forgot-password\"\n          >\n            <FlatButton\n              label={<Trans>I forgot my password</Trans>}\n              primary={false}\n              disabled={loginInProgress || forgotPasswordInProgress}\n              onClick={this._onForgotPassword}\n            />\n          </RightLoader>,\n        ]}\n        onApply={this._onLogin}\n        onRequestClose={() => {\n          if (!loginInProgress && !forgotPasswordInProgress) onClose();\n        }}\n        maxWidth=\"sm\"\n        cannotBeDismissed={true}\n        open\n      >\n        <ColumnStackLayout noMargin>\n          <AlertMessage\n            kind=\"info\"\n            renderRightButton={() => (\n              <FlatButton\n                label={<Trans>Create my account</Trans>}\n                disabled={loginInProgress || forgotPasswordInProgress}\n                primary\n                onClick={onGoToCreateAccount}\n              />\n            )}\n          >\n            <Trans>Don't have an account yet?</Trans>\n          </AlertMessage>\n          <TextField\n            autoFocus\n            value={this.state.form.email}\n            floatingLabelText={<Trans>Email</Trans>}\n            errorText={getEmailErrorText(error)}\n            fullWidth\n            onChange={(e, value) => {\n              this.setState({\n                form: {\n                  ...this.state.form,\n                  email: value,\n                },\n              });\n            }}\n          />\n          <TextField\n            value={this.state.form.password}\n            floatingLabelText={<Trans>Password</Trans>}\n            errorText={getPasswordErrorText(error)}\n            type=\"password\"\n            fullWidth\n            onChange={(e, value) => {\n              this.setState({\n                form: {\n                  ...this.state.form,\n                  password: value,\n                },\n              });\n            }}\n          />\n        </ColumnStackLayout>\n        <Dialog\n          cannotBeDismissed={true}\n          open={resetPasswordDialogOpen}\n          title={<Trans>Reset your password</Trans>}\n          actions={[\n            <FlatButton\n              label={<Trans>Close</Trans>}\n              key=\"close\"\n              onClick={onCloseResetPasswordDialog}\n            />,\n          ]}\n        >\n          <Column noMargin>\n            <Text>\n              <Trans>\n                You should have received an email containing instructions to\n                reset and set a new password. Once it's done, you can use your\n                new password in GDevelop.\n              </Trans>\n            </Text>\n          </Column>\n        </Dialog>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans, t } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport Dialog from '../UI/Dialog';\nimport {\n  type EditForm,\n  type AuthError,\n  type Profile,\n} from '../Utils/GDevelopServices/Authentication';\nimport LeftLoader from '../UI/LeftLoader';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport {\n  isUsernameValid,\n  UsernameField,\n  usernameFormatError,\n} from './UsernameField';\nimport TextField from '../UI/TextField';\nimport Checkbox from '../UI/Checkbox';\n\ntype Props = {|\n  profile: Profile,\n  onClose: () => void,\n  onEdit: (form: EditForm) => Promise<void>,\n  editInProgress: boolean,\n  error: ?AuthError,\n|};\n\ntype State = {|\n  form: EditForm,\n|};\n\nexport const getUsernameErrorText = (error: ?AuthError) => {\n  if (!error) return undefined;\n\n  if (error.code === 'auth/username-used')\n    return 'This username is already used, please pick another one.';\n  if (error.code === 'auth/malformed-username') return usernameFormatError;\n  return undefined;\n};\n\nexport default class EditDialog extends Component<Props, State> {\n  state = {\n    form: {\n      username: this.props.profile.username || '',\n      description: this.props.profile.description || '',\n      getGameStatsEmail: !!this.props.profile.getGameStatsEmail,\n    },\n  };\n\n  _onEdit = () => {\n    if (!this._canEdit()) return;\n\n    const { form } = this.state;\n    this.props.onEdit(form);\n  };\n\n  _canEdit = () => {\n    return (\n      !this.props.editInProgress && isUsernameValid(this.state.form.username)\n    );\n  };\n\n  render() {\n    const { onClose, editInProgress, error } = this.props;\n    const actions = [\n      <FlatButton\n        label={<Trans>Back</Trans>}\n        disabled={editInProgress}\n        key=\"back\"\n        primary={false}\n        onClick={onClose}\n      />,\n      <LeftLoader isLoading={editInProgress} key=\"edit\">\n        <RaisedButton\n          label={<Trans>Save</Trans>}\n          primary\n          onClick={this._onEdit}\n          disabled={!this._canEdit()}\n        />\n      </LeftLoader>,\n    ];\n\n    return (\n      <Dialog\n        title={<Trans>Edit your GDevelop profile</Trans>}\n        actions={actions}\n        onRequestClose={() => {\n          if (!editInProgress) onClose();\n        }}\n        maxWidth=\"sm\"\n        onApply={this._onEdit}\n        cannotBeDismissed={true}\n        open\n      >\n        <ColumnStackLayout noMargin>\n          <UsernameField\n            value={this.state.form.username}\n            onChange={(e, value) => {\n              this.setState({\n                form: {\n                  ...this.state.form,\n                  username: value,\n                },\n              });\n            }}\n            errorText={getUsernameErrorText(error)}\n          />\n          <TextField\n            value={this.state.form.description}\n            floatingLabelText={<Trans>Bio</Trans>}\n            fullWidth\n            multiline\n            rows={3}\n            rowsMax={5}\n            hintText={t`What are you using GDevelop for?`}\n            onChange={(e, value) => {\n              this.setState({\n                form: {\n                  ...this.state.form,\n                  description: value,\n                },\n              });\n            }}\n          />\n          <Checkbox\n            label={<Trans>I want to receive weekly stats about my games</Trans>}\n            checked={this.state.form.getGameStatsEmail}\n            onCheck={(e, value) => {\n              this.setState({\n                form: {\n                  ...this.state.form,\n                  getGameStatsEmail: value,\n                },\n              });\n            }}\n          />\n        </ColumnStackLayout>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport Dialog from '../UI/Dialog';\nimport { User as FirebaseUser } from 'firebase/auth';\nimport {\n  type ChangeEmailForm,\n  type AuthError,\n} from '../Utils/GDevelopServices/Authentication';\nimport LeftLoader from '../UI/LeftLoader';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport TextField from '../UI/TextField';\nimport { getEmailErrorText } from './CreateAccountDialog';\n\ntype Props = {|\n  firebaseUser: FirebaseUser,\n  onClose: () => void,\n  onChangeEmail: (form: ChangeEmailForm) => Promise<void>,\n  changeEmailInProgress: boolean,\n  error: ?AuthError,\n|};\n\ntype State = {|\n  form: ChangeEmailForm,\n|};\n\nexport default class ChangeEmailDialog extends Component<Props, State> {\n  state = {\n    form: {\n      email: this.props.firebaseUser.email,\n    },\n  };\n\n  _onChangeEmail = () => {\n    if (this.props.changeEmailInProgress) return;\n\n    const { form } = this.state;\n    this.props.onChangeEmail(form);\n  };\n\n  render() {\n    const { onClose, changeEmailInProgress, error } = this.props;\n    const actions = [\n      <FlatButton\n        label={<Trans>Back</Trans>}\n        disabled={changeEmailInProgress}\n        key=\"back\"\n        primary={false}\n        onClick={onClose}\n      />,\n      <LeftLoader isLoading={changeEmailInProgress} key=\"change-email\">\n        <RaisedButton\n          label={<Trans>Save</Trans>}\n          primary\n          onClick={this._onChangeEmail}\n          disabled={changeEmailInProgress}\n        />\n      </LeftLoader>,\n    ];\n\n    return (\n      <Dialog\n        title={<Trans>Change your email</Trans>}\n        actions={actions}\n        onRequestClose={() => {\n          if (!changeEmailInProgress) onClose();\n        }}\n        onApply={this._onChangeEmail}\n        maxWidth=\"sm\"\n        cannotBeDismissed={true}\n        open\n      >\n        <ColumnStackLayout noMargin>\n          <TextField\n            value={this.state.form.email}\n            floatingLabelText={<Trans>Email</Trans>}\n            errorText={getEmailErrorText(error)}\n            fullWidth\n            required\n            onChange={(e, value) => {\n              this.setState({\n                form: {\n                  ...this.state.form,\n                  email: value,\n                },\n              });\n            }}\n          />\n        </ColumnStackLayout>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport Dialog from '../UI/Dialog';\nimport { type AuthenticatedUser } from './AuthenticatedUserContext';\nimport { Column, Line, Spacer } from '../UI/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport BackgroundText from '../UI/BackgroundText';\nimport VerifiedUser from '@material-ui/icons/VerifiedUser';\nimport Text from '../UI/Text';\nimport { useInterval } from '../Utils/UseInterval';\n\ntype Props = {|\n  onClose: () => void,\n  authenticatedUser: AuthenticatedUser,\n|};\n\nexport default function EmailVerificationPendingDialog({\n  onClose,\n  authenticatedUser,\n}: Props) {\n  const isVerified =\n    !!authenticatedUser &&\n    !!authenticatedUser.firebaseUser &&\n    !!authenticatedUser.firebaseUser.emailVerified;\n  useInterval(\n    () => {\n      authenticatedUser.onRefreshFirebaseProfile().catch(() => {\n        // Ignore any error, will be retried anyway.\n      });\n    },\n    isVerified ? null : 3900\n  );\n\n  return (\n    <Dialog\n      actions={[\n        isVerified ? (\n          <RaisedButton\n            label={<Trans>Done!</Trans>}\n            key=\"close\"\n            primary\n            onClick={onClose}\n          />\n        ) : (\n          <FlatButton\n            label={<Trans>Cancel and close</Trans>}\n            key=\"close\"\n            primary={false}\n            onClick={onClose}\n          />\n        ),\n      ]}\n      maxWidth=\"sm\"\n      cannotBeDismissed={true}\n      open\n      noMargin\n    >\n      {!isVerified ? (\n        <Column>\n          <Line justifyContent=\"center\" alignItems=\"center\">\n            <CircularProgress size={20} />\n            <Spacer />\n            <Text>Waiting for the email verification...</Text>\n          </Line>\n          <Spacer />\n          <Line justifyContent=\"center\">\n            <BackgroundText>\n              <Trans>\n                Check your inbox and click the link to verify your email address\n                - and come back here when it's done.\n              </Trans>\n            </BackgroundText>\n          </Line>\n        </Column>\n      ) : (\n        <Column>\n          <Line justifyContent=\"center\" alignItems=\"center\">\n            <VerifiedUser />\n            <Spacer />\n            <Text>\n              <Trans>Your email is now verified!</Trans>\n            </Text>\n          </Line>\n        </Column>\n      )}\n    </Dialog>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport {\n  getUserUsages,\n  getUserSubscription,\n  getUserLimits,\n} from '../Utils/GDevelopServices/Usage';\nimport { getUserBadges } from '../Utils/GDevelopServices/User';\nimport Authentication, {\n  type LoginForm,\n  type RegisterForm,\n  type EditForm,\n  type ChangeEmailForm,\n  type AuthError,\n} from '../Utils/GDevelopServices/Authentication';\nimport { User as FirebaseUser } from 'firebase/auth';\nimport LoginDialog from './LoginDialog';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport { sendSignupDone } from '../Utils/Analytics/EventSender';\nimport AuthenticatedUserContext, {\n  initialAuthenticatedUser,\n  type AuthenticatedUser,\n} from './AuthenticatedUserContext';\nimport CreateAccountDialog from './CreateAccountDialog';\nimport EditProfileDialog from './EditProfileDialog';\nimport ChangeEmailDialog from './ChangeEmailDialog';\nimport EmailVerificationPendingDialog from './EmailVerificationPendingDialog';\nimport PreferencesContext, {\n  type PreferencesValues,\n} from '../MainFrame/Preferences/PreferencesContext';\n\ntype Props = {|\n  authentication: Authentication,\n  children: React.Node,\n|};\n\ntype State = {|\n  authenticatedUser: AuthenticatedUser,\n  loginDialogOpen: boolean,\n  createAccountDialogOpen: boolean,\n  loginInProgress: boolean,\n  createAccountInProgress: boolean,\n  editProfileDialogOpen: boolean,\n  editInProgress: boolean,\n  authError: ?AuthError,\n  resetPasswordDialogOpen: boolean,\n  emailVerificationPendingDialogOpen: boolean,\n  forgotPasswordInProgress: boolean,\n  changeEmailDialogOpen: boolean,\n  changeEmailInProgress: boolean,\n|};\n\nexport default class AuthenticatedUserProvider extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    authenticatedUser: initialAuthenticatedUser,\n    loginDialogOpen: false,\n    createAccountDialogOpen: false,\n    loginInProgress: false,\n    createAccountInProgress: false,\n    editProfileDialogOpen: false,\n    editInProgress: false,\n    authError: null,\n    resetPasswordDialogOpen: false,\n    emailVerificationPendingDialogOpen: false,\n    forgotPasswordInProgress: false,\n    changeEmailDialogOpen: false,\n    changeEmailInProgress: false,\n  };\n  _automaticallyUpdateUserProfile = true;\n\n  componentDidMount() {\n    this._resetAuthenticatedUser();\n\n    // Listen to when the user log out so that we reset the user profile.\n    this.props.authentication.setOnUserLogoutCallback(\n      this._fetchUserProfileWithoutThrowingErrors\n    );\n\n    // When the authenticated user changes, we need to react accordingly\n    // This can happen:\n    // - at the startup, because the authenticated Firebase user was not ready yet\n    //   when this component mounted. So we'll fetch the user profile.\n    // - at the login, signup, profile edit. These methods are taking care of\n    //   fetching the user profile by themselves, so they will disable the automatic\n    //   refresh.\n    // - at any other moment (Firebase user was updated), in which case it's probably\n    //   not a problem to fetch again the user profile.\n    this.props.authentication.setOnUserUpdateCallback(() => {\n      if (this._automaticallyUpdateUserProfile) {\n        console.info(\n          'Fetching user profile as the authenticated user changed...'\n        );\n        this._fetchUserProfileWithoutThrowingErrors();\n      } else {\n        console.info(\n          'The authenticated user changed, but not fetching the user profile again (deactivated).'\n        );\n      }\n    });\n\n    if (this.props.authentication.getFirebaseUserSync()) {\n      // The user is logged already: fetch its user profile (because the \"user update\"\n      // won't trigger, as registered too late).\n      console.info(\n        'Fetching user profile as authenticated user found at startup...'\n      );\n      this._automaticallyUpdateUserProfile = false;\n      this._fetchUserProfileWithoutThrowingErrors();\n      this._automaticallyUpdateUserProfile = true;\n    } else {\n      // Don't do anything. Either no user is logged (nothing to do)\n      // or is being logged (the \"user udpate\" callback will trigger later).\n    }\n  }\n\n  _resetAuthenticatedUser() {\n    this.setState(({ authenticatedUser }) => ({\n      authenticatedUser: {\n        ...initialAuthenticatedUser,\n        onLogout: this._doLogout,\n        onBadgesChanged: this._fetchUserBadges,\n        onLogin: () => this.openLoginDialog(true),\n        onEdit: () => this.openEditProfileDialog(true),\n        onChangeEmail: () => this.openChangeEmailDialog(true),\n        onCreateAccount: () => this.openCreateAccountDialog(true),\n        onRefreshUserProfile: this._fetchUserProfile,\n        onRefreshFirebaseProfile: async () => {\n          await this._reloadFirebaseProfile();\n        },\n        onSendEmailVerification: this._doSendEmailVerification,\n        onAcceptGameStatsEmail: this._doAcceptGameStatsEmail,\n        getAuthorizationHeader: () =>\n          this.props.authentication.getAuthorizationHeader(),\n      },\n    }));\n  }\n\n  _reloadFirebaseProfile = async (): Promise<?FirebaseUser> => {\n    const { authentication } = this.props;\n\n    try {\n      const firebaseUser = await authentication.getFirebaseUser();\n      if (!firebaseUser) {\n        this.setState(({ authenticatedUser }) => ({\n          authenticatedUser: {\n            ...authenticatedUser,\n            authenticated: false,\n            profile: null,\n            usages: null,\n            limits: null,\n            subscription: null,\n          },\n        }));\n        return null;\n      }\n\n      this.setState(({ authenticatedUser }) => ({\n        authenticatedUser: {\n          ...authenticatedUser,\n          authenticated: true,\n          firebaseUser,\n        },\n      }));\n      return firebaseUser;\n    } catch (error) {\n      console.error('Unable to fetch the authenticated Firebase user:', error);\n      throw error;\n    }\n  };\n\n  _fetchUserProfileWithoutThrowingErrors = async () => {\n    try {\n      await this._fetchUserProfile();\n    } catch (error) {\n      console.error(\n        'Error while fetching the user profile - but ignoring it.',\n        error\n      );\n    }\n  };\n\n  _fetchUserProfile = async () => {\n    const { authentication } = this.props;\n\n    // First ensure the Firebase authenticated user is up to date\n    // (and let the error propagate if any).\n    const firebaseUser = await this._reloadFirebaseProfile();\n    if (!firebaseUser) return;\n\n    // Fetching user profile related information, but independently from\n    // the user profile itself, to not block in case one of these calls\n    // fails.\n    getUserUsages(authentication.getAuthorizationHeader, firebaseUser.uid).then(\n      usages =>\n        this.setState(({ authenticatedUser }) => ({\n          authenticatedUser: {\n            ...authenticatedUser,\n            usages,\n          },\n        })),\n      error => {\n        console.error('Error while loading user usages:', error);\n      }\n    );\n    getUserSubscription(\n      authentication.getAuthorizationHeader,\n      firebaseUser.uid\n    ).then(\n      subscription =>\n        this.setState(({ authenticatedUser }) => ({\n          authenticatedUser: {\n            ...authenticatedUser,\n            subscription,\n          },\n        })),\n      error => {\n        console.error('Error while loading user subscriptions:', error);\n      }\n    );\n    getUserLimits(authentication.getAuthorizationHeader, firebaseUser.uid).then(\n      limits =>\n        this.setState(({ authenticatedUser }) => ({\n          authenticatedUser: {\n            ...authenticatedUser,\n            limits,\n          },\n        })),\n      error => {\n        console.error('Error while loading user limits:', error);\n      }\n    );\n    this._fetchUserBadges();\n\n    // Load and wait for the user profile to be fetched.\n    // (and let the error propagate if any).\n    const userProfile = await authentication.getUserProfile(\n      authentication.getAuthorizationHeader\n    );\n\n    this.setState(({ authenticatedUser }) => ({\n      authenticatedUser: {\n        ...authenticatedUser,\n        profile: userProfile,\n      },\n    }));\n  };\n\n  _fetchUserBadges = async () => {\n    const { firebaseUser } = this.state.authenticatedUser;\n    if (!firebaseUser) return;\n    try {\n      const badges = await getUserBadges(firebaseUser.uid);\n      this.setState(({ authenticatedUser }) => ({\n        authenticatedUser: {\n          ...authenticatedUser,\n          badges,\n        },\n      }));\n    } catch (error) {\n      console.error('Error while loading user badges:', error);\n    }\n  };\n\n  _doLogout = () => {\n    if (this.props.authentication) this.props.authentication.logout();\n    this._resetAuthenticatedUser();\n  };\n\n  _doLogin = async (form: LoginForm) => {\n    const { authentication } = this.props;\n    if (!authentication) return;\n\n    this.setState({\n      loginInProgress: true,\n    });\n    this._automaticallyUpdateUserProfile = false;\n    try {\n      await authentication.login(form);\n      await this._fetchUserProfileWithoutThrowingErrors();\n      this.openLoginDialog(false);\n    } catch (authError) {\n      this.setState({ authError });\n    }\n    this.setState({\n      loginInProgress: false,\n    });\n    this._automaticallyUpdateUserProfile = true;\n  };\n\n  _doEdit = async (form: EditForm, preferences: PreferencesValues) => {\n    const { authentication } = this.props;\n    if (!authentication) return;\n\n    this.setState({\n      editInProgress: true,\n    });\n    this._automaticallyUpdateUserProfile = false;\n    try {\n      await authentication.editUserProfile(\n        authentication.getAuthorizationHeader,\n        form,\n        preferences.language\n      );\n      await this._fetchUserProfileWithoutThrowingErrors();\n      this.openEditProfileDialog(false);\n    } catch (authError) {\n      this.setState({ authError });\n    }\n    this.setState({\n      editInProgress: false,\n    });\n    this._automaticallyUpdateUserProfile = true;\n  };\n\n  _doCreateAccount = async (\n    form: RegisterForm,\n    preferences: PreferencesValues\n  ) => {\n    const { authentication } = this.props;\n    if (!authentication) return;\n\n    this.setState({\n      createAccountInProgress: true,\n    });\n    this._automaticallyUpdateUserProfile = false;\n    try {\n      await authentication.createFirebaseAccount(form);\n\n      try {\n        await authentication.createUser(\n          authentication.getAuthorizationHeader,\n          form,\n          preferences.language\n        );\n      } catch (error) {\n        // Ignore this error - this is a best effort call\n        // and the user profile will be created on demand later\n        // by the API when fetched.\n      }\n\n      await this._fetchUserProfileWithoutThrowingErrors();\n      this.openLoginDialog(false);\n      sendSignupDone(form.email);\n    } catch (authError) {\n      this.setState({ authError });\n    }\n    this.setState({\n      createAccountInProgress: false,\n    });\n    this._automaticallyUpdateUserProfile = true;\n  };\n\n  _doForgotPassword = async (form: LoginForm) => {\n    const { authentication } = this.props;\n    if (!authentication) return;\n\n    this.setState({\n      forgotPasswordInProgress: true,\n    });\n    try {\n      await authentication.forgotPassword(form);\n      this.openResetPassword(true);\n    } catch (authError) {\n      this.setState({ authError });\n      showWarningBox(\n        \"Unable to send you an email to reset your password. Please double-check that the email address that you've entered is valid.\"\n      );\n    }\n    this.setState({\n      forgotPasswordInProgress: false,\n    });\n  };\n\n  _doSendEmailVerification = async () => {\n    const { authentication } = this.props;\n    if (!authentication) return;\n\n    await authentication.sendFirebaseEmailVerification();\n    this.openEmailVerificationPendingDialog(true);\n  };\n\n  _doAcceptGameStatsEmail = async () => {\n    const { authentication } = this.props;\n    if (!authentication) return;\n\n    this.setState({\n      editInProgress: true,\n    });\n    this._automaticallyUpdateUserProfile = false;\n    try {\n      await authentication.acceptGameStatsEmail(\n        authentication.getAuthorizationHeader\n      );\n      await this._fetchUserProfileWithoutThrowingErrors();\n    } catch (authError) {\n      this.setState({ authError });\n    }\n    this.setState({\n      editInProgress: false,\n    });\n    this._automaticallyUpdateUserProfile = true;\n  };\n\n  _doChangeEmail = async (form: ChangeEmailForm) => {\n    const { authentication } = this.props;\n    if (!authentication) return;\n\n    this.setState({\n      changeEmailInProgress: true,\n    });\n    this._automaticallyUpdateUserProfile = false;\n    try {\n      await authentication.changeEmail(\n        authentication.getAuthorizationHeader,\n        form\n      );\n      await this._fetchUserProfileWithoutThrowingErrors();\n      this.openChangeEmailDialog(false);\n    } catch (authError) {\n      this.setState({ authError });\n    }\n    this.setState({\n      changeEmailInProgress: false,\n    });\n    this._automaticallyUpdateUserProfile = true;\n  };\n\n  openEmailVerificationPendingDialog = (open: boolean = true) => {\n    this.setState({\n      emailVerificationPendingDialogOpen: open,\n    });\n  };\n\n  openResetPassword = (open: boolean = true) => {\n    this.setState({\n      resetPasswordDialogOpen: open,\n      authError: null,\n    });\n  };\n\n  openLoginDialog = (open: boolean = true) => {\n    this.setState({\n      loginDialogOpen: open,\n      createAccountDialogOpen: false,\n      authError: null,\n    });\n  };\n\n  openEditProfileDialog = (open: boolean = true) => {\n    this.setState({\n      editProfileDialogOpen: open,\n      authError: null,\n    });\n  };\n\n  openCreateAccountDialog = (open: boolean = true) => {\n    this.setState({\n      loginDialogOpen: false,\n      createAccountDialogOpen: open,\n      authError: null,\n    });\n  };\n\n  openChangeEmailDialog = (open: boolean = true) => {\n    this.setState({\n      changeEmailDialogOpen: open,\n      authError: null,\n    });\n  };\n\n  render() {\n    return (\n      <PreferencesContext.Consumer>\n        {({ values: preferences }) => (\n          <React.Fragment>\n            <AuthenticatedUserContext.Provider\n              value={this.state.authenticatedUser}\n            >\n              {this.props.children}\n            </AuthenticatedUserContext.Provider>\n            {this.state.loginDialogOpen && (\n              <LoginDialog\n                onClose={() => this.openLoginDialog(false)}\n                onGoToCreateAccount={() => this.openCreateAccountDialog(true)}\n                onLogin={this._doLogin}\n                loginInProgress={this.state.loginInProgress}\n                error={this.state.authError}\n                onForgotPassword={this._doForgotPassword}\n                resetPasswordDialogOpen={this.state.resetPasswordDialogOpen}\n                onCloseResetPasswordDialog={() => this.openResetPassword(false)}\n                forgotPasswordInProgress={this.state.forgotPasswordInProgress}\n              />\n            )}\n            {this.state.authenticatedUser.profile &&\n              this.state.editProfileDialogOpen && (\n                <EditProfileDialog\n                  profile={this.state.authenticatedUser.profile}\n                  onClose={() => this.openEditProfileDialog(false)}\n                  onEdit={form => this._doEdit(form, preferences)}\n                  editInProgress={this.state.editInProgress}\n                  error={this.state.authError}\n                />\n              )}\n            {this.state.authenticatedUser.firebaseUser &&\n              this.state.changeEmailDialogOpen && (\n                <ChangeEmailDialog\n                  firebaseUser={this.state.authenticatedUser.firebaseUser}\n                  onClose={() => this.openChangeEmailDialog(false)}\n                  onChangeEmail={this._doChangeEmail}\n                  changeEmailInProgress={this.state.changeEmailInProgress}\n                  error={this.state.authError}\n                />\n              )}\n            {this.state.createAccountDialogOpen && (\n              <CreateAccountDialog\n                onClose={() => this.openCreateAccountDialog(false)}\n                onGoToLogin={() => this.openLoginDialog(true)}\n                onCreateAccount={form =>\n                  this._doCreateAccount(form, preferences)\n                }\n                createAccountInProgress={this.state.createAccountInProgress}\n                error={this.state.authError}\n              />\n            )}\n            {this.state.emailVerificationPendingDialogOpen && (\n              <EmailVerificationPendingDialog\n                authenticatedUser={this.state.authenticatedUser}\n                onClose={() => {\n                  this.openEmailVerificationPendingDialog(false);\n                  this.state.authenticatedUser\n                    .onRefreshFirebaseProfile()\n                    .catch(() => {\n                      // Ignore any error, we can't do much.\n                    });\n                }}\n              />\n            )}\n          </React.Fragment>\n        )}\n      </PreferencesContext.Consumer>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React from 'react';\n\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport {\n  getUserPublicProfile,\n  getUserBadges,\n  type UserPublicProfile,\n} from '../Utils/GDevelopServices/User';\nimport { type Badge } from '../Utils/GDevelopServices/Badge';\nimport ProfileDetails from './ProfileDetails';\n\ntype Props = {|\n  userId: string,\n  onClose: () => void,\n|};\n\nconst PublicProfileDialog = ({ userId, onClose }: Props) => {\n  const [profile, setProfile] = React.useState<?UserPublicProfile>(null);\n  const [badges, setBadges] = React.useState<?(Badge[])>(null);\n  const [error, setError] = React.useState<?Error>(null);\n\n  const fetchProfile = React.useCallback(\n    async () => {\n      if (!userId) return;\n      setProfile(null);\n      try {\n        const profile = await getUserPublicProfile(userId);\n        setProfile(profile);\n      } catch (error) {\n        setError(error);\n      }\n    },\n    [userId]\n  );\n\n  const fetchUserBadges = React.useCallback(\n    async () => {\n      if (!userId) return;\n      setBadges(null);\n      try {\n        const badges = await getUserBadges(userId);\n        setBadges(badges);\n      } catch (error) {\n        setError(error);\n      }\n    },\n    [userId]\n  );\n\n  React.useEffect(\n    () => {\n      fetchProfile();\n      fetchUserBadges();\n    },\n    [userId, fetchProfile, fetchUserBadges]\n  );\n\n  const onRetry = () => {\n    setError(null);\n    fetchProfile();\n    fetchUserBadges();\n  };\n\n  return (\n    <Dialog\n      open={true}\n      maxWidth=\"sm\"\n      actions={[\n        <FlatButton\n          key=\"close\"\n          label={<Trans>Close</Trans>}\n          primary={false}\n          onClick={onClose}\n        />,\n      ]}\n    >\n      <ProfileDetails\n        profile={profile}\n        error={error}\n        onRetry={onRetry}\n        badges={badges}\n      />\n    </Dialog>\n  );\n};\n\nexport default PublicProfileDialog;\n","// @flow\n\nimport * as React from 'react';\n\nimport PublicProfileDialog from './PublicProfileDialog';\nimport PublicProfileContext, {\n  type PublicProfileState,\n} from './PublicProfileContext';\n\ntype Props = {|\n  children: React.Node,\n|};\n\nexport default ({ children }: Props) => {\n  const [\n    visitedPublicProfileUserId,\n    setVisitedPublicProfileUserId,\n  ] = React.useState<?string>(null);\n\n  const openUserPublicProfile = React.useCallback(\n    (userId: string): void => {\n      setVisitedPublicProfileUserId(userId);\n    },\n    [setVisitedPublicProfileUserId]\n  );\n\n  const closeUserPublicProfile = React.useCallback(\n    (): void => {\n      setVisitedPublicProfileUserId(null);\n    },\n    [setVisitedPublicProfileUserId]\n  );\n\n  const publicProfileState: PublicProfileState = React.useMemo(\n    () => ({\n      openUserPublicProfile: openUserPublicProfile,\n    }),\n    [openUserPublicProfile]\n  );\n\n  return (\n    <React.Fragment>\n      <PublicProfileContext.Provider value={publicProfileState}>\n        {children}\n      </PublicProfileContext.Provider>\n      {visitedPublicProfileUserId && (\n        <PublicProfileDialog\n          userId={visitedPublicProfileUserId}\n          onClose={closeUserPublicProfile}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n","// @flow\n\nimport * as React from 'react';\nimport EventsFunctionsExtensionsContext, {\n  type EventsFunctionsExtensionsState,\n} from './EventsFunctionsExtensionsContext';\nimport {\n  loadProjectEventsFunctionsExtensions,\n  type IncludeFileContent,\n  type EventsFunctionCodeWriterCallbacks,\n  type EventsFunctionCodeWriter,\n  unloadProjectEventsFunctionsExtensions,\n  unloadProjectEventsFunctionsExtension,\n} from '.';\nimport {\n  type EventsFunctionsExtensionWriter,\n  type EventsFunctionsExtensionOpener,\n} from './Storage';\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\nimport xxhashjs from 'xxhashjs';\n\ntype Props = {|\n  children: React.Node,\n  i18n: I18nType,\n  makeEventsFunctionCodeWriter: EventsFunctionCodeWriterCallbacks => ?EventsFunctionCodeWriter,\n  eventsFunctionsExtensionWriter: ?EventsFunctionsExtensionWriter,\n  eventsFunctionsExtensionOpener: ?EventsFunctionsExtensionOpener,\n|};\n\ntype State = EventsFunctionsExtensionsState;\n\n/**\n * Allow children components to request the loading (or unloading) of\n * the events functions extensions of the project.\n * Useful when dealing with events functions extensions (new extension created,\n * removed, pasted, installed, etc...).\n */\nexport default class EventsFunctionsExtensionsProvider extends React.Component<\n  Props,\n  State\n> {\n  _eventsFunctionCodeWriter: ?EventsFunctionCodeWriter = this.props.makeEventsFunctionCodeWriter(\n    {\n      onWriteFile: this._onWriteFile.bind(this),\n    }\n  );\n  _includeFileHashs: { [string]: number } = {};\n  _lastLoadPromise: ?Promise<void> = null;\n  state = {\n    eventsFunctionsExtensionsError: null,\n    loadProjectEventsFunctionsExtensions: this._loadProjectEventsFunctionsExtensions.bind(\n      this\n    ),\n    unloadProjectEventsFunctionsExtensions: this._unloadProjectEventsFunctionsExtensions.bind(\n      this\n    ),\n    unloadProjectEventsFunctionsExtension: this._unloadProjectEventsFunctionsExtension.bind(\n      this\n    ),\n    reloadProjectEventsFunctionsExtensions: this._reloadProjectEventsFunctionsExtensions.bind(\n      this\n    ),\n    ensureLoadFinished: this._ensureLoadFinished.bind(this),\n    getEventsFunctionsExtensionWriter: () =>\n      this.props.eventsFunctionsExtensionWriter,\n    getEventsFunctionsExtensionOpener: () =>\n      this.props.eventsFunctionsExtensionOpener,\n    getIncludeFileHashs: () => this._includeFileHashs,\n  };\n\n  _onWriteFile({ includeFile, content }: IncludeFileContent) {\n    this._includeFileHashs[includeFile] = xxhashjs\n      .h32(content, 0xabcd)\n      .toNumber();\n  }\n\n  _ensureLoadFinished(): Promise<void> {\n    if (this._lastLoadPromise) {\n      console.info(\n        'Waiting on the events functions extensions to finish loading...'\n      );\n    } else {\n      console.info('Events functions extensions are ready.');\n    }\n\n    return this._lastLoadPromise\n      ? this._lastLoadPromise.then(() => {\n          console.info('Events functions extensions finished loading.');\n        })\n      : Promise.resolve();\n  }\n\n  _loadProjectEventsFunctionsExtensions(project: ?gdProject): Promise<void> {\n    const { i18n } = this.props;\n    const eventsFunctionCodeWriter = this._eventsFunctionCodeWriter;\n    if (!project || !eventsFunctionCodeWriter) return Promise.resolve();\n\n    const lastLoadPromise = this._lastLoadPromise || Promise.resolve();\n\n    this._lastLoadPromise = lastLoadPromise\n      .then(() =>\n        loadProjectEventsFunctionsExtensions(\n          project,\n          eventsFunctionCodeWriter,\n          i18n\n        )\n      )\n      .then(() =>\n        this.setState({\n          eventsFunctionsExtensionsError: null,\n        })\n      )\n      .catch((eventsFunctionsExtensionsError: Error) => {\n        this.setState({\n          eventsFunctionsExtensionsError,\n        });\n        showErrorBox({\n          message: i18n._(\n            t`An error has occured during functions generation. If GDevelop is installed, verify that nothing is preventing GDevelop from writing on disk. If you're running GDevelop online, verify your internet connection and refresh functions from the Project Manager.`\n          ),\n          rawError: eventsFunctionsExtensionsError,\n          errorId: 'events-functions-extensions-load-error',\n        });\n      })\n      .then(() => {\n        this._lastLoadPromise = null;\n      });\n\n    return this._lastLoadPromise;\n  }\n\n  _unloadProjectEventsFunctionsExtensions(project: gdProject) {\n    unloadProjectEventsFunctionsExtensions(project);\n  }\n\n  _unloadProjectEventsFunctionsExtension(\n    project: gdProject,\n    extensionName: string\n  ) {\n    unloadProjectEventsFunctionsExtension(project, extensionName);\n  }\n\n  _reloadProjectEventsFunctionsExtensions(project: ?gdProject): Promise<void> {\n    if (project) {\n      this._unloadProjectEventsFunctionsExtensions(project);\n    }\n    return this._loadProjectEventsFunctionsExtensions(project);\n  }\n\n  render() {\n    return (\n      <EventsFunctionsExtensionsContext.Provider value={this.state}>\n        {this.props.children}\n      </EventsFunctionsExtensionsContext.Provider>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport DragAndDropContextProvider from '../UI/DragAndDrop/DragAndDropContextProvider';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\nimport { getTheme } from '../UI/Theme';\nimport AuthenticatedUserProvider from '../Profile/AuthenticatedUserProvider';\nimport PublicProfileProvider from '../Profile/PublicProfileProvider';\nimport Authentication from '../Utils/GDevelopServices/Authentication';\nimport PreferencesProvider from './Preferences/PreferencesProvider';\nimport PreferencesContext from './Preferences/PreferencesContext';\nimport GDI18nProvider from '../Utils/i18n/GDI18nProvider';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport EventsFunctionsExtensionsProvider from '../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsProvider';\nimport {\n  type EventsFunctionCodeWriter,\n  type EventsFunctionCodeWriterCallbacks,\n} from '../EventsFunctionsExtensionsLoader';\nimport {\n  type EventsFunctionsExtensionWriter,\n  type EventsFunctionsExtensionOpener,\n} from '../EventsFunctionsExtensionsLoader/Storage';\nimport GDevelopThemeContext from '../UI/Theme/ThemeContext';\nimport { UnsavedChangesContextProvider } from './UnsavedChangesContext';\nimport { CommandsContextProvider } from '../CommandPalette/CommandsContext';\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport { AssetStoreStateProvider } from '../AssetStore/AssetStoreContext';\nimport { ResourceStoreStateProvider } from '../AssetStore/ResourceStore/ResourceStoreContext';\nimport { ExampleStoreStateProvider } from '../AssetStore/ExampleStore/ExampleStoreContext';\nimport { ExtensionStoreStateProvider } from '../AssetStore/ExtensionStore/ExtensionStoreContext';\nimport {\n  type ResourceFetcher,\n  ResourceFetcherContext,\n} from '../ProjectsStorage/ResourceFetcher';\nimport { GamesShowcaseStateProvider } from '../GamesShowcase/GamesShowcaseContext';\nimport { TutorialStateProvider } from '../Tutorial/TutorialContext';\n\n// Add the rtl plugin to the JSS instance to support RTL languages in material-ui components.\nconst jss = create({\n  plugins: [...jssPreset().plugins, rtl()],\n});\n\ntype Props = {|\n  authentication: Authentication,\n  disableCheckForUpdates: boolean,\n  makeEventsFunctionCodeWriter: EventsFunctionCodeWriterCallbacks => ?EventsFunctionCodeWriter,\n  eventsFunctionsExtensionWriter: ?EventsFunctionsExtensionWriter,\n  eventsFunctionsExtensionOpener: ?EventsFunctionsExtensionOpener,\n  resourceFetcher: ResourceFetcher,\n  children: ({|\n    i18n: I18nType,\n  |}) => React.Node,\n|};\n\n/**\n * Wrap the children with Drag and Drop, Material UI theme and i18n React providers,\n * so that these modules can be used in the children.\n */\nexport default class Providers extends React.Component<Props, {||}> {\n  render() {\n    const {\n      disableCheckForUpdates,\n      authentication,\n      children,\n      makeEventsFunctionCodeWriter,\n      eventsFunctionsExtensionWriter,\n      eventsFunctionsExtensionOpener,\n      resourceFetcher,\n    } = this.props;\n    return (\n      <DragAndDropContextProvider>\n        <UnsavedChangesContextProvider>\n          <PreferencesProvider disableCheckForUpdates={disableCheckForUpdates}>\n            <PreferencesContext.Consumer>\n              {({ values }) => {\n                const theme = getTheme({\n                  themeName: values.themeName,\n                  language: values.language,\n                });\n                return (\n                  <GDI18nProvider language={values.language.replace('_', '-')}>\n                    <GDevelopThemeContext.Provider value={theme.gdevelopTheme}>\n                      <StylesProvider jss={jss}>\n                        <ThemeProvider theme={theme.muiTheme}>\n                          <AuthenticatedUserProvider\n                            authentication={authentication}\n                          >\n                            <PublicProfileProvider>\n                              <I18n update>\n                                {({ i18n }) => (\n                                  <EventsFunctionsExtensionsProvider\n                                    i18n={i18n}\n                                    makeEventsFunctionCodeWriter={\n                                      makeEventsFunctionCodeWriter\n                                    }\n                                    eventsFunctionsExtensionWriter={\n                                      eventsFunctionsExtensionWriter\n                                    }\n                                    eventsFunctionsExtensionOpener={\n                                      eventsFunctionsExtensionOpener\n                                    }\n                                  >\n                                    <CommandsContextProvider>\n                                      <AssetStoreStateProvider>\n                                        <ResourceStoreStateProvider>\n                                          <ExampleStoreStateProvider>\n                                            <ExtensionStoreStateProvider>\n                                              <GamesShowcaseStateProvider>\n                                                <TutorialStateProvider>\n                                                  <ResourceFetcherContext.Provider\n                                                    value={resourceFetcher}\n                                                  >\n                                                    {children({ i18n })}\n                                                  </ResourceFetcherContext.Provider>\n                                                </TutorialStateProvider>\n                                              </GamesShowcaseStateProvider>\n                                            </ExtensionStoreStateProvider>\n                                          </ExampleStoreStateProvider>\n                                        </ResourceStoreStateProvider>\n                                      </AssetStoreStateProvider>\n                                    </CommandsContextProvider>\n                                  </EventsFunctionsExtensionsProvider>\n                                )}\n                              </I18n>\n                            </PublicProfileProvider>\n                          </AuthenticatedUserProvider>\n                        </ThemeProvider>\n                      </StylesProvider>\n                    </GDevelopThemeContext.Provider>\n                  </GDI18nProvider>\n                );\n              }}\n            </PreferencesContext.Consumer>\n          </PreferencesProvider>\n        </UnsavedChangesContextProvider>\n      </DragAndDropContextProvider>\n    );\n  }\n}\n","const themeData = {\n  base: 'vs-dark',\n  inherit: true,\n  rules: [\n    {\n      foreground: '969896',\n      token: 'comment',\n    },\n    {\n      foreground: 'ced1cf',\n      token: 'keyword.operator.class',\n    },\n    {\n      foreground: 'ced1cf',\n      token: 'constant.other',\n    },\n    {\n      foreground: 'ced1cf',\n      token: 'source.php.embedded.line',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'variable',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'support.other.variable',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'string.other.link',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'string.regexp',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'meta.tag',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'declaration.tag',\n    },\n    {\n      foreground: 'de935f',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: 'de935f',\n      token: 'constant.language',\n    },\n    {\n      foreground: 'de935f',\n      token: 'support.constant',\n    },\n    {\n      foreground: 'de935f',\n      token: 'constant.character',\n    },\n    {\n      foreground: 'de935f',\n      token: 'variable.parameter',\n    },\n    {\n      foreground: 'de935f',\n      token: 'punctuation.section.embedded',\n    },\n    {\n      foreground: 'de935f',\n      token: 'keyword.other.unit',\n    },\n    {\n      foreground: 'f0c674',\n      token: 'entity.name.class',\n    },\n    {\n      foreground: 'f0c674',\n      token: 'entity.name.type.class',\n    },\n    {\n      foreground: 'f0c674',\n      token: 'support.type',\n    },\n    {\n      foreground: 'f0c674',\n      token: 'support.class',\n    },\n    {\n      foreground: 'b5bd68',\n      token: 'string',\n    },\n    {\n      foreground: 'b5bd68',\n      token: 'constant.other.symbol',\n    },\n    {\n      foreground: 'b5bd68',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: 'b5bd68',\n      token: 'markup.heading',\n    },\n    {\n      foreground: '8abeb7',\n      token: 'keyword.operator',\n    },\n    {\n      foreground: '8abeb7',\n      token: 'constant.other.color',\n    },\n    {\n      foreground: '81a2be',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: '81a2be',\n      token: 'meta.function-call',\n    },\n    {\n      foreground: '81a2be',\n      token: 'support.function',\n    },\n    {\n      foreground: '81a2be',\n      token: 'keyword.other.special-method',\n    },\n    {\n      foreground: '81a2be',\n      token: 'meta.block-level',\n    },\n    {\n      foreground: 'b294bb',\n      token: 'keyword',\n    },\n    {\n      foreground: 'b294bb',\n      token: 'storage',\n    },\n    {\n      foreground: 'b294bb',\n      token: 'storage.type',\n    },\n    {\n      foreground: 'b294bb',\n      token: 'entity.name.tag.css',\n    },\n    {\n      foreground: 'ced2cf',\n      background: 'df5f5f',\n      token: 'invalid',\n    },\n    {\n      foreground: 'ced2cf',\n      background: '82a3bf',\n      token: 'meta.separator',\n    },\n    {\n      foreground: 'ced2cf',\n      background: 'b798bf',\n      token: 'invalid.deprecated',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#C5C8C6',\n    'editor.background': '#1D1F21',\n    'editor.selectionBackground': '#373B41',\n    'editor.lineHighlightBackground': '#282A2E',\n    'editorCursor.foreground': '#AEAFAD',\n    'editorWhitespace.foreground': '#4B4E55',\n  },\n};\n\nexport default {\n  name: 'Tomorrow-Night',\n  themeName: 'tomorrow-night',\n  themeData,\n};\n","const themeData = {\n  base: 'vs-dark',\n  inherit: true,\n  rules: [\n    {\n      foreground: '75715e',\n      token: 'comment',\n    },\n    {\n      foreground: 'e6db74',\n      token: 'string',\n    },\n    {\n      foreground: 'ae81ff',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: 'ae81ff',\n      token: 'constant.language',\n    },\n    {\n      foreground: 'ae81ff',\n      token: 'constant.character',\n    },\n    {\n      foreground: 'ae81ff',\n      token: 'constant.other',\n    },\n    {\n      foreground: 'f92672',\n      token: 'keyword',\n    },\n    {\n      foreground: 'f92672',\n      token: 'storage',\n    },\n    {\n      foreground: '66d9ef',\n      fontStyle: 'italic',\n      token: 'storage.type',\n    },\n    {\n      foreground: 'a6e22e',\n      fontStyle: 'underline',\n      token: 'entity.name.class',\n    },\n    {\n      foreground: 'a6e22e',\n      fontStyle: 'italic underline',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: 'a6e22e',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: 'fd971f',\n      fontStyle: 'italic',\n      token: 'variable.parameter',\n    },\n    {\n      foreground: 'f92672',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: 'a6e22e',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: '66d9ef',\n      token: 'support.function',\n    },\n    {\n      foreground: '66d9ef',\n      token: 'support.constant',\n    },\n    {\n      foreground: '66d9ef',\n      fontStyle: 'italic',\n      token: 'support.type',\n    },\n    {\n      foreground: '66d9ef',\n      fontStyle: 'italic',\n      token: 'support.class',\n    },\n    {\n      foreground: 'f8f8f0',\n      background: 'f92672',\n      token: 'invalid',\n    },\n    {\n      foreground: 'f8f8f0',\n      background: 'ae81ff',\n      token: 'invalid.deprecated',\n    },\n    {\n      foreground: 'cfcfc2',\n      token: 'meta.structure.dictionary.json string.quoted.double.json',\n    },\n    {\n      foreground: '75715e',\n      token: 'meta.diff',\n    },\n    {\n      foreground: '75715e',\n      token: 'meta.diff.header',\n    },\n    {\n      foreground: 'f92672',\n      token: 'markup.deleted',\n    },\n    {\n      foreground: 'a6e22e',\n      token: 'markup.inserted',\n    },\n    {\n      foreground: 'e6db74',\n      token: 'markup.changed',\n    },\n    {\n      foreground: 'ae81ff',\n      token: 'constant.numeric.line-number.find-in-files - match',\n    },\n    {\n      foreground: 'e6db74',\n      token: 'entity.name.filename.find-in-files',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#F8F8F2',\n    'editor.background': '#272822',\n    'editor.selectionBackground': '#49483E',\n    'editor.lineHighlightBackground': '#3E3D32',\n    'editorCursor.foreground': '#F8F8F0',\n    'editorWhitespace.foreground': '#3B3A32',\n    'editorIndentGuide.activeBackground': '#9D550F',\n    'editor.selectionHighlightBorder': '#222218',\n  },\n};\n\nexport default {\n  name: 'Monokai',\n  themeName: 'monokai',\n  themeData,\n};\n","const themeData = {\n  base: 'vs',\n  inherit: true,\n  rules: [\n    {\n      foreground: '8e908c',\n      token: 'comment',\n    },\n    {\n      foreground: '666969',\n      token: 'keyword.operator.class',\n    },\n    {\n      foreground: '666969',\n      token: 'constant.other',\n    },\n    {\n      foreground: '666969',\n      token: 'source.php.embedded.line',\n    },\n    {\n      foreground: 'c82829',\n      token: 'variable',\n    },\n    {\n      foreground: 'c82829',\n      token: 'support.other.variable',\n    },\n    {\n      foreground: 'c82829',\n      token: 'string.other.link',\n    },\n    {\n      foreground: 'c82829',\n      token: 'string.regexp',\n    },\n    {\n      foreground: 'c82829',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: 'c82829',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: 'c82829',\n      token: 'meta.tag',\n    },\n    {\n      foreground: 'c82829',\n      token: 'declaration.tag',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'constant.language',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'support.constant',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'constant.character',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'variable.parameter',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'punctuation.section.embedded',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'keyword.other.unit',\n    },\n    {\n      foreground: 'c99e00',\n      token: 'entity.name.class',\n    },\n    {\n      foreground: 'c99e00',\n      token: 'entity.name.type.class',\n    },\n    {\n      foreground: 'c99e00',\n      token: 'support.type',\n    },\n    {\n      foreground: 'c99e00',\n      token: 'support.class',\n    },\n    {\n      foreground: '718c00',\n      token: 'string',\n    },\n    {\n      foreground: '718c00',\n      token: 'constant.other.symbol',\n    },\n    {\n      foreground: '718c00',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: '718c00',\n      token: 'markup.heading',\n    },\n    {\n      foreground: '3e999f',\n      token: 'keyword.operator',\n    },\n    {\n      foreground: '3e999f',\n      token: 'constant.other.color',\n    },\n    {\n      foreground: '4271ae',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: '4271ae',\n      token: 'meta.function-call',\n    },\n    {\n      foreground: '4271ae',\n      token: 'support.function',\n    },\n    {\n      foreground: '4271ae',\n      token: 'keyword.other.special-method',\n    },\n    {\n      foreground: '4271ae',\n      token: 'meta.block-level',\n    },\n    {\n      foreground: '8959a8',\n      token: 'keyword',\n    },\n    {\n      foreground: '8959a8',\n      token: 'storage',\n    },\n    {\n      foreground: '8959a8',\n      token: 'storage.type',\n    },\n    {\n      foreground: 'ffffff',\n      background: 'c82829',\n      token: 'invalid',\n    },\n    {\n      foreground: 'ffffff',\n      background: '4271ae',\n      token: 'meta.separator',\n    },\n    {\n      foreground: 'ffffff',\n      background: '8959a8',\n      token: 'invalid.deprecated',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#4D4D4C',\n    'editor.background': '#FFFFFF',\n    'editor.selectionBackground': '#D6D6D6',\n    'editor.lineHighlightBackground': '#EFEFEF',\n    'editorCursor.foreground': '#AEAFAD',\n    'editorWhitespace.foreground': '#D1D1D1',\n  },\n};\n\nexport default {\n  name: 'Tomorrow',\n  themeName: 'tomorrow',\n  themeData,\n};\n","const themeData = {\n  base: 'vs-dark',\n  inherit: true,\n  rules: [\n    {\n      foreground: '657b83',\n      fontStyle: 'italic',\n      token: 'comment',\n    },\n    {\n      foreground: '2aa198',\n      token: 'string',\n    },\n    {\n      foreground: 'd30102',\n      token: 'string.regexp',\n    },\n    {\n      foreground: 'd33682',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: '268bd2',\n      token: 'variable.language',\n    },\n    {\n      foreground: '268bd2',\n      token: 'variable.other',\n    },\n    {\n      foreground: '859900',\n      token: 'keyword',\n    },\n    {\n      foreground: '93a1a1',\n      fontStyle: 'bold',\n      token: 'storage',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'entity.name.class',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'entity.name.type.class',\n    },\n    {\n      foreground: '268bd2',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: '859900',\n      token: 'punctuation.definition.variable',\n    },\n    {\n      foreground: 'd30102',\n      token: 'punctuation.section.embedded.begin',\n    },\n    {\n      foreground: 'd30102',\n      token: 'punctuation.section.embedded.end',\n    },\n    {\n      foreground: 'b58900',\n      token: 'constant.language',\n    },\n    {\n      foreground: 'b58900',\n      token: 'meta.preprocessor',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'support.function.construct',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'keyword.other.new',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'constant.character',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'constant.other',\n    },\n    {\n      foreground: '6c71c4',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: '268bd2',\n      fontStyle: 'bold',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: '657b83',\n      token: 'punctuation.definition.tag',\n    },\n    {\n      foreground: '93a1a1',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: '268bd2',\n      token: 'support.function',\n    },\n    {\n      foreground: 'd30102',\n      token: 'punctuation.separator.continuation',\n    },\n    {\n      foreground: '859900',\n      token: 'support.type',\n    },\n    {\n      foreground: '859900',\n      token: 'support.class',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'support.type.exception',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#93A1A1',\n    'editor.background': '#002B36',\n    'editor.selectionBackground': '#073642',\n    'editor.lineHighlightBackground': '#073642',\n    'editorCursor.foreground': '#D30102',\n    'editorWhitespace.foreground': '#93A1A1',\n  },\n};\n\nexport default {\n  name: 'Solarized-Dark',\n  themeName: 'solarized-dark',\n  themeData,\n};\n","const themeData = {\n  base: 'vs',\n  inherit: true,\n  rules: [\n    {\n      foreground: '93a1a1',\n      token: 'comment',\n    },\n    {\n      foreground: '2aa198',\n      token: 'string',\n    },\n    {\n      foreground: 'd30102',\n      token: 'string.regexp',\n    },\n    {\n      foreground: 'd33682',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: '268bd2',\n      token: 'variable.language',\n    },\n    {\n      foreground: '268bd2',\n      token: 'variable.other',\n    },\n    {\n      foreground: '859900',\n      token: 'keyword',\n    },\n    {\n      foreground: '073642',\n      fontStyle: 'bold',\n      token: 'storage',\n    },\n    {\n      foreground: '268bd2',\n      token: 'entity.name.class',\n    },\n    {\n      foreground: '268bd2',\n      token: 'entity.name.type.class',\n    },\n    {\n      foreground: '268bd2',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: '859900',\n      token: 'punctuation.definition.variable',\n    },\n    {\n      foreground: 'd30102',\n      token: 'punctuation.section.embedded.begin',\n    },\n    {\n      foreground: 'd30102',\n      token: 'punctuation.section.embedded.end',\n    },\n    {\n      foreground: 'b58900',\n      token: 'constant.language',\n    },\n    {\n      foreground: 'b58900',\n      token: 'meta.preprocessor',\n    },\n    {\n      foreground: 'd30102',\n      token: 'support.function.construct',\n    },\n    {\n      foreground: 'd30102',\n      token: 'keyword.other.new',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'constant.character',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'constant.other',\n    },\n    {\n      foreground: '268bd2',\n      fontStyle: 'bold',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: '93a1a1',\n      token: 'punctuation.definition.tag.begin',\n    },\n    {\n      foreground: '93a1a1',\n      token: 'punctuation.definition.tag.end',\n    },\n    {\n      foreground: '93a1a1',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: '268bd2',\n      token: 'support.function',\n    },\n    {\n      foreground: 'd30102',\n      token: 'punctuation.separator.continuation',\n    },\n    {\n      foreground: '859900',\n      token: 'support.type',\n    },\n    {\n      foreground: '859900',\n      token: 'support.class',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'support.type.exception',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#586E75',\n    'editor.background': '#FDF6E3',\n    'editor.selectionBackground': '#073642',\n    'editor.lineHighlightBackground': '#EEE8D5',\n    'editorCursor.foreground': '#000000',\n    'editorWhitespace.foreground': '#93A1A1',\n  },\n};\n\nexport default {\n  name: 'Solarized-Light',\n  themeName: 'solarized-light',\n  themeData,\n};\n","const themeData = {\n  base: 'vs-dark',\n  inherit: true,\n  rules: [\n    {\n      foreground: 'ffffff',\n      background: '0f0f0f',\n      token: 'text',\n    },\n    {\n      background: '000000',\n      token: 'source.ruby.rails.embedded.html',\n    },\n    {\n      foreground: 'ffffff',\n      background: '101010',\n      token: 'text.html.ruby',\n    },\n    {\n      foreground: 'ccff33',\n      background: '000000',\n      token: 'invalid',\n    },\n    {\n      foreground: 'ccff33',\n      background: '000000',\n      token: 'invalid.deprecated',\n    },\n    {\n      foreground: '99cc99',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: 'ffffff',\n      background: '000000',\n      token: 'source',\n    },\n    {\n      foreground: '9933cc',\n      token: 'comment',\n    },\n    {\n      foreground: '339999',\n      token: 'constant',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'keyword',\n    },\n    {\n      foreground: 'edf8f9',\n      token: 'keyword.preprocessor',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'keyword.preprocessor directive',\n    },\n    {\n      foreground: 'ffcc00',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: 'ffcc00',\n      token: 'storage.type.function.js',\n    },\n    {\n      fontStyle: 'italic',\n      token: 'variable.parameter',\n    },\n    {\n      foreground: '772cb7',\n      background: '070707',\n      token: 'source comment.block',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'variable.other',\n    },\n    {\n      foreground: 'ffcc00',\n      token: 'support.function',\n    },\n    {\n      foreground: '66ff00',\n      token: 'string',\n    },\n    {\n      foreground: 'aaaaaa',\n      token: 'string constant.character.escape',\n    },\n    {\n      foreground: '000000',\n      background: 'cccc33',\n      token: 'string.interpolated',\n    },\n    {\n      foreground: '44b4cc',\n      token: 'string.regexp',\n    },\n    {\n      foreground: 'cccc33',\n      token: 'string.literal',\n    },\n    {\n      foreground: '555555',\n      token: 'string.interpolated constant.character.escape',\n    },\n    {\n      fontStyle: 'underline',\n      token: 'entity.name.class',\n    },\n    {\n      fontStyle: 'underline',\n      token: 'support.class.js',\n    },\n    {\n      fontStyle: 'italic underline',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'meta.tag.inline.any.html',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'meta.tag.block.any.html',\n    },\n    {\n      foreground: '99cc99',\n      fontStyle: 'italic',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: 'dde93d',\n      token: 'keyword.other',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'meta.selector.css',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'entity.other.attribute-name.pseudo-class.css',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'entity.name.tag.wildcard.css',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'entity.other.attribute-name.id.css',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'entity.other.attribute-name.class.css',\n    },\n    {\n      foreground: '999966',\n      token: 'support.type.property-name.css',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'keyword.other.unit.css',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'constant.other.rgb-value.css',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'constant.numeric.css',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'support.function.event-handler.js',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'keyword.operator.js',\n    },\n    {\n      foreground: 'cccc66',\n      token: 'keyword.control.js',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'support.class.prototype.js',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'object.property.function.prototype.js',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#FFFFFF',\n    'editor.background': '#0F0F0F',\n    'editor.selectionBackground': '#6699CC',\n    'editor.lineHighlightBackground': '#333333',\n    'editorCursor.foreground': '#FFFFFF',\n    'editorWhitespace.foreground': '#404040',\n  },\n};\n\nexport default {\n  name: 'Vibrant Ink',\n  themeName: 'vibrant-ink',\n  themeData,\n};\n","const themeData = {\n  base: 'vs',\n  inherit: true,\n  rules: [\n    {\n      foreground: '999988',\n      fontStyle: 'italic',\n      token: 'comment',\n    },\n    {\n      foreground: '999999',\n      fontStyle: 'bold',\n      token: 'comment.block.preprocessor',\n    },\n    {\n      foreground: '999999',\n      fontStyle: 'bold italic',\n      token: 'comment.documentation',\n    },\n    {\n      foreground: '999999',\n      fontStyle: 'bold italic',\n      token: 'comment.block.documentation',\n    },\n    {\n      foreground: 'a61717',\n      background: 'e3d2d2',\n      token: 'invalid.illegal',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'keyword',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'storage',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'keyword.operator',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'constant.language',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'support.constant',\n    },\n    {\n      foreground: '445588',\n      fontStyle: 'bold',\n      token: 'storage.type',\n    },\n    {\n      foreground: '445588',\n      fontStyle: 'bold',\n      token: 'support.type',\n    },\n    {\n      foreground: '008080',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: '0086b3',\n      token: 'variable.other',\n    },\n    {\n      foreground: '999999',\n      token: 'variable.language',\n    },\n    {\n      foreground: '445588',\n      fontStyle: 'bold',\n      token: 'entity.name.type',\n    },\n    {\n      foreground: '445588',\n      fontStyle: 'bold',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: '445588',\n      fontStyle: 'bold',\n      token: 'support.class',\n    },\n    {\n      foreground: '008080',\n      token: 'variable.other.constant',\n    },\n    {\n      foreground: '800080',\n      token: 'constant.character.entity',\n    },\n    {\n      foreground: '990000',\n      token: 'entity.name.exception',\n    },\n    {\n      foreground: '990000',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: '990000',\n      token: 'support.function',\n    },\n    {\n      foreground: '990000',\n      token: 'keyword.other.name-of-parameter',\n    },\n    {\n      foreground: '555555',\n      token: 'entity.name.section',\n    },\n    {\n      foreground: '000080',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: '008080',\n      token: 'variable.parameter',\n    },\n    {\n      foreground: '008080',\n      token: 'support.variable',\n    },\n    {\n      foreground: '009999',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: '009999',\n      token: 'constant.other',\n    },\n    {\n      foreground: 'dd1144',\n      token: 'string - string source',\n    },\n    {\n      foreground: 'dd1144',\n      token: 'constant.character',\n    },\n    {\n      foreground: '009926',\n      token: 'string.regexp',\n    },\n    {\n      foreground: '990073',\n      token: 'constant.other.symbol',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'punctuation',\n    },\n    {\n      foreground: '000000',\n      background: 'ffdddd',\n      token: 'markup.deleted',\n    },\n    {\n      fontStyle: 'italic',\n      token: 'markup.italic',\n    },\n    {\n      foreground: 'aa0000',\n      token: 'markup.error',\n    },\n    {\n      foreground: '999999',\n      token: 'markup.heading.1',\n    },\n    {\n      foreground: '000000',\n      background: 'ddffdd',\n      token: 'markup.inserted',\n    },\n    {\n      foreground: '888888',\n      token: 'markup.output',\n    },\n    {\n      foreground: '888888',\n      token: 'markup.raw',\n    },\n    {\n      foreground: '555555',\n      token: 'markup.prompt',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'markup.bold',\n    },\n    {\n      foreground: 'aaaaaa',\n      token: 'markup.heading',\n    },\n    {\n      foreground: 'aa0000',\n      token: 'markup.traceback',\n    },\n    {\n      fontStyle: 'underline',\n      token: 'markup.underline',\n    },\n    {\n      foreground: '999999',\n      background: 'eaf2f5',\n      token: 'meta.diff.range',\n    },\n    {\n      foreground: '999999',\n      background: 'eaf2f5',\n      token: 'meta.diff.index',\n    },\n    {\n      foreground: '999999',\n      background: 'eaf2f5',\n      token: 'meta.separator',\n    },\n    {\n      foreground: '999999',\n      background: 'ffdddd',\n      token: 'meta.diff.header.from-file',\n    },\n    {\n      foreground: '999999',\n      background: 'ddffdd',\n      token: 'meta.diff.header.to-file',\n    },\n    {\n      foreground: '4183c4',\n      token: 'meta.link',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#000000',\n    'editor.background': '#F8F8FF',\n    'editor.selectionBackground': '#B4D5FE',\n    'editor.lineHighlightBackground': '#FFFEEB',\n    'editorCursor.foreground': '#666666',\n    'editorWhitespace.foreground': '#BBBBBB',\n  },\n};\n\nexport default {\n  name: 'GitHub',\n  themeName: 'github',\n  themeData,\n};\n","const themeData = {\n  base: 'vs-dark',\n  inherit: true,\n  rules: [\n    {\n      foreground: '616e88',\n      token: 'comment',\n    },\n    {\n      foreground: '616e88',\n      fontStyle: 'bold',\n      token: 'comment.block.preprocessor',\n    },\n    {\n      foreground: '81a1c1',\n      token: 'comment.block.documentation',\n    },\n    {\n      foreground: 'd8dee9',\n      background: 'bf616a',\n      token: 'invalid.illegal',\n    },\n    {\n      foreground: '81a1c1',\n      token: 'keyword',\n    },\n    {\n      foreground: '81a1c1',\n      token: 'storage',\n    },\n    {\n      foreground: '81a1c1',\n      token: 'keyword.operator',\n    },\n    {\n      foreground: '81a1c1',\n      token: 'constant.language',\n    },\n    {\n      foreground: '81a1c1',\n      token: 'support.constant',\n    },\n    {\n      foreground: '8fbcbb',\n      token: 'storage.type',\n    },\n    {\n      foreground: '8fBcbb',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: 'd8dee9',\n      token: 'variable.other',\n    },\n    {\n      foreground: 'd8dee9',\n      token: 'variable.language',\n    },\n    {\n      foreground: '8fbcbb',\n      token: 'entity.name.type',\n    },\n    {\n      foreground: '8fbcbb',\n      fontStyle: 'bold',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: '8fbcbb',\n      token: 'support.class',\n    },\n    {\n      foreground: '8fbcbb',\n      token: 'variable.other.constant',\n    },\n    {\n      foreground: '88c0d0',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: '88c0d0',\n      token: 'support.function',\n    },\n    {\n      foreground: '88c0d0',\n      token: 'entity.name.section',\n    },\n    {\n      foreground: '5e81ac',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: 'd8dee9',\n      token: 'variable.parameter',\n    },\n    {\n      foreground: 'd8dee9',\n      token: 'support.variable',\n    },\n    {\n      foreground: 'b48ead',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: 'b48ead',\n      token: 'constant.other',\n    },\n    {\n      foreground: 'a3be8c',\n      token: 'string - string source',\n    },\n    {\n      foreground: 'ebcb8b',\n      token: 'constant.character',\n    },\n    {\n      foreground: 'ebcb8b',\n      token: 'string.regexp',\n    },\n    {\n      foreground: 'd8dee9',\n      fontStyle: 'bold',\n      token: 'constant.other.symbol',\n    },\n    {\n      fontground: 'eceff4',\n      token: 'punctuation',\n    },\n    {\n      foreground: 'bf616a',\n      token: 'markup.deleted',\n    },\n    {\n      fontStyle: 'italic',\n      token: 'markup.italic',\n    },\n    {\n      foreground: '88c0d0',\n      token: 'markup.heading',\n    },\n    {\n      foreground: 'a3be8c',\n      token: 'markup.inserted',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'markup.bold',\n    },\n    {\n      fontStyle: 'underline',\n      token: 'markup.underline',\n    },\n    {\n      foreground: '8fbcbb',\n      token: 'meta.diff.range',\n    },\n    {\n      foreground: '8fbcbb',\n      token: 'meta.diff.header.from-file',\n    },\n  ],\n  colors: {\n    'editorActiveLineNumber.foreground': '#d8dee9',\n    'editorCursor.foreground': '#d8dee9',\n    'editorHint.border': '#ebcb8b',\n    'editorHint.foreground': '#ebcb8b',\n    'editorIndentGuide.background': '#434c5e',\n    'editorIndentGuide.activeBackground': '#4c566a',\n    'editorLineNumber.foreground': '#4c566a',\n    'editorLineNumber.activeForeground': '#d8dee9',\n    'editorWhitespace.foreground': '#4c566a',\n    'editorWidget.background': '#2e3440',\n    'editorWidget.border': '#3b4252',\n    'editor.background': '#2e3440',\n    'editor.foreground': '#d8dee9',\n    'editor.hoverHighlightBackground': '#3b4252',\n    'editor.findMatchBackground': '#88c0d0',\n    'editor.findMatchHighlightBackground': '#88c0d0',\n    'editor.findRangeHighlightBackground': '#88c0d0',\n    'editor.lineHighlightBackground': '#3b4252',\n    'editor.lineHighlightBorder': '#3b4252',\n    'editor.inactiveSelectionBackground': '#434c5e',\n    'editor.selectionBackground': '#434c5e',\n    'editor.selectionHighlightBackground': '#434c5e',\n    'editor.rangeHighlightBackground': '#434c5e',\n    'editor.wordHighlightBackground': '#81a1c1',\n    'editor.wordHighlightStrongBackground': '#81a1c1',\n    'editorError.foreground': '#bf616a',\n    'editorError.border': '#bf616a',\n    'editorWarning.foreground': '#ebcb8b',\n    'editorWarning.border': '#ebcb8b',\n    'editorBracketMatch.background': '#2e3440',\n    'editorBracketMatch.border': '#88c0d0',\n    'editorCodeLens.foreground': '#4c566a',\n    'editorGroup.background': '#2e3440',\n    'editorGroup.border': '#3b4252',\n    'editorGroup.dropBackground': '#3b4252',\n    'editorGroupHeader.noTabsBackground': '#2e3440',\n    'editorGroupHeader.tabsBackground': '#2e3440',\n    'editorGroupHeader.tabsBorder': '#3b4252',\n    'editorGutter.background': '#2e3440',\n    'editorGutter.modifiedBackground': '#ebcb8b',\n    'editorGutter.addedBackground': '#a3be8c',\n    'editorGutter.deletedBackground': '#bf616a',\n    'editorHoverWidget.background': '#3b4252',\n    'editorHoverWidget.border': '#3b4252',\n    'editorLink.activeForeground': '#88c0d0',\n    'editorMarkerNavigation.background': '#5e81ac',\n    'editorMarkerNavigationError.background': '#bf616a',\n    'editorMarkerNavigationWarning.background': '#ebcb8b',\n    'editorOverviewRuler.border': '#3b4252',\n    'editorOverviewRuler.currentContentForeground': '#3b4252',\n    'editorOverviewRuler.incomingContentForeground': '#3b4252',\n    'editorOverviewRuler.findMatchForeground': '#88c0d0',\n    'editorOverviewRuler.rangeHighlightForeground': '#88c0d0',\n    'editorOverviewRuler.selectionHighlightForeground': '#88c0d0',\n    'editorOverviewRuler.wordHighlightForeground': '#88c0d0',\n    'editorOverviewRuler.wordHighlightStrongForeground': '#88c0d0',\n    'editorOverviewRuler.modifiedForeground': '#ebcb8b',\n    'editorOverviewRuler.addedForeground': '#a3be8c',\n    'editorOverviewRuler.deletedForeground': '#bf616a',\n    'editorOverviewRuler.errorForeground': '#bf616a',\n    'editorOverviewRuler.warningForeground': '#ebcb8b',\n    'editorOverviewRuler.infoForeground': '#81a1c1',\n    'editorRuler.foreground': '#434c5e',\n    'editorSuggestWidget.background': '#2e3440',\n    'editorSuggestWidget.border': '#3b4252',\n    'editorSuggestWidget.foreground': '#d8dee9',\n    'editorSuggestWidget.highlightForeground': '#88c0d0',\n    'editorSuggestWidget.selectedBackground': '#434c5e',\n  },\n};\n\nexport default {\n  name: 'Nord-Dark',\n  themeName: 'nord-dark',\n  themeData,\n};\n","const themeData = {\n  base: 'vs-dark',\n  inherit: true,\n  rules: [\n    {\n      foreground: 'abb2bf',\n      token: 'text',\n    },\n    {\n      foreground: 'abb2bf',\n      token: 'source',\n    },\n    {\n      foreground: 'adb7c9',\n      token: 'variable.parameter.function',\n    },\n    {\n      foreground: '5f697a',\n      fontStyle: ' italic',\n      token: 'comment',\n    },\n    {\n      foreground: '5f697a',\n      fontStyle: ' italic',\n      token: 'punctuation.definition.comment',\n    },\n    {\n      foreground: 'adb7c9',\n      token: 'none',\n    },\n    {\n      foreground: 'adb7c9',\n      token: 'keyword.operator',\n    },\n    {\n      foreground: 'cd74e8',\n      token: 'keyword',\n    },\n    {\n      foreground: 'eb6772',\n      token: 'variable',\n    },\n    {\n      foreground: '5cb3fa',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: '5cb3fa',\n      token: 'meta.require',\n    },\n    {\n      foreground: '5cb3fa',\n      token: 'support.function.any-method',\n    },\n    {\n      foreground: 'f0c678',\n      token: 'support.class',\n    },\n    {\n      foreground: 'f0c678',\n      token: 'entity.name.class',\n    },\n    {\n      foreground: 'f0c678',\n      token: 'entity.name.type.class',\n    },\n    {\n      foreground: 'adb7c9',\n      token: 'meta.class',\n    },\n    {\n      foreground: '5cb3fa',\n      token: 'keyword.other.special-method',\n    },\n    {\n      foreground: 'cd74e8',\n      token: 'storage',\n    },\n    {\n      foreground: '5ebfcc',\n      token: 'support.function',\n    },\n    {\n      foreground: '9acc76',\n      token: 'string',\n    },\n    {\n      foreground: '9acc76',\n      token: 'constant.other.symbol',\n    },\n    {\n      foreground: '9acc76',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: 'db9d63',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: 'db9d63',\n      token: 'none',\n    },\n    {\n      foreground: 'db9d63',\n      token: 'none',\n    },\n    {\n      foreground: 'db9d63',\n      token: 'constant',\n    },\n    {\n      foreground: 'eb6772',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: 'db9d63',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: 'db9d63',\n      token: 'entity.other.attribute-name.id',\n    },\n    {\n      foreground: 'db9d63',\n      token: 'punctuation.definition.entity',\n    },\n    {\n      foreground: 'cd74e8',\n      token: 'meta.selector',\n    },\n    {\n      foreground: 'db9d63',\n      token: 'none',\n    },\n    {\n      foreground: '5cb3fa',\n      token: 'markup.heading punctuation.definition.heading',\n    },\n    {\n      foreground: '5cb3fa',\n      token: 'entity.name.section',\n    },\n    {\n      foreground: 'db9d63',\n      token: 'keyword.other.unit',\n    },\n    {\n      foreground: 'f0c678',\n      token: 'markup.bold',\n    },\n    {\n      foreground: 'f0c678',\n      token: 'punctuation.definition.bold',\n    },\n    {\n      foreground: 'cd74e8',\n      token: 'markup.italic',\n    },\n    {\n      foreground: 'cd74e8',\n      token: 'punctuation.definition.italic',\n    },\n    {\n      foreground: '9acc76',\n      token: 'markup.raw.inline',\n    },\n    {\n      foreground: 'eb6772',\n      token: 'string.other.link',\n    },\n    {\n      foreground: 'eb6772',\n      token: 'punctuation.definition.string.end.markdown',\n    },\n    {\n      foreground: 'db9d63',\n      token: 'meta.link',\n    },\n    {\n      foreground: 'eb6772',\n      token: 'markup.list',\n    },\n    {\n      foreground: 'db9d63',\n      token: 'markup.quote',\n    },\n    {\n      foreground: 'adb7c9',\n      background: '515151',\n      token: 'meta.separator',\n    },\n    {\n      foreground: '9acc76',\n      token: 'markup.inserted',\n    },\n    {\n      foreground: 'eb6772',\n      token: 'markup.deleted',\n    },\n    {\n      foreground: 'cd74e8',\n      token: 'markup.changed',\n    },\n    {\n      foreground: '5ebfcc',\n      token: 'constant.other.color',\n    },\n    {\n      foreground: '5ebfcc',\n      token: 'string.regexp',\n    },\n    {\n      foreground: '5ebfcc',\n      token: 'constant.character.escape',\n    },\n    {\n      foreground: 'c94e42',\n      token: 'punctuation.section.embedded',\n    },\n    {\n      foreground: 'c94e42',\n      token: 'variable.interpolation',\n    },\n    {\n      foreground: 'ffffff',\n      background: 'e05252',\n      token: 'invalid.illegal',\n    },\n    {\n      foreground: '2d2d2d',\n      background: 'f99157',\n      token: 'invalid.broken',\n    },\n    {\n      foreground: '2c323d',\n      background: 'd27b53',\n      token: 'invalid.deprecated',\n    },\n    {\n      foreground: '2c323d',\n      background: '747369',\n      token: 'invalid.unimplemented',\n    },\n    {\n      foreground: 'eb6772',\n      token:\n        'source.json meta.structure.dictionary.json string.quoted.double.json',\n    },\n    {\n      foreground: '9acc76',\n      token:\n        'source.json meta.structure.dictionary.json meta.structure.dictionary.value.json string.quoted.double.json',\n    },\n    {\n      foreground: 'eb6772',\n      token:\n        'source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json string.quoted.double.json',\n    },\n    {\n      foreground: '9acc76',\n      token:\n        'source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json string.quoted.double.json',\n    },\n    {\n      foreground: 'cd74e8',\n      token:\n        'text.html.laravel-blade source.php.embedded.line.html entity.name.tag.laravel-blade',\n    },\n    {\n      foreground: 'cd74e8',\n      token:\n        'text.html.laravel-blade source.php.embedded.line.html support.constant.laravel-blade',\n    },\n    {\n      foreground: 'db9d63',\n      token:\n        'source.python meta.function.python meta.function.parameters.python variable.parameter.function.python',\n    },\n    {\n      foreground: '5ebfcc',\n      token: 'source.python meta.function-call.python support.type.python',\n    },\n    {\n      foreground: 'cd74e8',\n      token: 'source.python keyword.operator.logical.python',\n    },\n    {\n      foreground: 'f0c678',\n      token:\n        'source.python meta.class.python punctuation.definition.inheritance.begin.python',\n    },\n    {\n      foreground: 'f0c678',\n      token:\n        'source.python meta.class.python punctuation.definition.inheritance.end.python',\n    },\n    {\n      foreground: 'db9d63',\n      token:\n        'source.python meta.function-call.python meta.function-call.arguments.python variable.parameter.function.python',\n    },\n    {\n      foreground: 'db9d63',\n      token:\n        'text.html.basic source.php.embedded.block.html support.constant.std.php',\n    },\n    {\n      foreground: 'f0c678',\n      token:\n        'text.html.basic source.php.embedded.block.html meta.namespace.php entity.name.type.namespace.php',\n    },\n    {\n      foreground: 'db9d63',\n      token: 'source.js meta.function.js support.constant.js',\n    },\n    {\n      foreground: 'cd74e8',\n      token:\n        'text.html.basic` source.php.embedded.block.html constant.other.php',\n    },\n    {\n      foreground: 'db9d63',\n      token:\n        'text.html.basic source.php.embedded.block.html support.other.namespace.php',\n    },\n    {\n      foreground: 'adb7c9',\n      token:\n        'text.tex.latex meta.function.environment.math.latex string.other.math.block.environment.latex meta.definition.label.latex variable.parameter.definition.label.latex',\n    },\n    {\n      foreground: 'cd74e8',\n      fontStyle: ' italic',\n      token: 'text.tex.latex meta.function.emph.latex markup.italic.emph.latex',\n    },\n    {\n      foreground: 'adb7c9',\n      token: 'source.js variable.other.readwrite.js',\n    },\n    {\n      foreground: 'adb7c9',\n      token:\n        'source.js meta.function-call.with-arguments.js variable.function.js',\n    },\n    {\n      foreground: 'adb7c9',\n      token:\n        'source.js meta.group.braces.round meta.group.braces.curly meta.function-call.method.without-arguments.js variable.function.js',\n    },\n    {\n      foreground: 'adb7c9',\n      token:\n        'source.js meta.group.braces.round meta.group.braces.curly variable.other.object.js',\n    },\n    {\n      foreground: 'adb7c9',\n      token:\n        'source.js meta.group.braces.round meta.group.braces.curly constant.other.object.key.js string.unquoted.label.js',\n    },\n    {\n      foreground: 'adb7c9',\n      token:\n        'source.js meta.group.braces.round meta.group.braces.curly constant.other.object.key.js punctuation.separator.key-value.js',\n    },\n    {\n      foreground: 'adb7c9',\n      token:\n        'source.js meta.group.braces.round meta.group.braces.curly meta.function-call.method.with-arguments.js variable.function.js',\n    },\n    {\n      foreground: 'adb7c9',\n      token:\n        'source.js meta.function-call.method.with-arguments.js variable.function.js',\n    },\n    {\n      foreground: 'adb7c9',\n      token:\n        'source.js meta.function-call.method.without-arguments.js variable.function.js',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#6c7079',\n    'editor.background': '#2B303B',\n    'editor.selectionBackground': '#bbccf51b',\n    'editor.inactiveSelectionBackground': '#bbccf51b',\n    'editor.lineHighlightBackground': '#8cc2fc0b',\n    'editorCursor.foreground': '#528bff',\n    'editorWhitespace.foreground': '#747369',\n    'editorIndentGuide.background': '#464c55',\n    'editorIndentGuide.activeBackground': '#464c55',\n    'editor.selectionHighlightBorder': '#bbccf51b',\n  },\n};\n\nexport default {\n  name: 'One-Dark',\n  themeName: 'one-dark',\n  themeData,\n};\n","// @flow\nimport TomorrowNight from './TomorrowNight';\nimport Monokai from './Monokai';\nimport Tomorrow from './Tomorrow';\nimport SolarizedDark from './SolarizedDark';\nimport SolarizedLight from './SolarizedLight';\nimport VibrantInk from './VibrantInk';\nimport GitHub from './GitHub';\nimport NordDark from './NordDark';\nimport OneDark from './OneDark';\n\ntype CodeEditorTheme = {|\n  name: string,\n  themeName: string,\n  themeData?: any,\n|};\n\n// Want to add a new theme? Grab a theme made for Visual Studio Code (Monaco Editor)\n// (for example on https://bitwiser.in/monaco-themes/). Copy an existing file (like Monokai.js),\n// replace themeData, update the name, and finally add it to this list\n// (+import it at the top of the file):\nconst themes: Array<CodeEditorTheme> = [\n  // Built-in Monaco editor themes\n  {\n    name: 'Visual Studio',\n    themeName: 'vs',\n  },\n  {\n    name: 'Visual Studio Dark',\n    themeName: 'vs-dark',\n  },\n  // Third parties themes\n  GitHub,\n  Monokai,\n  SolarizedDark,\n  SolarizedLight,\n  Tomorrow,\n  TomorrowNight,\n  VibrantInk,\n  NordDark,\n  OneDark,\n];\n\nexport const getAllThemes = () => themes;\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M3,20.5V3.5C3,2.91 3.34,2.39 3.84,2.15L13.69,12L3.84,21.85C3.34,21.6 3,21.09 3,20.5M16.81,15.12L6.05,21.34L14.54,12.85L16.81,15.12M20.16,10.81C20.5,11.08 20.75,11.5 20.75,12C20.75,12.5 20.53,12.9 20.18,13.18L17.89,14.5L15.39,12L17.89,9.5L20.16,10.81M6.05,2.66L16.81,8.88L14.54,11.15L6.05,2.66Z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C7.4,22 3.55,18.92 2.36,14.73L6.19,16.31C6.45,17.6 7.6,18.58 8.97,18.58C10.53,18.58 11.8,17.31 11.8,15.75V15.62L15.2,13.19H15.28C17.36,13.19 19.05,11.5 19.05,9.42C19.05,7.34 17.36,5.65 15.28,5.65C13.2,5.65 11.5,7.34 11.5,9.42V9.47L9.13,12.93L8.97,12.92C8.38,12.92 7.83,13.1 7.38,13.41L2,11.2C2.43,6.05 6.73,2 12,2M8.28,17.17C9.08,17.5 10,17.13 10.33,16.33C10.66,15.53 10.28,14.62 9.5,14.29L8.22,13.76C8.71,13.58 9.26,13.57 9.78,13.79C10.31,14 10.72,14.41 10.93,14.94C11.15,15.46 11.15,16.04 10.93,16.56C10.5,17.64 9.23,18.16 8.15,17.71C7.65,17.5 7.27,17.12 7.06,16.67L8.28,17.17M17.8,9.42C17.8,10.81 16.67,11.94 15.28,11.94C13.9,11.94 12.77,10.81 12.77,9.42A2.5,2.5 0 0,1 15.28,6.91C16.67,6.91 17.8,8.04 17.8,9.42M13.4,9.42C13.4,10.46 14.24,11.31 15.29,11.31C16.33,11.31 17.17,10.46 17.17,9.42C17.17,8.38 16.33,7.53 15.29,7.53C14.24,7.53 13.4,8.38 13.4,9.42Z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M22.46,6C21.69,6.35 20.86,6.58 20,6.69C20.88,6.16 21.56,5.32 21.88,4.31C21.05,4.81 20.13,5.16 19.16,5.36C18.37,4.5 17.26,4 16,4C13.65,4 11.73,5.92 11.73,8.29C11.73,8.63 11.77,8.96 11.84,9.27C8.28,9.09 5.11,7.38 3,4.79C2.63,5.42 2.42,6.16 2.42,6.94C2.42,8.43 3.17,9.75 4.33,10.5C3.62,10.5 2.96,10.3 2.38,10C2.38,10 2.38,10 2.38,10.03C2.38,12.11 3.86,13.85 5.82,14.24C5.46,14.34 5.08,14.39 4.69,14.39C4.42,14.39 4.15,14.36 3.89,14.31C4.43,16 6,17.26 7.89,17.29C6.43,18.45 4.58,19.13 2.56,19.13C2.22,19.13 1.88,19.11 1.54,19.07C3.44,20.29 5.7,21 8.12,21C16,21 20.33,14.46 20.33,8.79C20.33,8.6 20.33,8.42 20.32,8.23C21.16,7.63 21.88,6.87 22.46,6Z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M7.8,2H16.2C19.4,2 22,4.6 22,7.8V16.2A5.8,5.8 0 0,1 16.2,22H7.8C4.6,22 2,19.4 2,16.2V7.8A5.8,5.8 0 0,1 7.8,2M7.6,4A3.6,3.6 0 0,0 4,7.6V16.4C4,18.39 5.61,20 7.6,20H16.4A3.6,3.6 0 0,0 20,16.4V7.6C20,5.61 18.39,4 16.4,4H7.6M17.25,5.5A1.25,1.25 0 0,1 18.5,6.75A1.25,1.25 0 0,1 17.25,8A1.25,1.25 0 0,1 16,6.75A1.25,1.25 0 0,1 17.25,5.5M12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9Z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M11.64 5.93H13.07V10.21H11.64M15.57 5.93H17V10.21H15.57M7 2L3.43 5.57V18.43H7.71V22L11.29 18.43H14.14L20.57 12V2M19.14 11.29L16.29 14.14H13.43L10.93 16.64V14.14H7.71V3.43H19.14Z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M2,3H11V12H2V3M11,22H2V13H11V22M21,3V12H12V3H21M21,22H12V13H21V22Z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M18.71,19.5C17.88,20.74 17,21.95 15.66,21.97C14.32,22 13.89,21.18 12.37,21.18C10.84,21.18 10.37,21.95 9.1,22C7.79,22.05 6.8,20.68 5.96,19.47C4.25,17 2.94,12.45 4.7,9.39C5.57,7.87 7.13,6.91 8.82,6.88C10.1,6.86 11.32,7.75 12.11,7.75C12.89,7.75 14.37,6.68 15.92,6.84C16.57,6.87 18.39,7.1 19.56,8.82C19.47,8.88 17.39,10.1 17.41,12.63C17.44,15.65 20.06,16.66 20.09,16.67C20.06,16.74 19.67,18.11 18.71,19.5M13,3.5C13.73,2.67 14.94,2.04 15.94,2C16.07,3.17 15.6,4.35 14.9,5.19C14.21,6.04 13.07,6.7 11.95,6.61C11.8,5.46 12.36,4.26 13,3.5Z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\nimport { sendShowcaseGameLinkOpened } from '../Utils/Analytics/EventSender';\nimport Window from '../Utils/Window';\nimport {\n  type ShowcasedGame,\n  type ShowcasedGameLink,\n} from '../Utils/GDevelopServices/Game';\nimport { ColumnStackLayout, ResponsiveLineStackLayout } from '../UI/Layout';\nimport { Spacer } from '../UI/Grid';\nimport RaisedButton from '../UI/RaisedButton';\nimport GooglePlay from '../UI/CustomSvgIcons/GooglePlay';\nimport Steam from '../UI/CustomSvgIcons/Steam';\nimport Twitter from '../UI/CustomSvgIcons/Twitter';\nimport Instagram from '../UI/CustomSvgIcons/Instagram';\nimport Twitch from '../UI/CustomSvgIcons/Twitch';\nimport ItchIo from '../UI/CustomSvgIcons/ItchIo';\nimport Microsoft from '../UI/CustomSvgIcons/Microsoft';\nimport Apple from '../UI/CustomSvgIcons/Apple';\nimport { useResponsiveWindowWidth } from '../UI/Reponsive/ResponsiveWindowMeasurer';\n\nconst getFullUrl = url =>\n  url.startsWith('/') ? 'https://gdevelop-app.com' + url : url;\n\nconst getLinkIconAndLabel = (url: string, type: string) => {\n  switch (type) {\n    // Supported links:\n    case '':\n      return {\n        icon: <PlayArrowIcon />,\n        label: <Trans>Play or download</Trans>,\n      };\n    case 'learn-more':\n      return { icon: null, label: <Trans>Learn more</Trans> };\n    case 'download-win-mac-linux':\n    case 'download':\n      return { icon: <GetAppIcon />, label: <Trans>Download</Trans> };\n    case 'play':\n      return { icon: <PlayArrowIcon />, label: <Trans>Play</Trans> };\n    // Officially supported stores/websites/social medias:\n    case 'App Store':\n      return { icon: <Apple />, label: 'iOS' };\n    case 'Play Store':\n      return { icon: <GooglePlay />, label: 'Android' };\n    case 'Steam':\n      return { icon: <Steam />, label: 'Steam' };\n    case 'Trailer':\n      return { icon: <YouTubeIcon />, label: <Trans>Trailer</Trans> };\n    case 'itch.io':\n      return { icon: <ItchIo />, label: 'itch.io' };\n    case 'Game Jolt':\n      return { icon: <FlashOnIcon />, label: 'Game Jolt' };\n    case 'Twitter':\n      return { icon: <Twitter />, label: 'Twitter' };\n    case 'Microsoft Store':\n      return { icon: <Microsoft />, label: 'Microsoft Store' };\n    case 'Instagram':\n      return { icon: <Instagram />, label: 'Instagram' };\n    case 'Twitch':\n      return { icon: <Twitch />, label: 'Twitch' };\n    default:\n      return { icon: null, label: type };\n  }\n};\n\nconst LinkButton = ({\n  link,\n  showcasedGame,\n}: {|\n  link: ShowcasedGameLink,\n  showcasedGame: ShowcasedGame,\n|}) => {\n  const { url, type } = link;\n  return (\n    <RaisedButton\n      key={type + '-' + url}\n      primary\n      {...getLinkIconAndLabel(url, type)}\n      onClick={() => {\n        sendShowcaseGameLinkOpened(showcasedGame.title, type);\n        Window.openExternalURL(getFullUrl(url));\n      }}\n    />\n  );\n};\n\nconst renderLayout = (\n  children: Array<React.Node>,\n  forceColumn: boolean\n): React.Node =>\n  forceColumn ? (\n    <ColumnStackLayout justifyContent=\"flex-end\" noMargin>\n      {children}\n    </ColumnStackLayout>\n  ) : (\n    <ResponsiveLineStackLayout justifyContent=\"flex-end\" noColumnMargin>\n      {children}\n    </ResponsiveLineStackLayout>\n  );\n\nconst ShowcasedGameButton = ({\n  showcasedGame,\n  forceColumn = false,\n}: {|\n  showcasedGame: ShowcasedGame,\n  forceColumn?: boolean,\n|}): React.Node => {\n  const { links } = showcasedGame;\n\n  const windowWidth = useResponsiveWindowWidth();\n\n  const firstLinks = links.slice(0, 3);\n  const otherLinks = links.slice(3);\n  return (\n    <>\n      {renderLayout(\n        firstLinks.map((link, index) => (\n          <LinkButton key={index} link={link} showcasedGame={showcasedGame} />\n        )),\n        forceColumn\n      )}\n      {otherLinks.length > 0 && (\n        <>\n          {(windowWidth === 'small' || forceColumn) && <Spacer />}\n          {renderLayout(\n            otherLinks.map((link, index) => (\n              <LinkButton\n                key={index}\n                link={link}\n                showcasedGame={showcasedGame}\n              />\n            )),\n            forceColumn\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ShowcasedGameButton;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport HelpButton from '../../UI/HelpButton';\nimport FlatButton from '../../UI/FlatButton';\nimport Builds from '.';\nimport { type AuthenticatedUser } from '../../Profile/AuthenticatedUserContext';\nimport useForceUpdate from '../../Utils/UseForceUpdate';\nimport { type Game } from '../../Utils/GDevelopServices/Game';\n\ntype Props = {|\n  authenticatedUser: AuthenticatedUser,\n  game: Game,\n  open: boolean,\n  onClose: () => void,\n  onGameUpdated: () => void,\n|};\n\nconst BuildsDialog = ({\n  authenticatedUser,\n  game,\n  open,\n  onClose,\n  onGameUpdated,\n}: Props) => {\n  const forceUpdate = useForceUpdate();\n  if (!open) return null;\n\n  return (\n    <Dialog\n      title={<Trans>Your game builds</Trans>}\n      onRequestClose={onClose}\n      actions={[\n        <FlatButton\n          label={<Trans>Close</Trans>}\n          key=\"close\"\n          primary={false}\n          onClick={onClose}\n        />,\n      ]}\n      secondaryActions={[\n        <HelpButton key=\"help\" helpPagePath={'/publishing'} />,\n      ]}\n      cannotBeDismissed={false}\n      open={open}\n      noMargin\n    >\n      <Builds\n        // Force the Dialog repositioning\n        onBuildsUpdated={forceUpdate}\n        authenticatedUser={authenticatedUser}\n        game={game}\n        onGameUpdated={onGameUpdated}\n      />\n    </Dialog>\n  );\n};\n\nexport default BuildsDialog;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Column, Line } from '../UI/Grid';\nimport { type Limit, type Subscription } from '../Utils/GDevelopServices/Usage';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport Text from '../UI/Text';\n\ntype Props = {|\n  subscription: ?Subscription,\n  limit: ?Limit,\n  onChangeSubscription: Function,\n|};\n\nexport default ({ subscription, limit, onChangeSubscription }: Props) => {\n  if (!limit) return <PlaceholderLoader />;\n  const hasSubscription = subscription && !!subscription.planId;\n  const noSubscription = subscription && !subscription.planId;\n\n  return (\n    <Column noMargin>\n      <Text>\n        <Trans>\n          You have {Math.max(limit.max - limit.current, 0)} remaining builds for\n          today (out of {limit.max}).\n        </Trans>\n      </Text>\n      {hasSubscription && limit.limitReached && (\n        <Text>\n          <Trans>\n            Need more power? You can upgrade to a new plan to increase the\n            limit!\n          </Trans>\n        </Text>\n      )}\n      {hasSubscription && limit.limitReached && (\n        <Line justifyContent=\"center\" alignItems=\"center\">\n          <RaisedButton\n            label={<Trans>Upgrade my account</Trans>}\n            onClick={onChangeSubscription}\n            primary\n          />\n        </Line>\n      )}\n      {noSubscription && (\n        <Text>\n          <Trans>\n            You don't have a subscription. Get one to increase the limits!\n          </Trans>\n        </Text>\n      )}\n      {noSubscription && (\n        <Line justifyContent=\"center\" alignItems=\"center\">\n          <RaisedButton\n            label={<Trans>Get a subscription</Trans>}\n            onClick={onChangeSubscription}\n            primary\n          />\n        </Line>\n      )}\n    </Column>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Line, Spacer, Column } from '../../UI/Grid';\nimport BuildProgressAndActions from './BuildProgressAndActions';\nimport { type Build } from '../../Utils/GDevelopServices/Build';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport Text from '../../UI/Text';\nimport AlertMessage from '../../UI/AlertMessage';\n\nconst styles = {\n  stepper: { flex: 1 },\n  linearProgress: { flex: 1 },\n};\n\nexport type BuildStep =\n  | ''\n  | 'register'\n  | 'export'\n  | 'resources-download'\n  | 'compress'\n  | 'upload'\n  | 'waiting-for-build'\n  | 'build'\n  | 'done';\n\ntype Props = {|\n  exportStep: BuildStep,\n  build: ?Build,\n  stepMaxProgress: number,\n  stepCurrentProgress: number,\n  errored: boolean,\n  showSeeAllMyBuildsExplanation?: boolean,\n  hasBuildStep: boolean,\n|};\n\n/**\n * Can be used in an exporter to show the overall progress of a build\n * (including local archiving/upload steps and remote build progress)\n */\nexport default ({\n  exportStep,\n  build,\n  stepMaxProgress,\n  stepCurrentProgress,\n  errored,\n  hasBuildStep,\n  showSeeAllMyBuildsExplanation,\n}: Props) => {\n  const getActiveStep = React.useCallback(\n    () =>\n      exportStep === 'register' ||\n      exportStep === 'export' ||\n      exportStep === 'resources-download'\n        ? 0\n        : exportStep === 'compress' || exportStep === 'upload'\n        ? 1\n        : exportStep === 'waiting-for-build' || exportStep === 'build'\n        ? 2\n        : exportStep === 'done'\n        ? hasBuildStep\n          ? 2\n          : 1\n        : -1,\n    [exportStep, hasBuildStep]\n  );\n\n  return (\n    <Stepper\n      activeStep={getActiveStep()}\n      orientation=\"vertical\"\n      style={styles.stepper}\n    >\n      <Step>\n        <StepLabel>\n          <Trans>Game export</Trans>\n        </StepLabel>\n        <StepContent>\n          {errored ? (\n            <AlertMessage kind=\"error\">\n              <Trans>Can't properly export the game.</Trans>{' '}\n              <Trans>\n                Please check your internet connection or try again later.\n              </Trans>\n            </AlertMessage>\n          ) : exportStep === 'resources-download' ? (\n            <Column expand noMargin>\n              <Text>\n                <Trans>Downloading game resources...</Trans>\n              </Text>\n              <Line expand>\n                <LinearProgress\n                  style={styles.linearProgress}\n                  value={\n                    stepMaxProgress > 0\n                      ? (stepCurrentProgress / stepMaxProgress) * 100\n                      : 0\n                  }\n                  variant=\"determinate\"\n                />\n              </Line>\n            </Column>\n          ) : (\n            <Column expand noMargin>\n              <Text>\n                <Trans>Export in progress...</Trans>\n              </Text>\n              <Line expand>\n                <LinearProgress style={styles.linearProgress} />\n              </Line>\n            </Column>\n          )}\n        </StepContent>\n      </Step>\n      {hasBuildStep && (\n        <Step>\n          <StepLabel>\n            <Trans>Upload to build service</Trans>\n          </StepLabel>\n          <StepContent>\n            {errored ? (\n              <AlertMessage kind=\"error\">\n                <Trans>Can't upload your game to the build service.</Trans>{' '}\n                <Trans>\n                  Please check your internet connection or try again later.\n                </Trans>\n              </AlertMessage>\n            ) : exportStep === 'compress' ? (\n              <Line alignItems=\"center\">\n                <CircularProgress size={20} />\n                <Spacer />\n                <Text>\n                  <Trans>Compressing before upload...</Trans>\n                </Text>\n              </Line>\n            ) : (\n              <Line alignItems=\"center\" expand>\n                <LinearProgress\n                  style={styles.linearProgress}\n                  value={\n                    stepMaxProgress > 0\n                      ? (stepCurrentProgress / stepMaxProgress) * 100\n                      : 0\n                  }\n                  variant=\"determinate\"\n                />\n              </Line>\n            )}\n          </StepContent>\n        </Step>\n      )}\n      {hasBuildStep && (\n        <Step>\n          <StepLabel>\n            <Trans>Build and download</Trans>\n          </StepLabel>\n          <StepContent>\n            {errored && (\n              <AlertMessage kind=\"error\">\n                <Trans>\n                  Build could not start or errored. Please check your internet\n                  connection or try again later.\n                </Trans>\n              </AlertMessage>\n            )}\n            {!build && !errored && (\n              <Text>\n                <Trans>Build is starting...</Trans>\n              </Text>\n            )}\n            {build && <BuildProgressAndActions build={build} />}\n            {showSeeAllMyBuildsExplanation && (\n              <EmptyMessage>\n                <Trans>\n                  If you close this window while the build is being done, you\n                  can see its progress and download the game later by clicking\n                  on See All My Builds below.\n                </Trans>\n              </EmptyMessage>\n            )}\n          </StepContent>\n        </Step>\n      )}\n      {!hasBuildStep && (\n        <Step>\n          <StepLabel>\n            <Trans>Done</Trans>\n          </StepLabel>\n          <StepContent />\n        </Step>\n      )}\n    </Stepper>\n  );\n};\n","// @flow\n\nimport React, { Component } from 'react';\nimport { I18n } from '@lingui/react';\nimport { t, Trans } from '@lingui/macro';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { sendExportLaunched } from '../../Utils/Analytics/EventSender';\nimport { type Build } from '../../Utils/GDevelopServices/Build';\nimport { type AuthenticatedUser } from '../../Profile/AuthenticatedUserContext';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport CreateProfile from '../../Profile/CreateProfile';\nimport LimitDisplayer from '../../Profile/LimitDisplayer';\nimport {\n  displayProjectErrorsBox,\n  getProjectPropertiesErrors,\n} from '../../Utils/ProjectErrorsChecker';\nimport { type Limit } from '../../Utils/GDevelopServices/Usage';\nimport BuildsWatcher from '../Builds/BuildsWatcher';\nimport BuildStepsProgress, {\n  type BuildStep,\n} from '../Builds/BuildStepsProgress';\nimport {\n  registerGame,\n  getGame,\n  type Game,\n  setGameUserAcls,\n  getAclsFromUserIds,\n} from '../../Utils/GDevelopServices/Game';\nimport { type ExportPipeline } from '../ExportPipeline.flow';\nimport { GameRegistration } from '../../GameDashboard/GameRegistration';\nimport DismissableAlertMessage from '../../UI/DismissableAlertMessage';\nimport {\n  addCreateBadgePreHookIfNotClaimed,\n  TRIVIAL_FIRST_WEB_EXPORT,\n} from '../../Utils/GDevelopServices/Badge';\n\ntype State = {|\n  exportStep: BuildStep,\n  compressionOutput: any,\n  build: ?Build,\n  stepCurrentProgress: number,\n  stepMaxProgress: number,\n  errored: boolean,\n  exportState: any,\n  doneFooterOpen: boolean,\n|};\n\ntype Props = {|\n  project: gdProject,\n  onSaveProject: () => Promise<void>,\n  onChangeSubscription: () => void,\n  authenticatedUser: AuthenticatedUser,\n  exportPipeline: ExportPipeline<any, any, any, any, any>,\n  setIsNavigationDisabled: (isNavigationDisabled: boolean) => void,\n  onGameUpdated: (game: Game) => void,\n|};\n\n/**\n * A generic UI to launch, monitor the progres and get the result\n * of an export.\n */\nexport default class ExportLauncher extends Component<Props, State> {\n  state = {\n    exportStep: '',\n    build: null,\n    compressionOutput: null,\n    stepCurrentProgress: 0,\n    stepMaxProgress: 0,\n    doneFooterOpen: false,\n    errored: false,\n    exportState: this.props.exportPipeline.getInitialExportState(\n      this.props.project\n    ),\n  };\n  buildsWatcher = new BuildsWatcher();\n  launchWholeExport: () => Promise<void>;\n\n  componentWillUnmount() {\n    this.buildsWatcher.stop();\n  }\n\n  constructor(props: Props) {\n    super(props);\n    this._setupAchievementHook();\n  }\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    this._setupAchievementHook();\n    if (\n      prevState.exportStep !== this.state.exportStep ||\n      prevState.errored !== this.state.errored\n    ) {\n      this.props.setIsNavigationDisabled(\n        this.props.exportPipeline.isNavigationDisabled(\n          this.state.exportStep,\n          this.state.errored\n        )\n      );\n    }\n  }\n\n  _setupAchievementHook = () => {\n    if (this.props.exportPipeline.name.includes('web')) {\n      this.launchWholeExport = addCreateBadgePreHookIfNotClaimed(\n        this.props.authenticatedUser,\n        TRIVIAL_FIRST_WEB_EXPORT,\n        this._launchWholeExport\n      );\n    } else {\n      this.launchWholeExport = this._launchWholeExport;\n    }\n  };\n\n  _updateStepProgress = (\n    stepCurrentProgress: number,\n    stepMaxProgress: number\n  ) =>\n    this.setState({\n      stepCurrentProgress,\n      stepMaxProgress,\n    });\n\n  _startBuildWatch = (authenticatedUser: AuthenticatedUser) => {\n    if (!this.state.build) return;\n\n    this.buildsWatcher.start({\n      authenticatedUser,\n      builds: [this.state.build],\n      onBuildUpdated: (build: Build) => {\n        this.setState({ build });\n        if (build.status !== 'pending') {\n          authenticatedUser.onRefreshUserProfile();\n        }\n      },\n    });\n  };\n\n  tryUpdateAuthors = async () => {\n    const profile = this.props.authenticatedUser.profile;\n    if (profile) {\n      const authorAcls = getAclsFromUserIds(\n        this.props.project.getAuthorIds().toJSArray()\n      );\n\n      try {\n        await setGameUserAcls(\n          this.props.authenticatedUser.getAuthorizationHeader,\n          profile.id,\n          this.props.project.getProjectUuid(),\n          { author: authorAcls }\n        );\n      } catch (e) {\n        // Best effort call, do not prevent exporting the game.\n        console.error(e);\n      }\n    }\n  };\n\n  registerGameIfNot = async () => {\n    const profile = this.props.authenticatedUser.profile;\n    const getAuthorizationHeader = this.props.authenticatedUser\n      .getAuthorizationHeader;\n    const gameId = this.props.project.getProjectUuid();\n    if (profile) {\n      const userId = profile.id;\n      try {\n        // Try to fetch the game to see if it's registered but do not do anything with it.\n        await getGame(getAuthorizationHeader, userId, gameId);\n      } catch (err) {\n        if (err.response.status === 404) {\n          // If the game is not registered, register it before launching the export.\n          const authorName =\n            this.props.project.getAuthor() || 'Unspecified publisher';\n          const gameName = this.props.project.getName() || 'Untitled game';\n          const game = await registerGame(getAuthorizationHeader, userId, {\n            gameId,\n            authorName,\n            gameName,\n          });\n          // We don't await for the authors update, as it is not required for publishing.\n          this.tryUpdateAuthors();\n          this.props.onGameUpdated(game);\n        }\n      }\n    }\n  };\n\n  _launchWholeExport = async () => {\n    const t = str => str; //TODO;\n    const { project, exportPipeline, authenticatedUser } = this.props;\n    sendExportLaunched(exportPipeline.name);\n\n    if (!displayProjectErrorsBox(t, getProjectPropertiesErrors(t, project)))\n      return;\n\n    const getErrorMessage = () => {\n      switch (this.state.exportStep) {\n        case 'export':\n          return t('Error while exporting the game.');\n        case 'resources-download':\n          return t(\n            'Error while downloading the game resources. Check your internet connection and that all resources of the game are valid in the Resources editor.'\n          );\n        case 'compress':\n          return t('Error while compressing the game.');\n        case 'upload':\n          return t(\n            'Error while uploading the game. Check your internet connection or try again later.'\n          );\n        case 'waiting-for-build':\n          return t(\n            'Error while building the game. Check the logs of the build for more details.'\n          );\n        case 'build':\n          return t(\n            'Error while building of the game. Check the logs of the build for more details.'\n          );\n        default:\n          return t(\n            'Error while building the game. Try again later. Your internet connection may be slow or one of your resources may be corrupted.'\n          );\n      }\n    };\n\n    const handleError = (err: Error) => {\n      if (!this.state.errored) {\n        this.setState({\n          errored: true,\n        });\n        showErrorBox({\n          message:\n            getErrorMessage() + (err.message ? `\\n\\n${err.message}` : ''),\n          rawError: {\n            exportStep: this.state.exportStep,\n            rawError: err,\n          },\n          errorId: 'export-error',\n        });\n      }\n    };\n\n    const setStep = (step: BuildStep) => this.setState({ exportStep: step });\n\n    try {\n      setStep('register');\n      // We await for this call, allowing to link the build to the game just registered.\n      await this.registerGameIfNot();\n    } catch {\n      // But if it fails, we don't prevent building the game.\n      console.warn('Error while registering the game - ignoring it.');\n    }\n\n    try {\n      const exportPipelineContext = {\n        project,\n        updateStepProgress: this._updateStepProgress,\n        exportState: this.state.exportState,\n      };\n      setStep('export');\n      this.setState({\n        stepCurrentProgress: 0,\n        stepMaxProgress: 0,\n        errored: false,\n        build: null,\n      });\n      const preparedExporter = await exportPipeline.prepareExporter(\n        exportPipelineContext\n      );\n      const exportOutput = await exportPipeline.launchExport(\n        exportPipelineContext,\n        preparedExporter\n      );\n      setStep('resources-download');\n      const resourcesDownloadOutput = await exportPipeline.launchResourcesDownload(\n        exportPipelineContext,\n        exportOutput\n      );\n      setStep('compress');\n      const compressionOutput = await exportPipeline.launchCompression(\n        exportPipelineContext,\n        resourcesDownloadOutput\n      );\n      const { launchUpload, launchOnlineBuild } = exportPipeline;\n      if (!!launchUpload && !!launchOnlineBuild) {\n        setStep('upload');\n        const uploadBucketKey = await launchUpload(\n          exportPipelineContext,\n          compressionOutput\n        );\n        setStep('waiting-for-build');\n        const build = await launchOnlineBuild(\n          this.state.exportState,\n          authenticatedUser,\n          uploadBucketKey,\n          this.props.project.getProjectUuid()\n        );\n        setStep('build');\n        this.setState({ build }, () => {\n          this._startBuildWatch(authenticatedUser);\n        });\n      }\n      setStep('done');\n      this.setState({\n        compressionOutput,\n        doneFooterOpen: true,\n      });\n    } catch (error) {\n      console.error('An error happened during export:', error);\n      handleError(error);\n    }\n  };\n\n  _closeDoneFooter = () =>\n    this.setState({\n      doneFooterOpen: false,\n    });\n\n  _updateExportState = (updater: any => any) => {\n    this.setState(prevState => ({\n      ...prevState,\n      exportState: updater(prevState.exportState),\n    }));\n  };\n\n  render() {\n    const {\n      exportStep,\n      compressionOutput,\n      build,\n      stepMaxProgress,\n      stepCurrentProgress,\n      errored,\n      doneFooterOpen,\n      exportState,\n    } = this.state;\n    const {\n      project,\n      authenticatedUser,\n      exportPipeline,\n      onSaveProject,\n    } = this.props;\n    if (!project) return null;\n    const getBuildLimit = (authenticatedUser: AuthenticatedUser): ?Limit =>\n      authenticatedUser.limits && exportPipeline.onlineBuildType\n        ? authenticatedUser.limits[exportPipeline.onlineBuildType]\n        : null;\n\n    const canLaunchBuild = (authenticatedUser: AuthenticatedUser) => {\n      const limit: ?Limit = getBuildLimit(authenticatedUser);\n      if (limit && limit.limitReached) return false;\n\n      return exportPipeline.canLaunchBuild(exportState, errored, exportStep);\n    };\n\n    return (\n      <Column noMargin>\n        {!!exportPipeline.packageNameWarningType &&\n          project.getPackageName().indexOf('com.example') !== -1 && (\n            <Line>\n              <DismissableAlertMessage\n                identifier=\"project-should-have-unique-package-name\"\n                kind=\"warning\"\n              >\n                <I18n>\n                  {({ i18n }) =>\n                    i18n._(\n                      exportPipeline.packageNameWarningType === 'mobile'\n                        ? t`The package name begins with com.example, make sure you replace it with an unique one to be able to publish your game on app stores.`\n                        : t`The package name begins with com.example, make sure you replace it with an unique one, else installing your game might overwrite other games.`\n                    )\n                  }\n                </I18n>\n              </DismissableAlertMessage>\n            </Line>\n          )}\n        <Line>\n          {exportPipeline.renderHeader({\n            project,\n            exportState,\n            updateExportState: this._updateExportState,\n          })}\n        </Line>\n        {(!exportPipeline.onlineBuildType ||\n          authenticatedUser.authenticated) && (\n          <Line justifyContent=\"center\">\n            <RaisedButton\n              label={exportPipeline.renderLaunchButtonLabel()}\n              primary\n              onClick={this.launchWholeExport}\n              disabled={!canLaunchBuild(authenticatedUser)}\n            />\n          </Line>\n        )}\n        <Spacer />\n        {!!exportPipeline.onlineBuildType &&\n          !authenticatedUser.authenticated && (\n            <CreateProfile\n              onLogin={authenticatedUser.onLogin}\n              onCreateAccount={authenticatedUser.onCreateAccount}\n              message={\n                <Trans>\n                  Create an account or login first to publish your game.\n                </Trans>\n              }\n              justifyContent=\"center\"\n            />\n          )}\n        {authenticatedUser.authenticated &&\n          (exportPipeline.renderCustomStepsProgress ? (\n            exportPipeline.renderCustomStepsProgress({\n              build,\n              project,\n              onSaveProject,\n              errored,\n              exportStep,\n            })\n          ) : (\n            <Line expand>\n              <BuildStepsProgress\n                exportStep={exportStep}\n                hasBuildStep={!!exportPipeline.onlineBuildType}\n                build={build}\n                stepMaxProgress={stepMaxProgress}\n                stepCurrentProgress={stepCurrentProgress}\n                errored={errored}\n              />\n            </Line>\n          ))}\n        {!!exportPipeline.limitedBuilds && authenticatedUser.authenticated && (\n          <LimitDisplayer\n            subscription={authenticatedUser.subscription}\n            limit={getBuildLimit(authenticatedUser)}\n            onChangeSubscription={this.props.onChangeSubscription}\n          />\n        )}\n        {doneFooterOpen &&\n          exportPipeline.renderDoneFooter &&\n          exportPipeline.renderDoneFooter({\n            compressionOutput,\n            exportState,\n            onClose: this._closeDoneFooter,\n          })}\n        {doneFooterOpen && (\n          <Line justifyContent=\"center\">\n            <GameRegistration project={project} hideIfSubscribed hideLoader />\n          </Line>\n        )}\n      </Column>\n    );\n  }\n}\n","// @flow\nimport React from 'react';\nimport { Column } from '../../UI/Grid';\nimport { useResponsiveWindowWidth } from '../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport GDevelopThemeContext from '../../UI/Theme/ThemeContext';\n\nexport default () => {\n  const windowWidth = useResponsiveWindowWidth();\n  const theme = React.useContext(GDevelopThemeContext);\n  return (\n    windowWidth !== 'small' && (\n      <Column justifyContent=\"center\" noMargin>\n        <span\n          style={{\n            height: 'calc(100% - 30px)',\n            borderLeftStyle: 'solid',\n            borderLeftWidth: 1,\n            borderColor: theme.toolbar.separatorColor,\n          }}\n        />\n      </Column>\n    )\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport FlatButton from '../../UI/FlatButton';\nimport { ColumnStackLayout, ResponsiveLineStackLayout } from '../../UI/Layout';\nimport RaisedButton from '../../UI/RaisedButton';\nimport ExportHomeSeparator from './ExportHomeSeparator';\nimport { type Exporter, type ExporterSection, type ExporterKey } from '.';\nimport Text from '../../UI/Text';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport LaptopMac from '@material-ui/icons/LaptopMac';\nimport Chrome from '../../UI/CustomSvgIcons/Chrome';\nimport PhoneIphone from '@material-ui/icons/PhoneIphone';\nimport ExportLauncher from './ExportLauncher';\nimport { type AuthenticatedUser } from '../../Profile/AuthenticatedUserContext';\nimport PeopleOutline from '@material-ui/icons/PeopleOutline';\n\nconst styles = {\n  titleContainer: {\n    display: 'flex',\n    flex: 2,\n    alignItems: 'center',\n    minHeight: '100px',\n  },\n  iconsContainer: {\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  icon: {\n    height: 48,\n    width: 48,\n  },\n  contentContainer: {\n    flex: 5,\n  },\n};\n\ntype ExportHomeProps = {|\n  onlineWebExporter: Exporter,\n  setChosenExporterKey: (key: ExporterKey) => void,\n  setChosenExporterSection: (section: ExporterSection) => void,\n  cantExportBecauseOffline: boolean,\n  project: gdProject,\n  onSaveProject: () => Promise<void>,\n  onChangeSubscription: () => void,\n  authenticatedUser: AuthenticatedUser,\n  isNavigationDisabled: boolean,\n  setIsNavigationDisabled: (isNavigationDisabled: boolean) => void,\n  onGameUpdated: () => void,\n|};\n\nconst ExportHome = ({\n  onlineWebExporter,\n  setChosenExporterKey,\n  setChosenExporterSection,\n  cantExportBecauseOffline,\n  project,\n  onSaveProject,\n  onChangeSubscription,\n  authenticatedUser,\n  isNavigationDisabled,\n  setIsNavigationDisabled,\n  onGameUpdated,\n}: ExportHomeProps) => {\n  return (\n    <ResponsiveLineStackLayout>\n      <ColumnStackLayout alignItems=\"center\" expand>\n        <div style={styles.titleContainer}>\n          <Line>\n            <Text size=\"title\">\n              <Trans>Publish and share with friends on Liluo.io</Trans>\n            </Text>\n          </Line>\n        </div>\n        <Line expand>\n          <PeopleOutline style={styles.icon} />\n        </Line>\n        <div style={styles.contentContainer}>\n          <ExportLauncher\n            exportPipeline={onlineWebExporter.exportPipeline}\n            project={project}\n            onSaveProject={onSaveProject}\n            onChangeSubscription={onChangeSubscription}\n            authenticatedUser={authenticatedUser}\n            setIsNavigationDisabled={setIsNavigationDisabled}\n            onGameUpdated={onGameUpdated}\n          />\n        </div>\n      </ColumnStackLayout>\n      <ExportHomeSeparator />\n      <ColumnStackLayout alignItems=\"center\" expand>\n        <div style={styles.titleContainer}>\n          <Line>\n            <Text size=\"title\">\n              <Trans>Export and publish on other platforms</Trans>\n            </Text>\n          </Line>\n        </div>\n        <Line expand>\n          <div style={styles.iconsContainer}>\n            <Chrome style={styles.icon} />\n            <PhoneIphone style={styles.icon} />\n            <LaptopMac style={styles.icon} />\n          </div>\n        </Line>\n        <div style={styles.contentContainer}>\n          <Column alignItems=\"center\">\n            <Line>\n              <Text align=\"center\">\n                <Trans>\n                  Export your game to mobile, desktop and web platforms.\n                </Trans>\n              </Text>\n            </Line>\n            <RaisedButton\n              label={<Trans>Export to other platforms</Trans>}\n              onClick={() => {\n                setChosenExporterSection('automated');\n                setChosenExporterKey('webexport');\n              }}\n              primary\n              disabled={isNavigationDisabled}\n            />\n            <Spacer />\n            <FlatButton\n              label={<Trans>Build manually</Trans>}\n              primary\n              onClick={() => {\n                setChosenExporterSection('manual');\n                setChosenExporterKey('webexport');\n              }}\n              disabled={isNavigationDisabled}\n            />\n          </Column>\n        </div>\n      </ColumnStackLayout>\n    </ResponsiveLineStackLayout>\n  );\n};\n\nexport default ExportHome;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport HelpButton from '../../UI/HelpButton';\nimport FlatButton from '../../UI/FlatButton';\nimport BuildsDialog from '../Builds/BuildsDialog';\nimport AuthenticatedUserContext from '../../Profile/AuthenticatedUserContext';\nimport ExportLauncher from './ExportLauncher';\nimport { type ExportPipeline } from '../ExportPipeline.flow';\nimport { useOnlineStatus } from '../../Utils/OnlineStatus';\nimport AlertMessage from '../../UI/AlertMessage';\nimport { Tab, Tabs } from '../../UI/Tabs';\nimport ExportHome from './ExportHome';\nimport { getGame, type Game } from '../../Utils/GDevelopServices/Game';\nimport { showWarningBox } from '../../UI/Messages/MessageBox';\n\nconst styles = {\n  icon: { width: 40, height: 40 },\n  disabledItem: { opacity: 0.6 },\n  content: { padding: 8 },\n};\n\nexport type ExporterSection = 'automated' | 'manual' | 'home';\nexport type ExporterKey =\n  | 'onlinewebexport'\n  | 'onlineelectronexport'\n  | 'onlinecordovaexport'\n  | 'webexport'\n  | 'facebookinstantgamesexport'\n  | 'electronexport'\n  | 'cordovaexport';\n\nexport type Exporter = {|\n  name: React.Node,\n  tabName: React.Node,\n  helpPage: string,\n  disabled?: boolean,\n  experimental?: boolean,\n  key: ExporterKey,\n  exportPipeline: ExportPipeline<any, any, any, any, any>,\n|};\n\nexport type ExportDialogWithoutExportsProps = {|\n  project: ?gdProject,\n  onSaveProject: () => Promise<void>,\n  onClose: () => void,\n  onChangeSubscription: () => void,\n|};\n\ntype Props = {|\n  ...ExportDialogWithoutExportsProps,\n  automatedExporters: Array<Exporter>,\n  manualExporters: Array<Exporter>,\n  onlineWebExporter: Exporter,\n  allExportersRequireOnline?: boolean,\n|};\n\nconst ExportDialog = ({\n  project,\n  onSaveProject,\n  onClose,\n  allExportersRequireOnline,\n  onChangeSubscription,\n  automatedExporters,\n  manualExporters,\n  onlineWebExporter,\n}: Props) => {\n  const [\n    chosenExporterSection,\n    setChosenExporterSection,\n  ] = React.useState<ExporterSection>('home');\n  const [buildsDialogOpen, setBuildsDialogOpen] = React.useState<boolean>(\n    false\n  );\n  const [\n    isNavigationDisabled,\n    setIsNavigationDisabled,\n  ] = React.useState<boolean>(false);\n  const [chosenExporterKey, setChosenExporterKey] = React.useState<ExporterKey>(\n    'onlinewebexport'\n  );\n  const [game, setGame] = React.useState<?Game>(null);\n  const authenticatedUser = React.useContext(AuthenticatedUserContext);\n  const { getAuthorizationHeader, profile } = React.useContext(\n    AuthenticatedUserContext\n  );\n  const onlineStatus = useOnlineStatus();\n  const cantExportBecauseOffline = !!allExportersRequireOnline && !onlineStatus;\n\n  const openBuildDialog = () => {\n    if (!game) {\n      showWarningBox(\n        \"Either this game is not registered or you are not its owner, so you can't see the builds or publish a build to the game page on Liluo.io.\"\n      );\n      return;\n    }\n    setBuildsDialogOpen(true);\n  };\n\n  const loadGame = React.useCallback(\n    async () => {\n      if (!profile || !project) return;\n\n      const { id } = profile;\n      try {\n        const game = await getGame(\n          getAuthorizationHeader,\n          id,\n          project.getProjectUuid()\n        );\n        setGame(game);\n      } catch (err) {\n        console.error('Unable to load the game', err);\n      }\n    },\n    [project, getAuthorizationHeader, profile]\n  );\n\n  React.useEffect(\n    () => {\n      // Load game only once.\n      if (!game) {\n        loadGame();\n      }\n    },\n    [loadGame, game]\n  );\n\n  if (!project) return null;\n  const exporters = [\n    ...automatedExporters,\n    ...manualExporters,\n    onlineWebExporter,\n  ];\n\n  const exporter = exporters.find(\n    exporter => exporter.key === chosenExporterKey\n  );\n\n  if (!exporter || !exporter.exportPipeline) return null;\n\n  return (\n    <Dialog\n      title={\n        chosenExporterSection === 'automated' ? (\n          <Trans>Publish your game</Trans>\n        ) : chosenExporterSection === 'manual' ? (\n          <Trans>Build manually</Trans>\n        ) : null\n      }\n      onRequestClose={onClose}\n      cannotBeDismissed={false}\n      actions={[\n        chosenExporterSection !== 'home' && (\n          <FlatButton\n            label={<Trans>Back</Trans>}\n            key=\"back\"\n            primary={false}\n            onClick={() => {\n              setChosenExporterSection('home');\n              setChosenExporterKey('onlinewebexport');\n            }}\n            disabled={isNavigationDisabled}\n          />\n        ),\n        <FlatButton\n          label={<Trans>Close</Trans>}\n          key=\"close\"\n          primary={false}\n          onClick={onClose}\n          disabled={isNavigationDisabled}\n        />,\n      ]}\n      secondaryActions={[\n        <HelpButton key=\"help\" helpPagePath={exporter.helpPage} />,\n        <FlatButton\n          key=\"builds\"\n          label={<Trans>See this game builds</Trans>}\n          onClick={openBuildDialog}\n          disabled={isNavigationDisabled}\n        />,\n      ]}\n      open\n      noMargin\n    >\n      {cantExportBecauseOffline && (\n        <AlertMessage kind=\"error\">\n          <Trans>\n            You must be online and have a proper internet connection to export\n            your game.\n          </Trans>\n        </AlertMessage>\n      )}\n      {chosenExporterSection === 'home' && (\n        <ExportHome\n          cantExportBecauseOffline={cantExportBecauseOffline}\n          onlineWebExporter={onlineWebExporter}\n          setChosenExporterKey={setChosenExporterKey}\n          setChosenExporterSection={setChosenExporterSection}\n          project={project}\n          onSaveProject={onSaveProject}\n          onChangeSubscription={onChangeSubscription}\n          authenticatedUser={authenticatedUser}\n          isNavigationDisabled={isNavigationDisabled}\n          setIsNavigationDisabled={setIsNavigationDisabled}\n          onGameUpdated={setGame}\n        />\n      )}\n      {chosenExporterSection === 'automated' && (\n        <Tabs value={chosenExporterKey} onChange={setChosenExporterKey}>\n          {automatedExporters.map(exporter => (\n            <Tab\n              label={exporter.tabName}\n              value={exporter.key}\n              key={exporter.key}\n              disabled={isNavigationDisabled}\n            />\n          ))}\n        </Tabs>\n      )}\n      {chosenExporterSection === 'manual' && (\n        <Tabs value={chosenExporterKey} onChange={setChosenExporterKey}>\n          {manualExporters.map(exporter => (\n            <Tab\n              label={exporter.tabName}\n              value={exporter.key}\n              key={exporter.key}\n              disabled={isNavigationDisabled}\n            />\n          ))}\n        </Tabs>\n      )}\n      {chosenExporterSection !== 'home' && (\n        <div style={styles.content}>\n          <ExportLauncher\n            exportPipeline={exporter.exportPipeline}\n            project={project}\n            onSaveProject={onSaveProject}\n            onChangeSubscription={onChangeSubscription}\n            authenticatedUser={authenticatedUser}\n            key={chosenExporterKey}\n            setIsNavigationDisabled={setIsNavigationDisabled}\n            onGameUpdated={setGame}\n          />\n        </div>\n      )}\n      {game && (\n        <BuildsDialog\n          open={buildsDialogOpen}\n          onClose={() => setBuildsDialogOpen(false)}\n          authenticatedUser={authenticatedUser}\n          game={game}\n          onGameUpdated={setGame}\n        />\n      )}\n    </Dialog>\n  );\n};\n\nexport default ExportDialog;\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport {\n  type ExampleShortHeader,\n  getExample,\n} from '../../Utils/GDevelopServices/Example';\nimport { isCompatibleWithAsset } from '../../Utils/GDevelopServices/Asset';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Text from '../../UI/Text';\nimport { Trans } from '@lingui/macro';\nimport { Column, Line } from '../../UI/Grid';\nimport RaisedButtonWithSplitMenu from '../../UI/RaisedButtonWithSplitMenu';\nimport { getIDEVersion } from '../../Version';\nimport { ExampleIcon } from './ExampleIcon';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport { openExampleInWebApp } from './ExampleDialog';\nimport { UserPublicProfileChip } from '../../UI/User/UserPublicProfileChip';\nimport HighlightedText from '../../UI/Search/HighlightedText';\nimport { type SearchMatch } from '../../UI/Search/UseSearchStructuredItem';\n\nconst electron = optionalRequire('electron');\n\nconst styles = {\n  container: {\n    display: 'flex',\n    overflow: 'hidden',\n    padding: 8,\n  },\n  button: {\n    textAlign: 'left',\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  exampleShortHeader: ExampleShortHeader,\n  matches: ?Array<SearchMatch>,\n  isOpening: boolean,\n  onChoose: () => void,\n  onOpen: () => void,\n  onHeightComputed: number => void,\n|};\n\nexport const ExampleListItem = ({\n  exampleShortHeader,\n  matches,\n  isOpening,\n  onChoose,\n  onOpen,\n  onHeightComputed,\n}: Props) => {\n  // Report the height of the item once it's known.\n  const containerRef = React.useRef<?HTMLDivElement>(null);\n  React.useLayoutEffect(() => {\n    if (containerRef.current)\n      onHeightComputed(containerRef.current.getBoundingClientRect().height);\n  });\n\n  const isCompatible = isCompatibleWithAsset(\n    getIDEVersion(),\n    exampleShortHeader\n  );\n\n  const fetchAndOpenExampleInWebApp = React.useCallback(\n    async (i18n: I18nType) => {\n      try {\n        const example = await getExample(exampleShortHeader);\n        openExampleInWebApp(example);\n      } catch (error) {\n        showErrorBox({\n          message:\n            i18n._(t`Unable to fetch the example.`) +\n            ' ' +\n            i18n._(t`Verify your internet connection or try again later.`),\n          rawError: error,\n          errorId: 'example-load-error',\n        });\n      }\n    },\n    [exampleShortHeader]\n  );\n\n  const renderExampleField = (field: 'shortDescription' | 'name') => {\n    const originalField = exampleShortHeader[field];\n\n    if (!matches) return originalField;\n    const nameMatches = matches.filter(match => match.key === field);\n    if (nameMatches.length === 0) return originalField;\n\n    return (\n      <HighlightedText\n        text={originalField}\n        matchesCoordinates={nameMatches[0].indices}\n      />\n    );\n  };\n\n  return (\n    <div style={styles.container} ref={containerRef}>\n      <Line noMargin expand>\n        <ButtonBase style={styles.button} onClick={onChoose} focusRipple>\n          {!!exampleShortHeader.previewImageUrls.length && (\n            <ExampleIcon exampleShortHeader={exampleShortHeader} size={64} />\n          )}\n          <Column expand>\n            <Text noMargin>{renderExampleField('name')} </Text>\n            {exampleShortHeader.authors && (\n              <Line>\n                {exampleShortHeader.authors.map(author => (\n                  <UserPublicProfileChip user={author} key={author.id} />\n                ))}\n              </Line>\n            )}\n            <Text noMargin size=\"body2\">\n              {renderExampleField('shortDescription')}\n            </Text>\n          </Column>\n        </ButtonBase>\n        <Column justifyContent=\"center\">\n          <RaisedButtonWithSplitMenu\n            primary\n            label={<Trans>Open</Trans>}\n            disabled={isOpening || !isCompatible}\n            onClick={() => onOpen()}\n            buildMenuTemplate={i18n => [\n              {\n                label: i18n._(t`Open details`),\n                click: onChoose,\n              },\n              {\n                label: electron\n                  ? i18n._(t`Open in the web-app`)\n                  : i18n._(t`Open in a new tab`),\n                click: () => {\n                  fetchAndOpenExampleInWebApp(i18n);\n                },\n              },\n            ]}\n          />\n        </Column>\n      </Line>\n    </div>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport SearchBar, {\n  type SearchBarInterface,\n  useShouldAutofocusSearchbar,\n} from '../../UI/SearchBar';\nimport { Column, Line } from '../../UI/Grid';\nimport { type ExampleShortHeader } from '../../Utils/GDevelopServices/Example';\nimport { ExampleStoreContext } from './ExampleStoreContext';\nimport { ListSearchResults } from '../../UI/Search/ListSearchResults';\nimport { ExampleListItem } from './ExampleListItem';\nimport { ResponsiveWindowMeasurer } from '../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport { ExampleDialog } from './ExampleDialog';\nimport { type SearchMatch } from '../../UI/Search/UseSearchStructuredItem';\nimport { sendExampleDetailsOpened } from '../../Utils/Analytics/EventSender';\n\nconst styles = {\n  searchBar: {\n    // TODO: Can we put this in the search bar by default?\n    flexShrink: 0,\n  },\n};\n\ntype Props = {|\n  isOpening: boolean,\n  onOpen: ExampleShortHeader => Promise<void>,\n  focusOnMount?: boolean,\n|};\n\nconst getExampleName = (exampleShortHeader: ExampleShortHeader) =>\n  exampleShortHeader.name;\n\nexport const ExampleStore = ({ isOpening, onOpen, focusOnMount }: Props) => {\n  const [\n    selectedExampleShortHeader,\n    setSelectedExampleShortHeader,\n  ] = React.useState<?ExampleShortHeader>(null);\n  const {\n    filters,\n    searchResults,\n    error,\n    fetchExamplesAndFilters,\n    filtersState,\n    searchText,\n    setSearchText,\n  } = React.useContext(ExampleStoreContext);\n\n  const shouldAutofocusSearchbar = useShouldAutofocusSearchbar();\n  const searchBarRef = React.useRef<?SearchBarInterface>(null);\n\n  React.useEffect(\n    () => {\n      fetchExamplesAndFilters();\n    },\n    [fetchExamplesAndFilters]\n  );\n\n  React.useEffect(\n    () => {\n      if (focusOnMount && shouldAutofocusSearchbar && searchBarRef.current)\n        searchBarRef.current.focus();\n    },\n    [shouldAutofocusSearchbar, focusOnMount]\n  );\n\n  const tagsHandler = React.useMemo(\n    () => ({\n      add: filtersState.addFilter,\n      remove: filtersState.removeFilter,\n      chosenTags: filtersState.chosenFilters,\n    }),\n    [filtersState]\n  );\n\n  const getExampleMatches = (\n    exampleShortHeader: ExampleShortHeader\n  ): SearchMatch[] => {\n    if (!searchResults) return [];\n    const exampleMatches = searchResults.find(\n      result => result.item.id === exampleShortHeader.id\n    );\n    return exampleMatches ? exampleMatches.matches : [];\n  };\n\n  return (\n    <React.Fragment>\n      <ResponsiveWindowMeasurer>\n        {windowWidth => (\n          <Column expand noMargin useFullHeight>\n            <SearchBar\n              value={searchText}\n              onChange={setSearchText}\n              onRequestSearch={() => {}}\n              style={styles.searchBar}\n              tagsHandler={tagsHandler}\n              tags={filters && filters.defaultTags}\n              ref={searchBarRef}\n            />\n            <Line\n              expand\n              overflow={\n                'hidden' /* Somehow required on Chrome/Firefox to avoid children growing (but not on Safari) */\n              }\n            >\n              <ListSearchResults\n                disableAutoTranslate // Search results text highlighting conflicts with dom handling by browser auto-translations features. Disables auto translation to prevent crashes.\n                onRetry={fetchExamplesAndFilters}\n                error={error}\n                searchItems={\n                  searchResults && searchResults.map(({ item }) => item)\n                }\n                getSearchItemUniqueId={getExampleName}\n                renderSearchItem={(exampleShortHeader, onHeightComputed) => (\n                  <ExampleListItem\n                    isOpening={isOpening}\n                    onHeightComputed={onHeightComputed}\n                    exampleShortHeader={exampleShortHeader}\n                    matches={getExampleMatches(exampleShortHeader)}\n                    onChoose={() => {\n                      sendExampleDetailsOpened(exampleShortHeader.slug);\n                      setSelectedExampleShortHeader(exampleShortHeader);\n                    }}\n                    onOpen={() => {\n                      onOpen(exampleShortHeader);\n                    }}\n                  />\n                )}\n              />\n            </Line>\n          </Column>\n        )}\n      </ResponsiveWindowMeasurer>\n      {!!selectedExampleShortHeader && (\n        <ExampleDialog\n          isOpening={isOpening}\n          exampleShortHeader={selectedExampleShortHeader}\n          onOpen={() => {\n            onOpen(selectedExampleShortHeader);\n          }}\n          onClose={() => setSelectedExampleShortHeader(null)}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { type Tutorial } from '../Utils/GDevelopServices/Tutorial';\nimport { Card } from '@material-ui/core';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Text from '../UI/Text';\nimport { Column, Line, Spacer } from '../UI/Grid';\nimport { MarkdownText } from '../UI/MarkdownText';\nimport { CorsAwareImage } from '../UI/CorsAwareImage';\nimport { ResponsiveLineStackLayout } from '../UI/Layout';\nimport { useResponsiveWindowWidth } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nimport { sendTutorialOpened } from '../Utils/Analytics/EventSender';\nimport Window from '../Utils/Window';\n\nconst styles = {\n  thumbnailImageWithDescription: {\n    objectFit: 'contain',\n    verticalAlign: 'middle',\n    backgroundColor: 'black',\n    width: 200,\n  },\n  smallScreenThumbnailImage: {\n    objectFit: 'contain',\n    verticalAlign: 'middle',\n    backgroundColor: 'black',\n    maxHeight: 150,\n  },\n  card: {\n    flex: 1,\n  },\n  container: {\n    display: 'flex',\n    textAlign: 'left',\n    overflow: 'hidden',\n    padding: 8,\n  },\n};\n\ntype Props = {|\n  tutorial: Tutorial,\n  onHeightComputed: number => void,\n|};\n\nexport const TutorialListItem = ({ tutorial, onHeightComputed }: Props) => {\n  // Report the height of the item once it's known.\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  const containerRef = React.useRef<?HTMLDivElement>(null);\n  const isImageLoadingRef = React.useRef(true);\n  const notifyHeightChanged = React.useCallback(\n    () => {\n      if (!isLoaded && !isImageLoadingRef.current) {\n        setIsLoaded(true);\n      }\n\n      // But don't report the height while the image is loading, as it could\n      // make some \"jumps\" in the scroll when scrolling up.\n      if (containerRef.current && !isImageLoadingRef.current)\n        onHeightComputed(containerRef.current.getBoundingClientRect().height);\n    },\n    [onHeightComputed, isLoaded]\n  );\n  React.useLayoutEffect(notifyHeightChanged);\n\n  const windowWidth = useResponsiveWindowWidth();\n\n  return (\n    <ButtonBase\n      onClick={() => {\n        sendTutorialOpened(tutorial.id);\n        Window.openExternalURL(tutorial.link);\n      }}\n      focusRipple\n    >\n      <div\n        style={{\n          ...styles.container,\n          visibility: isLoaded ? undefined : 'hidden',\n          animation: isLoaded ? 'fadein 0.5s' : undefined,\n        }}\n        ref={containerRef}\n      >\n        <Card style={styles.card}>\n          <ResponsiveLineStackLayout noMargin>\n            <CorsAwareImage\n              style={\n                windowWidth === 'small'\n                  ? styles.smallScreenThumbnailImage\n                  : styles.thumbnailImageWithDescription\n              }\n              src={tutorial.thumbnailUrl}\n              alt={tutorial.title}\n              onError={() => {\n                isImageLoadingRef.current = false;\n                notifyHeightChanged();\n              }}\n              onLoad={() => {\n                isImageLoadingRef.current = false;\n                notifyHeightChanged();\n              }}\n            />\n            <Line expand>\n              <Column expand>\n                <ResponsiveLineStackLayout\n                  noMargin\n                  alignItems=\"baseline\"\n                  expand\n                >\n                  <Text noMargin displayInlineAsSpan>\n                    {tutorial.title}\n                  </Text>\n                </ResponsiveLineStackLayout>\n                <Text size=\"body2\" displayInlineAsSpan>\n                  <MarkdownText source={tutorial.description} allowParagraphs />\n                </Text>\n                <Spacer />\n              </Column>\n            </Line>\n          </ResponsiveLineStackLayout>\n        </Card>\n      </div>\n    </ButtonBase>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { Column, Line } from '../UI/Grid';\nimport { ListSearchResults } from '../UI/Search/ListSearchResults';\nimport { TutorialContext } from './TutorialContext';\nimport { TutorialListItem } from './TutorialListItem';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\n\ntype Props = {};\n\nexport const TutorialsList = (props: Props) => {\n  const { tutorials, error, fetchTutorials } = React.useContext(\n    TutorialContext\n  );\n\n  React.useEffect(\n    () => {\n      fetchTutorials();\n    },\n    [fetchTutorials]\n  );\n\n  return (\n    <ResponsiveWindowMeasurer>\n      {windowWidth => (\n        <Column expand noMargin useFullHeight>\n          <Line\n            expand\n            overflow={\n              'hidden' /* Somehow required on Chrome/Firefox to avoid children growing (but not on Safari) */\n            }\n          >\n            <ListSearchResults\n              onRetry={fetchTutorials}\n              error={error}\n              searchItems={tutorials}\n              getSearchItemUniqueId={tutorial => tutorial.id}\n              renderSearchItem={(tutorial, onHeightComputed) => (\n                <TutorialListItem\n                  onHeightComputed={onHeightComputed}\n                  tutorial={tutorial}\n                />\n              )}\n            />\n          </Line>\n        </Column>\n      )}\n    </ResponsiveWindowMeasurer>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { type ShowcasedGame } from '../Utils/GDevelopServices/Game';\nimport { Card } from '@material-ui/core';\nimport Text from '../UI/Text';\nimport { Column, Line, Spacer } from '../UI/Grid';\nimport { MarkdownText } from '../UI/MarkdownText';\nimport { CorsAwareImage } from '../UI/CorsAwareImage';\nimport TagChips from '../UI/TagChips';\nimport { ResponsiveLineStackLayout } from '../UI/Layout';\nimport { useResponsiveWindowWidth } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nimport ShowcasedGameTitle from './ShowcasedGameTitle';\nimport ShowcasedGameButton from './ShowcasedGameButtons';\n\nconst styles = {\n  thumbnailImageWithDescription: {\n    objectFit: 'contain',\n    verticalAlign: 'middle',\n    backgroundColor: 'black',\n    width: 200,\n  },\n  thumbnailImageWithoutDescription: {\n    objectFit: 'cover',\n    verticalAlign: 'middle',\n    backgroundColor: 'black',\n    width: 200,\n    maxHeight: 120,\n  },\n  smallScreenThumbnailImage: {\n    objectFit: 'contain',\n    verticalAlign: 'middle',\n    backgroundColor: 'black',\n    maxHeight: 150,\n  },\n  card: {\n    flex: 1,\n  },\n  container: {\n    display: 'flex',\n    textAlign: 'left',\n    overflow: 'hidden',\n    padding: 8,\n  },\n};\n\ntype Props = {|\n  showcasedGame: ShowcasedGame,\n  onHeightComputed: number => void,\n|};\n\nexport const ShowcasedGameListItem = ({\n  showcasedGame,\n  onHeightComputed,\n}: Props) => {\n  // Report the height of the item once it's known.\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  const containerRef = React.useRef<?HTMLDivElement>(null);\n  const isImageLoadingRef = React.useRef(true);\n  const notifyHeightChanged = React.useCallback(\n    () => {\n      if (!isLoaded && !isImageLoadingRef.current) {\n        setIsLoaded(true);\n      }\n\n      // But don't report the height while the image is loading, as it could\n      // make some \"jumps\" in the scroll when scrolling up.\n      if (containerRef.current && !isImageLoadingRef.current)\n        onHeightComputed(containerRef.current.getBoundingClientRect().height);\n    },\n    [onHeightComputed, isLoaded]\n  );\n  React.useLayoutEffect(notifyHeightChanged);\n\n  const windowWidth = useResponsiveWindowWidth();\n  const hasDescription = !!showcasedGame.description;\n\n  return (\n    <div\n      style={{\n        ...styles.container,\n        visibility: isLoaded ? undefined : 'hidden',\n        animation: isLoaded ? 'fadein 0.5s' : undefined,\n      }}\n      ref={containerRef}\n    >\n      <Card style={styles.card}>\n        <ResponsiveLineStackLayout noMargin>\n          <CorsAwareImage\n            style={\n              windowWidth === 'small'\n                ? styles.smallScreenThumbnailImage\n                : hasDescription\n                ? styles.thumbnailImageWithDescription\n                : styles.thumbnailImageWithoutDescription\n            }\n            src={showcasedGame.thumbnailUrl}\n            alt={showcasedGame.title}\n            onError={() => {\n              isImageLoadingRef.current = false;\n              notifyHeightChanged();\n            }}\n            onLoad={() => {\n              isImageLoadingRef.current = false;\n              notifyHeightChanged();\n            }}\n          />\n          <Line expand>\n            <Column expand>\n              <ShowcasedGameTitle showcasedGame={showcasedGame} />\n              {showcasedGame.genres.length ? (\n                <TagChips tags={showcasedGame.genres} />\n              ) : null}\n              <Text size=\"body2\" displayInlineAsSpan>\n                <MarkdownText\n                  source={showcasedGame.description}\n                  allowParagraphs\n                />\n              </Text>\n              <Spacer />\n              <ShowcasedGameButton showcasedGame={showcasedGame} />\n            </Column>\n          </Line>\n        </ResponsiveLineStackLayout>\n      </Card>\n    </div>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport SearchBar from '../UI/SearchBar';\nimport { Column, Line } from '../UI/Grid';\nimport Background from '../UI/Background';\nimport ScrollView from '../UI/ScrollView';\nimport { type ShowcasedGame } from '../Utils/GDevelopServices/Game';\nimport { ListSearchResults } from '../UI/Search/ListSearchResults';\nimport { GamesShowcaseContext } from './GamesShowcaseContext';\nimport { ShowcasedGameListItem } from './ShowcasedGameListItem';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nimport { Trans } from '@lingui/macro';\nimport Subheader from '../UI/Subheader';\nimport { CategoryChooser } from '../UI/Search/CategoryChooser';\n\nconst styles = {\n  searchBar: {\n    // TODO: Can we put this in the search bar by default?\n    flexShrink: 0,\n  },\n};\n\nconst getShowcasedGameTitle = (showcasedGame: ShowcasedGame) =>\n  showcasedGame.title;\n\ntype Props = {};\n\nexport const GamesShowcase = (props: Props) => {\n  const {\n    filters,\n    searchResults,\n    error,\n    fetchShowcasedGamesAndFilters,\n    filtersState,\n    searchText,\n    setSearchText,\n  } = React.useContext(GamesShowcaseContext);\n\n  React.useEffect(\n    () => {\n      fetchShowcasedGamesAndFilters();\n    },\n    [fetchShowcasedGamesAndFilters]\n  );\n\n  return (\n    <ResponsiveWindowMeasurer>\n      {windowWidth => (\n        <Column expand noMargin useFullHeight>\n          <SearchBar\n            value={searchText}\n            onChange={setSearchText}\n            onRequestSearch={() => {}}\n            style={styles.searchBar}\n          />\n          <Line\n            expand\n            overflow={\n              'hidden' /* Somehow required on Chrome/Firefox to avoid children growing (but not on Safari) */\n            }\n          >\n            <Background\n              noFullHeight\n              noExpand\n              width={windowWidth === 'small' ? 150 : 250}\n            >\n              <ScrollView>\n                <Subheader>\n                  <Trans>Categories</Trans>\n                </Subheader>\n                <CategoryChooser\n                  allItemsLabel={<Trans>All games</Trans>}\n                  allFilters={filters}\n                  filtersState={filtersState}\n                  error={error}\n                />\n              </ScrollView>\n            </Background>\n            <ListSearchResults\n              onRetry={fetchShowcasedGamesAndFilters}\n              error={error}\n              searchItems={searchResults}\n              getSearchItemUniqueId={getShowcasedGameTitle}\n              renderSearchItem={(showcasedGame, onHeightComputed) => (\n                <ShowcasedGameListItem\n                  onHeightComputed={onHeightComputed}\n                  showcasedGame={showcasedGame}\n                />\n              )}\n            />\n          </Line>\n        </Column>\n      )}\n    </ResponsiveWindowMeasurer>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport PublishIcon from '@material-ui/icons/Publish';\n\nimport { ExampleStore } from '../AssetStore/ExampleStore';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport { TutorialsList } from '../Tutorial';\nimport { Column } from '../UI/Grid';\nimport { type StorageProvider, type FileMetadata } from '../ProjectsStorage';\nimport { GamesShowcase } from '../GamesShowcase';\nimport { type ExampleShortHeader } from '../Utils/GDevelopServices/Example';\nimport Window from '../Utils/Window';\nimport ProjectPreCreationDialog from './ProjectPreCreationDialog';\nimport RaisedButton from '../UI/RaisedButton';\n\nexport type CreateProjectDialogTabs =\n  | 'examples'\n  | 'tutorials'\n  | 'games-showcase';\n\nexport type OnOpenProjectAfterCreationFunction = ({|\n  project?: gdProject,\n  storageProvider: ?StorageProvider,\n  fileMetadata: ?FileMetadata,\n  projectName?: string,\n  shouldCloseDialog?: boolean,\n|}) => Promise<void>;\n\nexport type CreateProjectDialogWithComponentsProps = {|\n  open: boolean,\n  onClose: () => void,\n  onOpen: OnOpenProjectAfterCreationFunction,\n  initialTab: CreateProjectDialogTabs,\n|};\n\nexport type ProjectCreationSettings = {|\n  projectName: string,\n  outputPath?: string,\n|};\n\nexport type OnCreateBlankFunction = ({|\n  i18n: I18nType,\n  settings: ProjectCreationSettings,\n|}) => Promise<?{|\n  project: gdProject,\n  storageProvider: ?StorageProvider,\n  projectName?: string,\n  fileMetadata: ?FileMetadata,\n|}>;\n\nexport type OnCreateFromExampleShortHeaderFunction = ({|\n  i18n: I18nType,\n  exampleShortHeader: ExampleShortHeader,\n  settings: ProjectCreationSettings,\n|}) => Promise<?{|\n  storageProvider: StorageProvider,\n  projectName: string,\n  fileMetadata: FileMetadata,\n|}>;\n\ntype Props = {|\n  ...CreateProjectDialogWithComponentsProps,\n  onCreateBlank: OnCreateBlankFunction,\n  onCreateFromExampleShortHeader: OnCreateFromExampleShortHeaderFunction,\n|};\n\nconst CreateProjectDialog = ({\n  open,\n  onClose,\n  onOpen,\n  onCreateFromExampleShortHeader,\n  onCreateBlank,\n  initialTab,\n}: Props) => {\n  const [currentTab, setCurrentTab] = React.useState<CreateProjectDialogTabs>(\n    initialTab\n  );\n  const [isOpening, setIsOpening] = React.useState<boolean>(false);\n  const [\n    selectedExampleShortHeader,\n    setSelectedExampleShortShortHeader,\n  ] = React.useState<?ExampleShortHeader>(null);\n  const [\n    preCreationDialogOpen,\n    setPreCreationDialogOpen,\n  ] = React.useState<boolean>(false);\n\n  const actions = React.useMemo(\n    () => [\n      <RaisedButton\n        key=\"create-blank\"\n        label={<Trans>Create a blank project</Trans>}\n        primary={false}\n        onClick={() => setPreCreationDialogOpen(true)}\n      />,\n      <FlatButton\n        key=\"close\"\n        label={<Trans>Close</Trans>}\n        primary={false}\n        onClick={onClose}\n      />,\n    ],\n    [onClose, setPreCreationDialogOpen]\n  );\n\n  const secondaryActions = React.useMemo(\n    () => {\n      if (currentTab === 'games-showcase')\n        return [\n          <FlatButton\n            key=\"submit-game-showcase\"\n            onClick={() => {\n              Window.openExternalURL(\n                'https://docs.google.com/forms/d/e/1FAIpQLSfjiOnkbODuPifSGuzxYY61vB5kyMWdTZSSqkJsv3H6ePRTQA/viewform?usp=sf_link'\n              );\n            }}\n            primary\n            icon={<PublishIcon />}\n            label={<Trans>Submit your game to the showcase</Trans>}\n          />,\n        ];\n      if (currentTab === 'examples')\n        return [\n          <FlatButton\n            key=\"submit-example\"\n            onClick={() => {\n              Window.openExternalURL(\n                'https://github.com/GDevelopApp/GDevelop-examples/issues/new/choose'\n              );\n            }}\n            primary\n            icon={<PublishIcon />}\n            label={<Trans>Submit your project as an example</Trans>}\n          />,\n        ];\n    },\n    [currentTab]\n  );\n\n  if (!open) return null;\n\n  const createProject = async (\n    i18n: I18nType,\n    settings: ProjectCreationSettings\n  ) => {\n    setIsOpening(true);\n\n    try {\n      let projectMetadata;\n\n      if (selectedExampleShortHeader) {\n        projectMetadata = await onCreateFromExampleShortHeader({\n          i18n,\n          exampleShortHeader: selectedExampleShortHeader,\n          settings,\n        });\n      } else {\n        projectMetadata = await onCreateBlank({\n          i18n,\n          settings,\n        });\n      }\n\n      if (!projectMetadata) return;\n\n      setPreCreationDialogOpen(false);\n      setSelectedExampleShortShortHeader(null);\n      onOpen({ ...projectMetadata });\n    } finally {\n      setIsOpening(false);\n    }\n  };\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <>\n          <Dialog\n            title={<Trans>Create a new project</Trans>}\n            actions={actions}\n            secondaryActions={secondaryActions}\n            cannotBeDismissed={false}\n            onRequestClose={onClose}\n            open={open}\n            noMargin\n            fullHeight\n            flexBody\n          >\n            <Column expand noMargin>\n              <Tabs\n                value={currentTab}\n                onChange={(newTab: CreateProjectDialogTabs) => {\n                  setCurrentTab(newTab);\n                }}\n              >\n                <Tab label={<Trans>Examples</Trans>} value=\"examples\" />\n                <Tab label={<Trans>Tutorials</Trans>} value=\"tutorials\" />\n                <Tab\n                  label={<Trans>Games showcase</Trans>}\n                  value=\"games-showcase\"\n                />\n              </Tabs>\n              {currentTab === 'examples' && (\n                <Column noMargin expand useFullHeight>\n                  <ExampleStore\n                    focusOnMount\n                    isOpening={isOpening}\n                    onOpen={async (example: ?ExampleShortHeader) => {\n                      setSelectedExampleShortShortHeader(example);\n                      setPreCreationDialogOpen(true);\n                    }}\n                  />\n                </Column>\n              )}\n              {currentTab === 'tutorials' && <TutorialsList />}\n              {currentTab === 'games-showcase' && <GamesShowcase />}\n            </Column>\n          </Dialog>\n          {preCreationDialogOpen && (\n            <ProjectPreCreationDialog\n              open\n              isOpening={isOpening}\n              onClose={() => setPreCreationDialogOpen(false)}\n              onCreate={projectName => createProject(i18n, projectName)}\n            />\n          )}\n        </>\n      )}\n    </I18n>\n  );\n};\n\nexport default CreateProjectDialog;\n","// @flow\nimport * as React from 'react';\nimport { I18n } from '@lingui/react';\nimport { parseISO } from 'date-fns';\nimport Lock from '@material-ui/icons/Lock';\n\nimport { Column, Line } from '../../UI/Grid';\nimport Text from '../../UI/Text';\nimport DotBadge from '../../UI/DotBadge';\n\nimport {\n  compareAchievements,\n  type Badge as BadgeType,\n  type Achievement,\n  type AchievementWithBadgeData,\n} from '../../Utils/GDevelopServices/Badge';\nimport ScrollView from '../../UI/ScrollView';\n\ntype Props = {|\n  badges: Array<BadgeType>,\n  achievements: Array<Achievement>,\n  displayUnclaimedAchievements: boolean,\n  displayNotifications: boolean,\n|};\n\nconst styles = {\n  achievementsContainer: {\n    maxHeight: 250,\n  },\n  lockedAchievement: {\n    opacity: 0.4,\n  },\n  unlockedAchievement: {},\n};\n\nconst AchievementList = ({\n  badges,\n  achievements,\n  displayUnclaimedAchievements,\n  displayNotifications,\n}: Props) => {\n  const [\n    achievementsWithBadgeData,\n    setAchievementsWithBadgeData,\n  ] = React.useState<Array<AchievementWithBadgeData>>([]);\n\n  React.useEffect(\n    () => {\n      const badgeByAchievementId = badges.reduce((acc, badge) => {\n        acc[badge.achievementId] = badge;\n        return acc;\n      }, {});\n\n      const achievementsWithBadgeData = achievements.reduce(\n        (acc, achievement) => {\n          const badge = badgeByAchievementId[achievement.id];\n          const hasBadge = !!badge;\n          if (hasBadge || (!hasBadge && displayUnclaimedAchievements)) {\n            acc.push({\n              ...achievement,\n              seen: hasBadge ? badge.seen : undefined,\n              unlockedAt: hasBadge ? parseISO(badge.unlockedAt) : null,\n            });\n          }\n\n          return acc;\n        },\n        []\n      );\n\n      achievementsWithBadgeData.sort(compareAchievements);\n\n      setAchievementsWithBadgeData(achievementsWithBadgeData);\n    },\n    [badges, achievements, displayUnclaimedAchievements]\n  );\n\n  return (\n    <Column noMargin>\n      <I18n>\n        {({ i18n }) => (\n          <ScrollView style={styles.achievementsContainer}>\n            {achievementsWithBadgeData.map(achievementWithBadgeData => (\n              <Line\n                key={achievementWithBadgeData.id}\n                justifyContent=\"space-between\"\n              >\n                <Column justifyContent=\"center\" alignItems=\"flex-start\">\n                  <DotBadge\n                    invisible={\n                      !(\n                        displayNotifications &&\n                        achievementWithBadgeData.seen === false\n                      )\n                    }\n                  >\n                    <Text\n                      noMargin\n                      style={\n                        achievementWithBadgeData.unlockedAt\n                          ? styles.unlockedAchievement\n                          : styles.lockedAchievement\n                      }\n                    >\n                      {achievementWithBadgeData.name}\n                    </Text>\n                  </DotBadge>\n                  {displayUnclaimedAchievements && (\n                    <Text\n                      noMargin\n                      style={\n                        achievementWithBadgeData.unlockedAt\n                          ? styles.unlockedAchievement\n                          : styles.lockedAchievement\n                      }\n                      size=\"body2\"\n                    >\n                      {achievementWithBadgeData.description}\n                    </Text>\n                  )}\n                </Column>\n                <Column>\n                  {achievementWithBadgeData.unlockedAt ? (\n                    <Text>\n                      {i18n.date(achievementWithBadgeData.unlockedAt)}\n                    </Text>\n                  ) : (\n                    <Lock style={styles.lockedAchievement} />\n                  )}\n                </Column>\n              </Line>\n            ))}\n          </ScrollView>\n        )}\n      </I18n>\n    </Column>\n  );\n};\n\nexport default AchievementList;\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props} viewBox=\"0 0 528.9 511.62\">\n    <g id=\"Calque_2\" data-name=\"Calque 2\">\n      <g id=\"Calque_4\" data-name=\"Calque 4\">\n        <path\n          d=\"M144 60.33S80.75-18.31 35.82 21s-17.56 93.4-17.56 93.4 32.3 82.85 35.81 109.53S77 279.4 77 279.4s16.42 21.77 52.94 13.35 66-34.41 66-34.41ZM385 60.33S448.14-18.31 493.08 21s17.55 93.39 17.55 93.39-32.29 82.85-35.81 109.53-22.9 55.47-22.9 55.47-16.42 21.78-52.92 13.36-66-34.41-66-34.41Z\"\n          style={{\n            fill: 'none',\n            stroke: 'currentColor',\n            strokeWidth: '20px',\n            strokeMiterlimit: 10,\n          }}\n        />\n        <path\n          d=\"M395.53 429.67H352s-46.34-34.41-44.94-61.09C455.92 297 434.85 63.14 434.85 63.14H88.1S67 297 215.89 368.58c1.41 26.68-44.89 61.09-44.89 61.09h-43.58v24.57h-23.87v56.88h315.86v-56.88h-23.88Z\"\n          style={{ fill: 'inherit', strokeMiterlimit: 10 }}\n        />\n      </g>\n    </g>\n  </SvgIcon>\n));\n","// @flow\n\nimport { Trans } from '@lingui/macro';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport AlertMessage from '../../UI/AlertMessage';\n\nimport { Line } from '../../UI/Grid';\nimport { ResponsiveLineStackLayout } from '../../UI/Layout';\nimport Text from '../../UI/Text';\nimport {\n  getAchievements,\n  type Badge,\n  type Achievement,\n} from '../../Utils/GDevelopServices/Badge';\n\nimport AchievementList from './AchievementList';\nimport Trophy from '../../UI/CustomSvgIcons/Trophy';\nimport { useResponsiveWindowWidth } from '../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport PlaceholderLoader from '../../UI/PlaceholderLoader';\n\ntype Props = {|\n  badges: ?Array<Badge>,\n  displayUnclaimedAchievements: boolean,\n  displayNotifications: boolean,\n|};\n\nconst styles = {\n  summary: {\n    textAlign: 'center',\n  },\n  leftContainer: {\n    flex: 1,\n    margin: '20px',\n  },\n  rightContainer: {\n    flex: 2,\n  },\n};\n\nconst UserAchievements = ({\n  badges,\n  displayUnclaimedAchievements,\n  displayNotifications,\n}: Props) => {\n  const [achievements, setAchievements] = useState<?Array<Achievement>>(null);\n  const [displayError, setDisplayError] = useState<boolean>(false);\n  const windowWidth = useResponsiveWindowWidth();\n\n  const fetchAchievements = useCallback(async () => {\n    try {\n      setDisplayError(false);\n      const achievements = await getAchievements();\n      setAchievements(achievements);\n    } catch (err) {\n      console.log(`Error when fetching achievements: ${err}`);\n      setDisplayError(true);\n    }\n  }, []);\n\n  useEffect(\n    () => {\n      fetchAchievements();\n    },\n    [fetchAchievements]\n  );\n\n  return (\n    <ResponsiveLineStackLayout>\n      {displayError ? (\n        <Line>\n          <AlertMessage kind=\"error\">\n            <Trans>Unable to display your achievements for now.</Trans>{' '}\n            <Trans>\n              Please check your internet connection or try again later.\n            </Trans>\n          </AlertMessage>\n        </Line>\n      ) : !!badges && !!achievements ? (\n        <>\n          <div style={styles.leftContainer}>\n            <div\n              style={{\n                ...styles.summary,\n                padding: windowWidth === 'small' ? '0 20' : '20',\n              }}\n            >\n              <Trophy color=\"primary\" fontSize=\"large\" />\n              <Text size=\"title\">\n                <Trans>\n                  {badges.length}/{achievements.length} achievements\n                </Trans>\n                {badges.length === 0 && (\n                  <>\n                    {' '}\n                    <Trans>(yet!)</Trans>\n                  </>\n                )}\n              </Text>\n            </div>\n          </div>\n          {badges.length > 0 && (\n            <div style={styles.rightContainer}>\n              {badges && achievements && (\n                <AchievementList\n                  badges={badges}\n                  achievements={achievements}\n                  displayUnclaimedAchievements={displayUnclaimedAchievements}\n                  displayNotifications={displayNotifications}\n                />\n              )}\n            </div>\n          )}\n        </>\n      ) : (\n        <PlaceholderLoader />\n      )}\n    </ResponsiveLineStackLayout>\n  );\n};\n\nexport default UserAchievements;\n","// @flow\nimport { Trans, t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport { Column, Line, Spacer } from '../UI/Grid';\nimport { ResponsiveLineStackLayout } from '../UI/Layout';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport { getGravatarUrl } from '../UI/GravatarUrl';\nimport Text from '../UI/Text';\nimport TextField from '../UI/TextField';\nimport { I18n } from '@lingui/react';\nimport PlaceholderError from '../UI/PlaceholderError';\nimport RaisedButton from '../UI/RaisedButton';\nimport UserAchievements from './Achievement/UserAchievements';\nimport { type Badge } from '../Utils/GDevelopServices/Badge';\nimport Window from '../Utils/Window';\nimport { GDevelopGamesPlatform } from '../Utils/GDevelopServices/ApiConfigs';\n\ntype DisplayedProfile = {\n  id: string,\n  +email?: string,\n  description: ?string,\n  username: ?string,\n};\n\ntype Props = {|\n  profile: ?DisplayedProfile,\n  isAuthenticatedUserProfile?: boolean,\n  error?: ?Error,\n  onRetry?: () => void,\n  onChangeEmail?: () => void,\n  onEditProfile?: () => void,\n  badges: ?Array<Badge>,\n|};\n\nconst ProfileDetails = ({\n  profile,\n  isAuthenticatedUserProfile,\n  error,\n  onRetry,\n  onChangeEmail,\n  onEditProfile,\n  badges,\n}: Props) => {\n  return profile ? (\n    <I18n>\n      {({ i18n }) => (\n        <Column>\n          <ResponsiveLineStackLayout\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n            noColumnMargin\n          >\n            <Line>\n              <Avatar src={getGravatarUrl(profile.email || '', { size: 40 })} />\n              <Spacer />\n              <Text\n                size=\"title\"\n                style={{\n                  opacity: profile.username ? 1.0 : 0.5,\n                }}\n              >\n                {profile.username ||\n                  (isAuthenticatedUserProfile\n                    ? i18n._(t`Edit your profile to pick a username!`)\n                    : i18n._(t`No username`))}\n              </Text>\n            </Line>\n            {profile.id && (\n              <RaisedButton\n                label={i18n._(t`Access public profile`)}\n                onClick={() =>\n                  Window.openExternalURL(\n                    GDevelopGamesPlatform.getUserPublicProfileUrl(\n                      profile.id,\n                      profile.username\n                    )\n                  )\n                }\n                icon={<OpenInNew />}\n              />\n            )}\n          </ResponsiveLineStackLayout>\n          {isAuthenticatedUserProfile && profile.email && (\n            <Line>\n              <TextField\n                value={profile.email}\n                readOnly\n                fullWidth\n                floatingLabelText={<Trans>Email</Trans>}\n                floatingLabelFixed={true}\n              />\n            </Line>\n          )}\n          <Line>\n            <TextField\n              value={profile.description || ''}\n              readOnly\n              fullWidth\n              multiline\n              floatingLabelText={<Trans>Bio</Trans>}\n              floatingLabelFixed={true}\n              hintText={\n                isAuthenticatedUserProfile\n                  ? t`No bio defined. Edit your profile to tell us what you are using GDevelop for!`\n                  : t`No bio defined.`\n              }\n              rows={3}\n              rowsMax={5}\n            />\n          </Line>\n          {isAuthenticatedUserProfile && (\n            <ResponsiveLineStackLayout justifyContent=\"flex-end\" noColumnMargin>\n              <RaisedButton\n                label={<Trans>Change my email</Trans>}\n                onClick={onChangeEmail}\n              />\n              <RaisedButton\n                label={<Trans>Edit my profile</Trans>}\n                primary\n                onClick={onEditProfile}\n              />\n            </ResponsiveLineStackLayout>\n          )}\n          <UserAchievements\n            badges={badges}\n            displayUnclaimedAchievements={!!isAuthenticatedUserProfile}\n            displayNotifications={!!isAuthenticatedUserProfile}\n          />\n        </Column>\n      )}\n    </I18n>\n  ) : error ? (\n    <PlaceholderError onRetry={onRetry}>\n      <Trans>\n        Unable to load the profile, please verify your internet connection or\n        try again later.\n      </Trans>\n    </PlaceholderError>\n  ) : (\n    <PlaceholderLoader />\n  );\n};\n\nexport default ProfileDetails;\n","// @flow\nimport {\n  type LeaderboardScoreFormattingCustom,\n  type LeaderboardScoreFormattingTime,\n  type LeaderboardScoreFormatting,\n} from '../Utils/GDevelopServices/Play';\n\nexport const orderedTimeUnits = ['hour', 'minute', 'second', 'millisecond'];\nconst unitToDivider = {\n  hour: 3600000,\n  minute: 60000,\n  second: 1000,\n  millisecond: 1,\n};\nexport const unitToNextSeparator = {\n  hour: ':',\n  minute: ':',\n  second: '.',\n  millisecond: '',\n};\n\nexport const formatDuration = (\n  durationInSecond: number,\n  options: LeaderboardScoreFormattingTime\n): string => {\n  let formattedDuration = '';\n  let durationInMs = Math.round(durationInSecond * 1000);\n  const biggestUnitIndex = orderedTimeUnits.indexOf(options.biggestUnit);\n  const smallestUnitIndex = orderedTimeUnits.indexOf(options.smallestUnit);\n  for (let index = biggestUnitIndex; index <= smallestUnitIndex; index++) {\n    const unit = orderedTimeUnits[index];\n    const divider = unitToDivider[unit];\n    const remainder = durationInMs % divider;\n    const quotient = (durationInMs - remainder) / divider;\n    formattedDuration += `${quotient\n      .toString()\n      .padStart(unit === 'millisecond' ? 3 : 2, '0')}${\n      index === smallestUnitIndex ? '' : unitToNextSeparator[unit]\n    }`;\n    durationInMs = remainder;\n  }\n  return formattedDuration;\n};\n\nexport const formatCustomScore = (\n  score: number,\n  options: LeaderboardScoreFormattingCustom\n): string => {\n  const roundedScore =\n    Math.round(score * 10 ** options.precision) / 10 ** options.precision;\n  return `${options.prefix}${roundedScore.toFixed(\n    Math.max(0, options.precision)\n  )}${options.suffix}`;\n};\n\nexport const formatScore = (\n  score: number,\n  options: LeaderboardScoreFormatting\n): string =>\n  options.type === 'time'\n    ? formatDuration(score, options)\n    : formatCustomScore(score, options);\n","// @flow\nimport { Trans, t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport * as React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Error from '@material-ui/icons/Error';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport NavigateBefore from '@material-ui/icons/NavigateBefore';\nimport NavigateNext from '@material-ui/icons/NavigateNext';\n\nimport IconButton from '../../UI/IconButton';\nimport { Column, Line } from '../../UI/Grid';\nimport PlaceholderLoader from '../../UI/PlaceholderLoader';\nimport Text from '../../UI/Text';\nimport { textEllipsisStyle } from '../../UI/TextEllipsis';\nimport {\n  type LeaderboardDisplayData,\n  type LeaderboardCustomizationSettings,\n} from '../../Utils/GDevelopServices/Play';\nimport { formatScore } from '../../Leaderboard/LeaderboardScoreFormatter';\n\ntype Props = {|\n  entries: ?Array<LeaderboardDisplayData>,\n  customizationSettings: ?LeaderboardCustomizationSettings,\n  onDeleteEntry: (entryId: string) => Promise<void>,\n  isLoading: boolean,\n  erroredEntry?: {| entryId: string, message: React.Node |},\n  navigation: {|\n    goToFirstPage: ?() => Promise<void>,\n    goToPreviousPage: ?() => Promise<void>,\n    goToNextPage: ?() => Promise<void>,\n  |},\n|};\n\nconst LeaderboardEntriesTable = ({\n  entries,\n  customizationSettings,\n  onDeleteEntry,\n  isLoading,\n  erroredEntry,\n  navigation,\n}: Props) => {\n  if (!entries) return <PlaceholderLoader />;\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Column expand justifyContent=\"space-between\">\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell style={{ width: '20%' }} align=\"center\">\n                  {customizationSettings ? (\n                    customizationSettings.scoreTitle\n                  ) : (\n                    <Trans>Score</Trans>\n                  )}\n                </TableCell>\n                <TableCell style={{ width: '50%' }}>\n                  <Trans>Player</Trans>\n                </TableCell>\n                <TableCell style={{ width: '15%' }}>\n                  <Trans>Date</Trans>\n                </TableCell>\n                <TableCell style={{ width: '15%' }}>\n                  <Trans>Action</Trans>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {entries.map(entry => (\n                <TableRow key={entry.id}>\n                  <TableCell align=\"center\">\n                    {customizationSettings\n                      ? formatScore(\n                          entry.score,\n                          customizationSettings.scoreFormatting\n                        )\n                      : entry.score}\n                  </TableCell>\n                  <TableCell\n                    style={{\n                      ...textEllipsisStyle,\n                      maxWidth: 0, // to trigger the text ellipsis when overflowing\n                    }}\n                  >\n                    <Tooltip title={entry.playerName}>\n                      <span>{entry.playerName}</span>\n                    </Tooltip>\n                  </TableCell>\n                  <TableCell>\n                    <Tooltip\n                      title={i18n.date(entry.createdAt, {\n                        dateStyle: 'short',\n                        timeStyle: 'short',\n                      })}\n                    >\n                      <span>{i18n.date(entry.createdAt)}</span>\n                    </Tooltip>\n                  </TableCell>\n                  <TableCell>\n                    <Line>\n                      <Tooltip title={'Remove entry'}>\n                        <IconButton\n                          size=\"small\"\n                          onClick={() => onDeleteEntry(entry.id)}\n                          disabled={isLoading}\n                        >\n                          <DeleteOutline size={20} />\n                        </IconButton>\n                      </Tooltip>\n                      {erroredEntry && erroredEntry.entryId === entry.id ? (\n                        <Tooltip title={erroredEntry.message}>\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => {}} // wrap in icon button to match above icon padding\n                          >\n                            <Error size={20} color=\"error\" />\n                          </IconButton>\n                        </Tooltip>\n                      ) : null}\n                    </Line>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          {entries.length === 0 ? (\n            <Column expand justifyContent=\"center\" alignItems=\"center\">\n              <Text size=\"body2\">\n                <Trans>No entries</Trans>\n              </Text>\n            </Column>\n          ) : (\n            <Line noMargin justifyContent=\"flex-end\">\n              <IconButton\n                tooltip={t`Go to first page`}\n                disabled={!navigation.goToFirstPage}\n                onClick={() => {\n                  if (navigation.goToFirstPage) navigation.goToFirstPage();\n                }}\n              >\n                <FirstPage />\n              </IconButton>\n              <IconButton\n                tooltip={t`Previous page`}\n                disabled={!navigation.goToPreviousPage}\n                onClick={() => {\n                  if (navigation.goToPreviousPage)\n                    navigation.goToPreviousPage();\n                }}\n              >\n                <NavigateBefore />\n              </IconButton>\n              <IconButton\n                tooltip={t`Next page`}\n                disabled={!navigation.goToNextPage}\n                onClick={() => {\n                  if (navigation.goToNextPage) navigation.goToNextPage();\n                }}\n              >\n                <NavigateNext />\n              </IconButton>\n            </Line>\n          )}\n        </Column>\n      )}\n    </I18n>\n  );\n};\n\nexport default LeaderboardEntriesTable;\n","// @flow\nimport React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport { ResponsiveLineStackLayout } from '../../UI/Layout';\nimport RaisedButton from '../../UI/RaisedButton';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\nimport Text from '../../UI/Text';\nimport TextField from '../../UI/TextField';\n\nimport {\n  type LeaderboardCustomizationSettings,\n  type LeaderboardScoreFormattingTimeUnit,\n} from '../../Utils/GDevelopServices/Play';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport {\n  formatScore,\n  orderedTimeUnits,\n  unitToNextSeparator,\n} from '../../Leaderboard/LeaderboardScoreFormatter';\nimport AlertMessage from '../../UI/AlertMessage';\n\nconst unitToAbbreviation = {\n  hour: 'HH',\n  minute: 'MM',\n  second: 'SS',\n  millisecond: 'ms',\n};\n\nconst getIdentifierFromUnits = (units: {|\n  smallestUnit: LeaderboardScoreFormattingTimeUnit,\n  biggestUnit: LeaderboardScoreFormattingTimeUnit,\n|}): string => {\n  const biggestUnitIndex = orderedTimeUnits.indexOf(units.biggestUnit);\n  const smallestUnitIndex = orderedTimeUnits.indexOf(units.smallestUnit);\n  let identifier = '';\n  for (let index = biggestUnitIndex; index <= smallestUnitIndex; index++) {\n    const unit = orderedTimeUnits[index];\n    identifier += `${unitToAbbreviation[unit]}${\n      index === smallestUnitIndex ? '' : unitToNextSeparator[unit]\n    }`;\n  }\n  return identifier;\n};\n\nconst unitSelectOptions = orderedTimeUnits.reduce(\n  (acc, currentUnit, currentUnitIndex) => {\n    for (\n      let otherUnitIndex = currentUnitIndex;\n      otherUnitIndex < orderedTimeUnits.length;\n      otherUnitIndex++\n    ) {\n      const selectedUnits = {\n        biggestUnit: orderedTimeUnits[currentUnitIndex],\n        smallestUnit: orderedTimeUnits[otherUnitIndex],\n      };\n      acc[getIdentifierFromUnits(selectedUnits)] = selectedUnits;\n    }\n    return acc;\n  },\n  {}\n);\n\ntype Props = {\n  open: boolean,\n  leaderboardCustomizationSettings: ?LeaderboardCustomizationSettings,\n  onSave: LeaderboardCustomizationSettings => Promise<void>,\n  onClose: () => void,\n};\n\nconst scorePreviewMaxValue = 999999999;\nconst precisionMinValue = -3;\nconst precisionMaxValue = 3;\n\nfunction LeaderboardAppearanceDialog({\n  open,\n  onClose,\n  onSave,\n  leaderboardCustomizationSettings,\n}: Props) {\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n  const [scoreTitleError, setScoreTitleError] = React.useState<?string>(null);\n  const [scoreTitle, setScoreTitle] = React.useState<string>(\n    leaderboardCustomizationSettings\n      ? leaderboardCustomizationSettings.scoreTitle\n      : 'Score'\n  );\n  const [scoreType, setScoreType] = React.useState<'custom' | 'time'>(\n    leaderboardCustomizationSettings\n      ? leaderboardCustomizationSettings.scoreFormatting.type\n      : 'custom'\n  );\n  const [prefix, setPrefix] = React.useState<string>(\n    leaderboardCustomizationSettings &&\n      leaderboardCustomizationSettings.scoreFormatting.type === 'custom'\n      ? leaderboardCustomizationSettings.scoreFormatting.prefix\n      : ''\n  );\n  const [suffix, setSuffix] = React.useState<string>(\n    leaderboardCustomizationSettings &&\n      leaderboardCustomizationSettings.scoreFormatting.type === 'custom'\n      ? leaderboardCustomizationSettings.scoreFormatting.suffix\n      : ''\n  );\n  const [precision, setPrecision] = React.useState<number>(\n    leaderboardCustomizationSettings &&\n      leaderboardCustomizationSettings.scoreFormatting.type === 'custom'\n      ? leaderboardCustomizationSettings.scoreFormatting.precision\n      : 0\n  );\n  const [timeUnits, setTimeUnits] = React.useState<string>(\n    leaderboardCustomizationSettings &&\n      leaderboardCustomizationSettings.scoreFormatting.type === 'time'\n      ? getIdentifierFromUnits({\n          smallestUnit:\n            leaderboardCustomizationSettings.scoreFormatting.smallestUnit,\n          biggestUnit:\n            leaderboardCustomizationSettings.scoreFormatting.biggestUnit,\n        })\n      : getIdentifierFromUnits({\n          biggestUnit: 'second',\n          smallestUnit: 'millisecond',\n        })\n  );\n  const [scorePreview, setScorePreview] = React.useState<number>(15.2659);\n\n  const onSaveSettings = async (i18n: I18nType) => {\n    if (!scoreTitle) {\n      setScoreTitleError(i18n._(t`Title cannot be empty.`));\n      return;\n    }\n    setIsLoading(true);\n    const customizationSettings = {\n      scoreTitle,\n      scoreFormatting:\n        scoreType === 'custom'\n          ? {\n              type: scoreType,\n              prefix,\n              suffix,\n              precision,\n            }\n          : { type: scoreType, ...unitSelectOptions[timeUnits] },\n    };\n    await onSave(customizationSettings);\n  };\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Dialog\n          open={open}\n          maxWidth=\"sm\"\n          onRequestClose={() => {\n            if (!isLoading) onClose();\n          }}\n          actions={[\n            <FlatButton\n              label={<Trans>Cancel</Trans>}\n              disabled={isLoading}\n              onClick={onClose}\n              key={'cancel'}\n            />,\n            <RaisedButton\n              primary\n              label={<Trans>Save</Trans>}\n              disabled={isLoading}\n              onClick={() => onSaveSettings(i18n)}\n              key={'save'}\n            />,\n          ]}\n        >\n          <Text size=\"title\">\n            <Trans>Score column settings</Trans>\n          </Text>\n          <Line>\n            <TextField\n              fullWidth\n              floatingLabelText={<Trans>Column title</Trans>}\n              maxLength={20}\n              errorText={scoreTitleError}\n              value={scoreTitle}\n              onChange={(e, newTitle) => {\n                if (!!scoreTitleError && !!newTitle) setScoreTitleError(null);\n                setScoreTitle(newTitle);\n              }}\n            />\n          </Line>\n          <Column noMargin>\n            <Line>\n              <SelectField\n                fullWidth\n                value={scoreType}\n                floatingLabelText={<Trans>Score display</Trans>}\n                onChange={(e, i, newValue) =>\n                  // $FlowIgnore\n                  setScoreType(newValue)\n                }\n              >\n                <SelectOption\n                  key={'custom'}\n                  value={'custom'}\n                  primaryText={t`Custom display`}\n                />\n                <SelectOption\n                  key={'time'}\n                  value={'time'}\n                  primaryText={t`Display as time`}\n                />\n              </SelectField>\n            </Line>\n            <Column>\n              <Line noMargin>\n                <Text size=\"body2\">\n                  <Trans>Settings</Trans>\n                </Text>\n              </Line>\n              {scoreType === 'custom' ? (\n                <>\n                  <ResponsiveLineStackLayout noColumnMargin>\n                    <Column expand noMargin>\n                      <TextField\n                        fullWidth\n                        floatingLabelFixed\n                        floatingLabelText={<Trans>Prefix</Trans>}\n                        maxLength={10}\n                        value={prefix}\n                        hintText={t`Ex: $`}\n                        onChange={(e, newValue) => {\n                          setPrefix(newValue);\n                        }}\n                      />\n                    </Column>\n                    <Column expand noMargin>\n                      <TextField\n                        fullWidth\n                        floatingLabelFixed\n                        floatingLabelText={<Trans>Suffix</Trans>}\n                        maxLength={10}\n                        value={suffix}\n                        hintText={t`Ex: coins`}\n                        onChange={(e, newValue) => {\n                          setSuffix(newValue);\n                        }}\n                      />\n                    </Column>\n                  </ResponsiveLineStackLayout>\n                  <Spacer />\n                  <ResponsiveLineStackLayout noColumnMargin noMargin>\n                    <Column expand noMargin>\n                      <TextField\n                        fullWidth\n                        type=\"number\"\n                        floatingLabelText={\n                          <Trans>Round to X decimal point</Trans>\n                        }\n                        value={isNaN(precision) ? '' : precision}\n                        min={precisionMinValue}\n                        max={precisionMaxValue}\n                        onChange={(e, newValue) => {\n                          setPrecision(\n                            Math.max(\n                              precisionMinValue,\n                              Math.min(precisionMaxValue, parseFloat(newValue))\n                            )\n                          );\n                        }}\n                      />\n                    </Column>\n                    <Column expand noMargin />\n                  </ResponsiveLineStackLayout>\n                </>\n              ) : (\n                <>\n                  <Line noMargin>\n                    <SelectField\n                      fullWidth\n                      value={timeUnits}\n                      floatingLabelText={<Trans>Time format</Trans>}\n                      onChange={(e, i, newValue) =>\n                        // $FlowIgnore\n                        setTimeUnits(newValue)\n                      }\n                    >\n                      {Object.keys(unitSelectOptions).map(option => (\n                        <SelectOption\n                          key={option}\n                          value={option}\n                          primaryText={option}\n                        />\n                      ))}\n                    </SelectField>\n                  </Line>\n                  <Line>\n                    <AlertMessage kind=\"info\">\n                      <Trans>\n                        To use this formatting, you must send a score expressed\n                        in seconds\n                      </Trans>\n                    </AlertMessage>\n                  </Line>\n                </>\n              )}\n              <Spacer />\n              <Line noMargin>\n                <Text size=\"body2\">\n                  <Trans>Preview</Trans>\n                </Text>\n              </Line>\n              <ResponsiveLineStackLayout noColumnMargin>\n                <TextField\n                  fullWidth\n                  floatingLabelText={\n                    scoreType === 'custom' ? (\n                      <Trans>Test value</Trans>\n                    ) : (\n                      <Trans>Test value (in second)</Trans>\n                    )\n                  }\n                  max={scorePreviewMaxValue}\n                  min={0}\n                  type=\"number\"\n                  value={isNaN(scorePreview) ? '' : scorePreview}\n                  onChange={(e, value) =>\n                    setScorePreview(\n                      Math.max(\n                        0,\n                        Math.min(scorePreviewMaxValue, parseFloat(value))\n                      )\n                    )\n                  }\n                />\n\n                <TextField\n                  disabled\n                  fullWidth\n                  floatingLabelText={<Trans>Displayed score</Trans>}\n                  value={formatScore(\n                    scorePreview || 0,\n                    scoreType === 'time'\n                      ? {\n                          type: scoreType,\n                          ...unitSelectOptions[timeUnits],\n                        }\n                      : {\n                          type: scoreType,\n                          prefix,\n                          suffix,\n                          precision: precision || 0,\n                        }\n                  )}\n                />\n              </ResponsiveLineStackLayout>\n            </Column>\n          </Column>\n        </Dialog>\n      )}\n    </I18n>\n  );\n}\n\nexport default LeaderboardAppearanceDialog;\n","// @flow\nimport * as React from 'react';\nimport { Trans, t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport Switch from '@material-ui/core/Switch';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport Add from '@material-ui/icons/Add';\nimport Brush from '@material-ui/icons/Brush';\nimport TextFormat from '@material-ui/icons/TextFormat';\nimport Save from '@material-ui/icons/Save';\nimport Cancel from '@material-ui/icons/Cancel';\nimport Edit from '@material-ui/icons/Edit';\nimport Label from '@material-ui/icons/Label';\nimport Fingerprint from '@material-ui/icons/Fingerprint';\nimport Update from '@material-ui/icons/Update';\nimport Today from '@material-ui/icons/Today';\nimport Sort from '@material-ui/icons/Sort';\nimport PeopleAlt from '@material-ui/icons/PeopleAlt';\nimport SwapVertical from '@material-ui/icons/SwapVert';\nimport Refresh from '@material-ui/icons/Refresh';\nimport Delete from '@material-ui/icons/Delete';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Loop from '@material-ui/icons/Loop';\n\nimport Copy from '../../UI/CustomSvgIcons/Copy';\nimport PlaceholderLoader from '../../UI/PlaceholderLoader';\nimport { EmptyPlaceholder } from '../../UI/EmptyPlaceholder';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport IconButton from '../../UI/IconButton';\nimport PlaceholderError from '../../UI/PlaceholderError';\nimport AlertMessage from '../../UI/AlertMessage';\nimport RaisedButton from '../../UI/RaisedButton';\nimport TextField from '../../UI/TextField';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\nimport { useOnlineStatus } from '../../Utils/OnlineStatus';\nimport {\n  type Leaderboard,\n  type LeaderboardCustomizationSettings,\n  type LeaderboardUpdatePayload,\n  breakUuid,\n} from '../../Utils/GDevelopServices/Play';\nimport LeaderboardContext from '../../Leaderboard/LeaderboardContext';\nimport LeaderboardProvider from '../../Leaderboard/LeaderboardProvider';\nimport Window from '../../Utils/Window';\nimport LeaderboardEntriesTable from './LeaderboardEntriesTable';\nimport { ResponsiveLineStackLayout } from '../../UI/Layout';\nimport { useResponsiveWindowWidth } from '../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport { textEllipsisStyle } from '../../UI/TextEllipsis';\nimport { shouldValidate } from '../../UI/KeyboardShortcuts/InteractionKeys';\nimport Text from '../../UI/Text';\nimport { GameRegistration } from '../GameRegistration';\nimport LeaderboardAppearanceDialog from './LeaderboardAppearanceDialog';\n\ntype Props = {| onLoading: boolean => void, project?: gdProject |};\ntype ContainerProps = {| ...Props, gameId: string |};\n\ntype ApiError = {|\n  action:\n    | 'entriesFetching'\n    | 'entryDeletion'\n    | 'leaderboardsFetching'\n    | 'leaderboardNameUpdate'\n    | 'leaderboardSortUpdate'\n    | 'leaderboardVisibilityUpdate'\n    | 'leaderboardAppearanceUpdate'\n    | 'leaderboardPlayerUnicityDisplayChoiceUpdate'\n    | 'leaderboardCreation'\n    | 'leaderboardReset'\n    | 'leaderboardDeletion',\n  message: React.Node,\n  itemId?: string,\n|};\n\nconst CenteredError = ({ children }: {| children: React.Node |}) => (\n  <Column expand justifyContent=\"center\" alignItems=\"center\">\n    <Line>{children}</Line>\n  </Column>\n);\n\nconst styles = {\n  leftColumn: { display: 'flex', flexDirection: 'column', flex: 1, padding: 5 },\n  rightColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 2,\n  },\n  leaderboardConfigurationPaper: { padding: 5, margin: 5 },\n  leaderboardNameText: { ...textEllipsisStyle, width: 150 },\n  leaderboardNameTextField: { width: 125, fontSize: 14 },\n};\n\nconst getApiError = (payload: LeaderboardUpdatePayload) => ({\n  action: payload.name\n    ? 'leaderboardNameUpdate'\n    : payload.sort\n    ? 'leaderboardSortUpdate'\n    : payload.visibility\n    ? 'leaderboardVisibilityUpdate'\n    : payload.customizationSettings\n    ? 'leaderboardAppearanceUpdate'\n    : 'leaderboardPlayerUnicityDisplayChoiceUpdate',\n  message: payload.name ? (\n    <Trans>\n      An error occurred when updating the name of the leaderboard, please close\n      the dialog, come back and try again.\n    </Trans>\n  ) : payload.sort ? (\n    <Trans>\n      An error occurred when updating the sort direction of the leaderboard,\n      please close the dialog, come back and try again.\n    </Trans>\n  ) : payload.visibility ? (\n    <Trans>\n      An error occurred when updating the visibility of the leaderboard, please\n      close the dialog, come back and try again.\n    </Trans>\n  ) : payload.customizationSettings ? (\n    <Trans>\n      An error occurred when updating the appearance of the leaderboard, please\n      close the dialog, come back and try again.\n    </Trans>\n  ) : (\n    <Trans>\n      An error occurred when updating the display choice of the leaderboard,\n      please close the dialog, come back and try again.\n    </Trans>\n  ),\n});\n\nexport const LeaderboardAdmin = ({ onLoading, project }: Props) => {\n  const isOnline = useOnlineStatus();\n  const windowWidth = useResponsiveWindowWidth();\n  const [isEditingAppearance, setIsEditingAppearance] = React.useState<boolean>(\n    false\n  );\n  const [isEditingName, setIsEditingName] = React.useState<boolean>(false);\n  const [isRequestPending, setIsRequestPending] = React.useState<boolean>(\n    false\n  );\n  const [newName, setNewName] = React.useState<string>('');\n  const [newNameError, setNewNameError] = React.useState<?string>(null);\n  const newNameTextFieldRef = React.useRef<?TextField>(null);\n  const [apiError, setApiError] = React.useState<?ApiError>(null);\n  const [\n    displayGameRegistration,\n    setDisplayGameRegistration,\n  ] = React.useState<boolean>(false);\n\n  const {\n    leaderboards,\n    listLeaderboards,\n    currentLeaderboard,\n    createLeaderboard,\n    selectLeaderboard,\n    updateLeaderboard,\n    resetLeaderboard,\n    deleteLeaderboard,\n    deleteLeaderboardEntry,\n    displayOnlyBestEntry,\n    setDisplayOnlyBestEntry,\n    fetchLeaderboardEntries,\n    browsing: { entries, goToNextPage, goToPreviousPage, goToFirstPage },\n  } = React.useContext(LeaderboardContext);\n\n  const setIsLoading = React.useCallback(\n    (yesOrNo: boolean) => {\n      setIsRequestPending(yesOrNo);\n      onLoading(yesOrNo);\n    },\n    [onLoading]\n  );\n\n  const onUpdateLeaderboard = async (\n    i18n: I18nType,\n    payload: LeaderboardUpdatePayload\n  ) => {\n    setNewNameError(null);\n    if (payload.name !== undefined && payload.name.length === 0) {\n      setNewNameError(\n        i18n._(\n          t`Please enter a name that is at least one character long and 50 at most.`\n        )\n      );\n      return;\n    }\n    setIsLoading(true);\n    setApiError(null);\n    try {\n      await updateLeaderboard(payload);\n      if (payload.name) setIsEditingName(false);\n    } catch (err) {\n      console.error('An error occurred when updating leaderboard', err);\n      setApiError(getApiError(payload));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const onListLeaderboards = React.useCallback(\n    () => {\n      const fetchAndHandleError = async () => {\n        setIsLoading(true);\n        setApiError(null);\n        try {\n          await listLeaderboards();\n        } catch (err) {\n          if (err.response && err.response.status === 404) {\n            setDisplayGameRegistration(true);\n            return;\n          }\n          console.error('An error occurred when fetching leaderboards', err);\n          setApiError({\n            action: 'leaderboardsFetching',\n            message: (\n              <Trans>\n                An error occurred when fetching the leaderboards, please close\n                the dialog and reopen it.\n              </Trans>\n            ),\n          });\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      fetchAndHandleError();\n    },\n    [setIsLoading, listLeaderboards]\n  );\n\n  const onFetchLeaderboardEntries = async () => {\n    setIsLoading(true);\n    setApiError(null);\n    try {\n      await fetchLeaderboardEntries();\n    } catch (err) {\n      console.error('An error occurred when fetching leaderboard entries', err);\n      setApiError({\n        action: 'entriesFetching',\n        message: (\n          <Trans>\n            An error occurred when fetching the entries of the leaderboard,\n            please try again.\n          </Trans>\n        ),\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const onCreateLeaderboard = async () => {\n    setIsLoading(true);\n    setApiError(null);\n    try {\n      await createLeaderboard({\n        name: 'New leaderboard',\n        sort: 'ASC',\n      });\n    } catch (err) {\n      console.error('An error occurred when creating leaderboard', err);\n      setApiError({\n        action: 'leaderboardCreation',\n        message: (\n          <Trans>\n            An error occurred when creating a new leaderboard, please close the\n            dialog, come back and try again.\n          </Trans>\n        ),\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const onResetLeaderboard = async (i18n: I18nType) => {\n    const answer = Window.showConfirmDialog(\n      i18n._(\n        t`All current entries will be deleted, are you sure you want to reset this leaderboard? This can't be undone.`\n      )\n    );\n    if (!answer) return;\n\n    setIsLoading(true);\n    setApiError(null);\n    try {\n      await resetLeaderboard();\n    } catch (err) {\n      console.error('An error occurred when resetting leaderboard', err);\n      setApiError({\n        action: 'leaderboardReset',\n        message: (\n          <Trans>\n            An error occurred when resetting the leaderboard, please close the\n            dialog, come back and try again.\n          </Trans>\n        ),\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const onDeleteLeaderboard = async (i18n: I18nType) => {\n    const answer = Window.showConfirmDialog(\n      i18n._(\n        t`Are you sure you want to delete this leaderboard and all of its entries? This can't be undone.`\n      )\n    );\n    if (!answer) return;\n\n    setIsLoading(true);\n    setApiError(null);\n    try {\n      await deleteLeaderboard();\n    } catch (err) {\n      console.error('An error occurred when deleting leaderboard', err);\n      setApiError({\n        action: 'leaderboardDeletion',\n        message: (\n          <Trans>\n            An error occurred when deleting the leaderboard, please close the\n            dialog, come back and try again.\n          </Trans>\n        ),\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const onDeleteEntry = async (i18n: I18nType, entryId: string) => {\n    const answer = Window.showConfirmDialog(\n      i18n._(\n        t`Are you sure you want to delete this entry? This can't be undone.`\n      )\n    );\n    if (!answer) return;\n\n    setIsLoading(true);\n    setApiError(null);\n    try {\n      await deleteLeaderboardEntry(entryId);\n    } catch (err) {\n      console.error('An error occurred when deleting entry', err);\n      setApiError({\n        action: 'entryDeletion',\n        message: (\n          <Trans>\n            An error occurred when deleting the entry, please try again.\n          </Trans>\n        ),\n        itemId: entryId,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  React.useEffect(\n    () => {\n      if (isEditingName && newNameTextFieldRef.current) {\n        newNameTextFieldRef.current.focus();\n      }\n    },\n    [isEditingName]\n  );\n\n  React.useEffect(\n    () => {\n      if (leaderboards === null) {\n        onListLeaderboards();\n      }\n    },\n    [leaderboards, onListLeaderboards]\n  );\n\n  React.useEffect(() => {\n    if (currentLeaderboard) onFetchLeaderboardEntries();\n    // This has to be executed on component mount to refresh entries on each admin opening\n    // eslint-disable-next-line\n  }, []);\n\n  const onCopy = React.useCallback(\n    () => {\n      if (!currentLeaderboard) return;\n      // TODO: use Clipboard.js, after it's been reworked to use this API and handle text.\n      navigator.clipboard.writeText(currentLeaderboard.id);\n    },\n    [currentLeaderboard]\n  );\n  if (!isOnline) {\n    return (\n      <CenteredError>\n        <PlaceholderError>\n          <Trans>\n            An internet connection is required to administrate your game's\n            leaderboards.\n          </Trans>\n        </PlaceholderError>\n      </CenteredError>\n    );\n  }\n  if (!!displayGameRegistration) {\n    return (\n      <CenteredError>\n        <GameRegistration\n          project={project}\n          hideIfRegistered\n          onGameRegistered={() => {\n            setDisplayGameRegistration(false);\n            onListLeaderboards();\n          }}\n        />\n      </CenteredError>\n    );\n  }\n  if (apiError && apiError.action === 'leaderboardCreation') {\n    return (\n      <CenteredError>\n        <AlertMessage kind=\"error\">{apiError.message}</AlertMessage>\n      </CenteredError>\n    );\n  }\n  if (apiError && apiError.action === 'leaderboardsFetching') {\n    return (\n      <CenteredError>\n        <PlaceholderError onRetry={onListLeaderboards} kind=\"error\">\n          {apiError.message}\n        </PlaceholderError>\n      </CenteredError>\n    );\n  }\n  if (leaderboards === null) {\n    if (isRequestPending) return <PlaceholderLoader />;\n\n    return (\n      <CenteredError>\n        <PlaceholderError onRetry={onListLeaderboards} kind=\"error\">\n          <Trans>\n            An error occurred when retrieving leaderboards, please try again\n            later.\n          </Trans>\n        </PlaceholderError>\n      </CenteredError>\n    );\n  }\n\n  if (!!leaderboards && leaderboards.length === 0)\n    return (\n      <Line noMargin expand justifyContent=\"center\" alignItems=\"center\">\n        <EmptyPlaceholder\n          title={<Trans>Create your game's first leaderboard</Trans>}\n          description={<Trans>Leaderboards help retain your players</Trans>}\n          actionLabel={<Trans>Create a leaderboard</Trans>}\n          onAdd={() => {\n            onCreateLeaderboard();\n          }}\n          isLoading={isRequestPending}\n        />\n      </Line>\n    );\n\n  const getLeaderboardDescription = (\n    i18n: I18nType,\n    currentLeaderboard: Leaderboard\n  ) => [\n    {\n      key: 'name',\n      avatar: <Label />,\n      text: isEditingName ? (\n        <Line alignItems=\"center\" expand noMargin>\n          <TextField\n            ref={newNameTextFieldRef}\n            margin=\"none\"\n            style={styles.leaderboardNameTextField}\n            maxLength={50}\n            value={newName}\n            errorText={newNameError}\n            onChange={(e, text) => setNewName(text)}\n            onKeyPress={event => {\n              if (shouldValidate(event) && !isRequestPending) {\n                onUpdateLeaderboard(i18n, { name: newName });\n              }\n            }}\n            disabled={isRequestPending}\n          />\n          {!isRequestPending && (\n            <>\n              <Spacer />\n              <IconButton\n                tooltip={t`Cancel`}\n                style={{ padding: 0 }}\n                onClick={() => {\n                  setIsEditingName(false);\n                }}\n              >\n                <Cancel />\n              </IconButton>\n            </>\n          )}\n        </Line>\n      ) : (\n        <Tooltip title={currentLeaderboard.name}>\n          <Text size=\"body2\" style={styles.leaderboardNameText}>\n            {currentLeaderboard.name}\n          </Text>\n        </Tooltip>\n      ),\n      secondaryText:\n        apiError && apiError.action === 'leaderboardNameUpdate' ? (\n          <Text color=\"error\" size=\"body2\">\n            {apiError.message}\n          </Text>\n        ) : null,\n      secondaryAction: (\n        <IconButton\n          onClick={() => {\n            if (isEditingName) {\n              onUpdateLeaderboard(i18n, { name: newName });\n            } else {\n              setNewName(currentLeaderboard.name);\n              setIsEditingName(true);\n            }\n          }}\n          tooltip={isEditingName ? t`Save` : t`Rename`}\n          disabled={isRequestPending}\n          edge=\"end\"\n        >\n          {isEditingName ? (\n            isRequestPending ? (\n              <CircularProgress size={20} />\n            ) : (\n              <Save />\n            )\n          ) : (\n            <Edit />\n          )}\n        </IconButton>\n      ),\n    },\n    {\n      key: 'id',\n      avatar: <Fingerprint />,\n      text: (\n        <Tooltip title={currentLeaderboard.id}>\n          <Text size=\"body2\">{breakUuid(currentLeaderboard.id)}</Text>\n        </Tooltip>\n      ),\n      secondaryText: null,\n      secondaryAction: (\n        <IconButton onClick={onCopy} tooltip={t`Copy`} edge=\"end\">\n          <Copy />\n        </IconButton>\n      ),\n    },\n    {\n      key: 'startDatetime',\n      avatar: <Today />,\n      text: (\n        <Tooltip\n          title={i18n._(\n            t`Date from which entries are taken into account: ${i18n.date(\n              currentLeaderboard.startDatetime,\n              {\n                dateStyle: 'short',\n                timeStyle: 'short',\n              }\n            )}`\n          )}\n        >\n          <Text size=\"body2\">\n            {i18n.date(currentLeaderboard.startDatetime)}\n          </Text>\n        </Tooltip>\n      ),\n      secondaryText:\n        apiError && apiError.action === 'leaderboardReset' ? (\n          <Text color=\"error\" size=\"body2\">\n            {apiError.message}\n          </Text>\n        ) : null,\n      secondaryAction: (\n        <IconButton\n          onClick={() => onResetLeaderboard(i18n)}\n          tooltip={t`Reset leaderboard`}\n          edge=\"end\"\n          disabled={isRequestPending || isEditingName}\n        >\n          <Update />\n        </IconButton>\n      ),\n    },\n    {\n      key: 'sort',\n      avatar: <Sort />,\n      text: (\n        <Text size=\"body2\">\n          {currentLeaderboard.sort === 'ASC' ? (\n            <Trans>Lower is better</Trans>\n          ) : (\n            <Trans>Higher is better</Trans>\n          )}\n        </Text>\n      ),\n      secondaryText:\n        apiError && apiError.action === 'leaderboardSortUpdate' ? (\n          <Text color=\"error\" size=\"body2\">\n            {apiError.message}\n          </Text>\n        ) : null,\n      secondaryAction: (\n        <IconButton\n          onClick={async () => {\n            await onUpdateLeaderboard(i18n, {\n              sort: currentLeaderboard.sort === 'ASC' ? 'DESC' : 'ASC',\n            });\n          }}\n          tooltip={t`Change sort direction`}\n          edge=\"end\"\n          disabled={isRequestPending || isEditingName}\n        >\n          <SwapVertical />\n        </IconButton>\n      ),\n    },\n    {\n      key: 'visibility',\n      avatar:\n        currentLeaderboard.visibility === 'HIDDEN' ? (\n          <VisibilityOff />\n        ) : (\n          <Visibility />\n        ),\n      text: (\n        <Tooltip\n          title={i18n._(\n            currentLeaderboard.visibility === 'HIDDEN'\n              ? t`Anyone with the link can see it, but it is not listed in your game's leaderboards.`\n              : t`Anyone can access it.`\n          )}\n        >\n          <Text size=\"body2\">\n            {currentLeaderboard.visibility === 'HIDDEN' ? (\n              <Trans>Not visible</Trans>\n            ) : (\n              <Trans>Public</Trans>\n            )}\n          </Text>\n        </Tooltip>\n      ),\n      secondaryText:\n        apiError && apiError.action === 'leaderboardVisibilityUpdate' ? (\n          <Text color=\"error\" size=\"body2\">\n            {apiError.message}\n          </Text>\n        ) : null,\n      secondaryAction: (\n        <IconButton\n          onClick={async () => {\n            await onUpdateLeaderboard(i18n, {\n              visibility:\n                currentLeaderboard.visibility === 'HIDDEN'\n                  ? 'PUBLIC'\n                  : 'HIDDEN',\n            });\n          }}\n          tooltip={\n            currentLeaderboard.visibility === 'HIDDEN'\n              ? t`Make the leaderboard public`\n              : t`Hide the leaderboard`\n          }\n          edge=\"end\"\n          disabled={isRequestPending || isEditingName}\n        >\n          <Loop />\n        </IconButton>\n      ),\n    },\n    {\n      key: 'appearance',\n      avatar: <TextFormat />,\n      text: (\n        <Text size=\"body2\">\n          <Trans>Leaderboard appearance</Trans>\n        </Text>\n      ),\n      secondaryText:\n        apiError && apiError.action === 'leaderboardAppearanceUpdate' ? (\n          <Text color=\"error\" size=\"body2\">\n            {apiError.message}\n          </Text>\n        ) : null,\n      secondaryAction: (\n        <IconButton\n          onClick={() => setIsEditingAppearance(true)}\n          tooltip={t`Edit`}\n          edge=\"end\"\n          disabled={isRequestPending || isEditingName}\n        >\n          <Brush />\n        </IconButton>\n      ),\n    },\n    {\n      key: 'playerUnicityDisplayChoice',\n      avatar: <PeopleAlt />,\n      text: (\n        <SelectField\n          fullWidth\n          margin=\"none\"\n          value={currentLeaderboard.playerUnicityDisplayChoice}\n          onChange={(e, i, value) => {\n            onUpdateLeaderboard(i18n, {\n              // $FlowFixMe\n              playerUnicityDisplayChoice: value,\n            });\n          }}\n          disabled={isRequestPending || isEditingName}\n          inputStyle={{ fontSize: 14 }}\n          helperMarkdownText={\n            currentLeaderboard.playerUnicityDisplayChoice === 'FREE'\n              ? i18n._(\n                  t`Users can chose to see only players' best entries or not.`\n                )\n              : currentLeaderboard.playerUnicityDisplayChoice ===\n                'PREFER_UNIQUE'\n              ? i18n._(t`Only player's best entries are displayed.`)\n              : i18n._(t`All entries are displayed.`)\n          }\n        >\n          <SelectOption\n            key={'free'}\n            value={'FREE'}\n            primaryText={i18n._(t`Let the user select`)}\n          />\n          <SelectOption\n            key={'prefer-unique'}\n            value={'PREFER_UNIQUE'}\n            primaryText={i18n._(t`Only best entry`)}\n          />\n          <SelectOption\n            key={'prefer-non-unique'}\n            value={'PREFER_NON_UNIQUE'}\n            primaryText={i18n._(t`All entries`)}\n          />\n        </SelectField>\n      ),\n      secondaryText:\n        apiError &&\n        apiError.action === 'leaderboardPlayerUnicityDisplayChoiceUpdate' ? (\n          <Text color=\"error\" size=\"body2\">\n            {apiError.message}\n          </Text>\n        ) : null,\n      secondaryAction: null,\n    },\n  ];\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <>\n          <ResponsiveLineStackLayout noMargin expand noColumnMargin>\n            <div style={styles.leftColumn}>\n              <Paper elevation={5} style={styles.leaderboardConfigurationPaper}>\n                <Column>\n                  <Line>\n                    {currentLeaderboard && leaderboards ? (\n                      <SelectField\n                        fullWidth\n                        floatingLabelText={<Trans>Leaderboard name</Trans>}\n                        value={currentLeaderboard.id}\n                        onChange={(e, i, leaderboardId) => {\n                          selectLeaderboard(leaderboardId);\n                        }}\n                      >\n                        {leaderboards.map(leaderboard => (\n                          <SelectOption\n                            key={leaderboard.id}\n                            value={leaderboard.id}\n                            primaryText={leaderboard.name}\n                          />\n                        ))}\n                      </SelectField>\n                    ) : null}\n                    <IconButton\n                      onClick={onCreateLeaderboard}\n                      disabled={isEditingName || isRequestPending}\n                    >\n                      <Add />\n                    </IconButton>\n                  </Line>\n                  {currentLeaderboard ? (\n                    <>\n                      <List>\n                        {getLeaderboardDescription(\n                          i18n,\n                          currentLeaderboard\n                        ).map((item, index) => (\n                          <React.Fragment key={`fragment-${item.key}`}>\n                            {index > 0 ? (\n                              <Divider\n                                key={`divider-${item.key}`}\n                                component=\"li\"\n                              />\n                            ) : null}\n                            <ListItem key={item.key} disableGutters>\n                              <ListItemAvatar>\n                                <Avatar>{item.avatar}</Avatar>\n                              </ListItemAvatar>\n                              <ListItemText\n                                disableTypography\n                                secondary={item.secondaryText}\n                              >\n                                {item.text}\n                              </ListItemText>\n                              {item.secondaryAction ? (\n                                <ListItemSecondaryAction>\n                                  {item.secondaryAction}\n                                </ListItemSecondaryAction>\n                              ) : null}\n                            </ListItem>\n                          </React.Fragment>\n                        ))}\n                      </List>\n                      <Line>\n                        <RaisedButton\n                          icon={<Delete />}\n                          label={<Trans>Delete</Trans>}\n                          disabled={isRequestPending || isEditingName}\n                          onClick={() => onDeleteLeaderboard(i18n)}\n                        />\n                      </Line>\n                      {apiError && apiError.action === 'leaderboardDeletion' ? (\n                        <PlaceholderError kind=\"error\">\n                          {apiError.message}\n                        </PlaceholderError>\n                      ) : null}\n                    </>\n                  ) : null}\n                </Column>\n              </Paper>\n            </div>\n            <div\n              style={{\n                ...styles.rightColumn,\n                paddingLeft: windowWidth === 'small' ? 0 : 20,\n              }}\n            >\n              <Line alignItems=\"center\" justifyContent=\"flex-end\">\n                <Tooltip\n                  title={i18n._(\n                    t`When checked, will only display the best score of each player (only for the display below).`\n                  )}\n                >\n                  <Text size=\"body2\">\n                    <Trans>Player best entry</Trans>\n                  </Text>\n                </Tooltip>\n                <Switch\n                  color=\"primary\"\n                  size=\"small\"\n                  checked={displayOnlyBestEntry}\n                  onClick={() => setDisplayOnlyBestEntry(!displayOnlyBestEntry)}\n                />\n                <Divider orientation=\"vertical\" />\n                <IconButton\n                  onClick={onFetchLeaderboardEntries}\n                  disabled={isRequestPending || isEditingName}\n                  tooltip={t`Refresh`}\n                  size=\"small\"\n                >\n                  <Refresh />\n                </IconButton>\n                <Spacer />\n              </Line>\n              {apiError && apiError.action === 'entriesFetching' ? (\n                <CenteredError>\n                  <PlaceholderError\n                    onRetry={onFetchLeaderboardEntries}\n                    kind=\"error\"\n                  >\n                    {apiError.message}\n                  </PlaceholderError>\n                </CenteredError>\n              ) : (\n                <LeaderboardEntriesTable\n                  entries={entries}\n                  customizationSettings={\n                    currentLeaderboard\n                      ? currentLeaderboard.customizationSettings\n                      : null\n                  }\n                  onDeleteEntry={entryId => onDeleteEntry(i18n, entryId)}\n                  isLoading={isRequestPending || isEditingName}\n                  navigation={{\n                    goToNextPage,\n                    goToPreviousPage,\n                    goToFirstPage,\n                  }}\n                  erroredEntry={\n                    apiError &&\n                    apiError.action === 'entryDeletion' &&\n                    apiError.itemId\n                      ? { entryId: apiError.itemId, message: apiError.message }\n                      : undefined\n                  }\n                />\n              )}\n            </div>\n          </ResponsiveLineStackLayout>\n          {isEditingAppearance ? (\n            <LeaderboardAppearanceDialog\n              open\n              leaderboardCustomizationSettings={\n                currentLeaderboard\n                  ? currentLeaderboard.customizationSettings\n                  : undefined\n              }\n              onClose={() => setIsEditingAppearance(false)}\n              onSave={async (\n                customizationSettings: LeaderboardCustomizationSettings\n              ) => {\n                try {\n                  await onUpdateLeaderboard(i18n, {\n                    customizationSettings,\n                  });\n                } finally {\n                  setIsEditingAppearance(false);\n                }\n              }}\n            />\n          ) : null}\n        </>\n      )}\n    </I18n>\n  );\n};\n\nconst LeaderboardAdminContainer = ({\n  gameId,\n  ...otherProps\n}: ContainerProps) => (\n  <LeaderboardProvider gameId={gameId}>\n    <LeaderboardAdmin {...otherProps} />\n  </LeaderboardProvider>\n);\n\nexport default LeaderboardAdminContainer;\n","// @flow\n/*\nFunny name generator\nList of words taken from https://github.com/aceakash/project-name-generator/tree/1.0.0\n*/\n\nimport capitalize from 'lodash/capitalize';\nimport sample from 'lodash/sample';\n\nconst adjectives = [\n  'abandoned',\n  'abashed',\n  'aberrant',\n  'abhorrent',\n  'abiding',\n  'abject',\n  'ablaze',\n  'able',\n  'abounding',\n  'abrasive',\n  'abrupt',\n  'absent',\n  'absorbed',\n  'absorbing',\n  'abstracted',\n  'absurd',\n  'abundant',\n  'acceptable',\n  'accessible',\n  'accidental',\n  'accurate',\n  'acidic',\n  'acoustic',\n  'acrid',\n  'actionable',\n  'active',\n  'actual',\n  'adamant',\n  'adaptable',\n  'adept',\n  'adhesive',\n  'adjoining',\n  'adorable',\n  'adroit',\n  'adventurous',\n  'affable',\n  'affectionate',\n  'afraid',\n  'aggressive',\n  'agile',\n  'agonizing',\n  'agreeable',\n  'airy',\n  'alert',\n  'alive',\n  'alleged',\n  'alluring',\n  'aloof',\n  'amazing',\n  'ambiguous',\n  'ambitious',\n  'amiable',\n  'ample',\n  'amused',\n  'amusing',\n  'ancient',\n  'angry',\n  'animated',\n  'annoyed',\n  'annoying',\n  'anxious',\n  'apathetic',\n  'apt',\n  'aquatic',\n  'ardent',\n  'aromatic',\n  'arrogant',\n  'ashamed',\n  'aspiring',\n  'assorted',\n  'astonishing',\n  'astute',\n  'attractive',\n  'august',\n  'auspicious',\n  'automatic',\n  'available',\n  'average',\n  'avid',\n  'aware',\n  'awesome',\n  'awful',\n  'axiomatic',\n  'bad',\n  'balmy',\n  'barbarous',\n  'bashful',\n  'bawdy',\n  'beautiful',\n  'befitting',\n  'belligerent',\n  'beneficial',\n  'benevolent',\n  'bent',\n  'berserk',\n  'best',\n  'better',\n  'bewildered',\n  'big',\n  'billowing',\n  'billowy',\n  'bitter',\n  'bizarre',\n  'blessed',\n  'bloody',\n  'blue',\n  'blushing',\n  'boiling',\n  'bold',\n  'boorish',\n  'bored',\n  'boring',\n  'boss',\n  'bouncy',\n  'boundless',\n  'brainy',\n  'brash',\n  'brave',\n  'brawny',\n  'breakable',\n  'breezy',\n  'brief',\n  'bright',\n  'brisk',\n  'broad',\n  'broken',\n  'bumpy',\n  'burly',\n  'bustling',\n  'busy',\n  'cagey',\n  'calculating',\n  'callous',\n  'calm',\n  'can',\n  'canny',\n  'capable',\n  'capricious',\n  'cared',\n  'careful',\n  'careless',\n  'caring',\n  'casual',\n  'cautious',\n  'ceaseless',\n  'celestial',\n  'certain',\n  'changeable',\n  'charming',\n  'cheap',\n  'cheerful',\n  'chemical',\n  'chic',\n  'chief',\n  'childlike',\n  'chilly',\n  'chivalrous',\n  'choice',\n  'chosen',\n  'chubby',\n  'chummy',\n  'chunky',\n  'civic',\n  'civil',\n  'clammy',\n  'classy',\n  'clean',\n  'clear',\n  'clever',\n  'cloistered',\n  'close',\n  'closed',\n  'cloudy',\n  'clumsy',\n  'cluttered',\n  'cogent',\n  'coherent',\n  'cold',\n  'colorful',\n  'colossal',\n  'combative',\n  'comfortable',\n  'common',\n  'complete',\n  'complex',\n  'composed',\n  'concerned',\n  'condemned',\n  'confused',\n  'conscious',\n  'cooing',\n  'cool',\n  'cooperative',\n  'coordinated',\n  'cosmic',\n  'courageous',\n  'cowardly',\n  'cozy',\n  'crabby',\n  'craven',\n  'crazy',\n  'creepy',\n  'crooked',\n  'crowded',\n  'cruel',\n  'cuddly',\n  'cultured',\n  'cumbersome',\n  'curious',\n  'curly',\n  'curved',\n  'curvy',\n  'cut',\n  'cute',\n  'cynical',\n  'daffy',\n  'daily',\n  'dainty',\n  'damaged',\n  'damaging',\n  'damp',\n  'dandy',\n  'dangerous',\n  'dapper',\n  'daring',\n  'dark',\n  'dashing',\n  'dazzling',\n  'dead',\n  'deadpan',\n  'deafening',\n  'dear',\n  'debonair',\n  'decent',\n  'decisive',\n  'decorous',\n  'deep',\n  'deeply',\n  'defeated',\n  'defective',\n  'defiant',\n  'deft',\n  'delicate',\n  'delicious',\n  'delightful',\n  'delirious',\n  'deluxe',\n  'demonic',\n  'dependent',\n  'deranged',\n  'descriptive',\n  'deserted',\n  'detailed',\n  'determined',\n  'devilish',\n  'devout',\n  'didactic',\n  'different',\n  'difficult',\n  'diligent',\n  'direct',\n  'direful',\n  'dirty',\n  'disagreeable',\n  'disastrous',\n  'discreet',\n  'disgusted',\n  'disgusting',\n  'disillusioned',\n  'dispensable',\n  'distinct',\n  'disturbed',\n  'divergent',\n  'divine',\n  'dizzy',\n  'domineering',\n  'doted',\n  'doting',\n  'doubtful',\n  'drab',\n  'draconian',\n  'dramatic',\n  'dreamy',\n  'dreary',\n  'driven',\n  'dry',\n  'dull',\n  'dusty',\n  'dynamic',\n  'dysfunctional',\n  'eager',\n  'early',\n  'earsplitting',\n  'earthy',\n  'easy',\n  'eatable',\n  'economic',\n  'educated',\n  'efficacious',\n  'efficient',\n  'eight',\n  'elastic',\n  'elated',\n  'electric',\n  'elegant',\n  'elfin',\n  'elite',\n  'embarrassed',\n  'eminent',\n  'empty',\n  'enchanted',\n  'enchanting',\n  'encouraging',\n  'end',\n  'endurable',\n  'energetic',\n  'energized',\n  'enigmatic',\n  'enormous',\n  'entertaining',\n  'enthusiastic',\n  'envious',\n  'equable',\n  'equal',\n  'erect',\n  'erratic',\n  'ethereal',\n  'evanescent',\n  'evasive',\n  'even',\n  'evil',\n  'exact',\n  'excellent',\n  'excited',\n  'exciting',\n  'exclusive',\n  'exotic',\n  'expensive',\n  'expert',\n  'exuberant',\n  'exultant',\n  'fabulous',\n  'faded',\n  'faint',\n  'fair',\n  'faithful',\n  'fallacious',\n  'false',\n  'famed',\n  'familiar',\n  'famous',\n  'fanatical',\n  'fancy',\n  'fantastic',\n  'far',\n  'fascinated',\n  'fast',\n  'faulty',\n  'fearful',\n  'fearless',\n  'feigned',\n  'fertile',\n  'festive',\n  'few',\n  'fierce',\n  'fiery',\n  'filthy',\n  'fine',\n  'finicky',\n  'first',\n  'fit',\n  'fixed',\n  'flagrant',\n  'flaky',\n  'flashy',\n  'flat',\n  'flawless',\n  'fleet',\n  'flimsy',\n  'flippant',\n  'flowery',\n  'flowing',\n  'fluent',\n  'fluffy',\n  'fluttering',\n  'flying',\n  'foamy',\n  'fond',\n  'foolish',\n  'for',\n  'foregoing',\n  'forgetful',\n  'forlorn',\n  'fortunate',\n  'fragile',\n  'frail',\n  'frank',\n  'frantic',\n  'free',\n  'freezing',\n  'frequent',\n  'fresh',\n  'fretful',\n  'friendly',\n  'frightened',\n  'frightening',\n  'full',\n  'fumbling',\n  'fun',\n  'functional',\n  'funny',\n  'furry',\n  'furtive',\n  'fuscia',\n  'future',\n  'futuristic',\n  'fuzzy',\n  'gabby',\n  'gainful',\n  'gamy',\n  'gaping',\n  'garrulous',\n  'gas',\n  'gaudy',\n  'general',\n  'genial',\n  'gentle',\n  'giant',\n  'giddy',\n  'gifted',\n  'gigantic',\n  'giving',\n  'glad',\n  'glamorous',\n  'gleaming',\n  'glib',\n  'glistening',\n  'glorious',\n  'glossy',\n  'gnarly',\n  'godly',\n  'gold',\n  'golden',\n  'good',\n  'goodly',\n  'goofy',\n  'gorgeous',\n  'graceful',\n  'grand',\n  'grandiose',\n  'grateful',\n  'gratis',\n  'gray',\n  'greasy',\n  'great',\n  'greedy',\n  'green',\n  'grey',\n  'grieving',\n  'groovy',\n  'grotesque',\n  'grouchy',\n  'grubby',\n  'gruesome',\n  'grumpy',\n  'guarded',\n  'guided',\n  'guiltless',\n  'gullible',\n  'gusty',\n  'gutsy',\n  'guttural',\n  'habitual',\n  'half',\n  'hallowed',\n  'haloed',\n  'halting',\n  'handsome',\n  'handsomely',\n  'handy',\n  'hanging',\n  'hapless',\n  'happy',\n  'hard',\n  'hardy',\n  'harmonious',\n  'harsh',\n  'heady',\n  'healthy',\n  'heartbreaking',\n  'hearty',\n  'heavenly',\n  'heavy',\n  'hellish',\n  'helpful',\n  'helpless',\n  'heroic',\n  'hesitant',\n  'hideous',\n  'high',\n  'highfalutin',\n  'hilarious',\n  'hip',\n  'hissing',\n  'historical',\n  'holistic',\n  'hollow',\n  'holy',\n  'homely',\n  'honest',\n  'honorable',\n  'horrible',\n  'hospitable',\n  'hot',\n  'huge',\n  'hulking',\n  'human',\n  'humane',\n  'humble',\n  'humdrum',\n  'humorous',\n  'hungry',\n  'hunky',\n  'hurried',\n  'hurt',\n  'hushed',\n  'husky',\n  'hypnotic',\n  'hysterical',\n  'icky',\n  'icy',\n  'ideal',\n  'ignorant',\n  'ill',\n  'illegal',\n  'illustrious',\n  'imaginary',\n  'immense',\n  'imminent',\n  'immune',\n  'impartial',\n  'imperfect',\n  'impolite',\n  'important',\n  'imported',\n  'impossible',\n  'incandescent',\n  'incompetent',\n  'inconclusive',\n  'incredible',\n  'indigo',\n  'industrious',\n  'inexpensive',\n  'infamous',\n  'innate',\n  'innocent',\n  'inquisitive',\n  'insidious',\n  'instinctive',\n  'intelligent',\n  'interesting',\n  'internal',\n  'invincible',\n  'irate',\n  'irritating',\n  'itchy',\n  'jaded',\n  'jagged',\n  'jazzed',\n  'jazzy',\n  'jealous',\n  'jittery',\n  'jolly',\n  'jovial',\n  'joyful',\n  'joyous',\n  'jubilant',\n  'judicious',\n  'juicy',\n  'jumbled',\n  'jumpy',\n  'just',\n  'kaput',\n  'keen',\n  'khaki',\n  'kind',\n  'kindhearted',\n  'kindly',\n  'kingly',\n  'knotty',\n  'knowing',\n  'knowledgeable',\n  'known',\n  'labored',\n  'lackadaisical',\n  'lacking',\n  'lame',\n  'lamentable',\n  'languid',\n  'large',\n  'last',\n  'late',\n  'laughable',\n  'lavish',\n  'lawful',\n  'lazy',\n  'lean',\n  'legal',\n  'legit',\n  'lethal',\n  'level',\n  'lewd',\n  'light',\n  'like',\n  'likeable',\n  'likely',\n  'limber',\n  'limitless',\n  'limping',\n  'literate',\n  'little',\n  'lively',\n  'living',\n  'lonely',\n  'long',\n  'longing',\n  'loose',\n  'lopsided',\n  'loud',\n  'lousy',\n  'loutish',\n  'loved',\n  'lovely',\n  'loving',\n  'low',\n  'lowly',\n  'loyal',\n  'lucid',\n  'lucky',\n  'ludicrous',\n  'lumpy',\n  'lush',\n  'luxuriant',\n  'lying',\n  'lyrical',\n  'macabre',\n  'macho',\n  'maddening',\n  'madly',\n  'magenta',\n  'magical',\n  'magnificent',\n  'main',\n  'majestic',\n  'major',\n  'makeshift',\n  'malicious',\n  'mammoth',\n  'maniacal',\n  'many',\n  'marked',\n  'married',\n  'marvelous',\n  'massive',\n  'material',\n  'materialistic',\n  'max',\n  'maxed',\n  'mean',\n  'measly',\n  'meaty',\n  'medical',\n  'meek',\n  'mellow',\n  'melodic',\n  'melted',\n  'merciful',\n  'mere',\n  'merry',\n  'messy',\n  'mighty',\n  'military',\n  'milky',\n  'mindless',\n  'miniature',\n  'minor',\n  'mint',\n  'mirthful',\n  'miscreant',\n  'misty',\n  'mixed',\n  'moaning',\n  'modern',\n  'modest',\n  'moldy',\n  'momentous',\n  'money',\n  'moonlit',\n  'moral',\n  'motionless',\n  'mountainous',\n  'moving',\n  'mucho',\n  'muddled',\n  'mundane',\n  'murky',\n  'mushy',\n  'mute',\n  'mutual',\n  'mysterious',\n  'naive',\n  'nappy',\n  'narrow',\n  'nasty',\n  'native',\n  'natural',\n  'naughty',\n  'nauseating',\n  'near',\n  'neat',\n  'nebulous',\n  'necessary',\n  'needed',\n  'needless',\n  'needy',\n  'neighborly',\n  'nervous',\n  'new',\n  'next',\n  'nice',\n  'nifty',\n  'nimble',\n  'nippy',\n  'noble',\n  'noiseless',\n  'noisy',\n  'nonchalant',\n  'nondescript',\n  'nonstop',\n  'normal',\n  'nostalgic',\n  'nosy',\n  'noted',\n  'novel',\n  'noxious',\n  'null',\n  'numberless',\n  'numero',\n  'numerous',\n  'nutritious',\n  'nutty',\n  'oafish',\n  'obedient',\n  'obeisant',\n  'obnoxious',\n  'obscene',\n  'obsequious',\n  'observant',\n  'obsolete',\n  'obtainable',\n  'oceanic',\n  'odd',\n  'offbeat',\n  'okay',\n  'omniscient',\n  'onerous',\n  'open',\n  'opposite',\n  'optimal',\n  'orange',\n  'ordinary',\n  'organic',\n  'ossified',\n  'outgoing',\n  'outrageous',\n  'outstanding',\n  'oval',\n  'overconfident',\n  'overjoyed',\n  'overrated',\n  'overt',\n  'overwrought',\n  'pacific',\n  'painful',\n  'painstaking',\n  'pale',\n  'paltry',\n  'panicky',\n  'panoramic',\n  'parallel',\n  'parched',\n  'parsimonious',\n  'past',\n  'pastoral',\n  'pathetic',\n  'peaceful',\n  'peachy',\n  'penitent',\n  'peppy',\n  'perfect',\n  'periodic',\n  'permissible',\n  'perpetual',\n  'petite',\n  'phobic',\n  'physical',\n  'picayune',\n  'pink',\n  'piquant',\n  'pithy',\n  'placid',\n  'plain',\n  'plant',\n  'plastic',\n  'plausible',\n  'pleasant',\n  'plucky',\n  'plum',\n  'poetic',\n  'pointless',\n  'poised',\n  'polite',\n  'political',\n  'posh',\n  'possessive',\n  'possible',\n  'potent',\n  'powerful',\n  'precious',\n  'premium',\n  'present',\n  'pretty',\n  'previous',\n  'pricey',\n  'prickly',\n  'prime',\n  'primo',\n  'private',\n  'prized',\n  'pro',\n  'probable',\n  'productive',\n  'profuse',\n  'prompt',\n  'proper',\n  'protective',\n  'proud',\n  'psychedelic',\n  'psychotic',\n  'public',\n  'puffy',\n  'pumped',\n  'punchy',\n  'puny',\n  'pure',\n  'purple',\n  'purring',\n  'pushy',\n  'puzzled',\n  'puzzling',\n  'quack',\n  'quaint',\n  'quarrelsome',\n  'questionable',\n  'quick',\n  'quickest',\n  'quiet',\n  'quirky',\n  'quixotic',\n  'quizzical',\n  'rabid',\n  'rad',\n  'radioactive',\n  'ragged',\n  'rainy',\n  'rambunctious',\n  'rampant',\n  'rapid',\n  'rare',\n  'raspy',\n  'ratty',\n  'reach',\n  'ready',\n  'real',\n  'rebel',\n  'receptive',\n  'recondite',\n  'red',\n  'redundant',\n  'reflective',\n  'regal',\n  'regular',\n  'relieved',\n  'remarkable',\n  'reminiscent',\n  'repulsive',\n  'resilient',\n  'resolute',\n  'resonant',\n  'responsible',\n  'rhetorical',\n  'rich',\n  'right',\n  'righteous',\n  'rightful',\n  'rigid',\n  'ripe',\n  'ritzy',\n  'roasted',\n  'robust',\n  'romantic',\n  'roomy',\n  'rooted',\n  'rosy',\n  'rotten',\n  'rough',\n  'round',\n  'royal',\n  'ruddy',\n  'rude',\n  'rugged',\n  'rural',\n  'rustic',\n  'ruthless',\n  'sable',\n  'sad',\n  'safe',\n  'salty',\n  'same',\n  'sassy',\n  'satisfying',\n  'saucy',\n  'savory',\n  'savvy',\n  'scandalous',\n  'scarce',\n  'scared',\n  'scary',\n  'scattered',\n  'scenic',\n  'scientific',\n  'scintillating',\n  'scrawny',\n  'screeching',\n  'second',\n  'secret',\n  'secretive',\n  'sedate',\n  'seemly',\n  'selective',\n  'selfish',\n  'sensitive',\n  'separate',\n  'serene',\n  'serious',\n  'shaggy',\n  'shaky',\n  'shallow',\n  'sharp',\n  'shiny',\n  'shivering',\n  'shocking',\n  'short',\n  'showy',\n  'shrewd',\n  'shrill',\n  'shut',\n  'shy',\n  'sick',\n  'silent',\n  'silky',\n  'silly',\n  'simple',\n  'simplistic',\n  'sincere',\n  'skillful',\n  'skinny',\n  'sleek',\n  'sleepy',\n  'slick',\n  'slim',\n  'slimy',\n  'slippery',\n  'sloppy',\n  'slow',\n  'small',\n  'smart',\n  'smelly',\n  'smiley',\n  'smiling',\n  'smoggy',\n  'smooth',\n  'snappy',\n  'snazzy',\n  'sneaky',\n  'snobbish',\n  'snotty',\n  'snowy',\n  'snugly',\n  'social',\n  'soft',\n  'soggy',\n  'sole',\n  'solid',\n  'solitary',\n  'somber',\n  'sophisticated',\n  'sordid',\n  'sore',\n  'sound',\n  'sour',\n  'spacial',\n  'sparkling',\n  'special',\n  'spectacular',\n  'spicy',\n  'spiffy',\n  'spiky',\n  'spiritual',\n  'spiteful',\n  'splendid',\n  'spooky',\n  'spotless',\n  'spotted',\n  'spotty',\n  'spry',\n  'spurious',\n  'squalid',\n  'square',\n  'squealing',\n  'squeamish',\n  'stable',\n  'staking',\n  'stale',\n  'standing',\n  'star',\n  'stark',\n  'statuesque',\n  'steadfast',\n  'steady',\n  'steep',\n  'stereotyped',\n  'sticky',\n  'stiff',\n  'stimulating',\n  'stingy',\n  'stoic',\n  'stormy',\n  'straight',\n  'strange',\n  'striped',\n  'strong',\n  'stunning',\n  'stupendous',\n  'sturdy',\n  'suave',\n  'subdued',\n  'subsequent',\n  'substantial',\n  'subtle',\n  'successful',\n  'succinct',\n  'sudden',\n  'sulky',\n  'sunny',\n  'sunset',\n  'super',\n  'superb',\n  'superficial',\n  'supreme',\n  'sure',\n  'swank',\n  'swanky',\n  'sweet',\n  'swell',\n  'sweltering',\n  'swift',\n  'symptomatic',\n  'synonymous',\n  'taboo',\n  'tacit',\n  'tacky',\n  'talented',\n  'tall',\n  'tame',\n  'tan',\n  'tangible',\n  'tangy',\n  'tart',\n  'tasteful',\n  'tasteless',\n  'tasty',\n  'tawdry',\n  'teal',\n  'tearful',\n  'tedious',\n  'teeny',\n  'telling',\n  'temporary',\n  'tender',\n  'tense',\n  'tenuous',\n  'terrible',\n  'terrific',\n  'tested',\n  'testy',\n  'thankful',\n  'therapeutic',\n  'thin',\n  'thinkable',\n  'third',\n  'thoughtful',\n  'thoughtless',\n  'threatening',\n  'thriving',\n  'thundering',\n  'tidy',\n  'timely',\n  'tiny',\n  'tired',\n  'tiresome',\n  'toothsome',\n  'top',\n  'tops',\n  'torpid',\n  'tough',\n  'touted',\n  'towering',\n  'tranquil',\n  'trashy',\n  'tremendous',\n  'tricky',\n  'trim',\n  'trite',\n  'tropical',\n  'troubled',\n  'truculent',\n  'true',\n  'trusty',\n  'truthful',\n  'try',\n  'typical',\n  'ubiquitous',\n  'ultra',\n  'unable',\n  'unaccountable',\n  'unadvised',\n  'unarmed',\n  'unbecoming',\n  'unbiased',\n  'uncovered',\n  'understood',\n  'undisturbed',\n  'unequal',\n  'unequaled',\n  'uneven',\n  'unhealthy',\n  'uninterested',\n  'unique',\n  'united',\n  'unkempt',\n  'unknown',\n  'unnatural',\n  'unruly',\n  'unsightly',\n  'unsuitable',\n  'untidy',\n  'unused',\n  'unusual',\n  'unwavering',\n  'unwieldy',\n  'unwritten',\n  'upbeat',\n  'uplifting',\n  'uppity',\n  'upset',\n  'uptight',\n  'urbane',\n  'usable',\n  'used',\n  'useful',\n  'utmost',\n  'utopian',\n  'utter',\n  'uttermost',\n  'vacuous',\n  'vagabond',\n  'vague',\n  'valid',\n  'valuable',\n  'various',\n  'vast',\n  'vengeful',\n  'venomous',\n  'verdant',\n  'versed',\n  'vestal',\n  'viable',\n  'victorious',\n  'vigorous',\n  'violent',\n  'violet',\n  'vital',\n  'vivacious',\n  'vivid',\n  'vocal',\n  'vogue',\n  'voiceless',\n  'volatile',\n  'voracious',\n  'wacky',\n  'waggish',\n  'waiting',\n  'wakeful',\n  'wandering',\n  'wanted',\n  'wanting',\n  'warlike',\n  'warm',\n  'wary',\n  'wasteful',\n  'watery',\n  'weak',\n  'wealthy',\n  'weary',\n  'wet',\n  'whimsical',\n  'whispering',\n  'whole',\n  'wholesale',\n  'wicked',\n  'wide',\n  'wiggly',\n  'wild',\n  'willing',\n  'windy',\n  'winged',\n  'wired',\n  'wiry',\n  'wise',\n  'wistful',\n  'witty',\n  'woebegone',\n  'wonderful',\n  'wooden',\n  'woozy',\n  'workable',\n  'worried',\n  'worthy',\n  'wrathful',\n  'wretched',\n  'wrong',\n  'wry',\n  'yielding',\n  'young',\n  'youthful',\n  'yummy',\n  'zany',\n  'zealous',\n  'zesty',\n  'zippy',\n  'zonked',\n];\n\nconst nouns = [\n  'account',\n  'achiever',\n  'acoustics',\n  'act',\n  'action',\n  'activity',\n  'actor',\n  'addition',\n  'adjustment',\n  'advertisement',\n  'advice',\n  'aftermath',\n  'afternoon',\n  'afterthought',\n  'agreement',\n  'air',\n  'airplane',\n  'airport',\n  'alarm',\n  'amount',\n  'amusement',\n  'anger',\n  'angle',\n  'animal',\n  'ants',\n  'apparatus',\n  'apparel',\n  'appliance',\n  'approval',\n  'arch',\n  'argument',\n  'arithmetic',\n  'arm',\n  'army',\n  'art',\n  'attack',\n  'attraction',\n  'authority',\n  'back',\n  'badge',\n  'bag',\n  'bait',\n  'balance',\n  'ball',\n  'base',\n  'baseball',\n  'basin',\n  'basket',\n  'basketball',\n  'bat',\n  'bath',\n  'battle',\n  'bead',\n  'bear',\n  'bed',\n  'bedroom',\n  'beds',\n  'bee',\n  'beef',\n  'beginner',\n  'behavior',\n  'belief',\n  'believe',\n  'bell',\n  'bells',\n  'berry',\n  'bike',\n  'bikes',\n  'bird',\n  'birds',\n  'birth',\n  'birthday',\n  'bit',\n  'bite',\n  'blade',\n  'blood',\n  'blow',\n  'board',\n  'boat',\n  'bomb',\n  'bone',\n  'book',\n  'books',\n  'boot',\n  'border',\n  'bottle',\n  'boundary',\n  'box',\n  'brake',\n  'branch',\n  'brass',\n  'breath',\n  'brick',\n  'bridge',\n  'bubble',\n  'bucket',\n  'building',\n  'bulb',\n  'burst',\n  'bushes',\n  'business',\n  'butter',\n  'button',\n  'cabbage',\n  'cable',\n  'cactus',\n  'cake',\n  'cakes',\n  'calculator',\n  'calendar',\n  'camera',\n  'camp',\n  'can',\n  'cannon',\n  'canvas',\n  'cap',\n  'caption',\n  'car',\n  'card',\n  'care',\n  'carpenter',\n  'carriage',\n  'cars',\n  'cart',\n  'cast',\n  'cat',\n  'cats',\n  'cattle',\n  'cause',\n  'cave',\n  'celery',\n  'cellar',\n  'cemetery',\n  'cent',\n  'chalk',\n  'chance',\n  'change',\n  'channel',\n  'cheese',\n  'cherries',\n  'cherry',\n  'chess',\n  'chicken',\n  'chickens',\n  'chin',\n  'church',\n  'circle',\n  'clam',\n  'class',\n  'cloth',\n  'clover',\n  'club',\n  'coach',\n  'coal',\n  'coast',\n  'coat',\n  'cobweb',\n  'coil',\n  'collar',\n  'color',\n  'committee',\n  'company',\n  'comparison',\n  'competition',\n  'condition',\n  'connection',\n  'control',\n  'cook',\n  'copper',\n  'corn',\n  'cough',\n  'country',\n  'cover',\n  'cow',\n  'cows',\n  'crack',\n  'cracker',\n  'crate',\n  'crayon',\n  'cream',\n  'creator',\n  'creature',\n  'credit',\n  'crib',\n  'crime',\n  'crook',\n  'crow',\n  'crowd',\n  'crown',\n  'cub',\n  'cup',\n  'current',\n  'curtain',\n  'curve',\n  'cushion',\n  'day',\n  'death',\n  'debt',\n  'decision',\n  'deer',\n  'degree',\n  'design',\n  'desire',\n  'desk',\n  'destruction',\n  'detail',\n  'development',\n  'digestion',\n  'dime',\n  'dinner',\n  'dinosaurs',\n  'direction',\n  'dirt',\n  'discovery',\n  'discussion',\n  'distance',\n  'distribution',\n  'division',\n  'dock',\n  'doctor',\n  'dog',\n  'dogs',\n  'doll',\n  'dolls',\n  'donkey',\n  'door',\n  'downtown',\n  'drain',\n  'drawer',\n  'dress',\n  'drink',\n  'driving',\n  'drop',\n  'duck',\n  'ducks',\n  'dust',\n  'ear',\n  'earth',\n  'earthquake',\n  'edge',\n  'education',\n  'effect',\n  'egg',\n  'eggnog',\n  'eggs',\n  'elbow',\n  'end',\n  'engine',\n  'error',\n  'event',\n  'example',\n  'exchange',\n  'existence',\n  'expansion',\n  'experience',\n  'expert',\n  'eye',\n  'eyes',\n  'face',\n  'fact',\n  'fairies',\n  'fall',\n  'fang',\n  'farm',\n  'fear',\n  'feeling',\n  'field',\n  'finger',\n  'fire',\n  'fish',\n  'flag',\n  'flame',\n  'flavor',\n  'flesh',\n  'flight',\n  'flock',\n  'floor',\n  'flower',\n  'flowers',\n  'fly',\n  'fog',\n  'fold',\n  'food',\n  'foot',\n  'force',\n  'fork',\n  'form',\n  'fowl',\n  'frame',\n  'friction',\n  'friend',\n  'friends',\n  'frog',\n  'frogs',\n  'front',\n  'fruit',\n  'fuel',\n  'furniture',\n  'gate',\n  'geese',\n  'ghost',\n  'giants',\n  'giraffe',\n  'glass',\n  'glove',\n  'gold',\n  'government',\n  'governor',\n  'grade',\n  'grain',\n  'grape',\n  'grass',\n  'grip',\n  'ground',\n  'group',\n  'growth',\n  'guide',\n  'guitar',\n  'gun',\n  'hair',\n  'haircut',\n  'hall',\n  'hammer',\n  'hand',\n  'hands',\n  'harbor',\n  'harmony',\n  'hat',\n  'head',\n  'health',\n  'heat',\n  'hill',\n  'history',\n  'hobbies',\n  'hole',\n  'holiday',\n  'home',\n  'honey',\n  'hook',\n  'hope',\n  'horn',\n  'horse',\n  'horses',\n  'hose',\n  'hospital',\n  'hot',\n  'hour',\n  'house',\n  'houses',\n  'humor',\n  'hydrant',\n  'ice',\n  'icicle',\n  'idea',\n  'impulse',\n  'income',\n  'increase',\n  'industry',\n  'ink',\n  'insect',\n  'instrument',\n  'insurance',\n  'interest',\n  'invention',\n  'iron',\n  'island',\n  'jail',\n  'jam',\n  'jar',\n  'jeans',\n  'jelly',\n  'jellyfish',\n  'jewel',\n  'join',\n  'judge',\n  'juice',\n  'jump',\n  'kettle',\n  'key',\n  'kick',\n  'kiss',\n  'kittens',\n  'kitty',\n  'knee',\n  'knife',\n  'knot',\n  'knowledge',\n  'laborer',\n  'lace',\n  'ladybug',\n  'lake',\n  'lamp',\n  'land',\n  'language',\n  'laugh',\n  'leather',\n  'leg',\n  'legs',\n  'letter',\n  'letters',\n  'lettuce',\n  'level',\n  'library',\n  'limit',\n  'line',\n  'linen',\n  'lip',\n  'liquid',\n  'loaf',\n  'lock',\n  'locket',\n  'look',\n  'loss',\n  'love',\n  'low',\n  'lumber',\n  'lunch',\n  'lunchroom',\n  'machine',\n  'magic',\n  'maid',\n  'mailbox',\n  'marble',\n  'mark',\n  'market',\n  'mask',\n  'mass',\n  'match',\n  'meal',\n  'measure',\n  'meat',\n  'meeting',\n  'memory',\n  'metal',\n  'mice',\n  'middle',\n  'milk',\n  'mind',\n  'mine',\n  'minister',\n  'mint',\n  'minute',\n  'mist',\n  'mitten',\n  'money',\n  'month',\n  'moon',\n  'morning',\n  'mother',\n  'motion',\n  'mountain',\n  'mouth',\n  'move',\n  'muscle',\n  'name',\n  'nation',\n  'neck',\n  'need',\n  'needle',\n  'nerve',\n  'nest',\n  'night',\n  'noise',\n  'north',\n  'nose',\n  'note',\n  'notebook',\n  'number',\n  'nut',\n  'oatmeal',\n  'observation',\n  'ocean',\n  'offer',\n  'office',\n  'oil',\n  'orange',\n  'oranges',\n  'order',\n  'oven',\n  'page',\n  'pail',\n  'pan',\n  'pancake',\n  'paper',\n  'parcel',\n  'part',\n  'partner',\n  'party',\n  'passenger',\n  'payment',\n  'peace',\n  'pear',\n  'pen',\n  'pencil',\n  'person',\n  'pest',\n  'pet',\n  'pets',\n  'pickle',\n  'picture',\n  'pie',\n  'pies',\n  'pig',\n  'pigs',\n  'pin',\n  'pipe',\n  'pizzas',\n  'place',\n  'plane',\n  'planes',\n  'plant',\n  'plantation',\n  'plants',\n  'plastic',\n  'plate',\n  'play',\n  'playground',\n  'pleasure',\n  'plot',\n  'plough',\n  'pocket',\n  'point',\n  'poison',\n  'pollution',\n  'popcorn',\n  'porter',\n  'position',\n  'pot',\n  'potato',\n  'powder',\n  'power',\n  'price',\n  'produce',\n  'profit',\n  'property',\n  'prose',\n  'protest',\n  'pull',\n  'pump',\n  'punishment',\n  'purpose',\n  'push',\n  'quarter',\n  'quartz',\n  'question',\n  'quicksand',\n  'quiet',\n  'quill',\n  'quilt',\n  'quince',\n  'quiver',\n  'rabbit',\n  'rabbits',\n  'rail',\n  'railway',\n  'rain',\n  'rainstorm',\n  'rake',\n  'range',\n  'rat',\n  'rate',\n  'ray',\n  'reaction',\n  'reading',\n  'reason',\n  'receipt',\n  'recess',\n  'record',\n  'regret',\n  'relation',\n  'religion',\n  'representative',\n  'request',\n  'respect',\n  'rest',\n  'reward',\n  'rhythm',\n  'rice',\n  'riddle',\n  'rifle',\n  'ring',\n  'rings',\n  'river',\n  'road',\n  'robin',\n  'rock',\n  'rod',\n  'roll',\n  'roof',\n  'room',\n  'root',\n  'rose',\n  'route',\n  'rub',\n  'rule',\n  'run',\n  'sack',\n  'sail',\n  'salt',\n  'sand',\n  'scale',\n  'scarecrow',\n  'scarf',\n  'scene',\n  'scent',\n  'school',\n  'science',\n  'scissors',\n  'screw',\n  'sea',\n  'seashore',\n  'seat',\n  'secretary',\n  'seed',\n  'selection',\n  'self',\n  'sense',\n  'servant',\n  'shade',\n  'shake',\n  'shame',\n  'shape',\n  'sheep',\n  'sheet',\n  'shelf',\n  'ship',\n  'shirt',\n  'shock',\n  'shoe',\n  'shoes',\n  'shop',\n  'show',\n  'side',\n  'sidewalk',\n  'sign',\n  'silk',\n  'silver',\n  'sink',\n  'size',\n  'skate',\n  'skin',\n  'skirt',\n  'sky',\n  'sleep',\n  'sleet',\n  'slip',\n  'slope',\n  'smash',\n  'smell',\n  'smile',\n  'smoke',\n  'snail',\n  'snails',\n  'snake',\n  'snakes',\n  'sneeze',\n  'snow',\n  'soap',\n  'society',\n  'sock',\n  'soda',\n  'sofa',\n  'song',\n  'songs',\n  'sort',\n  'sound',\n  'soup',\n  'space',\n  'spade',\n  'spark',\n  'spiders',\n  'sponge',\n  'spoon',\n  'spot',\n  'spring',\n  'spy',\n  'square',\n  'squirrel',\n  'stage',\n  'stamp',\n  'star',\n  'start',\n  'statement',\n  'station',\n  'steam',\n  'steel',\n  'stem',\n  'step',\n  'stew',\n  'stick',\n  'sticks',\n  'stitch',\n  'stocking',\n  'stomach',\n  'stone',\n  'stop',\n  'store',\n  'story',\n  'stove',\n  'stranger',\n  'straw',\n  'stream',\n  'street',\n  'stretch',\n  'string',\n  'structure',\n  'substance',\n  'sugar',\n  'suggestion',\n  'suit',\n  'summer',\n  'sun',\n  'support',\n  'surprise',\n  'sweater',\n  'swim',\n  'swing',\n  'system',\n  'table',\n  'tail',\n  'talk',\n  'tank',\n  'taste',\n  'tax',\n  'teaching',\n  'team',\n  'teeth',\n  'temper',\n  'tendency',\n  'tent',\n  'territory',\n  'test',\n  'texture',\n  'theory',\n  'thing',\n  'things',\n  'thought',\n  'thread',\n  'thrill',\n  'throat',\n  'throne',\n  'thumb',\n  'thunder',\n  'ticket',\n  'tiger',\n  'time',\n  'tin',\n  'title',\n  'toad',\n  'toe',\n  'toes',\n  'tomatoes',\n  'tongue',\n  'tooth',\n  'toothbrush',\n  'toothpaste',\n  'top',\n  'touch',\n  'town',\n  'toy',\n  'toys',\n  'trade',\n  'trail',\n  'train',\n  'trains',\n  'tramp',\n  'transport',\n  'tray',\n  'treatment',\n  'tree',\n  'trees',\n  'trick',\n  'trip',\n  'trouble',\n  'trousers',\n  'truck',\n  'trucks',\n  'tub',\n  'turkey',\n  'turn',\n  'twig',\n  'twist',\n  'umbrella',\n  'underwear',\n  'unit',\n  'use',\n  'vacation',\n  'value',\n  'van',\n  'vase',\n  'vegetable',\n  'veil',\n  'vein',\n  'verse',\n  'vessel',\n  'vest',\n  'view',\n  'visitor',\n  'voice',\n  'volcano',\n  'volleyball',\n  'voyage',\n  'walk',\n  'wall',\n  'war',\n  'wash',\n  'waste',\n  'watch',\n  'water',\n  'wave',\n  'waves',\n  'wax',\n  'way',\n  'wealth',\n  'weather',\n  'week',\n  'weight',\n  'wheel',\n  'whip',\n  'whistle',\n  'wilderness',\n  'wind',\n  'window',\n  'wine',\n  'wing',\n  'winter',\n  'wire',\n  'wish',\n  'wood',\n  'wool',\n  'word',\n  'work',\n  'worm',\n  'wound',\n  'wren',\n  'wrench',\n  'wrist',\n  'writer',\n  'writing',\n  'yak',\n  'yam',\n  'yard',\n  'yarn',\n  'year',\n  'yoke',\n  'zebra',\n  'zephyr',\n  'zinc',\n  'zipper',\n  'zoo',\n];\n\nconst generateName = (): string =>\n  `${capitalize(sample(adjectives))} ${capitalize(sample(nouns))}`;\n\nexport default generateName;\n","// @flow\nimport generateName from '../Utils/NewNameGenerator';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst path = optionalRequire('path');\nvar fs = optionalRequire('fs-extra');\n\nconst findEmptyPath = (basePath: string) => {\n  if (!path) return basePath;\n\n  const folderName = generateName('My project', name => {\n    try {\n      fs.accessSync(path.join(basePath, name));\n    } catch (ex) {\n      return false;\n    }\n    return true;\n  });\n\n  return path.join(basePath, folderName);\n};\n\nexport const findEmptyPathInDefaultFolder = (electronApp: any): string => {\n  let documentsPath = '';\n  try {\n    documentsPath = electronApp.getPath('documents');\n  } catch (ex) {\n    // A user may not have the Documents folder defined on Windows.\n    documentsPath = electronApp.getPath('home');\n  }\n  return findEmptyPath(path.join(documentsPath, 'GDevelop projects'));\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport Refresh from '@material-ui/icons/Refresh';\nimport * as React from 'react';\n\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Column, Spacer } from '../UI/Grid';\nimport LocalFolderPicker from '../UI/LocalFolderPicker';\nimport TextField from '../UI/TextField';\n\nimport generateName from '../Utils/ProjectNameGenerator';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport { findEmptyPathInDefaultFolder } from './LocalPathFinder';\nimport { type ProjectCreationSettings } from './CreateProjectDialog';\n\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\n\ntype Props = {|\n  open: boolean,\n  isOpening?: boolean,\n  onClose: () => void,\n  onCreate: ProjectCreationSettings => void | Promise<void>,\n|};\n\nconst ProjectPreCreationDialog = ({\n  open,\n  isOpening,\n  onClose,\n  onCreate,\n}: Props): React.Node => {\n  const [projectNameError, setProjectNameError] = React.useState<?React.Node>(\n    null\n  );\n  const [projectName, setProjectName] = React.useState<string>(() =>\n    generateName()\n  );\n  const [outputPath, setOutputPath] = React.useState<string>(() =>\n    app ? findEmptyPathInDefaultFolder(app) : ''\n  );\n\n  const onValidate = React.useCallback(\n    () => {\n      if (isOpening) return;\n\n      setProjectNameError(null);\n      if (!projectName) {\n        setProjectNameError(\n          <Trans>Please enter a name for your project.</Trans>\n        );\n        return;\n      }\n      onCreate({ projectName, outputPath: app ? outputPath : undefined });\n    },\n    [onCreate, projectName, outputPath, isOpening]\n  );\n\n  const _onChangeProjectName = React.useCallback(\n    (event, text) => {\n      if (projectNameError) setProjectNameError(null);\n      setProjectName(text);\n    },\n    [setProjectName, projectNameError]\n  );\n\n  return (\n    <Dialog\n      title={<Trans>New Project</Trans>}\n      maxWidth=\"sm\"\n      open={open}\n      onApply={onValidate}\n      onRequestClose={onClose}\n      actions={[\n        <FlatButton\n          disabled={isOpening}\n          key=\"cancel\"\n          label={<Trans>Cancel</Trans>}\n          onClick={onClose}\n        />,\n        <RaisedButton\n          primary\n          disabled={isOpening}\n          key=\"create\"\n          label={<Trans>Create project</Trans>}\n          onClick={onValidate}\n          id=\"create-project-button\"\n        />,\n      ]}\n      id=\"project-pre-creation-dialog\"\n    >\n      <Column noMargin>\n        <TextField\n          type=\"text\"\n          errorText={projectNameError}\n          disabled={isOpening}\n          value={projectName}\n          onChange={_onChangeProjectName}\n          floatingLabelText={<Trans>Project name</Trans>}\n          endAdornment={\n            <Refresh onClick={() => setProjectName(generateName())} />\n          }\n        />\n        {app && (\n          <>\n            <Spacer />\n            <LocalFolderPicker\n              fullWidth\n              value={outputPath}\n              onChange={setOutputPath}\n              type=\"create-game\"\n            />\n          </>\n        )}\n      </Column>\n    </Dialog>\n  );\n};\n\nexport default ProjectPreCreationDialog;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport {\n  type Release,\n  findRelease,\n} from '../../Utils/GDevelopServices/Release';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport PlaceholderLoader from '../../UI/PlaceholderLoader';\nimport { MarkdownText } from '../../UI/MarkdownText';\nimport { Column, Line } from '../../UI/Grid';\nimport Window from '../../Utils/Window';\nimport { hasBreakingChange } from '../../Utils/GDevelopServices/Release';\nimport AlertMessage from '../../UI/AlertMessage';\nimport FlatButton from '../../UI/FlatButton';\nimport RaisedButton from '../../UI/RaisedButton';\n\ntype Props = {|\n  releases: ?Array<Release>,\n  error: ?Error,\n  currentReleaseName: string,\n|};\n\n/**\n * Display information about latest releases.\n */\nconst ChangelogRenderer = ({ releases, error, currentReleaseName }: Props) => {\n  const openReleaseNote = () =>\n    Window.openExternalURL('https://github.com/4ian/GDevelop/releases');\n\n  if (error) {\n    return (\n      <Column>\n        <Line>\n          <AlertMessage kind=\"warning\">\n            <Trans>\n              Please double check online the changes to make sure that you are\n              aware of anything new in this version that would require you to\n              adapt your project.\n            </Trans>\n          </AlertMessage>\n        </Line>\n        <Line>\n          <EmptyMessage>\n            <Trans>\n              Unable to load the information about the latest GDevelop releases.\n              Verify your internet connection or retry later.\n            </Trans>\n          </EmptyMessage>\n        </Line>\n        <Line justifyContent=\"center\">\n          <RaisedButton\n            label={<Trans>See the releases notes online</Trans>}\n            onClick={openReleaseNote}\n          />\n        </Line>\n      </Column>\n    );\n  }\n\n  if (!releases) {\n    return <PlaceholderLoader />;\n  }\n\n  const currentRelease = findRelease(releases, currentReleaseName);\n  const currentVersionHasBreakingChange =\n    !!currentRelease && hasBreakingChange(currentRelease);\n\n  return (\n    <Column>\n      {currentVersionHasBreakingChange && (\n        <AlertMessage kind=\"warning\">\n          This version of GDevelop has a breaking change. Please make sure to\n          read the changes below to understand if any change or adaptation must\n          be made to your project.\n        </AlertMessage>\n      )}\n      {releases.map(release =>\n        release.name ? (\n          <MarkdownText\n            key={release.name}\n            source={\n              '# Version ' +\n              release.name +\n              '\\n---\\n' +\n              (release.description ||\n                'Changes and new features description will be available soon.')\n            }\n            isStandaloneText\n          />\n        ) : null\n      )}\n      <Line justifyContent=\"center\">\n        <FlatButton\n          label={<Trans>See all the releases notes</Trans>}\n          onClick={openReleaseNote}\n        />\n      </Line>\n    </Column>\n  );\n};\n\nexport default ChangelogRenderer;\n","// @flow\nimport axios from 'axios';\nimport { GDevelopReleaseApi } from './ApiConfigs';\n\nexport type Release = {\n  name: ?string,\n  publishedAt: ?string,\n  description: ?string,\n};\n\nexport const getReleases = (): Promise<Array<Release>> => {\n  return axios\n    .get(`${GDevelopReleaseApi.baseUrl}/release`, {\n      params: {\n        last: 4,\n      },\n    })\n    .then(response => response.data);\n};\n\nexport const hasBreakingChange = (release: Release): boolean => {\n  return (\n    (release.description || '').toLowerCase().indexOf('breaking change') !== -1\n  );\n};\n\nexport const findRelease = (\n  releases: Array<Release>,\n  name: string\n): ?Release => {\n  return releases.find(release => release.name === name);\n};\n","// @flow\nimport * as React from 'react';\nimport {\n  getReleases,\n  type Release,\n} from '../../Utils/GDevelopServices/Release';\nimport ChangelogRenderer from './ChangelogRenderer';\nimport { getIDEVersion } from '../../Version';\n\ntype Props = {|\n  onUpdated?: () => void,\n|};\n\n/**\n * Load information about latest releases and display them.\n */\nconst Changelog = ({ onUpdated }: Props) => {\n  const [releases, setReleases] = React.useState<?Array<Release>>(null);\n  const [error, setError] = React.useState<?Error>(null);\n\n  React.useEffect(\n    () => {\n      getReleases()\n        .then(releases => {\n          setError(null);\n          setReleases(releases);\n          if (onUpdated) {\n            onUpdated();\n          }\n        })\n        .catch((error: ?Error) => {\n          setError(error);\n          if (onUpdated) {\n            onUpdated();\n          }\n        });\n    },\n    [onUpdated]\n  );\n\n  return (\n    <ChangelogRenderer\n      releases={releases}\n      error={error}\n      currentReleaseName={getIDEVersion()}\n    />\n  );\n};\n\nexport default Changelog;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { differenceInCalendarDays, format } from 'date-fns';\nimport { Line } from '../../UI/Grid';\nimport { type Build } from '../../Utils/GDevelopServices/Build';\nimport { type Game } from '../../Utils/GDevelopServices/Game';\nimport { Card, CardActions, CardHeader } from '@material-ui/core';\nimport BuildProgressAndActions from './BuildProgressAndActions';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport Chrome from '../../UI/CustomSvgIcons/Chrome';\nimport PhoneIphone from '@material-ui/icons/PhoneIphone';\nimport LaptopMac from '@material-ui/icons/LaptopMac';\n\nconst styles = {\n  icon: {\n    height: 30,\n    width: 30,\n    marginRight: 5,\n  },\n};\n\nconst formatBuildText = (\n  buildType: 'cordova-build' | 'electron-build' | 'web-build'\n) => {\n  switch (buildType) {\n    case 'cordova-build':\n      return <Trans>Android Build</Trans>;\n    case 'electron-build':\n      return <Trans>Windows/macOS/Linux Build</Trans>;\n    case 'web-build':\n      return <Trans>Web Build</Trans>;\n    default:\n      return buildType;\n  }\n};\n\nconst getIcon = (\n  buildType: 'cordova-build' | 'electron-build' | 'web-build'\n) => {\n  switch (buildType) {\n    case 'cordova-build':\n      return <PhoneIphone style={styles.icon} />;\n    case 'electron-build':\n      return <LaptopMac style={styles.icon} />;\n    case 'web-build':\n      return <Chrome style={styles.icon} />;\n    default:\n      return <Chrome style={styles.icon} />;\n  }\n};\n\ntype Props = {|\n  build: Build,\n  game: Game,\n  onGameUpdated?: Game => void,\n  gameUpdating: boolean,\n  setGameUpdating: boolean => void,\n|};\n\nexport const BuildCard = ({\n  build,\n  game,\n  onGameUpdated,\n  gameUpdating,\n  setGameUpdating,\n}: Props) => {\n  const isOld =\n    build &&\n    build.type !== 'web-build' &&\n    differenceInCalendarDays(Date.now(), build.updatedAt) > 6;\n  return (\n    <Card>\n      <CardHeader\n        title={build.id}\n        subheader={\n          <Line alignItems=\"center\" noMargin>\n            {getIcon(build.type)}\n            <Trans>\n              {formatBuildText(build.type)} -{' '}\n              {format(build.updatedAt, 'yyyy-MM-dd HH:mm:ss')}\n            </Trans>\n          </Line>\n        }\n      />\n      <CardActions>\n        <Line expand noMargin justifyContent=\"flex-end\">\n          {!isOld && (\n            <BuildProgressAndActions\n              build={build}\n              game={game}\n              onGameUpdated={onGameUpdated}\n              gameUpdating={gameUpdating}\n              setGameUpdating={setGameUpdating}\n            />\n          )}\n          {isOld && (\n            <EmptyMessage>\n              <Trans>\n                This build is old and the generated games can't be downloaded\n                anymore.\n              </Trans>\n            </EmptyMessage>\n          )}\n        </Line>\n      </CardActions>\n    </Card>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { type Build } from '../../Utils/GDevelopServices/Build';\nimport { type Game } from '../../Utils/GDevelopServices/Game';\nimport { Column, Line } from '../../UI/Grid';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport PlaceholderLoader from '../../UI/PlaceholderLoader';\nimport { type AuthenticatedUser } from '../../Profile/AuthenticatedUserContext';\nimport Text from '../../UI/Text';\nimport { ColumnStackLayout } from '../../UI/Layout';\nimport { BuildCard } from './BuildCard';\nimport PlaceholderError from '../../UI/PlaceholderError';\n\ntype Props = {|\n  builds: ?Array<Build>,\n  authenticatedUser: AuthenticatedUser,\n  error: ?Error,\n  loadBuilds: () => void,\n  game: Game,\n  onGameUpdated?: Game => void,\n|};\n\nexport default ({\n  builds,\n  authenticatedUser,\n  error,\n  loadBuilds,\n  game,\n  onGameUpdated,\n}: Props) => {\n  const [gameUpdating, setGameUpdating] = React.useState(false);\n  return (\n    <Column noMargin expand>\n      <Line>\n        <Column>\n          <EmptyMessage>\n            <Trans>\n              This is the list of builds that you've done for this game. Note\n              that builds for mobile and desktop are available for 7 days, after\n              which they are removed.\n            </Trans>\n          </EmptyMessage>\n        </Column>\n      </Line>\n      <Line>\n        {!authenticatedUser.authenticated && (\n          <EmptyMessage>\n            <Trans>You need to login first to see your builds.</Trans>\n          </EmptyMessage>\n        )}\n        {authenticatedUser.authenticated && !builds && !error && (\n          <PlaceholderLoader />\n        )}\n        {authenticatedUser.authenticated && error && (\n          <PlaceholderError onRetry={loadBuilds}>\n            <Text>{error.message}</Text>\n          </PlaceholderError>\n        )}\n        {authenticatedUser.authenticated && builds && builds.length === 0 && (\n          <EmptyMessage>\n            <Trans>You don't have any builds for this game.</Trans>\n          </EmptyMessage>\n        )}\n        {authenticatedUser.authenticated && builds && builds.length !== 0 && (\n          <ColumnStackLayout expand>\n            {builds.map((build: Build) => (\n              <BuildCard\n                build={build}\n                key={build.id}\n                game={game}\n                onGameUpdated={onGameUpdated}\n                gameUpdating={gameUpdating}\n                setGameUpdating={setGameUpdating}\n              />\n            ))}\n          </ColumnStackLayout>\n        )}\n      </Line>\n    </Column>\n  );\n};\n","// @flow\nimport React, { Component } from 'react';\nimport { type AuthenticatedUser } from '../../Profile/AuthenticatedUserContext';\nimport BuildsList from './BuildsList';\nimport { getBuilds, type Build } from '../../Utils/GDevelopServices/Build';\nimport { type Game } from '../../Utils/GDevelopServices/Game';\nimport BuildsWatcher from './BuildsWatcher';\n\ntype Props = {|\n  onBuildsUpdated?: () => void,\n  authenticatedUser: AuthenticatedUser,\n  game: Game,\n  onGameUpdated?: Game => void,\n|};\ntype State = {|\n  builds: ?Array<Build>,\n  error: ?Error,\n|};\n\nexport default class Builds extends Component<Props, State> {\n  state = {\n    builds: null,\n    error: null,\n  };\n  buildsWatcher = new BuildsWatcher();\n\n  componentDidMount() {\n    this._refreshBuilds();\n  }\n\n  componentWillUnmount() {\n    this.buildsWatcher.stop();\n  }\n\n  _startBuildsWatcher = () => {\n    if (!this.state.builds) return;\n\n    this.buildsWatcher.start({\n      authenticatedUser: this.props.authenticatedUser,\n      builds: this.state.builds,\n      onBuildUpdated: (newBuild: Build) => {\n        if (!this.state.builds) return;\n\n        this.setState({\n          builds: this.state.builds.map((oldBuild: Build) => {\n            if (newBuild.id === oldBuild.id) return newBuild;\n\n            return oldBuild;\n          }),\n        });\n      },\n    });\n  };\n\n  _refreshBuilds = () => {\n    const {\n      getAuthorizationHeader,\n      firebaseUser,\n    } = this.props.authenticatedUser;\n    if (!firebaseUser) return;\n    // Game is not registered yet so return an empty list of builds.\n    const gameId = this.props.game.id;\n    this.setState({ builds: null, error: null });\n\n    getBuilds(getAuthorizationHeader, firebaseUser.uid, gameId).then(\n      builds => {\n        this.setState(\n          {\n            builds,\n          },\n          () => {\n            this._startBuildsWatcher();\n            if (this.props.onBuildsUpdated) this.props.onBuildsUpdated();\n          }\n        );\n      },\n      () => {\n        this.setState({\n          error: new Error(\n            'There was an issue getting the game builds, verify your internet connection or try again later.'\n          ),\n        });\n      }\n    );\n  };\n\n  render() {\n    return (\n      <BuildsList\n        builds={this.state.builds}\n        authenticatedUser={this.props.authenticatedUser}\n        error={this.state.error}\n        loadBuilds={this._refreshBuilds}\n        game={this.props.game}\n        onGameUpdated={this.props.onGameUpdated}\n      />\n    );\n  }\n}\n","// @flow\nimport axios from 'axios';\nimport { GDevelopAnalyticsApi } from './ApiConfigs';\n\nexport type GameMetrics = {\n  date: string,\n\n  sessions: ?{\n    /** Number of sessions for this day. */\n    d0Sessions: number,\n  },\n  players: ?{\n    /** Number of players for this day. */\n    d0Players: number,\n    /** Number of new players for this day. */\n    d0NewPlayers: number,\n  },\n  retention: ?{\n    /** Day 1 retained players (number of players that played this day, and were new players 1 days earlier). */\n    d1RetainedPlayers: number,\n    /** Day 2 retained players (number of players that played this day, and were new players 2 days earlier). */\n    d2RetainedPlayers: number,\n    /** Day 3 retained players (number of players that played this day, and were new players 3 days earlier). */\n    d3RetainedPlayers: number,\n    /** Day 4 retained players (number of players that played this day, and were new players 4 days earlier). */\n    d4RetainedPlayers: number,\n    /** Day 5 retained players (number of players that played this day, and were new players 5 days earlier). */\n    d5RetainedPlayers: number,\n    /** Day 6 retained players (number of players that played this day, and were new players 6 days earlier). */\n    d6RetainedPlayers: number,\n    /** Day 7 retained players (number of players that played this day, and were new players 7 days earlier). */\n    d7RetainedPlayers: number,\n  },\n};\n\nexport const getGameMetrics = async (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  gameId: string,\n  dayIsoDate: string\n): Promise<?GameMetrics> => {\n  const authorizationHeader = await getAuthorizationHeader();\n\n  const response = await axios.get(\n    `${GDevelopAnalyticsApi.baseUrl}/game-metrics`,\n    {\n      params: {\n        userId,\n        gameId,\n        dayIsoDate,\n      },\n      headers: {\n        Authorization: authorizationHeader,\n      },\n      validateStatus: status =>\n        (status >= 200 && status < 300) || status === 404,\n    }\n  );\n\n  if (response.status === 404) return null;\n  return response.data;\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M5 16L3 5L8.5 10L12 4L15.5 10L21 5L19 16H5M19 19C19 19.6 18.6 20 18 20H6C5.4 20 5 19.6 5 19V18H19V19Z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { Trans, t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport { formatISO } from 'date-fns';\nimport FlatButton from '../UI/FlatButton';\nimport { Line, Spacer } from '../UI/Grid';\nimport {\n  type Game,\n  updateGame,\n  deleteGame,\n  getPublicGame,\n  setGameUserAcls,\n  setGameSlug,\n  getAclsFromUserIds,\n  getCategoryName,\n} from '../Utils/GDevelopServices/Game';\nimport Dialog from '../UI/Dialog';\nimport { Tab, Tabs } from '../UI/Tabs';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport Text from '../UI/Text';\nimport {\n  type GameMetrics,\n  getGameMetrics,\n} from '../Utils/GDevelopServices/Analytics';\nimport AuthenticatedUserContext from '../Profile/AuthenticatedUserContext';\nimport PlaceholderError from '../UI/PlaceholderError';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport { Chip, CircularProgress } from '@material-ui/core';\nimport { Table, TableBody, TableRow, TableRowColumn } from '../UI/Table';\nimport Builds from '../Export/Builds';\nimport AlertMessage from '../UI/AlertMessage';\nimport subDays from 'date-fns/subDays';\nimport RaisedButton from '../UI/RaisedButton';\nimport Window from '../Utils/Window';\nimport HelpButton from '../UI/HelpButton';\nimport { type PublicGame } from '../Utils/GDevelopServices/Game';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport {\n  PublicGamePropertiesDialog,\n  type PartialGameChange,\n} from './PublicGamePropertiesDialog';\nimport TextField from '../UI/TextField';\nimport KeyboardIcon from '@material-ui/icons/Keyboard';\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\nimport SmartphoneIcon from '@material-ui/icons/Smartphone';\nimport Crown from '../UI/CustomSvgIcons/Crown';\nimport { showErrorBox, showWarningBox } from '../UI/Messages/MessageBox';\nimport LeaderboardAdmin from './LeaderboardAdmin';\n\nconst styles = {\n  tableRowStatColumn: {\n    width: 100,\n  },\n};\n\nexport type GamesDetailsTab =\n  | 'details'\n  | 'builds'\n  | 'analytics'\n  | 'leaderboards';\n\ntype Props = {|\n  game: Game,\n  project: ?gdProject,\n  initialTab: GamesDetailsTab,\n  onClose: () => void,\n  onGameUpdated: (updatedGame: Game) => void,\n  onGameDeleted: () => void,\n|};\n\nexport const GameDetailsDialog = ({\n  game,\n  project,\n  initialTab,\n  onClose,\n  onGameUpdated,\n  onGameDeleted,\n}: Props) => {\n  const { getAuthorizationHeader, profile } = React.useContext(\n    AuthenticatedUserContext\n  );\n  const [currentTab, setCurrentTab] = React.useState(initialTab);\n  const [gameRollingMetrics, setGameMetrics] = React.useState<?GameMetrics>(\n    null\n  );\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n  const [\n    gameUnregisterErrorText,\n    setGameUnregisterErrorText,\n  ] = React.useState<?string>(null);\n  const [gameRollingMetricsError, setGameMetricsError] = React.useState<?Error>(\n    null\n  );\n  const [isGameMetricsLoading, setIsGameMetricsLoading] = React.useState(false);\n  const [isGameUpdating, setIsGameUpdating] = React.useState(false);\n\n  const yesterdayIsoDate = formatISO(subDays(new Date(), 1), {\n    representation: 'date',\n  });\n  const [analyticsDate, setAnalyticsDate] = React.useState(yesterdayIsoDate);\n\n  const authenticatedUser = React.useContext(AuthenticatedUserContext);\n  const [publicGame, setPublicGame] = React.useState<?PublicGame>(null);\n  const [publicGameError, setPublicGameError] = React.useState<?Error>(null);\n  const [\n    isPublicGamePropertiesDialogOpen,\n    setIsPublicGamePropertiesDialogOpen,\n  ] = React.useState(false);\n\n  const loadGameMetrics = React.useCallback(\n    async () => {\n      if (!profile) return;\n\n      const { id } = profile;\n\n      setIsGameMetricsLoading(true);\n      setGameMetricsError(null);\n      try {\n        const gameRollingMetrics = await getGameMetrics(\n          getAuthorizationHeader,\n          id,\n          game.id,\n          analyticsDate\n        );\n        setGameMetrics(gameRollingMetrics);\n      } catch (err) {\n        console.error(`Unable to load game rolling metrics:`, err);\n        setGameMetricsError(err);\n      }\n      setIsGameMetricsLoading(false);\n    },\n    [getAuthorizationHeader, profile, game, analyticsDate]\n  );\n\n  React.useEffect(\n    () => {\n      loadGameMetrics();\n    },\n    [loadGameMetrics]\n  );\n\n  const loadPublicGame = React.useCallback(\n    async () => {\n      setPublicGameError(null);\n      try {\n        const publicGameResponse = await getPublicGame(game.id);\n        setPublicGame(publicGameResponse);\n      } catch (err) {\n        console.error(`Unable to load the game:`, err);\n        setPublicGameError(err);\n      }\n    },\n    [game]\n  );\n\n  React.useEffect(\n    () => {\n      loadPublicGame();\n    },\n    [loadPublicGame]\n  );\n\n  const handleGameUpdated = React.useCallback(\n    (updatedGame: Game) => {\n      // Set Public Game to null to show the loader.\n      // It will be refetched thanks to loadPublicGame, because Game is updated.\n      setPublicGame(null);\n      onGameUpdated(updatedGame);\n    },\n    [onGameUpdated]\n  );\n\n  const updateGameFromProject = async (\n    partialGameChange: PartialGameChange,\n    i18n: I18nType\n  ): Promise<boolean> => {\n    if (!project || !profile) return false;\n    const { id } = profile;\n\n    const ownerIds = partialGameChange.ownerIds;\n    if (!ownerIds || !ownerIds.length) {\n      showWarningBox(\n        i18n._(\n          t`You must select at least one user to be the owner of the game.`\n        ),\n        { delayToNextTick: true }\n      );\n      return false;\n    }\n\n    try {\n      setIsGameUpdating(true);\n      const gameId = project.getProjectUuid();\n      const updatedGame = await updateGame(getAuthorizationHeader, id, gameId, {\n        authorName: project.getAuthor() || 'Unspecified publisher',\n        gameName: project.getName() || 'Untitled game',\n        categories: project.getCategories().toJSArray() || [],\n        description: project.getDescription() || '',\n        playWithKeyboard: project.isPlayableWithKeyboard(),\n        playWithGamepad: project.isPlayableWithGamepad(),\n        playWithMobile: project.isPlayableWithMobile(),\n        orientation: project.getOrientation(),\n        discoverable: partialGameChange.discoverable,\n      });\n      if (\n        partialGameChange.userSlug &&\n        partialGameChange.gameSlug &&\n        partialGameChange.userSlug === profile.username\n      ) {\n        try {\n          await setGameSlug(\n            getAuthorizationHeader,\n            id,\n            gameId,\n            partialGameChange.userSlug,\n            partialGameChange.gameSlug\n          );\n        } catch (error) {\n          console.error(\n            'Unable to update the game slug:',\n            error.response || error.message\n          );\n          showErrorBox({\n            message:\n              i18n._(\n                t`Unable to update the game slug. A slug must be 6 to 30 characters long and only contains letters, digits or dashes.`\n              ) +\n              ' ' +\n              i18n._(t`Verify your internet connection or try again later.`),\n            rawError: error,\n            errorId: 'game-slug-update-error',\n          });\n          setIsGameUpdating(false);\n          return false;\n        }\n      }\n      try {\n        const authorAcls = getAclsFromUserIds(\n          project.getAuthorIds().toJSArray()\n        );\n        const ownerAcls = getAclsFromUserIds(ownerIds);\n        await setGameUserAcls(getAuthorizationHeader, id, gameId, {\n          ownership: ownerAcls,\n          author: authorAcls,\n        });\n      } catch (error) {\n        console.error(\n          'Unable to update the game owners or authors:',\n          error.response || error.message\n        );\n        showErrorBox({\n          message:\n            i18n._(\n              t`Unable to update the game owners or authors. Have you removed yourself from the owners?`\n            ) +\n            ' ' +\n            i18n._(t`Verify your internet connection or try again later.`),\n          rawError: error,\n          errorId: 'game-acls-update-error',\n        });\n        setIsGameUpdating(false);\n        return false;\n      }\n      handleGameUpdated(updatedGame);\n    } catch (error) {\n      console.error(\n        'Unable to update the game:',\n        error.response || error.message\n      );\n      showErrorBox({\n        message:\n          i18n._(t`Unable to update the game details.`) +\n          ' ' +\n          i18n._(t`Verify your internet connection or try again later.`),\n        rawError: error,\n        errorId: 'game-details-update-error',\n      });\n      setIsGameUpdating(false);\n      return false;\n    }\n\n    setIsGameUpdating(false);\n    return true;\n  };\n\n  const unregisterGame = async (i18n: I18nType) => {\n    if (!profile) return;\n    const { id } = profile;\n    setGameUnregisterErrorText(null);\n    setIsLoading(true);\n    try {\n      setIsGameUpdating(true);\n      await deleteGame(getAuthorizationHeader, id, game.id);\n      onGameDeleted();\n    } catch (error) {\n      console.error('Unable to delete the game:', error);\n      if (\n        error.response &&\n        error.response.data &&\n        error.response.data.code === 'game-deletion/leaderboards-exist'\n      ) {\n        setGameUnregisterErrorText(\n          i18n._(\n            t`You cannot unregister a game that has active leaderboards. To delete them, go in the Leaderboards tab, and delete them one by one.`\n          )\n        );\n      }\n    } finally {\n      setIsGameUpdating(false);\n      setIsLoading(false);\n    }\n  };\n\n  const unpublishGame = React.useCallback(\n    async () => {\n      if (!profile) return;\n\n      const { id } = profile;\n      try {\n        setIsGameUpdating(true);\n        const updatedGame = await updateGame(\n          getAuthorizationHeader,\n          id,\n          game.id,\n          {\n            publicWebBuildId: null,\n          }\n        );\n        handleGameUpdated(updatedGame);\n      } catch (err) {\n        console.error('Unable to update the game', err);\n      } finally {\n        setIsGameUpdating(false);\n      }\n    },\n    [game, getAuthorizationHeader, profile, handleGameUpdated]\n  );\n\n  const authorUsernames =\n    publicGame &&\n    publicGame.authors.map(author => author.username).filter(Boolean);\n\n  const ownerUsernames =\n    publicGame &&\n    publicGame.owners.map(owner => owner.username).filter(Boolean);\n\n  const isGameOpenedAsProject =\n    !!project && project.getProjectUuid() === game.id;\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Dialog\n          title={\n            <span>\n              {game.gameName}\n              {' - '}\n              <Trans>Dashboard</Trans>\n            </span>\n          }\n          open\n          noMargin\n          flexColumnBody\n          fullHeight={currentTab === 'leaderboards'}\n          onRequestClose={() => {\n            if (!isLoading) onClose();\n          }}\n          maxWidth=\"md\"\n          actions={[\n            <FlatButton\n              label={<Trans>Close</Trans>}\n              disabled={isLoading}\n              onClick={onClose}\n              key=\"close\"\n            />,\n          ]}\n          secondaryActions={[\n            <HelpButton\n              key=\"help\"\n              helpPagePath={\n                currentTab === 'leaderboards'\n                  ? '/interface/games-dashboard/leaderboard-administration'\n                  : '/interface/games-dashboard'\n              }\n            />,\n          ]}\n        >\n          <Tabs value={currentTab} onChange={setCurrentTab}>\n            <Tab label={<Trans>Details</Trans>} value=\"details\" />\n            <Tab label={<Trans>Builds</Trans>} value=\"builds\" />\n            <Tab label={<Trans>Analytics</Trans>} value=\"analytics\" />\n            <Tab label={<Trans>Leaderboards</Trans>} value=\"leaderboards\" />\n          </Tabs>\n          <Line expand>\n            {currentTab === 'leaderboards' ? (\n              <LeaderboardAdmin gameId={game.id} onLoading={setIsLoading} />\n            ) : null}\n            {currentTab === 'details' ? (\n              publicGameError ? (\n                <PlaceholderError onRetry={loadPublicGame}>\n                  <Trans>There was an issue getting the game details.</Trans>{' '}\n                  <Trans>\n                    Verify your internet connection or try again later.\n                  </Trans>\n                </PlaceholderError>\n              ) : !publicGame ? (\n                <PlaceholderLoader />\n              ) : (\n                <ColumnStackLayout expand>\n                  {!isGameOpenedAsProject && (\n                    <AlertMessage kind=\"info\">\n                      <Trans>\n                        In order to update these details you have to open the\n                        game's project.\n                      </Trans>\n                    </AlertMessage>\n                  )}\n                  <Line alignItems=\"center\" noMargin>\n                    <Line\n                      expand\n                      justifyContent=\"flex-start\"\n                      alignItems=\"center\"\n                      noMargin\n                    >\n                      {authorUsernames && (\n                        <>\n                          <Text>\n                            <Trans>Authors:</Trans>\n                          </Text>\n                          <Line noMargin>\n                            {authorUsernames.map((username, index) => (\n                              <React.Fragment key={username}>\n                                <Spacer />\n                                <Chip\n                                  size=\"small\"\n                                  icon={\n                                    ownerUsernames &&\n                                    ownerUsernames.includes(username) ? (\n                                      <Crown />\n                                    ) : (\n                                      undefined\n                                    )\n                                  }\n                                  label={username}\n                                  color={index === 0 ? 'primary' : 'default'}\n                                />\n                              </React.Fragment>\n                            ))}\n                          </Line>\n                        </>\n                      )}\n                    </Line>\n                    <Line expand justifyContent=\"flex-end\" noMargin>\n                      <Text>\n                        <Trans>\n                          Created on {i18n.date(game.createdAt * 1000)}\n                        </Trans>\n                      </Text>\n                    </Line>\n                  </Line>\n                  {(publicGame.playWithKeyboard ||\n                    publicGame.playWithGamepad ||\n                    publicGame.playWithMobile ||\n                    publicGame.categories) && (\n                    <Line alignItems=\"center\" noMargin>\n                      <Line\n                        expand\n                        justifyContent=\"flex-start\"\n                        alignItems=\"center\"\n                        noMargin\n                      >\n                        {publicGame.categories &&\n                          !!publicGame.categories.length && (\n                            <>\n                              <Text>\n                                <Trans>Genres:</Trans>\n                              </Text>\n                              <Line noMargin>\n                                {publicGame.categories.map(\n                                  (category, index) => (\n                                    <React.Fragment key={category}>\n                                      <Spacer />\n                                      <Chip\n                                        size=\"small\"\n                                        label={getCategoryName(category, i18n)}\n                                        color={\n                                          index === 0 ? 'primary' : 'default'\n                                        }\n                                      />\n                                    </React.Fragment>\n                                  )\n                                )}\n                              </Line>\n                            </>\n                          )}\n                      </Line>\n                      <Line expand justifyContent=\"flex-end\" noMargin>\n                        {publicGame.playWithKeyboard && <KeyboardIcon />}\n                        {publicGame.playWithGamepad && <SportsEsportsIcon />}\n                        {publicGame.playWithMobile && <SmartphoneIcon />}\n                      </Line>\n                    </Line>\n                  )}\n                  <TextField\n                    value={publicGame.gameName}\n                    readOnly\n                    fullWidth\n                    floatingLabelText={<Trans>Game name</Trans>}\n                    floatingLabelFixed={true}\n                  />\n                  <TextField\n                    value={publicGame.description || ''}\n                    readOnly\n                    fullWidth\n                    floatingLabelText={<Trans>Game description</Trans>}\n                    floatingLabelFixed={true}\n                    hintText={t`No description set.`}\n                    multiline\n                    rows={5}\n                  />\n                  <SelectField\n                    disabled\n                    fullWidth\n                    floatingLabelText={\n                      <Trans>Device orientation (for mobile)</Trans>\n                    }\n                    value={publicGame.orientation}\n                  >\n                    <SelectOption\n                      value=\"default\"\n                      primaryText={t`Platform default`}\n                    />\n                    <SelectOption\n                      value=\"landscape\"\n                      primaryText={t`Landscape`}\n                    />\n                    <SelectOption value=\"portrait\" primaryText={t`Portrait`} />\n                  </SelectField>\n                  <Line noMargin justifyContent=\"flex-end\">\n                    <FlatButton\n                      onClick={() => {\n                        const answer = Window.showConfirmDialog(\n                          \"Are you sure you want to unregister this game? \\n\\nIt will disappear from your games dashboard and you won't get access to analytics, unless you register it again.\"\n                        );\n\n                        if (!answer) return;\n\n                        unregisterGame(i18n);\n                      }}\n                      label={<Trans>Unregister this game</Trans>}\n                      disabled={isGameUpdating}\n                    />\n                    <Spacer />\n                    {publicGame.publicWebBuildId && (\n                      <>\n                        <RaisedButton\n                          onClick={() => {\n                            const answer = Window.showConfirmDialog(\n                              'Are you sure you want to unpublish this game? \\n\\nThis will make your Liluo.io unique game URL not accessible anymore. \\n\\nYou can decide at any time to publish it again.'\n                            );\n\n                            if (!answer) return;\n\n                            unpublishGame();\n                          }}\n                          label={<Trans>Unpublish from Liluo.io</Trans>}\n                          disabled={isGameUpdating}\n                        />\n                        <Spacer />\n                      </>\n                    )}\n                    <RaisedButton\n                      primary\n                      onClick={() => setIsPublicGamePropertiesDialogOpen(true)}\n                      label={<Trans>Edit game details</Trans>}\n                      disabled={!isGameOpenedAsProject || isGameUpdating}\n                    />\n                  </Line>\n                  {gameUnregisterErrorText ? (\n                    <PlaceholderError kind=\"error\">\n                      {gameUnregisterErrorText}\n                    </PlaceholderError>\n                  ) : null}\n                </ColumnStackLayout>\n              )\n            ) : null}\n            {currentTab === 'builds' ? (\n              <Builds\n                game={game}\n                authenticatedUser={authenticatedUser}\n                onGameUpdated={onGameUpdated}\n              />\n            ) : null}\n            {currentTab === 'analytics' ? (\n              gameRollingMetricsError ? (\n                <PlaceholderError\n                  onRetry={() => {\n                    loadGameMetrics();\n                  }}\n                >\n                  <Trans>There was an issue getting the game analytics.</Trans>{' '}\n                  <Trans>\n                    Verify your internet connection or try again later.\n                  </Trans>\n                </PlaceholderError>\n              ) : (\n                <ColumnStackLayout expand>\n                  <Line noMargin alignItems=\"center\">\n                    <Text size=\"title\">\n                      <Trans>Consolidated metrics</Trans>\n                    </Text>\n                    <Spacer />\n                    {!publicGame && <CircularProgress size={20} />}\n                  </Line>\n                  <Table>\n                    <TableBody>\n                      <TableRow>\n                        <TableRowColumn>\n                          <Trans>Last week sessions count</Trans>\n                        </TableRowColumn>\n                        <TableRowColumn style={styles.tableRowStatColumn}>\n                          {publicGame && publicGame.cachedLastWeekSessionsCount\n                            ? publicGame.cachedLastWeekSessionsCount\n                            : '-'}\n                        </TableRowColumn>\n                      </TableRow>\n                      <TableRow>\n                        <TableRowColumn>\n                          <Trans>Last year sessions count</Trans>\n                        </TableRowColumn>\n                        <TableRowColumn style={styles.tableRowStatColumn}>\n                          {publicGame && publicGame.cachedLastYearSessionsCount\n                            ? publicGame.cachedLastYearSessionsCount\n                            : '-'}\n                        </TableRowColumn>\n                      </TableRow>\n                    </TableBody>\n                  </Table>\n                  <Line noMargin alignItems=\"center\">\n                    <Text size=\"title\">\n                      <Trans>Daily metrics</Trans>\n                    </Text>\n                    <Spacer />\n                    {isGameMetricsLoading && <CircularProgress size={20} />}\n                  </Line>\n                  <Line noMargin>\n                    <SelectField\n                      fullWidth\n                      floatingLabelText={<Trans>Day</Trans>}\n                      value={analyticsDate}\n                      onChange={(_, _index, newIsoDate) => {\n                        setAnalyticsDate(newIsoDate);\n                      }}\n                    >\n                      {Array(5)\n                        .fill('')\n                        .map((_, index) => {\n                          const isoDate = formatISO(\n                            subDays(new Date(), index + 2),\n                            {\n                              representation: 'date',\n                            }\n                          );\n                          return (\n                            <SelectOption\n                              key={isoDate}\n                              value={isoDate}\n                              primaryText={isoDate}\n                            />\n                          );\n                        })\n                        .reverse()}\n                      <SelectOption\n                        value={yesterdayIsoDate}\n                        primaryText={t`Yesterday`}\n                      />\n                      <SelectOption\n                        value={formatISO(new Date(), {\n                          representation: 'date',\n                        })}\n                        primaryText={t`Today (so far, in real time)`}\n                      />\n                    </SelectField>\n                  </Line>\n                  {!isGameMetricsLoading && !gameRollingMetrics ? (\n                    <AlertMessage kind=\"warning\">\n                      <Trans>\n                        There were no players or stored metrics for this day. Be\n                        sure to publish your game and get players to try it to\n                        see the collected anonymous analytics.\n                      </Trans>\n                    </AlertMessage>\n                  ) : null}\n                  <Table>\n                    <TableBody>\n                      <TableRow>\n                        <TableRowColumn>\n                          <Trans>Players count</Trans>\n                        </TableRowColumn>\n                        <TableRowColumn style={styles.tableRowStatColumn}>\n                          {gameRollingMetrics && gameRollingMetrics.players\n                            ? gameRollingMetrics.players.d0Players\n                            : '-'}\n                        </TableRowColumn>\n                      </TableRow>\n                      <TableRow>\n                        <TableRowColumn>\n                          <Trans>Sessions count</Trans>\n                        </TableRowColumn>\n                        <TableRowColumn style={styles.tableRowStatColumn}>\n                          {gameRollingMetrics && gameRollingMetrics.sessions\n                            ? gameRollingMetrics.sessions.d0Sessions\n                            : '-'}\n                        </TableRowColumn>\n                      </TableRow>\n                      <TableRow>\n                        <TableRowColumn>\n                          <Trans>New players count</Trans>\n                        </TableRowColumn>\n                        <TableRowColumn style={styles.tableRowStatColumn}>\n                          {gameRollingMetrics && gameRollingMetrics.players\n                            ? gameRollingMetrics.players.d0NewPlayers\n                            : '-'}\n                        </TableRowColumn>\n                      </TableRow>\n                    </TableBody>\n                  </Table>\n                  {gameRollingMetrics &&\n                  (!gameRollingMetrics.retention ||\n                    !gameRollingMetrics.players) ? (\n                    <AlertMessage kind=\"info\">\n                      Upgrade your account with a subscription to unlock all the\n                      metrics for your game.\n                    </AlertMessage>\n                  ) : null}\n                  <Table>\n                    <TableBody>\n                      {[1, 2, 3, 4, 5, 6, 7].map(dayIndex => (\n                        <TableRow key={dayIndex}>\n                          <TableRowColumn>\n                            <Trans>Day {dayIndex} retained players</Trans>\n                          </TableRowColumn>\n                          <TableRowColumn style={styles.tableRowStatColumn}>\n                            {gameRollingMetrics &&\n                            gameRollingMetrics.retention &&\n                            gameRollingMetrics.retention[\n                              `d${dayIndex}RetainedPlayers`\n                            ] != null\n                              ? gameRollingMetrics.retention[\n                                  `d${dayIndex}RetainedPlayers`\n                                ]\n                              : '-'}\n                          </TableRowColumn>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </ColumnStackLayout>\n              )\n            ) : null}\n          </Line>\n          {publicGame && project && isPublicGamePropertiesDialogOpen && (\n            <PublicGamePropertiesDialog\n              project={project}\n              publicGame={publicGame}\n              onApply={async partialGameChange => {\n                const isGameUpdated = await updateGameFromProject(\n                  partialGameChange,\n                  i18n\n                );\n                if (isGameUpdated) {\n                  setIsPublicGamePropertiesDialogOpen(false);\n                }\n              }}\n              onClose={() => setIsPublicGamePropertiesDialogOpen(false)}\n              isLoading={isGameUpdating}\n            />\n          )}\n        </Dialog>\n      )}\n    </I18n>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { type Resource } from '../../Utils/GDevelopServices/Asset';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Text from '../../UI/Text';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport VideoLibrary from '@material-ui/icons/VideoLibrary';\nimport FontDownload from '@material-ui/icons/FontDownload';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Trans } from '@lingui/macro';\nimport { Column, Line } from '../../UI/Grid';\nimport { CorsAwareImage } from '../../UI/CorsAwareImage';\nimport CheckeredBackground from '../../ResourcesList/CheckeredBackground';\n\nconst paddingSize = 10;\nconst styles = {\n  previewContainer: {\n    display: 'flex',\n    position: 'relative',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  previewImage: {\n    position: 'relative',\n    objectFit: 'contain',\n    verticalAlign: 'middle',\n    pointerEvents: 'none',\n  },\n  previewIcon: {\n    width: 40,\n    height: 40,\n  },\n  cardContainer: {\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  titleContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: 48,\n    color: '#fff',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    backgroundColor: 'rgb(0,0,0,0.5)',\n  },\n  title: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  icon: { width: 32, height: 32 },\n  audioElement: { width: 128, height: 40 },\n};\n\ntype ImageCardProps = {|\n  size: number,\n  resource: Resource,\n  onChoose: () => void,\n  imageStyle?: {|\n    width: number,\n    height: number,\n  |},\n|};\n\nconst ImageCard = ({\n  resource,\n  onChoose,\n  size,\n  imageStyle,\n}: ImageCardProps) => {\n  return (\n    <ButtonBase onClick={onChoose} focusRipple>\n      <div style={{ ...styles.cardContainer, width: size, height: size }}>\n        <div style={{ ...styles.previewContainer, width: size, height: size }}>\n          <CheckeredBackground />\n          <CorsAwareImage\n            key={resource.url}\n            style={{\n              ...styles.previewImage,\n              maxWidth: 128 - 2 * paddingSize,\n              maxHeight: 128 - 2 * paddingSize,\n              ...imageStyle,\n            }}\n            src={resource.url}\n            alt={resource.name}\n          />\n        </div>\n        <div style={styles.titleContainer}>\n          <Text noMargin style={styles.title}>\n            {resource.name}\n          </Text>\n          <Text noMargin style={styles.title} size=\"body2\">\n            {resource.license}\n          </Text>\n        </div>\n      </div>\n    </ButtonBase>\n  );\n};\n\ntype GenericCardProps = {|\n  size: number,\n  resource: Resource,\n  onChoose: () => void,\n  children: React.Node,\n|};\n\nconst GenericCard = ({\n  resource,\n  onChoose,\n  size,\n  children,\n}: GenericCardProps) => {\n  return (\n    <div style={{ ...styles.cardContainer, width: size, height: size }}>\n      <Column>{children}</Column>\n      <div style={styles.titleContainer}>\n        <Text noMargin style={styles.title}>\n          {resource.name}\n        </Text>\n        <Text noMargin style={styles.title} size=\"body2\">\n          {resource.license}\n        </Text>\n      </div>\n    </div>\n  );\n};\n\ntype Props = {|\n  size: number,\n  resource: Resource,\n  onChoose: () => void,\n|};\n\nexport const ResourceCard = ({ resource, onChoose, size }: Props) => {\n  const resourceKind = resource.type;\n\n  switch (resourceKind) {\n    case 'image':\n      return <ImageCard resource={resource} onChoose={onChoose} size={size} />;\n    case 'svg':\n      return (\n        <ImageCard\n          resource={resource}\n          onChoose={onChoose}\n          size={size}\n          imageStyle={styles.previewIcon}\n        />\n      );\n    case 'audio':\n      return (\n        <GenericCard onChoose={onChoose} resource={resource} size={size}>\n          <Line justifyContent=\"center\">\n            <audio controls src={resource.url} style={styles.audioElement}>\n              Audio preview is unsupported.\n            </audio>\n          </Line>\n          <Line justifyContent=\"center\">\n            <RaisedButton onClick={onChoose} label={<Trans>Choose</Trans>} />\n          </Line>\n        </GenericCard>\n      );\n    case 'json':\n      return (\n        <GenericCard onChoose={onChoose} resource={resource} size={size}>\n          <Line justifyContent=\"center\">\n            <InsertDriveFile style={styles.icon} />\n          </Line>\n          <Line justifyContent=\"center\">\n            <RaisedButton onClick={onChoose} label={<Trans>Choose</Trans>} />\n          </Line>\n        </GenericCard>\n      );\n    case 'video':\n      return (\n        <GenericCard onChoose={onChoose} resource={resource} size={size}>\n          <Line justifyContent=\"center\">\n            <VideoLibrary style={styles.icon} />\n          </Line>\n          <Line justifyContent=\"center\">\n            <RaisedButton onClick={onChoose} label={<Trans>Choose</Trans>} />\n          </Line>\n        </GenericCard>\n      );\n    case 'font':\n      return (\n        <GenericCard onChoose={onChoose} resource={resource} size={size}>\n          <Line justifyContent=\"center\">\n            <FontDownload style={styles.icon} />\n          </Line>\n          <Line justifyContent=\"center\">\n            <RaisedButton onClick={onChoose} label={<Trans>Choose</Trans>} />\n          </Line>\n        </GenericCard>\n      );\n    default:\n      return null;\n  }\n};\n","// @flow\nimport * as React from 'react';\nimport SearchBar from '../../UI/SearchBar';\nimport { Column, Line } from '../../UI/Grid';\nimport Background from '../../UI/Background';\nimport ScrollView from '../../UI/ScrollView';\nimport { type Resource } from '../../Utils/GDevelopServices/Asset';\nimport { FiltersChooser } from '../../UI/Search/FiltersChooser';\nimport { ResourceStoreContext } from './ResourceStoreContext';\nimport { BoxSearchResults } from '../../UI/Search/BoxSearchResults';\nimport { ResourceCard } from './ResourceCard';\nimport Subheader from '../../UI/Subheader';\nimport { CategoryChooser } from '../../UI/Search/CategoryChooser';\nimport { Trans } from '@lingui/macro';\n\nconst styles = {\n  searchBar: {\n    // TODO: Can we put this in the search bar by default?\n    flexShrink: 0,\n  },\n};\n\ntype Props = {\n  onChoose: Resource => void,\n  resourceKind: string,\n};\n\nexport const ResourceStore = ({ onChoose, resourceKind }: Props) => {\n  const {\n    filters,\n    searchResults,\n    error,\n    fetchResourcesAndFilters,\n    filtersState,\n    searchText,\n    setSearchText,\n  } = React.useContext(ResourceStoreContext);\n\n  React.useEffect(\n    () => {\n      fetchResourcesAndFilters();\n    },\n    [fetchResourcesAndFilters]\n  );\n\n  const searchResultsForResourceKind = searchResults\n    ? searchResults.filter(resource => resource.type === resourceKind)\n    : null;\n\n  return (\n    <Column expand noMargin useFullHeight>\n      <SearchBar\n        value={searchText}\n        onChange={setSearchText}\n        onRequestSearch={() => {}}\n        style={styles.searchBar}\n      />\n      <Line\n        expand\n        overflow={\n          'hidden' /* Somehow required on Chrome/Firefox to avoid children growing (but not on Safari) */\n        }\n      >\n        <Background noFullHeight noExpand width={250}>\n          <ScrollView>\n            <Subheader>\n              <Trans>Categories</Trans>\n            </Subheader>\n            <CategoryChooser\n              allItemsLabel={<Trans>All assets</Trans>}\n              allFilters={filters}\n              filtersState={filtersState}\n              error={error}\n            />\n            <Subheader>\n              <Trans>Filters</Trans>\n            </Subheader>\n            <FiltersChooser\n              allFilters={filters}\n              filtersState={filtersState}\n              error={error}\n            />\n          </ScrollView>\n        </Background>\n        <BoxSearchResults\n          baseSize={128}\n          onRetry={fetchResourcesAndFilters}\n          error={error}\n          searchItems={searchResultsForResourceKind}\n          renderSearchItem={(resource, size) => (\n            <ResourceCard\n              size={size}\n              resource={resource}\n              onChoose={() => onChoose(resource)}\n            />\n          )}\n        />\n      </Line>\n    </Column>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { type ExtensionShortHeader } from '../../Utils/GDevelopServices/Extension';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Text from '../../UI/Text';\nimport { Trans } from '@lingui/macro';\nimport { Column, Line } from '../../UI/Grid';\nimport { IconContainer } from '../../UI/IconContainer';\nimport { UserPublicProfileChip } from '../../UI/User/UserPublicProfileChip';\nimport HighlightedText from '../../UI/Search/HighlightedText';\nimport { type SearchMatch } from '../../UI/Search/UseSearchStructuredItem';\n\nconst styles = {\n  button: { width: '100%' },\n  container: {\n    display: 'flex',\n    textAlign: 'left',\n    overflow: 'hidden',\n    padding: 8,\n    width: '100%',\n  },\n};\n\ntype Props = {|\n  project: gdProject,\n  extensionShortHeader: ExtensionShortHeader,\n  matches: ?Array<SearchMatch>,\n  onChoose: () => void,\n  onHeightComputed: number => void,\n|};\n\nexport const ExtensionListItem = ({\n  project,\n  extensionShortHeader,\n  matches,\n  onChoose,\n  onHeightComputed,\n}: Props) => {\n  const alreadyInstalled = project.hasEventsFunctionsExtensionNamed(\n    extensionShortHeader.name\n  );\n\n  // Report the height of the item once it's known.\n  const containerRef = React.useRef<?HTMLDivElement>(null);\n  React.useLayoutEffect(() => {\n    if (containerRef.current)\n      onHeightComputed(containerRef.current.getBoundingClientRect().height);\n  });\n\n  const renderExtensionField = (field: 'shortDescription' | 'fullName') => {\n    const originalField = extensionShortHeader[field];\n\n    if (!matches) return originalField;\n    const nameMatches = matches.filter(match => match.key === field);\n    if (nameMatches.length === 0) return originalField;\n\n    return (\n      <HighlightedText\n        text={originalField}\n        matchesCoordinates={nameMatches[0].indices}\n      />\n    );\n  };\n\n  return (\n    <ButtonBase onClick={onChoose} focusRipple style={styles.button}>\n      <div style={styles.container} ref={containerRef}>\n        <Line>\n          <IconContainer\n            alt={extensionShortHeader.fullName}\n            src={extensionShortHeader.previewIconUrl}\n            size={64}\n          />\n          <Column expand>\n            <Text noMargin>\n              {renderExtensionField('fullName')}{' '}\n              {alreadyInstalled && <Trans> (already installed)</Trans>}\n            </Text>\n            {extensionShortHeader.authors && (\n              <Line>\n                {extensionShortHeader.authors.map(author => (\n                  <UserPublicProfileChip user={author} key={author.id} />\n                ))}\n              </Line>\n            )}\n            <Text noMargin size=\"body2\">\n              {renderExtensionField('shortDescription')}\n            </Text>\n          </Column>\n        </Line>\n      </div>\n    </ButtonBase>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport SearchBar from '../../UI/SearchBar';\nimport { Column } from '../../UI/Grid';\nimport { type ExtensionShortHeader } from '../../Utils/GDevelopServices/Extension';\nimport { ExtensionStoreContext } from './ExtensionStoreContext';\nimport { ListSearchResults } from '../../UI/Search/ListSearchResults';\nimport { ExtensionListItem } from './ExtensionListItem';\nimport { ResponsiveWindowMeasurer } from '../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport ExtensionInstallDialog from './ExtensionInstallDialog';\nimport { type SearchMatch } from '../../UI/Search/UseSearchStructuredItem';\nimport {\n  sendExtensionDetailsOpened,\n  sendExtensionAddedToProject,\n} from '../../Utils/Analytics/EventSender';\n\nconst styles = {\n  searchBar: {\n    // TODO: Can we put this in the search bar by default?\n    flexShrink: 0,\n  },\n};\n\ntype Props = {|\n  isInstalling: boolean,\n  project: gdProject,\n  onInstall: ExtensionShortHeader => Promise<boolean>,\n  showOnlyWithBehaviors: boolean,\n|};\n\nconst getExtensionName = (extensionShortHeader: ExtensionShortHeader) =>\n  extensionShortHeader.name;\n\nexport const ExtensionStore = ({\n  isInstalling,\n  project,\n  onInstall,\n  showOnlyWithBehaviors,\n}: Props) => {\n  const [\n    selectedExtensionShortHeader,\n    setSelectedExtensionShortHeader,\n  ] = React.useState<?ExtensionShortHeader>(null);\n  const {\n    filters,\n    searchResults,\n    error,\n    fetchExtensionsAndFilters,\n    filtersState,\n    searchText,\n    setSearchText,\n  } = React.useContext(ExtensionStoreContext);\n\n  React.useEffect(\n    () => {\n      fetchExtensionsAndFilters();\n    },\n    [fetchExtensionsAndFilters]\n  );\n\n  const filteredSearchResults = searchResults\n    ? searchResults.filter(\n        ({ item: extensionShortHeader }) =>\n          !showOnlyWithBehaviors ||\n          extensionShortHeader.eventsBasedBehaviorsCount > 0\n      )\n    : null;\n\n  const tagsHandler = React.useMemo(\n    () => ({\n      add: filtersState.addFilter,\n      remove: filtersState.removeFilter,\n      chosenTags: filtersState.chosenFilters,\n    }),\n    [filtersState]\n  );\n\n  const getExtensionsMatches = (\n    extensionShortHeader: ExtensionShortHeader\n  ): SearchMatch[] => {\n    if (!searchResults) return [];\n    const extensionMatches = searchResults.find(\n      result => result.item.name === extensionShortHeader.name\n    );\n    return extensionMatches ? extensionMatches.matches : [];\n  };\n\n  return (\n    <React.Fragment>\n      <ResponsiveWindowMeasurer>\n        {windowWidth => (\n          <Column expand noMargin useFullHeight>\n            <SearchBar\n              value={searchText}\n              onChange={setSearchText}\n              onRequestSearch={() => {}}\n              style={styles.searchBar}\n              tagsHandler={tagsHandler}\n              tags={filters && filters.allTags}\n            />\n            <ListSearchResults\n              disableAutoTranslate // Search results text highlighting conflicts with dom handling by browser auto-translations features. Disables auto translation to prevent crashes.\n              onRetry={fetchExtensionsAndFilters}\n              error={error}\n              searchItems={\n                filteredSearchResults &&\n                filteredSearchResults.map(({ item }) => item)\n              }\n              getSearchItemUniqueId={getExtensionName}\n              renderSearchItem={(extensionShortHeader, onHeightComputed) => (\n                <ExtensionListItem\n                  key={extensionShortHeader.name}\n                  project={project}\n                  onHeightComputed={onHeightComputed}\n                  extensionShortHeader={extensionShortHeader}\n                  matches={getExtensionsMatches(extensionShortHeader)}\n                  onChoose={() => {\n                    sendExtensionDetailsOpened(extensionShortHeader.name);\n                    setSelectedExtensionShortHeader(extensionShortHeader);\n                  }}\n                />\n              )}\n            />\n          </Column>\n        )}\n      </ResponsiveWindowMeasurer>\n      {!!selectedExtensionShortHeader && (\n        <ExtensionInstallDialog\n          project={project}\n          isInstalling={isInstalling}\n          extensionShortHeader={selectedExtensionShortHeader}\n          onInstall={async () => {\n            sendExtensionAddedToProject(selectedExtensionShortHeader.name);\n            const wasInstalled = await onInstall(selectedExtensionShortHeader);\n            if (wasInstalled) setSelectedExtensionShortHeader(null);\n          }}\n          onClose={() => setSelectedExtensionShortHeader(null)}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n","//@flow\nimport { diff } from 'semver/functions/diff';\nimport { useMemo } from 'react';\nimport type { ExtensionShortHeader } from '../../Utils/GDevelopServices/Extension';\n\ntype UpdateType = 'patch' | 'minor' | 'major';\ntype UpdateMetadata = {|\n  type: UpdateType,\n  currentVersion: string,\n  newestVersion: string,\n|};\n\nconst getUpdateMetadataFromVersions = (\n  currentVersion: string,\n  newestVersion: string\n): UpdateMetadata | null => {\n  try {\n    const versionDiff: UpdateType = diff(currentVersion, newestVersion);\n    if (['patch', 'minor', 'major'].includes(versionDiff)) {\n      return {\n        type: versionDiff,\n        currentVersion,\n        newestVersion,\n      };\n    }\n  } catch {\n    // An error will be thrown here only if the version is not in semver.\n    // Simply compare the strings for such extensions.\n    // Note that this is an edge case, the extension repository enforces semver, so this\n    // is only for local extensions that do not respect the best practices.\n    if (currentVersion !== newestVersion) {\n      return {\n        // Use minor as it is the most neutral option\n        type: 'minor',\n        currentVersion,\n        newestVersion,\n      };\n    }\n  }\n\n  return null;\n};\n\nexport const useExtensionUpdate = (\n  project: gdProject,\n  extension: ExtensionShortHeader\n): UpdateMetadata | null => {\n  return useMemo<UpdateMetadata | null>(\n    () =>\n      project.hasEventsFunctionsExtensionNamed(extension.name)\n        ? getUpdateMetadataFromVersions(\n            project.getEventsFunctionsExtension(extension.name).getVersion(),\n            extension.version\n          )\n        : null,\n    [project, extension]\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport {\n  type ExtensionShortHeader,\n  type ExtensionHeader,\n  getExtensionHeader,\n  isCompatibleWithExtension,\n} from '../../Utils/GDevelopServices/Extension';\nimport LeftLoader from '../../UI/LeftLoader';\nimport PlaceholderLoader from '../../UI/PlaceholderLoader';\nimport PlaceholderError from '../../UI/PlaceholderError';\nimport { MarkdownText } from '../../UI/MarkdownText';\nimport Text from '../../UI/Text';\nimport AlertMessage from '../../UI/AlertMessage';\nimport { getIDEVersion } from '../../Version';\nimport { Column, Line } from '../../UI/Grid';\nimport { Divider } from '@material-ui/core';\nimport { ColumnStackLayout } from '../../UI/Layout';\nimport { IconContainer } from '../../UI/IconContainer';\nimport { UserPublicProfileChip } from '../../UI/User/UserPublicProfileChip';\nimport RaisedButton from '../../UI/RaisedButton';\nimport Window from '../../Utils/Window';\nimport { useExtensionUpdate } from './UseExtensionUpdates';\n\nconst getTransformedDescription = (extensionHeader: ExtensionHeader) => {\n  if (\n    extensionHeader.description.substr(\n      0,\n      extensionHeader.shortDescription.length\n    ) === extensionHeader.shortDescription\n  ) {\n    return extensionHeader.description.substr(\n      extensionHeader.shortDescription.length\n    );\n  }\n\n  return extensionHeader.description;\n};\n\ntype Props = {|\n  extensionShortHeader: ExtensionShortHeader,\n  isInstalling: boolean,\n  onClose: () => void,\n  onInstall: () => Promise<void>,\n  onEdit?: () => void,\n  project: gdProject,\n|};\n\nconst ExtensionInstallDialog = ({\n  extensionShortHeader,\n  isInstalling,\n  onClose,\n  onInstall,\n  onEdit,\n  project,\n}: Props) => {\n  const alreadyInstalled = project.hasEventsFunctionsExtensionNamed(\n    extensionShortHeader.name\n  );\n  const extensionUpdate = useExtensionUpdate(project, extensionShortHeader);\n\n  const [error, setError] = React.useState<?Error>(null);\n  const [\n    extensionHeader,\n    setExtensionHeader,\n  ] = React.useState<?ExtensionHeader>(null);\n\n  const loadExtensionheader = React.useCallback(\n    () => {\n      setError(null);\n      getExtensionHeader(extensionShortHeader).then(\n        extensionHeader => {\n          setExtensionHeader(extensionHeader);\n        },\n        error => {\n          setError(error);\n        }\n      );\n    },\n    [extensionShortHeader]\n  );\n\n  React.useEffect(() => loadExtensionheader(), [loadExtensionheader]);\n\n  const isCompatible = isCompatibleWithExtension(\n    getIDEVersion(),\n    extensionShortHeader\n  );\n\n  const canInstallExtension = !isInstalling && isCompatible;\n  const onInstallExtension = React.useCallback(\n    () => {\n      if (canInstallExtension) {\n        if (alreadyInstalled) {\n          const answer = Window.showConfirmDialog(\n            'This extension is already in your project, this will install the latest version. You may have to do some adaptations to make sure your game still works. Do you want to continue?'\n          );\n          if (!answer) return;\n          onInstall();\n        } else {\n          onInstall();\n        }\n      }\n    },\n    [onInstall, canInstallExtension, alreadyInstalled]\n  );\n\n  return (\n    <Dialog\n      actions={[\n        <FlatButton\n          key=\"close\"\n          label={<Trans>Back</Trans>}\n          primary={false}\n          onClick={onClose}\n          disabled={isInstalling}\n        />,\n        <LeftLoader isLoading={isInstalling} key=\"install\">\n          <RaisedButton\n            label={\n              !isCompatible ? (\n                <Trans>Not compatible</Trans>\n              ) : alreadyInstalled ? (\n                extensionUpdate ? (\n                  <Trans>Update</Trans>\n                ) : (\n                  <Trans>Re-install</Trans>\n                )\n              ) : (\n                <Trans>Install in project</Trans>\n              )\n            }\n            primary\n            onClick={onInstallExtension}\n            disabled={!canInstallExtension}\n          />\n        </LeftLoader>,\n      ]}\n      secondaryActions={\n        onEdit\n          ? [\n              <FlatButton\n                key=\"edit-extension\"\n                label={<Trans>Open in editor</Trans>}\n                onClick={onEdit}\n              />,\n            ]\n          : undefined\n      }\n      cannotBeDismissed={false}\n      open\n      onRequestClose={onClose}\n    >\n      <ColumnStackLayout expand noMargin>\n        {!isCompatible && (\n          <AlertMessage kind=\"error\">\n            <Trans>\n              Unfortunately, this extension requires a newer version of GDevelop\n              to work. Update GDevelop to be able to use this extension in your\n              project.\n            </Trans>\n          </AlertMessage>\n        )}\n        <Line alignItems=\"center\" noMargin>\n          <IconContainer\n            alt={extensionShortHeader.fullName}\n            src={extensionShortHeader.previewIconUrl}\n            size={64}\n          />\n          <Column expand>\n            <Text noMargin size=\"title\">\n              {extensionShortHeader.fullName}\n            </Text>\n            <Text noMargin size=\"body2\">\n              <Trans>Version {' ' + extensionShortHeader.version}</Trans>\n            </Text>\n            <Line>\n              {extensionShortHeader.authors &&\n                extensionShortHeader.authors.map(author => (\n                  <UserPublicProfileChip\n                    user={author}\n                    key={author.id}\n                    isClickable\n                  />\n                ))}\n            </Line>\n          </Column>\n        </Line>\n        <Text noMargin>{extensionShortHeader.shortDescription}</Text>\n        <Divider />\n        {extensionHeader && (\n          <MarkdownText\n            source={getTransformedDescription(extensionHeader)}\n            isStandaloneText\n          />\n        )}\n        {!extensionHeader && !error && <PlaceholderLoader />}\n        {!extensionHeader && error && (\n          <PlaceholderError onRetry={loadExtensionheader}>\n            <Trans>\n              Can't load the extension registry. Verify your internet connection\n              or try again later.\n            </Trans>\n          </PlaceholderError>\n        )}\n      </ColumnStackLayout>\n    </Dialog>\n  );\n};\n\nexport default ExtensionInstallDialog;\n","// @flow\nimport * as React from 'react';\nimport ThemeContext from '../UI/Theme/ThemeContext';\nimport Window from '../Utils/Window';\nimport { type FileMetadata } from '../ProjectsStorage';\nimport UnsavedChangesContext from './UnsavedChangesContext';\n\ntype Props = {|\n  fileMetadata: ?FileMetadata,\n|};\n\n/**\n * Update the title bar according to the project and the current theme.\n */\nexport default function ProjectTitlebar({ fileMetadata }: Props) {\n  const gdevelopTheme = React.useContext(ThemeContext);\n  const unsavedChanges = React.useContext(UnsavedChangesContext);\n  const hasUnsavedChanges = unsavedChanges.hasUnsavedChanges;\n\n  React.useEffect(\n    () => {\n      const title = [\n        'GDevelop 5',\n        fileMetadata\n          ? fileMetadata.fileIdentifier + (hasUnsavedChanges ? ' *' : '')\n          : '',\n      ]\n        .filter(Boolean)\n        .join(' - ');\n\n      Window.setTitle(title);\n      Window.setTitleBarColor(gdevelopTheme.toolbar.backgroundColor);\n    },\n    [fileMetadata, hasUnsavedChanges, gdevelopTheme.toolbar.backgroundColor]\n  );\n\n  return null;\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { PureComponent } from 'react';\nimport { List, ListItem } from '../UI/List';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport { Column, Line } from '../UI/Grid';\nimport Window from '../Utils/Window';\nimport Text from '../UI/Text';\nimport PreferencesContext from './Preferences/PreferencesContext';\nimport {\n  getUpdateStatusLabel,\n  getUpdateButtonLabel,\n  canDownloadUpdate,\n  type UpdateStatus,\n} from './UpdaterTools';\nimport Changelog from './Changelog';\nimport { getIDEVersion, getGDCoreVersion } from '../Version';\n\ntype Props = {\n  open: boolean,\n  onClose: Function,\n  updateStatus: UpdateStatus,\n};\n\ntype State = {|\n  currentTab: string,\n|};\n\nconst styles = {\n  logo: {\n    width: '100%',\n  },\n};\n\n// There must be missing tons of people.\n// If you contributed to GDevelop but you're not in the list, please\n// send a Pull Request on GitHub or open an issue ;)\nconst contributors = [\n  // Core development team\n  {\n    name: 'Clément Pasteau',\n    description: 'Core development team',\n    link: 'https://github.com/ClementPasteau',\n  },\n  {\n    name: 'AlexandreSi',\n    description: 'Core development team',\n    link: 'https://github.com/AlexandreSi',\n  },\n  // Code contributors\n  {\n    name: 'Victor Levasseur',\n    description:\n      'Numerous code contributions to GDevelop and community moderation',\n  },\n  {\n    name: 'Lizard-13',\n    description:\n      'Numerous code contributions to GDevelop and community moderation',\n  },\n  {\n    name: \"Christina 'Castpixel' Antoinette Neofotistou\",\n    description: 'Art and assets for the 8-bit Space Shooter example.',\n    link: 'https://www.patreon.com/castpixel',\n  },\n  { name: 'ale26reg', description: 'Contributions to GDevelop' },\n  { name: 'dos1', description: 'Contributions to GDevelop' },\n  {\n    name: 'Aurélien Vivet',\n    description:\n      'Numerous code contributions to GDevelop and community management',\n    link: 'https://www.witly.fr',\n  },\n  {\n    name: 'Todor Imreorov',\n    description: 'Numerous code contributions to GDevelop',\n  },\n  { name: 'brylie', description: 'Contributions to GDevelop' },\n  { name: 'Nnarol', description: 'Contributions to GDevelop' },\n  { name: 'wild-master', description: 'Contributions to GDevelop' },\n  { name: 'RandomShaper', description: 'Contributions to GDevelop' },\n  { name: 'RyanNerd', description: 'Contributions to GDevelop' },\n  { name: 'greater', description: 'Contributions to GDevelop' },\n  { name: 'triptych', description: 'Contributions to GDevelop' },\n  {\n    name: 'Wend1go',\n    description: 'Contributions to GDevelop, Tutorials, Examples',\n  },\n  { name: 'mattiascibien', description: 'Contributions to GDevelop' },\n  { name: 'araujo921', description: 'Contributions to GDevelop' },\n  { name: 'ronnystandtke', description: 'Contributions to GDevelop' },\n  {\n    name: 'Thomas Flecy',\n    description: 'Contributions to GDevelop (original sound object extension)',\n  },\n  {\n    name: 'Arthur Pacaud (arthuro555)',\n    description:\n      'Numerous code contributions to GDevelop and community moderation',\n    link: 'https://forum.gdevelop-app.com/u/arthuro555/summary',\n  },\n  {\n    name: 'The Gem Dev',\n    description: 'Code contributions to GDevelop and tutorials on Youtube',\n    link: 'https://www.youtube.com/channel/UCsZ4Ue8c94YLJDbGRafCI5Q',\n  },\n  {\n    name: 'D8H',\n    description: 'Numerous code contributions to GDevelop',\n    link: 'https://github.com/D8H',\n  },\n  {\n    name: 'Harsimran Singh Virk',\n    description: 'Numerous code contributions to GDevelop',\n    link: 'https://github.com/HarsimranVirk',\n  },\n  {\n    name: 'Nilay Majorwar',\n    description: 'Numerous code contributions to GDevelop',\n    link: 'https://github.com/nilaymaj',\n  },\n\n  // Community members:\n  {\n    name: 'ddabrahim',\n    description: 'Examples for GDevelop',\n    link: 'https://gametemplates.itch.io/',\n  },\n  {\n    name: 'Gametemplates',\n    description: 'Examples bundled with GDevelop',\n    link: 'https://gametemplates.itch.io/',\n  },\n  { name: 'Mats', description: 'Tutorials, Examples' },\n  { name: 'erdo', description: 'Tutorials, Examples' },\n  { name: 'Jubileuksen3', description: 'Tutorials, Examples' },\n  { name: 'LucaTexas', description: 'Tutorials, Examples' },\n  { name: 'Kink', description: 'Forum moderator, tutorials, Examples' },\n  { name: 'RicoTrooper', description: 'Tutorials' },\n  { name: 'kalel', description: 'Tutorials' },\n  { name: 'mtarzaim', description: 'Tutorials' },\n  { name: 'Darkhog', description: 'Examples' },\n  { name: 'Ricardo Graca', description: 'Tutorials, Examples' },\n  { name: 'Diego Schiavon', description: 'Indiegogo Ubuntu contributor' },\n  { name: 'conceptgame', description: 'Indiegogo super contributor' },\n  {\n    name: 'Jose David Cuartas Correa',\n    description:\n      'Author of Digitopolis (a book on how to make games with GDevelop 4)',\n  },\n\n  {\n    name: 'François Dumortier',\n    description: 'GDevelop logo design',\n    link: 'http://www.fdumortier.com',\n  },\n  {\n    name: 'Constantine Shvetsov',\n    description: 'Design of all the awesome icons',\n  },\n  {\n    name: 'MillionthVector',\n    description: 'Assets of various examples',\n  },\n  {\n    name: 'Tristan Rhodes (Victris Games)',\n    description: 'High quality extensions for GDevelop',\n    link: 'https://www.youtube.com/channel/UClbq1M-D83t_bYhfa1mfyEQ',\n  },\n  {\n    name: 'Entropy',\n    description: 'High quality extensions and art packs for GDevelop',\n    link: 'https://github.com/Entr0py404',\n  },\n  {\n    name: 'FlokiTV',\n    description: 'High quality extensions for GDevelop',\n    link: 'https://github.com/FlokiTV',\n  },\n  {\n    name: 'Silver-Streak',\n    description:\n      'Examples, bug reports, testing of new features, providing community support to users, community moderation',\n    link: 'https://github.com/Silver-Streak',\n  },\n  {\n    name: 'Jurfix',\n    description: 'Discord moderation',\n    link: 'https://github.com/Jurfix',\n  },\n  {\n    name: 'Wishforge Games',\n    description: 'Making high quality tutorials',\n    link: 'https://www.wishforge.games/',\n  },\n  {\n    name: 'Sleeper Games',\n    description: 'Making the game feel starter',\n    link: 'https://twitter.com/Sleeper_Games',\n  },\n  {\n    name: 'VegeTato',\n    description: 'Extensions for GDevelop',\n  },\n  {\n    name: 'Leo Red',\n    description: 'Reviewing examples submissions',\n    link: 'https://github.com/Midhil457',\n  },\n  {\n    name: 'add_',\n    description: 'Extensions for GDevelop',\n    link: 'https://github.com/add00',\n  },\n  {\n    name: 'HelperWesley',\n    description: 'Examples and youtube content that is relevant to GDevelop',\n    link: 'https://www.youtube.com/channel/UC8RsU74-hU1pfNKHNMfiFfw',\n  },\n  {\n    name: 'UlisesFreitas',\n    description:\n      'Numerous examples and making external services that integrate with GDevelop games',\n    link: 'https://ulisesfreitas.itch.io/',\n  },\n  {\n    name: 'IttaloXD',\n    description: 'The GDevelop embassador in Brazil',\n    link: 'https://twitter.com/ittaloxd',\n  },\n  {\n    name: 'PANDAKO',\n    description: 'Translations in Japanese, extensions and blog',\n    link: 'https://gdevelop-jp.blogspot.com',\n  },\n];\n\nexport default class AboutDialog extends PureComponent<Props, State> {\n  state = {\n    currentTab: 'about',\n  };\n\n  _openContributePage = () => {\n    Window.openExternalURL('https://gdevelop-app.com/contribute/');\n  };\n\n  _openLink = (link: string) => {\n    if (!link) return;\n\n    Window.openExternalURL(link);\n  };\n\n  _changeTab = (currentTab: string) => {\n    this.setState({ currentTab });\n  };\n\n  render() {\n    const { open, onClose, updateStatus } = this.props;\n    const { currentTab } = this.state;\n    if (!open) return null;\n\n    const updateStatusString = getUpdateStatusLabel(updateStatus.status);\n    const updateButtonLabel = getUpdateButtonLabel(updateStatus.status);\n\n    return (\n      <Dialog\n        actions={[\n          <FlatButton\n            key=\"website\"\n            label={<Trans>GDevelop Website</Trans>}\n            primary={false}\n            onClick={() => Window.openExternalURL('https://gdevelop.io')}\n          />,\n          <FlatButton\n            key=\"close\"\n            label={<Trans>Close</Trans>}\n            primary={false}\n            onClick={onClose}\n          />,\n        ]}\n        onRequestClose={onClose}\n        cannotBeDismissed={false}\n        open={open}\n        maxWidth=\"sm\"\n        noMargin\n      >\n        <PreferencesContext.Consumer>\n          {({ values, checkUpdates }) => (\n            <Column noMargin>\n              <img\n                src=\"res/GD-logo.png\"\n                alt=\"GDevelop logo\"\n                style={styles.logo}\n              />\n              <Tabs value={currentTab} onChange={this._changeTab}>\n                <Tab label={<Trans>About GDevelop</Trans>} value=\"about\" />\n                <Tab label={<Trans>What's new?</Trans>} value=\"changelog\" />\n                <Tab label={<Trans>Contributors</Trans>} value=\"contributors\" />\n              </Tabs>\n              {currentTab === 'about' && (\n                <React.Fragment>\n                  <Column>\n                    <Line>\n                      <Text>\n                        <Trans>\n                          GDevelop {getIDEVersion()} based on GDevelop.js{' '}\n                          {getGDCoreVersion()}\n                        </Trans>\n                      </Text>\n                    </Line>\n                    <Line>\n                      <Text>{updateStatusString}</Text>\n                    </Line>\n                    <Line justifyContent=\"center\">\n                      {!!updateStatusString && (\n                        <FlatButton\n                          label={updateButtonLabel}\n                          onClick={() =>\n                            checkUpdates(canDownloadUpdate(updateStatus.status))\n                          }\n                        />\n                      )}\n                    </Line>\n                  </Column>\n                </React.Fragment>\n              )}\n              {currentTab === 'changelog' && (\n                <Column>\n                  <Changelog />\n                </Column>\n              )}\n              {currentTab === 'contributors' && (\n                <React.Fragment>\n                  <Column>\n                    <Text>\n                      <Trans>\n                        GDevelop was created by Florian \"4ian\" Rival.\n                      </Trans>\n                    </Text>\n                    <Text>\n                      <Trans>Contributors, in no particular order:</Trans>\n                    </Text>\n                  </Column>\n                  <List>\n                    {contributors.map(contributor => (\n                      <ListItem\n                        key={contributor.name}\n                        primaryText={contributor.name}\n                        secondaryText={contributor.description}\n                        secondaryTextLines={\n                          contributor.description.length < 30 ? 1 : 2\n                        }\n                        displayLinkButton={contributor.link ? true : false}\n                        onOpenLink={() =>\n                          this._openLink(contributor.link || '')\n                        }\n                      />\n                    ))}\n                  </List>\n                  <Column expand>\n                    <Text>\n                      <Trans>\n                        Thanks to all users of GDevelop! There must be missing\n                        tons of people, please send your name if you've\n                        contributed and you're not listed.\n                      </Trans>\n                    </Text>\n                    <Line alignItems=\"center\" justifyContent=\"center\">\n                      <FlatButton\n                        label={<Trans>Contribute to GDevelop</Trans>}\n                        onClick={this._openContributePage}\n                      />\n                    </Line>\n                  </Column>\n                </React.Fragment>\n              )}\n            </Column>\n          )}\n        </PreferencesContext.Consumer>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport { Trans } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport { TreeTableRow, TreeTableCell } from '../UI/TreeTable';\nimport DragHandle from '../UI/DragHandle';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport SemiControlledAutoComplete from '../UI/SemiControlledAutoComplete';\nimport Checkbox from '../UI/Checkbox';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport BuildIcon from '@material-ui/icons/Build';\nimport SubdirectoryArrowRight from '@material-ui/icons/SubdirectoryArrowRight';\nimport IconButton from '../UI/IconButton';\nimport Replay from '@material-ui/icons/Replay';\nimport styles from './styles';\nimport BooleanField from '../UI/BooleanField';\nimport { type VariableOrigin } from './VariablesList.flow';\nimport Text from '../UI/Text';\nimport ElementWithMenu from '../UI/Menu/ElementWithMenu';\nimport BackgroundText from '../UI/BackgroundText';\nconst gd: libGDevelop = global.gd;\n\n//TODO: Refactor into TreeTable?\nconst Indent = React.memo(({ width }) => (\n  <div style={{ ...styles.indent, width }}>\n    <SubdirectoryArrowRight htmlColor={styles.indentIconColor} />\n  </div>\n));\n\ntype Props = {|\n  name: string,\n  variable: gdVariable,\n  depth: number,\n  errorText?: ?string,\n  commitVariableValueOnBlur: boolean,\n  onChangeType: (type: string) => void,\n  onRemove: () => void,\n  onAddChild: () => void,\n  onChangeName: string => void,\n  onChangeValue: string => void,\n  onResetToDefaultValue: () => void,\n  children?: React.Node,\n  showHandle: boolean,\n  showSelectionCheckbox: boolean,\n  isSelected: boolean,\n  onSelect: boolean => void,\n  origin: VariableOrigin,\n  arrayElement: boolean,\n  undefinedVariableNames: Array<string>,\n|};\n\nconst VariableRow = ({\n  name,\n  variable,\n  depth,\n  errorText,\n  onChangeType,\n  commitVariableValueOnBlur,\n  onRemove,\n  onAddChild,\n  onChangeName,\n  onChangeValue,\n  onResetToDefaultValue,\n  children,\n  showHandle,\n  showSelectionCheckbox,\n  isSelected,\n  onSelect,\n  origin,\n  arrayElement,\n  undefinedVariableNames,\n}: Props) => {\n  const type = variable.getType();\n  const isCollection = !gd.Variable.isPrimitive(type);\n\n  const key = '' + depth + name;\n  const limitEditing = origin === 'parent' || origin === 'inherited';\n\n  const columns = [\n    <TreeTableCell key=\"name\" expand>\n      {depth > 0 && (\n        <Indent width={(depth + 1) * styles.tableChildIndentation} />\n      )}\n      {depth === 0 && showHandle && <DragHandle />}\n      {showSelectionCheckbox && !limitEditing && (\n        <Checkbox\n          checked={isSelected}\n          onCheck={(e, checked) => onSelect(checked)}\n        />\n      )}\n      {arrayElement ? (\n        <Text noMargin>{name}</Text>\n      ) : (\n        <SemiControlledAutoComplete\n          margin=\"none\"\n          style={{\n            fontStyle: origin !== 'inherited' ? 'normal' : 'italic',\n          }}\n          fullWidth\n          errorText={errorText}\n          disabled={origin === 'parent'}\n          value={name}\n          onChange={onChangeName}\n          dataSource={\n            undefinedVariableNames\n              ? undefinedVariableNames.map(name => ({\n                  text: name,\n                  value: name,\n                }))\n              : []\n          }\n          openOnFocus={true}\n        />\n      )}\n    </TreeTableCell>,\n  ];\n  if (isCollection) {\n    columns.push(\n      <TreeTableCell\n        expand\n        key=\"value\"\n        style={limitEditing ? styles.fadedButton : undefined}\n      >\n        <BackgroundText>\n          {type === gd.Variable.Structure ? (\n            <Trans>Structure</Trans>\n          ) : (\n            <Trans>Array</Trans>\n          )}\n        </BackgroundText>\n      </TreeTableCell>\n    );\n  } else {\n    if (type !== gd.Variable.Boolean)\n      columns.push(\n        <TreeTableCell key=\"value\" expand>\n          <SemiControlledTextField\n            margin=\"none\"\n            type={type === gd.Variable.String ? 'text' : 'number'}\n            commitOnBlur={commitVariableValueOnBlur}\n            fullWidth\n            name={key + 'value'}\n            value={\n              type === gd.Variable.String\n                ? variable.getString()\n                : '' + variable.getValue()\n            }\n            onChange={newValue => {\n              if (\n                type === gd.Variable.String\n                  ? variable.getString() !== newValue\n                  : variable.getValue() !== newValue\n              ) {\n                // Note that onChangeValue pass all the values as strings.\n                // It's the parent responsibility to cast them back according to the variable type.\n                onChangeValue(newValue);\n              }\n            }}\n            disabled={origin === 'parent' && depth !== 0}\n            multiline={type === gd.Variable.String}\n            inputStyle={\n              type === gd.Variable.String\n                ? styles.noPaddingMultilineTextField\n                : undefined\n            }\n          />\n        </TreeTableCell>\n      );\n    else\n      columns.push(\n        <TreeTableCell key=\"value\" expand>\n          <BooleanField\n            value={variable.getBool()}\n            onChange={newValue => {\n              // Note that onChangeValue pass all the values as strings.\n              // It's the parent responsibility to cast them back according to the variable type.\n              onChangeValue(newValue ? 'true' : 'false');\n            }}\n            disabled={origin === 'parent' && depth !== 0}\n          />\n        </TreeTableCell>\n      );\n  }\n  columns.push(\n    <TreeTableCell key=\"tools\" style={styles.toolColumn}>\n      {origin === 'inherited' && depth === 0 ? (\n        <IconButton\n          size=\"small\"\n          onClick={onResetToDefaultValue}\n          style={isCollection ? undefined : styles.fadedButton}\n          tooltip={t`Reset`}\n        >\n          <Replay />\n        </IconButton>\n      ) : (\n        origin !== 'parent' && (\n          <>\n            {isCollection ? (\n              <IconButton\n                size=\"small\"\n                tooltip={t`Add child variable`}\n                onClick={() => onAddChild()}\n              >\n                <AddCircle />\n              </IconButton>\n            ) : (\n              <IconButton\n                size=\"small\"\n                style={styles.fadedButton}\n                tooltip={t`Convert the variable to a collection before adding children`}\n              >\n                <AddCircle />\n              </IconButton>\n            )}\n            <ElementWithMenu\n              element={\n                <IconButton size=\"small\" tooltip={t`Change variable type`}>\n                  <BuildIcon />\n                </IconButton>\n              }\n              buildMenuTemplate={(i18n: I18nType) => [\n                {\n                  label: 'Primitive types',\n                  submenu: [\n                    {\n                      visible: type !== gd.Variable.String,\n                      label: i18n._(t`Convert to string`),\n                      click: () => onChangeType('string'),\n                    },\n                    {\n                      visible: type !== gd.Variable.Number,\n                      label: i18n._(t`Convert to number`),\n                      click: () => onChangeType('number'),\n                    },\n                    {\n                      visible: type !== gd.Variable.Boolean,\n                      label: i18n._(t`Convert to boolean`),\n                      click: () => onChangeType('boolean'),\n                    },\n                  ],\n                },\n\n                {\n                  label: 'Collection types',\n                  submenu: [\n                    {\n                      visible: type !== gd.Variable.Structure,\n                      label: i18n._(t`Convert to structure`),\n                      click: () => onChangeType('structure'),\n                    },\n                    {\n                      visible: type !== gd.Variable.Array,\n                      label: i18n._(t`Convert to array`),\n                      click: () => onChangeType('array'),\n                    },\n                  ],\n                },\n              ]}\n            />\n          </>\n        )\n      )}\n    </TreeTableCell>\n  );\n\n  return (\n    <>\n      <TreeTableRow>{columns}</TreeTableRow>\n      {children}\n    </>\n  );\n};\n\nexport default VariableRow;\n","export default {\n  toolColumnHeader: {\n    textAlign: 'left',\n    paddingRight: 4,\n  },\n  toolColumn: {\n    minWidth: 48,\n    flex: 0,\n    justifyContent: 'flex-end',\n  },\n  tableChildIndentation: 18,\n  indent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    // The indentation is fixed and should never be smaller than the width that is set:\n    flexShrink: 0,\n  },\n  indentIconColor: '#DDD', //TODO: Use theme color instead\n  fadedButton: {\n    opacity: 0.7,\n  },\n  noPaddingMultilineTextField: {\n    // By default, Material-UI adds some padding on top and bottom of a multiline text field.\n    // Avoid this to prevent extra spaces that would make single line strings\n    // (for variable values) not aligned with the variable name\n    padding: 0,\n  },\n};\n","// @flow\nimport React from 'react';\n\nimport { Trans } from '@lingui/macro';\nimport RaisedButton from './RaisedButton';\nimport { Line, Column } from './Grid';\n\nconst buttonStyle = {\n  margin: 5,\n};\n\ntype Props = {|\n  value: boolean,\n  onChange: (newValue: boolean) => void,\n  disabled: boolean,\n|};\n\nconst BooleanField = ({ value, onChange, disabled }: Props) => {\n  return (\n    <Line>\n      <Column noMargin>\n        <RaisedButton\n          style={buttonStyle}\n          label={<Trans>True</Trans>}\n          primary={value && !disabled}\n          onClick={() => {\n            if (!value && !disabled) onChange(true);\n          }}\n        />\n      </Column>\n      <Column noMargin>\n        <RaisedButton\n          style={buttonStyle}\n          label={<Trans>False</Trans>}\n          primary={!value && !disabled}\n          onClick={() => {\n            if (value && !disabled) onChange(false);\n          }}\n        />\n      </Column>\n    </Line>\n  );\n};\n\nexport default BooleanField;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React from 'react';\nimport Add from '@material-ui/icons/Add';\nimport IconButton from '../UI/IconButton';\nimport Copy from '../UI/CustomSvgIcons/Copy';\nimport Paste from '../UI/CustomSvgIcons/Paste';\nimport Delete from '@material-ui/icons/Delete';\nimport { Line, Column } from '../UI/Grid';\nimport RaisedButton from '../UI/RaisedButton';\n\ntype Props = {|\n  onAdd: ?() => void,\n  onCopy: () => void,\n  hasSelection: boolean,\n  onPaste: () => void,\n  hasClipboard: boolean,\n  onDeleteSelection: () => void,\n|};\n\nconst EditVariableRow = ({\n  onAdd,\n  onCopy,\n  hasSelection,\n  onPaste,\n  hasClipboard,\n  onDeleteSelection,\n}: Props) => (\n  <Line justifyContent=\"space-between\" alignItems=\"center\">\n    <Column>\n      <Line noMargin>\n        <IconButton size=\"small\" onClick={onCopy} disabled={!hasSelection}>\n          <Copy />\n        </IconButton>\n        <IconButton size=\"small\" onClick={onPaste} disabled={!hasClipboard}>\n          <Paste />\n        </IconButton>\n        <IconButton\n          size=\"small\"\n          onClick={onDeleteSelection}\n          disabled={!hasSelection}\n        >\n          <Delete />\n        </IconButton>\n      </Line>\n    </Column>\n\n    <Column>\n      {onAdd ? (\n        <RaisedButton\n          primary\n          label={<Trans>Add</Trans>}\n          onClick={onAdd}\n          icon={<Add />}\n        />\n      ) : null}\n    </Column>\n  </Line>\n);\n\nexport default EditVariableRow;\n","// @flow\n/**\n * Export functions to manipulate a selection of objects.\n */\n\nimport values from 'lodash/values';\n\ntype ObjectType = { ptr: number };\n\ntype SelectionState<T> = {\n  [number]: ?T,\n};\n\nexport const getInitialSelection = () => ({});\n\nexport const clearSelection = () => getInitialSelection();\n\nexport const getSelection = <T: ObjectType>(\n  selection: SelectionState<T>\n): Array<T> => values(selection).filter(value => !!value);\n\nexport const addToSelection = <T: ObjectType>(\n  selection: SelectionState<T>,\n  object: T,\n  select: boolean = true\n): SelectionState<T> => {\n  return {\n    ...selection,\n    [object.ptr]: select ? object : null,\n  };\n};\n\nexport const isSelected = <T: ObjectType>(\n  selection: SelectionState<T>,\n  object: T\n): boolean => !!selection[object.ptr];\n\nexport const hasSelection = <T: ObjectType>(\n  selection: SelectionState<T>\n): boolean => {\n  return !!values(selection).filter(value => !!value).length;\n};\n","export const CLIPBOARD_KIND = 'Variables';\n","// @flow\n\n/**\n * Check if the Emscripten object is actually a null pointer.\n *\n * You should normally not use this - instead prefer the null/empty object pattern,\n * with a function `IsBadXxx` to check if the object you're manipulating represents\n * an null/empty object.\n */\nexport const isNullPtr = (\n  gd: libGDevelop,\n  object: gdEmscriptenObject\n): boolean => gd.getPointer(object) === 0;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport Dialog from '../UI/Dialog';\nimport { Line } from '../UI/Grid';\nimport ResourcesLoader from '../ResourcesLoader';\nimport ResourceSelectorWithThumbnail from '../ResourcesList/ResourceSelectorWithThumbnail';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport { resizeImage, isResizeSupported } from './ImageResizer';\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport Text from '../UI/Text';\nimport { ColumnStackLayout } from '../UI/Layout';\nconst path = optionalRequire('path');\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  open: boolean,\n  onClose: Function,\n  onApply: Function,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n|};\n\ntype State = {|\n  thumbnailResourceName: string,\n  desktopIconResourceNames: Array<string>,\n  androidIconResourceNames: Array<string>,\n  iosIconResourceNames: Array<string>,\n|};\n\nconst desktopSizes = [512];\nconst androidSizes = [192, 144, 96, 72, 48, 36];\nconst iosSizes = [\n  1024,\n  180,\n  167,\n  152,\n  144,\n  120,\n  114,\n  100,\n  87,\n  80,\n  76,\n  72,\n  60,\n  58,\n  57,\n  50,\n  40,\n  29,\n  20,\n];\n\nexport default class PlatformSpecificAssetsDialog extends React.Component<\n  Props,\n  State\n> {\n  constructor(props: Props) {\n    super(props);\n    this.state = this._loadFrom(props.project);\n  }\n\n  _loadFrom(project: gdProject): State {\n    return {\n      thumbnailResourceName: project\n        .getPlatformSpecificAssets()\n        .get('liluo', `thumbnail`),\n      desktopIconResourceNames: desktopSizes.map(size =>\n        project.getPlatformSpecificAssets().get('desktop', `icon-${size}`)\n      ),\n      androidIconResourceNames: androidSizes.map(size =>\n        project.getPlatformSpecificAssets().get('android', `icon-${size}`)\n      ),\n      iosIconResourceNames: iosSizes.map(size =>\n        project.getPlatformSpecificAssets().get('ios', `icon-${size}`)\n      ),\n    };\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      (!this.props.open && newProps.open) ||\n      (newProps.open && this.props.project !== newProps.project)\n    ) {\n      this.setState(this._loadFrom(newProps.project));\n    }\n  }\n\n  _generateFromFile = () => {\n    const { project, resourceSources, onChooseResource } = this.props;\n\n    const sources = resourceSources.filter(source => source.kind === 'image');\n    if (!sources.length) return;\n\n    onChooseResource({\n      // Should be updated once new sources are introduced in the desktop app.\n      // Search for \"sources[0]\" in the codebase for other places like this.\n      initialSourceName: sources[0].name,\n      multiSelection: false,\n      resourceKind: 'image',\n    }).then(resources => {\n      if (!resources.length || !path) {\n        return;\n      }\n\n      const resourcesManager = project.getResourcesManager();\n      const projectPath = path.dirname(project.getProjectFile());\n      const fullPath = path.resolve(projectPath, resources[0].getFile());\n\n      // Important, we are responsible for deleting the resources that were given to us.\n      // Otherwise we have a memory leak.\n      resources.forEach(resource => resource.delete());\n\n      Promise.all([\n        ...desktopSizes.map(size =>\n          resizeImage(\n            fullPath,\n            path.join(projectPath, `desktop-icon-${size}.png`),\n            {\n              width: size,\n              height: size,\n            }\n          )\n        ),\n        ...androidSizes.map(size =>\n          resizeImage(\n            fullPath,\n            path.join(projectPath, `android-icon-${size}.png`),\n            {\n              width: size,\n              height: size,\n            }\n          )\n        ),\n        ...iosSizes.map(size =>\n          resizeImage(\n            fullPath,\n            path.join(projectPath, `ios-icon-${size}.png`),\n            {\n              width: size,\n              height: size,\n            }\n          )\n        ),\n      ]).then(results => {\n        if (results.indexOf(false) !== -1) {\n          showErrorBox({\n            message: 'Some icons could not be generated!',\n            rawError: undefined,\n            errorId: 'icon-generation-error',\n            doNotReport: true,\n          });\n          return;\n        }\n\n        // Add resources to the game\n        const allResourcesNames = [\n          ...desktopSizes.map(size => `desktop-icon-${size}.png`),\n          ...androidSizes.map(size => `android-icon-${size}.png`),\n          ...iosSizes.map(size => `ios-icon-${size}.png`),\n        ];\n        allResourcesNames.forEach(resourceName => {\n          if (!resourcesManager.hasResource(resourceName)) {\n            const imageResource = new gd.ImageResource();\n            imageResource.setFile(resourceName);\n            imageResource.setName(resourceName);\n\n            resourcesManager.addResource(imageResource);\n\n            // Important, we are responsible for deleting the resources that we created\n            // Otherwise we have a memory leak, as calling addResource is making a copy of the resource.\n            imageResource.delete();\n          } else {\n            resourcesManager.getResource(resourceName).setFile(resourceName);\n          }\n        });\n\n        // Make sure the resources are (re)loaded.\n        ResourcesLoader.burstUrlsCacheForResources(project, allResourcesNames);\n        setTimeout(() => {\n          this.setState({\n            desktopIconResourceNames: desktopSizes.map(\n              size => `desktop-icon-${size}.png`\n            ),\n            androidIconResourceNames: androidSizes.map(\n              size => `android-icon-${size}.png`\n            ),\n            iosIconResourceNames: iosSizes.map(size => `ios-icon-${size}.png`),\n          });\n        }, 200 /* Let a bit of time so that image files can be found */);\n      });\n    });\n  };\n\n  onApply = () => {\n    const { project } = this.props;\n    const {\n      thumbnailResourceName,\n      desktopIconResourceNames,\n      androidIconResourceNames,\n      iosIconResourceNames,\n    } = this.state;\n\n    project\n      .getPlatformSpecificAssets()\n      .set('liluo', `thumbnail`, thumbnailResourceName);\n\n    desktopSizes.forEach((size, index) => {\n      project\n        .getPlatformSpecificAssets()\n        .set('desktop', `icon-${size}`, desktopIconResourceNames[index]);\n    });\n    androidSizes.forEach((size, index) => {\n      project\n        .getPlatformSpecificAssets()\n        .set('android', `icon-${size}`, androidIconResourceNames[index]);\n    });\n    iosSizes.forEach((size, index) => {\n      project\n        .getPlatformSpecificAssets()\n        .set('ios', `icon-${size}`, iosIconResourceNames[index]);\n    });\n\n    this.props.onApply();\n  };\n\n  render() {\n    const actions = [\n      <FlatButton\n        key=\"cancel\"\n        label={<Trans>Cancel</Trans>}\n        primary={false}\n        onClick={this.props.onClose}\n      />,\n      <FlatButton\n        key=\"apply\"\n        label={<Trans>Apply</Trans>}\n        primary={true}\n        keyboardFocused={true}\n        onClick={this.onApply}\n      />,\n    ];\n    const {\n      project,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n    } = this.props;\n    const {\n      thumbnailResourceName,\n      desktopIconResourceNames,\n      androidIconResourceNames,\n      iosIconResourceNames,\n    } = this.state;\n\n    return (\n      <Dialog\n        onApply={this.onApply}\n        title={<Trans>Project icons</Trans>}\n        actions={actions}\n        open={this.props.open}\n        cannotBeDismissed={true}\n        onRequestClose={this.props.onClose}\n      >\n        <ColumnStackLayout noMargin>\n          <Text>\n            <Trans>Liluo.io thumbnail:</Trans>\n          </Text>\n          <ResourceSelectorWithThumbnail\n            floatingLabelText={`Liluo.io thumbnail (1920x1080 px)`}\n            project={project}\n            resourceSources={resourceSources}\n            onChooseResource={onChooseResource}\n            resourceExternalEditors={resourceExternalEditors}\n            resourceKind=\"image\"\n            resourceName={thumbnailResourceName}\n            onChange={resourceName => {\n              this.setState({\n                thumbnailResourceName: resourceName,\n              });\n            }}\n          />\n          <Line justifyContent=\"center\">\n            {isResizeSupported() ? (\n              <RaisedButton\n                primary\n                label={<Trans>Generate icons from a file</Trans>}\n                onClick={this._generateFromFile}\n              />\n            ) : (\n              <Text>\n                <Trans>\n                  Download GDevelop desktop version to generate the Android and\n                  iOS icons of your game.\n                </Trans>\n              </Text>\n            )}\n          </Line>\n          <Text>\n            <Trans>Desktop (Windows, macOS and Linux) icon:</Trans>\n          </Text>\n          {desktopSizes.map((size, index) => (\n            <ResourceSelectorWithThumbnail\n              key={size}\n              floatingLabelText={`Desktop icon (${size}x${size} px)`}\n              project={project}\n              resourceSources={resourceSources}\n              onChooseResource={onChooseResource}\n              resourceExternalEditors={resourceExternalEditors}\n              resourceKind=\"image\"\n              resourceName={desktopIconResourceNames[index]}\n              onChange={resourceName => {\n                const newIcons = [...desktopIconResourceNames];\n                newIcons[index] = resourceName;\n                this.setState({\n                  desktopIconResourceNames: newIcons,\n                });\n              }}\n            />\n          ))}\n          <Text>\n            <Trans>Android icons:</Trans>\n          </Text>\n          {androidSizes.map((size, index) => (\n            <ResourceSelectorWithThumbnail\n              key={size}\n              floatingLabelText={`Android icon (${size}x${size} px)`}\n              project={project}\n              resourceSources={resourceSources}\n              onChooseResource={onChooseResource}\n              resourceExternalEditors={resourceExternalEditors}\n              resourceKind=\"image\"\n              resourceName={androidIconResourceNames[index]}\n              onChange={resourceName => {\n                const newIcons = [...androidIconResourceNames];\n                newIcons[index] = resourceName;\n                this.setState({\n                  androidIconResourceNames: newIcons,\n                });\n              }}\n            />\n          ))}\n          <Text>\n            <Trans>iOS (iPhone and iPad) icons:</Trans>\n          </Text>\n          {iosSizes.map((size, index) => (\n            <ResourceSelectorWithThumbnail\n              key={size}\n              floatingLabelText={`iOS icon (${size}x${size} px)`}\n              project={project}\n              resourceSources={resourceSources}\n              onChooseResource={onChooseResource}\n              resourceKind=\"image\"\n              resourceName={iosIconResourceNames[index]}\n              resourceExternalEditors={resourceExternalEditors}\n              onChange={resourceName => {\n                const newIcons = [...iosIconResourceNames];\n                newIcons[index] = resourceName;\n                this.setState({\n                  iosIconResourceNames: newIcons,\n                });\n              }}\n            />\n          ))}\n        </ColumnStackLayout>\n      </Dialog>\n    );\n  }\n}\n","//@flow\nimport optionalLazyRequire from '../Utils/OptionalLazyRequire';\nconst lazyRequireJimp = optionalLazyRequire('jimp');\n\nexport const isResizeSupported = () => {\n  const Jimp = lazyRequireJimp();\n  return !!Jimp;\n};\n\nexport const resizeImage = (\n  inputFile: string,\n  outputFile: string,\n  { width, height }: { width: number, height: number }\n): Promise<any> => {\n  const Jimp = lazyRequireJimp();\n  if (!Jimp) return Promise.resolve(false);\n\n  return Jimp.read(inputFile)\n    .then(function(jimpImage) {\n      return jimpImage.contain(width, height).write(outputFile);\n    })\n    .then(() => {\n      return true;\n    })\n    .catch(function(err) {\n      console.error(err);\n      return false;\n    });\n};\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Dialog, DialogContent } from '@material-ui/core';\n\nconst loaderSize = 50;\n\nconst styles = {\n  dialogContent: {\n    padding: 10,\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'row',\n  },\n};\n\nconst transitionDuration = { enter: 0, exit: 150 };\n\nexport default props => {\n  return (\n    <Dialog open={props.show} transitionDuration={transitionDuration}>\n      <DialogContent style={styles.dialogContent}>\n        <CircularProgress\n          style={styles.circularProgress}\n          size={loaderSize}\n          disableShrink\n        />\n      </DialogContent>\n    </Dialog>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Close from '@material-ui/icons/Close';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { tooltipEnterDelay } from './Tooltip';\n\nconst appBarHeight = 32;\n\ntype Props = {|\n  title: React.Node,\n  displayLeftCloseButton?: boolean,\n  displayRightCloseButton?: boolean,\n  onClose: () => void,\n|};\n\nconst styles = {\n  appBar: {\n    height: appBarHeight,\n    minHeight: appBarHeight,\n  },\n  toolbar: {\n    height: appBarHeight,\n    minHeight: appBarHeight,\n    paddingLeft: 15,\n    paddingRight: 15,\n  },\n  title: {\n    fontSize: '15px',\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n};\n\nexport default (props: Props) => {\n  return (\n    <AppBar\n      position=\"static\"\n      style={styles.appBar}\n      className=\"safe-area-aware-top-margin\"\n      color=\"primary\"\n    >\n      <Toolbar style={styles.toolbar}>\n        {props.displayLeftCloseButton && (\n          <IconButton onClick={props.onClose} edge=\"start\" color=\"inherit\">\n            <Close />\n          </IconButton>\n        )}\n        <Tooltip\n          title={props.title}\n          placement=\"bottom\"\n          enterDelay={tooltipEnterDelay}\n        >\n          <Typography variant=\"h6\" style={styles.title}>\n            {props.title}\n          </Typography>\n        </Tooltip>\n\n        {props.displayRightCloseButton && (\n          <IconButton onClick={props.onClose} edge=\"end\" color=\"inherit\">\n            <Close />\n          </IconButton>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport Window from '../Utils/Window';\nconst electron = optionalRequire('electron');\n\ntype Props = {|\n  shouldPrompt: boolean,\n  i18n: I18nType,\n  language: string, // Should be i18n.language.\n  hasUnsavedChanges: boolean,\n|};\n\nexport default React.memo<Props>(function CloseConfirmDialog({\n  shouldPrompt,\n  i18n,\n  language,\n  hasUnsavedChanges,\n}: Props) {\n  const delayElectronClose = React.useRef(true);\n\n  React.useEffect(\n    () => {\n      if (Window.isDev()) return; // Don't prevent live-reload in development\n\n      const quitMessage = i18n._(t`Are you sure you want to quit GDevelop?`);\n      const unsavedChangesMessage = hasUnsavedChanges\n        ? i18n._(t`Any unsaved changes in the project will be lost.`)\n        : '';\n      const message = [quitMessage, unsavedChangesMessage]\n        .filter(Boolean)\n        .join('\\n');\n\n      if (electron) {\n        window.onbeforeunload = e => {\n          if (delayElectronClose.current && shouldPrompt) {\n            // Use setTimeout to avoiding blocking the thread with the \"confirm\" dialog,\n            // which would make Electron to close the window for some weird reason.\n            // See https://github.com/electron/electron/issues/7977\n            setTimeout(() => {\n              const answer = Window.showConfirmDialog(message);\n              if (answer) {\n                // If answer is positive, re-trigger the close\n                delayElectronClose.current = false;\n                electron.remote.getCurrentWindow().close();\n              }\n            }, 10);\n\n            // Prevents closing the window immediately. See https://github.com/electron/electron/blob/master/docs/api/browser-window.md#event-close\n            e.returnValue = true; //\"It is recommended to always set the event.returnValue explicitly, instead of only returning a value, as the former works more consistently within Electron.\"\"\n            return false; //\"In Electron, returning any value other than undefined would cancel the close\"\n          } else {\n            // Returning undefined will let the window close\n          }\n        };\n      } else if (window) {\n        if (shouldPrompt) {\n          window.onbeforeunload = () => message;\n        } else {\n          window.onbeforeunload = null;\n        }\n      }\n    },\n    [shouldPrompt, i18n, language, hasUnsavedChanges]\n  );\n\n  return null;\n});\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React, { Component, type Node } from 'react';\nimport findIndex from 'lodash/findIndex';\nimport {\n  SortableTreeWithoutDndContext,\n  getNodeAtPath,\n} from 'react-sortable-tree';\nimport { mapFor } from '../../Utils/MapFor';\nimport { getInitialSelection, isEventSelected } from '../SelectionHandler';\nimport EventsRenderingService from './EventsRenderingService';\nimport EventHeightsCache from './EventHeightsCache';\nimport classNames from 'classnames';\nimport { eventsTree, eventsTreeWithSearchResults, icon } from './ClassNames';\nimport {\n  type SelectionState,\n  type EventContext,\n  type InstructionsListContext,\n  type InstructionContext,\n  type ParameterContext,\n} from '../SelectionHandler';\nimport { type EventsScope } from '../../InstructionOrExpression/EventsScope.flow';\nimport getObjectByName from '../../Utils/GetObjectByName';\nimport ObjectsRenderingService from '../../ObjectsRendering/ObjectsRenderingService';\nimport { type ScreenType } from '../../UI/Reponsive/ScreenTypeMeasurer';\nimport { type WidthType } from '../../UI/Reponsive/ResponsiveWindowMeasurer';\n\n// Import default style of react-sortable-tree and the override made for EventsSheet.\nimport 'react-sortable-tree/style.css';\nimport './style.css';\nimport ThemeConsumer from '../../UI/Theme/ThemeConsumer';\nimport BottomButtons from './BottomButtons';\nimport { EmptyPlaceholder } from '../../UI/EmptyPlaceholder';\nimport { CorsAwareImage } from '../../UI/CorsAwareImage';\nconst gd: libGDevelop = global.gd;\n\nconst getThumbnail = ObjectsRenderingService.getThumbnail.bind(\n  ObjectsRenderingService\n);\n\nconst defaultIndentWidth = 22;\nconst smallIndentWidth = 11;\n\nconst styles = {\n  container: { flex: 1 },\n  defaultEventContainer: {\n    marginRight: 10,\n  },\n  smallEventContainer: {\n    marginRight: 0,\n  },\n};\n\nconst getIndentWidth = (windowWidth: WidthType) =>\n  windowWidth === 'small' ? smallIndentWidth : defaultIndentWidth;\nconst getEventContainerStyle = (windowWidth: WidthType) =>\n  windowWidth === 'small'\n    ? styles.smallEventContainer\n    : styles.defaultEventContainer;\n\ntype EventsContainerProps = {|\n  eventsHeightsCache: EventHeightsCache,\n  event: gdBaseEvent,\n  leftIndentWidth: number,\n  disabled: boolean,\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  selection: SelectionState,\n  onAddNewInstruction: InstructionsListContext => void,\n  onPasteInstructions: InstructionsListContext => void,\n  onMoveToInstruction: (destinationContext: InstructionContext) => void,\n  onMoveToInstructionsList: (\n    destinationContext: InstructionsListContext\n  ) => void,\n  onInstructionClick: InstructionContext => void,\n  onInstructionDoubleClick: InstructionContext => void,\n  onInstructionContextMenu: (x: number, y: number, InstructionContext) => void,\n  onAddInstructionContextMenu: (\n    HTMLButtonElement,\n    InstructionsListContext\n  ) => void,\n  onParameterClick: ParameterContext => void,\n\n  onEventClick: (eventContext: EventContext) => void,\n  onEventContextMenu: (x: number, y: number) => void,\n  onOpenExternalEvents: string => void,\n  onOpenLayout: string => void,\n  renderObjectThumbnail: string => Node,\n\n  screenType: ScreenType,\n  windowWidth: WidthType,\n  eventsSheetHeight: number,\n|};\n\n/**\n * The component containing an event.\n * It will report the rendered event height so that the EventsTree can\n * update accordingly.\n */\nclass EventContainer extends Component<EventsContainerProps, {||}> {\n  _container: ?any;\n  componentDidMount() {\n    const height = this._container ? this._container.offsetHeight : 0;\n    this.props.eventsHeightsCache.setEventHeight(this.props.event, height);\n  }\n\n  componentDidUpdate() {\n    const height = this._container ? this._container.offsetHeight : 0;\n    this.props.eventsHeightsCache.setEventHeight(this.props.event, height);\n  }\n\n  _onEventUpdated = () => {\n    this.forceUpdate();\n  };\n\n  _onEventContextMenu = (domEvent: any) => {\n    domEvent.preventDefault();\n    this.props.onEventContextMenu(domEvent.clientX, domEvent.clientY);\n  };\n\n  render() {\n    const { event, project, scope, disabled } = this.props;\n    const EventComponent = EventsRenderingService.getEventComponent(event);\n\n    return (\n      <div\n        ref={container => (this._container = container)}\n        onClick={this.props.onEventClick}\n        onContextMenu={this._onEventContextMenu}\n        style={getEventContainerStyle(this.props.windowWidth)}\n      >\n        {EventComponent && (\n          <EventComponent\n            project={project}\n            scope={scope}\n            event={event}\n            globalObjectsContainer={this.props.globalObjectsContainer}\n            objectsContainer={this.props.objectsContainer}\n            selected={isEventSelected(this.props.selection, event)}\n            selection={this.props.selection}\n            leftIndentWidth={this.props.leftIndentWidth}\n            onUpdate={this._onEventUpdated}\n            onAddNewInstruction={this.props.onAddNewInstruction}\n            onPasteInstructions={this.props.onPasteInstructions}\n            onMoveToInstruction={this.props.onMoveToInstruction}\n            onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n            onInstructionClick={this.props.onInstructionClick}\n            onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n            onInstructionContextMenu={this.props.onInstructionContextMenu}\n            onAddInstructionContextMenu={this.props.onAddInstructionContextMenu}\n            onParameterClick={this.props.onParameterClick}\n            onOpenExternalEvents={this.props.onOpenExternalEvents}\n            onOpenLayout={this.props.onOpenLayout}\n            disabled={\n              disabled /* Use disabled (not event.disabled) as it is true if a parent event is disabled*/\n            }\n            renderObjectThumbnail={this.props.renderObjectThumbnail}\n            screenType={this.props.screenType}\n            windowWidth={this.props.windowWidth}\n            eventsSheetHeight={this.props.eventsSheetHeight}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst getNodeKey = ({ treeIndex }) => treeIndex;\n\nconst SortableTree = ({ className, ...otherProps }) => (\n  <ThemeConsumer>\n    {muiTheme => (\n      <SortableTreeWithoutDndContext\n        className={`${eventsTree} ${\n          muiTheme.eventsSheetRootClassName\n        } ${className}`}\n        {...otherProps}\n      />\n    )}\n  </ThemeConsumer>\n);\n\nconst noop = () => {};\n\ntype EventsTreeProps = {|\n  events: gdEventsList,\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  selection: SelectionState,\n  onAddNewInstruction: InstructionsListContext => void,\n  onPasteInstructions: InstructionsListContext => void,\n  onMoveToInstruction: (destinationContext: InstructionContext) => void,\n  onMoveToInstructionsList: (\n    destinationContext: InstructionsListContext\n  ) => void,\n  onInstructionClick: InstructionContext => void,\n  onInstructionDoubleClick: InstructionContext => void,\n  onInstructionContextMenu: (x: number, y: number, InstructionContext) => void,\n  onAddInstructionContextMenu: (\n    HTMLButtonElement,\n    InstructionsListContext\n  ) => void,\n  onParameterClick: ParameterContext => void,\n\n  onEventClick: (eventContext: EventContext) => void,\n  onEventContextMenu: (\n    x: number,\n    y: number,\n    eventContext: EventContext\n  ) => void,\n  onAddNewEvent: (eventType: string, eventsList: gdEventsList) => void,\n  onOpenExternalEvents: string => void,\n  onOpenLayout: string => void,\n  showObjectThumbnails: boolean,\n\n  searchResults: ?Array<gdBaseEvent>,\n  searchFocusOffset: ?number,\n\n  onEventMoved: () => void,\n  onScroll?: () => void,\n\n  screenType: ScreenType,\n  windowWidth: WidthType,\n  eventsSheetHeight: number,\n  fontSize?: number,\n|};\n\n// A node displayed by the SortableTree. Almost always represents an\n// event, except for the buttons at the bottom of the sheet.\ntype SortableTreeNode = {\n  eventsList: gdEventsList,\n  event: ?gdBaseEvent,\n  depth: number,\n  disabled: boolean,\n  indexInList: number,\n\n  // In case of nodes without event (buttons at the bottom of the sheet),\n  // use a fixed height.\n  fixedHeight?: ?number,\n};\n\n/**\n * Display a tree of event. Builtin on react-sortable-tree so that event\n * can be drag'n'dropped and events rows are virtualized.\n */\nexport default class ThemableEventsTree extends Component<EventsTreeProps, *> {\n  static defaultProps = {\n    selection: getInitialSelection(),\n  };\n  _list: ?any;\n  eventsHeightsCache: EventHeightsCache;\n\n  constructor(props: EventsTreeProps) {\n    super(props);\n\n    this.eventsHeightsCache = new EventHeightsCache(this);\n    this.state = {\n      ...this._eventsToTreeData(props.events),\n    };\n  }\n\n  componentDidMount() {\n    this.onHeightsChanged();\n  }\n\n  /**\n   * Should be called whenever an event height has changed\n   */\n  onHeightsChanged(cb: ?() => void) {\n    this.forceUpdate(() => {\n      if (this._list && this._list.wrappedInstance.current) {\n        this._list.wrappedInstance.current.recomputeRowHeights();\n      }\n      if (cb) cb();\n    });\n  }\n\n  /**\n   * Should be called whenever events changed (new event...)\n   * from outside this component.\n   */\n  forceEventsUpdate(cb: ?() => void) {\n    this.setState(this._eventsToTreeData(this.props.events), () => {\n      if (this._list && this._list.wrappedInstance.current) {\n        this._list.wrappedInstance.current.recomputeRowHeights();\n      }\n      if (cb) cb();\n    });\n  }\n\n  scrollToEvent(event: gdBaseEvent) {\n    const row = this._getEventRow(event);\n    if (row !== -1) {\n      if (this._list && this._list.wrappedInstance.current) {\n        this._list.wrappedInstance.current.scrollToRow(row);\n      }\n    }\n  }\n\n  /**\n   * Unfold events so that the given one is visible\n   */\n  unfoldForEvent(event: gdBaseEvent) {\n    gd.EventsListUnfolder.unfoldWhenContaining(this.props.events, event);\n    this.forceEventsUpdate();\n  }\n\n  foldAll() {\n    gd.EventsListUnfolder.foldAll(this.props.events);\n    this.forceEventsUpdate();\n  }\n\n  unfoldToLevel(level: number) {\n    gd.EventsListUnfolder.unfoldToLevel(this.props.events, level);\n    this.forceEventsUpdate();\n  }\n\n  _getEventRow(searchedEvent: gdBaseEvent) {\n    // TODO: flatData could be replaced by a hashmap of events to row index\n    return findIndex(\n      this.state.flatData,\n      event => event.ptr === searchedEvent.ptr\n    );\n  }\n\n  _eventsToTreeData = (\n    eventsList: gdEventsList,\n    flatData: Array<gdBaseEvent> = [],\n    depth: number = 0,\n    parentDisabled: boolean = false\n  ) => {\n    const treeData = mapFor<SortableTreeNode>(\n      0,\n      eventsList.getEventsCount(),\n      i => {\n        const event = eventsList.getEventAt(i);\n        flatData.push(event);\n\n        const disabled = parentDisabled || event.isDisabled();\n\n        return {\n          title: this._renderEvent,\n          event,\n          eventsList,\n          indexInList: i,\n          expanded: !event.isFolded(),\n          disabled,\n          depth,\n          key: event.ptr, //TODO: useless?\n          children: this._eventsToTreeData(\n            event.getSubEvents(),\n            // flatData is a flat representation of events, one for each line.\n            // Hence it should not contain the folded events.\n            !event.isFolded() ? flatData : [],\n            depth + 1,\n            disabled\n          ).treeData,\n        };\n      }\n    );\n\n    // Add the bottom buttons if we're at the root\n    const extraNodes = [\n      depth === 0\n        ? {\n            title: () => (\n              <BottomButtons\n                onAddEvent={(eventType: string) =>\n                  this.props.onAddNewEvent(eventType, this.props.events)\n                }\n              />\n            ),\n            event: null,\n            indexInList: eventsList.getEventsCount(),\n            disabled: false,\n            depth: 0,\n            fixedHeight: 40,\n            children: [],\n          }\n        : null,\n      depth === 0 && eventsList.getEventsCount() === 0\n        ? {\n            title: () => (\n              <EmptyPlaceholder\n                title={<Trans>Add your first event</Trans>}\n                description={<Trans>Events define the rules of a game.</Trans>}\n                actionLabel={<Trans>Add an event</Trans>}\n                helpPagePath=\"/events\"\n                onAdd={() =>\n                  this.props.onAddNewEvent(\n                    'BuiltinCommonInstructions::Standard',\n                    this.props.events\n                  )\n                }\n              />\n            ),\n            event: null,\n            indexInList: eventsList.getEventsCount() + 1,\n            disabled: false,\n            depth: 0,\n            fixedHeight: 300,\n            children: [],\n          }\n        : null,\n    ].filter(Boolean);\n\n    return {\n      treeData: extraNodes.length ? treeData.concat(extraNodes) : treeData,\n      flatData,\n    };\n  };\n\n  _onMoveNode = ({\n    treeData,\n    path,\n    node,\n  }: {\n    treeData: any,\n    path: Array<any>,\n    node: SortableTreeNode,\n  }) => {\n    // Get the moved event and its list from the moved node.\n    const { event, eventsList } = node;\n    if (!event) return;\n\n    // Get the event list where the event should be moved to.\n    const targetPath = path.slice(0, -1);\n    const target = getNodeAtPath({\n      getNodeKey,\n      treeData: treeData,\n      path: targetPath,\n    });\n    const targetNode = target.node;\n    const targetEventsList =\n      targetNode && targetNode.event\n        ? targetNode.event.getSubEvents()\n        : this.props.events;\n    const targetPosition =\n      targetNode && targetNode.children ? targetNode.children.indexOf(node) : 0;\n\n    // Do the move\n    // Note that moveEventToAnotherEventsList does not invalidate the\n    // references to the event in memory - so things refering to this event like the\n    // selection in EventsSheet remain valid. This might not be needed anymore\n    // if events drag'n'drop is reworked to be similar to instructions drag'n'drop.\n    eventsList.moveEventToAnotherEventsList(\n      event,\n      targetEventsList,\n      targetPosition\n    );\n\n    this.forceEventsUpdate();\n    this.props.onEventMoved();\n  };\n\n  _canDrag = ({ node }: { node: ?SortableTreeNode }) => {\n    return !!node && !!node.event;\n  };\n\n  _canDrop = ({ nextParent }: { nextParent: ?SortableTreeNode }) => {\n    if (nextParent) {\n      if (nextParent.event) {\n        return nextParent.event.canHaveSubEvents();\n      }\n    }\n\n    // No \"nextParent\" means that we're trying to drop at the root\n    // of the events tree.\n    return true;\n  };\n\n  _canNodeHaveChildren = (node: ?SortableTreeNode) => {\n    if (node && node.event) {\n      return node.event.canHaveSubEvents();\n    }\n\n    return false;\n  };\n\n  _onVisibilityToggle = ({ node }: { node: SortableTreeNode }) => {\n    const { event } = node;\n    if (!event) return;\n\n    event.setFolded(!event.isFolded());\n    this.forceEventsUpdate();\n  };\n\n  _renderObjectThumbnail = (objectName: string) => {\n    const { project, scope, showObjectThumbnails } = this.props;\n    if (!showObjectThumbnails) return null;\n\n    const object = getObjectByName(project, scope.layout, objectName);\n    if (!object) return null;\n\n    return (\n      <CorsAwareImage\n        className={classNames({\n          [icon]: true,\n        })}\n        alt=\"\"\n        src={getThumbnail(project, object)}\n      />\n    );\n  };\n\n  _renderEvent = ({ node }: { node: SortableTreeNode }) => {\n    const { event, depth, disabled } = node;\n    if (!event) return null;\n\n    return (\n      <EventContainer\n        project={this.props.project}\n        scope={this.props.scope}\n        globalObjectsContainer={this.props.globalObjectsContainer}\n        objectsContainer={this.props.objectsContainer}\n        event={event}\n        key={event.ptr}\n        eventsHeightsCache={this.eventsHeightsCache}\n        selection={this.props.selection}\n        leftIndentWidth={depth * getIndentWidth(this.props.windowWidth)}\n        onAddNewInstruction={this.props.onAddNewInstruction}\n        onPasteInstructions={this.props.onPasteInstructions}\n        onMoveToInstruction={this.props.onMoveToInstruction}\n        onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n        onInstructionClick={this.props.onInstructionClick}\n        onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n        onParameterClick={this.props.onParameterClick}\n        onEventClick={() =>\n          this.props.onEventClick({\n            eventsList: node.eventsList,\n            event: event,\n            indexInList: node.indexInList,\n          })\n        }\n        onEventContextMenu={(x, y) =>\n          this.props.onEventContextMenu(x, y, {\n            eventsList: node.eventsList,\n            event: event,\n            indexInList: node.indexInList,\n          })\n        }\n        onInstructionContextMenu={this.props.onInstructionContextMenu}\n        onAddInstructionContextMenu={this.props.onAddInstructionContextMenu}\n        onOpenExternalEvents={this.props.onOpenExternalEvents}\n        onOpenLayout={this.props.onOpenLayout}\n        disabled={\n          disabled /* Use node.disabled (not event.disabled) as it is true if a parent event is disabled*/\n        }\n        renderObjectThumbnail={this._renderObjectThumbnail}\n        screenType={this.props.screenType}\n        windowWidth={this.props.windowWidth}\n        eventsSheetHeight={this.props.eventsSheetHeight}\n      />\n    );\n  };\n\n  _isNodeHighlighted = ({\n    node,\n    searchQuery,\n  }: {\n    node: SortableTreeNode,\n    searchQuery: ?Array<gdBaseEvent>,\n  }) => {\n    const searchResults = searchQuery;\n    if (!searchResults) return false;\n    const { event } = node;\n    if (!event) return false;\n\n    return searchResults.find(highlightedEvent =>\n      gd.compare(highlightedEvent, event)\n    );\n  };\n\n  render() {\n    // react-sortable-tree does the rendering by transforming treeData\n    // into a flat array, the result being memoized. This hack forces\n    // a re-rendering of events, by discarding the memoized flat array\n    // (otherwise, no re-rendering would be done).\n    const treeData = this.state.treeData ? [...this.state.treeData] : null;\n    const zoomLevel = this.props.fontSize || 14;\n\n    return (\n      <div\n        style={{\n          ...styles.container,\n          fontSize: `${zoomLevel}px`,\n          '--icon-size': `${Math.round(zoomLevel * 1.14)}px`,\n        }}\n      >\n        <SortableTree\n          treeData={treeData}\n          scaffoldBlockPxWidth={getIndentWidth(this.props.windowWidth)}\n          onChange={noop}\n          onVisibilityToggle={this._onVisibilityToggle}\n          onMoveNode={this._onMoveNode}\n          canDrag={this._canDrag}\n          canDrop={this._canDrop}\n          canNodeHaveChildren={this._canNodeHaveChildren}\n          rowHeight={({ node }: { node: SortableTreeNode }) => {\n            if (!node.event) return node.fixedHeight || 0;\n\n            return this.eventsHeightsCache.getEventHeight(node.event);\n          }}\n          searchMethod={this._isNodeHighlighted}\n          searchQuery={this.props.searchResults}\n          searchFocusOffset={this.props.searchFocusOffset}\n          className={\n            this.props.searchResults ? eventsTreeWithSearchResults : ''\n          }\n          reactVirtualizedListProps={{\n            ref: list => (this._list = list),\n            onScroll: this.props.onScroll,\n          }}\n        />\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport InstructionsList from '../InstructionsList';\nimport classNames from 'classnames';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  executableEventContainer,\n} from '../ClassNames';\nimport { type EventRendererProps } from './EventRenderer';\nimport ConditionsActionsColumns from '../ConditionsActionsColumns';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  actionsList: {\n    flex: 1,\n  },\n};\n\nexport default class StandardEvent extends React.Component<\n  EventRendererProps,\n  *\n> {\n  render() {\n    var standardEvent = gd.asStandardEvent(this.props.event);\n\n    return (\n      <ConditionsActionsColumns\n        leftIndentWidth={this.props.leftIndentWidth}\n        windowWidth={this.props.windowWidth}\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n          [executableEventContainer]: true,\n        })}\n        renderConditionsList={({ style, className }) => (\n          <InstructionsList\n            instrsList={standardEvent.getConditions()}\n            style={style}\n            className={className}\n            selection={this.props.selection}\n            areConditions\n            onAddNewInstruction={this.props.onAddNewInstruction}\n            onPasteInstructions={this.props.onPasteInstructions}\n            onMoveToInstruction={this.props.onMoveToInstruction}\n            onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n            onInstructionClick={this.props.onInstructionClick}\n            onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n            onInstructionContextMenu={this.props.onInstructionContextMenu}\n            onAddInstructionContextMenu={this.props.onAddInstructionContextMenu}\n            onParameterClick={this.props.onParameterClick}\n            disabled={this.props.disabled}\n            renderObjectThumbnail={this.props.renderObjectThumbnail}\n            screenType={this.props.screenType}\n            windowWidth={this.props.windowWidth}\n          />\n        )}\n        renderActionsList={({ className }) => (\n          <InstructionsList\n            instrsList={standardEvent.getActions()}\n            style={\n              {\n                ...styles.actionsList,\n              } /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n            }\n            className={className}\n            selection={this.props.selection}\n            areConditions={false}\n            onAddNewInstruction={this.props.onAddNewInstruction}\n            onPasteInstructions={this.props.onPasteInstructions}\n            onMoveToInstruction={this.props.onMoveToInstruction}\n            onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n            onInstructionClick={this.props.onInstructionClick}\n            onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n            onInstructionContextMenu={this.props.onInstructionContextMenu}\n            onAddInstructionContextMenu={this.props.onAddInstructionContextMenu}\n            onParameterClick={this.props.onParameterClick}\n            disabled={this.props.disabled}\n            renderObjectThumbnail={this.props.renderObjectThumbnail}\n            screenType={this.props.screenType}\n            windowWidth={this.props.windowWidth}\n          />\n        )}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { mapFor } from '../../Utils/MapFor';\nimport classNames from 'classnames';\nimport {\n  selectedArea,\n  selectableArea,\n  subInstructionsContainer,\n  instructionParameter,\n  disabledText,\n  icon,\n} from './ClassNames';\nimport {\n  type InstructionsListContext,\n  type InstructionContext,\n} from '../SelectionHandler';\nimport InstructionsList from './InstructionsList';\nimport DropIndicator from './DropIndicator';\nimport ParameterRenderingService from '../ParameterRenderingService';\nimport InvalidParameterValue from './InvalidParameterValue';\nimport MissingParameterValue from './MissingParameterValue';\nimport { makeDragSourceAndDropTarget } from '../../UI/DragAndDrop/DragSourceAndDropTarget';\nimport {\n  type ScreenType,\n  useScreenType,\n} from '../../UI/Reponsive/ScreenTypeMeasurer';\nimport { type WidthType } from '../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport PreferencesContext from '../../MainFrame/Preferences/PreferencesContext';\nimport { useLongTouch } from '../../Utils/UseLongTouch';\nimport {\n  shouldActivate,\n  shouldValidate,\n} from '../../UI/KeyboardShortcuts/InteractionKeys';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  container: {\n    whiteSpace: 'normal',\n    wordWrap: 'break-word',\n    cursor: 'pointer',\n    marginBottom: 1,\n  },\n};\n\nexport const reactDndInstructionType = 'GD_DRAGGED_INSTRUCTION';\n\nconst capitalize = (str: string) => {\n  if (!str) return '';\n\n  return str[0].toUpperCase() + str.substr(1);\n};\n\nconst DragSourceAndDropTarget = makeDragSourceAndDropTarget<{\n  isCondition: boolean,\n}>(reactDndInstructionType);\n\ntype Props = {|\n  instruction: gdInstruction,\n  isCondition: boolean,\n  onClick: Function,\n  selected: boolean,\n  disabled: boolean,\n  onDoubleClick: () => void,\n  onContextMenu: (x: number, y: number) => void,\n  onMoveToInstruction: () => void,\n\n  // For potential sub-instructions list:\n  selection: Object,\n  onAddNewSubInstruction: InstructionsListContext => void,\n  onPasteSubInstructions: InstructionsListContext => void,\n  onMoveToSubInstruction: (destinationContext: InstructionContext) => void,\n  onMoveToSubInstructionsList: (\n    destinationContext: InstructionsListContext\n  ) => void,\n  onSubInstructionClick: InstructionContext => void,\n  onSubInstructionDoubleClick: InstructionContext => void,\n  onAddSubInstructionContextMenu: (\n    button: HTMLButtonElement,\n    instructionsListContext: InstructionsListContext\n  ) => void,\n  onSubParameterClick: Function,\n  onSubInstructionContextMenu: (\n    x: number,\n    y: number,\n    instructionContext: InstructionContext\n  ) => void,\n  onParameterClick: (event: any, parameterIndex: number) => void,\n  renderObjectThumbnail: string => React.Node,\n\n  screenType: ScreenType,\n  windowWidth: WidthType,\n|};\n\nconst Instruction = (props: Props) => {\n  const {\n    instruction,\n    isCondition,\n    onClick,\n    onMoveToInstruction,\n    onContextMenu,\n  } = props;\n\n  const instrFormatter = React.useMemo(\n    () => gd.InstructionSentenceFormatter.get(),\n    []\n  );\n  const preferences = React.useContext(PreferencesContext);\n  const useAssignmentOperators =\n    preferences.values.eventsSheetUseAssignmentOperators;\n\n  /**\n   * Render the different parts of the text of the instruction.\n   * Parameter can have formatting, be hovered and clicked. The rest\n   * has not particular styling.\n   */\n  const renderInstructionText = (metadata: gdInstructionMetadata) => {\n    const { instruction, disabled, renderObjectThumbnail } = props;\n    const formattedTexts = instrFormatter.getAsFormattedText(\n      instruction,\n      metadata\n    );\n    const parametersCount = metadata.getParametersCount();\n\n    return (\n      <span\n        className={classNames({\n          [disabledText]: disabled,\n        })}\n      >\n        {mapFor(0, formattedTexts.size(), i => {\n          const formatting = formattedTexts.getTextFormatting(i);\n          const parameterIndex = formatting.getUserData();\n          const isParameter =\n            parameterIndex >= 0 && parameterIndex < parametersCount;\n\n          if (!isParameter) {\n            return (\n              <span key={i}>\n                {i === 0\n                  ? capitalize(formattedTexts.getString(i))\n                  : formattedTexts.getString(i)}\n              </span>\n            );\n          }\n\n          const parameterMetadata = metadata.getParameter(parameterIndex);\n          const parameterType = parameterMetadata.getType();\n          return (\n            <span\n              key={i}\n              className={classNames({\n                [selectableArea]: true,\n                [instructionParameter]: true,\n                [parameterType]: true,\n              })}\n              onClick={domEvent => {\n                props.onParameterClick(domEvent, parameterIndex);\n\n                // On touchscreen, don't propagate the click to the instruction div,\n                // as it's listening for taps to simulate double \"clicks\".\n                if (props.screenType === 'touch') {\n                  domEvent.stopPropagation();\n                }\n              }}\n              onKeyPress={event => {\n                if (shouldActivate(event)) {\n                  props.onParameterClick(event, parameterIndex);\n                  event.stopPropagation();\n                  event.preventDefault();\n                }\n              }}\n              tabIndex={0}\n            >\n              {ParameterRenderingService.renderInlineParameter({\n                value: formattedTexts.getString(i),\n                parameterMetadata,\n                renderObjectThumbnail,\n                InvalidParameterValue,\n                MissingParameterValue,\n                useAssignmentOperators,\n              })}\n            </span>\n          );\n        })}\n      </span>\n    );\n  };\n\n  // Disable drag on touchscreens, because it would interfere with the\n  // scroll, and would create too much mistake/frustration.\n  const screenType = useScreenType();\n  const dragAllowed = screenType !== 'touch';\n\n  // Allow a long press to show the context menu\n  const longTouchForContextMenuProps = useLongTouch(\n    React.useCallback(\n      event => {\n        onContextMenu(event.clientX, event.clientY);\n      },\n      [onContextMenu]\n    )\n  );\n\n  return (\n    <DragSourceAndDropTarget\n      beginDrag={() => {\n        onClick(); // Select the dragged instruction\n\n        // No need to save here what is being dragged,\n        // as its the entire selection that is considered to be dragged.\n        return {\n          isCondition,\n        };\n      }}\n      canDrag={() => dragAllowed}\n      canDrop={draggedItem => draggedItem.isCondition === isCondition}\n      drop={() => {\n        onMoveToInstruction();\n      }}\n    >\n      {({ connectDragSource, connectDropTarget, isOver, canDrop }) => {\n        // /!\\ It's important to get the metadata now so that we're sure they\n        // are valid.\n        // If the metadata is retrieved outside of the closure, it's possible\n        // that the metadata is changed in the meantime (especially on behavior\n        // properties it seems).\n        const metadata = isCondition\n          ? gd.MetadataProvider.getConditionMetadata(\n              gd.JsPlatform.get(),\n              instruction.getType()\n            )\n          : gd.MetadataProvider.getActionMetadata(\n              gd.JsPlatform.get(),\n              instruction.getType()\n            );\n\n        // The instruction itself can be dragged and is a target for\n        // another instruction to be dropped. It's IMPORTANT NOT to have\n        // the subinstructions list inside the connectDropTarget/connectDragSource\n        // as otherwise this can confuse react-dnd (\"Expected to find a valid target\")\n        // (surely due to components re-mounting/rerendering ?).\n        const instructionDragSourceElement = connectDragSource(\n          <div\n            style={styles.container}\n            className={classNames({\n              [selectableArea]: true,\n              [selectedArea]: props.selected,\n            })}\n            onClick={e => {\n              e.stopPropagation();\n\n              if (props.screenType === 'touch' && props.selected) {\n                // On touch screens, tapping again a selected instruction should edit it.\n                props.onDoubleClick();\n              } else {\n                props.onClick();\n              }\n            }}\n            onDoubleClick={e => {\n              e.stopPropagation();\n              props.onDoubleClick();\n            }}\n            onContextMenu={e => {\n              e.stopPropagation();\n              onContextMenu(e.clientX, e.clientY);\n            }}\n            {...longTouchForContextMenuProps}\n            onKeyPress={event => {\n              if (shouldValidate(event)) {\n                props.onDoubleClick();\n                event.stopPropagation();\n                event.preventDefault();\n              } else if (shouldActivate(event)) {\n                props.onClick();\n                event.stopPropagation();\n                event.preventDefault();\n              }\n            }}\n            tabIndex={0}\n          >\n            {instruction.isInverted() && (\n              <img\n                className={classNames({\n                  [icon]: true,\n                })}\n                src=\"res/contraire.png\"\n                alt=\"Condition is negated\"\n              />\n            )}\n            <img\n              className={classNames({\n                [icon]: true,\n              })}\n              src={metadata.getSmallIconFilename()}\n              alt=\"\"\n            />\n            {renderInstructionText(metadata)}\n          </div>\n        );\n\n        const instructionDragSourceDropTargetElement = instructionDragSourceElement\n          ? connectDropTarget(instructionDragSourceElement)\n          : null;\n\n        return (\n          <React.Fragment>\n            {isOver && <DropIndicator canDrop={canDrop} />}\n            {instructionDragSourceDropTargetElement}\n            {metadata.canHaveSubInstructions() && (\n              <InstructionsList\n                style={\n                  {} /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n                }\n                className={subInstructionsContainer}\n                instrsList={instruction.getSubInstructions()}\n                areConditions={props.isCondition}\n                selection={props.selection}\n                onAddNewInstruction={props.onAddNewSubInstruction}\n                onPasteInstructions={props.onPasteSubInstructions}\n                onMoveToInstruction={props.onMoveToSubInstruction}\n                onMoveToInstructionsList={props.onMoveToSubInstructionsList}\n                onInstructionClick={props.onSubInstructionClick}\n                onInstructionDoubleClick={props.onSubInstructionDoubleClick}\n                onInstructionContextMenu={props.onSubInstructionContextMenu}\n                onAddInstructionContextMenu={\n                  props.onAddSubInstructionContextMenu\n                }\n                onParameterClick={props.onSubParameterClick}\n                addButtonLabel={<Trans>Add a sub-condition</Trans>}\n                disabled={props.disabled}\n                renderObjectThumbnail={props.renderObjectThumbnail}\n                screenType={props.screenType}\n                windowWidth={props.windowWidth}\n              />\n            )}\n          </React.Fragment>\n        );\n      }}\n    </DragSourceAndDropTarget>\n  );\n};\n\nexport default Instruction;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\n\nconst operatorLabels = {\n  '=': t`= (equal to)`,\n  '<': t`< (less than)`,\n  '>': t`> (greater than)`,\n  '<=': t`≤ (less or equal to)`,\n  '>=': t`≥ (greater or equal to)`,\n  '!=': t`≠ (not equal to)`,\n};\n\nconst mapTypeToOperators: { [string]: Array<string> } = {\n  unknown: Object.keys(operatorLabels),\n  number: ['=', '<', '>', '<=', '>=', '!='],\n  time: ['<', '>', '<=', '>='],\n  string: ['=', '!='],\n  color: ['=', '!='],\n};\n\nexport default class RelationalOperatorField extends Component<ParameterFieldProps> {\n  _field: ?SelectField;\n  focus() {\n    if (this._field && this._field.focus) this._field.focus();\n  }\n\n  render() {\n    const { parameterMetadata } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    const comparedValueType = parameterMetadata\n      ? parameterMetadata.getExtraInfo()\n      : 'unknown';\n    const operators =\n      mapTypeToOperators[comparedValueType] || mapTypeToOperators.unknown;\n\n    return (\n      <SelectField\n        margin={this.props.isInline ? 'none' : 'dense'}\n        fullWidth\n        floatingLabelText={description}\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        value={this.props.value}\n        onChange={(e, i, value: string) => this.props.onChange(value)}\n        ref={field => (this._field = field)}\n        hintText={t`Choose an operator`}\n      >\n        {operators.map(operator => (\n          <SelectOption\n            key={operator}\n            value={operator}\n            primaryText={operatorLabels[operator]}\n          />\n        ))}\n      </SelectField>\n    );\n  }\n}\n\nexport const renderInlineRelationalOperator = ({\n  value,\n  InvalidParameterValue,\n}: ParameterInlineRendererProps) => {\n  if (!value) {\n    return (\n      <InvalidParameterValue isEmpty>\n        <Trans>Choose an operator</Trans>\n      </InvalidParameterValue>\n    );\n  }\n\n  if (\n    value !== '=' &&\n    value !== '<' &&\n    value !== '>' &&\n    value !== '<=' &&\n    value !== '>=' &&\n    value !== '!='\n  ) {\n    return <InvalidParameterValue>{value}</InvalidParameterValue>;\n  }\n\n  if (value === '<=') return '\\u2264';\n  if (value === '>=') return '\\u2265';\n  else if (value === '!=') return '\\u2260';\n\n  return value;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\n\nconst operatorLabels = {\n  '=': t`= (set to)`,\n  '+': t`+ (add)`,\n  '-': t`- (subtract)`,\n  '*': t`* (multiply by)`,\n  '/': t`/ (divide by)`,\n};\n\nconst mapTypeToOperators = {\n  unknown: Object.keys(operatorLabels),\n  number: ['=', '+', '-', '*', '/'],\n  string: ['=', '+'],\n  color: ['=', '+'],\n};\n\nexport default class OperatorField extends Component<ParameterFieldProps> {\n  _field: ?SelectField;\n  focus() {\n    if (this._field && this._field.focus) this._field.focus();\n  }\n\n  render() {\n    const { parameterMetadata } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    const comparedValueType = parameterMetadata\n      ? parameterMetadata.getExtraInfo()\n      : 'unknown';\n    const operators =\n      mapTypeToOperators[comparedValueType] || mapTypeToOperators.unknown;\n\n    return (\n      <SelectField\n        margin={this.props.isInline ? 'none' : 'dense'}\n        fullWidth\n        floatingLabelText={description}\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        value={this.props.value}\n        onChange={(e, i, value: string) => this.props.onChange(value)}\n        ref={field => (this._field = field)}\n        hintText={t`Choose an operator`}\n      >\n        {operators.map(operator => (\n          <SelectOption\n            key={operator}\n            value={operator}\n            primaryText={operatorLabels[operator]}\n          />\n        ))}\n      </SelectField>\n    );\n  }\n}\n\nexport const renderInlineOperator = ({\n  value,\n  InvalidParameterValue,\n  useAssignmentOperators,\n}: ParameterInlineRendererProps) => {\n  if (!value) {\n    return (\n      <InvalidParameterValue isEmpty>\n        <Trans>Choose an operator</Trans>\n      </InvalidParameterValue>\n    );\n  }\n\n  if (useAssignmentOperators) {\n    if (value === '=') return '=';\n    else if (value === '+') return '+=';\n    else if (value === '-') return '-=';\n    else if (value === '/') return '/=';\n    else if (value === '*') return '*=';\n  } else {\n    if (value === '=') return <Trans>set to</Trans>;\n    else if (value === '+') return <Trans>add</Trans>;\n    else if (value === '-') return <Trans>subtract</Trans>;\n    else if (value === '/') return <Trans>divide by</Trans>;\n    else if (value === '*') return <Trans>multiply by</Trans>;\n  }\n\n  return <InvalidParameterValue>{value}</InvalidParameterValue>;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport React, { Component } from 'react';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\n\nexport default class MouseField extends Component<ParameterFieldProps> {\n  _field: ?SelectField;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const { parameterMetadata, value } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    return (\n      <SelectField\n        margin={this.props.isInline ? 'none' : 'dense'}\n        fullWidth\n        floatingLabelText={description}\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        value={value}\n        ref={field => (this._field = field)}\n        onChange={(e, i, value) => this.props.onChange(value)}\n      >\n        <SelectOption value=\"Left\" primaryText={t`Left (primary)`} />\n        <SelectOption value=\"Right\" primaryText={t`Right (secondary)`} />\n        <SelectOption\n          value=\"Middle\"\n          primaryText={t`Middle (Auxiliary button, usually the wheel button)`}\n        />\n      </SelectField>\n    );\n  }\n}\n\nexport const renderInlineMouse = ({\n  value,\n  InvalidParameterValue,\n}: ParameterInlineRendererProps) => {\n  return value ? (\n    value\n  ) : (\n    <InvalidParameterValue isEmpty>\n      <Trans>Choose a mouse button</Trans>\n    </InvalidParameterValue>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport React, { Component } from 'react';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport SemiControlledAutoComplete from '../../UI/SemiControlledAutoComplete';\n\nconst keyNames = [\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z',\n  'Num0',\n  'Num1',\n  'Num2',\n  'Num3',\n  'Num4',\n  'Num5',\n  'Num6',\n  'Num7',\n  'Num8',\n  'Num9',\n  'Numpad0',\n  'Numpad1',\n  'Numpad2',\n  'Numpad3',\n  'Numpad4',\n  'Numpad5',\n  'Numpad6',\n  'Numpad7',\n  'Numpad8',\n  'Numpad9',\n  'LShift',\n  'RShift',\n  'LControl',\n  'RControl',\n  'LAlt',\n  'RAlt',\n  'LSystem',\n  'RSystem',\n  'SemiColon',\n  'Comma',\n  'Period',\n  'Quote',\n  'Slash',\n  'BackSlash',\n  'Tilde',\n  'Equal',\n  'Dash',\n  'Space',\n  'Back',\n  'Tab',\n  'Delete',\n  'Insert',\n  'Escape',\n  'PageUp',\n  'PageDown',\n  'End',\n  'Home',\n  'Return',\n  'NumpadPageUp',\n  'NumpadPageDown',\n  'NumpadEnd',\n  'NumpadHome',\n  'NumpadReturn',\n  'Add',\n  'Subtract',\n  'Multiply',\n  'Divide',\n  'NumpadAdd',\n  'NumpadSubtract',\n  'NumpadMultiply',\n  'NumpadDivide',\n  'Left',\n  'Up',\n  'Right',\n  'Down',\n  'NumpadLeft',\n  'NumpadUp',\n  'NumpadRight',\n  'NumpadDown',\n  'F1',\n  'F2',\n  'F3',\n  'F4',\n  'F5',\n  'F6',\n  'F7',\n  'F8',\n  'F9',\n  'F10',\n  'F11',\n  'F12',\n  'Pause',\n];\n\nconst isKeyValid = (key: string) => keyNames.indexOf(key) !== -1;\n\nexport default class KeyField extends Component<ParameterFieldProps, {||}> {\n  _field: ?any;\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  render() {\n    const {\n      value,\n      onChange,\n      isInline,\n      parameterMetadata,\n      onRequestClose,\n      onApply,\n    } = this.props;\n\n    return (\n      <SemiControlledAutoComplete\n        margin={this.props.isInline ? 'none' : 'dense'}\n        floatingLabelText={\n          parameterMetadata ? parameterMetadata.getDescription() : undefined\n        }\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        fullWidth\n        value={value}\n        onChange={onChange}\n        dataSource={keyNames.map(keyName => ({\n          text: keyName,\n          value: keyName,\n        }))}\n        openOnFocus={!isInline}\n        onRequestClose={onRequestClose}\n        onApply={onApply}\n        ref={field => (this._field = field)}\n        errorText={\n          !value ? (\n            <Trans>You must select a key.</Trans>\n          ) : !isKeyValid(value) ? (\n            <Trans>You must select a valid key. \"{value}\" is not valid.</Trans>\n          ) : (\n            undefined\n          )\n        }\n      />\n    );\n  }\n}\n\nexport const renderInlineKey = ({\n  value,\n  InvalidParameterValue,\n}: ParameterInlineRendererProps) => {\n  if (!value) {\n    return (\n      <InvalidParameterValue isEmpty>\n        <Trans>Choose a key</Trans>\n      </InvalidParameterValue>\n    );\n  }\n\n  return isKeyValid(value) ? (\n    value\n  ) : (\n    <InvalidParameterValue>{value}</InvalidParameterValue>\n  );\n};\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js-legacy';\n\n/**\n * Objects with an unknown type are rendered with a placeholder rectangle.\n *\n * @extends RenderedInstance\n * @class RenderedUnknownInstance\n * @constructor\n */\nfunction RenderedUnknownInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  RenderedInstance.call(\n    this,\n    project,\n    layout,\n    instance,\n    associatedObject,\n    pixiContainer,\n    pixiResourcesLoader\n  );\n\n  //This renderer show a placeholder for the object:\n  this._pixiObject = new PIXI.Graphics();\n  this._pixiContainer.addChild(this._pixiObject);\n\n  var width = instance.hasCustomSize() ? instance.getCustomWidth() : 32;\n  var height = instance.hasCustomSize() ? instance.getCustomHeight() : 32;\n\n  this._pixiObject.beginFill(0x0033ff);\n  this._pixiObject.lineStyle(1, 0xffd900, 1);\n  this._pixiObject.moveTo(0, 0);\n  this._pixiObject.lineTo(width, 0);\n  this._pixiObject.lineTo(width, height);\n  this._pixiObject.lineTo(0, height);\n  this._pixiObject.endFill();\n}\nRenderedUnknownInstance.prototype = Object.create(RenderedInstance.prototype);\nRenderedUnknownInstance.getThumbnail = function(\n  project,\n  resourcesLoader,\n  object\n) {\n  return 'res/unknown32.png';\n};\n\nRenderedUnknownInstance.prototype.update = function() {\n  this._pixiObject.position.x = this._instance.getX();\n  this._pixiObject.position.y = this._instance.getY();\n  this._pixiObject.rotation = (this._instance.getAngle() * Math.PI) / 180.0;\n};\n\nexport default RenderedUnknownInstance;\n","import FontFaceObserver from 'fontfaceobserver';\n\n/**\n * A simple wrapper around FontFace (if supported) or @font-face + FontFaceObserver\n * to load a font from an url and be notified when loading is done (or failed).\n * @param {*} fontFamily\n * @param {*} src\n * @param {*} descriptors\n */\nexport const loadFontFace = (fontFamily, src, descriptors = {}) => {\n  if (typeof FontFace !== 'undefined') {\n    // Load the given font using CSS Font Loading API.\n    const fontFace = new FontFace(fontFamily, src, descriptors);\n    document.fonts.add(fontFace);\n    return fontFace.load();\n  } else {\n    // Add @font-face and use FontFaceObserver to be notified when the\n    // font is ready.\n    const newStyle = document.createElement('style');\n    newStyle.appendChild(\n      document.createTextNode(\n        `@font-face {\n          font-family: ${fontFamily};\n          src: ${src};\n        }`\n      )\n    );\n\n    document.head.appendChild(newStyle);\n    return new FontFaceObserver(fontFamily, descriptors).load().catch(err => {\n      console.warn(`Error while loading font ${fontFamily}`, err);\n\n      throw err;\n    });\n  }\n};\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js-legacy';\nconst gd /* TODO: add flow in this file */ = global.gd;\n\n/**\n * Renderer for gd.SpriteObject\n *\n * @extends RenderedInstance\n * @class RenderedSpriteInstance\n * @constructor\n */\nfunction RenderedSpriteInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  RenderedInstance.call(\n    this,\n    project,\n    layout,\n    instance,\n    associatedObject,\n    pixiContainer,\n    pixiResourcesLoader\n  );\n\n  this._renderedAnimation = 0;\n  this._renderedDirection = 0;\n  this._centerX = 0;\n  this._centerY = 0;\n  this._originX = 0;\n  this._originY = 0;\n\n  //Setup the PIXI object:\n  this._pixiObject = new PIXI.Sprite(\n    this._pixiResourcesLoader.getInvalidPIXITexture()\n  );\n  this._pixiContainer.addChild(this._pixiObject);\n  this.updatePIXITextureAndSprite();\n}\nRenderedSpriteInstance.prototype = Object.create(RenderedInstance.prototype);\n\n/**\n * Return a URL for thumbnail of the specified object.\n */\nRenderedSpriteInstance.getThumbnail = function(\n  project,\n  resourcesLoader,\n  object\n) {\n  const spriteObject = gd.asSpriteObject(object);\n\n  if (\n    spriteObject.getAnimationsCount() > 0 &&\n    spriteObject.getAnimation(0).getDirectionsCount() > 0 &&\n    spriteObject\n      .getAnimation(0)\n      .getDirection(0)\n      .getSpritesCount() > 0\n  ) {\n    const imageName = spriteObject\n      .getAnimation(0)\n      .getDirection(0)\n      .getSprite(0)\n      .getImageName();\n    return resourcesLoader.getResourceFullUrl(project, imageName, {});\n  }\n\n  return 'res/unknown32.png';\n};\n\nRenderedSpriteInstance.prototype.updatePIXISprite = function() {\n  this._pixiObject.anchor.x =\n    this._centerX / this._pixiObject.texture.frame.width;\n  this._pixiObject.anchor.y =\n    this._centerY / this._pixiObject.texture.frame.height;\n  this._pixiObject.rotation = this._shouldNotRotate\n    ? 0\n    : RenderedInstance.toRad(this._instance.getAngle());\n  if (this._instance.hasCustomSize()) {\n    this._pixiObject.scale.x =\n      this._instance.getCustomWidth() / this._pixiObject.texture.frame.width;\n    this._pixiObject.scale.y =\n      this._instance.getCustomHeight() / this._pixiObject.texture.frame.height;\n  } else {\n    this._pixiObject.scale.x = 1;\n    this._pixiObject.scale.y = 1;\n  }\n  this._pixiObject.position.x =\n    this._instance.getX() +\n    (this._centerX - this._originX) * Math.abs(this._pixiObject.scale.x);\n  this._pixiObject.position.y =\n    this._instance.getY() +\n    (this._centerY - this._originY) * Math.abs(this._pixiObject.scale.y);\n};\n\nRenderedSpriteInstance.prototype.updateSprite = function() {\n  this._sprite = null;\n  this._shouldNotRotate = false;\n\n  const spriteObject = gd.asSpriteObject(this._associatedObject);\n  if (spriteObject.hasNoAnimations()) return false;\n\n  this._renderedAnimation = this._instance.getRawDoubleProperty('animation');\n  if (this._renderedAnimation >= spriteObject.getAnimationsCount())\n    this._renderedAnimation = 0;\n\n  const animation = spriteObject.getAnimation(this._renderedAnimation);\n  if (animation.hasNoDirections()) return false;\n\n  this._renderedDirection = 0;\n  if (animation.useMultipleDirections()) {\n    let normalizedAngle = Math.floor(this._instance.getAngle()) % 360;\n    if (normalizedAngle < 0) normalizedAngle += 360;\n\n    this._renderedDirection = Math.round(normalizedAngle / 45) % 8;\n  }\n\n  if (this._renderedDirection >= animation.getDirectionsCount())\n    this._renderedDirection = 0;\n\n  const direction = animation.getDirection(this._renderedDirection);\n\n  if (direction.getSpritesCount() === 0) return false;\n\n  this._shouldNotRotate = animation.useMultipleDirections();\n  this._sprite = direction.getSprite(0);\n  return true;\n};\n\nRenderedSpriteInstance.prototype.updatePIXITextureAndSprite = function() {\n  this.updateSprite();\n  if (!this._sprite) return;\n\n  const texture = this._pixiResourcesLoader.getPIXITexture(\n    this._project,\n    this._sprite.getImageName()\n  );\n  this._pixiObject.texture = texture;\n\n  if (!texture.baseTexture.valid) {\n    // Post pone texture update if texture is not loaded.\n    texture.once('update', () => this.updatePIXITextureAndSprite());\n    return;\n  }\n\n  const origin = this._sprite.getOrigin();\n  this._originX = origin.getX();\n  this._originY = origin.getY();\n\n  if (this._sprite.isDefaultCenterPoint()) {\n    this._centerX = texture.width / 2;\n    this._centerY = texture.height / 2;\n  } else {\n    const center = this._sprite.getCenter();\n    this._centerX = center.getX();\n    this._centerY = center.getY();\n  }\n\n  this.updatePIXISprite();\n};\n\nRenderedSpriteInstance.prototype.update = function() {\n  const animation = this._instance.getRawDoubleProperty('animation');\n  if (this._renderedAnimation !== animation) {\n    this.updatePIXITextureAndSprite();\n  } else {\n    this.updatePIXISprite();\n  }\n};\n\nRenderedSpriteInstance.prototype.getOriginX = function() {\n  if (!this._sprite || !this._pixiObject) return 0;\n\n  return this._sprite.getOrigin().getX() * this._pixiObject.scale.x;\n};\n\nRenderedSpriteInstance.prototype.getOriginY = function() {\n  if (!this._sprite || !this._pixiObject) return 0;\n\n  return this._sprite.getOrigin().getY() * this._pixiObject.scale.y;\n};\n\nRenderedSpriteInstance.prototype.getDefaultWidth = function() {\n  return Math.abs(this._pixiObject.width);\n};\n\nRenderedSpriteInstance.prototype.getDefaultHeight = function() {\n  return Math.abs(this._pixiObject.height);\n};\n\nexport default RenderedSpriteInstance;\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js-legacy';\nconst gd /* TODO: add flow in this file */ = global.gd;\n\n/**\n * Renderer for gd.TiledSpriteObject\n *\n * @extends RenderedInstance\n * @class RenderedTiledSpriteInstance\n * @constructor\n */\nfunction RenderedTiledSpriteInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  RenderedInstance.call(\n    this,\n    project,\n    layout,\n    instance,\n    associatedObject,\n    pixiContainer,\n    pixiResourcesLoader\n  );\n\n  //Setup the PIXI object:\n  var tiledSprite = gd.asTiledSpriteObject(associatedObject);\n  this._texture = tiledSprite.getTexture();\n  this._pixiObject = new PIXI.TilingSprite(\n    this._pixiResourcesLoader.getPIXITexture(project, tiledSprite.getTexture()),\n    tiledSprite.getWidth(),\n    tiledSprite.getHeight()\n  );\n  this._pixiObject.anchor.x = 0.5;\n  this._pixiObject.anchor.y = 0.5;\n  this._pixiContainer.addChild(this._pixiObject);\n}\nRenderedTiledSpriteInstance.prototype = Object.create(\n  RenderedInstance.prototype\n);\n\n/**\n * Return a URL for thumbnail of the specified object.\n */\nRenderedTiledSpriteInstance.getThumbnail = function(\n  project,\n  resourcesLoader,\n  object\n) {\n  var tiledSprite = gd.asTiledSpriteObject(object);\n\n  return resourcesLoader.getResourceFullUrl(\n    project,\n    tiledSprite.getTexture(),\n    {}\n  );\n};\n\nRenderedTiledSpriteInstance.prototype.update = function() {\n  var tiledSprite = gd.asTiledSpriteObject(this._associatedObject);\n  if (this._instance.hasCustomSize()) {\n    this._pixiObject.width = this._instance.getCustomWidth();\n    this._pixiObject.height = this._instance.getCustomHeight();\n  } else {\n    this._pixiObject.width = tiledSprite.getWidth();\n    this._pixiObject.height = tiledSprite.getHeight();\n  }\n\n  if (this._texture !== tiledSprite.getTexture()) {\n    this._texture = tiledSprite.getTexture();\n    this._pixiObject.texture = this._pixiResourcesLoader.getPIXITexture(\n      this._project,\n      tiledSprite.getTexture()\n    );\n  }\n\n  this._pixiObject.x = this._instance.getX() + this._pixiObject.width / 2;\n  this._pixiObject.y = this._instance.getY() + this._pixiObject.height / 2;\n  this._pixiObject.rotation = RenderedInstance.toRad(this._instance.getAngle());\n};\n\nRenderedTiledSpriteInstance.prototype.getDefaultWidth = function() {\n  var tiledSprite = gd.asTiledSpriteObject(this._associatedObject);\n  return tiledSprite.getWidth();\n};\n\nRenderedTiledSpriteInstance.prototype.getDefaultHeight = function() {\n  var tiledSprite = gd.asTiledSpriteObject(this._associatedObject);\n  return tiledSprite.getHeight();\n};\n\nexport default RenderedTiledSpriteInstance;\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js-legacy';\nconst gd /* TODO: add flow in this file */ = global.gd;\n\n/**\n * Renderer for gd.PanelSpriteObject\n *\n * Heavily inspired from the GDJS PIXI renderer for PanelSprite objects.\n * TODO: Find a way to factor GDJS objects and IDE instances renderers.\n *\n * @extends RenderedInstance\n * @class RenderedPanelSpriteInstance\n * @constructor\n */\nfunction RenderedPanelSpriteInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  RenderedInstance.call(\n    this,\n    project,\n    layout,\n    instance,\n    associatedObject,\n    pixiContainer,\n    pixiResourcesLoader\n  );\n\n  this.makeObjects();\n  this.updateTexture();\n}\nRenderedPanelSpriteInstance.prototype = Object.create(\n  RenderedInstance.prototype\n);\n\nRenderedPanelSpriteInstance.prototype.update = function() {\n  //TODO\n  // if (this._pixiObject.visible && this._wasRendered) {\n  //   this._pixiObject.cacheAsBitmap = true;\n  // }\n  // this._wasRendered = true;\n\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n  if (panelSprite.isTiled() !== this._tiled) {\n    this.makeObjects();\n  }\n  if (panelSprite.getTexture() !== this._textureName) {\n    this.updateTexture();\n  }\n\n  this.updateAngle();\n  this.updatePosition();\n\n  const oldWidth = this._width;\n  const oldHeight = this._height;\n  if (this._instance.hasCustomSize()) {\n    this._width = this._instance.getCustomWidth();\n    this._height = this._instance.getCustomHeight();\n  } else {\n    var tiledSprite = gd.asPanelSpriteObject(this._associatedObject);\n    this._width = tiledSprite.getWidth();\n    this._height = tiledSprite.getHeight();\n  }\n\n  if (this._width !== oldWidth || this._height !== oldHeight) {\n    this.updateWidthHeight();\n  }\n};\n\nRenderedPanelSpriteInstance.prototype.makeObjects = function() {\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n  this._textureName = panelSprite.getTexture();\n  const texture = this._pixiResourcesLoader.getPIXITexture(\n    this._project,\n    this._textureName\n  );\n\n  this._tiled = panelSprite.isTiled();\n  var StretchedSprite = !this._tiled ? PIXI.Sprite : PIXI.TilingSprite;\n\n  if (!this._pixiObject) {\n    this._pixiObject = new PIXI.Container();\n    this._pixiContainer.addChild(this._pixiObject);\n  }\n  this._centerSprite = new StretchedSprite(new PIXI.Texture(texture));\n  this._borderSprites = [\n    new StretchedSprite(new PIXI.Texture(texture)), //Right\n    new PIXI.Sprite(texture), //Top-Right\n    new StretchedSprite(new PIXI.Texture(texture)), //Top\n    new PIXI.Sprite(texture), //Top-Left\n    new StretchedSprite(new PIXI.Texture(texture)), //Left\n    new PIXI.Sprite(texture), //Bottom-Left\n    new StretchedSprite(new PIXI.Texture(texture)), //Bottom\n    new PIXI.Sprite(texture), //Bottom-Right\n  ];\n\n  this._pixiObject.removeChildren();\n  this._pixiObject.addChild(this._centerSprite);\n  for (var i = 0; i < this._borderSprites.length; ++i) {\n    this._pixiObject.addChild(this._borderSprites[i]);\n  }\n};\n\nRenderedPanelSpriteInstance.prototype.updateAngle = function() {\n  this._pixiObject.rotation = RenderedInstance.toRad(this._instance.getAngle());\n};\n\nRenderedPanelSpriteInstance.prototype.updatePosition = function() {\n  this._pixiObject.x = this._instance.getX() + this._width / 2;\n  this._pixiObject.y = this._instance.getY() + this._height / 2;\n};\n\nRenderedPanelSpriteInstance.prototype._updateLocalPositions = function() {\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n\n  this._centerSprite.position.x = panelSprite.getLeftMargin();\n  this._centerSprite.position.y = panelSprite.getTopMargin();\n\n  //Right\n  this._borderSprites[0].position.x =\n    this._width - panelSprite.getRightMargin();\n  this._borderSprites[0].position.y = panelSprite.getTopMargin();\n\n  //Top-right\n  this._borderSprites[1].position.x =\n    this._width - this._borderSprites[1].width;\n  this._borderSprites[1].position.y = 0;\n\n  //Top\n  this._borderSprites[2].position.x = panelSprite.getLeftMargin();\n  this._borderSprites[2].position.y = 0;\n\n  //Top-Left\n  this._borderSprites[3].position.x = 0;\n  this._borderSprites[3].position.y = 0;\n\n  //Left\n  this._borderSprites[4].position.x = 0;\n  this._borderSprites[4].position.y = panelSprite.getTopMargin();\n\n  //Bottom-Left\n  this._borderSprites[5].position.x = 0;\n  this._borderSprites[5].position.y =\n    this._height - this._borderSprites[5].height;\n\n  //Bottom\n  this._borderSprites[6].position.x = panelSprite.getLeftMargin();\n  this._borderSprites[6].position.y =\n    this._height - panelSprite.getBottomMargin();\n\n  //Bottom-Right\n  this._borderSprites[7].position.x =\n    this._width - this._borderSprites[7].width;\n  this._borderSprites[7].position.y =\n    this._height - this._borderSprites[7].height;\n};\n\nRenderedPanelSpriteInstance.prototype._updateSpritesAndTexturesSize = function() {\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n  this._centerSprite.width = Math.max(\n    this._width - panelSprite.getRightMargin() - panelSprite.getLeftMargin(),\n    0\n  );\n  this._centerSprite.height = Math.max(\n    this._height - panelSprite.getTopMargin() - panelSprite.getBottomMargin(),\n    0\n  );\n\n  //Right\n  this._borderSprites[0].width = panelSprite.getRightMargin();\n  this._borderSprites[0].height = Math.max(\n    this._height - panelSprite.getTopMargin() - panelSprite.getBottomMargin(),\n    0\n  );\n\n  //Top\n  this._borderSprites[2].height = panelSprite.getTopMargin();\n  this._borderSprites[2].width = Math.max(\n    this._width - panelSprite.getRightMargin() - panelSprite.getLeftMargin(),\n    0\n  );\n\n  //Left\n  this._borderSprites[4].width = panelSprite.getLeftMargin();\n  this._borderSprites[4].height = Math.max(\n    this._height - panelSprite.getTopMargin() - panelSprite.getBottomMargin(),\n    0\n  );\n\n  //Bottom\n  this._borderSprites[6].height = panelSprite.getBottomMargin();\n  this._borderSprites[6].width = Math.max(\n    this._width - panelSprite.getRightMargin() - panelSprite.getLeftMargin(),\n    0\n  );\n\n  this._wasRendered = true;\n  this._pixiObject.cacheAsBitmap = false;\n};\n\nRenderedPanelSpriteInstance.prototype.updateTexture = function() {\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n  this._textureName = panelSprite.getTexture();\n  const texture = this._pixiResourcesLoader.getPIXITexture(\n    this._project,\n    this._textureName\n  );\n\n  if (!texture.baseTexture.valid) {\n    // Post pone texture update if texture is not loaded.\n    texture.once('update', () => this.updateTexture());\n    return;\n  }\n\n  console.log('Updating PanelSprite instance texture');\n  function makeInsideTexture(rect) {\n    if (rect.width < 0) rect.width = 0;\n    if (rect.height < 0) rect.height = 0;\n    if (rect.x < 0) rect.x = 0;\n    if (rect.y < 0) rect.y = 0;\n    if (rect.x > texture.width) rect.x = texture.width;\n    if (rect.y > texture.height) rect.y = texture.height;\n    if (rect.x + rect.width > texture.width)\n      rect.width = texture.width - rect.x;\n    if (rect.y + rect.height > texture.height)\n      rect.height = texture.height - rect.y;\n\n    return rect;\n  }\n\n  this._centerSprite.texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        panelSprite.getLeftMargin(),\n        panelSprite.getTopMargin(),\n        texture.width -\n          panelSprite.getLeftMargin() -\n          panelSprite.getRightMargin(),\n        texture.height -\n          panelSprite.getTopMargin() -\n          panelSprite.getBottomMargin()\n      )\n    )\n  );\n\n  //Right\n  this._borderSprites[0].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        texture.width - panelSprite.getRightMargin(),\n        panelSprite.getTopMargin(),\n        panelSprite.getRightMargin(),\n        texture.height -\n          panelSprite.getTopMargin() -\n          panelSprite.getBottomMargin()\n      )\n    )\n  );\n\n  //Top-right\n  this._borderSprites[1].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        texture.width - panelSprite.getRightMargin(),\n        0,\n        panelSprite.getRightMargin(),\n        panelSprite.getTopMargin()\n      )\n    )\n  );\n\n  //Top\n  this._borderSprites[2].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        panelSprite.getLeftMargin(),\n        0,\n        texture.width -\n          panelSprite.getLeftMargin() -\n          panelSprite.getRightMargin(),\n        panelSprite.getTopMargin()\n      )\n    )\n  );\n\n  //Top-Left\n  this._borderSprites[3].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        0,\n        0,\n        panelSprite.getLeftMargin(),\n        panelSprite.getTopMargin()\n      )\n    )\n  );\n\n  //Left\n  this._borderSprites[4].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        0,\n        panelSprite.getTopMargin(),\n        panelSprite.getLeftMargin(),\n        texture.height -\n          panelSprite.getTopMargin() -\n          panelSprite.getBottomMargin()\n      )\n    )\n  );\n\n  //Bottom-Left\n  this._borderSprites[5].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        0,\n        texture.height - panelSprite.getBottomMargin(),\n        panelSprite.getLeftMargin(),\n        panelSprite.getBottomMargin()\n      )\n    )\n  );\n\n  //Bottom\n  this._borderSprites[6].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        panelSprite.getLeftMargin(),\n        texture.height - panelSprite.getBottomMargin(),\n        texture.width -\n          panelSprite.getLeftMargin() -\n          panelSprite.getRightMargin(),\n        panelSprite.getBottomMargin()\n      )\n    )\n  );\n\n  //Bottom-Right\n  this._borderSprites[7].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        texture.width - panelSprite.getRightMargin(),\n        texture.height - panelSprite.getBottomMargin(),\n        panelSprite.getRightMargin(),\n        panelSprite.getBottomMargin()\n      )\n    )\n  );\n\n  this._updateSpritesAndTexturesSize();\n  this._updateLocalPositions();\n  this.updatePosition();\n};\n\nRenderedPanelSpriteInstance.prototype.updateWidthHeight = function() {\n  this._pixiObject.pivot.x = this._width / 2;\n  this._pixiObject.pivot.y = this._height / 2;\n  this._updateSpritesAndTexturesSize();\n  this._updateLocalPositions();\n  this.updatePosition();\n};\n\nRenderedPanelSpriteInstance.prototype.getDefaultWidth = function() {\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n  return panelSprite.getWidth();\n};\n\nRenderedPanelSpriteInstance.prototype.getDefaultHeight = function() {\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n  return panelSprite.getHeight();\n};\n\n/**\n * Return a URL for thumbnail of the specified object.\n */\nRenderedPanelSpriteInstance.getThumbnail = function(\n  project,\n  resourcesLoader,\n  object\n) {\n  const panelSprite = gd.asPanelSpriteObject(object);\n\n  return resourcesLoader.getResourceFullUrl(\n    project,\n    panelSprite.getTexture(),\n    {}\n  );\n};\n\nexport default RenderedPanelSpriteInstance;\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js-legacy';\nconst gd /* TODO: add flow in this file */ = global.gd;\n\n/**\n * Renderer for a Text object.\n *\n * @extends RenderedInstance\n * @class RenderedTextInstance\n * @constructor\n */\nfunction RenderedTextInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  RenderedInstance.call(\n    this,\n    project,\n    layout,\n    instance,\n    associatedObject,\n    pixiContainer,\n    pixiResourcesLoader\n  );\n\n  const style = new PIXI.TextStyle({\n    fontFamily: 'Arial',\n    fontSize: 20,\n    align: 'left',\n    padding: 5,\n  });\n\n  //Setup the PIXI object:\n  this._pixiObject = new PIXI.Text('', style);\n  this._pixiObject.anchor.x = 0.5;\n  this._pixiObject.anchor.y = 0.5;\n  this._pixiContainer.addChild(this._pixiObject);\n  this._styleFontDirty = true;\n  this.update();\n}\nRenderedTextInstance.prototype = Object.create(RenderedInstance.prototype);\n\n/**\n * Return a URL for thumbnail of the specified object.\n */\nRenderedTextInstance.getThumbnail = function(project, resourcesLoader, object) {\n  return 'CppPlatform/Extensions/texticon24.png';\n};\n\nRenderedTextInstance.prototype.update = function() {\n  const textObject = gd.asTextObject(this._associatedObject);\n  this._pixiObject.text = textObject.getString();\n\n  //Update style, only if needed to avoid destroying text rendering performances\n  if (\n    textObject.isItalic() !== this._isItalic ||\n    textObject.isBold() !== this._isBold ||\n    textObject.getCharacterSize() !== this._characterSize ||\n    this._instance.hasCustomSize() !== this._wrapping ||\n    (this._instance.getCustomWidth() !== this._wrappingWidth && this._wrapping)\n  ) {\n    this._isItalic = textObject.isItalic();\n    this._isBold = textObject.isBold();\n    this._characterSize = textObject.getCharacterSize();\n    this._wrapping = this._instance.hasCustomSize();\n    this._wrappingWidth = this._instance.getCustomWidth();\n    this._styleFontDirty = true;\n  }\n\n  if (this._fontName !== textObject.getFontName()) {\n    //Avoid calling loadFontFamily if the font didn't changed.\n    this._fontName = textObject.getFontName();\n    this._pixiResourcesLoader\n      .loadFontFamily(this._project, textObject.getFontName())\n      .then(fontFamily => {\n        // Once the font is loaded, we can use the given fontFamily.\n        this._fontFamily = fontFamily;\n        this._styleFontDirty = true;\n      })\n      .catch(err => {\n        // Ignore errors\n        console.warn(\n          'Unable to load font family for RenderedTextInstance',\n          err\n        );\n      });\n  }\n\n  if (this._styleFontDirty) {\n    this._pixiObject.style.fontFamily = this._fontFamily || 'Arial';\n    this._pixiObject.style.fontSize = Math.max(1, this._characterSize);\n    this._pixiObject.style.fontStyle = this._isItalic ? 'italic' : 'normal';\n    this._pixiObject.style.fontWeight = this._isBold ? 'bold' : 'normal';\n    this._pixiObject.style.wordWrap = this._wrapping;\n    this._pixiObject.style.wordWrapWidth =\n      this._wrappingWidth <= 1 ? 1 : this._wrappingWidth;\n    this._pixiObject.style.breakWords = true;\n\n    // Manually ask the PIXI object to re-render as we changed a style property\n    // see http://www.html5gamedevs.com/topic/16924-change-text-style-post-render/\n    this._pixiObject.dirty = true;\n    this._styleFontDirty = false;\n  }\n\n  if (\n    textObject.getColorR() !== this._colorR ||\n    textObject.getColorG() !== this._colorG ||\n    textObject.getColorB() !== this._colorB\n  ) {\n    this._colorR = textObject.getColorR();\n    this._colorG = textObject.getColorG();\n    this._colorB = textObject.getColorB();\n    this._pixiObject.style.fill =\n      'rgb(' + this._colorR + ',' + this._colorG + ',' + this._colorB + ')';\n\n    // Manually ask the PIXI object to re-render as we changed a style property\n    // see http://www.html5gamedevs.com/topic/16924-change-text-style-post-render/\n    this._pixiObject.dirty = true;\n  }\n\n  this._pixiObject.position.x =\n    this._instance.getX() + this._pixiObject.width / 2;\n  this._pixiObject.position.y =\n    this._instance.getY() + this._pixiObject.height / 2;\n  this._pixiObject.rotation = RenderedInstance.toRad(this._instance.getAngle());\n};\n\nRenderedTextInstance.prototype.getDefaultWidth = function() {\n  return this._pixiObject.width;\n};\n\nRenderedTextInstance.prototype.getDefaultHeight = function() {\n  return this._pixiObject.height;\n};\n\nexport default RenderedTextInstance;\n","import makeRenderer from './RenderedIconInstance';\nexport default makeRenderer('CppPlatform/Extensions/primitivedrawingicon.png');\n","import makeRenderer from './RenderedIconInstance';\nexport default makeRenderer('CppPlatform/Extensions/textentry.png');\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js-legacy';\nimport { rgbToHexNumber } from '../../Utils/ColorTransformer';\nconst gd /* TODO: add flow in this file */ = global.gd;\n\n/**\n * Renderer for an ParticleEmitter object.\n *\n * @extends RenderedInstance\n * @class RenderedParticleEmitterInstance\n * @constructor\n */\nfunction RenderedParticleEmitterInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  RenderedInstance.call(\n    this,\n    project,\n    layout,\n    instance,\n    associatedObject,\n    pixiContainer,\n    pixiResourcesLoader\n  );\n\n  this._pixiObject = new PIXI.Graphics();\n  this._pixiContainer.addChild(this._pixiObject);\n  this.updateGraphics();\n}\nRenderedParticleEmitterInstance.prototype = Object.create(\n  RenderedInstance.prototype\n);\n\n/**\n * Return a URL for thumbnail of the specified object.\n */\nRenderedParticleEmitterInstance.getThumbnail = function(\n  project,\n  resourcesLoader,\n  object\n) {\n  return 'CppPlatform/Extensions/particleSystemicon.png';\n};\n\nRenderedParticleEmitterInstance.prototype.update = function() {\n  this._pixiObject.position.x = this._instance.getX();\n  this._pixiObject.position.y = this._instance.getY();\n  this.updateGraphics();\n};\n\n/**\n * Render the preview of the particle emitter according to the setup of the object\n */\nRenderedParticleEmitterInstance.prototype.updateGraphics = function() {\n  const particleEmitterObject = gd.asParticleEmitterObject(\n    this._associatedObject\n  );\n\n  this._pixiObject.clear();\n\n  const emitterAngle = (this._instance.getAngle() / 180) * 3.14159;\n  const sprayConeAngle = particleEmitterObject.getConeSprayAngle();\n  const line1Angle = emitterAngle - (sprayConeAngle / 2.0 / 180.0) * 3.14159;\n  const line2Angle = emitterAngle + (sprayConeAngle / 2.0 / 180.0) * 3.14159;\n  const length = 64;\n\n  this._pixiObject.beginFill(0, 0);\n  this._pixiObject.lineStyle(\n    3,\n    rgbToHexNumber(\n      particleEmitterObject.getParticleRed2(),\n      particleEmitterObject.getParticleGreen2(),\n      particleEmitterObject.getParticleBlue2()\n    ),\n    1\n  );\n  this._pixiObject.moveTo(0, 0);\n  this._pixiObject.lineTo(\n    Math.cos(line1Angle) * length,\n    Math.sin(line1Angle) * length\n  );\n  this._pixiObject.moveTo(0, 0);\n  this._pixiObject.lineTo(\n    Math.cos(line2Angle) * length,\n    Math.sin(line2Angle) * length\n  );\n  this._pixiObject.endFill();\n\n  this._pixiObject.lineStyle(0, 0x000000, 1);\n  this._pixiObject.beginFill(\n    rgbToHexNumber(\n      particleEmitterObject.getParticleRed1(),\n      particleEmitterObject.getParticleGreen1(),\n      particleEmitterObject.getParticleBlue1()\n    )\n  );\n  this._pixiObject.drawCircle(0, 0, 8);\n  this._pixiObject.endFill();\n};\n\nRenderedParticleEmitterInstance.prototype.getDefaultWidth = function() {\n  return 128;\n};\n\nRenderedParticleEmitterInstance.prototype.getDefaultHeight = function() {\n  return 128;\n};\n\nRenderedParticleEmitterInstance.prototype.getOriginX = function() {\n  return 64;\n};\n\nRenderedParticleEmitterInstance.prototype.getOriginY = function() {\n  return 64;\n};\n\nexport default RenderedParticleEmitterInstance;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport React, { Component } from 'react';\nimport { Line, Column } from '../../UI/Grid';\nimport {\n  type ParameterFieldProps,\n  getParameterValueOrDefault,\n} from './ParameterFieldCommons';\nimport { focusButton } from '../../UI/Button';\nimport Text from '../../UI/Text';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { MarkdownText } from '../../UI/MarkdownText';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  description: {\n    marginRight: 5,\n  },\n};\n\nexport default class YesNoField extends Component<ParameterFieldProps, void> {\n  _yesButton = React.createRef<Button>();\n\n  focus() {\n    focusButton(this._yesButton);\n  }\n\n  render() {\n    const { parameterMetadata, value } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : null;\n    const longDescription = parameterMetadata\n      ? parameterMetadata.getLongDescription()\n      : null;\n    const effectiveValue = getParameterValueOrDefault(value, parameterMetadata);\n\n    return (\n      <Column noMargin>\n        <Line alignItems=\"center\" justifyContent=\"space-between\">\n          <Text style={styles.description} displayInlineAsSpan>\n            {description}\n          </Text>\n          <ButtonGroup>\n            <Button\n              variant={effectiveValue === 'yes' ? 'contained' : 'outlined'}\n              color={effectiveValue === 'yes' ? 'secondary' : 'default'}\n              onClick={() => this.props.onChange('yes')}\n              ref={this._yesButton}\n            >\n              <Trans>Yes</Trans>\n            </Button>\n            <Button\n              variant={effectiveValue !== 'yes' ? 'contained' : 'outlined'}\n              color={effectiveValue !== 'yes' ? 'secondary' : 'default'}\n              onClick={() => this.props.onChange('no')}\n            >\n              <Trans>No</Trans>\n            </Button>\n          </ButtonGroup>\n        </Line>\n        {longDescription ? (\n          <FormHelperText variant=\"filled\" margin=\"dense\">\n            <MarkdownText source={longDescription} />\n          </FormHelperText>\n        ) : null}\n      </Column>\n    );\n  }\n}\n\nexport const renderInlineYesNo = ({\n  value,\n  parameterMetadata,\n}: ParameterInlineRendererProps) => {\n  if (getParameterValueOrDefault(value, parameterMetadata) === 'yes') {\n    return <Trans>yes</Trans>;\n  } else {\n    return <Trans>no</Trans>;\n  }\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport React, { Component } from 'react';\nimport { Line, Column } from '../../UI/Grid';\nimport {\n  type ParameterFieldProps,\n  getParameterValueOrDefault,\n} from './ParameterFieldCommons';\nimport { focusButton } from '../../UI/Button';\nimport Text from '../../UI/Text';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { MarkdownText } from '../../UI/MarkdownText';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  description: {\n    marginRight: 5,\n  },\n};\n\nexport default class TrueFalseField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _trueButton = React.createRef<Button>();\n\n  focus() {\n    focusButton(this._trueButton);\n  }\n\n  render() {\n    const { parameterMetadata, value } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n    const longDescription = parameterMetadata\n      ? parameterMetadata.getLongDescription()\n      : null;\n    const effectiveValue = getParameterValueOrDefault(value, parameterMetadata);\n\n    return (\n      <Column noMargin>\n        <Line alignItems=\"center\" justifyContent=\"space-between\">\n          <Text style={styles.description} displayInlineAsSpan>\n            {description}\n          </Text>\n          <ButtonGroup>\n            <Button\n              variant={effectiveValue === 'True' ? 'contained' : 'outlined'}\n              color={effectiveValue === 'True' ? 'secondary' : 'default'}\n              onClick={() => this.props.onChange('True')}\n              ref={this._trueButton}\n            >\n              <Trans>True</Trans>\n            </Button>\n            <Button\n              variant={effectiveValue !== 'True' ? 'contained' : 'outlined'}\n              color={effectiveValue !== 'True' ? 'secondary' : 'default'}\n              onClick={() => this.props.onChange('False')}\n            >\n              <Trans>False</Trans>\n            </Button>\n          </ButtonGroup>\n        </Line>\n        {longDescription ? (\n          <FormHelperText variant=\"filled\" margin=\"dense\">\n            <MarkdownText source={longDescription} />\n          </FormHelperText>\n        ) : null}\n      </Column>\n    );\n  }\n}\n\nexport const renderInlineTrueFalse = ({\n  value,\n  parameterMetadata,\n}: ParameterInlineRendererProps) => {\n  if (getParameterValueOrDefault(value, parameterMetadata) === 'True') {\n    return <Trans>true</Trans>;\n  } else {\n    return <Trans>false</Trans>;\n  }\n};\n","// @flow\nimport React, { Component } from 'react';\nimport GenericExpressionField from './GenericExpressionField';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\nexport default class ExpressionField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?GenericExpressionField;\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  render() {\n    return (\n      <GenericExpressionField\n        expressionType=\"number\"\n        ref={field => (this._field = field)}\n        {...this.props}\n      />\n    );\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport { enumerateAllExpressions } from '../../../InstructionOrExpression/EnumerateExpressions';\nimport InstructionOrExpressionSelector from './index';\nimport {\n  createTree,\n  type ExpressionTreeNode,\n} from '../../../InstructionOrExpression/CreateTree';\nimport {\n  type EnumeratedExpressionMetadata,\n  filterEnumeratedInstructionOrExpressionMetadataByScope,\n} from '../../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\nimport { type EventsScope } from '../../../InstructionOrExpression/EventsScope.flow';\n\ntype Props = {|\n  expressionType: string,\n  focusOnMount?: boolean,\n  selectedType: string,\n  onChoose: (type: string, EnumeratedExpressionMetadata) => void,\n  scope: EventsScope,\n|};\n\nconst style = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n};\n\nexport default class ExpressionSelector extends Component<Props, {||}> {\n  instructionsInfo: Array<EnumeratedExpressionMetadata> = filterEnumeratedInstructionOrExpressionMetadataByScope(\n    enumerateAllExpressions(this.props.expressionType),\n    this.props.scope\n  );\n  instructionsInfoTree: ExpressionTreeNode = createTree(this.instructionsInfo);\n\n  render() {\n    const { expressionType, scope, ...otherProps } = this.props;\n    return (\n      <InstructionOrExpressionSelector\n        style={style}\n        instructionsInfo={this.instructionsInfo}\n        instructionsInfoTree={this.instructionsInfoTree}\n        iconSize={16}\n        useSubheaders\n        helpPagePath=\"/all-features/expressions-reference\"\n        {...otherProps}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type EventsScope } from '../../../InstructionOrExpression/EventsScope.flow';\nimport React, { Component } from 'react';\nimport FlatButton from '../../../UI/FlatButton';\nimport ExpressionParametersEditor from './ExpressionParametersEditor';\nimport Dialog from '../../../UI/Dialog';\nimport Text from '../../../UI/Text';\nimport { Column } from '../../../UI/Grid';\n\nexport type ParameterValues = Array<string>;\n\nconst styles = {\n  minHeightContainer: {\n    // Use a minimum height that is large enough so that ExpressionSelector in\n    // GenericExpressionField can fit and display entirely.\n    minHeight: 300,\n    flex: 1,\n    flexDirection: 'column',\n  },\n};\n\ntype Props = {\n  project?: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  expressionMetadata: gdExpressionMetadata,\n  onDone: ParameterValues => void,\n  onRequestClose: () => void,\n  parameterRenderingService?: {\n    components: any,\n    getParameterComponent: (type: string) => any,\n  },\n};\n\ntype State = {\n  parameterValues: ParameterValues,\n};\n\nexport default class ExpressionParametersEditorDialog extends Component<\n  Props,\n  State\n> {\n  state = {\n    parameterValues: Array(\n      this.props.expressionMetadata.getParametersCount()\n    ).fill(''),\n  };\n\n  render() {\n    const {\n      project,\n      scope,\n      globalObjectsContainer,\n      objectsContainer,\n      expressionMetadata,\n      parameterRenderingService,\n    } = this.props;\n\n    return (\n      <Dialog\n        title={<Trans>Enter the expression parameters</Trans>}\n        cannotBeDismissed={true}\n        open\n        actions={[\n          <FlatButton\n            key=\"apply\"\n            label={<Trans>Apply</Trans>}\n            primary\n            onClick={() => this.props.onDone(this.state.parameterValues)}\n          />,\n        ]}\n        noMargin\n        onRequestClose={this.props.onRequestClose}\n      >\n        <Column>\n          <div style={styles.minHeightContainer}>\n            <Text>{expressionMetadata.getDescription()}</Text>\n            <ExpressionParametersEditor\n              project={project}\n              scope={scope}\n              globalObjectsContainer={globalObjectsContainer}\n              objectsContainer={objectsContainer}\n              expressionMetadata={expressionMetadata}\n              parameterValues={this.state.parameterValues}\n              onChangeParameter={(editedIndex, value) => {\n                this.setState({\n                  parameterValues: this.state.parameterValues.map(\n                    (oldValue, index) =>\n                      index === editedIndex ? value : oldValue\n                  ),\n                });\n              }}\n              parameterRenderingService={parameterRenderingService}\n            />\n          </div>\n        </Column>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\n\nexport type Highlight = {|\n  begin: number,\n  end: number,\n  type?: 'error',\n  message: string,\n|};\n\ntype Props = {|\n  value: string,\n  style: Object,\n  highlights: Array<Highlight>,\n|};\n\nconst defaultStyle = {\n  width: '100%',\n  position: 'absolute',\n  whiteSpace: 'pre-wrap',\n  wordWrap: 'break-word',\n  color: 'transparent',\n};\n\nconst highlightedText = {\n  backgroundColor: 'rgba(244, 67, 54, 0.15)',\n  borderSizing: 'border-box',\n  borderBottom: '3px solid rgba(244, 67, 54, 0.7)',\n};\n\nexport default ({ value, style, highlights }: Props) => {\n  const sortedHighlights = highlights\n    .slice()\n    .sort((highlight1, highlight2) => highlight1.begin - highlight2.begin);\n\n  const elements = [];\n  let lastPos = 0;\n\n  sortedHighlights.forEach((highlight, i) => {\n    const startPos = Math.max(highlight.begin, lastPos);\n    if (startPos !== lastPos) {\n      elements.push(\n        <span key={`defaultText-${i}`}>\n          {value.substring(lastPos, startPos)}\n        </span>\n      );\n    }\n\n    if (lastPos < highlight.end) {\n      elements.push(\n        <span key={`highlightedText-${i}`} style={highlightedText}>\n          {value.substring(startPos, highlight.end)}\n        </span>\n      );\n      lastPos = highlight.end;\n    }\n  });\n  if (lastPos < value.length) {\n    elements.push(\n      <span key={`defaultText-end`}>{value.substring(lastPos)}</span>\n    );\n  }\n\n  return <div style={{ ...defaultStyle, ...style }}>{elements}</div>;\n};\n","// @flow\nimport { mapFor, mapVector } from '../Utils/MapFor';\nimport {\n  enumerateObjectsAndGroups,\n  filterObjectsList,\n  filterGroupsList,\n} from '../ObjectsList/EnumerateObjects';\nimport { enumerateVariables } from '../EventsSheet/ParameterFields/EnumerateVariables';\nimport flatten from 'lodash/flatten';\nimport { type EventsScope } from '../InstructionOrExpression/EventsScope.flow';\nimport {\n  enumerateFreeExpressions,\n  filterExpressions,\n  enumerateObjectExpressions,\n  enumerateBehaviorExpressions,\n} from '../InstructionOrExpression/EnumerateExpressions';\nimport {\n  type EnumeratedExpressionMetadata,\n  filterEnumeratedInstructionOrExpressionMetadataByScope,\n} from '../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata';\nimport { getVisibleParameterTypes } from '../EventsSheet/ParameterFields/GenericExpressionField/FormatExpressionCall';\nimport { getParameterChoices } from '../EventsSheet/ParameterFields/ParameterMetadataTools';\nimport getObjectByName from '../Utils/GetObjectByName';\nimport { getAllPointNames } from '../ObjectEditor/Editors/SpriteEditor/Utils/SpriteObjectHelper';\nimport { enumerateParametersUsableInExpressions } from '../EventsSheet/ParameterFields/EnumerateFunctionParameters';\n\nconst gd: libGDevelop = global.gd;\n\ntype BaseExpressionAutocompletion = {|\n  completion: string,\n  replacementStartPosition?: number,\n  replacementEndPosition?: number,\n  addParenthesis?: boolean,\n  addDot?: boolean,\n  addParameterSeparator?: boolean,\n  addNamespaceSeparator?: boolean,\n  hasVisibleParameters?: boolean,\n  isExact?: boolean,\n|};\n\nexport type ExpressionAutocompletion =\n  | {|\n      ...BaseExpressionAutocompletion,\n      kind: 'Expression',\n      enumeratedExpressionMetadata: EnumeratedExpressionMetadata,\n    |}\n  | {|\n      ...BaseExpressionAutocompletion,\n      kind: 'Text',\n    |}\n  | {|\n      ...BaseExpressionAutocompletion,\n      kind: 'Variable',\n    |}\n  | {|\n      ...BaseExpressionAutocompletion,\n      object?: gdObject,\n      kind: 'Object',\n    |}\n  | {|\n      ...BaseExpressionAutocompletion,\n      kind: 'Behavior',\n    |};\n\ntype ExpressionAutocompletionContext = {|\n  gd: libGDevelop,\n  project: gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  scope: EventsScope,\n|};\n\nconst filterStringList = (\n  list: Array<string>,\n  searchText: string\n): Array<string> => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list.filter((text: string) => {\n    return text.toLowerCase().indexOf(lowercaseSearchText) !== -1;\n  });\n};\n\nconst getAutocompletionsForExpressions = (\n  expressionMetadatas: Array<EnumeratedExpressionMetadata>,\n  prefix: string,\n  replacementStartPosition: number,\n  replacementEndPosition: number,\n  isExact: boolean\n): Array<ExpressionAutocompletion> => {\n  return expressionMetadatas\n    .filter(\n      enumeratedExpressionMetadata =>\n        !isExact || enumeratedExpressionMetadata.type === prefix\n    )\n    .map(enumeratedExpressionMetadata => {\n      // All enumeratedExpressionMetadata should have a name.\n      if (\n        !enumeratedExpressionMetadata.name ||\n        !enumeratedExpressionMetadata.parameters\n      )\n        return null;\n\n      return {\n        kind: 'Expression',\n        completion: enumeratedExpressionMetadata.name,\n        replacementStartPosition,\n        replacementEndPosition,\n        enumeratedExpressionMetadata: enumeratedExpressionMetadata,\n        addParenthesis: true,\n        hasVisibleParameters:\n          getVisibleParameterTypes(enumeratedExpressionMetadata).length !== 0,\n        isExact,\n      };\n    })\n    .filter(Boolean);\n};\n\nconst getAutocompletionsForFreeExpressions = function(\n  expressionAutocompletionContext: ExpressionAutocompletionContext,\n  completionDescription: gdExpressionCompletionDescription\n): Array<ExpressionAutocompletion> {\n  const prefix: string = completionDescription.getPrefix();\n  const type: string = completionDescription.getType();\n  const isExact: boolean = completionDescription.isExact();\n\n  const freeExpressions = enumerateFreeExpressions(type);\n\n  const filteredFreeExpressions = filterEnumeratedInstructionOrExpressionMetadataByScope(\n    filterExpressions(freeExpressions, prefix),\n    expressionAutocompletionContext.scope\n  );\n  return getAutocompletionsForExpressions(\n    filteredFreeExpressions,\n    prefix,\n    completionDescription.getReplacementStartPosition(),\n    completionDescription.getReplacementEndPosition(),\n    isExact\n  );\n};\n\nconst getAutocompletionsForObjectExpressions = function(\n  expressionAutocompletionContext: ExpressionAutocompletionContext,\n  completionDescription: gdExpressionCompletionDescription\n): Array<ExpressionAutocompletion> {\n  const prefix: string = completionDescription.getPrefix();\n  const type: string = completionDescription.getType();\n  const objectName: string = completionDescription.getObjectName();\n  const isExact: boolean = completionDescription.isExact();\n  const {\n    gd,\n    globalObjectsContainer,\n    objectsContainer,\n  } = expressionAutocompletionContext;\n\n  const objectType: string = gd.getTypeOfObject(\n    globalObjectsContainer,\n    objectsContainer,\n    objectName,\n    /* searchInGroups= */ true\n  );\n  const objectExpressions = enumerateObjectExpressions(type, objectType);\n  const filteredObjectExpressions = filterEnumeratedInstructionOrExpressionMetadataByScope(\n    filterExpressions(objectExpressions, prefix),\n    expressionAutocompletionContext.scope\n  );\n\n  return getAutocompletionsForExpressions(\n    filteredObjectExpressions,\n    prefix,\n    completionDescription.getReplacementStartPosition(),\n    completionDescription.getReplacementEndPosition(),\n    isExact\n  );\n};\n\nconst getAutocompletionsForBehaviorExpressions = function(\n  expressionAutocompletionContext: ExpressionAutocompletionContext,\n  completionDescription: gdExpressionCompletionDescription\n): Array<ExpressionAutocompletion> {\n  const prefix: string = completionDescription.getPrefix();\n  const type: string = completionDescription.getType();\n  const behaviorName: string = completionDescription.getBehaviorName();\n  const isExact: boolean = completionDescription.isExact();\n  const {\n    gd,\n    globalObjectsContainer,\n    objectsContainer,\n  } = expressionAutocompletionContext;\n\n  // TODO: could be made more precise with the object name\n  const behaviorType = gd.getTypeOfBehavior(\n    globalObjectsContainer,\n    objectsContainer,\n    behaviorName,\n    /* searchInGroups= */ true\n  );\n\n  const behaviorExpressions = enumerateBehaviorExpressions(type, behaviorType);\n\n  const filteredBehaviorExpressions = filterEnumeratedInstructionOrExpressionMetadataByScope(\n    filterExpressions(behaviorExpressions, prefix),\n    expressionAutocompletionContext.scope\n  );\n\n  return getAutocompletionsForExpressions(\n    filteredBehaviorExpressions,\n    prefix,\n    completionDescription.getReplacementStartPosition(),\n    completionDescription.getReplacementEndPosition(),\n    isExact\n  );\n};\n\nconst getAutocompletionsForObject = function(\n  expressionAutocompletionContext: ExpressionAutocompletionContext,\n  completionDescription: gdExpressionCompletionDescription\n): Array<ExpressionAutocompletion> {\n  const prefix: string = completionDescription.getPrefix();\n  const type: string = completionDescription.getType();\n  const {\n    gd,\n    globalObjectsContainer,\n    objectsContainer,\n  } = expressionAutocompletionContext;\n\n  const { allObjectsList, allGroupsList } = enumerateObjectsAndGroups(\n    globalObjectsContainer,\n    objectsContainer\n  );\n\n  // We hide exact matches to prevent suggesting options already fully typed.\n  const filteredObjectsList = filterObjectsList(allObjectsList, {\n    searchText: prefix,\n    selectedTags: [],\n    hideExactMatches: true,\n  });\n  const filteredGroupsList = filterGroupsList(allGroupsList, {\n    searchText: prefix,\n    hideExactMatches: true,\n  });\n\n  // If we expect an object, don't add a dot. Otherwise (number, string...),\n  // add a dot to prepare for an object function.\n  const addDot = !gd.ParameterMetadata.isObject(type);\n\n  return [\n    ...filteredObjectsList.map(({ object }) => ({\n      kind: 'Object',\n      completion: object.getName(),\n      replacementStartPosition: completionDescription.getReplacementStartPosition(),\n      replacementEndPosition: completionDescription.getReplacementEndPosition(),\n      object,\n      addDot,\n    })),\n    ...filteredGroupsList.map(({ group }) => ({\n      kind: 'Object',\n      completion: group.getName(),\n      replacementStartPosition: completionDescription.getReplacementStartPosition(),\n      replacementEndPosition: completionDescription.getReplacementEndPosition(),\n      addDot,\n    })),\n  ];\n};\n\nconst getAutocompletionsForText = function(\n  expressionAutocompletionContext: ExpressionAutocompletionContext,\n  completionDescription: gdExpressionCompletionDescription\n): Array<ExpressionAutocompletion> {\n  const prefix: string = completionDescription.getPrefix();\n  const type: string = completionDescription.getType();\n  const { project, scope } = expressionAutocompletionContext;\n\n  let autocompletionTexts: string[] = [];\n  if (type === 'layer') {\n    const layout = scope.layout;\n    if (layout) {\n      for (let index = 0; index < layout.getLayersCount(); index++) {\n        autocompletionTexts.push(`\"${layout.getLayerAt(index).getName()}\"`);\n      }\n    }\n  } else if (type === 'sceneName') {\n    if (project) {\n      for (let index = 0; index < project.getLayoutsCount(); index++) {\n        autocompletionTexts.push(`\"${project.getLayoutAt(index).getName()}\"`);\n      }\n    }\n  } else if (type === 'stringWithSelector') {\n    autocompletionTexts = getParameterChoices(\n      completionDescription.getParameterMetadata()\n    ).map(autocompletion => autocompletion.completion);\n  } else if (type === 'objectPointName') {\n    const objectName: string = completionDescription.getObjectName();\n    if (!objectName) {\n      return [];\n    }\n\n    const object = getObjectByName(project, scope.layout, objectName);\n    if (!object) {\n      return [];\n    }\n\n    if (object.getType() === 'Sprite') {\n      const spriteObject = gd.asSpriteObject(object);\n\n      autocompletionTexts = getAllPointNames(spriteObject)\n        .map(spriteObjectName =>\n          spriteObjectName.length > 0 ? `\"${spriteObjectName}\"` : null\n        )\n        .filter(Boolean);\n    } else {\n      return [];\n    }\n  } else if (type === 'objectAnimationName') {\n    const objectName: string = completionDescription.getObjectName();\n    if (!objectName) {\n      return [];\n    }\n\n    const object = getObjectByName(project, scope.layout, objectName);\n    if (!object) {\n      return [];\n    }\n\n    if (object.getType() === 'Sprite') {\n      const spriteObject = gd.asSpriteObject(object);\n\n      autocompletionTexts = mapFor(\n        0,\n        spriteObject.getAnimationsCount(),\n        index => {\n          const animationName = spriteObject.getAnimation(index).getName();\n          return animationName.length > 0 ? `\"${animationName}\"` : null;\n        }\n      ).filter(Boolean);\n    } else {\n      return [];\n    }\n  } else if (type === 'functionParameterName') {\n    if (scope.eventsFunction) {\n      autocompletionTexts = enumerateParametersUsableInExpressions(\n        scope.eventsFunction\n      ).map(parameterMetadata => `\"${parameterMetadata.getName()}\"`);\n    }\n  }\n  // To add missing string types see Core\\GDCore\\Extensions\\Metadata\\ParameterMetadata.h\n\n  const filteredTextList = filterStringList(autocompletionTexts, prefix).sort();\n\n  const isLastParameter = completionDescription.isLastParameter();\n  return filteredTextList.map(text => ({\n    kind: 'Text',\n    completion: text,\n    replacementStartPosition: completionDescription.getReplacementStartPosition(),\n    replacementEndPosition: completionDescription.getReplacementEndPosition(),\n    addParameterSeparator: !isLastParameter,\n  }));\n};\n\nconst getAutocompletionsForVariable = function(\n  expressionAutocompletionContext: ExpressionAutocompletionContext,\n  completionDescription: gdExpressionCompletionDescription\n): Array<ExpressionAutocompletion> {\n  const prefix: string = completionDescription.getPrefix();\n  const type: string = completionDescription.getType();\n  const objectName: string = completionDescription.getObjectName();\n  const { project, scope } = expressionAutocompletionContext;\n  const layout = scope.layout;\n\n  let variablesContainer: gdVariablesContainer;\n  if (type === 'globalvar') {\n    if (!project) {\n      // No variable completion\n      return [];\n    }\n    variablesContainer = project.getVariables();\n  } else if (type === 'scenevar') {\n    if (!layout) {\n      // No variable completion\n      return [];\n    }\n    variablesContainer = layout.getVariables();\n  } else if (type === 'objectvar') {\n    const object = getObjectByName(project, layout, objectName);\n    if (!object) {\n      // No variable completion for unknown objet\n      return [];\n    }\n    variablesContainer = object.getVariables();\n  }\n\n  const definedVariableNames = enumerateVariables(variablesContainer)\n    .map(({ name, isValidName }) =>\n      isValidName\n        ? name\n        : // Hide invalid variable names - they would not\n          // be parsed correctly anyway.\n          null\n    )\n    .filter(Boolean);\n\n  const filteredVariablesList = filterStringList(definedVariableNames, prefix);\n\n  return filteredVariablesList.map(variableName => ({\n    kind: 'Variable',\n    completion: variableName,\n    replacementStartPosition: completionDescription.getReplacementStartPosition(),\n    replacementEndPosition: completionDescription.getReplacementEndPosition(),\n  }));\n};\n\nconst getAutocompletionsForBehavior = function(\n  expressionAutocompletionContext: ExpressionAutocompletionContext,\n  completionDescription: gdExpressionCompletionDescription\n): Array<ExpressionAutocompletion> {\n  const prefix: string = completionDescription.getPrefix();\n  const isExact: boolean = completionDescription.isExact();\n  const objectName: string = completionDescription.getObjectName();\n\n  const {\n    gd,\n    globalObjectsContainer,\n    objectsContainer,\n  } = expressionAutocompletionContext;\n  return gd\n    .getBehaviorsOfObject(\n      globalObjectsContainer,\n      objectsContainer,\n      objectName,\n      true\n    )\n    .toJSArray()\n    .filter(behaviorName => behaviorName.indexOf(prefix) !== -1)\n    .map(behaviorName => ({\n      kind: 'Behavior',\n      completion: behaviorName,\n      replacementStartPosition: completionDescription.getReplacementStartPosition(),\n      replacementEndPosition: completionDescription.getReplacementEndPosition(),\n      addNamespaceSeparator: true,\n      isExact,\n    }));\n};\n\nexport const getAutocompletionsFromDescriptions = (\n  expressionAutocompletionContext: ExpressionAutocompletionContext,\n  expressionCompletionDescriptions: gdVectorExpressionCompletionDescription\n): Array<ExpressionAutocompletion> => {\n  const { gd } = expressionAutocompletionContext;\n\n  return flatten(\n    mapVector(expressionCompletionDescriptions, completionDescription => {\n      const completionKind = completionDescription.getCompletionKind();\n\n      if (completionKind === gd.ExpressionCompletionDescription.Expression) {\n        const objectName: string = completionDescription.getObjectName();\n        const behaviorName: string = completionDescription.getBehaviorName();\n\n        if (behaviorName) {\n          return getAutocompletionsForBehaviorExpressions(\n            expressionAutocompletionContext,\n            completionDescription\n          );\n        } else if (objectName) {\n          return getAutocompletionsForObjectExpressions(\n            expressionAutocompletionContext,\n            completionDescription\n          );\n        } else {\n          return getAutocompletionsForFreeExpressions(\n            expressionAutocompletionContext,\n            completionDescription\n          );\n        }\n      } else if (completionKind === gd.ExpressionCompletionDescription.Object) {\n        return getAutocompletionsForObject(\n          expressionAutocompletionContext,\n          completionDescription\n        );\n      } else if (\n        completionKind === gd.ExpressionCompletionDescription.Behavior\n      ) {\n        return getAutocompletionsForBehavior(\n          expressionAutocompletionContext,\n          completionDescription\n        );\n      } else if (completionKind === gd.ExpressionCompletionDescription.Text) {\n        return getAutocompletionsForText(\n          expressionAutocompletionContext,\n          completionDescription\n        );\n      } else if (\n        completionKind === gd.ExpressionCompletionDescription.Variable\n      ) {\n        return getAutocompletionsForVariable(\n          expressionAutocompletionContext,\n          completionDescription\n        );\n      }\n\n      return [];\n    })\n  );\n};\n\ntype InsertedAutocompletion = {|\n  completion: string,\n  replacementStartPosition?: number,\n  replacementEndPosition?: number,\n  addParenthesis?: ?boolean,\n  hasVisibleParameters?: ?boolean,\n  addDot?: ?boolean,\n  addParameterSeparator?: ?boolean,\n  addNamespaceSeparator?: ?boolean,\n|};\n\ntype ExpressionAndCaretLocation = {|\n  expression: string,\n  caretLocation: number,\n|};\n\nexport const insertAutocompletionInExpression = (\n  { expression, caretLocation }: ExpressionAndCaretLocation,\n  insertedAutocompletion: InsertedAutocompletion\n): ExpressionAndCaretLocation => {\n  const formatCompletion = (nextCharacter: ?string) => {\n    const suffix = insertedAutocompletion.addDot\n      ? '.'\n      : insertedAutocompletion.addParameterSeparator\n      ? ', '\n      : insertedAutocompletion.addNamespaceSeparator\n      ? '::'\n      : insertedAutocompletion.addParenthesis\n      ? '()'\n      : '';\n\n    const addSuffix =\n      !nextCharacter || !suffix || nextCharacter[0] !== suffix[0];\n\n    return insertedAutocompletion.completion + (addSuffix ? suffix : '');\n  };\n\n  if (caretLocation > expression.length) {\n    caretLocation = expression.length;\n  }\n\n  if (caretLocation === 0 || !expression) {\n    const newExpression = formatCompletion(undefined) + expression;\n    return {\n      caretLocation: newExpression.length,\n      expression: newExpression,\n    };\n  }\n\n  const wordStartPosition: number = insertedAutocompletion.replacementStartPosition\n    ? insertedAutocompletion.replacementStartPosition\n    : 0;\n  const wordEndPosition: number = insertedAutocompletion.replacementEndPosition\n    ? insertedAutocompletion.replacementEndPosition\n    : expression.length;\n\n  // The next character, if any, will be useful to format the completion\n  // (to avoid repeating an existing character).\n  const maybeNextCharacter: ?string = expression[wordEndPosition];\n\n  const newExpressionStart = expression.substring(0, wordStartPosition);\n  const insertedWord = formatCompletion(maybeNextCharacter);\n  const newExpressionEnd = expression.substring(wordEndPosition);\n  const newExpression = newExpressionStart + insertedWord + newExpressionEnd;\n  let newCaretLocation = newExpressionStart.length + insertedWord.length;\n  if (\n    insertedAutocompletion.addParenthesis &&\n    insertedAutocompletion.hasVisibleParameters\n  ) {\n    newCaretLocation = newCaretLocation - 1;\n  }\n\n  return {\n    caretLocation: newCaretLocation,\n    expression: newExpression,\n  };\n};\n","// @flow\nimport { type ExpressionAutocompletion } from '../../../ExpressionAutocompletion';\nimport {\n  shouldCloseOrCancel,\n  shouldValidate,\n  shouldFocusNextField,\n} from '../../../UI/KeyboardShortcuts/InteractionKeys';\n\nexport type AutocompletionsState = {|\n  autocompletions: Array<ExpressionAutocompletion>,\n  selectedCompletionIndex: number,\n|};\n\nexport const getAutocompletionsInitialState = (): AutocompletionsState => {\n  return {\n    autocompletions: [],\n    selectedCompletionIndex: 0,\n  };\n};\n\nconst MAX_VISIBLE_COUNT = 25;\n\nexport const getRemainingCount = (state: AutocompletionsState): number => {\n  return Math.max(0, state.autocompletions.length - MAX_VISIBLE_COUNT);\n};\n\nexport const getVisibleAutocompletions = (\n  state: AutocompletionsState\n): Array<ExpressionAutocompletion> => {\n  const remainingCount = getRemainingCount(state);\n  return remainingCount === 0\n    ? state.autocompletions\n    : state.autocompletions.slice(0, MAX_VISIBLE_COUNT);\n};\n\nexport const setNewAutocompletions = (\n  state: AutocompletionsState,\n  autocompletions: Array<ExpressionAutocompletion>\n): AutocompletionsState => {\n  const completionsChanged =\n    state.autocompletions.length !== autocompletions.length;\n\n  // Reset the selected completion only if completions changed.\n  const selectedCompletionIndex = completionsChanged\n    ? 0\n    : state.selectedCompletionIndex;\n\n  return {\n    autocompletions,\n    selectedCompletionIndex,\n  };\n};\n\nexport const handleAutocompletionsKeyDown = (\n  state: AutocompletionsState,\n  {\n    event,\n    onUpdateAutocompletions,\n    onInsertAutocompletion,\n  }: {|\n    event: SyntheticKeyboardEvent<>,\n    onUpdateAutocompletions: () => void,\n    onInsertAutocompletion: ExpressionAutocompletion => void,\n  |}\n): AutocompletionsState => {\n  if (\n    event.key === 'ArrowDown' ||\n    event.key === 'ArrowUp' ||\n    event.key === 'ArrowLeft' ||\n    event.key === 'ArrowRight'\n  ) {\n    onUpdateAutocompletions();\n  }\n\n  if (!state.autocompletions.length) return state;\n\n  const visibleAutocompletionsLength = Math.min(\n    MAX_VISIBLE_COUNT,\n    state.autocompletions.length\n  );\n\n  if (event.key === 'ArrowDown') {\n    event.preventDefault();\n\n    return {\n      ...state,\n      selectedCompletionIndex:\n        (state.selectedCompletionIndex + 1) % visibleAutocompletionsLength,\n    };\n  } else if (event.key === 'ArrowUp') {\n    event.preventDefault();\n\n    return {\n      ...state,\n      selectedCompletionIndex:\n        (visibleAutocompletionsLength + state.selectedCompletionIndex - 1) %\n        visibleAutocompletionsLength,\n    };\n  } else if (shouldCloseOrCancel(event)) {\n    // Stop propagation to avoid closing the modal the\n    // field is contained in.\n    event.preventDefault();\n    event.stopPropagation();\n\n    return getAutocompletionsInitialState();\n  } else if (shouldValidate(event) || shouldFocusNextField(event)) {\n    const autocompletion = state.autocompletions[state.selectedCompletionIndex];\n    if (autocompletion) {\n      // Don't prevent the default behavior when an exact completion is shown,\n      // the user should be able to freely move to the next line.\n      if (autocompletion.isExact) return state;\n      onInsertAutocompletion(autocompletion);\n    }\n\n    // Avoid entering a new line or tabbing to the next field.\n    event.preventDefault();\n  }\n\n  return state;\n};\n","// @flow\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport muiZIndex from '@material-ui/core/styles/zIndex';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { type ExpressionAutocompletion } from '../../../ExpressionAutocompletion';\nimport Text from '../../../UI/Text';\nimport ScrollView, { type ScrollViewInterface } from '../../../UI/ScrollView';\nimport { getVisibleParameterTypes } from './FormatExpressionCall';\nimport { type ParameterRenderingServiceType } from '../ParameterFieldCommons';\nimport { type EnumeratedInstructionOrExpressionMetadata } from '../../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata';\nimport { Column, Line, Spacer } from '../../../UI/Grid';\nimport ObjectsRenderingService from '../../../ObjectsRendering/ObjectsRenderingService';\n\nconst defaultTextStyle = {\n  // Break words if they are too long to fit on a single line.\n  overflow: 'hidden',\n  overflowWrap: 'break-word',\n};\n\nconst AutocompletionIcon = React.memo(({ src }) => (\n  <img\n    alt=\"\"\n    src={src}\n    style={{\n      maxWidth: 16,\n      maxHeight: 16,\n    }}\n  />\n));\n\nconst formatParameterTypesString = (\n  parameterRenderingService: ParameterRenderingServiceType,\n  i18n: I18nType,\n  enumeratedExpressionMetadata: EnumeratedInstructionOrExpressionMetadata\n) => {\n  return getVisibleParameterTypes(enumeratedExpressionMetadata)\n    .map(type => {\n      const userFriendlyName = parameterRenderingService.getUserFriendlyTypeName(\n        type\n      );\n\n      return userFriendlyName ? i18n._(userFriendlyName) : type;\n    })\n    .join(', ');\n};\n\nconst DisplayedTextAutocompletion = React.forwardRef(\n  (\n    {\n      expressionAutocompletion,\n      isSelected,\n      onClick,\n    }: {|\n      expressionAutocompletion: ExpressionAutocompletion,\n      isSelected: boolean,\n      onClick: () => void,\n    |},\n    ref\n  ) => (\n    <ButtonBase\n      style={styles.button}\n      onPointerDown={() => {\n        // Trigger the onClick on the mouse/touch down\n        // to avoid the blur event of the text field to discard the autocompletions.\n        onClick();\n      }}\n      ref={ref}\n    >\n      <Text style={defaultTextStyle} noMargin align=\"left\">\n        {isSelected ? (\n          <b>{expressionAutocompletion.completion}</b>\n        ) : (\n          expressionAutocompletion.completion\n        )}\n      </Text>\n    </ButtonBase>\n  )\n);\n\nconst DisplayedExpressionAutocompletion = React.forwardRef(\n  (\n    {\n      expressionAutocompletion,\n      isSelected,\n      onClick,\n      i18n,\n      parameterRenderingService,\n    }: {|\n      expressionAutocompletion: ExpressionAutocompletion,\n      isSelected: boolean,\n      onClick: () => void,\n      i18n: I18nType,\n      parameterRenderingService: ParameterRenderingServiceType,\n    |},\n    ref\n  ) => {\n    if (!expressionAutocompletion.enumeratedExpressionMetadata) return null;\n\n    const title = isSelected ? (\n      <b>{expressionAutocompletion.completion}</b>\n    ) : (\n      expressionAutocompletion.completion\n    );\n\n    return (\n      <ButtonBase\n        style={styles.button}\n        onPointerDown={() => {\n          // Trigger the onClick on the mouse/touch down\n          // to avoid the blur event of the text field to discard the autocompletions.\n          onClick();\n        }}\n        ref={ref}\n      >\n        <AutocompletionIcon\n          src={\n            expressionAutocompletion.enumeratedExpressionMetadata.iconFilename\n          }\n        />\n        <Spacer />\n        <Text style={defaultTextStyle} noMargin align=\"left\">\n          {title}(\n          <i>\n            {formatParameterTypesString(\n              parameterRenderingService,\n              i18n,\n              expressionAutocompletion.enumeratedExpressionMetadata\n            )}\n          </i>\n          )\n        </Text>\n      </ButtonBase>\n    );\n  }\n);\n\nconst DisplayedObjectAutocompletion = React.forwardRef(\n  (\n    {\n      project,\n      expressionAutocompletion,\n      isSelected,\n      onClick,\n    }: {|\n      project: ?gdProject,\n      expressionAutocompletion: ExpressionAutocompletion,\n      isSelected: boolean,\n      onClick: () => void,\n    |},\n    ref\n  ) => {\n    const thumbnail =\n      project && expressionAutocompletion.object\n        ? ObjectsRenderingService.getThumbnail(\n            project,\n            expressionAutocompletion.object\n          )\n        : 'res/types/object.png';\n\n    const title = isSelected ? (\n      <b>{expressionAutocompletion.completion}</b>\n    ) : (\n      expressionAutocompletion.completion\n    );\n\n    return (\n      <ButtonBase\n        style={styles.button}\n        onPointerDown={() => {\n          // Trigger the onClick on the mouse/touch down\n          // to avoid the blur event of the text field to discard the autocompletions.\n          onClick();\n        }}\n        ref={ref}\n      >\n        <AutocompletionIcon src={thumbnail} />\n        <Spacer />\n        <Text style={defaultTextStyle} noMargin align=\"left\">\n          {title}\n        </Text>\n      </ButtonBase>\n    );\n  }\n);\n\nconst DisplayedBehaviorAutocompletion = React.forwardRef(\n  (\n    {\n      expressionAutocompletion,\n      isSelected,\n      onClick,\n    }: {|\n      expressionAutocompletion: ExpressionAutocompletion,\n      isSelected: boolean,\n      onClick: () => void,\n    |},\n    ref\n  ) => {\n    const title = isSelected ? (\n      <b>{expressionAutocompletion.completion}</b>\n    ) : (\n      expressionAutocompletion.completion\n    );\n    return (\n      <ButtonBase\n        style={styles.button}\n        onPointerDown={() => {\n          // Trigger the onClick on the mouse/touch down\n          // to avoid the blur event of the text field to discard the autocompletions.\n          onClick();\n        }}\n        ref={ref}\n      >\n        <AutocompletionIcon src={'res/types/behavior.png'} />\n        <Spacer />\n        <Text style={defaultTextStyle} noMargin align=\"left\">\n          {title}\n        </Text>\n      </ButtonBase>\n    );\n  }\n);\n\ntype Props = {|\n  project: ?gdProject,\n  expressionAutocompletions: Array<ExpressionAutocompletion>,\n  remainingCount: number,\n  selectedCompletionIndex: number,\n  anchorEl: Element,\n  onChoose: (chosenExpressionAutocompletion: ExpressionAutocompletion) => void,\n  parameterRenderingService: ParameterRenderingServiceType,\n|};\n\nconst styles = {\n  container: {\n    width: 370,\n    maxHeight: 150,\n    display: 'flex',\n    overflowX: 'hidden',\n  },\n  button: {\n    width: '100%',\n    paddingLeft: 8,\n    paddingRight: 8,\n    justifyContent: 'flex-start',\n  },\n  tooManyTextContainer: {\n    width: '100%',\n  },\n  popperStyle: {\n    // Ensure the popper is above everything (modal, dialog, snackbar, tooltips, etc).\n    // There will be only one ExpressionAutocompletionsDisplay opened at a time, so it's fair to put the\n    // highest z index. If this is breaking, check the z-index of material-ui.\n    zIndex: muiZIndex.tooltip + 100,\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'row',\n  },\n};\n\nexport default function ExpressionAutocompletionsDisplayer({\n  project,\n  expressionAutocompletions,\n  remainingCount,\n  selectedCompletionIndex,\n  anchorEl,\n  onChoose,\n  parameterRenderingService,\n}: Props) {\n  const scrollView = React.useRef((null: ?ScrollViewInterface));\n  const selectedAutocompletionElement = React.useRef(\n    (null: ?React$Component<any, any>)\n  );\n  React.useEffect(\n    () => {\n      if (scrollView.current && selectedAutocompletionElement.current) {\n        scrollView.current.scrollTo(selectedAutocompletionElement.current);\n      }\n    },\n    [scrollView, selectedAutocompletionElement, selectedCompletionIndex]\n  );\n\n  if (expressionAutocompletions.length === 0) return null;\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Popper\n          style={styles.popperStyle}\n          open\n          anchorEl={anchorEl}\n          placement=\"bottom-start\"\n          disablePortal={\n            // We can use a portal to display this component, because even if it\n            // used inside a modal, which has a focus trap, it's entirely\n            // controlled by the parent component.\n            false\n          }\n        >\n          <Paper variant=\"outlined\" square style={styles.container}>\n            <ScrollView autoHideScrollbar ref={scrollView}>\n              {expressionAutocompletions.map(\n                (expressionAutocompletion, index) => {\n                  const isSelected = selectedCompletionIndex === index;\n                  const ref = isSelected\n                    ? selectedAutocompletionElement\n                    : undefined;\n\n                  return expressionAutocompletion.kind === 'Text' ||\n                    expressionAutocompletion.kind === 'Variable' ? (\n                    <DisplayedTextAutocompletion\n                      key={index}\n                      expressionAutocompletion={expressionAutocompletion}\n                      isSelected={isSelected}\n                      onClick={() => onChoose(expressionAutocompletion)}\n                      ref={ref}\n                    />\n                  ) : expressionAutocompletion.kind === 'Expression' ? (\n                    !expressionAutocompletion.isExact && (\n                      <DisplayedExpressionAutocompletion\n                        key={index}\n                        expressionAutocompletion={expressionAutocompletion}\n                        onClick={() => onChoose(expressionAutocompletion)}\n                        isSelected={isSelected}\n                        i18n={i18n}\n                        parameterRenderingService={parameterRenderingService}\n                        ref={ref}\n                      />\n                    )\n                  ) : expressionAutocompletion.kind === 'Object' ? (\n                    <DisplayedObjectAutocompletion\n                      key={index}\n                      project={project}\n                      expressionAutocompletion={expressionAutocompletion}\n                      onClick={() => onChoose(expressionAutocompletion)}\n                      isSelected={isSelected}\n                      ref={ref}\n                    />\n                  ) : expressionAutocompletion.kind === 'Behavior' ? (\n                    <DisplayedBehaviorAutocompletion\n                      key={index}\n                      expressionAutocompletion={expressionAutocompletion}\n                      onClick={() => onChoose(expressionAutocompletion)}\n                      isSelected={isSelected}\n                      ref={ref}\n                    />\n                  ) : null;\n                }\n              )}\n              {remainingCount > 0 && (\n                <Column justifyContent=\"flex-start\">\n                  <Text>And {remainingCount} others...</Text>\n                </Column>\n              )}\n            </ScrollView>\n          </Paper>\n          {selectedCompletionIndex !== null &&\n            expressionAutocompletions[selectedCompletionIndex].kind ===\n              'Expression' &&\n            !expressionAutocompletions[selectedCompletionIndex].isExact && (\n              <Paper variant=\"outlined\" square style={styles.container}>\n                <ScrollView autoHideScrollbar>\n                  <Column>\n                    <Line noMargin expand alignItems=\"center\">\n                      <Text style={defaultTextStyle} size=\"body2\">\n                        {expressionAutocompletions[\n                          selectedCompletionIndex\n                        ].enumeratedExpressionMetadata.metadata.getDescription()}\n                      </Text>\n                    </Line>\n                  </Column>\n                </ScrollView>\n              </Paper>\n            )}\n        </Popper>\n      )}\n    </I18n>\n  );\n}\n","// @flow\nimport React, { Component } from 'react';\nimport GenericExpressionField from './GenericExpressionField';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\nexport default class StringField extends Component<ParameterFieldProps, void> {\n  _field: ?GenericExpressionField;\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  render() {\n    return (\n      <GenericExpressionField\n        expressionType=\"string\"\n        ref={field => (this._field = field)}\n        {...this.props}\n      />\n    );\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport GenericExpressionField from './GenericExpressionField';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport { getParameterChoices } from './ParameterMetadataTools';\n\nexport default class StringWithSelectorField extends Component<\n  ParameterFieldProps,\n  {||}\n> {\n  _field: ?GenericExpressionField;\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  render() {\n    return (\n      <GenericExpressionField\n        expressionType=\"string\"\n        onGetAdditionalAutocompletions={expression =>\n          getParameterChoices(this.props.parameterMetadata).filter(\n            ({ completion }) => completion.indexOf(expression) === 0\n          )\n        }\n        ref={field => (this._field = field)}\n        {...this.props}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport { getLastObjectParameterValue } from './ParameterMetadataTools';\nimport SemiControlledAutoComplete, {\n  type SemiControlledAutoCompleteInterface,\n} from '../../UI/SemiControlledAutoComplete';\nconst gd: libGDevelop = global.gd;\n\ntype State = {|\n  errorText: ?string,\n|};\n\nexport default class BehaviorField extends React.Component<\n  ParameterFieldProps,\n  State\n> {\n  state = { errorText: null };\n  _description: ?string;\n  _longDescription: ?string;\n  _behaviorTypeAllowed: ?string;\n  _behaviorNames: Array<string> = [];\n  _field: ?SemiControlledAutoCompleteInterface;\n\n  constructor(props: ParameterFieldProps) {\n    super(props);\n\n    const { parameterMetadata } = this.props;\n    this._description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    this._longDescription = parameterMetadata\n      ? parameterMetadata.getLongDescription()\n      : undefined;\n\n    this._behaviorTypeAllowed = parameterMetadata\n      ? parameterMetadata.getExtraInfo()\n      : undefined;\n  }\n\n  _updateBehaviorsList() {\n    const {\n      instructionMetadata,\n      instruction,\n      expressionMetadata,\n      expression,\n      parameterIndex,\n    } = this.props;\n\n    const objectName = getLastObjectParameterValue({\n      instructionMetadata,\n      instruction,\n      expressionMetadata,\n      expression,\n      parameterIndex,\n    });\n    if (!objectName) return;\n\n    this._behaviorNames = gd\n      .getBehaviorsOfObject(\n        this.props.globalObjectsContainer,\n        this.props.objectsContainer,\n        objectName,\n        true\n      )\n      .toJSArray()\n      .filter(behaviorName => {\n        return (\n          !this._behaviorTypeAllowed ||\n          gd.getTypeOfBehavior(\n            this.props.globalObjectsContainer,\n            this.props.objectsContainer,\n            behaviorName,\n            false\n          ) === this._behaviorTypeAllowed\n        );\n      });\n  }\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  _getError = (value?: string) => {\n    if (!value && !this.props.value) return null;\n\n    const isValidChoice =\n      this._behaviorNames.filter(choice => this.props.value === choice)\n        .length !== 0;\n\n    if (!isValidChoice) return 'This behavior is not attached to the object';\n\n    return null;\n  };\n\n  _doValidation = (value?: string) => {\n    this.setState({ errorText: this._getError(value) });\n  };\n\n  _forceChooseBehavior = () => {\n    // This is a bit hacky:\n    // force the behavior selection if there is only one selectable behavior\n    if (this._behaviorNames.length === 1) {\n      if (this.props.value !== this._behaviorNames[0]) {\n        this.props.onChange(this._behaviorNames[0]);\n      }\n    }\n  };\n\n  componentDidUpdate() {\n    this._forceChooseBehavior();\n  }\n\n  componentDidMount() {\n    this._forceChooseBehavior();\n  }\n\n  render() {\n    this._updateBehaviorsList();\n\n    const noBehaviorErrorText =\n      this._behaviorTypeAllowed !== '' ? (\n        <Trans>\n          The behavior is not attached to this object. Please select another\n          object or add this behavior.\n        </Trans>\n      ) : (\n        <Trans>\n          This object has no behaviors: please add this behavior to the object\n          first.\n        </Trans>\n      );\n\n    return (\n      <SemiControlledAutoComplete\n        margin={this.props.isInline ? 'none' : 'dense'}\n        floatingLabelText={this._description}\n        helperMarkdownText={this._longDescription}\n        fullWidth\n        errorText={\n          !this._behaviorNames.length\n            ? noBehaviorErrorText\n            : this.state.errorText\n        }\n        value={this.props.value}\n        onChange={this.props.onChange}\n        onRequestClose={this.props.onRequestClose}\n        onApply={this.props.onApply}\n        onBlur={event => {\n          this._doValidation(event.currentTarget.value);\n        }}\n        dataSource={this._behaviorNames.map(behaviorName => ({\n          text: behaviorName,\n          value: behaviorName,\n        }))}\n        openOnFocus={!this.props.isInline}\n        disabled={this._behaviorNames.length <= 1}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport VariableField, { renderVariableWithIcon } from './VariableField';\nimport VariablesEditorDialog from '../../VariablesList/VariablesEditorDialog';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport EventsRootVariablesFinder from '../../Utils/EventsRootVariablesFinder';\n\ntype State = {|\n  editorOpen: boolean,\n|};\n\nexport default class GlobalVariableField extends React.Component<\n  ParameterFieldProps,\n  State\n> {\n  _field: ?VariableField;\n  state = {\n    editorOpen: false,\n  };\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const { project, scope } = this.props;\n\n    const onComputeAllVariableNames = () =>\n      project\n        ? EventsRootVariablesFinder.findAllGlobalVariables(\n            project.getCurrentPlatform(),\n            project\n          )\n        : [];\n\n    return (\n      <React.Fragment>\n        <VariableField\n          variablesContainer={project ? project.getVariables() : null}\n          onComputeAllVariableNames={onComputeAllVariableNames}\n          parameterMetadata={this.props.parameterMetadata}\n          value={this.props.value}\n          onChange={this.props.onChange}\n          isInline={this.props.isInline}\n          onRequestClose={this.props.onRequestClose}\n          onApply={this.props.onApply}\n          ref={field => (this._field = field)}\n          onOpenDialog={() => this.setState({ editorOpen: true })}\n          globalObjectsContainer={this.props.globalObjectsContainer}\n          objectsContainer={this.props.objectsContainer}\n          scope={scope}\n        />\n        {this.state.editorOpen && project && (\n          <VariablesEditorDialog\n            title={<Trans>Global Variables</Trans>}\n            open={this.state.editorOpen}\n            variablesContainer={project.getVariables()}\n            onCancel={() => this.setState({ editorOpen: false })}\n            onApply={() => {\n              this.setState({ editorOpen: false });\n              if (this._field) this._field.updateAutocompletions();\n            }}\n            emptyPlaceholderTitle={\n              <Trans>Add your first global variable</Trans>\n            }\n            emptyPlaceholderDescription={\n              <Trans>\n                These variables hold additional information on a project.\n              </Trans>\n            }\n            helpPagePath={'/all-features/variables/global-variables'}\n            onComputeAllVariableNames={onComputeAllVariableNames}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport const renderInlineGlobalVariable = (\n  props: ParameterInlineRendererProps\n) => {\n  return renderVariableWithIcon(\n    props,\n    'res/types/globalvar.png',\n    'global variable'\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport VariableField, { renderVariableWithIcon } from './VariableField';\nimport VariablesEditorDialog from '../../VariablesList/VariablesEditorDialog';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport { getLastObjectParameterValue } from './ParameterMetadataTools';\nimport EventsRootVariablesFinder from '../../Utils/EventsRootVariablesFinder';\n\ntype State = {|\n  editorOpen: boolean,\n|};\n\nexport default class ObjectVariableField extends React.Component<\n  ParameterFieldProps,\n  State\n> {\n  _field: ?VariableField;\n  state = {\n    editorOpen: false,\n  };\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const {\n      project,\n      scope,\n      instructionMetadata,\n      instruction,\n      expressionMetadata,\n      expression,\n      parameterIndex,\n    } = this.props;\n\n    const objectName = getLastObjectParameterValue({\n      instructionMetadata,\n      instruction,\n      expressionMetadata,\n      expression,\n      parameterIndex,\n    });\n\n    const { layout } = scope;\n    let object = null;\n    let variablesContainer = null;\n    if (objectName) {\n      if (layout && layout.hasObjectNamed(objectName)) {\n        object = layout.getObject(objectName);\n        variablesContainer = object.getVariables();\n      } else if (project && project.hasObjectNamed(objectName)) {\n        object = project.getObject(objectName);\n        variablesContainer = object.getVariables();\n      }\n    }\n\n    const onComputeAllVariableNames = () =>\n      project && layout && object\n        ? EventsRootVariablesFinder.findAllObjectVariables(\n            project.getCurrentPlatform(),\n            project,\n            layout,\n            object\n          )\n        : [];\n\n    return (\n      <React.Fragment>\n        <VariableField\n          variablesContainer={variablesContainer}\n          onComputeAllVariableNames={onComputeAllVariableNames}\n          parameterMetadata={this.props.parameterMetadata}\n          value={this.props.value}\n          onChange={this.props.onChange}\n          isInline={this.props.isInline}\n          onRequestClose={this.props.onRequestClose}\n          onApply={this.props.onApply}\n          ref={field => (this._field = field)}\n          onOpenDialog={() => this.setState({ editorOpen: true })}\n          globalObjectsContainer={this.props.globalObjectsContainer}\n          objectsContainer={this.props.objectsContainer}\n          scope={scope}\n        />\n        {this.state.editorOpen && variablesContainer && (\n          <VariablesEditorDialog\n            title={<Trans>Object Variables</Trans>}\n            open={this.state.editorOpen}\n            variablesContainer={variablesContainer}\n            emptyPlaceholderTitle={\n              <Trans>Add your first object variable</Trans>\n            }\n            emptyPlaceholderDescription={\n              <Trans>\n                These variables hold additional information on an object.\n              </Trans>\n            }\n            helpPagePath={'/all-features/variables/object-variables'}\n            onComputeAllVariableNames={onComputeAllVariableNames}\n            onCancel={() => this.setState({ editorOpen: false })}\n            onApply={() => {\n              this.setState({ editorOpen: false });\n              if (this._field) this._field.updateAutocompletions();\n            }}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport const renderInlineObjectVariable = (\n  props: ParameterInlineRendererProps\n) => {\n  return renderVariableWithIcon(\n    props,\n    'res/types/objectvar.png',\n    'object variable'\n  );\n};\n","// @flow\nimport React, { Component } from 'react';\nimport { mapFor } from '../../Utils/MapFor';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport GenericExpressionField from './GenericExpressionField';\nimport { type ExpressionAutocompletion } from '../../ExpressionAutocompletion';\n\nexport default class LayerField extends Component<ParameterFieldProps, {||}> {\n  _field: ?GenericExpressionField;\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  render() {\n    const { layout } = this.props.scope;\n    const layerNames: Array<ExpressionAutocompletion> = layout\n      ? mapFor(0, layout.getLayersCount(), i => {\n          const layer = layout.getLayerAt(i);\n          return { kind: 'Text', completion: `\"${layer.getName()}\"` };\n        })\n      : [];\n\n    return (\n      <GenericExpressionField\n        expressionType=\"string\"\n        onGetAdditionalAutocompletions={expression =>\n          layerNames.filter(\n            ({ completion }) => completion.indexOf(expression) === 0\n          )\n        }\n        ref={field => (this._field = field)}\n        {...this.props}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport ResourceSelector from '../../ResourcesList/ResourceSelector';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport {\n  type ParameterFieldProps,\n  type ParameterFieldInterface,\n} from './ParameterFieldCommons';\n\nconst ImageResourceField = React.forwardRef<\n  ParameterFieldProps,\n  ParameterFieldInterface\n>((props, ref) => {\n  const fieldRef = React.useRef<?ResourceSelector>(null);\n\n  const focus = (selectAll: boolean = false) => {\n    if (fieldRef.current) fieldRef.current.focus(selectAll);\n  };\n\n  React.useImperativeHandle(ref, () => ({\n    focus,\n  }));\n\n  if (\n    !props.resourceSources ||\n    !props.onChooseResource ||\n    !props.resourceExternalEditors ||\n    !props.project\n  ) {\n    console.error(\n      'Missing project, resourceSources, onChooseResource or resourceExternalEditors for ImageResourceField'\n    );\n    return null;\n  }\n\n  return (\n    <ResourceSelector\n      margin={props.isInline ? 'none' : 'dense'}\n      project={props.project}\n      resourceSources={props.resourceSources}\n      onChooseResource={props.onChooseResource}\n      resourceExternalEditors={props.resourceExternalEditors}\n      resourcesLoader={ResourcesLoader}\n      resourceKind=\"image\"\n      fullWidth\n      initialResourceName={props.value}\n      onChange={props.onChange}\n      floatingLabelText={<Trans>Choose the image file to use</Trans>}\n      onRequestClose={props.onRequestClose}\n      onApply={props.onApply}\n      ref={fieldRef}\n    />\n  );\n});\n\nexport default ImageResourceField;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport ResourceSelector from '../../ResourcesList/ResourceSelector';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\nexport default class AudioResourceField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?ResourceSelector;\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  render() {\n    if (\n      !this.props.resourceSources ||\n      !this.props.onChooseResource ||\n      !this.props.resourceExternalEditors ||\n      !this.props.project\n    ) {\n      console.error(\n        'Missing project, resourceSources, onChooseResource or resourceExternalEditors for AudioResourceField'\n      );\n      return null;\n    }\n\n    return (\n      <ResourceSelector\n        margin={this.props.isInline ? 'none' : 'dense'}\n        project={this.props.project}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        resourcesLoader={ResourcesLoader}\n        resourceKind=\"audio\"\n        fullWidth\n        initialResourceName={this.props.value}\n        onChange={this.props.onChange}\n        floatingLabelText={<Trans>Choose the audio file to use</Trans>}\n        onRequestClose={this.props.onRequestClose}\n        onApply={this.props.onApply}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport ResourceSelector from '../../ResourcesList/ResourceSelector';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\nexport default class VideoResourceField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?ResourceSelector;\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  render() {\n    if (\n      !this.props.resourceSources ||\n      !this.props.onChooseResource ||\n      !this.props.resourceExternalEditors ||\n      !this.props.project\n    ) {\n      console.error(\n        'Missing project, resourceSources, onChooseResource or resourceExternalEditors for VideoResourceField'\n      );\n      return null;\n    }\n\n    return (\n      <ResourceSelector\n        margin={this.props.isInline ? 'none' : 'dense'}\n        project={this.props.project}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        resourcesLoader={ResourcesLoader}\n        resourceKind=\"video\"\n        fullWidth\n        initialResourceName={this.props.value}\n        onChange={this.props.onChange}\n        floatingLabelText={<Trans>Choose the video file to use</Trans>}\n        onRequestClose={this.props.onRequestClose}\n        onApply={this.props.onApply}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport ResourceSelector from '../../ResourcesList/ResourceSelector';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\nexport default class JsonResourceField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?ResourceSelector;\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  render() {\n    if (\n      !this.props.resourceSources ||\n      !this.props.onChooseResource ||\n      !this.props.resourceExternalEditors ||\n      !this.props.project\n    ) {\n      console.error(\n        'Missing project, resourceSources, onChooseResource or resourceExternalEditors for JsonResourceField'\n      );\n      return null;\n    }\n\n    return (\n      <ResourceSelector\n        margin={this.props.isInline ? 'none' : 'dense'}\n        project={this.props.project}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        resourcesLoader={ResourcesLoader}\n        resourceKind=\"json\"\n        fullWidth\n        initialResourceName={this.props.value}\n        onChange={this.props.onChange}\n        floatingLabelText={<Trans>Choose the json file to use</Trans>}\n        onRequestClose={this.props.onRequestClose}\n        onApply={this.props.onApply}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport ResourceSelector from '../../ResourcesList/ResourceSelector';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\nexport default class FontResourceField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?ResourceSelector;\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  render() {\n    if (\n      !this.props.resourceSources ||\n      !this.props.onChooseResource ||\n      !this.props.resourceExternalEditors ||\n      !this.props.project\n    ) {\n      console.error(\n        'Missing project, resourceSources, onChooseResource or resourceExternalEditors for BitmapFontResourceField'\n      );\n      return null;\n    }\n\n    return (\n      <ResourceSelector\n        margin={this.props.isInline ? 'none' : 'dense'}\n        project={this.props.project}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        resourcesLoader={ResourcesLoader}\n        resourceKind=\"bitmapFont\"\n        fullWidth\n        initialResourceName={this.props.value}\n        onChange={this.props.onChange}\n        floatingLabelText={\n          <Trans>Choose the bitmap font file (.fnt, .xml) to use</Trans>\n        }\n        onRequestClose={this.props.onRequestClose}\n        onApply={this.props.onApply}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport ResourceSelector from '../../ResourcesList/ResourceSelector';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\nexport default class BitmapFontResourceField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?ResourceSelector;\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  render() {\n    if (\n      !this.props.resourceSources ||\n      !this.props.onChooseResource ||\n      !this.props.resourceExternalEditors ||\n      !this.props.project\n    ) {\n      console.error(\n        'Missing project, resourceSources, onChooseResource or resourceExternalEditors for FontResourceField'\n      );\n      return null;\n    }\n\n    return (\n      <ResourceSelector\n        margin={this.props.isInline ? 'none' : 'dense'}\n        project={this.props.project}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        resourcesLoader={ResourcesLoader}\n        resourceKind=\"font\"\n        fullWidth\n        initialResourceName={this.props.value}\n        onChange={this.props.onChange}\n        floatingLabelText={<Trans>Choose the font file to use</Trans>}\n        onRequestClose={this.props.onRequestClose}\n        onApply={this.props.onApply}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport GenericExpressionField from './GenericExpressionField';\nimport ColorPicker from '../../UI/ColorField/ColorPicker';\nimport { rgbStringAndAlphaToRGBColor } from '../../Utils/ColorTransformer';\n\nexport default class ParameterColorField extends Component<ParameterFieldProps> {\n  _field: ?GenericExpressionField;\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  render() {\n    return (\n      <GenericExpressionField\n        expressionType=\"string\"\n        ref={field => (this._field = field)}\n        renderExtraButton={({ style }) => (\n          <ColorPicker\n            style={style}\n            disableAlpha\n            color={rgbStringAndAlphaToRGBColor(this.props.value)}\n            onChangeComplete={color => {\n              this.props.onChange(\n                '\"' + color.rgb.r + ';' + color.rgb.g + ';' + color.rgb.b + '\"'\n              );\n            }}\n          />\n        )}\n        onExtractAdditionalErrors={(\n          expression: string,\n          expressioNode: gdExpressionNode\n        ) => {\n          if (expression.trim().startsWith('\"\\\\\"')) {\n            return 'A color is a text in the format R;G;B, like 100;200;180 (numbers going from 0 to 255). You need to surround the text with quotes, but the text itself should not contain a quote inside.';\n          }\n\n          return null;\n        }}\n        {...this.props}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport React, { Component } from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Line, Column } from '../../UI/Grid';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport GenericExpressionField from './GenericExpressionField';\nimport BackgroundText from '../../UI/BackgroundText';\nimport { focusButton } from '../../UI/Button';\nimport Text from '../../UI/Text';\n\ntype State = {|\n  showDeprecatedNumericValue: boolean,\n|};\n\nexport default class ForceMultiplierField extends Component<\n  ParameterFieldProps,\n  State\n> {\n  _instantButton = React.createRef<RaisedButton>();\n  state = {\n    showDeprecatedNumericValue:\n      this.props.value !== '' &&\n      this.props.value !== '1' &&\n      this.props.value !== '0',\n  };\n\n  focus() {\n    focusButton(this._instantButton);\n  }\n\n  render() {\n    const { showDeprecatedNumericValue } = this.state;\n    return (\n      <Column expand noMargin>\n        <Line expand alignItems=\"center\">\n          <Column>\n            <RaisedButton\n              label={<Trans>Instant</Trans>}\n              primary={this.props.value === '' || this.props.value === '0'}\n              onClick={() => this.props.onChange('0')}\n              ref={this._instantButton}\n            />\n          </Column>\n          <Column>\n            <Text>\n              <Trans>\n                The force will only push the object during the time of one\n                frame. Typically used in an event with no conditions or with\n                conditions that stay valid for a certain amount of time.\n              </Trans>\n            </Text>\n          </Column>\n        </Line>\n        <Line expand alignItems=\"center\">\n          <Column>\n            <RaisedButton\n              label={<Trans>Permanent</Trans>}\n              primary={this.props.value === '1'}\n              onClick={() => this.props.onChange('1')}\n            />\n          </Column>\n          <Column>\n            <Text>\n              <Trans>\n                The force will push the object forever, unless you use the\n                action \"Stop the object\". Typically used in an event with\n                conditions that are only true once, or with a \"Trigger Once\"\n                condition.\n              </Trans>\n            </Text>\n          </Column>\n        </Line>\n        {showDeprecatedNumericValue && (\n          <React.Fragment>\n            <BackgroundText>\n              <Trans>or</Trans>\n            </BackgroundText>\n            <Line expand>\n              <Column expand>\n                <GenericExpressionField\n                  expressionType=\"number\"\n                  {...this.props}\n                />\n              </Column>\n            </Line>\n            <BackgroundText>\n              <Trans>\n                The usage of a number or expression is deprecated. Please now\n                use only \"Permanent\" or \"Instant\" for configuring forces.\n              </Trans>\n            </BackgroundText>\n          </React.Fragment>\n        )}\n      </Column>\n    );\n  }\n}\n\nexport const renderInlineForceMultiplier = ({\n  value,\n}: ParameterInlineRendererProps) => {\n  if (value === '1') return <Trans>{`a permanent`}</Trans>;\n  else if (value === '0' || value === '') return <Trans>{`an instant`}</Trans>;\n\n  return 'a (multiplier: ' + value + ')';\n};\n","// @flow\nimport React, { Component } from 'react';\nimport GenericExpressionField from './GenericExpressionField';\nimport { enumerateLayouts } from '../../ProjectManager/EnumerateProjectItems';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport { type ExpressionAutocompletion } from '../../ExpressionAutocompletion';\n\nexport default class SceneNameField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?GenericExpressionField;\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  render() {\n    const layoutNames: Array<ExpressionAutocompletion> = this.props.project\n      ? enumerateLayouts(this.props.project).map(layout => ({\n          kind: 'Text',\n          completion: `\"${layout.getName()}\"`,\n        }))\n      : [];\n\n    return (\n      <GenericExpressionField\n        expressionType=\"string\"\n        onGetAdditionalAutocompletions={expression =>\n          layoutNames.filter(\n            ({ completion }) => completion.indexOf(expression) === 0\n          )\n        }\n        ref={field => (this._field = field)}\n        {...this.props}\n      />\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport GenericExpressionField from './GenericExpressionField';\nimport {\n  type ParameterFieldProps,\n  type ParameterFieldInterface,\n} from './ParameterFieldCommons';\nimport { type ExpressionAutocompletion } from '../../ExpressionAutocompletion';\nimport {\n  getPreviousParameterValue,\n  tryExtractStringLiteralContent,\n} from './ParameterMetadataTools';\nimport { enumerateEffectNames } from '../../EffectsList/EnumerateEffects';\n\nexport default React.forwardRef<ParameterFieldProps, ParameterFieldInterface>(\n  function LayerEffectNameField(props: ParameterFieldProps, ref) {\n    const field = React.useRef<?GenericExpressionField>(null);\n    React.useImperativeHandle(ref, () => ({\n      focus: (selectAll: boolean = false) => {\n        if (field.current) field.current.focus(selectAll);\n      },\n    }));\n\n    const getEffectNames = (): Array<ExpressionAutocompletion> => {\n      const { scope, instruction, expression, parameterIndex } = props;\n\n      const { layout } = scope;\n      if (!layout) return [];\n\n      const layerName = tryExtractStringLiteralContent(\n        getPreviousParameterValue({\n          instruction,\n          expression,\n          parameterIndex,\n        })\n      );\n      if (layerName == null || !layout.hasLayerNamed(layerName)) return [];\n      const layer = layout.getLayer(layerName);\n\n      return enumerateEffectNames(layer.getEffects())\n        .sort()\n        .map(effectName => ({\n          kind: 'Text',\n          completion: `\"${effectName}\"`,\n        }));\n    };\n\n    return (\n      <GenericExpressionField\n        expressionType=\"string\"\n        onGetAdditionalAutocompletions={expression =>\n          getEffectNames().filter(\n            ({ completion }) => completion.indexOf(expression) === 0\n          )\n        }\n        ref={field}\n        {...props}\n      />\n    );\n  }\n);\n","// @flow\nimport * as React from 'react';\nimport GenericExpressionField from './GenericExpressionField';\nimport {\n  type ParameterFieldProps,\n  type ParameterFieldInterface,\n} from './ParameterFieldCommons';\nimport { type ExpressionAutocompletion } from '../../ExpressionAutocompletion';\nimport {\n  getPreviousParameterValue,\n  tryExtractStringLiteralContent,\n} from './ParameterMetadataTools';\n\nconst gd: libGDevelop = global.gd;\n\nexport default React.forwardRef<ParameterFieldProps, ParameterFieldInterface>(\n  function LayerEffectParameterNameField(props: ParameterFieldProps, ref) {\n    const field = React.useRef<?GenericExpressionField>(null);\n    React.useImperativeHandle(ref, () => ({\n      focus: (selectAll: boolean = false) => {\n        if (field.current) field.current.focus(selectAll);\n      },\n    }));\n\n    const getEffectParameterNames = (): Array<ExpressionAutocompletion> => {\n      const { project, scope, instruction, expression, parameterIndex } = props;\n\n      const { layout } = scope;\n      if (!layout || !project) return [];\n\n      const layerName = tryExtractStringLiteralContent(\n        getPreviousParameterValue({\n          instruction,\n          expression,\n          parameterIndex: parameterIndex ? parameterIndex - 1 : null,\n        })\n      );\n      if (layerName == null || !layout.hasLayerNamed(layerName)) return [];\n      const layer = layout.getLayer(layerName);\n\n      const effectName = tryExtractStringLiteralContent(\n        getPreviousParameterValue({\n          instruction,\n          expression,\n          parameterIndex,\n        })\n      );\n      if (!effectName || !layer.getEffects().hasEffectNamed(effectName)) {\n        return [];\n      }\n      const effect = layer.getEffects().getEffect(effectName);\n\n      const effectType = effect.getEffectType();\n      const effectMetadata = gd.MetadataProvider.getEffectMetadata(\n        project.getCurrentPlatform(),\n        effectType\n      );\n      const properties = effectMetadata.getProperties();\n      const parameterNames = properties.keys().toJSArray();\n\n      return parameterNames.sort().map(parameterName => ({\n        kind: 'Text',\n        completion: `\"${parameterName}\"`,\n      }));\n    };\n\n    return (\n      <GenericExpressionField\n        expressionType=\"string\"\n        onGetAdditionalAutocompletions={expression =>\n          getEffectParameterNames().filter(\n            ({ completion }) => completion.indexOf(expression) === 0\n          )\n        }\n        ref={field}\n        {...props}\n      />\n    );\n  }\n);\n","// @flow\nimport * as React from 'react';\nimport GenericExpressionField from './GenericExpressionField';\nimport {\n  type ParameterFieldProps,\n  type ParameterFieldInterface,\n} from './ParameterFieldCommons';\nimport { type ExpressionAutocompletion } from '../../ExpressionAutocompletion';\nimport getObjectByName from '../../Utils/GetObjectByName';\nimport { getLastObjectParameterValue } from './ParameterMetadataTools';\nimport { enumerateEffectNames } from '../../EffectsList/EnumerateEffects';\n\nexport default React.forwardRef<ParameterFieldProps, ParameterFieldInterface>(\n  function ObjectEffectNameField(props: ParameterFieldProps, ref) {\n    const field = React.useRef<?GenericExpressionField>(null);\n    React.useImperativeHandle(ref, () => ({\n      focus: (selectAll: boolean = false) => {\n        if (field.current) field.current.focus(selectAll);\n      },\n    }));\n\n    const {\n      project,\n      scope,\n      instructionMetadata,\n      instruction,\n      expressionMetadata,\n      expression,\n      parameterIndex,\n    } = props;\n\n    const getEffectNames = (): Array<ExpressionAutocompletion> => {\n      const objectName = getLastObjectParameterValue({\n        instructionMetadata,\n        instruction,\n        expressionMetadata,\n        expression,\n        parameterIndex,\n      });\n      if (!objectName || !project) {\n        return [];\n      }\n\n      const object = getObjectByName(project, scope.layout, objectName);\n      if (!object) {\n        return [];\n      }\n\n      return enumerateEffectNames(object.getEffects())\n        .sort()\n        .map(effectName => ({\n          kind: 'Text',\n          completion: `\"${effectName}\"`,\n        }));\n    };\n\n    return (\n      <GenericExpressionField\n        expressionType=\"string\"\n        onGetAdditionalAutocompletions={expression =>\n          getEffectNames().filter(\n            ({ completion }) => completion.indexOf(expression) === 0\n          )\n        }\n        ref={field}\n        {...props}\n      />\n    );\n  }\n);\n","// @flow\nimport * as React from 'react';\nimport GenericExpressionField from './GenericExpressionField';\nimport {\n  type ParameterFieldProps,\n  type ParameterFieldInterface,\n} from './ParameterFieldCommons';\nimport { type ExpressionAutocompletion } from '../../ExpressionAutocompletion';\nimport getObjectByName from '../../Utils/GetObjectByName';\nimport {\n  getLastObjectParameterValue,\n  getPreviousParameterValue,\n  tryExtractStringLiteralContent,\n} from './ParameterMetadataTools';\n\nconst gd: libGDevelop = global.gd;\n\nexport default React.forwardRef<ParameterFieldProps, ParameterFieldInterface>(\n  function ObjectEffectParameterNameField(props: ParameterFieldProps, ref) {\n    const field = React.useRef<?GenericExpressionField>(null);\n    React.useImperativeHandle(ref, () => ({\n      focus: (selectAll: boolean = false) => {\n        if (field.current) field.current.focus(selectAll);\n      },\n    }));\n\n    const getEffectParameterNames = (): Array<ExpressionAutocompletion> => {\n      const {\n        project,\n        scope,\n        instructionMetadata,\n        instruction,\n        expressionMetadata,\n        expression,\n        parameterIndex,\n      } = props;\n\n      const objectName = getLastObjectParameterValue({\n        instructionMetadata,\n        instruction,\n        expressionMetadata,\n        expression,\n        parameterIndex,\n      });\n      const effectName = tryExtractStringLiteralContent(\n        getPreviousParameterValue({\n          instruction,\n          expression,\n          parameterIndex,\n        })\n      );\n      if (!objectName || !project || !effectName) {\n        return [];\n      }\n\n      const object = getObjectByName(project, scope.layout, objectName);\n      if (!object || !object.getEffects().hasEffectNamed(effectName)) {\n        return [];\n      }\n      const effect = object.getEffects().getEffect(effectName);\n\n      const effectType = effect.getEffectType();\n      const effectMetadata = gd.MetadataProvider.getEffectMetadata(\n        project.getCurrentPlatform(),\n        effectType\n      );\n      const properties = effectMetadata.getProperties();\n      const parameterNames = properties.keys().toJSArray();\n\n      return parameterNames.sort().map(parameterName => ({\n        kind: 'Text',\n        completion: `\"${parameterName}\"`,\n      }));\n    };\n\n    return (\n      <GenericExpressionField\n        expressionType=\"string\"\n        onGetAdditionalAutocompletions={expression =>\n          getEffectParameterNames().filter(\n            ({ completion }) => completion.indexOf(expression) === 0\n          )\n        }\n        ref={field}\n        {...props}\n      />\n    );\n  }\n);\n","// @flow\nimport React, { Component } from 'react';\nimport GenericExpressionField from './GenericExpressionField';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport { type ExpressionAutocompletion } from '../../ExpressionAutocompletion';\nimport getObjectByName from '../../Utils/GetObjectByName';\nimport { getLastObjectParameterValue } from './ParameterMetadataTools';\nimport { getAllPointNames } from '../../ObjectEditor/Editors/SpriteEditor/Utils/SpriteObjectHelper';\n\nconst gd: libGDevelop = global.gd;\n\nexport default class ObjectPointNameField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?GenericExpressionField;\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  getPointNames(): Array<ExpressionAutocompletion> {\n    const {\n      project,\n      scope,\n      instructionMetadata,\n      instruction,\n      expressionMetadata,\n      expression,\n      parameterIndex,\n    } = this.props;\n\n    const objectName = getLastObjectParameterValue({\n      instructionMetadata,\n      instruction,\n      expressionMetadata,\n      expression,\n      parameterIndex,\n    });\n    if (!objectName || !project) {\n      return [];\n    }\n\n    const object = getObjectByName(project, scope.layout, objectName);\n    if (!object) {\n      return [];\n    }\n\n    if (object.getType() === 'Sprite') {\n      const spriteObject = gd.asSpriteObject(object);\n\n      return getAllPointNames(spriteObject)\n        .map(spriteObjectName =>\n          spriteObjectName.length > 0 ? spriteObjectName : null\n        )\n        .filter(Boolean)\n        .sort()\n        .map(pointName => ({\n          kind: 'Text',\n          completion: `\"${pointName}\"`,\n        }));\n    }\n\n    return [];\n  }\n\n  render() {\n    return (\n      <GenericExpressionField\n        expressionType=\"string\"\n        onGetAdditionalAutocompletions={expression =>\n          this.getPointNames().filter(\n            ({ completion }) => completion.indexOf(expression) === 0\n          )\n        }\n        ref={field => (this._field = field)}\n        {...this.props}\n      />\n    );\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport GenericExpressionField from './GenericExpressionField';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport { type ExpressionAutocompletion } from '../../ExpressionAutocompletion';\nimport getObjectByName from '../../Utils/GetObjectByName';\nimport { getLastObjectParameterValue } from './ParameterMetadataTools';\nimport { mapFor } from '../../Utils/MapFor';\n\nconst gd: libGDevelop = global.gd;\n\nexport default class ObjectAnimationNameField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?GenericExpressionField;\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  getAnimationNames(): Array<ExpressionAutocompletion> {\n    const {\n      project,\n      scope,\n      instructionMetadata,\n      instruction,\n      expressionMetadata,\n      expression,\n      parameterIndex,\n    } = this.props;\n\n    const objectName = getLastObjectParameterValue({\n      instructionMetadata,\n      instruction,\n      expressionMetadata,\n      expression,\n      parameterIndex,\n    });\n    if (!objectName || !project) {\n      return [];\n    }\n\n    const object = getObjectByName(project, scope.layout, objectName);\n    if (!object) {\n      return [];\n    }\n\n    if (object.getType() === 'Sprite') {\n      const spriteObject = gd.asSpriteObject(object);\n\n      return mapFor(0, spriteObject.getAnimationsCount(), index => {\n        const animationName = spriteObject.getAnimation(index).getName();\n        return animationName.length > 0 ? animationName : null;\n      })\n        .filter(Boolean)\n        .sort()\n        .map(animationName => ({\n          kind: 'Text',\n          completion: `\"${animationName}\"`,\n        }));\n    }\n\n    return [];\n  }\n\n  render() {\n    return (\n      <GenericExpressionField\n        expressionType=\"string\"\n        onGetAdditionalAutocompletions={expression =>\n          this.getAnimationNames().filter(\n            ({ completion }) => completion.indexOf(expression) === 0\n          )\n        }\n        ref={field => (this._field = field)}\n        {...this.props}\n      />\n    );\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport GenericExpressionField from './GenericExpressionField';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport { type ExpressionAutocompletion } from '../../ExpressionAutocompletion';\nimport { enumerateParametersUsableInExpressions } from './EnumerateFunctionParameters';\n\nexport default class FunctionParameterNameField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?GenericExpressionField;\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  render() {\n    const parameterNames: Array<ExpressionAutocompletion> = this.props.scope\n      .eventsFunction\n      ? enumerateParametersUsableInExpressions(\n          this.props.scope.eventsFunction\n        ).map(parameterMetadata => ({\n          kind: 'Text',\n          completion: `\"${parameterMetadata.getName()}\"`,\n        }))\n      : [];\n\n    return (\n      <GenericExpressionField\n        expressionType=\"string\"\n        onGetAdditionalAutocompletions={expression =>\n          parameterNames.filter(\n            ({ completion }) => completion.indexOf(expression) === 0\n          )\n        }\n        ref={field => (this._field = field)}\n        {...this.props}\n      />\n    );\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport GenericExpressionField from './GenericExpressionField';\nimport { enumerateExternalLayouts } from '../../ProjectManager/EnumerateProjectItems';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport { type ExpressionAutocompletion } from '../../ExpressionAutocompletion';\n\nexport default class ExternalLayoutNameField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?GenericExpressionField;\n\n  focus(selectAll: boolean = false) {\n    if (this._field) this._field.focus(selectAll);\n  }\n\n  render() {\n    const externalLayoutNames: Array<ExpressionAutocompletion> = this.props\n      .project\n      ? enumerateExternalLayouts(this.props.project).map(externalLayout => ({\n          kind: 'Text',\n          completion: `\"${externalLayout.getName()}\"`,\n        }))\n      : [];\n\n    return (\n      <GenericExpressionField\n        expressionType=\"string\"\n        onGetAdditionalAutocompletions={expression =>\n          externalLayoutNames.filter(\n            ({ completion }) => completion.indexOf(expression) === 0\n          )\n        }\n        ref={field => (this._field = field)}\n        {...this.props}\n      />\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { instructionInvalidParameter } from './ClassNames';\n\ntype Props = {| children: React.Node, isEmpty?: boolean |};\n\n/**\n * Displayed when a parameter is invalid\n */\nexport default ({ children, isEmpty }: Props) =>\n  isEmpty ? (\n    <span className={instructionInvalidParameter}>&lt; {children} &gt;</span>\n  ) : (\n    <span className={instructionInvalidParameter}>{children}</span>\n  );\n","// @flow\nimport * as React from 'react';\nimport { instructionMissingParameter } from './ClassNames';\n\n/**\n * Displayed when a parameter is missing (i.e: empty and not optional)\n */\nexport default () => <span className={instructionMissingParameter} />;\n","// @flow\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport TextField from '../../../UI/TextField';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  selectableArea,\n  disabledText,\n} from '../ClassNames';\nimport { type EventRendererProps } from './EventRenderer';\nimport {\n  shouldActivate,\n  shouldCloseOrCancel,\n  shouldValidate,\n} from '../../../UI/KeyboardShortcuts/InteractionKeys';\nimport { Trans } from '@lingui/macro';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  container: {\n    height: '2.5em',\n    display: 'flex',\n    alignItems: 'center',\n    padding: 5,\n    overflow: 'hidden',\n  },\n  title: {\n    fontSize: '1.3em',\n    width: '100%',\n  },\n};\n\nexport default class GroupEvent extends React.Component<EventRendererProps, *> {\n  state = {\n    editing: false,\n  };\n  _textField: ?TextField = null;\n\n  edit = () => {\n    this.setState(\n      {\n        editing: true,\n      },\n      () => {\n        if (this._textField) this._textField.focus();\n      }\n    );\n  };\n\n  endEditing = () => {\n    this.setState({\n      editing: false,\n    });\n  };\n\n  render() {\n    var groupEvent = gd.asGroupEvent(this.props.event);\n\n    const r = groupEvent.getBackgroundColorR(),\n      g = groupEvent.getBackgroundColorG(),\n      b = groupEvent.getBackgroundColorB();\n\n    const textColor = (r + g + b) / 3 > 200 ? 'black' : 'white';\n\n    return (\n      <div\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n        })}\n        style={{\n          ...styles.container,\n          backgroundColor: `rgb(${r}, ${g}, ${b})`,\n        }}\n        onClick={this.edit}\n        onKeyPress={event => {\n          if (shouldActivate(event)) {\n            this.edit();\n          }\n        }}\n        tabIndex={0}\n      >\n        {this.state.editing ? (\n          <TextField\n            ref={textField => (this._textField = textField)}\n            value={groupEvent.getName()}\n            hintText={t`<Enter group name>`}\n            onBlur={this.endEditing}\n            onChange={(e, text) => {\n              groupEvent.setName(text);\n              this.forceUpdate();\n            }}\n            style={styles.title}\n            inputStyle={{\n              color: textColor,\n              WebkitTextFillColor: textColor,\n            }}\n            underlineFocusStyle={{\n              borderColor: textColor,\n            }}\n            fullWidth\n            id=\"group-title\"\n            onKeyUp={event => {\n              if (shouldCloseOrCancel(event)) {\n                this.endEditing();\n              }\n            }}\n            onKeyPress={event => {\n              if (shouldValidate(event)) {\n                this.endEditing();\n              }\n            }}\n          />\n        ) : (\n          <span\n            className={classNames({\n              [selectableArea]: true,\n              [disabledText]: this.props.disabled,\n            })}\n            style={{ ...styles.title, color: textColor }}\n          >\n            {groupEvent.getName() ? (\n              groupEvent.getName()\n            ) : (\n              <Trans>{`<Enter group name>`}</Trans>\n            )}\n          </span>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport TextField from '../../../UI/TextField';\nimport { rgbToHex } from '../../../Utils/ColorTransformer';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  selectableArea,\n  disabledText,\n} from '../ClassNames';\nimport { type EventRendererProps } from './EventRenderer';\nimport {\n  shouldActivate,\n  shouldCloseOrCancel,\n} from '../../../UI/KeyboardShortcuts/InteractionKeys';\nconst gd: libGDevelop = global.gd;\n\nconst commentTextStyle = {\n  width: '100%',\n};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    padding: 5,\n    overflow: 'hidden',\n    minHeight: '2.1em',\n  },\n  commentTextField: commentTextStyle,\n  commentSpan: {\n    ...commentTextStyle,\n    boxSizing: 'border-box',\n    alignItems: 'center',\n    height: '100%',\n    whiteSpace: 'pre-wrap',\n    lineHeight: 1.5,\n    border: 1,\n  },\n};\n\ntype State = {|\n  editing: boolean,\n|};\n\nexport default class CommentEvent extends React.Component<\n  EventRendererProps,\n  State\n> {\n  state = {\n    editing: false,\n  };\n\n  _selectable: ?HTMLSpanElement;\n  _textField: ?TextField;\n\n  edit = () => {\n    this.setState(\n      {\n        editing: true,\n      },\n      () => {\n        if (this._textField) this._textField.focus();\n      }\n    );\n  };\n\n  onEvent = (e: any, text: string) => {\n    const commentEvent = gd.asCommentEvent(this.props.event);\n    commentEvent.setComment(text);\n\n    this.props.onUpdate();\n    this.forceUpdate();\n  };\n\n  endEditing = () => {\n    if (!this._textField) return;\n\n    this.setState(\n      {\n        editing: false,\n      },\n      () => this.props.onUpdate()\n    );\n  };\n\n  _getCommentHTML = () => {\n    const commentEvent = gd.asCommentEvent(this.props.event);\n    return commentEvent\n      .getComment()\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\\n/g, '<br>');\n  };\n\n  render() {\n    const commentEvent = gd.asCommentEvent(this.props.event);\n\n    const backgroundColor = rgbToHex(\n      commentEvent.getBackgroundColorRed(),\n      commentEvent.getBackgroundColorGreen(),\n      commentEvent.getBackgroundColorBlue()\n    );\n\n    const textColor = rgbToHex(\n      commentEvent.getTextColorRed(),\n      commentEvent.getTextColorGreen(),\n      commentEvent.getTextColorBlue()\n    );\n\n    return (\n      <div\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n        })}\n        style={{\n          ...styles.container,\n          backgroundColor: `#${backgroundColor}`,\n        }}\n        onClick={this.edit}\n        onKeyPress={event => {\n          if (shouldActivate(event)) {\n            this.edit();\n          }\n        }}\n        tabIndex={0}\n      >\n        {this.state.editing ? (\n          <TextField\n            multiline\n            margin=\"none\"\n            ref={textField => (this._textField = textField)}\n            value={commentEvent.getComment()}\n            hintText={t`<Enter comment>`}\n            onBlur={this.endEditing}\n            onChange={this.onEvent}\n            style={styles.commentTextField}\n            inputStyle={{\n              color: `#${textColor}`,\n              padding: 0,\n              lineHeight: 1.5,\n              fontSize: '1em',\n            }}\n            underlineFocusStyle={{\n              borderColor: `#${textColor}`,\n            }}\n            fullWidth\n            id=\"comment-title\"\n            onKeyUp={event => {\n              if (shouldCloseOrCancel(event)) {\n                this.endEditing();\n              }\n            }}\n          />\n        ) : (\n          <span\n            ref={selectable => (this._selectable = selectable)}\n            className={classNames({\n              [selectableArea]: true,\n              [disabledText]: this.props.disabled,\n            })}\n            style={{\n              ...styles.commentSpan,\n              color: `#${textColor}`,\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this._getCommentHTML(),\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport InstructionsList from '../InstructionsList.js';\nimport classNames from 'classnames';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  selectableArea,\n  executableEventContainer,\n  disabledText,\n} from '../ClassNames';\nimport InlinePopover from '../../InlinePopover';\nimport ObjectField from '../../ParameterFields/ObjectField';\nimport { type EventRendererProps } from './EventRenderer';\nimport ConditionsActionsColumns from '../ConditionsActionsColumns';\nimport { shouldActivate } from '../../../UI/KeyboardShortcuts/InteractionKeys.js';\nimport { Trans } from '@lingui/macro';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  instructionsContainer: {\n    display: 'flex',\n  },\n  actionsList: {\n    flex: 1,\n  },\n};\n\nexport default class ForEachEvent extends React.Component<\n  EventRendererProps,\n  *\n> {\n  _objectField: ?ObjectField = null;\n  state = {\n    editing: false,\n    editingPreviousValue: null,\n    anchorEl: null,\n  };\n\n  edit = (domEvent: any) => {\n    const forEachEvent = gd.asForEachEvent(this.props.event);\n    const objectName = forEachEvent.getObjectToPick();\n\n    // We should not need to use a timeout, but\n    // if we don't do this, the InlinePopover's clickaway listener\n    // is immediately picking up the event and closing.\n    // Search the rest of the codebase for inlinepopover-event-hack\n    const anchorEl = domEvent.currentTarget;\n    setTimeout(\n      () =>\n        this.setState(\n          {\n            editing: true,\n            editingPreviousValue: objectName,\n            anchorEl,\n          },\n          () => {\n            // Give a bit of time for the popover to mount itself\n            setTimeout(() => {\n              if (this._objectField) this._objectField.focus();\n            }, 10);\n          }\n        ),\n      10\n    );\n  };\n\n  cancelEditing = () => {\n    this.endEditing();\n\n    const forEachEvent = gd.asForEachEvent(this.props.event);\n    const { editingPreviousValue } = this.state;\n    if (editingPreviousValue != null) {\n      forEachEvent.setObjectToPick(editingPreviousValue);\n      this.forceUpdate();\n    }\n  };\n\n  endEditing = () => {\n    const { anchorEl } = this.state;\n    // Put back the focus after closing the inline popover.\n    // $FlowFixMe\n    if (anchorEl) anchorEl.focus();\n\n    this.setState({\n      editing: false,\n      editingPreviousValue: null,\n      anchorEl: null,\n    });\n  };\n\n  render() {\n    const forEachEvent = gd.asForEachEvent(this.props.event);\n    const objectName = forEachEvent.getObjectToPick();\n\n    return (\n      <div\n        style={styles.container}\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n          [executableEventContainer]: true,\n        })}\n      >\n        <div>\n          <span\n            className={classNames({\n              [selectableArea]: true,\n              [disabledText]: this.props.disabled,\n            })}\n            onClick={this.edit}\n            onKeyPress={event => {\n              if (shouldActivate(event)) {\n                this.edit(event);\n              }\n            }}\n            tabIndex={0}\n          >\n            {objectName ? (\n              <Trans>Repeat for each instance of {objectName}:</Trans>\n            ) : (\n              <i>\n                <Trans>\n                  Click to choose for which objects this event will be repeated\n                </Trans>\n              </i>\n            )}\n          </span>\n        </div>\n        <ConditionsActionsColumns\n          leftIndentWidth={this.props.leftIndentWidth}\n          windowWidth={this.props.windowWidth}\n          renderConditionsList={({ style, className }) => (\n            <InstructionsList\n              instrsList={forEachEvent.getConditions()}\n              style={style}\n              className={className}\n              selection={this.props.selection}\n              areConditions\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onAddInstructionContextMenu={\n                this.props.onAddInstructionContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n          renderActionsList={({ className }) => (\n            <InstructionsList\n              instrsList={forEachEvent.getActions()}\n              style={\n                {\n                  ...styles.actionsList,\n                } /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n              }\n              className={className}\n              selection={this.props.selection}\n              areConditions={false}\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onAddInstructionContextMenu={\n                this.props.onAddInstructionContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n        />\n        <InlinePopover\n          open={this.state.editing}\n          anchorEl={this.state.anchorEl}\n          onRequestClose={this.cancelEditing}\n          onApply={this.endEditing}\n        >\n          <ObjectField\n            project={this.props.project}\n            scope={this.props.scope}\n            globalObjectsContainer={this.props.globalObjectsContainer}\n            objectsContainer={this.props.objectsContainer}\n            value={objectName}\n            onChange={text => {\n              forEachEvent.setObjectToPick(text);\n              this.props.onUpdate();\n            }}\n            isInline\n            onRequestClose={this.cancelEditing}\n            onApply={this.endEditing}\n            ref={objectField => (this._objectField = objectField)}\n          />\n        </InlinePopover>\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport InstructionsList from '../InstructionsList.js';\nimport classNames from 'classnames';\nimport {\n  selectableArea,\n  largeSelectableArea,\n  largeSelectedArea,\n  executableEventContainer,\n  disabledText,\n  instructionParameter,\n  nameAndIconContainer,\n  icon,\n} from '../ClassNames';\nimport InlinePopover from '../../InlinePopover';\nimport SceneVariableField from '../../ParameterFields/SceneVariableField';\nimport { type EventRendererProps } from './EventRenderer';\nimport ConditionsActionsColumns from '../ConditionsActionsColumns';\nimport { Trans } from '@lingui/macro';\nimport { shouldActivate } from '../../../UI/KeyboardShortcuts/InteractionKeys.js';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  instructionsContainer: {\n    display: 'flex',\n  },\n  actionsList: {\n    flex: 1,\n  },\n  variableContainer: {\n    marginLeft: '3px',\n    marginRight: '2px',\n  },\n  eventLabel: {\n    marginLeft: '5px',\n    whiteSpace: 'normal',\n    wordWrap: 'break-word',\n  },\n};\n\ntype State = {|\n  editingValueIteratorVariableName: boolean,\n  editingKeyIteratorVariableName: boolean,\n  editingIterableVariableName: boolean,\n  editingPreviousValue: ?string,\n  anchorEl: ?HTMLSpanElement,\n|};\n\nexport default class ForEachChildVariableEvent extends React.Component<\n  EventRendererProps,\n  State\n> {\n  _valueIteratorField: ?SceneVariableField = null;\n  _keyIteratorField: ?SceneVariableField = null;\n  _iterableField: ?SceneVariableField = null;\n\n  state = {\n    editingValueIteratorVariableName: false,\n    editingKeyIteratorVariableName: false,\n    editingIterableVariableName: false,\n    editingPreviousValue: null,\n    anchorEl: null,\n  };\n\n  edit = (\n    variable: 'iterable' | 'iteratorValue' | 'iteratorKey',\n    anchorEl: HTMLSpanElement\n  ) => {\n    const forEachChildVariableEvent = gd.asForEachChildVariableEvent(\n      this.props.event\n    );\n    const valueIteratorName = forEachChildVariableEvent.getValueIteratorVariableName();\n    const keyIteratorName = forEachChildVariableEvent.getKeyIteratorVariableName();\n    const iterableName = forEachChildVariableEvent.getIterableVariableName();\n\n    // We should not need to use a timeout, but\n    // if we don't do this, the InlinePopover's clickaway listener\n    // is immediately picking up the event and closing.\n    // Search the rest of the codebase for inlinepopover-event-hack\n    setTimeout(\n      () =>\n        this.setState(\n          {\n            editingValueIteratorVariableName: variable === 'iteratorValue',\n            editingKeyIteratorVariableName: variable === 'iteratorKey',\n            editingIterableVariableName: variable === 'iterable',\n            editingPreviousValue:\n              variable === 'iterable'\n                ? iterableName\n                : variable === 'iteratorValue'\n                ? valueIteratorName\n                : keyIteratorName,\n            anchorEl,\n          },\n          () => {\n            // Give a bit of time for the popover to mount itself\n            setTimeout(() => {\n              const field =\n                variable === 'iterable'\n                  ? this._iterableField\n                  : variable === 'iteratorValue'\n                  ? this._valueIteratorField\n                  : this._keyIteratorField;\n              if (field) field.focus();\n            }, 10);\n          }\n        ),\n      10\n    );\n  };\n\n  cancelEditing = () => {\n    this.endEditing();\n\n    const forEachChildVariableEvent = gd.asForEachChildVariableEvent(\n      this.props.event\n    );\n    const {\n      editingPreviousValue,\n      editingIterableVariableName,\n      editingValueIteratorVariableName,\n      editingKeyIteratorVariableName,\n    } = this.state;\n    if (editingPreviousValue != null) {\n      if (editingIterableVariableName) {\n        forEachChildVariableEvent.setIterableVariableName(editingPreviousValue);\n      } else if (editingValueIteratorVariableName) {\n        forEachChildVariableEvent.setValueIteratorVariableName(\n          editingPreviousValue\n        );\n      } else if (editingKeyIteratorVariableName) {\n        forEachChildVariableEvent.setKeyIteratorVariableName(\n          editingPreviousValue\n        );\n      }\n      this.forceUpdate();\n    }\n  };\n\n  endEditing = () => {\n    const { anchorEl } = this.state;\n    // Put back the focus after closing the inline popover.\n    // $FlowFixMe\n    if (anchorEl) anchorEl.focus();\n\n    this.setState({\n      editingKeyIteratorVariableName: false,\n      editingValueIteratorVariableName: false,\n      editingIterableVariableName: false,\n      editingPreviousValue: null,\n      anchorEl: null,\n    });\n  };\n\n  render() {\n    const forEachChildVariableEvent = gd.asForEachChildVariableEvent(\n      this.props.event\n    );\n    const valueIteratorName = forEachChildVariableEvent.getValueIteratorVariableName();\n    const keyIteratorName = forEachChildVariableEvent.getKeyIteratorVariableName();\n    const iterableName = forEachChildVariableEvent.getIterableVariableName();\n\n    return (\n      <div\n        style={styles.container}\n        className={classNames({\n          [executableEventContainer]: true,\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n        })}\n      >\n        <div style={styles.eventLabel}>\n          <Trans>\n            <span\n              className={classNames({\n                [disabledText]: this.props.disabled,\n              })}\n            >\n              For every child in\n              <span\n                className={classNames({\n                  [selectableArea]: true,\n                  [instructionParameter]: true,\n                  [nameAndIconContainer]: true,\n                  scenevar: true,\n                })}\n                style={styles.variableContainer}\n                onClick={e => this.edit('iterable', e.currentTarget)}\n                onKeyPress={event => {\n                  if (shouldActivate(event)) {\n                    this.edit('iterable', event.currentTarget);\n                  }\n                }}\n                tabIndex={0}\n              >\n                <img\n                  className={icon}\n                  src=\"res/types/scenevar.png\"\n                  alt=\"Scene variable\"\n                />\n                {iterableName.length !== 0 ? (\n                  <span>{iterableName}</span>\n                ) : (\n                  <span className=\"instruction-missing-parameter\">\n                    <Trans>{`<Select a variable>`}</Trans>\n                  </span>\n                )}\n              </span>\n              , store the child in variable\n              <span\n                className={classNames({\n                  [selectableArea]: true,\n                  [instructionParameter]: true,\n                  [nameAndIconContainer]: true,\n                  scenevar: true,\n                })}\n                style={styles.variableContainer}\n                onClick={e => this.edit('iteratorValue', e.currentTarget)}\n                onKeyPress={event => {\n                  if (shouldActivate(event)) {\n                    this.edit('iteratorValue', event.currentTarget);\n                  }\n                }}\n                tabIndex={0}\n              >\n                <img\n                  className={icon}\n                  src=\"res/types/scenevar.png\"\n                  alt=\"Scene variable\"\n                />\n                {valueIteratorName.length !== 0 ? (\n                  <span>{valueIteratorName}</span>\n                ) : (\n                  <span>\n                    <Trans>{`<Select a variable> (optional)`}</Trans>\n                  </span>\n                )}\n              </span>\n              , the child name in\n              <span\n                className={classNames({\n                  [selectableArea]: true,\n                  [instructionParameter]: true,\n                  [nameAndIconContainer]: true,\n                  scenevar: true,\n                })}\n                style={styles.variableContainer}\n                onClick={e => this.edit('iteratorKey', e.currentTarget)}\n                onKeyPress={event => {\n                  if (shouldActivate(event)) {\n                    this.edit('iteratorKey', event.currentTarget);\n                  }\n                }}\n                tabIndex={0}\n              >\n                <img\n                  className={icon}\n                  src=\"res/types/scenevar.png\"\n                  alt=\"Scene variable\"\n                />\n                {keyIteratorName.length !== 0 ? (\n                  <span>{keyIteratorName}</span>\n                ) : (\n                  <span>\n                    <Trans>{`<Select a variable> (optional)`}</Trans>\n                  </span>\n                )}\n              </span>\n              and do:\n            </span>\n          </Trans>\n        </div>\n        <ConditionsActionsColumns\n          leftIndentWidth={this.props.leftIndentWidth}\n          windowWidth={this.props.windowWidth}\n          renderConditionsList={({ style, className }) => (\n            <InstructionsList\n              instrsList={forEachChildVariableEvent.getConditions()}\n              style={style}\n              className={className}\n              selection={this.props.selection}\n              areConditions\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onAddInstructionContextMenu={\n                this.props.onAddInstructionContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n          renderActionsList={({ className }) => (\n            <InstructionsList\n              instrsList={forEachChildVariableEvent.getActions()}\n              style={\n                {\n                  ...styles.actionsList,\n                } /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n              }\n              className={className}\n              selection={this.props.selection}\n              areConditions={false}\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onAddInstructionContextMenu={\n                this.props.onAddInstructionContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n        />\n        <InlinePopover\n          open={this.state.editingValueIteratorVariableName}\n          anchorEl={this.state.anchorEl}\n          onRequestClose={this.cancelEditing}\n          onApply={this.endEditing}\n        >\n          <SceneVariableField\n            project={this.props.project}\n            scope={this.props.scope}\n            globalObjectsContainer={this.props.globalObjectsContainer}\n            objectsContainer={this.props.objectsContainer}\n            value={valueIteratorName}\n            onChange={text => {\n              forEachChildVariableEvent.setValueIteratorVariableName(text);\n              this.props.onUpdate();\n            }}\n            isInline\n            onRequestClose={this.cancelEditing}\n            onApply={this.endEditing}\n            ref={iteratorField => (this._valueIteratorField = iteratorField)}\n          />\n        </InlinePopover>\n        <InlinePopover\n          open={this.state.editingKeyIteratorVariableName}\n          anchorEl={this.state.anchorEl}\n          onRequestClose={this.cancelEditing}\n          onApply={this.endEditing}\n        >\n          <SceneVariableField\n            project={this.props.project}\n            scope={this.props.scope}\n            globalObjectsContainer={this.props.globalObjectsContainer}\n            objectsContainer={this.props.objectsContainer}\n            value={keyIteratorName}\n            onChange={text => {\n              forEachChildVariableEvent.setKeyIteratorVariableName(text);\n              this.props.onUpdate();\n            }}\n            isInline\n            onRequestClose={this.cancelEditing}\n            onApply={this.endEditing}\n            ref={iteratorField => (this._keyIteratorField = iteratorField)}\n          />\n        </InlinePopover>\n        <InlinePopover\n          open={this.state.editingIterableVariableName}\n          anchorEl={this.state.anchorEl}\n          onRequestClose={this.cancelEditing}\n          onApply={this.endEditing}\n        >\n          <SceneVariableField\n            project={this.props.project}\n            scope={this.props.scope}\n            globalObjectsContainer={this.props.globalObjectsContainer}\n            objectsContainer={this.props.objectsContainer}\n            value={iterableName}\n            onChange={text => {\n              forEachChildVariableEvent.setIterableVariableName(text);\n              this.props.onUpdate();\n            }}\n            isInline\n            onRequestClose={this.cancelEditing}\n            onApply={this.endEditing}\n            ref={iterableField => (this._iterableField = iterableField)}\n          />\n        </InlinePopover>\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport InstructionsList from '../InstructionsList.js';\nimport classNames from 'classnames';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  selectableArea,\n  executableEventContainer,\n  disabledText,\n} from '../ClassNames';\nimport InlinePopover from '../../InlinePopover';\nimport DefaultField from '../../ParameterFields/DefaultField';\nimport { type EventRendererProps } from './EventRenderer';\nimport ConditionsActionsColumns from '../ConditionsActionsColumns';\nimport { shouldActivate } from '../../../UI/KeyboardShortcuts/InteractionKeys.js';\nimport { Trans } from '@lingui/macro';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  instructionsContainer: {\n    display: 'flex',\n  },\n  actionsList: {\n    flex: 1,\n  },\n};\n\nexport default class RepeatEvent extends React.Component<\n  EventRendererProps,\n  *\n> {\n  _field: ?DefaultField = null;\n  state = {\n    editing: false,\n    editingPreviousValue: null,\n    anchorEl: null,\n  };\n\n  edit = (domEvent: any) => {\n    const repeatEvent = gd.asRepeatEvent(this.props.event);\n    const expression = repeatEvent.getRepeatExpression();\n\n    // We should not need to use a timeout, but\n    // if we don't do this, the InlinePopover's clickaway listener\n    // is immediately picking up the event and closing.\n    // Search the rest of the codebase for inlinepopover-event-hack\n    const anchorEl = domEvent.currentTarget;\n    setTimeout(\n      () =>\n        this.setState(\n          {\n            editing: true,\n            editingPreviousValue: expression,\n            anchorEl,\n          },\n          () => {\n            // Give a bit of time for the popover to mount itself\n            setTimeout(() => {\n              if (this._field) this._field.focus();\n            }, 10);\n          }\n        ),\n      10\n    );\n  };\n\n  cancelEditing = () => {\n    this.endEditing();\n\n    const repeatEvent = gd.asRepeatEvent(this.props.event);\n    const { editingPreviousValue } = this.state;\n    if (editingPreviousValue != null) {\n      repeatEvent.setRepeatExpression(editingPreviousValue);\n      this.forceUpdate();\n    }\n  };\n\n  endEditing = () => {\n    const { anchorEl } = this.state;\n\n    // Put back the focus after closing the inline popover.\n    // $FlowFixMe\n    if (anchorEl) anchorEl.focus();\n\n    this.setState({\n      editing: false,\n      editingPreviousValue: null,\n      anchorEl: null,\n    });\n  };\n\n  render() {\n    const repeatEvent = gd.asRepeatEvent(this.props.event);\n    const expression = repeatEvent.getRepeatExpression();\n\n    return (\n      <div\n        style={styles.container}\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n          [executableEventContainer]: true,\n        })}\n      >\n        <div>\n          <span\n            className={classNames({\n              [selectableArea]: true,\n              [disabledText]: this.props.disabled,\n            })}\n            onClick={this.edit}\n            onKeyPress={event => {\n              if (shouldActivate(event)) {\n                this.edit(event);\n              }\n            }}\n            tabIndex={0}\n          >\n            {expression ? (\n              <Trans>Repeat {expression} times:</Trans>\n            ) : (\n              <i>\n                <Trans>Click to choose how many times will be repeated</Trans>\n              </i>\n            )}\n          </span>\n        </div>\n        <ConditionsActionsColumns\n          leftIndentWidth={this.props.leftIndentWidth}\n          windowWidth={this.props.windowWidth}\n          renderConditionsList={({ style, className }) => (\n            <InstructionsList\n              instrsList={repeatEvent.getConditions()}\n              style={style}\n              className={className}\n              selection={this.props.selection}\n              areConditions\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onAddInstructionContextMenu={\n                this.props.onAddInstructionContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n          renderActionsList={({ className }) => (\n            <InstructionsList\n              instrsList={repeatEvent.getActions()}\n              style={\n                {\n                  ...styles.actionsList,\n                } /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n              }\n              className={className}\n              selection={this.props.selection}\n              areConditions={false}\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onAddInstructionContextMenu={\n                this.props.onAddInstructionContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n        />\n        <InlinePopover\n          open={this.state.editing}\n          anchorEl={this.state.anchorEl}\n          onRequestClose={this.cancelEditing}\n          onApply={this.endEditing}\n        >\n          <DefaultField\n            project={this.props.project}\n            scope={this.props.scope}\n            globalObjectsContainer={this.props.globalObjectsContainer}\n            objectsContainer={this.props.objectsContainer}\n            value={expression}\n            onChange={text => {\n              repeatEvent.setRepeatExpression(text);\n              this.props.onUpdate();\n            }}\n            isInline\n            ref={field => (this._field = field)}\n          />\n        </InlinePopover>\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport InstructionsList from '../InstructionsList';\nimport classNames from 'classnames';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  executableEventContainer,\n  disabledText,\n  conditionsContainer,\n} from '../ClassNames';\nimport { type EventRendererProps } from './EventRenderer';\nimport ConditionsActionsColumns from '../ConditionsActionsColumns';\nimport { Trans } from '@lingui/macro';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  instructionsContainer: {\n    display: 'flex',\n  },\n  actionsList: {\n    flex: 1,\n  },\n};\n\nexport default class ForEachEvent extends React.Component<\n  EventRendererProps,\n  *\n> {\n  render() {\n    var whileEvent = gd.asWhileEvent(this.props.event);\n\n    return (\n      <div\n        style={styles.container}\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n          [executableEventContainer]: true,\n        })}\n      >\n        <div\n          className={classNames({\n            [disabledText]: this.props.disabled,\n          })}\n        >\n          <Trans>While these conditions are true:</Trans>\n        </div>\n        <InstructionsList\n          instrsList={whileEvent.getWhileConditions()}\n          style={\n            {} /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n          }\n          className={conditionsContainer}\n          selection={this.props.selection}\n          areConditions\n          onAddNewInstruction={this.props.onAddNewInstruction}\n          onPasteInstructions={this.props.onPasteInstructions}\n          onMoveToInstruction={this.props.onMoveToInstruction}\n          onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n          onInstructionClick={this.props.onInstructionClick}\n          onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n          onInstructionContextMenu={this.props.onInstructionContextMenu}\n          onAddInstructionContextMenu={this.props.onAddInstructionContextMenu}\n          onParameterClick={this.props.onParameterClick}\n          disabled={this.props.disabled}\n          renderObjectThumbnail={this.props.renderObjectThumbnail}\n          screenType={this.props.screenType}\n          windowWidth={this.props.windowWidth}\n        />\n        <div\n          className={classNames({\n            [disabledText]: this.props.disabled,\n          })}\n        >\n          <Trans>Repeat these:</Trans>\n        </div>\n        <ConditionsActionsColumns\n          leftIndentWidth={this.props.leftIndentWidth}\n          windowWidth={this.props.windowWidth}\n          renderConditionsList={({ style, className }) => (\n            <InstructionsList\n              instrsList={whileEvent.getConditions()}\n              style={style}\n              className={className}\n              selection={this.props.selection}\n              areConditions\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onAddInstructionContextMenu={\n                this.props.onAddInstructionContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n          renderActionsList={({ className }) => (\n            <InstructionsList\n              instrsList={whileEvent.getActions()}\n              style={\n                {\n                  ...styles.actionsList,\n                } /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n              }\n              className={className}\n              selection={this.props.selection}\n              areConditions={false}\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onAddInstructionContextMenu={\n                this.props.onAddInstructionContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport * as React from 'react';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport IconButton from '../../../../UI/IconButton';\nimport classNames from 'classnames';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  selectableArea,\n  linkContainer,\n  disabledText,\n} from '../../ClassNames';\nimport InlinePopover from '../../../InlinePopover';\nimport ExternalEventsAutoComplete from './ExternalEventsAutoComplete';\nimport { showWarningBox } from '../../../../UI/Messages/MessageBox';\nimport { type EventRendererProps } from '../EventRenderer';\nimport { shouldActivate } from '../../../../UI/KeyboardShortcuts/InteractionKeys';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  container: {\n    height: '4em',\n    display: 'flex',\n    alignItems: 'center',\n    padding: 5,\n  },\n  title: {\n    fontSize: '1.2em',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  openInNewIcon: {\n    fontSize: '1.5em',\n  },\n};\n\nexport default class LinkEvent extends React.Component<EventRendererProps, *> {\n  _externalEventsAutoComplete: ?ExternalEventsAutoComplete = null;\n\n  state = {\n    editing: false,\n    editingPreviousValue: null,\n    anchorEl: null,\n  };\n\n  edit = (domEvent: any) => {\n    const linkEvent = gd.asLinkEvent(this.props.event);\n    const target = linkEvent.getTarget();\n\n    // We should not need to use a timeout, but\n    // if we don't do this, the InlinePopover's clickaway listener\n    // is immediately picking up the event and closing.\n    // Search the rest of the codebase for inlinepopover-event-hack\n    const anchorEl = domEvent.currentTarget;\n    setTimeout(\n      () =>\n        this.setState(\n          {\n            editing: true,\n            editingPreviousValue: target,\n            anchorEl,\n          },\n          () => {\n            // Give a bit of time for the popover to mount itself\n            setTimeout(() => {\n              if (this._externalEventsAutoComplete)\n                this._externalEventsAutoComplete.focus();\n            }, 10);\n          }\n        ),\n      10\n    );\n  };\n\n  openTarget = (i18n: I18nType) => {\n    const { project, event, onOpenLayout, onOpenExternalEvents } = this.props;\n    const linkEvent = gd.asLinkEvent(event);\n    const target = linkEvent.getTarget();\n\n    if (project.hasExternalEventsNamed(target)) {\n      onOpenExternalEvents(target);\n    } else if (project.hasLayoutNamed(target)) {\n      onOpenLayout(target);\n    } else {\n      showWarningBox(\n        i18n._(\n          t`The specified external events do not exist in the game. Be sure that the name is correctly spelled or create them using the project manager.`\n        )\n      );\n    }\n  };\n\n  cancelEditing = () => {\n    this.endEditing();\n\n    const linkEvent = gd.asLinkEvent(this.props.event);\n    const { editingPreviousValue } = this.state;\n    if (editingPreviousValue != null) {\n      linkEvent.setTarget(editingPreviousValue);\n      this.forceUpdate();\n    }\n  };\n\n  endEditing = () => {\n    const { anchorEl } = this.state;\n\n    // Put back the focus after closing the inline popover.\n    // $FlowFixMe\n    if (anchorEl) anchorEl.focus();\n\n    this.setState({\n      editing: false,\n      editingPreviousValue: null,\n      anchorEl: null,\n    });\n  };\n\n  render() {\n    const linkEvent = gd.asLinkEvent(this.props.event);\n    const target = linkEvent.getTarget();\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <div\n            className={classNames({\n              [largeSelectableArea]: true,\n              [largeSelectedArea]: this.props.selected,\n              [linkContainer]: true,\n            })}\n            style={styles.container}\n          >\n            <span\n              style={styles.title}\n              className={classNames({\n                [disabledText]: this.props.disabled,\n              })}\n            >\n              {this.props.scope.layout ? (\n                <>\n                  <Trans>Include events from</Trans>{' '}\n                  <i\n                    className={classNames({\n                      [selectableArea]: true,\n                    })}\n                    onClick={this.edit}\n                    onKeyPress={event => {\n                      if (shouldActivate(event)) {\n                        this.edit(event);\n                      }\n                    }}\n                    tabIndex={0}\n                  >\n                    {target || (\n                      <Trans>{`<Enter the name of external events>`}</Trans>\n                    )}\n                  </i>{' '}\n                </>\n              ) : (\n                <Trans>Links can't be used outside of a scene.</Trans>\n              )}\n            </span>\n            <IconButton\n              onClick={() => this.openTarget(i18n)}\n              disabled={!target}\n            >\n              <OpenInNew style={styles.openInNewIcon} />\n            </IconButton>\n            <InlinePopover\n              open={this.state.editing}\n              anchorEl={this.state.anchorEl}\n              onRequestClose={this.cancelEditing}\n              onApply={this.endEditing}\n            >\n              <ExternalEventsAutoComplete\n                project={this.props.project}\n                value={target}\n                sceneName={\n                  this.props.scope.layout\n                    ? this.props.scope.layout.getName()\n                    : undefined\n                }\n                externalEventsName={\n                  this.props.scope.externalEvents\n                    ? this.props.scope.externalEvents.getName()\n                    : undefined\n                }\n                onChange={text => {\n                  linkEvent.setTarget(text);\n                  this.props.onUpdate();\n                }}\n                isInline\n                onRequestClose={this.cancelEditing}\n                onApply={this.endEditing}\n                ref={externalEventsAutoComplete =>\n                  (this._externalEventsAutoComplete = externalEventsAutoComplete)\n                }\n              />\n            </InlinePopover>\n          </div>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport {\n  enumerateLayouts,\n  enumerateExternalEvents,\n} from '../../../../ProjectManager/EnumerateProjectItems';\nimport SemiControlledAutoComplete, {\n  type DataSource,\n} from '../../../../UI/SemiControlledAutoComplete';\n\nconst getList = (\n  currentSceneName: ?string,\n  currentExternalEventName: ?string,\n  project: ?gdProject\n): DataSource => {\n  if (!project || !currentSceneName) {\n    return [];\n  }\n\n  const externalEvents = enumerateExternalEvents(project)\n    .filter(\n      externalEvents => externalEvents.getName() !== currentExternalEventName\n    )\n    .map(externalEvents => ({\n      text: externalEvents.getName(),\n      value: externalEvents.getName(),\n    }));\n\n  const layouts = enumerateLayouts(project)\n    .filter(layout => layout.getName() !== currentSceneName)\n    .map(layout => ({\n      text: layout.getName(),\n      value: layout.getName(),\n    }));\n\n  return [...externalEvents, { type: 'separator' }, ...layouts];\n};\n\ntype Props = {|\n  onChange: string => void,\n  value: string,\n  project?: gdProject,\n  isInline?: boolean,\n  onRequestClose?: () => void,\n  onApply?: () => void,\n  sceneName?: string,\n  externalEventsName?: string,\n|};\n\nexport default class ExternalEventsAutoComplete extends React.Component<\n  Props,\n  {||}\n> {\n  _field: ?any;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const {\n      value,\n      onChange,\n      onRequestClose,\n      onApply,\n      isInline,\n      project,\n      sceneName,\n      externalEventsName,\n    } = this.props;\n\n    return (\n      <SemiControlledAutoComplete\n        margin={this.props.isInline ? 'none' : 'dense'}\n        fullWidth\n        id=\"external-events-field\"\n        value={value}\n        onChange={onChange}\n        onRequestClose={onRequestClose}\n        onApply={onApply}\n        dataSource={getList(sceneName, externalEventsName, project)}\n        openOnFocus={!isInline}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport Button from '@material-ui/core/Button';\nimport InlinePopover from '../../InlinePopover';\nimport ObjectField from '../../ParameterFields/ObjectField';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  selectableArea,\n} from '../ClassNames';\nimport { getHelpLink } from '../../../Utils/HelpLink';\nimport { type EventRendererProps } from './EventRenderer';\nimport Measure from 'react-measure';\nimport { CodeEditor } from '../../../CodeEditor';\nimport { shouldActivate } from '../../../UI/KeyboardShortcuts/InteractionKeys';\nimport { Trans } from '@lingui/macro';\nconst gd: libGDevelop = global.gd;\n\nconst fontFamily = '\"Lucida Console\", Monaco, monospace';\nconst MINIMUM_EDITOR_HEIGHT = 200;\nconst EDITOR_PADDING = 100;\n\nconst styles = {\n  container: {\n    minHeight: 30,\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#1e1e1e',\n  },\n  wrappingText: {\n    fontFamily,\n    fontSize: '0.95em',\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingTop: 2,\n    paddingBottom: 2,\n    margin: 0,\n    backgroundColor: '#1e1e1e',\n    color: '#d4d4d4',\n    overflowX: 'hidden',\n    maxWidth: '100%',\n  },\n  comment: {\n    color: '#777',\n  },\n  commentLink: {\n    cursor: 'pointer',\n    color: '#777',\n    textDecoration: 'underline',\n  },\n  expandIcon: {\n    color: '#d4d4d4',\n  },\n};\n\ntype State = {|\n  editingObject: boolean,\n  editingPreviousValue: ?string,\n  anchorEl: ?any,\n|};\n\nexport default class JsCodeEvent extends React.Component<\n  EventRendererProps,\n  State\n> {\n  _objectField: ?ObjectField = null;\n  state = {\n    editingObject: false,\n    editingPreviousValue: null,\n    anchorEl: null,\n  };\n\n  _input: ?any;\n\n  onChange = (newValue: string) => {\n    const jsCodeEvent = gd.asJsCodeEvent(this.props.event);\n    jsCodeEvent.setInlineCode(newValue);\n  };\n\n  editObject = (domEvent: any) => {\n    const jsCodeEvent = gd.asJsCodeEvent(this.props.event);\n    const parameterObjects = jsCodeEvent.getParameterObjects();\n\n    // We should not need to use a timeout, but\n    // if we don't do this, the InlinePopover's clickaway listener\n    // is immediately picking up the event and closing.\n    // Search the rest of the codebase for inlinepopover-event-hack\n    const anchorEl = domEvent.currentTarget;\n    setTimeout(\n      () =>\n        this.setState(\n          {\n            editingObject: true,\n            editingPreviousValue: parameterObjects,\n            anchorEl,\n          },\n          () => {\n            // Give a bit of time for the popover to mount itself\n            setTimeout(() => {\n              if (this._objectField) this._objectField.focus();\n            }, 10);\n          }\n        ),\n      10\n    );\n  };\n\n  cancelObjectEditing = () => {\n    this.endObjectEditing();\n\n    const jsCodeEvent = gd.asJsCodeEvent(this.props.event);\n    const { editingPreviousValue } = this.state;\n    if (editingPreviousValue != null) {\n      jsCodeEvent.setParameterObjects(editingPreviousValue);\n      this.forceUpdate();\n    }\n  };\n\n  endObjectEditing = () => {\n    const { anchorEl } = this.state;\n\n    // Put back the focus after closing the inline popover.\n    // $FlowFixMe\n    if (anchorEl) anchorEl.focus();\n\n    this.setState({\n      editingObject: false,\n      editingPreviousValue: null,\n      anchorEl: null,\n    });\n  };\n\n  toggleExpanded = () => {\n    const jsCodeEvent = gd.asJsCodeEvent(this.props.event);\n    jsCodeEvent.setEventsSheetExpanded(!jsCodeEvent.isEventsSheetExpanded());\n  };\n\n  _getCodeEditorHeight = () => {\n    const jsCodeEvent = gd.asJsCodeEvent(this.props.event);\n\n    // Always use the minimum height when collapsed.\n    if (!jsCodeEvent.isEventsSheetExpanded()) {\n      return MINIMUM_EDITOR_HEIGHT;\n    }\n\n    // Shrink the editor enough for the additional event elements to fit in the sheet space.\n    const heightToFillSheet = this.props.eventsSheetHeight - EDITOR_PADDING;\n    return Math.max(MINIMUM_EDITOR_HEIGHT, heightToFillSheet);\n  };\n\n  render() {\n    const jsCodeEvent = gd.asJsCodeEvent(this.props.event);\n    const parameterObjects = jsCodeEvent.getParameterObjects();\n\n    const textStyle = this.props.disabled ? styles.comment : undefined;\n\n    const objects = (\n      <span\n        className={classNames({\n          [selectableArea]: true,\n        })}\n        onClick={this.editObject}\n        onKeyPress={event => {\n          if (shouldActivate(event)) {\n            this.editObject(event);\n          }\n        }}\n        tabIndex={0}\n        style={textStyle}\n      >\n        {parameterObjects ? (\n          <Trans>, objects /*{parameterObjects}*/</Trans>\n        ) : (\n          <>\n            {' '}\n            <Trans>\n              {'/* Click here to choose objects to pass to JavaScript */'}\n            </Trans>\n          </>\n        )}\n      </span>\n    );\n\n    const eventsFunctionContext = this.props.scope.eventsFunction ? (\n      <span style={textStyle}>, eventsFunctionContext</span>\n    ) : null;\n\n    const functionStart = (\n      <p style={styles.wrappingText}>\n        <span style={textStyle}>\n          {this.props.disabled ? '/*' : ''}\n          {'(function(runtimeScene'}\n        </span>\n        {objects}\n        {eventsFunctionContext}\n        <span style={textStyle}>{') {'}</span>\n      </p>\n    );\n    const functionEnd = (\n      <p style={styles.wrappingText}>\n        <span style={textStyle}>{'})(runtimeScene'}</span>\n        {objects}\n        {eventsFunctionContext}\n        <span style={textStyle}>\n          {');'}\n          {this.props.disabled ? '*/' : ''}\n        </span>\n        <span style={styles.comment}>\n          {' // '}\n          <a\n            href={getHelpLink('/events/js-code')}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={styles.commentLink}\n          >\n            Read the documentation and help\n          </a>\n        </span>\n      </p>\n    );\n\n    const expandIcon = (\n      <div style={styles.expandIcon}>\n        {jsCodeEvent.isEventsSheetExpanded() ? (\n          <ExpandLess fontSize=\"small\" color=\"inherit\" />\n        ) : (\n          <ExpandMore fontSize=\"small\" color=\"inherit\" />\n        )}\n      </div>\n    );\n\n    return (\n      <Measure bounds>\n        {({ measureRef, contentRect }) => (\n          <div\n            style={styles.container}\n            className={classNames({\n              [largeSelectableArea]: true,\n              [largeSelectedArea]: this.props.selected,\n            })}\n            ref={measureRef}\n          >\n            {functionStart}\n            <CodeEditor\n              value={jsCodeEvent.getInlineCode()}\n              onChange={this.onChange}\n              width={contentRect.bounds.width - 5}\n              height={this._getCodeEditorHeight()}\n              onEditorMounted={() => this.props.onUpdate()}\n            />\n            {functionEnd}\n            <Button onClick={this.toggleExpanded} fullWidth size=\"small\">\n              {expandIcon}\n            </Button>\n            <InlinePopover\n              open={this.state.editingObject}\n              anchorEl={this.state.anchorEl}\n              onRequestClose={this.cancelObjectEditing}\n              onApply={this.endObjectEditing}\n            >\n              <ObjectField\n                project={this.props.project}\n                scope={this.props.scope}\n                globalObjectsContainer={this.props.globalObjectsContainer}\n                objectsContainer={this.props.objectsContainer}\n                value={parameterObjects}\n                onChange={text => {\n                  jsCodeEvent.setParameterObjects(text);\n                  this.props.onUpdate();\n                }}\n                isInline\n                onRequestClose={this.cancelObjectEditing}\n                onApply={this.endObjectEditing}\n                ref={objectField => (this._objectField = objectField)}\n              />\n            </InlinePopover>\n          </div>\n        )}\n      </Measure>\n    );\n  }\n}\n","// @flow\n\ntype WatchedComponent = {\n  +onHeightsChanged: Function => void,\n};\n\n/**\n * Store the height of events and notify a component whenever\n * heights have changed.\n * Needed for EventsTree as we need to tell it when heights have changed\n * so it can recompute the internal row heights of the react-virtualized List.\n */\nexport default class EventHeightsCache {\n  eventHeights = {};\n  updateTimeoutId: ?TimeoutID = null;\n  component: ?WatchedComponent = null;\n\n  constructor(component: WatchedComponent) {\n    this.component = component;\n  }\n\n  _notifyComponent() {\n    if (this.updateTimeoutId) {\n      return; // An update is already scheduled.\n    }\n\n    // Notify the component, on the next tick, that heights have changed\n    this.updateTimeoutId = setTimeout(() => {\n      if (this.component) {\n        this.component.onHeightsChanged(() => (this.updateTimeoutId = null));\n      } else {\n        this.updateTimeoutId = null;\n      }\n    }, 0);\n  }\n\n  setEventHeight(event: gdBaseEvent, height: number) {\n    const cachedHeight = this.eventHeights[event.ptr];\n    if (cachedHeight === undefined || cachedHeight !== height) {\n      // console.log(event.ptr, 'has a new height', height, 'old:', cachedHeight);\n      this._notifyComponent();\n    }\n\n    this.eventHeights[event.ptr] = height;\n  }\n\n  getEventHeight(event: gdBaseEvent): number {\n    return this.eventHeights[event.ptr] || 60;\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Line, Column } from '../../UI/Grid';\nimport ElementWithMenu from '../../UI/Menu/ElementWithMenu';\nimport { enumerateEventsMetadata } from '../EnumerateEventsMetadata';\n\nconst styles = {\n  addButton: {\n    cursor: 'pointer',\n  },\n};\n\ntype Props = {|\n  onAddEvent: (eventType: string) => void,\n|};\n\nconst makeMenuTemplateBuilderForEvents = (\n  onAddEvent: (eventType: string) => void\n) => () =>\n  enumerateEventsMetadata().map(metadata => {\n    return {\n      label: metadata.fullName,\n      click: () => onAddEvent(metadata.type),\n    };\n  });\n\nexport default function BottomButtons({ onAddEvent }: Props) {\n  return (\n    <Column>\n      <Line justifyContent=\"space-between\">\n        <ElementWithMenu\n          openMenuWithSecondaryClick\n          element={\n            <button\n              style={styles.addButton}\n              className=\"add-link\"\n              onClick={() => onAddEvent('BuiltinCommonInstructions::Standard')}\n              id=\"add-event-button\"\n            >\n              <Trans>Add a new event</Trans>\n            </button>\n          }\n          buildMenuTemplate={makeMenuTemplateBuilderForEvents(onAddEvent)}\n        />\n        <ElementWithMenu\n          element={\n            <button style={styles.addButton} className=\"add-link\">\n              <Trans>Add...</Trans>\n            </button>\n          }\n          buildMenuTemplate={makeMenuTemplateBuilderForEvents(onAddEvent)}\n        />\n      </Line>\n    </Column>\n  );\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../../ResourcesList/ResourceExternalEditor.flow';\nimport InstructionParametersEditor from './InstructionParametersEditor';\nimport InstructionOrObjectSelector, {\n  type TabName,\n} from './InstructionOrObjectSelector';\nimport InstructionOrExpressionSelector from './InstructionOrExpressionSelector';\nimport HelpButton from '../../UI/HelpButton';\nimport { type EventsScope } from '../../InstructionOrExpression/EventsScope.flow';\nimport { SelectColumns } from '../../UI/Reponsive/SelectColumns';\nimport {\n  useResponsiveWindowWidth,\n  type WidthType,\n} from '../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport {\n  useNewInstructionEditor,\n  getInstructionMetadata,\n} from './NewInstructionEditor';\nimport NewBehaviorDialog from '../../BehaviorsEditor/NewBehaviorDialog';\nimport useForceUpdate from '../../Utils/UseForceUpdate';\nimport getObjectByName from '../../Utils/GetObjectByName';\nimport {\n  addBehaviorToObject,\n  listObjectBehaviorsTypes,\n} from '../../Utils/Behavior';\nimport ExtensionsSearchDialog from '../../AssetStore/ExtensionStore/ExtensionsSearchDialog';\nimport { sendBehaviorAdded } from '../../Utils/Analytics/EventSender';\n\nconst styles = {\n  fullHeightSelector: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n};\n\ntype StepName =\n  | 'object-or-free-instructions'\n  | 'object-instructions'\n  | 'parameters';\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  instruction: gdInstruction,\n  isCondition: boolean,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  style?: Object,\n  isNewInstruction: boolean,\n  onCancel: () => void,\n  onSubmit: () => void,\n  open: boolean,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n  anchorEl?: any, // Unused\n  canPasteInstructions: boolean, // Unused\n  onPasteInstructions: () => void, // Unused\n|};\n\nconst getInitialStepName = (isNewInstruction: boolean): StepName => {\n  if (isNewInstruction) return 'object-or-free-instructions';\n  return 'parameters';\n};\n\nconst getInitialTab = (\n  isNewInstruction: boolean,\n  hasObjectChosen: boolean\n): TabName => {\n  if (isNewInstruction) return 'objects';\n  return hasObjectChosen ? 'objects' : 'free-instructions';\n};\n\n/**\n * A responsive instruction editor in a dialog, showing InstructionParametersEditor\n * at the end.\n */\nexport default function NewInstructionEditorDialog({\n  project,\n  globalObjectsContainer,\n  objectsContainer,\n  onCancel,\n  open,\n  instruction,\n  isCondition,\n  isNewInstruction,\n  scope,\n  onSubmit,\n  resourceSources,\n  onChooseResource,\n  resourceExternalEditors,\n  openInstructionOrExpression,\n}: Props) {\n  const forceUpdate = useForceUpdate();\n  const [\n    newInstructionEditorState,\n    newInstructionEditorSetters,\n  ] = useNewInstructionEditor({\n    instruction,\n    isCondition,\n    project,\n    isNewInstruction,\n    scope,\n    globalObjectsContainer,\n    objectsContainer,\n  });\n  const {\n    chosenObjectName,\n    chosenObjectInstructionsInfo,\n    chosenObjectInstructionsInfoTree,\n  } = newInstructionEditorState;\n  const {\n    chooseInstruction,\n    chooseObject,\n    chooseObjectInstruction,\n  } = newInstructionEditorSetters;\n  const hasObjectChosen =\n    !!chosenObjectInstructionsInfo && !!chosenObjectInstructionsInfoTree;\n  const chosenObject = chosenObjectName\n    ? getObjectByName(project, scope.layout, chosenObjectName)\n    : null;\n  const freeInstructionComponentRef = React.useRef<?InstructionOrObjectSelector>(\n    null\n  );\n  const [step, setStep] = React.useState(() =>\n    getInitialStepName(isNewInstruction)\n  );\n  const [\n    currentInstructionOrObjectSelectorTab,\n    setCurrentInstructionOrObjectSelectorTab,\n  ] = React.useState(() => getInitialTab(isNewInstruction, hasObjectChosen));\n  const windowWidth = useResponsiveWindowWidth();\n  const instructionType: string = instruction.getType();\n  const [\n    newBehaviorDialogOpen,\n    setNewBehaviorDialogOpen,\n  ] = React.useState<boolean>(false);\n  const [\n    newExtensionDialogOpen,\n    setNewExtensionDialogOpen,\n  ] = React.useState<boolean>(false);\n\n  // Handle the back button\n  const stepBackFrom = (origin: StepName, windowWidth: WidthType) => {\n    if (origin === 'parameters' && chosenObjectName) {\n      setStep(\n        // \"medium\" displays 2 columns, so \"Back\" button should go back to the first screen.\n        windowWidth === 'medium'\n          ? 'object-or-free-instructions'\n          : 'object-instructions'\n      );\n    } else {\n      setStep('object-or-free-instructions');\n    }\n  };\n\n  const addBehavior = (type: string, defaultName: string) => {\n    if (!chosenObject) return;\n\n    const wasBehaviorAdded = addBehaviorToObject(\n      project,\n      chosenObject,\n      type,\n      defaultName\n    );\n\n    if (wasBehaviorAdded) {\n      setNewBehaviorDialogOpen(false);\n      sendBehaviorAdded({\n        behaviorType: type,\n        parentEditor: 'instruction-editor-dialog',\n      });\n    }\n\n    // Re-choose the same object to force recomputation of chosenObjectInstructionsInfoTree\n    // This is not done automatically because a change in the object behaviors\n    // is not detected by React at this level.\n    chooseObject(chosenObject.getName());\n  };\n\n  const onExtensionInstalled = () => {\n    setNewExtensionDialogOpen(false);\n    freeInstructionComponentRef.current &&\n      freeInstructionComponentRef.current.reEnumerateInstructions();\n  };\n\n  // Focus the parameters when showing them\n  const instructionParametersEditor = React.useRef(\n    (null: ?InstructionParametersEditor)\n  );\n  React.useEffect(\n    () => {\n      if (step === 'parameters') {\n        if (instructionParametersEditor.current) {\n          instructionParametersEditor.current.focus();\n        }\n      }\n    },\n    [step]\n  );\n\n  const instructionMetadata = getInstructionMetadata({\n    instructionType,\n    isCondition,\n    project,\n  });\n  const instructionHelpPage = instructionMetadata\n    ? instructionMetadata.getHelpPath()\n    : undefined;\n\n  const renderInstructionOrObjectSelector = () => (\n    <InstructionOrObjectSelector\n      key=\"instruction-or-object-selector\"\n      style={styles.fullHeightSelector}\n      project={project}\n      scope={scope}\n      ref={freeInstructionComponentRef}\n      currentTab={currentInstructionOrObjectSelectorTab}\n      onChangeTab={setCurrentInstructionOrObjectSelectorTab}\n      globalObjectsContainer={globalObjectsContainer}\n      objectsContainer={objectsContainer}\n      isCondition={isCondition}\n      chosenInstructionType={!chosenObjectName ? instructionType : undefined}\n      onChooseInstruction={(instructionType: string) => {\n        chooseInstruction(instructionType);\n        setStep('parameters');\n      }}\n      chosenObjectName={chosenObjectName}\n      onChooseObject={(chosenObjectName: string) => {\n        chooseObject(chosenObjectName);\n        setStep('object-instructions');\n      }}\n      focusOnMount={!instructionType}\n      onSearchStartOrReset={forceUpdate}\n      onClickMore={() => setNewExtensionDialogOpen(true)}\n    />\n  );\n\n  const renderParameters = () => (\n    <InstructionParametersEditor\n      key=\"parameters\"\n      project={project}\n      scope={scope}\n      globalObjectsContainer={globalObjectsContainer}\n      objectsContainer={objectsContainer}\n      objectName={chosenObjectName}\n      isCondition={isCondition}\n      instruction={instruction}\n      resourceSources={resourceSources}\n      onChooseResource={onChooseResource}\n      resourceExternalEditors={resourceExternalEditors}\n      openInstructionOrExpression={openInstructionOrExpression}\n      ref={instructionParametersEditor}\n      focusOnMount={!!instructionType}\n      noHelpButton\n    />\n  );\n\n  const renderObjectInstructionSelector = () =>\n    chosenObjectInstructionsInfoTree && chosenObjectInstructionsInfo ? (\n      <InstructionOrExpressionSelector\n        key=\"object-instruction-selector\"\n        style={styles.fullHeightSelector}\n        instructionsInfo={chosenObjectInstructionsInfo}\n        instructionsInfoTree={chosenObjectInstructionsInfoTree}\n        iconSize={24}\n        onChoose={(instructionType: string) => {\n          chooseObjectInstruction(instructionType);\n          setStep('parameters');\n        }}\n        selectedType={instructionType}\n        useSubheaders\n        focusOnMount={!instructionType}\n        searchPlaceholderObjectName={chosenObjectName}\n        searchPlaceholderIsCondition={isCondition}\n        onClickMore={() => setNewBehaviorDialogOpen(true)}\n        id=\"object-instruction-selector\"\n      />\n    ) : null;\n\n  return (\n    <>\n      <Dialog\n        onApply={instructionType ? onSubmit : null}\n        actions={[\n          <FlatButton\n            label={<Trans>Cancel</Trans>}\n            primary={false}\n            onClick={onCancel}\n            key=\"cancel\"\n          />,\n          <FlatButton\n            label={<Trans>Ok</Trans>}\n            primary={true}\n            keyboardFocused={false}\n            disabled={!instructionType}\n            onClick={onSubmit}\n            key=\"ok\"\n            id=\"ok-button\"\n          />,\n        ]}\n        secondaryActions={[\n          windowWidth !== 'large' && step !== 'object-or-free-instructions' ? (\n            <FlatButton\n              label={<Trans>Back</Trans>}\n              primary={false}\n              onClick={() => stepBackFrom(step, windowWidth)}\n              key=\"back\"\n            />\n          ) : null,\n          <HelpButton\n            key=\"help\"\n            helpPagePath={instructionHelpPage || '/events'}\n            label={\n              !instructionHelpPage ||\n              (windowWidth === 'small' ||\n                step === 'object-or-free-instructions') ? (\n                <Trans>Help</Trans>\n              ) : isCondition ? (\n                <Trans>Help for this condition</Trans>\n              ) : (\n                <Trans>Help for this action</Trans>\n              )\n            }\n          />,\n        ]}\n        open={open}\n        onRequestClose={onCancel}\n        cannotBeDismissed={true}\n        maxWidth={false}\n        noMargin\n        flexBody\n        fullHeight={\n          true /* Always use full height to avoid a very small dialog when there are not a lot of objects. */\n        }\n        id=\"instruction-editor-dialog\"\n      >\n        <SelectColumns\n          columnsRenderer={{\n            'instruction-or-object-selector': renderInstructionOrObjectSelector,\n            'object-instruction-selector': renderObjectInstructionSelector,\n            parameters: renderParameters,\n          }}\n          getColumns={() => {\n            if (windowWidth === 'large') {\n              if (chosenObjectName) {\n                return [\n                  'instruction-or-object-selector',\n                  'object-instruction-selector',\n                  'parameters',\n                ];\n              } else {\n                return ['instruction-or-object-selector', 'parameters'];\n              }\n            } else if (windowWidth === 'medium') {\n              if (step === 'object-or-free-instructions') {\n                return ['instruction-or-object-selector'];\n              } else {\n                if (chosenObjectName) {\n                  return ['object-instruction-selector', 'parameters'];\n                } else {\n                  return ['parameters'];\n                }\n              }\n            } else {\n              if (step === 'object-or-free-instructions') {\n                return ['instruction-or-object-selector'];\n              } else if (step === 'object-instructions') {\n                return ['object-instruction-selector'];\n              } else {\n                return ['parameters'];\n              }\n            }\n          }}\n        />\n      </Dialog>\n      {newBehaviorDialogOpen && chosenObject && (\n        <NewBehaviorDialog\n          project={project}\n          open={newBehaviorDialogOpen}\n          objectType={chosenObject.getType()}\n          objectBehaviorsTypes={listObjectBehaviorsTypes(chosenObject)}\n          onClose={() => setNewBehaviorDialogOpen(false)}\n          onChoose={addBehavior}\n        />\n      )}\n      {newExtensionDialogOpen && (\n        <ExtensionsSearchDialog\n          project={project}\n          onClose={() => setNewExtensionDialogOpen(false)}\n          onInstallExtension={() => {}}\n          onExtensionInstalled={onExtensionInstalled}\n        />\n      )}\n    </>\n  );\n}\n","// @flow\n\n/*\n * Case Sensitive Slug method\n * Inspired by Aaron Stannard module (https://github.com/Aaronontheweb/node-slugs)\n */\nexport const caseSensitiveSlug = (\n  incString: string,\n  separator?: string,\n  preserved?: Array<string>\n): string => {\n  var p = ['.', '=', '-'];\n  var s = '-';\n\n  if (typeof preserved != 'undefined') {\n    p = preserved;\n  }\n\n  if (typeof separator != 'undefined') {\n    s = separator;\n  }\n\n  return incString\n    .replace(/ü/g, 'ue')\n    .replace(/ä/g, 'ae')\n    .replace(/ö/g, 'oe')\n    .replace(/ß/g, 'ss')\n    .replace(new RegExp('[' + p.join('') + ']', 'g'), ' ') //  replace preserved characters with spaces\n    .replace(/-{2,}/g, ' ') //  remove duplicate spaces\n    .replace(/^\\s\\s*/, '')\n    .replace(/\\s\\s*$/, '') //  trim both sides of string\n    .replace(/[^\\w ]/gi, '') //  replaces all non-alphanumeric with empty string\n    .replace(/[ ]/gi, s); //  Convert spaces to dashes\n};\n","// @flow\nimport { mapVector } from '../Utils/MapFor';\n\n/** The JS equivalent of gdPropertyDescriptor */\ntype EnumeratedProperty = {|\n  name: string,\n  type: string,\n  description: string,\n  group: string,\n  label: string,\n  value: string,\n  extraInfo: Array<string>,\n  isHidden: boolean,\n|};\n\n/**\n * Transform a gdNamedPropertyDescriptorsList into a JS object.\n * **Don't use this** unless you explictely need to deal with JS objects.\n * Otherwise, prefer just iterating and using gdNamedPropertyDescriptorsList functions.\n */\nexport const enumerateNamedPropertyDescriptorsList = (\n  namedProperties: gdNamedPropertyDescriptorsList\n): Array<EnumeratedProperty> => {\n  return mapVector(namedProperties, namedProperty => {\n    return {\n      name: namedProperty.getName(),\n      type: namedProperty.getType(),\n      description: namedProperty.getDescription(),\n      group: namedProperty.getGroup(),\n      label: namedProperty.getLabel(),\n      value: namedProperty.getValue(),\n      extraInfo: namedProperty.getExtraInfo().toJSArray(),\n      isHidden: namedProperty.isHidden(),\n    };\n  });\n};\n\nexport const toGdPropertyDescriptor = (\n  enumeratedProperty: EnumeratedProperty,\n  propertyDescriptor: gdPropertyDescriptor\n): gdPropertyDescriptor => {\n  propertyDescriptor\n    .setType(enumeratedProperty.type)\n    .setDescription(enumeratedProperty.description)\n    .setGroup(enumeratedProperty.group)\n    .setLabel(enumeratedProperty.label)\n    .setValue(enumeratedProperty.value)\n    .setHidden(enumeratedProperty.isHidden);\n\n  enumeratedProperty.extraInfo.forEach(extraInfo => {\n    propertyDescriptor.addExtraInfo(extraInfo);\n  });\n\n  return propertyDescriptor;\n};\n","// @flow\nimport * as React from 'react';\nimport { ListItem } from '../../../UI/List';\nimport ListIcon from '../../../UI/ListIcon';\nimport type { GroupWithContext } from '../../../ObjectsList/EnumerateObjects';\nimport {\n  getObjectGroupListItemKey,\n  getObjectOrObjectGroupListItemValue,\n} from './Keys';\nimport HighlightedText from '../../../UI/Search/HighlightedText';\n\ntype Props = {|\n  groupWithContext: GroupWithContext,\n  iconSize: number,\n  onClick: () => void,\n  selectedValue: ?string,\n  matchesCoordinates: number[][],\n|};\n\nexport const renderGroupObjectsListItem = ({\n  groupWithContext,\n  iconSize,\n  onClick,\n  selectedValue,\n  matchesCoordinates,\n}: Props) => {\n  const groupName: string = groupWithContext.group.getName();\n  return (\n    <ListItem\n      key={getObjectGroupListItemKey(groupWithContext)}\n      selected={\n        selectedValue === getObjectOrObjectGroupListItemValue(groupName)\n      }\n      primaryText={\n        <HighlightedText\n          text={groupName}\n          matchesCoordinates={matchesCoordinates}\n        />\n      }\n      leftIcon={\n        <ListIcon\n          iconSize={iconSize}\n          src=\"res/ribbon_default/objectsgroups64.png\"\n        />\n      }\n      onClick={onClick}\n      disableAutoTranslate\n    />\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { ListItem } from '../../../UI/List';\nimport ListIcon from '../../../UI/ListIcon';\nimport ObjectsRenderingService from '../../../ObjectsRendering/ObjectsRenderingService';\nimport type { ObjectWithContext } from '../../../ObjectsList/EnumerateObjects';\nimport {\n  getObjectOrObjectGroupListItemValue,\n  getObjectListItemKey,\n} from './Keys';\nimport HighlightedText from '../../../UI/Search/HighlightedText';\n\ntype Props = {|\n  project: gdProject,\n  objectWithContext: ObjectWithContext,\n  iconSize: number,\n  onClick: () => void,\n  selectedValue: ?string,\n  matchesCoordinates: number[][],\n  id?: ?string,\n|};\n\nexport const renderObjectListItem = ({\n  project,\n  objectWithContext,\n  iconSize,\n  onClick,\n  selectedValue,\n  matchesCoordinates,\n  id,\n}: Props) => {\n  const objectName: string = objectWithContext.object.getName();\n  return (\n    <ListItem\n      id={id}\n      key={getObjectListItemKey(objectWithContext)}\n      selected={\n        selectedValue === getObjectOrObjectGroupListItemValue(objectName)\n      }\n      primaryText={\n        <HighlightedText\n          text={objectName}\n          matchesCoordinates={matchesCoordinates}\n        />\n      }\n      leftIcon={\n        <ListIcon\n          iconSize={iconSize}\n          src={ObjectsRenderingService.getThumbnail(\n            project,\n            objectWithContext.object\n          )}\n        />\n      }\n      onClick={onClick}\n      disableAutoTranslate\n    />\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport Popover from '@material-ui/core/Popover';\nimport * as React from 'react';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../../ResourcesList/ResourceExternalEditor.flow';\nimport {\n  useNewInstructionEditor,\n  getInstructionMetadata,\n} from './NewInstructionEditor';\nimport InstructionOrObjectSelector, {\n  type TabName,\n} from './InstructionOrObjectSelector';\nimport InstructionOrExpressionSelector from './InstructionOrExpressionSelector';\nimport { type EventsScope } from '../../InstructionOrExpression/EventsScope.flow';\nimport { SelectColumns } from '../../UI/Reponsive/SelectColumns';\nimport useForceUpdate from '../../Utils/UseForceUpdate';\nimport { setupInstructionParameters } from '../../InstructionOrExpression/SetupInstructionParameters';\nimport FlatButton from '../../UI/FlatButton';\nimport Paste from '../../UI/CustomSvgIcons/Paste';\nimport { Line } from '../../UI/Grid';\n\nconst styles = {\n  fullHeightSelector: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '400px',\n    width: '400px',\n  },\n};\n\ntype StepName = 'object-or-free-instructions' | 'object-instructions';\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  instruction: gdInstruction,\n  isCondition: boolean,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  style?: Object,\n  anchorEl: ?HTMLElement,\n  isNewInstruction: boolean,\n  onCancel: () => void,\n  onSubmit: () => void,\n  open: boolean,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n  canPasteInstructions: boolean, // Unused\n  onPasteInstructions: () => void, // Unused\n|};\n\n/**\n * An instruction editor in a popover.\n * Does not show the parameters for the instruction.\n */\nexport default function NewInstructionEditorMenu({\n  project,\n  globalObjectsContainer,\n  objectsContainer,\n  onCancel,\n  open,\n  instruction,\n  isCondition,\n  isNewInstruction,\n  anchorEl,\n  scope,\n  onSubmit,\n  canPasteInstructions,\n  onPasteInstructions,\n}: Props) {\n  const forceUpdate = useForceUpdate();\n  const [\n    newInstructionEditorState,\n    newInstructionEditorSetters,\n  ] = useNewInstructionEditor({\n    instruction,\n    isCondition,\n    project,\n    isNewInstruction,\n    scope,\n    globalObjectsContainer,\n    objectsContainer,\n  });\n  const {\n    chosenObjectName,\n    chosenObjectInstructionsInfo,\n    chosenObjectInstructionsInfoTree,\n  } = newInstructionEditorState;\n  const {\n    chooseInstruction,\n    chooseObject,\n    chooseObjectInstruction,\n  } = newInstructionEditorSetters;\n  // As we're in a context menu, always start from 'object-or-free-instructions' step and with 'objects' tab.\n  const [step, setStep] = React.useState<StepName>(\n    'object-or-free-instructions'\n  );\n  const [\n    currentInstructionOrObjectSelectorTab,\n    setCurrentInstructionOrObjectSelectorTab,\n  ] = React.useState<TabName>('objects');\n  const instructionType: string = instruction.getType();\n\n  const submitInstruction = ({\n    instruction,\n    chosenObjectName,\n  }: {\n    instruction: gdInstruction,\n    chosenObjectName: ?string,\n  }) => {\n    // Before submitting the instruction, ensure that we set the default\n    // parameters, notably the object and behavior name.\n    const instructionMetadata = getInstructionMetadata({\n      instructionType: instruction.getType(),\n      isCondition,\n      project,\n    });\n    if (instructionMetadata) {\n      setupInstructionParameters(\n        globalObjectsContainer,\n        objectsContainer,\n        instruction,\n        instructionMetadata,\n        chosenObjectName\n      );\n    }\n    onSubmit();\n  };\n\n  const renderInstructionOrObjectSelector = () => (\n    <InstructionOrObjectSelector\n      key=\"instruction-or-object-selector\"\n      style={styles.fullHeightSelector}\n      project={project}\n      scope={scope}\n      currentTab={currentInstructionOrObjectSelectorTab}\n      onChangeTab={setCurrentInstructionOrObjectSelectorTab}\n      globalObjectsContainer={globalObjectsContainer}\n      objectsContainer={objectsContainer}\n      isCondition={isCondition}\n      chosenInstructionType={!chosenObjectName ? instructionType : undefined}\n      onChooseInstruction={(instructionType: string) => {\n        const { instruction, chosenObjectName } = chooseInstruction(\n          instructionType\n        );\n        submitInstruction({ instruction, chosenObjectName });\n      }}\n      chosenObjectName={chosenObjectName}\n      onChooseObject={chosenObjectName => {\n        chooseObject(chosenObjectName);\n        setStep('object-instructions');\n      }}\n      focusOnMount={!instructionType}\n      onSearchStartOrReset={forceUpdate}\n    />\n  );\n\n  const renderObjectInstructionSelector = () =>\n    chosenObjectInstructionsInfoTree && chosenObjectInstructionsInfo ? (\n      <InstructionOrExpressionSelector\n        key=\"object-instruction-selector\"\n        style={styles.fullHeightSelector}\n        instructionsInfo={chosenObjectInstructionsInfo}\n        instructionsInfoTree={chosenObjectInstructionsInfoTree}\n        iconSize={24}\n        onChoose={(instructionType: string) => {\n          const { instruction, chosenObjectName } = chooseObjectInstruction(\n            instructionType\n          );\n          submitInstruction({ instruction, chosenObjectName });\n        }}\n        selectedType={instructionType}\n        useSubheaders\n        focusOnMount={!instructionType}\n        searchPlaceholderObjectName={chosenObjectName}\n        searchPlaceholderIsCondition={isCondition}\n      />\n    ) : null;\n\n  return (\n    <Popover\n      open={open}\n      onClose={onCancel}\n      anchorEl={anchorEl}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'left',\n      }}\n    >\n      <SelectColumns\n        columnsRenderer={{\n          'instruction-or-object-selector': renderInstructionOrObjectSelector,\n          'object-instruction-selector': renderObjectInstructionSelector,\n        }}\n        getColumns={() => {\n          if (step === 'object-or-free-instructions') {\n            return ['instruction-or-object-selector'];\n          } else {\n            return ['object-instruction-selector'];\n          }\n        }}\n      />\n      <Line noMargin justifyContent=\"flex-end\">\n        <FlatButton\n          label={\n            isCondition ? (\n              <Trans>Paste condition(s)</Trans>\n            ) : (\n              <Trans>Paste action(s)</Trans>\n            )\n          }\n          icon={<Paste />}\n          disabled={!canPasteInstructions}\n          onClick={() => onPasteInstructions()}\n        />\n      </Line>\n    </Popover>\n  );\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport { Line, Column } from '../../UI/Grid';\nimport ColorPicker from '../../UI/ColorField/ColorPicker';\nimport { type RGBColor } from '../../Utils/ColorTransformer';\nimport MiniToolbar, { MiniToolbarText } from '../../UI/MiniToolbar';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\n\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  sizeTextField: {\n    width: 90,\n  },\n};\n\ntype Props = {|\n  event: gdBaseEvent,\n  onClose: () => void,\n  onApply: () => void,\n|};\n\nconst white: RGBColor = {\n  r: 255,\n  g: 255,\n  b: 255,\n};\n\nconst black: RGBColor = {\n  r: 0,\n  g: 0,\n  b: 0,\n};\n\nexport const filterEditableWithEventTextDialog = (\n  events: Array<gdBaseEvent>\n): Array<gdBaseEvent> => {\n  return events.filter(event =>\n    [\n      'BuiltinCommonInstructions::Group',\n      'BuiltinCommonInstructions::Comment',\n    ].includes(event.getType())\n  );\n};\n\nconst EventTextDialog = (props: Props) => {\n  const { event, onClose } = props;\n\n  const [textValue, setTextValue] = React.useState<string>('');\n  const [textColor, setTextColor] = React.useState<RGBColor>(black);\n  const [backgroundColor, setBackgroundColor] = React.useState<RGBColor>(black);\n\n  const eventType = event.getType();\n\n  React.useEffect(\n    () => {\n      if (eventType === 'BuiltinCommonInstructions::Comment') {\n        const commentEvent = gd.asCommentEvent(event);\n\n        setTextColor({\n          r: commentEvent.getTextColorRed(),\n          g: commentEvent.getTextColorGreen(),\n          b: commentEvent.getTextColorBlue(),\n        });\n\n        setBackgroundColor({\n          r: commentEvent.getBackgroundColorRed(),\n          g: commentEvent.getBackgroundColorGreen(),\n          b: commentEvent.getBackgroundColorBlue(),\n        });\n\n        setTextValue(gd.asCommentEvent(event).getComment());\n      } else if (eventType === 'BuiltinCommonInstructions::Group') {\n        var groupEvent = gd.asGroupEvent(event);\n        const r = groupEvent.getBackgroundColorR(),\n          g = groupEvent.getBackgroundColorG(),\n          b = groupEvent.getBackgroundColorB();\n\n        // Text color is automatically chosen for groups.\n        setTextColor(() => {\n          return (r + g + b) / 3 > 200 ? black : white;\n        });\n\n        setBackgroundColor({\n          r: groupEvent.getBackgroundColorR(),\n          g: groupEvent.getBackgroundColorG(),\n          b: groupEvent.getBackgroundColorB(),\n        });\n\n        setTextValue(gd.asGroupEvent(event).getName());\n      } else {\n        console.error(\n          'Dialog was opened for an unsupported event type: ' + eventType\n        );\n      }\n    },\n    [event, eventType]\n  );\n\n  const onApply = React.useCallback(\n    () => {\n      if (eventType === 'BuiltinCommonInstructions::Comment') {\n        //Text value\n        gd.asCommentEvent(event).setComment(textValue);\n\n        //Text color\n        gd.asCommentEvent(event).setTextColor(\n          textColor.r,\n          textColor.g,\n          textColor.b\n        );\n        //Background color\n        gd.asCommentEvent(event).setBackgroundColor(\n          backgroundColor.r,\n          backgroundColor.g,\n          backgroundColor.b\n        );\n      } else if (eventType === 'BuiltinCommonInstructions::Group') {\n        //Text value\n        gd.asGroupEvent(event).setName(textValue);\n\n        //Text color for group not supported in Core, instead GroupEvent.js handle this\n        //Background color\n        gd.asGroupEvent(event).setBackgroundColor(\n          backgroundColor.r,\n          backgroundColor.g,\n          backgroundColor.b\n        );\n      }\n      props.onApply();\n      return;\n    },\n    [props, event, eventType, textValue, textColor, backgroundColor]\n  );\n\n  return (\n    <Dialog\n      onApply={onApply}\n      title={<Trans>Edit the event text</Trans>}\n      onRequestClose={onClose}\n      cannotBeDismissed={true}\n      open\n      noMargin\n      actions={[\n        <FlatButton\n          key=\"close\"\n          label={<Trans>Cancel</Trans>}\n          primary={false}\n          onClick={onClose}\n        />,\n        <FlatButton\n          key={'Apply'}\n          label={<Trans>Apply</Trans>}\n          primary\n          keyboardFocused\n          onClick={onApply}\n        />,\n      ]}\n    >\n      <Column noMargin>\n        <MiniToolbar>\n          <MiniToolbarText firstChild>\n            <Trans>Background color:</Trans>\n          </MiniToolbarText>\n          <ColorPicker\n            style={styles.sizeTextField}\n            disableAlpha\n            color={backgroundColor}\n            onChangeComplete={color => {\n              setBackgroundColor(color.rgb);\n            }}\n          />\n\n          {eventType === 'BuiltinCommonInstructions::Comment' && (\n            <React.Fragment>\n              <MiniToolbarText>\n                <Trans>Text color:</Trans>\n              </MiniToolbarText>\n              <ColorPicker\n                style={styles.sizeTextField}\n                disableAlpha\n                color={textColor}\n                onChangeComplete={color => {\n                  setTextColor(color.rgb);\n                }}\n              />\n            </React.Fragment>\n          )}\n        </MiniToolbar>\n        <Line noMargin>\n          <Column expand>\n            <Line>\n              <SemiControlledTextField\n                commitOnBlur\n                hintText={t`Enter the text to be displayed`}\n                fullWidth\n                multiline\n                rows={8}\n                rowsMax={30}\n                value={textValue}\n                onChange={value => {\n                  setTextValue(value);\n                }}\n              />\n            </Line>\n          </Column>\n        </Line>\n      </Column>\n    </Dialog>\n  );\n};\n\nexport default EventTextDialog;\n","// @flow\nimport * as React from 'react';\nimport InlinePopover from './InlinePopover';\nimport ParameterRenderingService from './ParameterRenderingService';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport { type EventsScope } from '../InstructionOrExpression/EventsScope.flow';\nimport { setupInstructionParameters } from '../InstructionOrExpression/SetupInstructionParameters';\nimport { getObjectParameterIndex } from '../InstructionOrExpression/EnumerateInstructions';\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n\n  open: boolean,\n  onRequestClose: () => void,\n  onApply: () => void,\n  onChange: string => void,\n\n  instruction: ?gdInstruction,\n  isCondition: boolean,\n  parameterIndex: number,\n\n  anchorEl: ?any,\n\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n|};\n\ntype State = {|\n  parameterMetadata: ?gdParameterMetadata,\n  instructionMetadata: ?gdInstructionMetadata,\n  ParameterComponent: ?any,\n|};\n\nexport default class InlineParameterEditor extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    parameterMetadata: null,\n    instructionMetadata: null,\n    ParameterComponent: null,\n  };\n\n  _field: ?any;\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      (newProps.open && !this.props.open) ||\n      newProps.instruction !== this.props.instruction\n    ) {\n      this._loadComponentFromInstruction(newProps);\n    }\n  }\n\n  _unload() {\n    this.setState({\n      ParameterComponent: null,\n      parameterMetadata: null,\n      instructionMetadata: null,\n    });\n  }\n\n  _loadComponentFromInstruction(props: Props) {\n    const { project, isCondition, instruction, parameterIndex } = props;\n    if (!instruction) return this._unload();\n\n    const type = instruction.getType();\n    const instructionMetadata = isCondition\n      ? gd.MetadataProvider.getConditionMetadata(\n          project.getCurrentPlatform(),\n          type\n        )\n      : gd.MetadataProvider.getActionMetadata(\n          project.getCurrentPlatform(),\n          type\n        );\n\n    if (parameterIndex >= instructionMetadata.getParametersCount())\n      return this._unload();\n\n    const parameterMetadata = instructionMetadata.getParameter(parameterIndex);\n    const ParameterComponent = ParameterRenderingService.getParameterComponent(\n      parameterMetadata.getType()\n    );\n    this.setState(\n      {\n        ParameterComponent,\n        parameterMetadata,\n        instructionMetadata,\n      },\n      () => {\n        // Give a bit of time for the popover to mount itself\n        setTimeout(() => {\n          if (this._field && this._field.focus)\n            this._field.focus(/*selectAll=*/ true);\n        }, 10);\n      }\n    );\n  }\n\n  _onApply = () => {\n    const { instruction } = this.props;\n    const { instructionMetadata } = this.state;\n\n    // When the parameter is done being edited, ensure the instruction parameters\n    // are properly set up. For example, it's possible that the object name was\n    // changed, and so the associated behavior should be updated.\n    if (instruction && instructionMetadata) {\n      const objectParameterIndex = getObjectParameterIndex(instructionMetadata);\n      setupInstructionParameters(\n        this.props.globalObjectsContainer,\n        this.props.objectsContainer,\n        instruction,\n        instructionMetadata,\n        objectParameterIndex !== -1\n          ? instruction.getParameter(objectParameterIndex)\n          : null\n      );\n    }\n\n    this.props.onApply();\n  };\n\n  render() {\n    if (!this.state.ParameterComponent || !this.props.open) return null;\n    const instruction = this.props.instruction;\n    if (!instruction) return null;\n\n    const { ParameterComponent } = this.state;\n\n    return (\n      <InlinePopover\n        open={this.props.open}\n        anchorEl={this.props.anchorEl}\n        onRequestClose={this.props.onRequestClose}\n        onApply={this._onApply}\n      >\n        <ParameterComponent\n          instruction={instruction}\n          instructionMetadata={this.state.instructionMetadata}\n          parameterMetadata={this.state.parameterMetadata}\n          parameterIndex={this.props.parameterIndex}\n          value={instruction.getParameter(this.props.parameterIndex)}\n          onChange={this.props.onChange}\n          onRequestClose={this.props.onRequestClose}\n          onApply={this._onApply}\n          project={this.props.project}\n          scope={this.props.scope}\n          globalObjectsContainer={this.props.globalObjectsContainer}\n          objectsContainer={this.props.objectsContainer}\n          key={instruction.ptr}\n          ref={field => (this._field = field)}\n          parameterRenderingService={ParameterRenderingService}\n          isInline\n          resourceSources={this.props.resourceSources}\n          onChooseResource={this.props.onChooseResource}\n          resourceExternalEditors={this.props.resourceExternalEditors}\n        />\n      </InlinePopover>\n    );\n  }\n}\n","//@flow\nconst gd: libGDevelop = global.gd;\n\nexport const ensureSingleOnceInstructions = (\n  instructionsList: gdInstructionsList\n) => {\n  let hasEndingOnceInstruction = false;\n  let hasInvalidOnce = false;\n  for (let i = instructionsList.size() - 1; i >= 0; --i) {\n    const instruction = instructionsList.get(i);\n    if (i === instructionsList.size() - 1) {\n      if (instruction.getType() === 'BuiltinCommonInstructions::Once') {\n        hasEndingOnceInstruction = true;\n      }\n    } else {\n      if (instruction.getType() === 'BuiltinCommonInstructions::Once') {\n        instructionsList.removeAt(i);\n        hasInvalidOnce = true;\n      }\n    }\n  }\n\n  if (hasInvalidOnce && !hasEndingOnceInstruction) {\n    const onceInstruction = new gd.Instruction();\n    onceInstruction.setType('BuiltinCommonInstructions::Once');\n    instructionsList.insert(onceInstruction, instructionsList.size());\n    onceInstruction.delete();\n  }\n\n  return hasInvalidOnce;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport Text from '../UI/Text';\n\nexport type EventsContextResult = {|\n  objectsNames: Array<string>,\n  objectOrGroupNames: Array<string>,\n  objectOrGroupBehaviorNames: {\n    [string]: Array<string>,\n  },\n|};\n\n// Store in a EventsContextResult the content of a gd.EventsContext.\n// In theory not necessary, but easier than storing,\n// passing around, and properly delete a gd.EventsContext.\nexport const toEventsContextResult = (\n  eventsContext: gdEventsContext\n): EventsContextResult => {\n  const objectsNames = eventsContext\n    .getObjectNames()\n    .toNewVectorString()\n    .toJSArray();\n  const objectOrGroupNames = eventsContext\n    .getReferencedObjectOrGroupNames()\n    .toNewVectorString()\n    .toJSArray();\n\n  const objectOrGroupBehaviorNames = {};\n  objectOrGroupNames.forEach(objectOrGroupName => {\n    const behaviorNames = eventsContext\n      .getBehaviorNamesOfObjectOrGroup(objectOrGroupName)\n      .toNewVectorString()\n      .toJSArray();\n\n    if (behaviorNames.length) {\n      objectOrGroupBehaviorNames[objectOrGroupName] = behaviorNames;\n    }\n  });\n\n  return {\n    objectsNames,\n    objectOrGroupNames,\n    objectOrGroupBehaviorNames,\n  };\n};\n\ntype Props = {|\n  onClose: () => void,\n  eventsContextResult: EventsContextResult,\n|};\n\nexport default class EventsContextAnalyzerDialog extends React.Component<\n  Props,\n  {}\n> {\n  render() {\n    const { onClose, eventsContextResult } = this.props;\n    const actions = [\n      <FlatButton\n        key=\"close\"\n        label={<Trans>Close</Trans>}\n        primary={true}\n        onClick={this.props.onClose}\n      />,\n    ];\n\n    return (\n      <Dialog\n        actions={actions}\n        cannotBeDismissed={false}\n        open\n        onRequestClose={onClose}\n      >\n        <Text>\n          <Trans>\n            Objects or groups being directly referenced in the events:{' '}\n            {eventsContextResult.objectOrGroupNames.join(', ')}\n          </Trans>\n        </Text>\n        <Text>\n          <Trans>\n            All objects potentially used in events:{' '}\n            {eventsContextResult.objectsNames.join(', ')}\n          </Trans>\n        </Text>\n        <Text>\n          <Trans>All behaviors being directly referenced in the events:</Trans>{' '}\n          {Object.keys(eventsContextResult.objectOrGroupBehaviorNames).map(\n            objectOrGroupName => {\n              return (\n                <Trans key={objectOrGroupName}>\n                  Behaviors of {objectOrGroupName}:{' '}\n                  {eventsContextResult.objectOrGroupBehaviorNames[\n                    objectOrGroupName\n                  ].join(', ')}\n                  ;{' '}\n                </Trans>\n              );\n            }\n          )}\n        </Text>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans, t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Background from '../UI/Background';\nimport TextField from '../UI/TextField';\nimport { Line, Spacer } from '../UI/Grid';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport IconButton from '../UI/IconButton';\nimport FlatButton from '../UI/FlatButton';\nimport InlineCheckbox from '../UI/InlineCheckbox';\nimport Text from '../UI/Text';\nimport {\n  type SearchInEventsInputs,\n  type ReplaceInEventsInputs,\n} from './EventsSearcher';\nimport RaisedButton from '../UI/RaisedButton';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport {\n  shouldBrowsePrevious,\n  shouldCloseOrCancel,\n  shouldValidate,\n} from '../UI/KeyboardShortcuts/InteractionKeys';\nimport { Tabs, Tab } from '../UI/Tabs';\n\ntype Props = {|\n  onSearchInEvents: SearchInEventsInputs => void,\n  onReplaceInEvents: ReplaceInEventsInputs => void,\n  onCloseSearchPanel: () => void,\n  resultsCount: ?number,\n  hasEventSelected: boolean,\n  onGoToPreviousSearchResult: () => ?gdBaseEvent,\n  onGoToNextSearchResult: () => ?gdBaseEvent,\n  searchFocusOffset: ?number,\n|};\n\nexport type SearchPanelInterface = {|\n  focus: () => void,\n  markSearchResultsDirty: () => void,\n  isSearchOngoing: () => boolean,\n|};\n\nconst SearchPanel = (\n  {\n    onSearchInEvents,\n    onReplaceInEvents,\n    onCloseSearchPanel,\n    resultsCount,\n    hasEventSelected,\n    onGoToPreviousSearchResult,\n    onGoToNextSearchResult,\n    searchFocusOffset,\n  }: Props,\n  ref\n) => {\n  const searchTextField = React.useRef<?TextField>(null);\n\n  const [searchText, setSearchText] = React.useState<string>('');\n  const [replaceText, setReplaceText] = React.useState<string>('');\n  const [matchCase, setMatchCase] = React.useState<boolean>(false);\n  const [searchInActions, setSearchInActions] = React.useState<boolean>(true);\n  const [searchInConditions, setSearchInConditions] = React.useState<boolean>(\n    true\n  );\n  const [\n    searchInEventStrings,\n    setSearchInEventStrings,\n  ] = React.useState<boolean>(true);\n  // eslint-disable-next-line no-unused-vars\n  const [searchInSelection, setSearchInSelection] = React.useState<boolean>(\n    false\n  );\n  const [searchResultsDirty, setSearchResultsDirty] = React.useState<boolean>(\n    false\n  );\n  const [currentTab, setCurrentTab] = React.useState<\n    'search-and-replace' | 'search-in-event-sentences'\n  >('search-and-replace');\n\n  const isSearchOngoing = React.useCallback(\n    (): boolean => {\n      return !!searchText && !searchResultsDirty;\n    },\n    [searchText, searchResultsDirty]\n  );\n\n  const focusSearchField = React.useCallback((): void => {\n    if (searchTextField.current) searchTextField.current.focus();\n  }, []);\n\n  const markSearchResultsDirty = React.useCallback((): void => {\n    setSearchResultsDirty(true);\n  }, []);\n\n  React.useImperativeHandle(ref, () => ({\n    isSearchOngoing,\n    focus: focusSearchField,\n    markSearchResultsDirty,\n  }));\n\n  React.useEffect(\n    () => {\n      setSearchResultsDirty(true);\n    },\n    [\n      searchText,\n      searchInActions,\n      searchInConditions,\n      searchInEventStrings,\n      matchCase,\n    ]\n  );\n\n  React.useEffect(focusSearchField, [currentTab]);\n  React.useEffect(markSearchResultsDirty, [currentTab]);\n\n  const launchSearch = () => {\n    onSearchInEvents({\n      searchInSelection,\n      searchText,\n      matchCase,\n      searchInActions,\n      searchInConditions,\n      searchInEventStrings,\n      searchInEventSentences: !isSearchAndReplaceTab(),\n    });\n  };\n\n  const launchReplace = () => {\n    launchSearch();\n\n    onReplaceInEvents({\n      searchInSelection,\n      searchText,\n      replaceText,\n      matchCase,\n      searchInActions,\n      searchInConditions,\n      searchInEventStrings,\n    });\n  };\n\n  const launchSearchIfResultsDirty = () => {\n    if (searchResultsDirty) {\n      launchSearch();\n      setSearchResultsDirty(false);\n    }\n  };\n\n  const isSearchAndReplaceTab = React.useCallback(\n    (): boolean => currentTab === 'search-and-replace',\n    [currentTab]\n  );\n\n  return (\n    <Background noFullHeight noExpand>\n      <Tabs value={currentTab} onChange={setCurrentTab}>\n        <Tab\n          label={<Trans>Search and replace in parameters</Trans>}\n          value=\"search-and-replace\"\n        />\n        <Tab\n          label={<Trans>Search in event sentences</Trans>}\n          value=\"search-in-event-sentences\"\n        />\n      </Tabs>\n      <Line>\n        <ColumnStackLayout expand>\n          <Line alignItems=\"baseline\" noMargin>\n            <TextField\n              ref={searchTextField}\n              type=\"search\"\n              margin=\"dense\"\n              hintText={\n                isSearchAndReplaceTab()\n                  ? t`Text to search in parameters`\n                  : t`Text to search in event sentences`\n              }\n              onChange={(e, searchText) => {\n                setSearchText(searchText);\n              }}\n              onKeyPress={event => {\n                if (shouldBrowsePrevious(event)) {\n                  onGoToPreviousSearchResult();\n                } else if (shouldValidate(event)) {\n                  if (!searchResultsDirty) {\n                    onGoToNextSearchResult();\n                  } else {\n                    launchSearchIfResultsDirty();\n                  }\n                }\n              }}\n              onKeyUp={event => {\n                if (shouldCloseOrCancel(event)) {\n                  onCloseSearchPanel();\n                }\n              }}\n              value={searchText}\n              fullWidth\n            />\n            <Spacer />\n            <RaisedButton\n              disabled={!searchText}\n              primary\n              label={<Trans>Search</Trans>}\n              onClick={() => {\n                if (!searchResultsDirty) {\n                  onGoToNextSearchResult();\n                } else {\n                  launchSearchIfResultsDirty();\n                }\n              }}\n            />\n          </Line>\n          {isSearchAndReplaceTab() && (\n            <Line alignItems=\"baseline\" noMargin>\n              <TextField\n                type=\"search\"\n                margin=\"dense\"\n                hintText={t`Text to replace in parameters`}\n                onChange={(e, replaceText) => {\n                  setReplaceText(replaceText);\n                }}\n                onKeyPress={event => {\n                  if (shouldValidate(event)) {\n                    launchReplace();\n                  }\n                }}\n                onKeyUp={event => {\n                  if (shouldCloseOrCancel(event)) {\n                    onCloseSearchPanel();\n                  }\n                }}\n                value={replaceText}\n                fullWidth\n              />\n              <Spacer />\n              <RaisedButton\n                disabled={\n                  !replaceText ||\n                  !searchText ||\n                  (!hasEventSelected && searchInSelection)\n                }\n                label={<Trans>Replace</Trans>}\n                onClick={launchReplace}\n              />\n            </Line>\n          )}\n          <Line noMargin alignItems=\"center\" justifyContent=\"space-between\">\n            <Line noMargin alignItems=\"center\">\n              <InlineCheckbox\n                label={<Trans>Case insensitive</Trans>}\n                checked={!matchCase}\n                onCheck={(e, checked) => {\n                  setMatchCase(!checked);\n                }}\n              />\n              <Text>\n                <Trans>Search in:</Trans>\n              </Text>\n              <Spacer />\n              <InlineCheckbox\n                label={<Trans>Conditions</Trans>}\n                checked={searchInConditions}\n                onCheck={(e, checked) => {\n                  setSearchInConditions(checked);\n                }}\n              />\n              <InlineCheckbox\n                label={<Trans>Actions</Trans>}\n                checked={searchInActions}\n                onCheck={(e, checked) => {\n                  setSearchInActions(checked);\n                }}\n              />\n              <InlineCheckbox\n                label={<Trans>Texts</Trans>}\n                checked={searchInEventStrings}\n                onCheck={(e, checked) => {\n                  setSearchInEventStrings(checked);\n                }}\n              />\n              {/* <InlineCheckbox //TODO: Implement search/replace in selection\n                label={<Trans>Replace in selection</Trans>}\n                checked={searchInSelection}\n                onCheck={(e, checked) =>\n                  this.setState({ searchInSelection: checked })}\n              /> */}\n            </Line>\n            <Line noMargin alignItems=\"center\">\n              <Text>\n                {resultsCount === null || resultsCount === undefined ? (\n                  ''\n                ) : resultsCount === 0 ? (\n                  <Trans>No results</Trans>\n                ) : searchFocusOffset === null ||\n                  searchFocusOffset === undefined ? (\n                  <Trans>{resultsCount} results</Trans>\n                ) : (\n                  <Trans>\n                    Showing {searchFocusOffset + 1} of {resultsCount}\n                  </Trans>\n                )}\n              </Text>\n              <IconButton\n                disabled={!resultsCount}\n                onClick={() => {\n                  onGoToPreviousSearchResult();\n                }}\n              >\n                <ChevronLeft />\n              </IconButton>\n              <IconButton\n                disabled={!resultsCount}\n                onClick={() => {\n                  onGoToNextSearchResult();\n                }}\n              >\n                <ChevronRight />\n              </IconButton>\n              <FlatButton\n                key=\"close\"\n                label={<Trans>Close</Trans>}\n                primary={false}\n                onClick={() => {\n                  onCloseSearchPanel();\n                }}\n              />\n            </Line>\n          </Line>\n        </ColumnStackLayout>\n      </Line>\n    </Background>\n  );\n};\n\nexport default React.forwardRef<Props, SearchPanelInterface>(SearchPanel);\n","// @flow\nimport * as React from 'react';\nimport { type SelectionState, getSelectedEvents } from './SelectionHandler';\nimport { mapFor } from '../Utils/MapFor';\nimport uniqBy from 'lodash/uniqBy';\nconst gd: libGDevelop = global.gd;\n\nexport type SearchInEventsInputs = {|\n  searchInSelection: boolean,\n  searchText: string,\n  matchCase: boolean,\n  searchInConditions: boolean,\n  searchInActions: boolean,\n  searchInEventStrings: boolean,\n  searchInEventSentences: boolean,\n|};\n\nexport type ReplaceInEventsInputs = {|\n  searchInSelection: boolean,\n  searchText: string,\n  replaceText: ?string,\n  matchCase: boolean,\n  searchInConditions: boolean,\n  searchInActions: boolean,\n  searchInEventStrings: boolean,\n|};\n\ntype State = {|\n  eventsSearchResults: ?gdVectorEventsSearchResult,\n  searchFocusOffset: ?number,\n|};\n\ntype Props = {|\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  events: gdEventsList,\n  selection: SelectionState,\n  project: gdProject,\n  children: (props: {|\n    eventsSearchResultEvents: ?Array<gdBaseEvent>,\n    searchFocusOffset: ?number,\n    searchInEvents: (SearchInEventsInputs, cb: () => void) => void,\n    replaceInEvents: ReplaceInEventsInputs => void,\n    goToNextSearchResult: () => ?gdBaseEvent,\n    goToPreviousSearchResult: () => ?gdBaseEvent,\n    clearSearchResults: () => void,\n  |}) => React.Node,\n|};\n\n/**\n * Computes the positions of the first selected event and the search results\n * in the flatten event tree and looks for the search result just after the\n * first selected event.\n */\nconst getSearchInitialOffset = (\n  events: gdEventsList,\n  resultEvents: Array<gdBaseEvent>,\n  selection: SelectionState\n): number => {\n  const selectedEvents = getSelectedEvents(selection);\n  if (!selectedEvents.length) return 0;\n\n  const eventsToSearch = [selectedEvents[0], ...resultEvents];\n\n  const positionFinder = new gd.EventsPositionFinder();\n  eventsToSearch.forEach(event => positionFinder.addEventToSearch(event));\n  positionFinder.launch(events);\n  const [\n    selectedEventPosition,\n    ...searchResultsPositions\n  ] = positionFinder.getPositions().toJSArray();\n\n  // Search results are considered to be sorted by position\n  // (top to bottom in the flatten event tree)\n  for (\n    let searchResultIndex = 0;\n    searchResultIndex < searchResultsPositions.length;\n    searchResultIndex++\n  ) {\n    if (searchResultsPositions[searchResultIndex] >= selectedEventPosition) {\n      return searchResultIndex;\n    }\n  }\n  return 0;\n};\n\n/**\n * Component allowing to do search in events and pass the results\n * to its children components, as well as methods to browse the results.\n */\nexport default class EventsSearcher extends React.Component<Props, State> {\n  state = {\n    eventsSearchResults: null, // The list of results\n    searchFocusOffset: null,\n  };\n\n  // The list containing the raw events results. Should be derived from this.state.eventsSearchResults using\n  // this._updateListOfResultEvents before being used.\n  _resultEvents: ?Array<gdBaseEvent> = null;\n\n  componentWillUnmount() {\n    this.reset();\n  }\n\n  reset = () => {\n    if (this.state.eventsSearchResults) this.state.eventsSearchResults.delete();\n\n    this._resultEvents = null;\n    this.setState({\n      eventsSearchResults: null,\n      searchFocusOffset: null,\n    });\n  };\n\n  _doReplaceInEvents = ({\n    searchInSelection,\n    searchText,\n    replaceText,\n    matchCase,\n    searchInConditions,\n    searchInActions,\n    searchInEventStrings,\n  }: ReplaceInEventsInputs) => {\n    const { globalObjectsContainer, objectsContainer, events } = this.props;\n\n    if (searchInSelection) {\n      // Replace in selection is a bit tricky to implement as it requires to have a list\n      // of events (gd.EventsList) pointing to the same events. Need some workaround/helper\n      // function to be done in C++.\n      console.error('Replace in selection is not implemented yet');\n    }\n    if (!replaceText) return;\n\n    gd.EventsRefactorer.replaceStringInEvents(\n      globalObjectsContainer,\n      objectsContainer,\n      events,\n      searchText,\n      replaceText,\n      matchCase,\n      searchInConditions,\n      searchInActions,\n      searchInEventStrings\n    );\n  };\n\n  _doSearchInEvents = (\n    {\n      searchInSelection,\n      searchText,\n      matchCase,\n      searchInConditions,\n      searchInActions,\n      searchInEventStrings,\n      searchInEventSentences,\n    }: SearchInEventsInputs,\n    cb: () => void\n  ) => {\n    const { events } = this.props;\n\n    if (searchInSelection) {\n      // Search in selection is a bit tricky to implement as it requires to have a list\n      // of events (gd.EventsList) pointing to the same events. Need some workaround/helper\n      // function to be done in C++.\n      console.error('Search in selection is not implemented yet');\n    }\n\n    const newEventsSearchResults = gd.EventsRefactorer.searchInEvents(\n      this.props.project.getCurrentPlatform(),\n      events,\n      searchText,\n      matchCase,\n      searchInConditions,\n      searchInActions,\n      searchInEventStrings,\n      searchInEventSentences\n    );\n\n    if (this.state.eventsSearchResults) {\n      this.state.eventsSearchResults.delete();\n    }\n    this.setState(\n      {\n        eventsSearchResults: newEventsSearchResults.clone(),\n        searchFocusOffset: null,\n      },\n      () => {\n        this._updateListOfResultEvents();\n        cb();\n      }\n    );\n  };\n\n  _updateListOfResultEvents = () => {\n    const { eventsSearchResults } = this.state;\n    if (!eventsSearchResults) {\n      this._resultEvents = null;\n      return;\n    }\n\n    const resultEventsWithDuplicates = mapFor(\n      0,\n      eventsSearchResults.size(),\n      i => {\n        const eventsSearchResult = eventsSearchResults.at(i);\n        return eventsSearchResult.isEventValid()\n          ? eventsSearchResult.getEvent()\n          : null;\n      }\n    ).filter(Boolean);\n\n    // Store a list of unique events, because browsing for results in the events\n    // tree is made event by event.\n    this._resultEvents = uniqBy(resultEventsWithDuplicates, event => event.ptr);\n  };\n\n  _goToSearchResults = (step: number): ?gdBaseEvent => {\n    this._updateListOfResultEvents();\n    if (!this._resultEvents || this._resultEvents.length === 0) {\n      this.setState({ searchFocusOffset: null });\n      return null;\n    }\n\n    const { searchFocusOffset } = this.state;\n\n    let newSearchFocusOffset =\n      searchFocusOffset === null || searchFocusOffset === undefined\n        ? getSearchInitialOffset(\n            this.props.events,\n            this._resultEvents,\n            this.props.selection\n          )\n        : (searchFocusOffset + step) % this._resultEvents.length;\n    if (newSearchFocusOffset < 0)\n      newSearchFocusOffset += this._resultEvents.length;\n\n    const event = this._resultEvents[newSearchFocusOffset];\n    setTimeout(\n      // Change the offset on next tick to give a chance to children to unfold events before focusing it.\n      () => this.setState({ searchFocusOffset: newSearchFocusOffset }),\n      0\n    );\n    return event;\n  };\n\n  _goToPreviousSearchResult = (): ?gdBaseEvent => {\n    return this._goToSearchResults(-1);\n  };\n\n  _goToNextSearchResult = (): ?gdBaseEvent => {\n    return this._goToSearchResults(+1);\n  };\n\n  render() {\n    return this.props.children({\n      eventsSearchResultEvents: this._resultEvents,\n      searchFocusOffset: this.state.searchFocusOffset,\n      searchInEvents: this._doSearchInEvents,\n      replaceInEvents: this._doReplaceInEvents,\n      goToNextSearchResult: this._goToNextSearchResult,\n      goToPreviousSearchResult: this._goToPreviousSearchResult,\n      clearSearchResults: this.reset,\n    });\n  }\n}\n","// @flow\nconst gd: libGDevelop = global.gd;\n\nexport const containsSubInstructions = (\n  instruction: gdInstruction,\n  instructionsList: gdInstructionsList\n) => {\n  const subInstructionsList = instruction.getSubInstructions();\n  if (gd.compare(subInstructionsList, instructionsList)) return true;\n\n  for (let i = 0; i < subInstructionsList.size(); ++i) {\n    const subInstruction = subInstructionsList.get(i);\n    if (containsSubInstructions(subInstruction, instructionsList)) return true;\n  }\n\n  return false;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport { enumerateEventsFunctionsExtensions } from '../../ProjectManager/EnumerateProjectItems';\nimport { Line, Column, Spacer } from '../../UI/Grid';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\nimport {\n  setupFunctionFromEvents,\n  canCreateEventsFunction,\n  functionHasLotsOfParameters,\n  validateExtensionNameUniqueness,\n  validateExtensionName,\n  validateEventsFunctionNameUniqueness,\n  validateEventsFunctionName,\n} from '.';\nimport AlertMessage from '../../UI/AlertMessage';\nimport DismissableAlertMessage from '../../UI/DismissableAlertMessage';\nimport EventsFunctionParametersEditor from '../../EventsFunctionsExtensionEditor/EventsFunctionConfigurationEditor/EventsFunctionParametersEditor';\nimport EventsFunctionPropertiesEditor from '../../EventsFunctionsExtensionEditor/EventsFunctionConfigurationEditor/EventsFunctionPropertiesEditor';\nimport HelpButton from '../../UI/HelpButton';\nimport { ResponsiveLineStackLayout } from '../../UI/Layout';\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  serializedEvents: Object,\n  onClose: () => void,\n  onCreate: (extensionName: string, eventsFunction: gdEventsFunction) => void,\n|};\n\ntype State = {|\n  eventsFunction: ?gdEventsFunction,\n  extensionName: string,\n  createNewExtension: boolean,\n|};\n\nconst CREATE_NEW_EXTENSION_PLACEHOLDER = '<create a new extension>';\n\nexport default class EventsFunctionExtractorDialog extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    eventsFunction: null,\n    extensionName: '',\n    createNewExtension: false,\n  };\n\n  componentDidMount() {\n    const {\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      serializedEvents,\n    } = this.props;\n\n    // Set up the function\n    const eventsFunction = new gd.EventsFunction();\n    setupFunctionFromEvents({\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      serializedEvents,\n      eventsFunction,\n    });\n    this.setState({\n      eventsFunction,\n    });\n\n    // Prepopulate the form\n    const eventsFunctionsExtensions = enumerateEventsFunctionsExtensions(\n      project\n    );\n    if (eventsFunctionsExtensions.length === 0) {\n      this.setState({\n        createNewExtension: true,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const { eventsFunction } = this.state;\n    if (eventsFunction) eventsFunction.delete();\n  }\n\n  _getFunctionGroupNames = (): Array<string> => {\n    const { createNewExtension, extensionName } = this.state;\n    if (createNewExtension || !extensionName) {\n      return [];\n    }\n    const groupNames = new Set<string>();\n    const { project } = this.props;\n    const eventsFunctionsExtension = project.getEventsFunctionsExtension(\n      extensionName\n    );\n    for (\n      let index = 0;\n      index < eventsFunctionsExtension.getEventsFunctionsCount();\n      index++\n    ) {\n      const groupName = eventsFunctionsExtension\n        .getEventsFunctionAt(index)\n        .getGroup();\n      if (groupName) {\n        groupNames.add(groupName);\n      }\n    }\n    return [...groupNames].sort((a, b) => a.localeCompare(b));\n  };\n\n  render() {\n    const { project, onClose, onCreate } = this.props;\n    const { eventsFunction, extensionName, createNewExtension } = this.state;\n    if (!eventsFunction) return null;\n\n    const eventsFunctionsExtensions = enumerateEventsFunctionsExtensions(\n      project\n    );\n    const hasLotsOfParameters = functionHasLotsOfParameters(eventsFunction);\n\n    const onApply = () => {\n      if (!canCreateEventsFunction(project, extensionName, eventsFunction)) {\n        onClose();\n      } else {\n        onCreate(extensionName, eventsFunction);\n      }\n    };\n\n    return (\n      <Dialog\n        onApply={onApply}\n        title={<Trans>Extract the events in a function</Trans>}\n        secondaryActions={[\n          <HelpButton\n            helpPagePath=\"/events/functions/extract-events\"\n            key=\"help\"\n          />,\n        ]}\n        actions={[\n          <FlatButton\n            key=\"cancel\"\n            label={<Trans>Cancel</Trans>}\n            onClick={onClose}\n          />,\n          <FlatButton\n            key=\"create\"\n            label={<Trans>Create</Trans>}\n            primary\n            disabled={\n              !canCreateEventsFunction(project, extensionName, eventsFunction)\n            }\n            onClick={onApply}\n          />,\n        ]}\n        cannotBeDismissed={true}\n        open\n        onRequestClose={onClose}\n        noMargin\n      >\n        <Column noMargin>\n          <Column>\n            <DismissableAlertMessage\n              identifier=\"function-extractor-explanation\"\n              kind=\"info\"\n            >\n              After creating a function, it will be usable in the events sheet.\n              Functions are grouped by extensions. Choose, or enter the name of\n              a new extension, and a function name, then configure the function\n              and its parameters.\n            </DismissableAlertMessage>\n            <ResponsiveLineStackLayout noMargin expand>\n              <SelectField\n                floatingLabelText={\n                  <Trans>Extension (storing the function)</Trans>\n                }\n                value={\n                  createNewExtension\n                    ? CREATE_NEW_EXTENSION_PLACEHOLDER\n                    : extensionName\n                }\n                onChange={(e, i, extensionName) => {\n                  if (extensionName === CREATE_NEW_EXTENSION_PLACEHOLDER) {\n                    this.setState({\n                      createNewExtension: true,\n                      extensionName: '',\n                    });\n                  } else {\n                    this.setState({\n                      createNewExtension: false,\n                      extensionName,\n                    });\n                  }\n                }}\n                fullWidth\n              >\n                {eventsFunctionsExtensions.map(eventsFunctionsExtension => (\n                  <SelectOption\n                    key={eventsFunctionsExtension.getName()}\n                    value={eventsFunctionsExtension.getName()}\n                    primaryText={\n                      eventsFunctionsExtension.getFullName() ||\n                      eventsFunctionsExtension.getName()\n                    }\n                  />\n                ))}\n                <SelectOption\n                  value={CREATE_NEW_EXTENSION_PLACEHOLDER}\n                  primaryText={t`<Create a New Extension>`}\n                />\n              </SelectField>\n              {createNewExtension ? (\n                <SemiControlledTextField\n                  commitOnBlur\n                  value={extensionName}\n                  floatingLabelText={<Trans>New extension name</Trans>}\n                  onChange={(extensionName: string) =>\n                    this.setState({ extensionName })\n                  }\n                  fullWidth\n                  errorText={\n                    !validateExtensionNameUniqueness(project, extensionName) ? (\n                      <Trans>\n                        This name is already taken by another extension.\n                      </Trans>\n                    ) : !validateExtensionName(extensionName) ? (\n                      <Trans>\n                        This name is not valid. Only use alphanumeric characters\n                        (0-9, a-z) and underscores.\n                      </Trans>\n                    ) : (\n                      undefined\n                    )\n                  }\n                />\n              ) : null}\n            </ResponsiveLineStackLayout>\n            <Line>\n              <SemiControlledTextField\n                commitOnBlur\n                value={eventsFunction.getName()}\n                floatingLabelText={<Trans>Function name</Trans>}\n                onChange={(functionName: string) => {\n                  eventsFunction.setName(functionName);\n                  this.forceUpdate();\n                }}\n                fullWidth\n                errorText={\n                  !validateEventsFunctionNameUniqueness(\n                    project,\n                    extensionName,\n                    eventsFunction\n                  ) ? (\n                    <Trans>\n                      This name is already taken by another function. Choose\n                      another name.\n                    </Trans>\n                  ) : !validateEventsFunctionName(eventsFunction.getName()) ? (\n                    <Trans>\n                      This name is not valid. Only use alphanumeric characters\n                      (0-9, a-z) and underscores.\n                    </Trans>\n                  ) : (\n                    undefined\n                  )\n                }\n              />\n            </Line>\n            {hasLotsOfParameters ? (\n              <Line>\n                <AlertMessage kind=\"warning\">\n                  <Trans>\n                    This function will have a lot of parameters. Consider\n                    creating groups or functions for a smaller set of objects so\n                    that the function is easier to reuse.\n                  </Trans>\n                </AlertMessage>\n              </Line>\n            ) : null}\n          </Column>\n          <EventsFunctionPropertiesEditor\n            eventsFunction={eventsFunction}\n            eventsBasedBehavior={null}\n            onConfigurationUpdated={() => {\n              // Force re-running logic to see if Create button is disabled.\n              this.forceUpdate();\n            }}\n            freezeEventsFunctionType\n            getFunctionGroupNames={this._getFunctionGroupNames}\n          />\n          <Spacer />\n          <EventsFunctionParametersEditor\n            project={project}\n            eventsFunction={eventsFunction}\n            eventsBasedBehavior={null}\n            onParametersUpdated={() => {\n              // Force the dialog to adapt its size\n              this.forceUpdate();\n            }}\n            freezeParameters\n          />\n        </Column>\n      </Dialog>\n    );\n  }\n}\n","// @flow\n\nexport default function getObjectGroupByName(\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  objectGroupName: string\n): ?gdObjectGroup {\n  if (objectsContainer.getObjectGroups().has(objectGroupName)) {\n    return objectsContainer.getObjectGroups().get(objectGroupName);\n  } else if (globalObjectsContainer.getObjectGroups().has(objectGroupName)) {\n    return globalObjectsContainer.getObjectGroups().get(objectGroupName);\n  }\n\n  return null;\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport * as React from 'react';\nimport EventsSheet, { type EventsSheetInterface } from '../EventsSheet';\nimport EditorMosaic from '../UI/EditorMosaic';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport EventsFunctionConfigurationEditor from './EventsFunctionConfigurationEditor';\nimport EventsFunctionsList, {\n  type EventsFunctionCreationParameters,\n} from '../EventsFunctionsList';\nimport EventsBasedBehaviorsList from '../EventsBasedBehaviorsList';\nimport Background from '../UI/Background';\nimport OptionsEditorDialog from './OptionsEditorDialog';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport EventsBasedBehaviorEditorDialog from '../EventsBasedBehaviorEditor/EventsBasedBehaviorEditorDialog';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport BehaviorMethodSelectorDialog from './BehaviorMethodSelectorDialog';\nimport ExtensionFunctionSelectorDialog from './ExtensionFunctionSelectorDialog';\nimport {\n  isBehaviorLifecycleEventsFunction,\n  isExtensionLifecycleEventsFunction,\n} from '../EventsFunctionsExtensionsLoader/MetadataDeclarationHelpers';\nimport FlatButton from '../UI/FlatButton';\nimport { Line } from '../UI/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nimport EditorNavigator, {\n  type EditorNavigatorInterface,\n} from '../UI/EditorMosaic/EditorNavigator';\nimport ChooseEventsFunctionsExtensionEditor from './ChooseEventsFunctionsExtensionEditor';\nimport Check from '@material-ui/icons/Check';\nimport Tune from '@material-ui/icons/Tune';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport { getParametersIndexOffset } from '../EventsFunctionsExtensionsLoader';\nimport { sendEventsExtractedAsFunction } from '../Utils/Analytics/EventSender';\n\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  setToolbar: (?React.Node) => void,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n  onCreateEventsFunction: (\n    extensionName: string,\n    eventsFunction: gdEventsFunction,\n    editorIdentifier:\n      | 'scene-events-editor'\n      | 'extension-events-editor'\n      | 'external-events-editor'\n  ) => void,\n  onBehaviorEdited?: () => Promise<void>,\n  initiallyFocusedFunctionName: ?string,\n  initiallyFocusedBehaviorName: ?string,\n  unsavedChanges?: ?UnsavedChanges,\n|};\n\ntype State = {|\n  selectedEventsFunction: ?gdEventsFunction,\n  selectedEventsBasedBehavior: ?gdEventsBasedBehavior,\n  editedEventsBasedBehavior: ?gdEventsBasedBehavior,\n  editOptionsDialogOpen: boolean,\n  behaviorMethodSelectorDialogOpen: boolean,\n  extensionFunctionSelectorDialogOpen: boolean,\n  onAddEventsFunctionCb: ?(\n    parameters: ?EventsFunctionCreationParameters\n  ) => void,\n|};\n\nconst initialMosaicEditorNodes = {\n  direction: 'row',\n  first: {\n    direction: 'column',\n    first: 'free-functions-list',\n    second: 'behaviors-list',\n    splitPercentage: 50,\n  },\n  second: {\n    direction: 'column',\n    first: 'parameters',\n    second: 'events-sheet',\n    splitPercentage: 25,\n  },\n  splitPercentage: 25,\n};\n\nexport default class EventsFunctionsExtensionEditor extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    selectedEventsFunction: null,\n    selectedEventsBasedBehavior: null,\n    editedEventsBasedBehavior: null,\n    editOptionsDialogOpen: false,\n    behaviorMethodSelectorDialogOpen: false,\n    extensionFunctionSelectorDialogOpen: false,\n    onAddEventsFunctionCb: null,\n  };\n  editor: ?EventsSheetInterface;\n  _editorMosaic: ?EditorMosaic;\n  _editorNavigator: ?EditorNavigatorInterface;\n  _globalObjectsContainer: ?gdObjectsContainer;\n  _objectsContainer: ?gdObjectsContainer;\n\n  componentDidMount() {\n    if (this.props.initiallyFocusedFunctionName) {\n      this.selectEventsFunctionByName(\n        this.props.initiallyFocusedFunctionName,\n        this.props.initiallyFocusedBehaviorName\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._globalObjectsContainer) this._globalObjectsContainer.delete();\n    if (this._objectsContainer) this._objectsContainer.delete();\n  }\n\n  _loadEventsFunctionFrom = (\n    project: gdProject,\n    eventsFunction: gdEventsFunction,\n    eventsBasedBehavior: ?gdEventsBasedBehavior\n  ) => {\n    // Create an empty \"context\" of objects.\n    // Avoid recreating containers if they were already created, so that\n    // we keep the same objects in memory and avoid remounting components\n    // (like ObjectGroupsList) because objects \"ptr\" changed.\n    if (!this._globalObjectsContainer) {\n      this._globalObjectsContainer = new gd.ObjectsContainer();\n    }\n\n    if (!this._objectsContainer) {\n      this._objectsContainer = new gd.ObjectsContainer();\n    }\n\n    // Initialize this \"context\" of objects with the function\n    // (as done during code generation).\n    if (eventsBasedBehavior) {\n      gd.EventsFunctionTools.behaviorEventsFunctionToObjectsContainer(\n        project,\n        eventsBasedBehavior,\n        eventsFunction,\n        this._globalObjectsContainer,\n        this._objectsContainer\n      );\n    } else {\n      gd.EventsFunctionTools.freeEventsFunctionToObjectsContainer(\n        project,\n        eventsFunction,\n        this._globalObjectsContainer,\n        this._objectsContainer\n      );\n    }\n  };\n\n  updateToolbar = () => {\n    if (this.editor) {\n      this.editor.updateToolbar();\n    } else {\n      this.props.setToolbar(null);\n    }\n  };\n\n  selectEventsFunctionByName = (\n    functionName: string,\n    behaviorName: ?string\n  ) => {\n    const { eventsFunctionsExtension } = this.props;\n\n    if (behaviorName) {\n      // Behavior function\n      const eventsBasedBehaviors = eventsFunctionsExtension.getEventsBasedBehaviors();\n      if (eventsBasedBehaviors.has(behaviorName)) {\n        const eventsBasedBehavior = eventsBasedBehaviors.get(behaviorName);\n        const behaviorEventsFunctions = eventsBasedBehavior.getEventsFunctions();\n        if (behaviorEventsFunctions.hasEventsFunctionNamed(functionName)) {\n          this._selectEventsFunction(\n            behaviorEventsFunctions.getEventsFunction(functionName),\n            eventsBasedBehavior\n          );\n        }\n      }\n    } else {\n      // Free function\n      if (eventsFunctionsExtension.hasEventsFunctionNamed(functionName)) {\n        this._selectEventsFunction(\n          eventsFunctionsExtension.getEventsFunction(functionName),\n          null\n        );\n      }\n    }\n  };\n\n  _selectEventsFunction = (\n    selectedEventsFunction: ?gdEventsFunction,\n    selectedEventsBasedBehavior: ?gdEventsBasedBehavior\n  ) => {\n    if (!selectedEventsFunction) {\n      this.setState(\n        {\n          selectedEventsFunction: null,\n          selectedEventsBasedBehavior,\n        },\n        () => this.updateToolbar()\n      );\n      return;\n    }\n\n    this._loadEventsFunctionFrom(\n      this.props.project,\n      selectedEventsFunction,\n      selectedEventsBasedBehavior\n    );\n    this.setState(\n      {\n        selectedEventsFunction,\n        selectedEventsBasedBehavior,\n      },\n      () => {\n        this.updateToolbar();\n\n        if (this._editorNavigator) {\n          // Open the parameters of the function if it's a new, empty function.\n          if (\n            selectedEventsFunction &&\n            !selectedEventsFunction.getEvents().getEventsCount()\n          ) {\n            this._editorNavigator.openEditor('parameters');\n          } else {\n            this._editorNavigator.openEditor('events-sheet');\n          }\n        }\n      }\n    );\n  };\n\n  _makeRenameFreeEventsFunction = (i18n: I18nType) => (\n    eventsFunction: gdEventsFunction,\n    newName: string,\n    done: boolean => void\n  ) => {\n    if (!gd.Project.validateName(newName)) {\n      showWarningBox(\n        i18n._(\n          t`This name is invalid. Only use alphanumeric characters (0-9, a-z) and underscores. Digits are not allowed as the first character.`\n        ),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n    if (isExtensionLifecycleEventsFunction(newName)) {\n      showWarningBox(\n        i18n._(\n          t`This name is reserved for a lifecycle function of the extension. Choose another name for your function.`\n        ),\n        { delayToNextTick: true }\n      );\n      return done(false);\n    }\n\n    const { project, eventsFunctionsExtension } = this.props;\n    gd.WholeProjectRefactorer.renameEventsFunction(\n      project,\n      eventsFunctionsExtension,\n      eventsFunction.getName(),\n      newName\n    );\n\n    done(true);\n  };\n\n  _makeRenameBehaviorEventsFunction = (i18n: I18nType) => (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    eventsFunction: gdEventsFunction,\n    newName: string,\n    done: boolean => void\n  ) => {\n    if (!gd.Project.validateName(newName)) {\n      showWarningBox(\n        i18n._(\n          t`This name is invalid. Only use alphanumeric characters (0-9, a-z) and underscores. Digits are not allowed as the first character.`\n        ),\n        { delayToNextTick: true }\n      );\n      return done(false);\n    }\n    if (isBehaviorLifecycleEventsFunction(newName)) {\n      showWarningBox(\n        i18n._(\n          t`This name is reserved for a lifecycle method of the behavior. Choose another name for your custom function.`\n        ),\n        { delayToNextTick: true }\n      );\n      return done(false);\n    }\n\n    const { project, eventsFunctionsExtension } = this.props;\n    gd.WholeProjectRefactorer.renameBehaviorEventsFunction(\n      project,\n      eventsFunctionsExtension,\n      eventsBasedBehavior,\n      eventsFunction.getName(),\n      newName\n    );\n\n    done(true);\n  };\n\n  _makeMoveFreeEventsParameter = (i18n: I18nType) => (\n    eventsFunction: gdEventsFunction,\n    oldIndex: number,\n    newIndex: number,\n    done: boolean => void\n  ) => {\n    // Don't ask for user confirmation as this change is easy to revert.\n\n    const { project, eventsFunctionsExtension } = this.props;\n    gd.WholeProjectRefactorer.moveEventsFunctionParameter(\n      project,\n      eventsFunctionsExtension,\n      eventsFunction.getName(),\n      oldIndex + getParametersIndexOffset(false),\n      newIndex + getParametersIndexOffset(false)\n    );\n\n    done(true);\n  };\n\n  _makeMoveBehaviorEventsParameter = (i18n: I18nType) => (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    eventsFunction: gdEventsFunction,\n    oldIndex: number,\n    newIndex: number,\n    done: boolean => void\n  ) => {\n    // Don't ask for user confirmation as this change is easy to revert.\n\n    const { project, eventsFunctionsExtension } = this.props;\n    gd.WholeProjectRefactorer.moveBehaviorEventsFunctionParameter(\n      project,\n      eventsFunctionsExtension,\n      eventsBasedBehavior,\n      eventsFunction.getName(),\n      oldIndex,\n      newIndex\n    );\n\n    done(true);\n  };\n\n  _onDeleteEventsFunction = (\n    eventsFunction: gdEventsFunction,\n    cb: boolean => void\n  ) => {\n    if (\n      this.state.selectedEventsFunction &&\n      gd.compare(eventsFunction, this.state.selectedEventsFunction)\n    ) {\n      this._selectEventsFunction(null, this.state.selectedEventsBasedBehavior);\n    }\n\n    cb(true);\n  };\n\n  _selectEventsBasedBehavior = (\n    selectedEventsBasedBehavior: ?gdEventsBasedBehavior\n  ) => {\n    this.setState(\n      {\n        selectedEventsBasedBehavior,\n        selectedEventsFunction: null,\n      },\n      () => {\n        this.updateToolbar();\n        if (selectedEventsBasedBehavior) {\n          if (this._editorMosaic)\n            this._editorMosaic.openEditor(\n              'behavior-functions-list',\n              'end',\n              75,\n              'column'\n            );\n          if (this._editorNavigator)\n            this._editorNavigator.openEditor('behavior-functions-list');\n        }\n      }\n    );\n  };\n\n  _makeRenameEventsBasedBehavior = (i18n: I18nType) => (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    newName: string,\n    done: boolean => void\n  ) => {\n    if (!gd.Project.validateName(newName)) {\n      showWarningBox(\n        i18n._(\n          t`This name is invalid. Only use alphanumeric characters (0-9, a-z) and underscores. Digits are not allowed as the first character.`\n        ),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    const { project, eventsFunctionsExtension } = this.props;\n    gd.WholeProjectRefactorer.renameEventsBasedBehavior(\n      project,\n      eventsFunctionsExtension,\n      eventsBasedBehavior.getName(),\n      newName\n    );\n\n    done(true);\n  };\n\n  _onEventsBasedBehaviorRenamed = () => {\n    // Name of a behavior changed, so notify parent\n    // that a behavior was edited (to trigger reload of extensions)\n    if (this.props.onBehaviorEdited) this.props.onBehaviorEdited();\n\n    // Reload the selected events function, if any, as the behavior was\n    // changed so objects containers need to be re-created (otherwise,\n    // objects from objects containers will still refer to the old behavior name,\n    // done before the call to gd.WholeProjectRefactorer.renameEventsBasedBehavior).\n    if (this.state.selectedEventsFunction) {\n      this._loadEventsFunctionFrom(\n        this.props.project,\n        this.state.selectedEventsFunction,\n        this.state.selectedEventsBasedBehavior\n      );\n    }\n  };\n\n  _onDeleteEventsBasedBehavior = (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    cb: boolean => void\n  ) => {\n    if (\n      this.state.selectedEventsBasedBehavior &&\n      gd.compare(eventsBasedBehavior, this.state.selectedEventsBasedBehavior)\n    ) {\n      this._selectEventsBasedBehavior(null);\n    }\n\n    cb(true);\n  };\n\n  _onAddFreeEventsFunction = (\n    onAddEventsFunctionCb: (\n      parameters: ?EventsFunctionCreationParameters\n    ) => void\n  ) => {\n    this.setState({\n      extensionFunctionSelectorDialogOpen: true,\n      onAddEventsFunctionCb,\n    });\n  };\n\n  _onCloseExtensionFunctionSelectorDialog = (\n    parameters: ?EventsFunctionCreationParameters\n  ) => {\n    const { onAddEventsFunctionCb } = this.state;\n    this.setState(\n      {\n        extensionFunctionSelectorDialogOpen: false,\n        onAddEventsFunctionCb: null,\n      },\n      () => {\n        if (onAddEventsFunctionCb) onAddEventsFunctionCb(parameters);\n      }\n    );\n  };\n\n  _onAddBehaviorEventsFunction = (\n    onAddEventsFunctionCb: (\n      parameters: ?EventsFunctionCreationParameters\n    ) => void\n  ) => {\n    this.setState({\n      behaviorMethodSelectorDialogOpen: true,\n      onAddEventsFunctionCb,\n    });\n  };\n\n  _onCloseBehaviorMethodSelectorDialog = (\n    parameters: ?EventsFunctionCreationParameters\n  ) => {\n    const { onAddEventsFunctionCb } = this.state;\n    this.setState(\n      {\n        behaviorMethodSelectorDialogOpen: false,\n        onAddEventsFunctionCb: null,\n      },\n      () => {\n        if (onAddEventsFunctionCb) onAddEventsFunctionCb(parameters);\n      }\n    );\n  };\n\n  _onBehaviorEventsFunctionAdded = (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    eventsFunction: gdEventsFunction\n  ) => {\n    // This will create the mandatory parameters for the newly added function.\n    gd.WholeProjectRefactorer.ensureBehaviorEventsFunctionsProperParameters(\n      this.props.eventsFunctionsExtension,\n      eventsBasedBehavior\n    );\n  };\n\n  _onBehaviorPropertyRenamed = (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    oldName: string,\n    newName: string\n  ) => {\n    const { project, eventsFunctionsExtension } = this.props;\n    gd.WholeProjectRefactorer.renameEventsBasedBehaviorProperty(\n      project,\n      eventsFunctionsExtension,\n      eventsBasedBehavior,\n      oldName,\n      newName\n    );\n  };\n\n  _editOptions = (open: boolean = true) => {\n    this.setState({\n      editOptionsDialogOpen: open,\n    });\n  };\n\n  _editBehavior = (editedEventsBasedBehavior: ?gdEventsBasedBehavior) => {\n    this.setState(\n      state => {\n        // If we're closing the properties of a behavior, ensure parameters\n        // are up-to-date in all event functions of the behavior (the object\n        // type might have changed).\n        if (state.editedEventsBasedBehavior && !editedEventsBasedBehavior) {\n          gd.WholeProjectRefactorer.ensureBehaviorEventsFunctionsProperParameters(\n            this.props.eventsFunctionsExtension,\n            state.editedEventsBasedBehavior\n          );\n        }\n\n        return {\n          editedEventsBasedBehavior,\n        };\n      },\n      async () => {\n        // TODO: Is this logic the same as in _onEventsBasedBehaviorRenamed?\n\n        if (!editedEventsBasedBehavior) {\n          // If we're closing the properties of a behavior, notify parent\n          // that a behavior was edited (to trigger reload of extensions)\n          if (this.props.onBehaviorEdited) {\n            await this.props.onBehaviorEdited();\n\n            // Once extensions are reloaded, ensure the project stays valid by\n            // filling any invalid required behavior property in the objects\n            // of the project.\n            //\n            // We need to do that as \"required behavior\" properties may have been\n            // added (or the type of the required behavior changed) in the dialog.\n            gd.WholeProjectRefactorer.fixInvalidRequiredBehaviorProperties(\n              this.props.project\n            );\n          }\n\n          // Reload the selected events function, if any, as the behavior was\n          // changed so objects containers need to be re-created. Notably, the\n          // type of the object that is handled by the behavior may have changed.\n          if (this.state.selectedEventsFunction) {\n            this._loadEventsFunctionFrom(\n              this.props.project,\n              this.state.selectedEventsFunction,\n              this.state.selectedEventsBasedBehavior\n            );\n          }\n        }\n      }\n    );\n  };\n\n  _openFreeFunctionsListEditor = () => {\n    if (this._editorNavigator)\n      this._editorNavigator.openEditor('free-functions-list');\n  };\n\n  _openBehaviorsListEditor = () => {\n    if (this._editorNavigator)\n      this._editorNavigator.openEditor('behaviors-list');\n  };\n\n  _onEditorNavigatorEditorChanged = (editorName: string) => {\n    // It's important that this method is the same across renders,\n    // to avoid confusing EditorNavigator into thinking it's changed\n    // and immediately calling it, which would trigger an infinite loop.\n    // Search for \"callback-prevent-infinite-rerendering\" in the codebase.\n\n    this.updateToolbar();\n\n    if (editorName === 'behaviors-list') {\n      this._selectEventsBasedBehavior(null);\n    } else if (\n      editorName === 'free-functions-list' ||\n      editorName === 'behavior-functions-list'\n    ) {\n      this._selectEventsFunction(null, this.state.selectedEventsBasedBehavior);\n    }\n  };\n\n  _getFunctionGroupNames = (): Array<string> => {\n    const groupNames = new Set<string>();\n    // Look only in the edited function container because\n    // functions from the extension or different behaviors\n    // won't use the same groups names.\n    // An independent autocompletion is done for each of them.\n    const { selectedEventsBasedBehavior } = this.state;\n    if (selectedEventsBasedBehavior) {\n      const eventFunctionContainer = selectedEventsBasedBehavior.getEventsFunctions();\n      for (\n        let index = 0;\n        index < eventFunctionContainer.getEventsFunctionsCount();\n        index++\n      ) {\n        const groupName = eventFunctionContainer\n          .getEventsFunctionAt(index)\n          .getGroup();\n        if (groupName) {\n          groupNames.add(groupName);\n        }\n      }\n    } else {\n      const { eventsFunctionsExtension } = this.props;\n      for (\n        let index = 0;\n        index < eventsFunctionsExtension.getEventsFunctionsCount();\n        index++\n      ) {\n        const groupName = eventsFunctionsExtension\n          .getEventsFunctionAt(index)\n          .getGroup();\n        if (groupName) {\n          groupNames.add(groupName);\n        }\n      }\n    }\n    return [...groupNames].sort((a, b) => a.localeCompare(b));\n  };\n\n  _onConfigurationUpdated = (whatChanged?: 'type') => {\n    if (whatChanged === 'type') {\n      // Force an update to ensure the icon of the edited function is updated.\n      this.forceUpdate();\n    }\n\n    // Do nothing otherwise to avoid costly and useless extra renders.\n  };\n\n  onBeginCreateEventsFunction = () => {\n    sendEventsExtractedAsFunction({\n      step: 'begin',\n      parentEditor: 'extension-events-editor',\n    });\n  };\n\n  onCreateEventsFunction = (\n    extensionName: string,\n    eventsFunction: gdEventsFunction\n  ) => {\n    this.props.onCreateEventsFunction(\n      extensionName,\n      eventsFunction,\n      'extension-events-editor'\n    );\n  };\n\n  render() {\n    const { project, eventsFunctionsExtension } = this.props;\n    const {\n      selectedEventsFunction,\n      selectedEventsBasedBehavior,\n      editOptionsDialogOpen,\n      behaviorMethodSelectorDialogOpen,\n      extensionFunctionSelectorDialogOpen,\n      editedEventsBasedBehavior,\n    } = this.state;\n\n    const editors = {\n      'choose-editor': {\n        type: 'primary',\n        noTitleBar: true,\n        renderEditor: () => (\n          <ChooseEventsFunctionsExtensionEditor\n            eventsFunctionsExtension={eventsFunctionsExtension}\n            onEditFreeFunctions={this._openFreeFunctionsListEditor}\n            onEditBehaviors={this._openBehaviorsListEditor}\n            onEditExtensionOptions={this._editOptions}\n          />\n        ),\n      },\n      parameters: {\n        type: 'primary',\n        title: t`Function Configuration`,\n        toolbarControls: [],\n        renderEditor: () => (\n          <I18n>\n            {({ i18n }) => (\n              <Background>\n                {selectedEventsFunction &&\n                this._globalObjectsContainer &&\n                this._objectsContainer ? (\n                  <EventsFunctionConfigurationEditor\n                    project={project}\n                    eventsFunction={selectedEventsFunction}\n                    eventsBasedBehavior={selectedEventsBasedBehavior}\n                    globalObjectsContainer={this._globalObjectsContainer}\n                    objectsContainer={this._objectsContainer}\n                    onConfigurationUpdated={this._onConfigurationUpdated}\n                    helpPagePath={\n                      !!selectedEventsBasedBehavior\n                        ? '/behaviors/events-based-behaviors'\n                        : '/events/functions'\n                    }\n                    onParametersOrGroupsUpdated={() => {\n                      this._loadEventsFunctionFrom(\n                        project,\n                        selectedEventsFunction,\n                        selectedEventsBasedBehavior\n                      );\n                      this.forceUpdate();\n                    }}\n                    onMoveFreeEventsParameter={this._makeMoveFreeEventsParameter(\n                      i18n\n                    )}\n                    onMoveBehaviorEventsParameter={this._makeMoveBehaviorEventsParameter(\n                      i18n\n                    )}\n                    unsavedChanges={this.props.unsavedChanges}\n                    getFunctionGroupNames={this._getFunctionGroupNames}\n                  />\n                ) : (\n                  <EmptyMessage>\n                    <Trans>\n                      Choose a function, or a function of a behavior, to set the\n                      parameters that it accepts.\n                    </Trans>\n                  </EmptyMessage>\n                )}\n              </Background>\n            )}\n          </I18n>\n        ),\n      },\n      'events-sheet': {\n        type: 'primary',\n        noTitleBar: true,\n        renderEditor: () =>\n          selectedEventsFunction &&\n          this._globalObjectsContainer &&\n          this._objectsContainer ? (\n            <Background>\n              <EventsSheet\n                key={selectedEventsFunction.ptr}\n                ref={editor => (this.editor = editor)}\n                project={project}\n                scope={{\n                  layout: null,\n                  externalEvents: null,\n                  eventsFunctionsExtension,\n                  eventsBasedBehavior: selectedEventsBasedBehavior,\n                  eventsFunction: selectedEventsFunction,\n                }}\n                globalObjectsContainer={this._globalObjectsContainer}\n                objectsContainer={this._objectsContainer}\n                events={selectedEventsFunction.getEvents()}\n                onOpenExternalEvents={() => {}}\n                onOpenLayout={() => {}}\n                resourceSources={this.props.resourceSources}\n                onChooseResource={this.props.onChooseResource}\n                resourceExternalEditors={this.props.resourceExternalEditors}\n                openInstructionOrExpression={\n                  this.props.openInstructionOrExpression\n                }\n                setToolbar={this.props.setToolbar}\n                onBeginCreateEventsFunction={this.onBeginCreateEventsFunction}\n                onCreateEventsFunction={this.onCreateEventsFunction}\n                onOpenSettings={this._editOptions}\n                unsavedChanges={this.props.unsavedChanges}\n              />\n            </Background>\n          ) : (\n            <Background>\n              <EmptyMessage>\n                <Trans>\n                  Choose a function, or a function of a behavior, to edit its\n                  events.\n                </Trans>\n              </EmptyMessage>\n            </Background>\n          ),\n      },\n      'free-functions-list': {\n        type: 'primary',\n        title: t`Functions`,\n        toolbarControls: [],\n        renderEditor: () => (\n          <I18n>\n            {({ i18n }) => (\n              <EventsFunctionsList\n                project={project}\n                eventsFunctionsContainer={eventsFunctionsExtension}\n                selectedEventsFunction={selectedEventsFunction}\n                onSelectEventsFunction={selectedEventsFunction =>\n                  this._selectEventsFunction(selectedEventsFunction, null)\n                }\n                onDeleteEventsFunction={this._onDeleteEventsFunction}\n                canRename={(eventsFunction: gdEventsFunction) => {\n                  return !isExtensionLifecycleEventsFunction(\n                    eventsFunction.getName()\n                  );\n                }}\n                onRenameEventsFunction={this._makeRenameFreeEventsFunction(\n                  i18n\n                )}\n                onAddEventsFunction={this._onAddFreeEventsFunction}\n                onEventsFunctionAdded={() => {}}\n                renderHeader={() => (\n                  <React.Fragment>\n                    <Line justifyContent=\"center\">\n                      <FlatButton\n                        label={<Trans>Edit extension options</Trans>}\n                        primary\n                        onClick={() => this._editOptions()}\n                      />\n                    </Line>\n                    <Divider />\n                  </React.Fragment>\n                )}\n                unsavedChanges={this.props.unsavedChanges}\n              />\n            )}\n          </I18n>\n        ),\n      },\n      'behavior-functions-list': {\n        type: 'primary',\n        title: t`Behavior functions`,\n        renderEditor: () =>\n          selectedEventsBasedBehavior ? (\n            <I18n>\n              {({ i18n }) => (\n                <EventsFunctionsList\n                  project={project}\n                  eventsFunctionsContainer={selectedEventsBasedBehavior.getEventsFunctions()}\n                  selectedEventsFunction={selectedEventsFunction}\n                  onSelectEventsFunction={selectedEventsFunction =>\n                    this._selectEventsFunction(\n                      selectedEventsFunction,\n                      selectedEventsBasedBehavior\n                    )\n                  }\n                  onDeleteEventsFunction={this._onDeleteEventsFunction}\n                  canRename={(eventsFunction: gdEventsFunction) => {\n                    return !isBehaviorLifecycleEventsFunction(\n                      eventsFunction.getName()\n                    );\n                  }}\n                  onRenameEventsFunction={(\n                    eventsFunction: gdEventsFunction,\n                    newName: string,\n                    done: boolean => void\n                  ) =>\n                    this._makeRenameBehaviorEventsFunction(i18n)(\n                      selectedEventsBasedBehavior,\n                      eventsFunction,\n                      newName,\n                      done\n                    )\n                  }\n                  onAddEventsFunction={this._onAddBehaviorEventsFunction}\n                  onEventsFunctionAdded={eventsFunction =>\n                    this._onBehaviorEventsFunctionAdded(\n                      selectedEventsBasedBehavior,\n                      eventsFunction\n                    )\n                  }\n                  renderHeader={() => (\n                    <React.Fragment>\n                      <Line justifyContent=\"center\">\n                        <FlatButton\n                          label={<Trans>Edit behavior properties</Trans>}\n                          primary\n                          onClick={() =>\n                            this._editBehavior(selectedEventsBasedBehavior)\n                          }\n                        />\n                      </Line>\n                      <Divider />\n                    </React.Fragment>\n                  )}\n                  unsavedChanges={this.props.unsavedChanges}\n                />\n              )}\n            </I18n>\n          ) : (\n            <Background>\n              <EmptyMessage>\n                <Trans>\n                  Select a behavior to display the functions inside this\n                  behavior.\n                </Trans>\n              </EmptyMessage>\n            </Background>\n          ),\n      },\n\n      'behaviors-list': {\n        type: 'secondary',\n        title: t`Behaviors`,\n        toolbarControls: [],\n        renderEditor: () => (\n          <I18n>\n            {({ i18n }) => (\n              <EventsBasedBehaviorsList\n                project={project}\n                eventsBasedBehaviorsList={eventsFunctionsExtension.getEventsBasedBehaviors()}\n                selectedEventsBasedBehavior={selectedEventsBasedBehavior}\n                onSelectEventsBasedBehavior={this._selectEventsBasedBehavior}\n                onDeleteEventsBasedBehavior={this._onDeleteEventsBasedBehavior}\n                onRenameEventsBasedBehavior={this._makeRenameEventsBasedBehavior(\n                  i18n\n                )}\n                onEventsBasedBehaviorRenamed={\n                  this._onEventsBasedBehaviorRenamed\n                }\n                onEditProperties={this._editBehavior}\n                unsavedChanges={this.props.unsavedChanges}\n              />\n            )}\n          </I18n>\n        ),\n      },\n    };\n\n    return (\n      <React.Fragment>\n        <ResponsiveWindowMeasurer>\n          {windowWidth =>\n            windowWidth === 'small' ? (\n              <EditorNavigator\n                ref={editorNavigator =>\n                  (this._editorNavigator = editorNavigator)\n                }\n                editors={editors}\n                initialEditorName={'choose-editor'}\n                transitions={{\n                  'behaviors-list': {\n                    previousEditor: 'choose-editor',\n                  },\n                  'behavior-functions-list': {\n                    previousEditor: 'behaviors-list',\n                  },\n                  'free-functions-list': {\n                    previousEditor: 'choose-editor',\n                  },\n                  'events-sheet': {\n                    nextIcon: <Tune />,\n                    nextLabel: <Trans>Parameters</Trans>,\n                    nextEditor: 'parameters',\n                    previousEditor: () => {\n                      if (selectedEventsBasedBehavior)\n                        return 'behavior-functions-list';\n                      return 'free-functions-list';\n                    },\n                  },\n                  parameters: {\n                    nextIcon: <Check />,\n                    nextLabel: <Trans>Validate these parameters</Trans>,\n                    nextEditor: 'events-sheet',\n                  },\n                }}\n                onEditorChanged={\n                  // It's important that this callback is the same across renders,\n                  // to avoid confusing EditorNavigator into thinking it's changed\n                  // and immediately calling it, which would trigger an infinite loop.\n                  // Search for \"callback-prevent-infinite-rerendering\" in the codebase.\n                  this._onEditorNavigatorEditorChanged\n                }\n              />\n            ) : (\n              <PreferencesContext.Consumer>\n                {({\n                  getDefaultEditorMosaicNode,\n                  setDefaultEditorMosaicNode,\n                }) => (\n                  <EditorMosaic\n                    ref={editorMosaic => (this._editorMosaic = editorMosaic)}\n                    editors={editors}\n                    onPersistNodes={node =>\n                      setDefaultEditorMosaicNode(\n                        'events-functions-extension-editor',\n                        node\n                      )\n                    }\n                    initialNodes={\n                      getDefaultEditorMosaicNode(\n                        'events-functions-extension-editor'\n                      ) || initialMosaicEditorNodes\n                    }\n                  />\n                )}\n              </PreferencesContext.Consumer>\n            )\n          }\n        </ResponsiveWindowMeasurer>\n        {editOptionsDialogOpen && (\n          <OptionsEditorDialog\n            eventsFunctionsExtension={eventsFunctionsExtension}\n            open\n            onClose={() => this._editOptions(false)}\n          />\n        )}\n        {behaviorMethodSelectorDialogOpen && selectedEventsBasedBehavior && (\n          <BehaviorMethodSelectorDialog\n            eventsBasedBehavior={selectedEventsBasedBehavior}\n            onCancel={() => this._onCloseBehaviorMethodSelectorDialog(null)}\n            onChoose={parameters =>\n              this._onCloseBehaviorMethodSelectorDialog(parameters)\n            }\n          />\n        )}\n        {extensionFunctionSelectorDialogOpen && eventsFunctionsExtension && (\n          <ExtensionFunctionSelectorDialog\n            eventsFunctionsExtension={eventsFunctionsExtension}\n            onCancel={() => this._onCloseExtensionFunctionSelectorDialog(null)}\n            onChoose={parameters =>\n              this._onCloseExtensionFunctionSelectorDialog(parameters)\n            }\n          />\n        )}\n        {editedEventsBasedBehavior && (\n          <EventsBasedBehaviorEditorDialog\n            project={project}\n            eventsFunctionsExtension={eventsFunctionsExtension}\n            eventsBasedBehavior={editedEventsBasedBehavior}\n            onApply={() => {\n              if (this.props.unsavedChanges)\n                this.props.unsavedChanges.triggerUnsavedChanges();\n              this._editBehavior(null);\n            }}\n            onRenameProperty={(oldName, newName) =>\n              this._onBehaviorPropertyRenamed(\n                editedEventsBasedBehavior,\n                oldName,\n                newName\n              )\n            }\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport ObjectGroupsListWithObjectGroupEditor from '../../ObjectGroupsList/ObjectGroupsListWithObjectGroupEditor';\nimport { Tabs, Tab } from '../../UI/Tabs';\nimport EventsFunctionParametersEditor from './EventsFunctionParametersEditor';\nimport EventsFunctionPropertiesEditor from './EventsFunctionPropertiesEditor';\nimport ScrollView from '../../UI/ScrollView';\nimport { Column, Line } from '../../UI/Grid';\nimport { showWarningBox } from '../../UI/Messages/MessageBox';\nimport Window from '../../Utils/Window';\nimport { type GroupWithContext } from '../../ObjectsList/EnumerateObjects';\nimport { type UnsavedChanges } from '../../MainFrame/UnsavedChangesContext';\n\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  eventsFunction: gdEventsFunction,\n  eventsBasedBehavior: ?gdEventsBasedBehavior,\n  onParametersOrGroupsUpdated: () => void,\n  helpPagePath?: string,\n  onConfigurationUpdated?: (whatChanged?: 'type') => void,\n  renderConfigurationHeader?: () => React.Node,\n  freezeParameters?: boolean,\n  freezeEventsFunctionType?: boolean,\n  onMoveFreeEventsParameter?: (\n    eventsFunction: gdEventsFunction,\n    oldIndex: number,\n    newIndex: number,\n    done: (boolean) => void\n  ) => void,\n  onMoveBehaviorEventsParameter?: (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    eventsFunction: gdEventsFunction,\n    oldIndex: number,\n    newIndex: number,\n    done: (boolean) => void\n  ) => void,\n  unsavedChanges?: ?UnsavedChanges,\n  getFunctionGroupNames?: () => string[],\n|};\n\ntype TabNames = 'config' | 'parameters' | 'groups';\n\ntype State = {|\n  currentTab: TabNames,\n|};\n\nexport default class EventsFunctionConfigurationEditor extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    currentTab: 'config',\n  };\n\n  _canObjectOrGroupUseNewName = (newName: string) => {\n    const { objectsContainer, globalObjectsContainer } = this.props;\n\n    if (\n      objectsContainer.hasObjectNamed(newName) ||\n      globalObjectsContainer.hasObjectNamed(newName) ||\n      objectsContainer.getObjectGroups().has(newName) ||\n      globalObjectsContainer.getObjectGroups().has(newName)\n    ) {\n      showWarningBox(\n        'Another object or group with this name already exists in this function.',\n        { delayToNextTick: true }\n      );\n      return false;\n    } else if (!gd.Project.validateName(newName)) {\n      showWarningBox(\n        'This name is invalid. Only use alphanumeric characters (0-9, a-z) and underscores. Digits are not allowed as the first character.',\n        { delayToNextTick: true }\n      );\n      return false;\n    }\n\n    return true;\n  };\n\n  _onDeleteGroup = (\n    groupWithContext: GroupWithContext,\n    done: boolean => void\n  ) => {\n    const { group } = groupWithContext;\n    const {\n      project,\n      eventsFunction,\n      globalObjectsContainer,\n      objectsContainer,\n    } = this.props;\n\n    const answer = Window.showConfirmDialog(\n      'Do you want to remove all references to this group in events (actions and conditions using the group)?'\n    );\n\n    gd.WholeProjectRefactorer.objectOrGroupRemovedInEventsFunction(\n      project,\n      eventsFunction,\n      globalObjectsContainer,\n      objectsContainer,\n      group.getName(),\n      /* isObjectGroup=*/ true,\n      !!answer\n    );\n    done(true);\n  };\n\n  _onRenameGroup = (\n    groupWithContext: GroupWithContext,\n    newName: string,\n    done: boolean => void\n  ) => {\n    const { group } = groupWithContext;\n    const {\n      project,\n      eventsFunction,\n      globalObjectsContainer,\n      objectsContainer,\n    } = this.props;\n\n    // newName is supposed to have been already validated\n\n    // Avoid triggering renaming refactoring if name has not really changed\n    if (group.getName() !== newName) {\n      gd.WholeProjectRefactorer.objectOrGroupRenamedInEventsFunction(\n        project,\n        eventsFunction,\n        globalObjectsContainer,\n        objectsContainer,\n        group.getName(),\n        newName,\n        /* isObjectGroup=*/ true\n      );\n    }\n\n    done(true);\n  };\n\n  _chooseTab = (currentTab: TabNames) =>\n    this.setState({\n      currentTab,\n    });\n\n  render() {\n    const {\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      eventsFunction,\n      eventsBasedBehavior,\n      freezeEventsFunctionType,\n      onConfigurationUpdated,\n      onParametersOrGroupsUpdated,\n      freezeParameters,\n      helpPagePath,\n      renderConfigurationHeader,\n      onMoveFreeEventsParameter,\n      onMoveBehaviorEventsParameter,\n      getFunctionGroupNames,\n    } = this.props;\n\n    return (\n      <Column expand noMargin useFullHeight>\n        <Tabs value={this.state.currentTab} onChange={this._chooseTab}>\n          <Tab\n            label={<Trans>Configuration</Trans>}\n            value={('config': TabNames)}\n          />\n          <Tab\n            label={<Trans>Parameters</Trans>}\n            value={('parameters': TabNames)}\n          />\n          <Tab\n            label={<Trans>Object groups</Trans>}\n            value={('groups': TabNames)}\n          />\n        </Tabs>\n        {this.state.currentTab === 'config' ? (\n          <ScrollView>\n            <Line>\n              <EventsFunctionPropertiesEditor\n                eventsFunction={eventsFunction}\n                eventsBasedBehavior={eventsBasedBehavior}\n                helpPagePath={helpPagePath}\n                onConfigurationUpdated={onConfigurationUpdated}\n                renderConfigurationHeader={renderConfigurationHeader}\n                freezeEventsFunctionType={freezeEventsFunctionType}\n                getFunctionGroupNames={getFunctionGroupNames}\n              />\n            </Line>\n          </ScrollView>\n        ) : null}\n        {this.state.currentTab === 'parameters' ? (\n          <ScrollView>\n            <Line>\n              <EventsFunctionParametersEditor\n                project={project}\n                eventsFunction={eventsFunction}\n                eventsBasedBehavior={eventsBasedBehavior}\n                onParametersUpdated={onParametersOrGroupsUpdated}\n                helpPagePath={helpPagePath}\n                freezeParameters={freezeParameters}\n                onMoveFreeEventsParameter={onMoveFreeEventsParameter}\n                onMoveBehaviorEventsParameter={onMoveBehaviorEventsParameter}\n                key={eventsFunction ? eventsFunction.ptr : null}\n              />\n            </Line>\n          </ScrollView>\n        ) : null}\n        {this.state.currentTab === 'groups' ? (\n          <ObjectGroupsListWithObjectGroupEditor\n            project={project}\n            globalObjectsContainer={globalObjectsContainer}\n            objectsContainer={objectsContainer}\n            globalObjectGroups={globalObjectsContainer.getObjectGroups()}\n            objectGroups={eventsFunction.getObjectGroups()}\n            canRenameGroup={this._canObjectOrGroupUseNewName}\n            onRenameGroup={this._onRenameGroup}\n            onDeleteGroup={this._onDeleteGroup}\n            onGroupsUpdated={onParametersOrGroupsUpdated}\n            canSetAsGlobalGroup={false}\n            unsavedChanges={this.props.unsavedChanges}\n          />\n        ) : null}\n      </Column>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ObjectGroupsList from '.';\nimport ObjectGroupEditorDialog from '../ObjectGroupEditor/ObjectGroupEditorDialog';\nimport { type GroupWithContext } from '../ObjectsList/EnumerateObjects';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\n\ntype Props = {|\n  project: gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  globalObjectGroups: gdObjectGroupsContainer,\n  objectGroups: gdObjectGroupsContainer,\n  canRenameGroup: (newName: string) => boolean,\n  onDeleteGroup: (\n    groupWithScope: GroupWithContext,\n    done: (boolean) => void\n  ) => void,\n  onRenameGroup: (\n    groupWithScope: GroupWithContext,\n    newName: string,\n    done: (boolean) => void\n  ) => void,\n  onGroupsUpdated?: () => void,\n  canSetAsGlobalGroup?: boolean,\n  unsavedChanges?: ?UnsavedChanges,\n|};\n\ntype State = {|\n  editedGroup: ?gdObjectGroup,\n|};\n\n/**\n * Helper showing the list of groups and embedding the editor to edit a group.\n */\nexport default class ObjectGroupsListWithObjectGroupEditor extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    editedGroup: null,\n  };\n\n  editGroup = (editedGroup: ?gdObjectGroup) => this.setState({ editedGroup });\n\n  render() {\n    const {\n      project,\n      objectsContainer,\n      globalObjectsContainer,\n      objectGroups,\n      globalObjectGroups,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <ObjectGroupsList\n          globalObjectGroups={globalObjectGroups}\n          objectGroups={objectGroups}\n          onEditGroup={this.editGroup}\n          onDeleteGroup={this.props.onDeleteGroup}\n          onRenameGroup={this.props.onRenameGroup}\n          canRenameGroup={this.props.canRenameGroup}\n          onGroupAdded={this.props.onGroupsUpdated}\n          onGroupRemoved={this.props.onGroupsUpdated}\n          onGroupRenamed={this.props.onGroupsUpdated}\n          canSetAsGlobalGroup={this.props.canSetAsGlobalGroup}\n          unsavedChanges={this.props.unsavedChanges}\n        />\n        {this.state.editedGroup && (\n          <ObjectGroupEditorDialog\n            project={project}\n            key={globalObjectsContainer.ptr + ';' + objectsContainer.ptr}\n            group={this.state.editedGroup}\n            globalObjectsContainer={globalObjectsContainer}\n            objectsContainer={objectsContainer}\n            onCancel={() => this.editGroup(null)}\n            onApply={() => {\n              if (this.props.onGroupsUpdated) this.props.onGroupsUpdated();\n              this.editGroup(null);\n            }}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { List, ListItem } from '../UI/List';\nimport ObjectSelector from '../ObjectsList/ObjectSelector';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport { Column } from '../UI/Grid';\nimport { Paper } from '@material-ui/core';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  objectSelector: { position: 'sticky', bottom: 0 },\n};\n\ntype Props = {|\n  project: ?gdProject,\n  group: gdObjectGroup,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  onSizeUpdated?: () => void,\n|};\n\nconst ObjectGroupEditor = ({\n  project,\n  group,\n  globalObjectsContainer,\n  objectsContainer,\n  onSizeUpdated,\n}: Props) => {\n  const [newObjectName, setNewObjectName] = React.useState<string>('');\n\n  const removeObject = (objectName: string) => {\n    group.removeObject(objectName);\n\n    if (onSizeUpdated) onSizeUpdated();\n  };\n\n  const addObject = (objectName: string) => {\n    group.addObject(objectName);\n    setNewObjectName('');\n    if (onSizeUpdated) onSizeUpdated();\n  };\n\n  const renderExplanation = () => {\n    let type = undefined;\n    group\n      .getAllObjectsNames()\n      .toJSArray()\n      .forEach(objectName => {\n        const objectType = gd.getTypeOfObject(\n          globalObjectsContainer,\n          objectsContainer,\n          objectName,\n          false\n        );\n        if (type === undefined || objectType === type) type = objectType;\n        else type = '';\n      });\n\n    let message = '';\n    if (type === undefined) {\n      message = 'This group is empty';\n    } else if (type === '') {\n      message =\n        \"This group contains objects of different kinds. You'll only be able to use actions and conditions common to all objects with this group.\";\n    } else {\n      message = `This group contains objects of the same kind (${type}). You can use actions and conditions related to this kind of objects in events with this group.`;\n    }\n\n    return <EmptyMessage>{message}</EmptyMessage>;\n  };\n\n  return (\n    <Column>\n      <div>\n        {renderExplanation()}\n        <List>\n          {group\n            .getAllObjectsNames()\n            .toJSArray()\n            .map(objectName => {\n              return (\n                <ListItem\n                  key={objectName}\n                  primaryText={objectName}\n                  displayRemoveButton\n                  onRemove={() => removeObject(objectName)}\n                />\n              );\n            })}\n        </List>\n      </div>\n      <Paper style={styles.objectSelector}>\n        <Column>\n          <ObjectSelector\n            project={project}\n            globalObjectsContainer={globalObjectsContainer}\n            objectsContainer={objectsContainer}\n            value={newObjectName}\n            onChange={setNewObjectName}\n            onChoose={addObject}\n            openOnFocus\n            noGroups\n            hintText={t`Choose an object to add to the group`}\n            fullWidth\n          />\n        </Column>\n      </Paper>\n    </Column>\n  );\n};\n\nexport default ObjectGroupEditor;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { AutoSizer } from 'react-virtualized';\nimport SortableVirtualizedItemList from '../UI/SortableVirtualizedItemList';\nimport SearchBar from '../UI/SearchBar';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport Background from '../UI/Background';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {\n  enumerateEventsFunctions,\n  filterEventFunctionsList,\n} from './EnumerateEventsFunctions';\nimport Clipboard, { SafeExtractor } from '../Utils/Clipboard';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport Window from '../Utils/Window';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\nconst EVENTS_FUNCTION_CLIPBOARD_KIND = 'Events Function';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  listContainer: {\n    flex: 1,\n  },\n};\n\nexport type EventsFunctionCreationParameters = {|\n  functionType: 0 | 1 | 2,\n  name: ?string,\n|};\n\nconst renderEventsFunctionLabel = (eventsFunction: gdEventsFunction) =>\n  eventsFunction.isPrivate() ? (\n    <>\n      <Tooltip title=\"This function won't be visible in the events editor\">\n        <VisibilityOffIcon\n          fontSize=\"small\"\n          style={{ marginRight: 5, verticalAlign: 'bottom' }}\n        />\n      </Tooltip>\n      <span title={eventsFunction.getName()}>{eventsFunction.getName()}</span>\n    </>\n  ) : (\n    eventsFunction.getName()\n  );\n\nconst getEventsFunctionName = (eventsFunction: gdEventsFunction) =>\n  eventsFunction.getName();\n\ntype State = {|\n  renamedEventsFunction: ?gdEventsFunction,\n  searchText: string,\n|};\n\ntype Props = {|\n  project: gdProject,\n  eventsFunctionsContainer: gdEventsFunctionsContainer,\n  selectedEventsFunction: ?gdEventsFunction,\n  onSelectEventsFunction: (eventsFunction: ?gdEventsFunction) => void,\n  onDeleteEventsFunction: (\n    eventsFunction: gdEventsFunction,\n    cb: (boolean) => void\n  ) => void,\n  canRename: (eventsFunction: gdEventsFunction) => boolean,\n  onRenameEventsFunction: (\n    eventsFunction: gdEventsFunction,\n    newName: string,\n    cb: (boolean) => void\n  ) => void,\n  onAddEventsFunction: (\n    (parameters: ?EventsFunctionCreationParameters) => void\n  ) => void,\n  onEventsFunctionAdded: (eventsFunction: gdEventsFunction) => void,\n  renderHeader?: () => React.Node,\n  unsavedChanges?: ?UnsavedChanges,\n|};\n\nexport default class EventsFunctionsList extends React.Component<Props, State> {\n  static defaultProps = {\n    onDeleteEventsFunction: (\n      eventsFunction: gdEventsFunction,\n      cb: boolean => void\n    ) => cb(true),\n    onRenameEventsFunction: (\n      eventsFunction: gdEventsFunction,\n      newName: string,\n      cb: boolean => void\n    ) => cb(true),\n  };\n\n  sortableList: any;\n  state: State = {\n    renamedEventsFunction: null,\n    searchText: '',\n  };\n\n  _togglePrivate = (eventsFunction: gdEventsFunction) => {\n    eventsFunction.setPrivate(!eventsFunction.isPrivate());\n    this.forceUpdate();\n  };\n\n  _deleteEventsFunction = (\n    eventsFunction: gdEventsFunction,\n    { askForConfirmation }: {| askForConfirmation: boolean |}\n  ) => {\n    const { eventsFunctionsContainer } = this.props;\n\n    if (askForConfirmation) {\n      const answer = Window.showConfirmDialog(\n        \"Are you sure you want to remove this function? This can't be undone.\"\n      );\n      if (!answer) return;\n    }\n\n    this.props.onDeleteEventsFunction(eventsFunction, doRemove => {\n      if (!doRemove) return;\n\n      eventsFunctionsContainer.removeEventsFunction(eventsFunction.getName());\n      this._onEventsFunctionModified();\n    });\n  };\n\n  _editName = (eventsFunction: ?gdEventsFunction) => {\n    this.setState(\n      {\n        renamedEventsFunction: eventsFunction,\n      },\n      () => {\n        if (this.sortableList) this.sortableList.forceUpdateGrid();\n      }\n    );\n  };\n\n  _getFunctionThumbnail = (eventsFunction: gdEventsFunction) => {\n    switch (eventsFunction.getFunctionType()) {\n      default:\n        return 'res/functions/function.svg';\n      case gd.EventsFunction.Action:\n        switch (eventsFunction.getName()) {\n          default:\n            return 'res/functions/action.svg';\n\n          case 'onSceneUnloading':\n          case 'onDestroy':\n            return 'res/functions/destroy.svg';\n\n          case 'onSceneResumed':\n          case 'onActivate':\n            return 'res/functions/activate.svg';\n\n          case 'onScenePaused':\n          case 'onDeActivate':\n            return 'res/functions/deactivate.svg';\n\n          case 'onScenePreEvents':\n          case 'onScenePostEvents':\n          case 'doStepPreEvents':\n          case 'doStepPostEvents':\n            return 'res/functions/step.svg';\n\n          case 'onSceneLoaded':\n          case 'onFirstSceneLoaded':\n          case 'onCreated':\n            return 'res/functions/create.svg';\n        }\n      case gd.EventsFunction.Condition:\n        return 'res/functions/condition.svg';\n      case gd.EventsFunction.Expression:\n        return 'res/functions/expression.svg';\n      case gd.EventsFunction.StringExpression:\n        return 'res/functions/expression.svg';\n    }\n  };\n  _rename = (eventsFunction: gdEventsFunction, newName: string) => {\n    const { eventsFunctionsContainer } = this.props;\n    this.setState({\n      renamedEventsFunction: null,\n    });\n\n    if (eventsFunction.getName() === newName) return;\n\n    if (eventsFunctionsContainer.hasEventsFunctionNamed(newName)) {\n      showWarningBox('Another function with this name already exists.', {\n        delayToNextTick: true,\n      });\n      return;\n    }\n\n    this.props.onRenameEventsFunction(eventsFunction, newName, doRename => {\n      if (!doRename) return;\n      eventsFunction.setName(newName);\n      this._onEventsFunctionModified();\n    });\n  };\n\n  _moveSelectionTo = (destinationEventsFunction: gdEventsFunction) => {\n    const { eventsFunctionsContainer, selectedEventsFunction } = this.props;\n    if (!selectedEventsFunction) return;\n\n    eventsFunctionsContainer.moveEventsFunction(\n      eventsFunctionsContainer.getEventsFunctionPosition(\n        selectedEventsFunction\n      ),\n      eventsFunctionsContainer.getEventsFunctionPosition(\n        destinationEventsFunction\n      )\n    );\n\n    this.forceUpdateList();\n  };\n\n  forceUpdateList = () => {\n    this._onEventsFunctionModified();\n    if (this.sortableList) this.sortableList.forceUpdateGrid();\n  };\n\n  _copyEventsFunction = (eventsFunction: gdEventsFunction) => {\n    Clipboard.set(EVENTS_FUNCTION_CLIPBOARD_KIND, {\n      eventsFunction: serializeToJSObject(eventsFunction),\n      name: eventsFunction.getName(),\n    });\n  };\n\n  _cutEventsFunction = (eventsFunction: gdEventsFunction) => {\n    this._copyEventsFunction(eventsFunction);\n    this._deleteEventsFunction(eventsFunction, { askForConfirmation: false });\n  };\n\n  _pasteEventsFunction = (index: number) => {\n    if (!Clipboard.has(EVENTS_FUNCTION_CLIPBOARD_KIND)) return;\n\n    const clipboardContent = Clipboard.get(EVENTS_FUNCTION_CLIPBOARD_KIND);\n    const copiedEventsFunction = SafeExtractor.extractObjectProperty(\n      clipboardContent,\n      'eventsFunction'\n    );\n    const name = SafeExtractor.extractStringProperty(clipboardContent, 'name');\n    if (!name || !copiedEventsFunction) return;\n\n    const { project, eventsFunctionsContainer } = this.props;\n\n    const newName = newNameGenerator(name, name =>\n      eventsFunctionsContainer.hasEventsFunctionNamed(name)\n    );\n\n    const newEventsFunction = eventsFunctionsContainer.insertNewEventsFunction(\n      newName,\n      index\n    );\n\n    unserializeFromJSObject(\n      newEventsFunction,\n      copiedEventsFunction,\n      'unserializeFrom',\n      project\n    );\n    newEventsFunction.setName(newName);\n    this.props.onEventsFunctionAdded(newEventsFunction);\n\n    this._onEventsFunctionModified();\n  };\n\n  _onEventsFunctionModified() {\n    if (this.props.unsavedChanges)\n      this.props.unsavedChanges.triggerUnsavedChanges();\n    this.forceUpdate();\n  }\n\n  _renderEventsFunctionMenuTemplate = (i18n: I18nType) => (\n    eventsFunction: gdEventsFunction,\n    index: number\n  ) => {\n    return [\n      {\n        label: i18n._(t`Rename`),\n        click: () => this._editName(eventsFunction),\n        enabled: this.props.canRename(eventsFunction),\n      },\n      {\n        label: eventsFunction.isPrivate()\n          ? i18n._(t`Make public`)\n          : i18n._(t`Make private`),\n        enabled: this.props.canRename(eventsFunction),\n        click: () => this._togglePrivate(eventsFunction),\n      },\n      {\n        label: i18n._(t`Delete`),\n        click: () =>\n          this._deleteEventsFunction(eventsFunction, {\n            askForConfirmation: true,\n          }),\n      },\n      {\n        type: 'separator',\n      },\n      {\n        label: i18n._(t`Copy`),\n        click: () => this._copyEventsFunction(eventsFunction),\n      },\n      {\n        label: i18n._(t`Cut`),\n        click: () => this._cutEventsFunction(eventsFunction),\n      },\n      {\n        label: i18n._(t`Paste`),\n        enabled: Clipboard.has(EVENTS_FUNCTION_CLIPBOARD_KIND),\n        click: () => this._pasteEventsFunction(index),\n      },\n    ];\n  };\n\n  _addNewEventsFunction = () => {\n    const { eventsFunctionsContainer } = this.props;\n\n    this.props.onAddEventsFunction(\n      (parameters: ?EventsFunctionCreationParameters) => {\n        if (!parameters) {\n          return;\n        }\n\n        const eventsFunctionName =\n          parameters.name ||\n          newNameGenerator('Function', name =>\n            eventsFunctionsContainer.hasEventsFunctionNamed(name)\n          );\n\n        const eventsFunction = eventsFunctionsContainer.insertNewEventsFunction(\n          eventsFunctionName,\n          eventsFunctionsContainer.getEventsFunctionsCount()\n        );\n        eventsFunction.setFunctionType(parameters.functionType);\n        this.props.onEventsFunctionAdded(eventsFunction);\n        this._onEventsFunctionModified();\n      }\n    );\n  };\n\n  render() {\n    const {\n      project,\n      eventsFunctionsContainer,\n      selectedEventsFunction,\n      onSelectEventsFunction,\n      renderHeader,\n    } = this.props;\n    const { searchText } = this.state;\n\n    const list = filterEventFunctionsList(\n      enumerateEventsFunctions(eventsFunctionsContainer),\n      searchText\n    );\n\n    // Force List component to be mounted again if project or objectsContainer\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const listKey = project.ptr + ';' + eventsFunctionsContainer.ptr;\n\n    return (\n      <Background>\n        {renderHeader ? renderHeader() : null}\n        <div style={styles.listContainer}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <I18n>\n                {({ i18n }) => (\n                  <SortableVirtualizedItemList\n                    key={listKey}\n                    ref={sortableList => (this.sortableList = sortableList)}\n                    fullList={list}\n                    width={width}\n                    height={height}\n                    onAddNewItem={this._addNewEventsFunction}\n                    addNewItemLabel={<Trans>Add a new function</Trans>}\n                    renderItemLabel={renderEventsFunctionLabel}\n                    getItemName={getEventsFunctionName}\n                    getItemThumbnail={this._getFunctionThumbnail}\n                    selectedItems={\n                      selectedEventsFunction ? [selectedEventsFunction] : []\n                    }\n                    onItemSelected={onSelectEventsFunction}\n                    renamedItem={this.state.renamedEventsFunction}\n                    onRename={this._rename}\n                    onMoveSelectionToItem={this._moveSelectionTo}\n                    buildMenuTemplate={this._renderEventsFunctionMenuTemplate(\n                      i18n\n                    )}\n                    reactDndType=\"GD_EVENTS_FUNCTION\"\n                  />\n                )}\n              </I18n>\n            )}\n          </AutoSizer>\n        </div>\n        <SearchBar\n          value={searchText}\n          onRequestSearch={() => {}}\n          onChange={text =>\n            this.setState({\n              searchText: text,\n            })\n          }\n        />\n      </Background>\n    );\n  }\n}\n","//@flow\nimport { mapFor } from '../Utils/MapFor';\n\nexport const enumerateEventsFunctions = (\n  eventsFunctionsContainer: gdEventsFunctionsContainer\n): Array<gdEventsFunction> =>\n  mapFor(0, eventsFunctionsContainer.getEventsFunctionsCount(), i =>\n    eventsFunctionsContainer.getEventsFunctionAt(i)\n  );\n\nexport const filterEventFunctionsList = (\n  list: Array<gdEventsFunction>,\n  searchText: string\n): Array<gdEventsFunction> => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list.filter(\n    (item: any) =>\n      item\n        .getName()\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport EventsBasedBehaviorEditor from './index';\nimport HelpButton from '../UI/HelpButton';\n\ntype Props = {|\n  onApply: () => void,\n  project: gdProject,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  onRenameProperty: (oldName: string, newName: string) => void,\n|};\n\nexport default class EventsBasedBehaviorEditorDialog extends React.Component<\n  Props,\n  {||}\n> {\n  render() {\n    const {\n      onApply,\n      eventsBasedBehavior,\n      eventsFunctionsExtension,\n      project,\n    } = this.props;\n\n    return (\n      <Dialog\n        onApply={onApply}\n        noMargin\n        secondaryActions={[\n          <HelpButton\n            key=\"help\"\n            helpPagePath=\"/behaviors/events-based-behaviors\"\n          />,\n        ]}\n        actions={[\n          <FlatButton\n            label={<Trans>Apply</Trans>}\n            primary\n            keyboardFocused\n            onClick={onApply}\n            key={'Apply'}\n          />,\n        ]}\n        cannotBeDismissed={true}\n        open\n        onRequestClose={onApply}\n        title={<Trans>Edit the behavior</Trans>}\n      >\n        <EventsBasedBehaviorEditor\n          project={project}\n          eventsFunctionsExtension={eventsFunctionsExtension}\n          eventsBasedBehavior={eventsBasedBehavior}\n          onTabChanged={\n            () =>\n              this.forceUpdate() /*Force update to ensure dialog is properly positioned*/\n          }\n          onPropertiesUpdated={\n            () =>\n              this.forceUpdate() /*Force update to ensure dialog is properly positioned*/\n          }\n          onRenameProperty={this.props.onRenameProperty}\n        />\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport TextField from '../UI/TextField';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport ObjectTypeSelector from '../ObjectTypeSelector';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport DismissableAlertMessage from '../UI/DismissableAlertMessage';\nimport AlertMessage from '../UI/AlertMessage';\nimport EventsBasedBehaviorPropertiesEditor from './EventsBasedBehaviorPropertiesEditor';\nimport { ColumnStackLayout } from '../UI/Layout';\nconst gd: libGDevelop = global.gd;\n\ntype TabName = 'configuration' | 'properties';\n\ntype Props = {|\n  project: gdProject,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  onPropertiesUpdated: () => void,\n  onRenameProperty: (oldName: string, newName: string) => void,\n  onTabChanged: () => void,\n|};\n\ntype State = {|\n  currentTab: TabName,\n|};\n\nexport default class EventsBasedBehaviorEditor extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    currentTab: 'configuration',\n  };\n\n  // An array containing all the object types that are using the behavior\n  _allObjectTypes: Array<string> = gd.WholeProjectRefactorer.getAllObjectTypesUsingEventsBasedBehavior(\n    this.props.project,\n    this.props.eventsFunctionsExtension,\n    this.props.eventsBasedBehavior\n  )\n    .toNewVectorString()\n    .toJSArray();\n\n  _changeTab = (newTab: TabName) =>\n    this.setState(\n      {\n        currentTab: newTab,\n      },\n      () => this.props.onTabChanged()\n    );\n\n  render() {\n    const { currentTab } = this.state;\n    const { eventsBasedBehavior, project } = this.props;\n\n    return (\n      <React.Fragment>\n        <Tabs value={currentTab} onChange={this._changeTab}>\n          <Tab label={<Trans>Configuration</Trans>} value=\"configuration\" />\n          <Tab label={<Trans>Properties</Trans>} value=\"properties\" />\n        </Tabs>\n        {currentTab === 'configuration' && (\n          <ColumnStackLayout expand>\n            <DismissableAlertMessage\n              identifier=\"events-based-behavior-explanation\"\n              kind=\"info\"\n            >\n              <Trans>\n                This is the configuration of your behavior. Make sure to choose\n                a proper internal name as it's hard to change it later. Enter a\n                description explaining what the behavior is doing to the object.\n              </Trans>\n            </DismissableAlertMessage>\n            <TextField\n              floatingLabelText={<Trans>Internal Name</Trans>}\n              value={eventsBasedBehavior.getName()}\n              disabled\n              fullWidth\n            />\n            <SemiControlledTextField\n              commitOnBlur\n              floatingLabelText={<Trans>Name displayed in editor</Trans>}\n              value={eventsBasedBehavior.getFullName()}\n              onChange={text => {\n                eventsBasedBehavior.setFullName(text);\n                this.forceUpdate();\n              }}\n              fullWidth\n            />\n            <SemiControlledTextField\n              commitOnBlur\n              floatingLabelText={<Trans>Description</Trans>}\n              floatingLabelFixed\n              hintText={t`The description of the behavior should explain what the behavior is doing to the object, and, briefly, how to use it.`}\n              value={eventsBasedBehavior.getDescription()}\n              onChange={text => {\n                eventsBasedBehavior.setDescription(text);\n                this.forceUpdate();\n              }}\n              multiline\n              fullWidth\n              rows={3}\n            />\n            <ObjectTypeSelector\n              floatingLabelText={\n                <Trans>Object on which this behavior can be used</Trans>\n              }\n              project={project}\n              value={eventsBasedBehavior.getObjectType()}\n              onChange={(objectType: string) => {\n                eventsBasedBehavior.setObjectType(objectType);\n                this.forceUpdate();\n              }}\n              allowedObjectTypes={\n                this._allObjectTypes.length === 0\n                  ? undefined /* Allow anything as the behavior is not used */\n                  : this._allObjectTypes.length === 1\n                  ? [\n                      '',\n                      this._allObjectTypes[0],\n                    ] /* Allow only the type of the objects using the behavior */\n                  : [\n                      '',\n                    ] /* More than one type of object are using the behavior. Only \"any object\" can be used on this behavior */\n              }\n            />\n            {this._allObjectTypes.length > 1 && (\n              <AlertMessage kind=\"info\">\n                <Trans>\n                  This behavior is being used by multiple types of objects.\n                  Thus, you can't restrict its usage to any particular object\n                  type. All the object types using this behavior are listed\n                  here:\n                  {this._allObjectTypes.join(', ')}\n                </Trans>\n              </AlertMessage>\n            )}\n            {eventsBasedBehavior\n              .getEventsFunctions()\n              .getEventsFunctionsCount() === 0 && (\n              <DismissableAlertMessage\n                identifier=\"empty-events-based-behavior-explanation\"\n                kind=\"info\"\n              >\n                <Trans>\n                  Once you're done, close this dialog and start adding some\n                  functions to the behavior. Then, test the behavior by adding\n                  it to an object in a scene.\n                </Trans>\n              </DismissableAlertMessage>\n            )}\n          </ColumnStackLayout>\n        )}\n        {currentTab === 'properties' && (\n          <EventsBasedBehaviorPropertiesEditor\n            project={project}\n            eventsBasedBehavior={eventsBasedBehavior}\n            onPropertiesUpdated={this.props.onPropertiesUpdated}\n            onRenameProperty={this.props.onRenameProperty}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport { Column, Line } from '../UI/Grid';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport { mapVector } from '../Utils/MapFor';\nimport RaisedButton from '../UI/RaisedButton';\nimport IconButton from '../UI/IconButton';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport ElementWithMenu from '../UI/Menu/ElementWithMenu';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport MiniToolbar from '../UI/MiniToolbar';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport InlineCheckbox from '../UI/InlineCheckbox';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Add from '@material-ui/icons/Add';\nimport { ResponsiveLineStackLayout, ColumnStackLayout } from '../UI/Layout';\nimport StringArrayEditor from '../StringArrayEditor';\nimport ColorField from '../UI/ColorField';\nimport BehaviorTypeSelector from '../BehaviorTypeSelector';\nimport SemiControlledAutoComplete from '../UI/SemiControlledAutoComplete';\n\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  onPropertiesUpdated: () => void,\n  onRenameProperty: (oldName: string, newName: string) => void,\n|};\n\nconst styles = {\n  propertiesContainer: {\n    flex: 1,\n  },\n};\n\nconst validatePropertyName = (\n  i18n: I18nType,\n  properties: gdNamedPropertyDescriptorsList,\n  newName: string\n) => {\n  if (!newName) {\n    showWarningBox(i18n._(t`The name of a property cannot be empty.`), {\n      delayToNextTick: true,\n    });\n    return false;\n  }\n  if (newName === 'name' || newName === 'type') {\n    showWarningBox(\n      i18n._(\n        t`The name of a property cannot be \"name\" or \"type\", as they are used by GDevelop internally.`\n      ),\n      { delayToNextTick: true }\n    );\n    return false;\n  }\n  if (properties.has(newName)) {\n    showWarningBox(\n      i18n._(\n        t`This name is already used by another property. Choose a unique name for each property.`\n      ),\n      { delayToNextTick: true }\n    );\n    return false;\n  }\n  if (!gd.Project.validateName(newName)) {\n    showWarningBox(\n      i18n._(\n        t`This name is invalid. Only use alphanumeric characters (0-9, a-z) and underscores. Digits are not allowed as the first character.`\n      ),\n      { delayToNextTick: true }\n    );\n    return false;\n  }\n\n  return true;\n};\n\nconst getExtraInfoArray = (property: gdNamedPropertyDescriptor) => {\n  const extraInfoVector = property.getExtraInfo();\n  return extraInfoVector.toJSArray();\n};\n\nexport default class EventsBasedBehaviorPropertiesEditor extends React.Component<\n  Props,\n  {||}\n> {\n  _addProperty = () => {\n    const { eventsBasedBehavior } = this.props;\n    const properties = eventsBasedBehavior.getPropertyDescriptors();\n\n    const newName = newNameGenerator('Property', name => properties.has(name));\n    const property = properties.insertNew(newName, properties.getCount());\n    property.setType('Number');\n    this.forceUpdate();\n    this.props.onPropertiesUpdated();\n  };\n\n  _removeProperty = (name: string) => {\n    const { eventsBasedBehavior } = this.props;\n    const properties = eventsBasedBehavior.getPropertyDescriptors();\n\n    properties.remove(name);\n    this.forceUpdate();\n    this.props.onPropertiesUpdated();\n  };\n\n  _moveProperty = (oldIndex: number, newIndex: number) => {\n    const { eventsBasedBehavior } = this.props;\n    const properties = eventsBasedBehavior.getPropertyDescriptors();\n\n    properties.move(oldIndex, newIndex);\n    this.forceUpdate();\n    this.props.onPropertiesUpdated();\n  };\n\n  _setChoiceExtraInfo = (property: gdNamedPropertyDescriptor) => {\n    return (newExtraInfo: Array<string>) => {\n      const defaultValueIndex = getExtraInfoArray(property).indexOf(\n        property.getValue()\n      );\n      const vectorString = new gd.VectorString();\n      newExtraInfo.forEach(item => vectorString.push_back(item));\n      property.setExtraInfo(vectorString);\n      vectorString.delete();\n      property.setValue(newExtraInfo[defaultValueIndex] || '');\n      this.forceUpdate();\n    };\n  };\n\n  _getPropertyGroupNames = (): Array<string> => {\n    const { eventsBasedBehavior } = this.props;\n    const properties = eventsBasedBehavior.getPropertyDescriptors();\n\n    const groupNames = new Set<string>();\n    for (let i = 0; i < properties.size(); i++) {\n      const property = properties.at(i);\n      const group = property.getGroup() || '';\n      groupNames.add(group);\n    }\n    return [...groupNames].sort((a, b) => a.localeCompare(b));\n  };\n\n  render() {\n    const { eventsBasedBehavior } = this.props;\n\n    const properties = eventsBasedBehavior.getPropertyDescriptors();\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Column noMargin>\n            <Line noMargin>\n              <div style={styles.propertiesContainer}>\n                {mapVector(\n                  properties,\n                  (property: gdNamedPropertyDescriptor, i: number) => (\n                    <React.Fragment key={i}>\n                      <MiniToolbar>\n                        <Column expand noMargin>\n                          <SemiControlledTextField\n                            margin=\"none\"\n                            commitOnBlur\n                            hintText={t`Enter the property name`}\n                            value={property.getName()}\n                            onChange={newName => {\n                              if (newName === property.getName()) return;\n                              if (\n                                !validatePropertyName(i18n, properties, newName)\n                              )\n                                return;\n\n                              this.props.onRenameProperty(\n                                property.getName(),\n                                newName\n                              );\n\n                              property.setName(newName);\n                              this.forceUpdate();\n                              this.props.onPropertiesUpdated();\n                            }}\n                            fullWidth\n                          />\n                        </Column>\n                        <InlineCheckbox\n                          label={\n                            property.isHidden() ? (\n                              <Trans>Hidden</Trans>\n                            ) : (\n                              <Trans>Visible in editor</Trans>\n                            )\n                          }\n                          checked={!property.isHidden()}\n                          onCheck={(e, checked) => {\n                            property.setHidden(!checked);\n                            this.forceUpdate();\n                            this.props.onPropertiesUpdated();\n                          }}\n                          checkedIcon={<Visibility />}\n                          uncheckedIcon={<VisibilityOff />}\n                        />\n                        <ElementWithMenu\n                          element={\n                            <IconButton>\n                              <MoreVert />\n                            </IconButton>\n                          }\n                          buildMenuTemplate={(i18n: I18nType) => [\n                            {\n                              label: i18n._(t`Delete`),\n                              click: () =>\n                                this._removeProperty(property.getName()),\n                            },\n                            { type: 'separator' },\n                            {\n                              label: i18n._(t`Move up`),\n                              click: () => this._moveProperty(i, i - 1),\n                              enabled: i - 1 >= 0,\n                            },\n                            {\n                              label: i18n._(t`Move down`),\n                              click: () => this._moveProperty(i, i + 1),\n                              enabled: i + 1 < properties.getCount(),\n                            },\n                          ]}\n                        />\n                      </MiniToolbar>\n                      <Line>\n                        <ColumnStackLayout expand>\n                          <ResponsiveLineStackLayout noMargin>\n                            <SelectField\n                              floatingLabelText={<Trans>Type</Trans>}\n                              value={property.getType()}\n                              onChange={(e, i, value: string) => {\n                                property.setType(value);\n                                this.forceUpdate();\n                                this.props.onPropertiesUpdated();\n                              }}\n                              fullWidth\n                            >\n                              <SelectOption\n                                value=\"Number\"\n                                primaryText={t`Number`}\n                              />\n                              <SelectOption\n                                value=\"String\"\n                                primaryText={t`String`}\n                              />\n                              <SelectOption\n                                value=\"Boolean\"\n                                primaryText={t`Boolean (checkbox)`}\n                              />\n                              <SelectOption\n                                value=\"Choice\"\n                                primaryText={t`String from a list of options (text)`}\n                              />\n                              <SelectOption\n                                value=\"Color\"\n                                primaryText={t`Color (text)`}\n                              />\n                              <SelectOption\n                                value=\"Behavior\"\n                                primaryText={t`Required behavior`}\n                              />\n                            </SelectField>\n                            {(property.getType() === 'String' ||\n                              property.getType() === 'Number') && (\n                              <SemiControlledTextField\n                                commitOnBlur\n                                floatingLabelText={<Trans>Default value</Trans>}\n                                hintText={\n                                  property.getType() === 'Number'\n                                    ? '123'\n                                    : 'ABC'\n                                }\n                                value={property.getValue()}\n                                onChange={newValue => {\n                                  property.setValue(newValue);\n                                  this.forceUpdate();\n                                  this.props.onPropertiesUpdated();\n                                }}\n                                fullWidth\n                              />\n                            )}\n                            {property.getType() === 'Boolean' && (\n                              <SelectField\n                                floatingLabelText={<Trans>Default value</Trans>}\n                                value={\n                                  property.getValue() === 'true'\n                                    ? 'true'\n                                    : 'false'\n                                }\n                                onChange={(e, i, value) => {\n                                  property.setValue(value);\n                                  this.forceUpdate();\n                                  this.props.onPropertiesUpdated();\n                                }}\n                                fullWidth\n                              >\n                                <SelectOption\n                                  value=\"true\"\n                                  primaryText={t`True (checked)`}\n                                />\n                                <SelectOption\n                                  value=\"false\"\n                                  primaryText={t`False (not checked)`}\n                                />\n                              </SelectField>\n                            )}\n                            {property.getType() === 'Behavior' && (\n                              <BehaviorTypeSelector\n                                project={this.props.project}\n                                objectType={this.props.eventsBasedBehavior.getObjectType()}\n                                value={\n                                  property.getExtraInfo().size() === 0\n                                    ? ''\n                                    : property.getExtraInfo().at(0)\n                                }\n                                onChange={(newValue: string) => {\n                                  // Change the type of the required behavior.\n                                  const extraInfo = property.getExtraInfo();\n                                  if (extraInfo.size() === 0) {\n                                    extraInfo.push_back(newValue);\n                                  } else {\n                                    extraInfo.set(0, newValue);\n                                  }\n                                  this.forceUpdate();\n                                  this.props.onPropertiesUpdated();\n                                }}\n                                disabled={false}\n                              />\n                            )}\n                            {property.getType() === 'Choice' && (\n                              <SelectField\n                                floatingLabelText={<Trans>Default value</Trans>}\n                                value={property.getValue()}\n                                onChange={(e, i, value) => {\n                                  property.setValue(value);\n                                  this.forceUpdate();\n                                  this.props.onPropertiesUpdated();\n                                }}\n                                fullWidth\n                              >\n                                {getExtraInfoArray(property).map(\n                                  (choice, index) => (\n                                    <SelectOption\n                                      key={index}\n                                      value={choice}\n                                      primaryText={choice}\n                                    />\n                                  )\n                                )}\n                              </SelectField>\n                            )}\n                          </ResponsiveLineStackLayout>\n                          {property.getType() === 'Choice' && (\n                            <StringArrayEditor\n                              extraInfo={getExtraInfoArray(property)}\n                              setExtraInfo={this._setChoiceExtraInfo(property)}\n                            />\n                          )}\n                          {property.getType() === 'Color' && (\n                            <ColorField\n                              floatingLabelText={<Trans>Color</Trans>}\n                              disableAlpha\n                              fullWidth\n                              color={property.getValue()}\n                              onChange={color => {\n                                property.setValue(color);\n                                this.forceUpdate();\n                                this.props.onPropertiesUpdated();\n                              }}\n                            />\n                          )}\n                          <SemiControlledAutoComplete\n                            floatingLabelText={<Trans>Group name</Trans>}\n                            hintText={t`Leave it empty to use the default group.`}\n                            fullWidth\n                            value={property.getGroup()}\n                            onChange={text => {\n                              property.setGroup(text);\n                              this.forceUpdate();\n                              this.props.onPropertiesUpdated();\n                            }}\n                            dataSource={this._getPropertyGroupNames().map(\n                              name => ({\n                                text: name,\n                                value: name,\n                              })\n                            )}\n                            openOnFocus={true}\n                          />\n                          <SemiControlledTextField\n                            commitOnBlur\n                            floatingLabelText={\n                              <Trans>Label, shown in the editor</Trans>\n                            }\n                            hintText={t`This should make the purpose of the property easy to understand`}\n                            floatingLabelFixed\n                            value={property.getLabel()}\n                            onChange={text => {\n                              property.setLabel(text);\n                              this.forceUpdate();\n                            }}\n                            fullWidth\n                          />\n                        </ColumnStackLayout>\n                      </Line>\n                    </React.Fragment>\n                  )\n                )}\n                {properties.getCount() === 0 ? (\n                  <EmptyMessage>\n                    <Trans>\n                      No properties for this behavior. Add one to store data\n                      inside this behavior (for example: health, ammo, speed,\n                      etc...)\n                    </Trans>\n                  </EmptyMessage>\n                ) : null}\n                <Column>\n                  <Line justifyContent=\"flex-end\" expand>\n                    <RaisedButton\n                      primary\n                      label={<Trans>Add a property</Trans>}\n                      onClick={this._addProperty}\n                      icon={<Add />}\n                    />\n                  </Line>\n                </Column>\n              </div>\n            </Line>\n          </Column>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { type EventsFunctionCreationParameters } from '../EventsFunctionsList';\nimport FlatButton from '../UI/FlatButton';\nimport Subheader from '../UI/Subheader';\nimport { List, ListItem } from '../UI/List';\nimport Dialog from '../UI/Dialog';\nimport HelpButton from '../UI/HelpButton';\nimport Create from '../UI/CustomSvgIcons/Behaviors/Create';\nimport Step from '../UI/CustomSvgIcons/Behaviors/Step';\nimport Destroy from '../UI/CustomSvgIcons/Behaviors/Destroy';\nimport Action from '../UI/CustomSvgIcons/Behaviors/Action';\nimport Condition from '../UI/CustomSvgIcons/Behaviors/Condition';\nimport Expression from '../UI/CustomSvgIcons/Behaviors/Expression';\nimport Activate from '../UI/CustomSvgIcons/Behaviors/Activate';\nimport Deactivate from '../UI/CustomSvgIcons/Behaviors/Deactivate';\nimport { Line } from '../UI/Grid';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  onCancel: () => void,\n  onChoose: (parameters: EventsFunctionCreationParameters) => void,\n|};\n\nconst styles = {\n  icon: { width: 40, height: 40 },\n  disabledItem: { opacity: 0.6 },\n};\n\nconst MethodListItem = ({\n  icon,\n  disabled,\n  onChoose,\n  name,\n  description,\n}: {|\n  icon: React.Node,\n  disabled: boolean,\n  onChoose: EventsFunctionCreationParameters => void,\n  name: string,\n  description: React.Node,\n|}) => {\n  return (\n    <ListItem\n      leftIcon={icon}\n      primaryText={name}\n      secondaryText={description}\n      secondaryTextLines={2}\n      onClick={() =>\n        onChoose({\n          functionType: gd.EventsFunction.Action,\n          name,\n        })\n      }\n      style={disabled ? styles.disabledItem : undefined}\n      disabled={disabled}\n    />\n  );\n};\n\nexport default function BehaviorMethodSelectorDialog({\n  eventsBasedBehavior,\n  onChoose,\n  onCancel,\n}: Props) {\n  const eventsFunctions = eventsBasedBehavior.getEventsFunctions();\n  const [showAdvanced, setShowAdvanced] = React.useState(false);\n\n  return (\n    <Dialog\n      secondaryActions={[\n        <HelpButton\n          key=\"help\"\n          helpPagePath=\"/behaviors/events-based-behaviors\"\n        />,\n      ]}\n      actions={[\n        <FlatButton\n          label={<Trans>Cancel</Trans>}\n          keyboardFocused={true}\n          onClick={onCancel}\n          key={'close'}\n        />,\n      ]}\n      cannotBeDismissed={false}\n      open\n      noMargin\n      title={<Trans>Choose a new behavior function (\"method\")</Trans>}\n      onRequestClose={onCancel}\n    >\n      <List>\n        <ListItem\n          leftIcon={<Action style={styles.icon} />}\n          primaryText={<Trans>Action</Trans>}\n          secondaryText={\n            <Trans>\n              An action that can be used on objects with the behavior. You can\n              define the action parameters: objects, texts, numbers, layers,\n              etc...\n            </Trans>\n          }\n          onClick={() =>\n            onChoose({\n              functionType: gd.EventsFunction.Action,\n              name: null,\n            })\n          }\n        />\n        <ListItem\n          leftIcon={<Condition style={styles.icon} />}\n          primaryText={<Trans>Condition</Trans>}\n          secondaryText={\n            <Trans>\n              A condition that can be used on objects with the behavior. You can\n              define the condition parameters: objects, texts, numbers, layers,\n              etc...\n            </Trans>\n          }\n          onClick={() =>\n            onChoose({\n              functionType: gd.EventsFunction.Condition,\n              name: null,\n            })\n          }\n        />\n        <ListItem\n          leftIcon={<Expression style={styles.icon} />}\n          primaryText={<Trans>Expression</Trans>}\n          secondaryText={\n            <Trans>\n              An expression that can be used on objects with the behavior. Can\n              either return a number or a string, and take some parameters.\n            </Trans>\n          }\n          onClick={() =>\n            onChoose({\n              functionType: gd.EventsFunction.Expression,\n              name: null,\n            })\n          }\n        />\n        <Subheader>\n          <Trans>Lifecycle methods</Trans>\n        </Subheader>\n        <MethodListItem\n          icon={<Create style={styles.icon} />}\n          name={'onCreated'}\n          disabled={eventsFunctions.hasEventsFunctionNamed('onCreated')}\n          onChoose={onChoose}\n          description={\n            <Trans>\n              Events that will be run once, when an object is created with this\n              behavior being attached to it.\n            </Trans>\n          }\n        />\n        <MethodListItem\n          icon={<Step style={styles.icon} />}\n          name={'doStepPreEvents'}\n          disabled={eventsFunctions.hasEventsFunctionNamed('doStepPreEvents')}\n          onChoose={onChoose}\n          description={\n            <Trans>\n              Events that will be run at every frame (roughly 60 times per\n              second), for every object that has the behavior attached, before\n              the events from the events sheet are launched.\n            </Trans>\n          }\n        />\n        <MethodListItem\n          icon={<Destroy style={styles.icon} />}\n          name={'onDestroy'}\n          disabled={\n            eventsFunctions.hasEventsFunctionNamed('onOwnerRemovedFromScene') ||\n            eventsFunctions.hasEventsFunctionNamed('onDestroy')\n          }\n          onChoose={onChoose}\n          description={\n            <Trans>\n              Events that will be run once, after the object is removed from the\n              scene and before it is entirely removed from memory.\n            </Trans>\n          }\n        />\n        {showAdvanced && (\n          <>\n            <Subheader>\n              <Trans>Other lifecycle methods</Trans>\n            </Subheader>\n            <MethodListItem\n              icon={<Deactivate style={styles.icon} />}\n              name={'onDeActivate'}\n              disabled={eventsFunctions.hasEventsFunctionNamed('onDeActivate')}\n              onChoose={onChoose}\n              description={\n                <Trans>\n                  Events that will be run once when the behavior is deactivated\n                  on an object (step events won't be run until the behavior is\n                  activated again).\n                </Trans>\n              }\n            />\n            <MethodListItem\n              icon={<Activate style={styles.icon} />}\n              name={'onActivate'}\n              disabled={eventsFunctions.hasEventsFunctionNamed('onActivate')}\n              onChoose={onChoose}\n              description={\n                <Trans>\n                  Events that will be run once when the behavior is re-activated\n                  on an object (after it was previously deactivated).\n                </Trans>\n              }\n            />\n            <MethodListItem\n              icon={<Step style={styles.icon} />}\n              name={'doStepPostEvents'}\n              disabled={eventsFunctions.hasEventsFunctionNamed(\n                'doStepPostEvents'\n              )}\n              onChoose={onChoose}\n              description={\n                <Trans>\n                  Events that will be run at every frame (roughly 60 times per\n                  second), for every object that has the behavior attached,\n                  after the events from the events sheet.\n                </Trans>\n              }\n            />\n          </>\n        )}\n      </List>\n      <Line justifyContent=\"center\" alignItems=\"center\">\n        {!showAdvanced ? (\n          <FlatButton\n            icon={<Visibility />}\n            primary={false}\n            onClick={() => setShowAdvanced(true)}\n            label={<Trans>Show other lifecycle functions (advanced)</Trans>}\n          />\n        ) : (\n          <FlatButton\n            icon={<VisibilityOff />}\n            primary={false}\n            onClick={() => setShowAdvanced(false)}\n            label={<Trans>Hide other lifecycle functions (advanced)</Trans>}\n          />\n        )}\n      </Line>\n    </Dialog>\n  );\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { type EventsFunctionCreationParameters } from '../EventsFunctionsList';\nimport FlatButton from '../UI/FlatButton';\nimport Subheader from '../UI/Subheader';\nimport { List, ListItem } from '../UI/List';\nimport Dialog from '../UI/Dialog';\nimport HelpButton from '../UI/HelpButton';\nimport Create from '../UI/CustomSvgIcons/Behaviors/Create';\nimport Step from '../UI/CustomSvgIcons/Behaviors/Step';\nimport Destroy from '../UI/CustomSvgIcons/Behaviors/Destroy';\nimport Action from '../UI/CustomSvgIcons/Behaviors/Action';\nimport Condition from '../UI/CustomSvgIcons/Behaviors/Condition';\nimport Expression from '../UI/CustomSvgIcons/Behaviors/Expression';\nimport Activate from '../UI/CustomSvgIcons/Behaviors/Activate';\nimport Deactivate from '../UI/CustomSvgIcons/Behaviors/Deactivate';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { Line } from '../UI/Grid';\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  onCancel: () => void,\n  onChoose: (parameters: EventsFunctionCreationParameters) => void,\n|};\n\nconst styles = {\n  icon: { width: 40, height: 40 },\n  disabledItem: { opacity: 0.6 },\n};\n\nconst FunctionListItem = ({\n  icon,\n  disabled,\n  onChoose,\n  name,\n  description,\n}: {|\n  icon: React.Node,\n  disabled?: boolean,\n  onChoose: () => void,\n  name: React.Node,\n  description: React.Node,\n|}) => {\n  return (\n    <ListItem\n      leftIcon={icon}\n      primaryText={name}\n      secondaryText={description}\n      secondaryTextLines={2}\n      onClick={onChoose}\n      style={disabled ? styles.disabledItem : undefined}\n      disabled={disabled}\n    />\n  );\n};\n\nexport default function BehaviorMethodSelectorDialog({\n  eventsFunctionsExtension,\n  onChoose,\n  onCancel,\n}: Props) {\n  const [showAdvanced, setShowAdvanced] = React.useState(false);\n\n  return (\n    <Dialog\n      secondaryActions={[\n        <HelpButton key=\"help\" helpPagePath=\"/events/functions\" />,\n      ]}\n      actions={[\n        <FlatButton\n          label={<Trans>Cancel</Trans>}\n          keyboardFocused={true}\n          onClick={onCancel}\n          key={'close'}\n        />,\n      ]}\n      cannotBeDismissed={false}\n      open\n      noMargin\n      title={<Trans>Choose a new extension function</Trans>}\n      onRequestClose={onCancel}\n    >\n      <List>\n        <FunctionListItem\n          icon={<Action style={styles.icon} />}\n          name={<Trans>Action</Trans>}\n          onChoose={() =>\n            onChoose({\n              functionType: gd.EventsFunction.Action,\n              name: null,\n            })\n          }\n          description={\n            <Trans>\n              An action that can be used in other events sheet. You can define\n              the action parameters: objects, texts, numbers, layers, etc...\n            </Trans>\n          }\n        />\n        <FunctionListItem\n          icon={<Condition style={styles.icon} />}\n          name={<Trans>Condition</Trans>}\n          onChoose={() =>\n            onChoose({\n              functionType: gd.EventsFunction.Condition,\n              name: null,\n            })\n          }\n          description={\n            <Trans>\n              A condition that can be used in other events sheet. You can define\n              the condition parameters: objects, texts, numbers, layers, etc...\n            </Trans>\n          }\n        />\n        <FunctionListItem\n          icon={<Expression style={styles.icon} />}\n          name={<Trans>Expression</Trans>}\n          onChoose={() =>\n            onChoose({\n              functionType: gd.EventsFunction.Expression,\n              name: null,\n            })\n          }\n          description={\n            <Trans>\n              An expression that can be used in formulas. Can either return a\n              number or a string, and take some parameters.\n            </Trans>\n          }\n        />\n        {showAdvanced && (\n          <React.Fragment>\n            <Subheader>\n              <Trans>Lifecycle functions (advanced)</Trans>\n            </Subheader>\n            <FunctionListItem\n              icon={<Create style={styles.icon} />}\n              name={'onFirstSceneLoaded'}\n              disabled={eventsFunctionsExtension.hasEventsFunctionNamed(\n                'onFirstSceneLoaded'\n              )}\n              onChoose={() =>\n                onChoose({\n                  functionType: gd.EventsFunction.Action,\n                  name: 'onFirstSceneLoaded',\n                })\n              }\n              description={\n                <Trans>\n                  Events that will be run once when the first scene of the game\n                  is loaded, before any other events.\n                </Trans>\n              }\n            />\n            <FunctionListItem\n              icon={<Create style={styles.icon} />}\n              name={'onSceneLoaded'}\n              disabled={eventsFunctionsExtension.hasEventsFunctionNamed(\n                'onSceneLoaded'\n              )}\n              onChoose={() =>\n                onChoose({\n                  functionType: gd.EventsFunction.Action,\n                  name: 'onSceneLoaded',\n                })\n              }\n              description={\n                <Trans>\n                  Events that will be run once when a scene of the game is\n                  loaded, before the scene events.\n                </Trans>\n              }\n            />\n            <FunctionListItem\n              icon={<Step style={styles.icon} />}\n              name={'onScenePreEvents'}\n              disabled={eventsFunctionsExtension.hasEventsFunctionNamed(\n                'onScenePreEvents'\n              )}\n              onChoose={() =>\n                onChoose({\n                  functionType: gd.EventsFunction.Action,\n                  name: 'onScenePreEvents',\n                })\n              }\n              description={\n                <Trans>\n                  Events that will be run at every frame (roughly 60 times per\n                  second), before the events from the events sheet of the scene.\n                </Trans>\n              }\n            />\n            <FunctionListItem\n              icon={<Step style={styles.icon} />}\n              name={'onScenePostEvents'}\n              disabled={eventsFunctionsExtension.hasEventsFunctionNamed(\n                'onScenePostEvents'\n              )}\n              onChoose={() =>\n                onChoose({\n                  functionType: gd.EventsFunction.Action,\n                  name: 'onScenePostEvents',\n                })\n              }\n              description={\n                <Trans>\n                  Events that will be run at every frame (roughly 60 times per\n                  second), after the events from the events sheet of the scene.\n                </Trans>\n              }\n            />\n            <FunctionListItem\n              icon={<Deactivate style={styles.icon} />}\n              name={'onScenePaused'}\n              disabled={eventsFunctionsExtension.hasEventsFunctionNamed(\n                'onScenePaused'\n              )}\n              onChoose={() =>\n                onChoose({\n                  functionType: gd.EventsFunction.Action,\n                  name: 'onScenePaused',\n                })\n              }\n              description={\n                <Trans>\n                  Events that will be run once when a scene is paused (another\n                  scene is run on top of it).\n                </Trans>\n              }\n            />\n            <FunctionListItem\n              icon={<Activate style={styles.icon} />}\n              name={'onSceneResumed'}\n              disabled={eventsFunctionsExtension.hasEventsFunctionNamed(\n                'onSceneResumed'\n              )}\n              onChoose={() =>\n                onChoose({\n                  functionType: gd.EventsFunction.Action,\n                  name: 'onSceneResumed',\n                })\n              }\n              description={\n                <Trans>\n                  Events that will be run once when a scene is resumed (after it\n                  was previously paused).\n                </Trans>\n              }\n            />\n            <FunctionListItem\n              icon={<Destroy style={styles.icon} />}\n              name={'onSceneUnloading'}\n              disabled={eventsFunctionsExtension.hasEventsFunctionNamed(\n                'onSceneUnloading'\n              )}\n              onChoose={() =>\n                onChoose({\n                  functionType: gd.EventsFunction.Action,\n                  name: 'onSceneUnloading',\n                })\n              }\n              description={\n                <Trans>\n                  Events that will be run once when a scene is about to be\n                  unloaded from memory. The previous scene that was paused will\n                  be resumed after this.\n                </Trans>\n              }\n            />\n          </React.Fragment>\n        )}\n      </List>\n      <Line justifyContent=\"center\" alignItems=\"center\">\n        {!showAdvanced ? (\n          <FlatButton\n            icon={<Visibility />}\n            primary={false}\n            onClick={() => setShowAdvanced(true)}\n            label={<Trans>Show lifecycle functions (advanced)</Trans>}\n          />\n        ) : (\n          <FlatButton\n            icon={<VisibilityOff />}\n            primary={false}\n            onClick={() => setShowAdvanced(false)}\n            label={<Trans>Hide lifecycle functions (advanced)</Trans>}\n          />\n        )}\n      </Line>\n    </Dialog>\n  );\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type Editor } from '.';\nimport { Column, Line } from '../Grid';\nimport FlatButton from '../FlatButton';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport Background from '../Background';\n\ntype Props = {|\n  initialEditorName: string,\n  editors: {\n    [string]: Editor,\n  },\n  transitions: {\n    [string]: {|\n      nextEditor?: string | (() => string),\n      nextLabel?: React.Node,\n      nextIcon?: React.Node,\n      previousEditor?: string | (() => string),\n    |},\n  },\n  onEditorChanged: (editorName: string) => void,\n|};\n\nexport type EditorNavigatorInterface = {|\n  openEditor: (editorName: string) => void,\n|};\n\n// Flow types might have to be changed/removed if upgrading Flow\n// (see example at https://github.com/wgao19/flow-notes/blob/master/react/react-memo.md)\n\nexport default React.forwardRef<Props, EditorNavigatorInterface>(\n  (\n    { initialEditorName, editors, transitions, onEditorChanged }: Props,\n    ref\n  ) => {\n    const [currentEditorName, setCurrentEditorName] = React.useState(\n      initialEditorName\n    );\n    React.useImperativeHandle(ref, () => ({\n      openEditor: editorName => {\n        setCurrentEditorName(editorName);\n      },\n    }));\n    React.useEffect(\n      () => {\n        onEditorChanged(currentEditorName);\n      },\n      [currentEditorName, onEditorChanged]\n    );\n\n    const transition = transitions[currentEditorName];\n    let buttonLineJustifyContent = 'space-between';\n    if (transition) {\n      if (transition.previousEditor && !transition.nextEditor) {\n        buttonLineJustifyContent = 'flex-start';\n      }\n      if (!transition.previousEditor && transition.nextEditor) {\n        buttonLineJustifyContent = 'flex-end';\n      }\n    }\n\n    return (\n      <Column noMargin expand>\n        {transition && (\n          <Background maxWidth noExpand noFullHeight>\n            <Column>\n              <Line justifyContent={buttonLineJustifyContent}>\n                {transition.previousEditor && (\n                  <FlatButton\n                    label={<Trans>Back</Trans>}\n                    onClick={() => {\n                      if (transition.previousEditor)\n                        setCurrentEditorName(transition.previousEditor);\n                    }}\n                    icon={<ArrowBack />}\n                  />\n                )}\n                {transition.nextLabel && transition.nextEditor && (\n                  <FlatButton\n                    label={transition.nextLabel}\n                    onClick={() => {\n                      if (transition.nextEditor)\n                        setCurrentEditorName(transition.nextEditor);\n                    }}\n                    icon={transition.nextIcon}\n                  />\n                )}\n              </Line>\n            </Column>\n          </Background>\n        )}\n        {editors[currentEditorName]\n          ? editors[currentEditorName].renderEditor()\n          : null}\n      </Column>\n    );\n  }\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport * as React from 'react';\nimport Background from '../UI/Background';\nimport { Column, Spacer } from '../UI/Grid';\nimport Text from '../UI/Text';\nimport RaisedButton from '../UI/RaisedButton';\nimport FlatButton from '../UI/FlatButton';\n\ntype Props = {|\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  onEditFreeFunctions: () => void,\n  onEditBehaviors: () => void,\n  onEditExtensionOptions: () => void,\n|};\n\nexport default (props: Props) => {\n  const eventsFunctionsCount = props.eventsFunctionsExtension.getEventsFunctionsCount();\n  const eventsBasedBehaviorsCount = props.eventsFunctionsExtension\n    .getEventsBasedBehaviors()\n    .getCount();\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Background>\n          <Column>\n            <Text>\n              <Trans>\n                Extensions can provide functions (which can be actions,\n                conditions or expressions) or new behaviors.\n              </Trans>\n            </Text>\n            <RaisedButton\n              label={i18n._(\n                t`Edit functions (not attached to behaviors) (${eventsFunctionsCount})`\n              )}\n              onClick={props.onEditFreeFunctions}\n              primary\n            />\n            <Spacer />\n            <RaisedButton\n              label={i18n._(t`Edit behaviors (${eventsBasedBehaviorsCount})`)}\n              onClick={props.onEditBehaviors}\n              primary\n            />\n            <Spacer />\n            <FlatButton\n              label={<Trans>Edit extension options</Trans>}\n              onClick={props.onEditExtensionOptions}\n            />\n          </Column>\n        </Background>\n      )}\n    </I18n>\n  );\n};\n","export const CLIPBOARD_KIND = 'Object';\n","// @flow\nimport * as React from 'react';\nimport { t } from '@lingui/macro';\nimport Dialog from './Dialog';\nimport TextField from './TextField';\nimport FlatButton from './FlatButton';\nimport { Trans } from '@lingui/macro';\nimport { type Tags, getTagsFromString } from '../Utils/TagsHelper';\nimport { shouldValidate } from './KeyboardShortcuts/InteractionKeys';\n\ntype Props = {|\n  tagsString: string,\n  onCancel: () => void,\n  onEdit: (tags: Tags) => void,\n|};\n\ntype State = {|\n  tagsString: string,\n|};\n\n/**\n * Dialog to edit tags, with keyboard support (auto focus of tags field,\n * enter to validate, esc to dismiss dialog).\n */\nexport default class EditTagsDialog extends React.Component<Props, State> {\n  state = {\n    tagsString: this.props.tagsString,\n  };\n  _tagsField = React.createRef<TextField>();\n\n  componentDidMount() {\n    setTimeout(() => {\n      if (this._tagsField && this._tagsField.current) {\n        this._tagsField.current.focus();\n      }\n    }, 10);\n  }\n\n  _canEdit = () => {\n    const { tagsString } = this.state;\n    const tags = getTagsFromString(tagsString);\n\n    return !!this.props.tagsString || !!tags.length;\n  };\n\n  _onEdit = (tags: Tags) => {\n    if (!this._canEdit()) return;\n\n    this.props.onEdit(tags);\n  };\n\n  render() {\n    const { onCancel, onEdit } = this.props;\n    const { tagsString } = this.state;\n\n    const tags = getTagsFromString(tagsString);\n\n    return (\n      <Dialog\n        actions={[\n          <FlatButton\n            key=\"close\"\n            label={<Trans>Cancel</Trans>}\n            primary={false}\n            onClick={onCancel}\n          />,\n          <FlatButton\n            key=\"add\"\n            label={\n              this.props.tagsString && !tags.length ? (\n                <Trans>Remove all tags</Trans>\n              ) : (\n                <Trans>Add/update {tags.length} tag(s)</Trans>\n              )\n            }\n            primary\n            onClick={() => this._onEdit(tags)}\n            disabled={!this._canEdit()}\n          />,\n        ]}\n        cannotBeDismissed={false}\n        open\n        onApply={() => this._onEdit(tags)}\n        onRequestClose={onCancel}\n      >\n        <TextField\n          fullWidth\n          value={tagsString}\n          onChange={(e, tagsString) =>\n            this.setState({\n              tagsString,\n            })\n          }\n          floatingLabelText=\"Tag(s) (comma-separated)\"\n          hintText={t`For example: player, spaceship, inventory...`}\n          onKeyPress={event => {\n            if (shouldValidate(event)) {\n              onEdit(tags);\n            }\n          }}\n          ref={this._tagsField}\n        />\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport gesture from 'pixi-simple-gesture';\nimport ObjectsRenderingService from '../../ObjectsRendering/ObjectsRenderingService';\nimport RenderedInstance from '../../ObjectsRendering/Renderers/RenderedInstance';\nimport getObjectByName from '../../Utils/GetObjectByName';\nimport ViewPosition from '../ViewPosition';\n\nimport * as PIXI from 'pixi.js-legacy';\nimport { shouldBeHandledByPinch } from '../PinchHandler';\nimport { makeDoubleClickable } from './PixiDoubleClickEvent';\nimport Rectangle from '../../Utils/Rectangle';\nimport { rotatePolygon, type Polygon } from '../../Utils/PolygonHelper';\nconst gd: libGDevelop = global.gd;\n\nexport default class LayerRenderer {\n  project: gdProject;\n  instances: gdInitialInstancesContainer;\n  layout: gdLayout;\n  /** `layer` can be changed at any moment (see InstancesRenderer).\n   * /!\\ Don't store any other reference.\n   */\n  layer: gdLayer;\n  viewPosition: ViewPosition;\n  onInstanceClicked: gdInitialInstance => void;\n  onInstanceRightClicked: ({|\n    offsetX: number,\n    offsetY: number,\n    x: number,\n    y: number,\n  |}) => void;\n  onInstanceDoubleClicked: gdInitialInstance => void;\n  onOverInstance: gdInitialInstance => void;\n  onOutInstance: gdInitialInstance => void;\n  onMoveInstance: (gdInitialInstance, number, number) => void;\n  onMoveInstanceEnd: void => void;\n  onDownInstance: (gdInitialInstance, number, number) => void;\n  /**Used for instances culling on rendering */\n  viewTopLeft: [number, number];\n  /** Used for instances culling on rendering */\n  viewBottomRight: [number, number];\n\n  renderedInstances: { [number]: RenderedInstance } = {};\n  pixiContainer: PIXI.Container;\n\n  /** Functor used to render an instance */\n  instancesRenderer: gdInitialInstanceJSFunctor;\n\n  wasUsed: boolean = false;\n\n  _temporaryRectangle: Rectangle = new Rectangle();\n  _temporaryRectanglePath: Polygon = [[0, 0], [0, 0], [0, 0], [0, 0]];\n\n  constructor({\n    project,\n    layout,\n    layer,\n    viewPosition,\n    instances,\n    onInstanceClicked,\n    onInstanceRightClicked,\n    onInstanceDoubleClicked,\n    onOverInstance,\n    onOutInstance,\n    onMoveInstance,\n    onMoveInstanceEnd,\n    onDownInstance,\n  }: {\n    project: gdProject,\n    instances: gdInitialInstancesContainer,\n    layout: gdLayout,\n    layer: gdLayer,\n    viewPosition: ViewPosition,\n    onInstanceClicked: gdInitialInstance => void,\n    onInstanceRightClicked: ({|\n      offsetX: number,\n      offsetY: number,\n      x: number,\n      y: number,\n    |}) => void,\n    onInstanceDoubleClicked: gdInitialInstance => void,\n    onOverInstance: gdInitialInstance => void,\n    onOutInstance: gdInitialInstance => void,\n    onMoveInstance: (gdInitialInstance, number, number) => void,\n    onMoveInstanceEnd: void => void,\n    onDownInstance: (gdInitialInstance, number, number) => void,\n  }) {\n    this.project = project;\n    this.instances = instances;\n    this.layout = layout;\n    this.layer = layer; // /!\\ Don't store any other reference.\n    // `layer` can be changed at any moment (see InstancesRenderer).\n    this.viewPosition = viewPosition;\n    this.onInstanceClicked = onInstanceClicked;\n    this.onInstanceRightClicked = onInstanceRightClicked;\n    this.onInstanceDoubleClicked = onInstanceDoubleClicked;\n    this.onOverInstance = onOverInstance;\n    this.onOutInstance = onOutInstance;\n    this.onMoveInstance = onMoveInstance;\n    this.onMoveInstanceEnd = onMoveInstanceEnd;\n    this.onDownInstance = onDownInstance;\n\n    this.viewTopLeft = [0, 0]; // Used for instances culling on rendering\n    this.viewBottomRight = [0, 0]; // Used for instances culling on rendering\n\n    this.pixiContainer = new PIXI.Container();\n\n    // Functor used to render an instance\n    this.instancesRenderer = new gd.InitialInstanceJSFunctor();\n    // $FlowFixMe - invoke is not writable\n    this.instancesRenderer.invoke = instancePtr => {\n      // $FlowFixMe - wrapPointer is not exposed\n      const instance = gd.wrapPointer(instancePtr, gd.InitialInstance);\n\n      //Get the \"RendereredInstance\" object associated to the instance and tell it to update.\n      var renderedInstance: ?RenderedInstance = this.getRendererOfInstance(\n        instance\n      );\n      if (!renderedInstance) return;\n\n      const pixiObject = renderedInstance.getPixiObject();\n      if (pixiObject) pixiObject.zOrder = instance.getZOrder();\n\n      // \"Culling\" improves rendering performance of large levels\n      const isVisible = this._isInstanceVisible(instance);\n      if (pixiObject) pixiObject.visible = isVisible;\n      if (isVisible) renderedInstance.update();\n\n      renderedInstance.wasUsed = true;\n    };\n  }\n\n  getPixiContainer() {\n    return this.pixiContainer;\n  }\n\n  getUnrotatedInstanceLeft = (instance: gdInitialInstance) => {\n    return (\n      instance.getX() -\n      (this.renderedInstances[instance.ptr]\n        ? this.renderedInstances[instance.ptr].getOriginX()\n        : 0)\n    );\n  };\n\n  getUnrotatedInstanceTop = (instance: gdInitialInstance) => {\n    return (\n      instance.getY() -\n      (this.renderedInstances[instance.ptr]\n        ? this.renderedInstances[instance.ptr].getOriginY()\n        : 0)\n    );\n  };\n\n  getUnrotatedInstanceWidth = (instance: gdInitialInstance) => {\n    if (instance.hasCustomSize()) return instance.getCustomWidth();\n\n    return this.renderedInstances[instance.ptr]\n      ? this.renderedInstances[instance.ptr].getDefaultWidth()\n      : 0;\n  };\n\n  getUnrotatedInstanceHeight = (instance: gdInitialInstance) => {\n    if (instance.hasCustomSize()) return instance.getCustomHeight();\n\n    return this.renderedInstances[instance.ptr]\n      ? this.renderedInstances[instance.ptr].getDefaultHeight()\n      : 0;\n  };\n\n  getUnrotatedInstanceAABB(\n    instance: gdInitialInstance,\n    bounds: Rectangle\n  ): Rectangle {\n    const left = this.getUnrotatedInstanceLeft(instance);\n    const top = this.getUnrotatedInstanceTop(instance);\n    const right = left + this.getUnrotatedInstanceWidth(instance);\n    const bottom = top + this.getUnrotatedInstanceHeight(instance);\n\n    bounds.left = left;\n    bounds.right = right;\n    bounds.top = top;\n    bounds.bottom = bottom;\n    return bounds;\n  }\n\n  _getInstanceRotatedRectangle(instance: gdInitialInstance): Polygon {\n    const left = this.getUnrotatedInstanceLeft(instance);\n    const top = this.getUnrotatedInstanceTop(instance);\n    const right = left + this.getUnrotatedInstanceWidth(instance);\n    const bottom = top + this.getUnrotatedInstanceHeight(instance);\n\n    const rectangle = this._temporaryRectanglePath;\n\n    rectangle[0][0] = left;\n    rectangle[0][1] = top;\n\n    rectangle[1][0] = left;\n    rectangle[1][1] = bottom;\n\n    rectangle[2][0] = right;\n    rectangle[2][1] = bottom;\n\n    rectangle[3][0] = right;\n    rectangle[3][1] = top;\n\n    const centerX = (rectangle[0][0] + rectangle[2][0]) / 2;\n    const centerY = (rectangle[0][1] + rectangle[2][1]) / 2;\n    const angle = (instance.getAngle() * Math.PI) / 180;\n    rotatePolygon(rectangle, centerX, centerY, angle);\n    return rectangle;\n  }\n\n  getInstanceAABB(instance: gdInitialInstance, bounds: Rectangle): Rectangle {\n    const angle = (instance.getAngle() * Math.PI) / 180;\n    if (angle === 0) {\n      return this.getUnrotatedInstanceAABB(instance, bounds);\n    }\n\n    const rotatedRectangle = this._getInstanceRotatedRectangle(instance);\n\n    let left = Number.MAX_VALUE;\n    let right = -Number.MAX_VALUE;\n    let top = Number.MAX_VALUE;\n    let bottom = -Number.MAX_VALUE;\n    for (let i = 0, len = rotatedRectangle.length; i < len; ++i) {\n      left = Math.min(left, rotatedRectangle[i][0]);\n      right = Math.max(right, rotatedRectangle[i][0]);\n      top = Math.min(top, rotatedRectangle[i][1]);\n      bottom = Math.max(bottom, rotatedRectangle[i][1]);\n    }\n    bounds.left = left;\n    bounds.right = right;\n    bounds.top = top;\n    bounds.bottom = bottom;\n    return bounds;\n  }\n\n  getRendererOfInstance = (instance: gdInitialInstance) => {\n    var renderedInstance = this.renderedInstances[instance.ptr];\n    if (renderedInstance === undefined) {\n      //No renderer associated yet, the instance must have been just created!...\n      const associatedObjectName = instance.getObjectName();\n      const associatedObject = getObjectByName(\n        this.project,\n        this.layout,\n        associatedObjectName\n      );\n      if (!associatedObject) return null;\n\n      //...so let's create a renderer.\n      renderedInstance = this.renderedInstances[\n        instance.ptr\n      ] = ObjectsRenderingService.createNewInstanceRenderer(\n        this.project,\n        this.layout,\n        instance,\n        associatedObject,\n        this.pixiContainer\n      );\n\n      renderedInstance._pixiObject.interactive = true;\n      gesture.panable(renderedInstance._pixiObject);\n      makeDoubleClickable(renderedInstance._pixiObject);\n      renderedInstance._pixiObject.on('click', event => {\n        if (event.data.originalEvent.button === 0)\n          this.onInstanceClicked(instance);\n      });\n      renderedInstance._pixiObject.on('doubleclick', () => {\n        this.onInstanceDoubleClicked(instance);\n      });\n      renderedInstance._pixiObject.on('mouseover', () => {\n        this.onOverInstance(instance);\n      });\n      renderedInstance._pixiObject.on(\n        'mousedown',\n        (event: PIXI.InteractionEvent) => {\n          if (event.data.originalEvent.button === 0) {\n            const viewPoint = event.data.global;\n            const scenePoint = this.viewPosition.toSceneCoordinates(\n              viewPoint.x,\n              viewPoint.y\n            );\n            this.onDownInstance(instance, scenePoint[0], scenePoint[1]);\n          }\n        }\n      );\n      renderedInstance._pixiObject.on('rightclick', interactionEvent => {\n        const {\n          data: { global: viewPoint, originalEvent: event },\n        } = interactionEvent;\n\n        // First select the instance\n        const scenePoint = this.viewPosition.toSceneCoordinates(\n          viewPoint.x,\n          viewPoint.y\n        );\n        this.onDownInstance(instance, scenePoint[0], scenePoint[1]);\n\n        // Then call right click callback\n        if (this.onInstanceRightClicked) {\n          this.onInstanceRightClicked({\n            offsetX: event.offsetX,\n            offsetY: event.offsetY,\n            x: event.clientX,\n            y: event.clientY,\n          });\n        }\n\n        return false;\n      });\n      renderedInstance._pixiObject.on('touchstart', event => {\n        if (shouldBeHandledByPinch(event.data && event.data.originalEvent)) {\n          return null;\n        }\n\n        const viewPoint = event.data.global;\n        const scenePoint = this.viewPosition.toSceneCoordinates(\n          viewPoint.x,\n          viewPoint.y\n        );\n        this.onDownInstance(instance, scenePoint[0], scenePoint[1]);\n      });\n      renderedInstance._pixiObject.on('mouseout', () => {\n        this.onOutInstance(instance);\n      });\n      renderedInstance._pixiObject.on('panmove', event => {\n        if (shouldBeHandledByPinch(event.data && event.data.originalEvent)) {\n          return null;\n        }\n\n        this.onMoveInstance(instance, event.deltaX, event.deltaY);\n      });\n      renderedInstance._pixiObject.on('panend', event => {\n        this.onMoveInstanceEnd();\n      });\n    }\n\n    return renderedInstance;\n  };\n\n  /**\n   * This returns true if an instance is visible according to the viewPosition.\n   * The approach is a naive bounding box testing but save rendering time on large\n   * levels (though this could be improved with spatial partitioning).\n   */\n  _isInstanceVisible(instance: gdInitialInstance) {\n    const aabb = this.getInstanceAABB(instance, this._temporaryRectangle);\n    if (\n      aabb.left + aabb.width() < this.viewTopLeft[0] ||\n      aabb.top + aabb.height() < this.viewTopLeft[1] ||\n      aabb.left > this.viewBottomRight[0] ||\n      aabb.top > this.viewBottomRight[1]\n    )\n      return false;\n\n    return true;\n  }\n\n  _computeViewBounds() {\n    // Add a margin of 100 pixels around the view. Culling will hide PIXI objects,\n    // and hidden objects won't respond to events. Hence, a margin allow the cursor to go\n    // slightly out of the canvas when moving an instance, and still have the instance\n    // to follow the cursor.\n    const margin = 100;\n    this.viewTopLeft = this.viewPosition.toSceneCoordinates(-margin, -margin);\n    this.viewBottomRight = this.viewPosition.toSceneCoordinates(\n      this.viewPosition.getWidth() + margin,\n      this.viewPosition.getHeight() + margin\n    );\n  }\n\n  render() {\n    this._computeViewBounds();\n    this.instances.iterateOverInstancesWithZOrdering(\n      // $FlowFixMe - gd.castObject is not supporting typings.\n      this.instancesRenderer,\n      this.layer.getName()\n    );\n    this._updatePixiObjectsZOrder();\n    this._updateVisibility();\n    this._destroyUnusedInstanceRenderers();\n  }\n\n  _updatePixiObjectsZOrder() {\n    this.pixiContainer.children.sort((a, b) => {\n      a.zOrder = a.zOrder || 0;\n      b.zOrder = b.zOrder || 0;\n      return a.zOrder - b.zOrder;\n    });\n  }\n\n  _updateVisibility() {\n    this.pixiContainer.visible = this.layer.getVisibility();\n  }\n\n  /**\n   * Delete instance renderers of the specified objects, which will then be recreated during\n   * the next render.\n   * @param {string} objectName The name of the object for which instance must be re-rendered.\n   */\n  resetInstanceRenderersFor(objectName: string) {\n    for (let s in this.renderedInstances) {\n      let i = Number(s);\n      if (this.renderedInstances.hasOwnProperty(i)) {\n        const renderedInstance = this.renderedInstances[i];\n        if (renderedInstance.getInstance().getObjectName() === objectName) {\n          renderedInstance.onRemovedFromScene();\n          delete this.renderedInstances[i];\n        }\n      }\n    }\n  }\n\n  /**\n   * Remove rendered instances that are not associated to any instance anymore\n   * (this can happen after an instance has been deleted).\n   */\n  _destroyUnusedInstanceRenderers() {\n    for (let s in this.renderedInstances) {\n      let i = Number(s);\n      if (this.renderedInstances.hasOwnProperty(i)) {\n        const renderedInstance = this.renderedInstances[i];\n        if (!renderedInstance.wasUsed) {\n          renderedInstance.onRemovedFromScene();\n          delete this.renderedInstances[i];\n        } else renderedInstance.wasUsed = false;\n      }\n    }\n  }\n\n  delete() {\n    // Destroy all instances\n    for (let s in this.renderedInstances) {\n      let i = Number(s);\n      if (this.renderedInstances.hasOwnProperty(i)) {\n        const renderedInstance = this.renderedInstances[i];\n        renderedInstance.onRemovedFromScene(); // TODO: pass argument to tell it's even worth removing from container?\n        delete this.renderedInstances[i];\n      }\n    }\n\n    // Destroy the container\n    this.pixiContainer.destroy();\n\n    // Destroy the object iterating on instances\n    this.instancesRenderer.delete();\n  }\n}\n","// @flow\nimport * as PIXI from 'pixi.js-legacy';\n\nconst moveTolerance = 10; // px\nconst doubleClickDelay = 500; //ms\n\n/**\n * Add a 'doubleclick' event to the given PIXI DisplayObject,\n * which is emitted when the object is double tapped in less than\n * 500ms (using touch or mouse) on the same position (with a small tolerance).\n */\nexport const makeDoubleClickable = (pixiDisplayObject: PIXI.DisplayObject) => {\n  let lastClickTime = 0;\n  let lastClickGlobalX = 0;\n  let lastClickGlobalY = 0;\n\n  const handleTap = (event: PIXI.InteractionEvent) => {\n    const { x, y } = event.data.global;\n    const currentTime = Date.now();\n\n    if (\n      currentTime - lastClickTime < doubleClickDelay &&\n      Math.abs(x - lastClickGlobalX) <= moveTolerance &&\n      Math.abs(y - lastClickGlobalY) <= moveTolerance\n    ) {\n      // Wait for the next event cycle, as otherwise the \"touchend\"\n      // event could be catched by a dialog/another component shown\n      // as a result of the double click.\n      setTimeout(() => {\n        pixiDisplayObject.emit('doubleclick', event);\n      });\n    }\n\n    lastClickTime = currentTime;\n    lastClickGlobalX = x;\n    lastClickGlobalY = y;\n  };\n\n  pixiDisplayObject.interactive = true;\n  pixiDisplayObject.on('click', handleTap);\n  pixiDisplayObject.on('touchend', handleTap);\n};\n","// @flow\nexport type Polygon = Array<[number, number]>;\n\nexport function rotatePolygon(\n  vertices: Polygon,\n  centerX: number,\n  centerY: number,\n  angle: number\n): void {\n  //We want a clockwise rotation\n  const cosa = Math.cos(-angle);\n  const sina = Math.sin(-angle);\n  for (let i = 0, len = vertices.length; i < len; ++i) {\n    let x = vertices[i][0] - centerX;\n    let y = vertices[i][1] - centerY;\n    vertices[i][0] = centerX + x * cosa + y * sina;\n    vertices[i][1] = centerY - x * sina + y * cosa;\n  }\n}\n","// @flow\nimport * as PIXI from 'pixi.js-legacy';\nimport Rectangle from '../Utils/Rectangle';\nconst gd: libGDevelop = global.gd;\n\nexport default class SelectionRectangle {\n  instances: gdInitialInstancesContainer;\n  instanceMeasurer: any;\n  toSceneCoordinates: (x: number, y: number) => [number, number];\n\n  pixiRectangle: PIXI.Graphics;\n  selectionRectangleStart: any;\n  selectionRectangleEnd: any;\n  _instancesInSelectionRectangle: gdInitialInstance[];\n\n  selector: gdInitialInstanceJSFunctor;\n  /**\n   * Used to check if an instance is in the selection rectangle\n   */\n  _temporaryAABB: Rectangle;\n\n  constructor({\n    instances,\n    instanceMeasurer,\n    toSceneCoordinates,\n  }: {\n    instances: gdInitialInstancesContainer,\n    instanceMeasurer: any,\n    toSceneCoordinates: (x: number, y: number) => [number, number],\n  }) {\n    this.instances = instances;\n    this.instanceMeasurer = instanceMeasurer;\n    this.toSceneCoordinates = toSceneCoordinates;\n\n    this.pixiRectangle = new PIXI.Graphics();\n    this.pixiRectangle.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n    this.selectionRectangleStart = null;\n    this.selectionRectangleEnd = null;\n    this._instancesInSelectionRectangle = [];\n\n    this._temporaryAABB = new Rectangle();\n    this.selector = new gd.InitialInstanceJSFunctor();\n    // $FlowFixMe - invoke is not writable\n    this.selector.invoke = instancePtr => {\n      // $FlowFixMe - wrapPointer is not exposed\n      const instance = gd.wrapPointer(instancePtr, gd.InitialInstance);\n      const instanceAABB = this.instanceMeasurer.getInstanceAABB(\n        instance,\n        this._temporaryAABB\n      );\n\n      if (!this.selectionRectangleStart || !this.selectionRectangleEnd) return;\n\n      const selectionSceneStart = toSceneCoordinates(\n        this.selectionRectangleStart.x,\n        this.selectionRectangleStart.y\n      );\n      const selectionSceneEnd = toSceneCoordinates(\n        this.selectionRectangleEnd.x,\n        this.selectionRectangleEnd.y\n      );\n\n      if (\n        selectionSceneStart[0] <= instanceAABB.left &&\n        instanceAABB.right <= selectionSceneEnd[0] &&\n        selectionSceneStart[1] <= instanceAABB.top &&\n        instanceAABB.bottom <= selectionSceneEnd[1]\n      ) {\n        this._instancesInSelectionRectangle.push(instance);\n      }\n    };\n  }\n\n  hasStartedSelectionRectangle() {\n    return this.selectionRectangleStart;\n  }\n\n  startSelectionRectangle = (x: number, y: number) => {\n    this.selectionRectangleStart = { x, y };\n    this.selectionRectangleEnd = { x, y };\n  };\n\n  updateSelectionRectangle = (lastX: number, lastY: number) => {\n    if (!this.selectionRectangleStart)\n      this.selectionRectangleStart = { x: lastX, y: lastY };\n\n    this.selectionRectangleEnd = { x: lastX, y: lastY };\n  };\n\n  endSelectionRectangle = () => {\n    if (!this.selectionRectangleStart) return [];\n\n    this._instancesInSelectionRectangle.length = 0;\n    if (this.selectionRectangleStart.x > this.selectionRectangleEnd.x) {\n      const tmp = this.selectionRectangleStart.x;\n      this.selectionRectangleStart.x = this.selectionRectangleEnd.x;\n      this.selectionRectangleEnd.x = tmp;\n    }\n    if (this.selectionRectangleStart.y > this.selectionRectangleEnd.y) {\n      const tmp = this.selectionRectangleStart.y;\n      this.selectionRectangleStart.y = this.selectionRectangleEnd.y;\n      this.selectionRectangleEnd.y = tmp;\n    }\n\n    this.instances.iterateOverInstances(\n      // $FlowFixMe - gd.castObject is not supporting typings.\n      this.selector\n    );\n\n    this.selectionRectangleStart = null;\n    return this._instancesInSelectionRectangle;\n  };\n\n  getPixiObject() {\n    return this.pixiRectangle;\n  }\n\n  render() {\n    if (!this.selectionRectangleStart) {\n      this.pixiRectangle.visible = false;\n      return;\n    }\n\n    let x1 = this.selectionRectangleStart.x;\n    let y1 = this.selectionRectangleStart.y;\n    let x2 = this.selectionRectangleEnd.x;\n    let y2 = this.selectionRectangleEnd.y;\n\n    this.pixiRectangle.visible = true;\n    this.pixiRectangle.clear();\n    this.pixiRectangle.beginFill(0x6868e8);\n    this.pixiRectangle.lineStyle(1, 0x6868e8, 1);\n    this.pixiRectangle.fill.alpha = 0.1;\n    this.pixiRectangle.alpha = 0.8;\n    this.pixiRectangle.drawRect(\n      Math.min(x1, x2),\n      Math.min(y1, y2),\n      Math.abs(x2 - x1),\n      Math.abs(y2 - y1)\n    );\n    this.pixiRectangle.endFill();\n  }\n\n  delete() {\n    this.selector.delete();\n  }\n}\n","// @flow\nimport { roundPosition } from '../Utils/GridHelpers';\nimport { type InstancesEditorSettings } from './InstancesEditorSettings';\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  instances: gdInitialInstancesContainer,\n  instancesEditorSettings: InstancesEditorSettings,\n|};\n\nconst roundPositionsToGrid = (\n  pos: [number, number],\n  instancesEditorSettings: InstancesEditorSettings\n): [number, number] => {\n  const newPos = pos;\n\n  if (instancesEditorSettings.grid && instancesEditorSettings.snap) {\n    roundPosition(\n      newPos,\n      instancesEditorSettings.gridWidth,\n      instancesEditorSettings.gridHeight,\n      instancesEditorSettings.gridOffsetX,\n      instancesEditorSettings.gridOffsetY,\n      instancesEditorSettings.gridType\n    );\n  } else {\n    newPos[0] = Math.round(newPos[0]);\n    newPos[1] = Math.round(newPos[1]);\n  }\n\n  return newPos;\n};\n\n/**\n * Allow to add instances on the scene. Supports \"temporary\" instances,\n * which are real instances but can be deleted as long as they are not \"committed\".\n */\nexport default class InstancesAdder {\n  _instances: gdInitialInstancesContainer;\n  _temporaryInstances: Array<gdInitialInstance>;\n  _instancesEditorSettings: InstancesEditorSettings;\n  _zOrderFinder = new gd.HighestZOrderFinder();\n\n  constructor({ instances, instancesEditorSettings }: Props) {\n    this._instances = instances;\n    this._instancesEditorSettings = instancesEditorSettings;\n    this._temporaryInstances = [];\n  }\n\n  setInstancesEditorSettings(instancesEditorSettings: InstancesEditorSettings) {\n    this._instancesEditorSettings = instancesEditorSettings;\n  }\n\n  /**\n   * Immediately create new instance at the specified position\n   * (specified in scene coordinates).\n   */\n  addInstances = (\n    pos: [number, number],\n    objectNames: Array<string>\n  ): Array<gdInitialInstance> => {\n    this._instances.iterateOverInstances(this._zOrderFinder);\n    const zOrder = this._zOrderFinder.getHighestZOrder() + 1;\n\n    const newPos = roundPositionsToGrid(pos, this._instancesEditorSettings);\n    const addedInstances = objectNames.map(objectName => {\n      const instance: gdInitialInstance = this._instances.insertNewInitialInstance();\n      instance.setObjectName(objectName);\n      instance.setX(newPos[0]);\n      instance.setY(newPos[1]);\n      instance.setZOrder(zOrder);\n\n      return instance;\n    });\n\n    return addedInstances;\n  };\n\n  /**\n   * Create temporary instances at the specified position\n   * (specified in scene coordinates).\n   */\n  createOrUpdateTemporaryInstancesFromObjectNames = (\n    pos: [number, number],\n    objectNames: Array<string>\n  ) => {\n    if (!objectNames.length) return;\n\n    if (!this._temporaryInstances.length) {\n      this._createTemporaryInstancesFromObjectNames(pos, objectNames);\n    } else {\n      this.updateTemporaryInstancePositions(pos);\n    }\n  };\n\n  _createTemporaryInstancesFromObjectNames = (\n    pos: [number, number],\n    objectNames: Array<string>\n  ) => {\n    this.deleteTemporaryInstances();\n\n    this._instances.iterateOverInstances(this._zOrderFinder);\n    const zOrder = this._zOrderFinder.getHighestZOrder() + 1;\n\n    const newPos = roundPositionsToGrid(pos, this._instancesEditorSettings);\n    this._temporaryInstances = objectNames.map(objectName => {\n      const instance: gdInitialInstance = this._instances.insertNewInitialInstance();\n      instance.setObjectName(objectName);\n      instance.setX(newPos[0]);\n      instance.setY(newPos[1]);\n      instance.setZOrder(zOrder);\n\n      return instance;\n    });\n  };\n\n  /**\n   * Update the temporary instances  positions\n   * (specified in scene coordinates). Useful when dragging these instances.\n   */\n  updateTemporaryInstancePositions = (\n    pos: [number, number]\n  ): Array<gdInitialInstance> => {\n    const newPos = roundPositionsToGrid(pos, this._instancesEditorSettings);\n    this._temporaryInstances.forEach(instance => {\n      instance.setX(newPos[0]);\n      instance.setY(newPos[1]);\n    });\n\n    return this._temporaryInstances;\n  };\n\n  /**\n   * Delete the temporary instances.\n   */\n  deleteTemporaryInstances() {\n    this._temporaryInstances.forEach(instance => {\n      this._instances.removeInstance(instance);\n    });\n    this._temporaryInstances = [];\n  }\n\n  /**\n   * Consider the temporary instances as not temporary anymore.\n   */\n  commitTemporaryInstances() {\n    this._temporaryInstances = [];\n  }\n\n  unmount() {\n    this._zOrderFinder.delete();\n\n    // Nothing to do for temporaries instances, that should have been deleted/commited by this moment.\n    // Don't take the risk to delete them now as this._instances might have been deleted/invalidated\n    // already.\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Background from '../../UI/Background';\nimport enumerateLayers from '../../LayersList/EnumerateLayers';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport PropertiesEditor from '../../PropertiesEditor';\nimport propertiesMapToSchema from '../../PropertiesEditor/PropertiesMapToSchema';\nimport { type Schema } from '../../PropertiesEditor';\nimport VariablesList from '../../VariablesList';\nimport getObjectByName from '../../Utils/GetObjectByName';\nimport IconButton from '../../UI/IconButton';\nimport { Line, Column } from '../../UI/Grid';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport Text from '../../UI/Text';\nimport { type UnsavedChanges } from '../../MainFrame/UnsavedChangesContext';\nimport ScrollView from '../../UI/ScrollView';\nimport EventsRootVariablesFinder from '../../Utils/EventsRootVariablesFinder';\n\ntype Props = {|\n  project: gdProject,\n  layout: gdLayout,\n  instances: Array<gdInitialInstance>,\n  onEditObjectByName: string => void,\n  onInstancesModified?: (Array<gdInitialInstance>) => void,\n  editInstanceVariables: gdInitialInstance => void,\n  unsavedChanges?: ?UnsavedChanges,\n  i18n: I18nType,\n|};\n\nexport default class InstancePropertiesEditor extends React.Component<Props> {\n  _instanceVariablesList: { current: null | VariablesList } = React.createRef();\n  schema: Schema = [\n    {\n      name: this.props.i18n._(t`Object`),\n      getValue: (instance: gdInitialInstance) => instance.getObjectName(),\n      nonFieldType: 'sectionTitle',\n      defaultValue: this.props.i18n._(t`Different objects`),\n    },\n    {\n      label: this.props.i18n._(t`Edit object`),\n      disabled: 'onValuesDifferent',\n      nonFieldType: 'button',\n      getValue: (instance: gdInitialInstance) => instance.getObjectName(),\n      onClick: (instance: gdInitialInstance) =>\n        this.props.onEditObjectByName(instance.getObjectName()),\n    },\n    {\n      name: this.props.i18n._(t`Instance`),\n      nonFieldType: 'sectionTitle',\n    },\n    {\n      name: this.props.i18n._(t`Position`),\n      type: 'row',\n      children: [\n        {\n          name: this.props.i18n._(t`X`),\n          valueType: 'number',\n          getValue: (instance: gdInitialInstance) => instance.getX(),\n          setValue: (instance: gdInitialInstance, newValue: number) =>\n            instance.setX(newValue),\n        },\n        {\n          name: this.props.i18n._(t`Y`),\n          valueType: 'number',\n          getValue: (instance: gdInitialInstance) => instance.getY(),\n          setValue: (instance: gdInitialInstance, newValue: number) =>\n            instance.setY(newValue),\n        },\n      ],\n    },\n    {\n      name: this.props.i18n._(t`Angle`),\n      valueType: 'number',\n      getValue: (instance: gdInitialInstance) => instance.getAngle(),\n      setValue: (instance: gdInitialInstance, newValue: number) =>\n        instance.setAngle(newValue),\n    },\n    {\n      name: this.props.i18n._(t`Lock position/angle in the editor`),\n      valueType: 'boolean',\n      getValue: (instance: gdInitialInstance) => instance.isLocked(),\n      setValue: (instance: gdInitialInstance, newValue: boolean) =>\n        instance.setLocked(newValue),\n    },\n    {\n      name: this.props.i18n._(t`Z Order`),\n      valueType: 'number',\n      getValue: (instance: gdInitialInstance) => instance.getZOrder(),\n      setValue: (instance: gdInitialInstance, newValue: number) =>\n        instance.setZOrder(newValue),\n    },\n    {\n      name: this.props.i18n._(t`Layer`),\n      valueType: 'string',\n      getChoices: () => enumerateLayers(this.props.layout),\n      getValue: (instance: gdInitialInstance) => instance.getLayer(),\n      setValue: (instance: gdInitialInstance, newValue: string) =>\n        instance.setLayer(newValue),\n    },\n    {\n      name: this.props.i18n._(t`Custom size`),\n      valueType: 'boolean',\n      getValue: (instance: gdInitialInstance) => instance.hasCustomSize(),\n      setValue: (instance: gdInitialInstance, newValue: boolean) =>\n        instance.setHasCustomSize(newValue),\n    },\n    {\n      name: 'custom-size-row',\n      type: 'row',\n      children: [\n        {\n          name: this.props.i18n._(t`Width`),\n          valueType: 'number',\n          getValue: (instance: gdInitialInstance) => instance.getCustomWidth(),\n          setValue: (instance: gdInitialInstance, newValue: number) =>\n            instance.setCustomWidth(Math.max(newValue, 0)),\n        },\n        {\n          name: this.props.i18n._(t`Height`),\n          valueType: 'number',\n          getValue: (instance: gdInitialInstance) => instance.getCustomHeight(),\n          setValue: (instance: gdInitialInstance, newValue: number) =>\n            instance.setCustomHeight(Math.max(newValue, 0)),\n        },\n      ],\n    },\n  ];\n\n  _renderEmpty() {\n    return (\n      <EmptyMessage>\n        <Trans>\n          Click on an instance in the scene to display its properties\n        </Trans>\n      </EmptyMessage>\n    );\n  }\n\n  _renderInstancesProperties() {\n    const { project, layout, instances } = this.props;\n    const instance = instances[0];\n    const associatedObjectName = instance.getObjectName();\n    const object = getObjectByName(project, layout, associatedObjectName);\n    //TODO: multiple instances support\n    const properties = instance.getCustomProperties(project, layout);\n    const instanceSchema = propertiesMapToSchema(\n      properties,\n      (instance: gdInitialInstance) =>\n        instance.getCustomProperties(project, layout),\n      (instance: gdInitialInstance, name, value) =>\n        instance.updateCustomProperty(name, value, project, layout)\n    );\n\n    return (\n      <ScrollView\n        autoHideScrollbar\n        key={instances\n          .map((instance: gdInitialInstance) => '' + instance.ptr)\n          .join(';')}\n      >\n        <Line>\n          <Column expand noMargin>\n            <Column>\n              <PropertiesEditor\n                unsavedChanges={this.props.unsavedChanges}\n                schema={this.schema.concat(instanceSchema)}\n                instances={instances}\n                onInstancesModified={this.props.onInstancesModified}\n              />\n              <Line alignItems=\"center\" justifyContent=\"space-between\">\n                <Text>\n                  <Trans>Instance Variables</Trans>\n                </Text>\n                <IconButton\n                  onClick={() => {\n                    this.props.editInstanceVariables(instance);\n                  }}\n                >\n                  <OpenInNew />\n                </IconButton>\n              </Line>\n            </Column>\n            <VariablesList\n              inheritedVariablesContainer={\n                object ? object.getVariables() : null\n              }\n              variablesContainer={instance.getVariables()}\n              onComputeAllVariableNames={() =>\n                object\n                  ? EventsRootVariablesFinder.findAllObjectVariables(\n                      project.getCurrentPlatform(),\n                      project,\n                      layout,\n                      object\n                    )\n                  : []\n              }\n              ref={this._instanceVariablesList}\n            />\n          </Column>\n        </Line>\n      </ScrollView>\n    );\n  }\n\n  render() {\n    const { instances } = this.props;\n\n    return (\n      <Background>\n        {!instances || !instances.length\n          ? this._renderEmpty()\n          : this._renderInstancesProperties()}\n      </Background>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport {\n  AutoSizer,\n  Table as RVTable,\n  Column as RVColumn,\n  SortDirection,\n} from 'react-virtualized';\nimport IconButton from '../../UI/IconButton';\nimport KeyboardShortcuts from '../../UI/KeyboardShortcuts';\nimport ThemeConsumer from '../../UI/Theme/ThemeConsumer';\nimport SearchBar, {\n  useShouldAutofocusSearchbar,\n  type SearchBarInterface,\n} from '../../UI/SearchBar';\nimport Lock from '@material-ui/icons/Lock';\nimport LockOpen from '@material-ui/icons/LockOpen';\nconst gd /*TODO: add flow in this file */ = global.gd;\n\ntype State = {|\n  searchText: string,\n  sortBy: string,\n  sortDirection: SortDirection,\n|};\n\ntype Props = {|\n  instances: gdInitialInstancesContainer,\n  selectedInstances: Array<gdInitialInstance>,\n  onSelectInstances: (Array<gdInitialInstance>, boolean) => void,\n|};\n\ntype RenderedRowInfo = {\n  instance: gdInitialInstance,\n  name: string,\n  locked: boolean,\n  x: string,\n  y: string,\n  angle: string,\n  layer: string,\n  zOrder: string,\n};\n\nconst styles = {\n  container: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'stretch',\n  },\n};\n\nconst compareStrings = (x: string, y: string, direction: number): number => {\n  x = x.toLowerCase();\n  y = y.toLowerCase();\n\n  if (x < y) return direction * 1;\n  if (x > y) return direction * -1;\n  return 0;\n};\n\nexport default class InstancesList extends Component<Props, State> {\n  state = {\n    searchText: '',\n    sortBy: '',\n    sortDirection: SortDirection.ASC,\n  };\n  renderedRows: Array<RenderedRowInfo> = [];\n  instanceRowRenderer: ?typeof gd.InitialInstanceJSFunctor;\n  table: ?typeof RVTable;\n  _searchBar = React.createRef<SearchBarInterface>();\n  _keyboardShortcuts = new KeyboardShortcuts({\n    isActive: () => false,\n    shortcutCallbacks: {},\n  });\n\n  componentDidMount() {\n    if (useShouldAutofocusSearchbar() && this._searchBar.current)\n      this._searchBar.current.focus();\n  }\n\n  componentWillMount() {\n    // Functor used to display an instance row\n    this.instanceRowRenderer = new gd.InitialInstanceJSFunctor();\n    this.instanceRowRenderer.invoke = instancePtr => {\n      const { searchText } = this.state;\n      const instance = gd.wrapPointer(instancePtr, gd.InitialInstance);\n\n      const name: string = instance.getObjectName();\n      if (\n        !searchText ||\n        name.toLowerCase().indexOf(searchText.toLowerCase()) !== -1\n      ) {\n        this.renderedRows.push({\n          instance,\n          name,\n          locked: instance.isLocked(),\n          x: instance.getX().toFixed(2),\n          y: instance.getY().toFixed(2),\n          angle: instance.getAngle().toFixed(2),\n          layer: instance.getLayer(),\n          zOrder: instance.getZOrder(),\n        });\n      }\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.instanceRowRenderer) this.instanceRowRenderer.delete();\n  }\n\n  _onRowClick = ({ index }: { index: number }) => {\n    if (!this.renderedRows[index]) return;\n\n    this.props.onSelectInstances(\n      [this.renderedRows[index].instance],\n      this._keyboardShortcuts.shouldMultiSelect()\n    );\n  };\n\n  _rowGetter = ({ index }: { index: number }) => {\n    return this.renderedRows[index];\n  };\n\n  _rowClassName = ({ index }: { index: number }) => {\n    if (index < 0) {\n      return 'tableHeaderRow';\n    } else {\n      const row = this.renderedRows[index];\n      if (row && this.props.selectedInstances.indexOf(row.instance) !== -1)\n        return 'tableSelectedRow';\n\n      return index % 2 === 0 ? 'tableEvenRow' : 'tableOddRow';\n    }\n  };\n\n  _renderLockCell = ({ rowData }: { rowData: RenderedRowInfo }) => {\n    return (\n      <IconButton\n        size=\"small\"\n        onClick={() => {\n          rowData.instance.setLocked(!rowData.instance.isLocked());\n        }}\n      >\n        {rowData.instance.isLocked() ? <Lock /> : <LockOpen />}\n      </IconButton>\n    );\n  };\n\n  _selectFirstInstance = () => {\n    if (this.renderedRows.length) {\n      this.props.onSelectInstances([this.renderedRows[0].instance], false);\n    }\n  };\n\n  _sort = ({\n    sortBy,\n    sortDirection,\n  }: {\n    sortBy: string,\n    sortDirection: SortDirection,\n  }) => {\n    this.setState({ sortBy, sortDirection });\n  };\n\n  _orderRenderedRows = () => {\n    this.renderedRows.sort(\n      (a: RenderedRowInfo, b: RenderedRowInfo): number => {\n        const direction =\n          this.state.sortDirection === SortDirection.ASC ? 1 : -1;\n\n        switch (this.state.sortBy) {\n          case 'name':\n            return compareStrings(a.name, b.name, direction);\n          case 'x':\n            return direction * (parseFloat(a.x) - parseFloat(b.x));\n          case 'y':\n            return direction * (parseFloat(a.y) - parseFloat(b.y));\n          case 'angle':\n            return direction * (parseFloat(a.angle) - parseFloat(b.angle));\n          case 'layer':\n            return compareStrings(a.layer, b.layer, direction);\n          case 'locked':\n            return direction * (Number(a.locked) - Number(b.locked));\n          case 'zOrder':\n            return direction * (parseFloat(a.zOrder) - parseFloat(b.zOrder));\n\n          default:\n            return 0;\n        }\n      }\n    );\n  };\n\n  render() {\n    const { searchText, sortBy, sortDirection } = this.state;\n    const { instances } = this.props;\n\n    if (!this.instanceRowRenderer) return null;\n\n    this.renderedRows.length = 0;\n    instances.iterateOverInstances(this.instanceRowRenderer);\n    this._orderRenderedRows();\n\n    // Force RVTable component to be mounted again if instances\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const tableKey = instances.ptr;\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <div style={styles.container}>\n            <div\n              style={{ flex: 1 }}\n              onKeyDown={this._keyboardShortcuts.onKeyDown}\n              onKeyUp={this._keyboardShortcuts.onKeyUp}\n            >\n              <AutoSizer>\n                {({ height, width }) => (\n                  <RVTable\n                    ref={table => (this.table = table)}\n                    key={tableKey}\n                    headerHeight={30}\n                    height={height}\n                    className={`gd-table ${muiTheme.tableRootClassName}`}\n                    headerClassName={'tableHeaderColumn'}\n                    rowCount={this.renderedRows.length}\n                    rowGetter={this._rowGetter}\n                    rowHeight={32}\n                    onRowClick={this._onRowClick}\n                    rowClassName={this._rowClassName}\n                    sort={this._sort}\n                    sortBy={sortBy}\n                    sortDirection={sortDirection}\n                    width={width}\n                  >\n                    <RVColumn\n                      label={<Trans>Object name</Trans>}\n                      dataKey=\"name\"\n                      width={width * 0.35}\n                      className={'tableColumn'}\n                    />\n                    <RVColumn\n                      label=\"\"\n                      dataKey=\"locked\"\n                      width={width * 0.05}\n                      className={'tableColumn'}\n                      cellRenderer={this._renderLockCell}\n                    />\n                    <RVColumn\n                      label={<Trans>X</Trans>}\n                      dataKey=\"x\"\n                      width={width * 0.1}\n                      className={'tableColumn'}\n                    />\n                    <RVColumn\n                      label={<Trans>Y</Trans>}\n                      dataKey=\"y\"\n                      width={width * 0.1}\n                      className={'tableColumn'}\n                    />\n                    <RVColumn\n                      label={<Trans>Angle</Trans>}\n                      dataKey=\"angle\"\n                      width={width * 0.1}\n                      className={'tableColumn'}\n                    />\n                    <RVColumn\n                      label={<Trans>Layer</Trans>}\n                      dataKey=\"layer\"\n                      width={width * 0.2}\n                      className={'tableColumn'}\n                    />\n                    <RVColumn\n                      label={<Trans>Z Order</Trans>}\n                      dataKey=\"zOrder\"\n                      width={width * 0.1}\n                      className={'tableColumn'}\n                    />\n                  </RVTable>\n                )}\n              </AutoSizer>\n            </div>\n            <SearchBar\n              value={searchText}\n              onChange={searchText =>\n                this.setState({\n                  searchText,\n                })\n              }\n              onRequestSearch={this._selectFirstInstance}\n              ref={this._searchBar}\n            />\n          </div>\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport Text from '../UI/Text';\nimport enumerateLayers from './EnumerateLayers';\n\nexport default class VariablesEditorDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedLayer: '',\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (!this.props.open && newProps.open) {\n      this.setState({\n        selectedLayer: '',\n      });\n    }\n  }\n\n  render() {\n    if (!this.props.layersContainer || !this.props.open) return null;\n\n    const actions = [\n      <FlatButton\n        key=\"cancel\"\n        label={<Trans>Cancel</Trans>}\n        keyboardFocused={true}\n        onClick={() => this.props.onClose(false)}\n      />,\n      <FlatButton\n        key=\"remove\"\n        label={<Trans>Remove objects</Trans>}\n        onClick={() => this.props.onClose(true, null)}\n      />,\n      <FlatButton\n        key=\"move\"\n        label={<Trans>Move objects</Trans>}\n        primary={true}\n        onClick={() => this.props.onClose(true, this.state.selectedLayer)}\n      />,\n    ];\n\n    const layers = enumerateLayers(this.props.layersContainer);\n    const choices = layers\n      .filter(({ value }) => {\n        return value !== this.props.layerRemoved;\n      })\n      .map(({ value, label }) => (\n        <SelectOption key={value} value={value} primaryText={label} />\n      ));\n\n    return (\n      <Dialog\n        title={<Trans>Objects on {this.props.layerRemoved}</Trans>}\n        actions={actions}\n        cannotBeDismissed={false}\n        open={this.props.open}\n        onRequestClose={this.props.onCancel}\n      >\n        <Text>\n          <Trans>Move objects on layer {this.props.layerRemoved} to:</Trans>\n        </Text>\n        <SelectField\n          value={this.state.selectedLayer}\n          onChange={(event, index, newValue) => {\n            this.setState({ selectedLayer: newValue });\n          }}\n        >\n          {choices}\n        </SelectField>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport ColorField from '../UI/ColorField';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport InlineCheckbox from '../UI/InlineCheckbox';\nimport {\n  rgbColorToRGBString,\n  rgbStringAndAlphaToRGBColor,\n} from '../Utils/ColorTransformer';\nimport { useSerializableObjectCancelableEditor } from '../Utils/SerializableObjectCancelableEditor';\nimport DismissableAlertMessage from '../UI/DismissableAlertMessage';\nimport Text from '../UI/Text';\nimport useForceUpdate from '../Utils/UseForceUpdate';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport HotReloadPreviewButton, {\n  type HotReloadPreviewButtonProps,\n} from '../HotReload/HotReloadPreviewButton';\nimport HelpButton from '../UI/HelpButton';\nimport { Tab, Tabs } from '../UI/Tabs';\nimport EffectsList from '../EffectsList';\nimport { Column, Spacer } from '../UI/Grid';\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  layer: gdLayer,\n  initialInstances: gdInitialInstancesContainer,\n\n  initialTab: 'properties' | 'effects',\n\n  onClose: () => void,\n\n  // Preview:\n  hotReloadPreviewButtonProps: HotReloadPreviewButtonProps,\n|};\n\nconst LayerEditorDialog = (props: Props) => {\n  const {\n    initialTab,\n    layer,\n    initialInstances,\n    onClose,\n    hotReloadPreviewButtonProps,\n  } = props;\n  const forceUpdate = useForceUpdate();\n  const onCancelChanges = useSerializableObjectCancelableEditor({\n    serializableObject: layer,\n    onCancel: onClose,\n  });\n  const [currentTab, setCurrentTab] = React.useState(initialTab);\n  const { instancesCount, highestZOrder } = React.useMemo(\n    () => {\n      const zOrderFinder = new gd.HighestZOrderFinder();\n      zOrderFinder.restrictSearchToLayer(layer.getName());\n\n      initialInstances.iterateOverInstances(zOrderFinder);\n      const instancesCount = zOrderFinder.getInstancesCount();\n      const highestZOrder = zOrderFinder.getHighestZOrder();\n      zOrderFinder.delete();\n      return { instancesCount, highestZOrder };\n    },\n    [layer, initialInstances]\n  );\n\n  return (\n    <Dialog\n      onApply={onClose}\n      noMargin\n      open\n      title={<Trans>Edit Layer Properties</Trans>}\n      secondaryActions={[\n        <HelpButton\n          key=\"help\"\n          helpPagePath={'/interface/scene-editor/layer-effects' /* TODO */}\n        />,\n        <HotReloadPreviewButton\n          key=\"hot-reload-preview-button\"\n          {...hotReloadPreviewButtonProps}\n        />,\n      ]}\n      actions={[\n        <FlatButton\n          label={<Trans>Cancel</Trans>}\n          onClick={onCancelChanges}\n          key={'Cancel'}\n        />,\n        <FlatButton\n          label={<Trans>Apply</Trans>}\n          primary\n          keyboardFocused\n          onClick={onClose}\n          key={'Apply'}\n        />,\n      ]}\n      onRequestClose={onCancelChanges}\n      fullHeight\n      flexBody\n    >\n      <Column expand noMargin useFullHeight>\n        <Tabs value={currentTab} onChange={setCurrentTab}>\n          <Tab label={<Trans>Properties</Trans>} value=\"properties\" />\n          <Tab label={<Trans>Effects</Trans>} value=\"effects\" />\n        </Tabs>\n        {currentTab === 'properties' && (\n          <ColumnStackLayout>\n            {layer.isLightingLayer() ? (\n              <DismissableAlertMessage\n                kind=\"info\"\n                identifier=\"lighting-layer-usage\"\n              >\n                <Trans>\n                  The lighting layer renders an ambient light on the scene. All\n                  lights should be placed on this layer so that shadows are\n                  properly rendered. By default, the layer follows the base\n                  layer camera. Uncheck this if you want to manually move the\n                  camera using events.\n                </Trans>\n              </DismissableAlertMessage>\n            ) : null}\n            <Text>\n              There are {instancesCount} instances of objects on this layer.\n            </Text>\n            {!props.project.getUseDeprecatedZeroAsDefaultZOrder() && (\n              <Text>\n                Objects created using events on this layer will be given a \"Z\n                order\" of {highestZOrder + 1}, so that they appear in front of\n                all objects of this layer. You can change this using the action\n                to change an object Z order, after using an action to create it.\n              </Text>\n            )}\n            <InlineCheckbox\n              label={<Trans>Hide the layer</Trans>}\n              checked={!layer.getVisibility()}\n              onCheck={(e, checked) => {\n                layer.setVisibility(!checked);\n                forceUpdate();\n              }}\n              tooltipOrHelperText={\n                <Trans>\n                  This setting changes the visibility of the entire layer.\n                  Objects on the layer will not be treated as \"hidden\" for event\n                  conditions or actions.\n                </Trans>\n              }\n            />\n            {layer.isLightingLayer() ? (\n              <React.Fragment>\n                <Text size=\"title\">\n                  <Trans>Lighting settings</Trans>\n                </Text>\n                <InlineCheckbox\n                  label={<Trans>Automatically follow the base layer.</Trans>}\n                  checked={layer.isFollowingBaseLayerCamera()}\n                  onCheck={(e, checked) => {\n                    layer.setFollowBaseLayerCamera(checked);\n                    forceUpdate();\n                  }}\n                />\n                <ColorField\n                  fullWidth\n                  floatingLabelText={<Trans>Ambient light color</Trans>}\n                  disableAlpha\n                  color={rgbColorToRGBString({\n                    r: layer.getAmbientLightColorRed(),\n                    g: layer.getAmbientLightColorGreen(),\n                    b: layer.getAmbientLightColorBlue(),\n                  })}\n                  onChange={color => {\n                    const rgbColor = rgbStringAndAlphaToRGBColor(color);\n                    if (rgbColor) {\n                      layer.setAmbientLightColor(\n                        rgbColor.r,\n                        rgbColor.g,\n                        rgbColor.b\n                      );\n                      forceUpdate();\n                    }\n                  }}\n                />\n              </React.Fragment>\n            ) : (\n              // Add some space to avoid a dialog to short that would show scrollbars\n              <React.Fragment>\n                <Spacer />\n                <Spacer />\n              </React.Fragment>\n            )}\n          </ColumnStackLayout>\n        )}\n        {currentTab === 'effects' && (\n          <EffectsList\n            target=\"layer\"\n            project={props.project}\n            resourceSources={props.resourceSources}\n            onChooseResource={props.onChooseResource}\n            resourceExternalEditors={props.resourceExternalEditors}\n            effectsContainer={layer.getEffects()}\n            onEffectsUpdated={\n              forceUpdate /*Force update to ensure dialog is properly positioned*/\n            }\n          />\n        )}\n      </Column>\n    </Dialog>\n  );\n};\n\nexport default LayerEditorDialog;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport React, { Component, useEffect } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport ObjectsEditorService from './ObjectsEditorService';\nimport Dialog from '../UI/Dialog';\nimport HelpButton from '../UI/HelpButton';\nimport BehaviorsEditor from '../BehaviorsEditor';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport { useSerializableObjectCancelableEditor } from '../Utils/SerializableObjectCancelableEditor';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport { Column, Line } from '../UI/Grid';\nimport { type EditorProps } from './Editors/EditorProps.flow';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\nimport useForceUpdate from '../Utils/UseForceUpdate';\nimport HotReloadPreviewButton, {\n  type HotReloadPreviewButtonProps,\n} from '../HotReload/HotReloadPreviewButton';\nimport EffectsList from '../EffectsList';\nimport VariablesList from '../VariablesList/index';\nimport { sendBehaviorsEditorShown } from '../Utils/Analytics/EventSender';\nconst gd: libGDevelop = global.gd;\n\nexport type ObjectEditorTab =\n  | 'properties'\n  | 'behaviors'\n  | 'variables'\n  | 'effects';\n\ntype Props = {|\n  open: boolean,\n  object: ?gdObject,\n\n  onApply: () => void,\n  onCancel: () => void,\n\n  // Object renaming:\n  onRename: string => void,\n  canRenameObject: string => boolean,\n\n  // Passed down to object editors:\n  project: gdProject,\n  onComputeAllVariableNames: () => Array<string>,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  unsavedChanges?: UnsavedChanges,\n  onUpdateBehaviorsSharedData: () => void,\n  initialTab: ?ObjectEditorTab,\n\n  // Preview:\n  hotReloadPreviewButtonProps: HotReloadPreviewButtonProps,\n|};\n\ntype InnerDialogProps = {|\n  ...Props,\n  editorComponent: ?Class<React.Component<EditorProps, any>>,\n  objectName: string,\n  helpPagePath: ?string,\n  object: gdObject,\n|};\n\nconst InnerDialog = (props: InnerDialogProps) => {\n  const [currentTab, setCurrentTab] = React.useState<ObjectEditorTab>(\n    props.initialTab || 'properties'\n  );\n  const [newObjectName, setNewObjectName] = React.useState(props.objectName);\n  const forceUpdate = useForceUpdate();\n  const onCancelChanges = useSerializableObjectCancelableEditor({\n    serializableObject: props.object,\n    useProjectToUnserialize: props.project,\n    onCancel: props.onCancel,\n  });\n\n  const objectMetadata = React.useMemo(\n    () =>\n      gd.MetadataProvider.getObjectMetadata(\n        props.project.getCurrentPlatform(),\n        props.object.getType()\n      ),\n    [props.project, props.object]\n  );\n\n  const EditorComponent = props.editorComponent;\n\n  const onApply = () => {\n    props.onApply();\n    // Do the renaming *after* applying changes, as \"withSerializableObject\"\n    // HOC will unserialize the object to apply modifications, which will\n    // override the name.\n    props.onRename(newObjectName);\n  };\n\n  useEffect(\n    () => {\n      if (currentTab === 'behaviors') {\n        sendBehaviorsEditorShown({ parentEditor: 'object-editor-dialog' });\n      }\n    },\n    [currentTab]\n  );\n\n  return (\n    <Dialog\n      onApply={onApply}\n      key={props.object && props.object.ptr}\n      secondaryActions={[\n        <HelpButton key=\"help-button\" helpPagePath={props.helpPagePath} />,\n        <HotReloadPreviewButton\n          key=\"hot-reload-preview-button\"\n          {...props.hotReloadPreviewButtonProps}\n        />,\n      ]}\n      actions={[\n        <FlatButton\n          key=\"cancel\"\n          label={<Trans>Cancel</Trans>}\n          onClick={onCancelChanges}\n        />,\n        <FlatButton\n          key=\"apply\"\n          label={<Trans>Apply</Trans>}\n          id=\"apply-button\"\n          primary\n          keyboardFocused\n          onClick={onApply}\n        />,\n      ]}\n      noMargin\n      onRequestClose={onCancelChanges}\n      cannotBeDismissed={true}\n      open={props.open}\n      noTitleMargin\n      fullHeight\n      flexBody\n      title={\n        <div>\n          <Tabs value={currentTab} onChange={setCurrentTab}>\n            <Tab\n              label={<Trans>Properties</Trans>}\n              value={'properties'}\n              key={'properties'}\n            />\n            <Tab\n              label={<Trans>Behaviors</Trans>}\n              value={'behaviors'}\n              key={'behaviors'}\n              id=\"behaviors-tab\"\n            />\n            <Tab\n              label={<Trans>Variables</Trans>}\n              value={'variables'}\n              key={'variables'}\n            />\n            {objectMetadata.isUnsupportedBaseObjectCapability(\n              'effect'\n            ) ? null : (\n              <Tab\n                label={<Trans>Effects</Trans>}\n                value={'effects'}\n                key={'effects'}\n              />\n            )}\n          </Tabs>\n        </div>\n      }\n      id=\"object-editor-dialog\"\n    >\n      {currentTab === 'properties' && EditorComponent && (\n        <Column\n          noMargin\n          expand\n          useFullHeight={\n            true /* Ensure editors with large/scrolling children won't grow outside of the dialog. */\n          }\n          noOverflowParent={\n            true /* Ensure editors with large/scrolling children won't grow outside of the dialog. */\n          }\n        >\n          <Line>\n            <Column expand>\n              <SemiControlledTextField\n                fullWidth\n                commitOnBlur\n                floatingLabelText={<Trans>Object name</Trans>}\n                floatingLabelFixed\n                value={newObjectName}\n                hintText={t`Object Name`}\n                onChange={text => {\n                  if (text === newObjectName) return;\n\n                  if (props.canRenameObject(text)) {\n                    setNewObjectName(text);\n                  }\n                }}\n              />\n            </Column>\n          </Line>\n          <EditorComponent\n            object={props.object}\n            project={props.project}\n            resourceSources={props.resourceSources}\n            onChooseResource={props.onChooseResource}\n            resourceExternalEditors={props.resourceExternalEditors}\n            onSizeUpdated={\n              forceUpdate /*Force update to ensure dialog is properly positionned*/\n            }\n            objectName={props.objectName}\n          />\n        </Column>\n      )}\n      {currentTab === 'behaviors' && (\n        <BehaviorsEditor\n          object={props.object}\n          project={props.project}\n          resourceSources={props.resourceSources}\n          onChooseResource={props.onChooseResource}\n          resourceExternalEditors={props.resourceExternalEditors}\n          onSizeUpdated={\n            forceUpdate /*Force update to ensure dialog is properly positionned*/\n          }\n          onUpdateBehaviorsSharedData={props.onUpdateBehaviorsSharedData}\n        />\n      )}\n      {currentTab === 'variables' && (\n        <VariablesList\n          variablesContainer={props.object.getVariables()}\n          emptyPlaceholderTitle={<Trans>Add your first object variable</Trans>}\n          emptyPlaceholderDescription={\n            <Trans>\n              These variables hold additional information on an object.\n            </Trans>\n          }\n          helpPagePath={'/all-features/variables/object-variables'}\n          onSizeUpdated={\n            forceUpdate /*Force update to ensure dialog is properly positioned*/\n          }\n          onComputeAllVariableNames={props.onComputeAllVariableNames}\n        />\n      )}\n      {currentTab === 'effects' && (\n        <EffectsList\n          target=\"object\"\n          project={props.project}\n          resourceSources={props.resourceSources}\n          onChooseResource={props.onChooseResource}\n          resourceExternalEditors={props.resourceExternalEditors}\n          effectsContainer={props.object.getEffects()}\n          onEffectsUpdated={\n            forceUpdate /*Force update to ensure dialog is properly positionned*/\n          }\n        />\n      )}\n    </Dialog>\n  );\n};\n\ntype State = {|\n  editorComponent: ?Class<React.Component<EditorProps, any>>,\n  castToObjectType: ?(object: gdObject) => gdObject,\n  helpPagePath: ?string,\n  objectName: string,\n|};\n\nexport default class ObjectEditorDialog extends Component<Props, State> {\n  state = {\n    editorComponent: null,\n    castToObjectType: null,\n    helpPagePath: null,\n    objectName: '',\n  };\n\n  componentWillMount() {\n    this._loadFrom(this.props.object);\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      (!this.props.open && newProps.open) ||\n      (newProps.open && this.props.object !== newProps.object)\n    ) {\n      this._loadFrom(newProps.object);\n    }\n  }\n\n  _loadFrom(object: ?gdObject) {\n    if (!object) return;\n\n    const editorConfiguration = ObjectsEditorService.getEditorConfiguration(\n      object.getType()\n    );\n    if (!editorConfiguration) {\n      return this.setState({\n        editorComponent: null,\n        castToObjectType: null,\n      });\n    }\n\n    this.setState({\n      editorComponent: editorConfiguration.component,\n      helpPagePath: editorConfiguration.helpPagePath,\n      castToObjectType: editorConfiguration.castToObjectType,\n      objectName: object.getName(),\n    });\n  }\n\n  render() {\n    const { object, initialTab } = this.props;\n    const { editorComponent, castToObjectType, helpPagePath } = this.state;\n\n    if (!object || !castToObjectType) return null;\n\n    return (\n      <InnerDialog\n        {...this.props}\n        editorComponent={editorComponent}\n        key={this.props.object && this.props.object.ptr}\n        helpPagePath={helpPagePath}\n        object={castToObjectType(object)}\n        objectName={this.state.objectName}\n        initialTab={initialTab}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Checkbox from '../../UI/Checkbox';\nimport { Line, Column } from '../../UI/Grid';\nimport ColorPicker from '../../UI/ColorField/ColorPicker';\nimport MiniToolbar, { MiniToolbarText } from '../../UI/MiniToolbar';\nimport ResourceSelector from '../../ResourcesList/ResourceSelector';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type EditorProps } from './EditorProps.flow';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nconst gd = global.gd;\n\nconst toolbarItemStyle = {\n  marginRight: 10,\n};\n\nconst styles = {\n  sizeTextField: {\n    width: 90,\n    ...toolbarItemStyle,\n  },\n  resourcesSelector: { alignSelf: 'center' },\n  toolbarItem: toolbarItemStyle,\n  checkbox: toolbarItemStyle,\n};\n\nexport default class TextEditor extends React.Component<EditorProps, void> {\n  render() {\n    const {\n      object,\n      project,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n    } = this.props;\n    const textObject = gd.asTextObject(object);\n\n    return (\n      <Column noMargin>\n        <MiniToolbar>\n          <MiniToolbarText firstChild>\n            <Trans>Size:</Trans>\n          </MiniToolbarText>\n          <SemiControlledTextField\n            commitOnBlur\n            type=\"number\"\n            margin=\"none\"\n            style={styles.sizeTextField}\n            value={textObject.getCharacterSize()}\n            onChange={value => {\n              textObject.setCharacterSize(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <MiniToolbarText>\n            <Trans>Color:</Trans>\n          </MiniToolbarText>\n          <ColorPicker\n            style={styles.toolbarItem}\n            disableAlpha\n            color={{\n              r: textObject.getColorR(),\n              g: textObject.getColorG(),\n              b: textObject.getColorB(),\n              a: 255,\n            }}\n            onChangeComplete={color => {\n              textObject.setColor(color.rgb.r, color.rgb.g, color.rgb.b);\n              this.forceUpdate();\n            }}\n          />\n          <Checkbox\n            label={<Trans>Bold</Trans>}\n            checked={textObject.isBold()}\n            onCheck={(e, checked) => {\n              textObject.setBold(checked);\n              this.forceUpdate();\n            }}\n            style={styles.checkbox}\n          />\n          <Checkbox\n            label={<Trans>Italic</Trans>}\n            checked={textObject.isItalic()}\n            onCheck={(e, checked) => {\n              textObject.setItalic(checked);\n              this.forceUpdate();\n            }}\n            style={styles.checkbox}\n          />\n          <MiniToolbarText>\n            <Trans>Font:</Trans>\n          </MiniToolbarText>\n          <ResourceSelector\n            margin=\"none\"\n            project={project}\n            resourceSources={resourceSources}\n            onChooseResource={onChooseResource}\n            resourceExternalEditors={resourceExternalEditors}\n            resourcesLoader={ResourcesLoader}\n            resourceKind=\"font\"\n            fullWidth\n            canBeReset\n            initialResourceName={textObject.getFontName()}\n            onChange={resourceName => {\n              textObject.setFontName(resourceName);\n              this.forceUpdate();\n            }}\n            hintText={<Trans>Choose a font</Trans>}\n            style={styles.resourcesSelector}\n          />\n        </MiniToolbar>\n        <Line noMargin>\n          <Column expand>\n            <Line>\n              <SemiControlledTextField\n                floatingLabelText={<Trans>Initial text to display</Trans>}\n                floatingLabelFixed\n                commitOnBlur\n                hintText={t`Enter the text to be displayed by the object`}\n                fullWidth\n                multiline\n                rows={8}\n                rowsMax={8}\n                value={textObject.getString()}\n                onChange={value => {\n                  textObject.setString(value);\n                  this.forceUpdate();\n                  this.props.onSizeUpdated();\n                }}\n              />\n            </Line>\n          </Column>\n        </Line>\n      </Column>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport ResourceSelectorWithThumbnail from '../../ResourcesList/ResourceSelectorWithThumbnail';\nimport { type EditorProps } from './EditorProps.flow';\nimport { ResponsiveLineStackLayout, ColumnStackLayout } from '../../UI/Layout';\nconst gd = global.gd;\n\nexport default class TiledSpriteEditor extends React.Component<\n  EditorProps,\n  void\n> {\n  render() {\n    const {\n      object,\n      project,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n    } = this.props;\n    const tiledSpriteObject = gd.asTiledSpriteObject(object);\n\n    return (\n      <ColumnStackLayout>\n        <ResourceSelectorWithThumbnail\n          project={project}\n          resourceSources={resourceSources}\n          onChooseResource={onChooseResource}\n          resourceKind=\"image\"\n          resourceName={tiledSpriteObject.getTexture()}\n          resourceExternalEditors={resourceExternalEditors}\n          onChange={resourceName => {\n            tiledSpriteObject.setTexture(resourceName);\n            this.forceUpdate();\n          }}\n          floatingLabelText={<Trans>Select an image</Trans>}\n        />\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Default width (in pixels)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={tiledSpriteObject.getWidth()}\n            onChange={value => {\n              tiledSpriteObject.setWidth(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Default height (in pixels)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={tiledSpriteObject.getHeight()}\n            onChange={value => {\n              tiledSpriteObject.setHeight(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n      </ColumnStackLayout>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Checkbox from '../../UI/Checkbox';\nimport ResourceSelectorWithThumbnail from '../../ResourcesList/ResourceSelectorWithThumbnail';\nimport { type EditorProps } from './EditorProps.flow';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport { ResponsiveLineStackLayout, ColumnStackLayout } from '../../UI/Layout';\nconst gd = global.gd;\n\nexport default class PanelSpriteEditor extends React.Component<\n  EditorProps,\n  void\n> {\n  render() {\n    const {\n      object,\n      project,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n    } = this.props;\n    const panelSpriteObject = gd.asPanelSpriteObject(object);\n\n    return (\n      <ColumnStackLayout>\n        <ResourceSelectorWithThumbnail\n          project={project}\n          resourceSources={resourceSources}\n          onChooseResource={onChooseResource}\n          resourceExternalEditors={resourceExternalEditors}\n          resourceKind=\"image\"\n          resourceName={panelSpriteObject.getTexture()}\n          onChange={resourceName => {\n            panelSpriteObject.setTexture(resourceName);\n            this.forceUpdate();\n          }}\n          floatingLabelText={<Trans>Select an image</Trans>}\n        />\n        <Checkbox\n          label={\n            <Trans>\n              Repeat borders and center textures (instead of stretching them)\n            </Trans>\n          }\n          checked={panelSpriteObject.isTiled()}\n          onCheck={(e, checked) => {\n            panelSpriteObject.setTiled(checked);\n            this.forceUpdate();\n          }}\n        />\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Top margin</Trans>}\n            fullWidth\n            type=\"number\"\n            value={panelSpriteObject.getTopMargin()}\n            onChange={value => {\n              panelSpriteObject.setTopMargin(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Bottom margin</Trans>}\n            fullWidth\n            type=\"number\"\n            value={panelSpriteObject.getBottomMargin()}\n            onChange={value => {\n              panelSpriteObject.setBottomMargin(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Left margin</Trans>}\n            fullWidth\n            type=\"number\"\n            value={panelSpriteObject.getLeftMargin()}\n            onChange={value => {\n              panelSpriteObject.setLeftMargin(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Right margin</Trans>}\n            fullWidth\n            type=\"number\"\n            value={panelSpriteObject.getRightMargin()}\n            onChange={value => {\n              panelSpriteObject.setRightMargin(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Default width (in pixels)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={panelSpriteObject.getWidth()}\n            onChange={value => {\n              panelSpriteObject.setWidth(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Default height (in pixels)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={panelSpriteObject.getHeight()}\n            onChange={value => {\n              panelSpriteObject.setHeight(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n      </ColumnStackLayout>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport SpritesList from './SpritesList';\nimport Add from '@material-ui/icons/Add';\nimport Delete from '@material-ui/icons/Delete';\nimport IconButton from '../../../UI/IconButton';\nimport FlatButton from '../../../UI/FlatButton';\nimport RaisedButton from '../../../UI/RaisedButton';\nimport { mapFor } from '../../../Utils/MapFor';\nimport SemiControlledTextField from '../../../UI/SemiControlledTextField';\nimport Dialog from '../../../UI/Dialog';\nimport HelpButton from '../../../UI/HelpButton';\nimport MiniToolbar, { MiniToolbarText } from '../../../UI/MiniToolbar';\nimport DragHandle from '../../../UI/DragHandle';\nimport ContextMenu, {\n  type ContextMenuInterface,\n} from '../../../UI/Menu/ContextMenu';\nimport { showWarningBox } from '../../../UI/Messages/MessageBox';\nimport ResourcesLoader from '../../../ResourcesLoader';\nimport PointsEditor from './PointsEditor';\nimport CollisionMasksEditor from './CollisionMasksEditor';\nimport Window from '../../../Utils/Window';\nimport {\n  deleteSpritesFromAnimation,\n  duplicateSpritesInAnimation,\n} from './Utils/SpriteObjectHelper';\nimport { type EditorProps } from '../EditorProps.flow';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../../../ResourcesList/ResourceExternalEditor.flow';\nimport { Column } from '../../../UI/Grid';\nimport { ResponsiveLineStackLayout } from '../../../UI/Layout';\nimport ScrollView from '../../../UI/ScrollView';\nimport Checkbox from '../../../UI/Checkbox';\nimport useForceUpdate from '../../../Utils/UseForceUpdate';\nimport { EmptyPlaceholder } from '../../../UI/EmptyPlaceholder';\n\nconst gd: libGDevelop = global.gd;\n\ntype AnimationProps = {|\n  animation: gdAnimation,\n  id: number,\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  onRemove: () => void,\n  resourcesLoader: typeof ResourcesLoader,\n  onSpriteContextMenu: (x: number, y: number, sprite: gdSprite) => void,\n  selectedSprites: {\n    [number]: boolean,\n  },\n  onSelectSprite: (sprite: gdSprite, selected: boolean) => void,\n  onReplaceDirection: (\n    directionIndex: number,\n    newDirection: gdDirection\n  ) => void,\n  objectName: string,\n  onChangeName: string => void,\n|};\n\nclass Animation extends React.Component<AnimationProps, void> {\n  render() {\n    const {\n      animation,\n      id,\n      project,\n      resourceSources,\n      onRemove,\n      onChooseResource,\n      resourceExternalEditors,\n      resourcesLoader,\n      onSpriteContextMenu,\n      selectedSprites,\n      onSelectSprite,\n      onReplaceDirection,\n      objectName,\n      onChangeName,\n    } = this.props;\n\n    const animationName = animation.getName();\n    return (\n      <div>\n        <MiniToolbar>\n          <DragHandle />\n          <MiniToolbarText>Animation #{id} </MiniToolbarText>\n          <Column expand>\n            <SemiControlledTextField\n              commitOnBlur\n              margin=\"none\"\n              value={animation.getName()}\n              hintText={t`Optional animation name`}\n              onChange={text => onChangeName(text)}\n              fullWidth\n            />\n          </Column>\n          <IconButton onClick={onRemove}>\n            <Delete />\n          </IconButton>\n        </MiniToolbar>\n        {mapFor(0, animation.getDirectionsCount(), i => {\n          const direction = animation.getDirection(i);\n          return (\n            <SpritesList\n              direction={direction}\n              key={i}\n              project={project}\n              resourcesLoader={resourcesLoader}\n              resourceSources={resourceSources}\n              onChooseResource={onChooseResource}\n              resourceExternalEditors={resourceExternalEditors}\n              onSpriteContextMenu={onSpriteContextMenu}\n              selectedSprites={selectedSprites}\n              onSelectSprite={onSelectSprite}\n              onReplaceByDirection={newDirection =>\n                onReplaceDirection(i, newDirection)\n              }\n              objectName={objectName}\n              animationName={animationName}\n              onChangeName={onChangeName}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst SortableAnimation = SortableElement(Animation);\n\nconst SortableAnimationsList = SortableContainer(\n  ({\n    spriteObject,\n    objectName,\n    onAddAnimation,\n    onRemoveAnimation,\n    onChangeAnimationName,\n    project,\n    resourcesLoader,\n    resourceSources,\n    onChooseResource,\n    resourceExternalEditors,\n    extraBottomTools,\n    onSpriteContextMenu,\n    selectedSprites,\n    onSelectSprite,\n    onReplaceDirection,\n  }) => {\n    // Note that it's important to have <ScrollView> *inside* this\n    // component, otherwise the sortable list won't work (because the\n    // SortableContainer would not find a root div to use).\n    return (\n      <ScrollView>\n        {mapFor(0, spriteObject.getAnimationsCount(), i => {\n          const animation = spriteObject.getAnimation(i);\n          return (\n            <SortableAnimation\n              key={i}\n              index={i}\n              id={i}\n              animation={animation}\n              project={project}\n              resourcesLoader={resourcesLoader}\n              resourceSources={resourceSources}\n              onChooseResource={onChooseResource}\n              resourceExternalEditors={resourceExternalEditors}\n              onRemove={() => onRemoveAnimation(i)}\n              onChangeName={newName => onChangeAnimationName(i, newName)}\n              onSpriteContextMenu={onSpriteContextMenu}\n              selectedSprites={selectedSprites}\n              onSelectSprite={onSelectSprite}\n              onReplaceDirection={(directionId, newDirection) =>\n                onReplaceDirection(i, directionId, newDirection)\n              }\n              objectName={objectName}\n            />\n          );\n        })}\n      </ScrollView>\n    );\n  }\n);\n\ntype AnimationsListContainerProps = {|\n  spriteObject: gdSpriteObject,\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  resourcesLoader: typeof ResourcesLoader,\n  extraBottomTools: React.Node,\n  onSizeUpdated: () => void,\n  objectName: string,\n|};\n\ntype AnimationsListContainerState = {|\n  selectedSprites: {\n    [number]: boolean,\n  },\n|};\n\nclass AnimationsListContainer extends React.Component<\n  AnimationsListContainerProps,\n  AnimationsListContainerState\n> {\n  state = {\n    selectedSprites: {},\n  };\n  spriteContextMenu: ?ContextMenuInterface;\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    this.props.spriteObject.moveAnimation(oldIndex, newIndex);\n    this.forceUpdate();\n  };\n\n  addAnimation = () => {\n    const emptyAnimation = new gd.Animation();\n    emptyAnimation.setDirectionsCount(1);\n    this.props.spriteObject.addAnimation(emptyAnimation);\n    this.forceUpdate();\n    this.props.onSizeUpdated();\n  };\n\n  removeAnimation = i => {\n    const answer = Window.showConfirmDialog(\n      'Are you sure you want to remove this animation?'\n    );\n\n    if (answer) {\n      this.props.spriteObject.removeAnimation(i);\n      this.forceUpdate();\n      this.props.onSizeUpdated();\n    }\n  };\n\n  changeAnimationName = (i, newName) => {\n    const { spriteObject } = this.props;\n\n    const otherNames = mapFor(0, spriteObject.getAnimationsCount(), index => {\n      return index === i\n        ? undefined // Don't check the current animation name as we're changing it.\n        : spriteObject.getAnimation(index).getName();\n    });\n\n    if (newName !== '' && otherNames.filter(name => name === newName).length) {\n      showWarningBox(\n        'Another animation with this name already exists. Please use another name.',\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    spriteObject.getAnimation(i).setName(newName);\n    this.forceUpdate();\n  };\n\n  deleteSelection = () => {\n    const { spriteObject } = this.props;\n\n    mapFor(0, spriteObject.getAnimationsCount(), index => {\n      const animation = spriteObject.getAnimation(index);\n      deleteSpritesFromAnimation(animation, this.state.selectedSprites);\n    });\n\n    this.setState({\n      selectedSprites: {},\n    });\n  };\n\n  duplicateSelection = () => {\n    const { spriteObject } = this.props;\n\n    mapFor(0, spriteObject.getAnimationsCount(), index => {\n      const animation = spriteObject.getAnimation(index);\n      duplicateSpritesInAnimation(animation, this.state.selectedSprites);\n    });\n\n    this.setState({\n      selectedSprites: {},\n    });\n  };\n\n  openSpriteContextMenu = (x, y, sprite, index) => {\n    this.selectSprite(sprite, true);\n    if (this.spriteContextMenu) this.spriteContextMenu.open(x, y);\n  };\n\n  selectSprite = (sprite, selected) => {\n    this.setState({\n      selectedSprites: {\n        ...this.state.selectedSprites,\n        [sprite.ptr]: selected,\n      },\n    });\n  };\n\n  replaceDirection = (animationId, directionId, newDirection) => {\n    this.props.spriteObject\n      .getAnimation(animationId)\n      .setDirection(newDirection, directionId);\n    this.forceUpdate();\n  };\n\n  render() {\n    return (\n      <Column noMargin expand useFullHeight>\n        {this.props.spriteObject.getAnimationsCount() === 0 ? (\n          <Column noMargin expand justifyContent=\"center\">\n            <EmptyPlaceholder\n              title={<Trans>Add your first animation</Trans>}\n              description={<Trans>Animations are a sequence of images.</Trans>}\n              actionLabel={<Trans>Add an animation</Trans>}\n              helpPagePath=\"/objects/sprite\"\n              onAdd={this.addAnimation}\n            />\n          </Column>\n        ) : (\n          <React.Fragment>\n            <SortableAnimationsList\n              spriteObject={this.props.spriteObject}\n              objectName={this.props.objectName}\n              helperClass=\"sortable-helper\"\n              project={this.props.project}\n              onSortEnd={this.onSortEnd}\n              onChangeAnimationName={this.changeAnimationName}\n              onRemoveAnimation={this.removeAnimation}\n              onReplaceDirection={this.replaceDirection}\n              onSpriteContextMenu={this.openSpriteContextMenu}\n              selectedSprites={this.state.selectedSprites}\n              onSelectSprite={this.selectSprite}\n              resourcesLoader={this.props.resourcesLoader}\n              resourceSources={this.props.resourceSources}\n              resourceExternalEditors={this.props.resourceExternalEditors}\n              onChooseResource={this.props.onChooseResource}\n              useDragHandle\n              lockAxis=\"y\"\n              axis=\"y\"\n            />\n            <Column>\n              <ResponsiveLineStackLayout\n                justifyContent=\"space-between\"\n                noColumnMargin\n              >\n                {this.props.extraBottomTools}\n                <RaisedButton\n                  label={<Trans>Add an animation</Trans>}\n                  primary\n                  onClick={this.addAnimation}\n                  icon={<Add />}\n                />\n              </ResponsiveLineStackLayout>\n            </Column>\n            <ContextMenu\n              ref={spriteContextMenu =>\n                (this.spriteContextMenu = spriteContextMenu)\n              }\n              buildMenuTemplate={(i18n: I18nType) => [\n                {\n                  label: i18n._(t`Delete selection`),\n                  click: () => this.deleteSelection(),\n                },\n                {\n                  label: i18n._(t`Duplicate selection`),\n                  click: () => this.duplicateSelection(),\n                },\n              ]}\n            />\n          </React.Fragment>\n        )}\n      </Column>\n    );\n  }\n}\n\nexport default function SpriteEditor({\n  object,\n  project,\n  resourceSources,\n  onChooseResource,\n  resourceExternalEditors,\n  onSizeUpdated,\n  objectName,\n}: EditorProps) {\n  const [pointsEditorOpen, setPointsEditorOpen] = React.useState(false);\n  const [advancedOptionsOpen, setAdvancedOptionsOpen] = React.useState(false);\n  const [\n    collisionMasksEditorOpen,\n    setCollisionMasksEditorOpen,\n  ] = React.useState(false);\n  const forceUpdate = useForceUpdate();\n  const spriteObject = gd.asSpriteObject(object);\n\n  return (\n    <>\n      <AnimationsListContainer\n        spriteObject={spriteObject}\n        resourcesLoader={ResourcesLoader}\n        resourceSources={resourceSources}\n        onChooseResource={onChooseResource}\n        resourceExternalEditors={resourceExternalEditors}\n        project={project}\n        objectName={objectName}\n        onSizeUpdated={onSizeUpdated}\n        extraBottomTools={\n          <ResponsiveLineStackLayout noMargin noColumnMargin>\n            <RaisedButton\n              label={<Trans>Edit collision masks</Trans>}\n              primary={false}\n              onClick={() => setCollisionMasksEditorOpen(true)}\n              disabled={spriteObject.getAnimationsCount() === 0}\n            />\n            <RaisedButton\n              label={<Trans>Edit points</Trans>}\n              primary={false}\n              onClick={() => setPointsEditorOpen(true)}\n              disabled={spriteObject.getAnimationsCount() === 0}\n            />\n            <FlatButton\n              label={<Trans>Advanced options</Trans>}\n              primary={false}\n              onClick={() => setAdvancedOptionsOpen(true)}\n              disabled={spriteObject.getAnimationsCount() === 0}\n            />\n          </ResponsiveLineStackLayout>\n        }\n      />\n      {advancedOptionsOpen && (\n        <Dialog\n          actions={[\n            <FlatButton\n              label={<Trans>Close</Trans>}\n              primary\n              onClick={() => setAdvancedOptionsOpen(false)}\n            />,\n          ]}\n          maxWidth=\"sm\"\n          flexBody\n          onRequestClose={() => setAdvancedOptionsOpen(false)}\n          open\n        >\n          <Column noMargin>\n            <Checkbox\n              label={\n                <Trans>\n                  Don't play the animation when the object is far from the\n                  camera or hidden (recommended for performance)\n                </Trans>\n              }\n              checked={!spriteObject.getUpdateIfNotVisible()}\n              onCheck={(_, value) => {\n                spriteObject.setUpdateIfNotVisible(!value);\n\n                forceUpdate();\n              }}\n            />\n          </Column>\n        </Dialog>\n      )}\n      {pointsEditorOpen && (\n        <Dialog\n          actions={[\n            <FlatButton\n              label={<Trans>Close</Trans>}\n              primary\n              onClick={() => setPointsEditorOpen(false)}\n            />,\n          ]}\n          secondaryActions={[\n            <HelpButton\n              helpPagePath=\"/objects/sprite/edit-points\"\n              key=\"help\"\n            />,\n          ]}\n          cannotBeDismissed={true}\n          noMargin\n          maxWidth=\"lg\"\n          flexBody\n          fullHeight\n          onRequestClose={() => setPointsEditorOpen(false)}\n          open={pointsEditorOpen}\n        >\n          <PointsEditor\n            object={spriteObject}\n            resourcesLoader={ResourcesLoader}\n            project={project}\n          />\n        </Dialog>\n      )}\n      {collisionMasksEditorOpen && (\n        <Dialog\n          actions={[\n            <FlatButton\n              label={<Trans>Close</Trans>}\n              primary\n              onClick={() => setCollisionMasksEditorOpen(false)}\n            />,\n          ]}\n          secondaryActions={[\n            <HelpButton\n              helpPagePath=\"/objects/sprite/collision-mask\"\n              key=\"help\"\n            />,\n          ]}\n          noMargin\n          maxWidth=\"lg\"\n          flexBody\n          fullHeight\n          cannotBeDismissed={true}\n          onRequestClose={() => setCollisionMasksEditorOpen(false)}\n          open={collisionMasksEditorOpen}\n        >\n          <CollisionMasksEditor\n            object={spriteObject}\n            resourcesLoader={ResourcesLoader}\n            project={project}\n          />\n        </Dialog>\n      )}\n    </>\n  );\n}\n","// @flow\r\nimport { Trans } from '@lingui/macro';\r\n\r\nimport React, { Component } from 'react';\r\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\r\nimport { mapFor } from '../../../Utils/MapFor';\r\nimport Add from '@material-ui/icons/Add';\r\nimport DirectionTools from './DirectionTools';\r\nimport MiniToolbar from '../../../UI/MiniToolbar';\r\nimport ImageThumbnail, {\r\n  thumbnailContainerStyle,\r\n} from '../../../ResourcesList/ResourceThumbnail/ImageThumbnail';\r\nimport {\r\n  copySpritePoints,\r\n  copySpritePolygons,\r\n  allDirectionSpritesHaveSamePointsAs,\r\n  allDirectionSpritesHaveSameCollisionMasksAs,\r\n} from './Utils/SpriteObjectHelper';\r\nimport ResourcesLoader from '../../../ResourcesLoader';\r\nimport {\r\n  type ResourceSource,\r\n  type ChooseResourceFunction,\r\n} from '../../../ResourcesList/ResourceSource';\r\nimport { type ResourceExternalEditor } from '../../../ResourcesList/ResourceExternalEditor.flow';\r\nimport { applyResourceDefaults } from '../../../ResourcesList/ResourceUtils';\r\nimport FlatButton from '../../../UI/FlatButton';\r\nimport ThemeConsumer from '../../../UI/Theme/ThemeConsumer';\r\nconst gd: libGDevelop = global.gd;\r\nconst path = require('path');\r\n\r\nconst SPRITE_SIZE = 100; //TODO: Factor with Thumbnail\r\n\r\nconst styles = {\r\n  spritesList: {\r\n    whiteSpace: 'nowrap',\r\n    overflowY: 'hidden',\r\n  },\r\n  thumbnailExtraStyle: {\r\n    marginRight: 10,\r\n  },\r\n  spriteThumbnailImage: {\r\n    maxWidth: SPRITE_SIZE,\r\n    maxHeight: SPRITE_SIZE,\r\n    verticalAlign: 'middle',\r\n  },\r\n};\r\n\r\nconst AddSpriteButton = SortableElement(({ displayHint, onAdd }) => {\r\n  return (\r\n    <ThemeConsumer>\r\n      {muiTheme => (\r\n        <div\r\n          style={{\r\n            ...thumbnailContainerStyle,\r\n            backgroundColor: muiTheme.list.itemsBackgroundColor,\r\n          }}\r\n        >\r\n          <FlatButton\r\n            onClick={onAdd}\r\n            label={<Trans>Add</Trans>}\r\n            icon={<Add />}\r\n          />\r\n        </div>\r\n      )}\r\n    </ThemeConsumer>\r\n  );\r\n});\r\n\r\nconst SortableSpriteThumbnail = SortableElement(\r\n  ({ sprite, project, resourcesLoader, selected, onSelect, onContextMenu }) => {\r\n    return (\r\n      <ImageThumbnail\r\n        selectable\r\n        selected={selected}\r\n        onSelect={onSelect}\r\n        onContextMenu={onContextMenu}\r\n        resourceName={sprite.getImageName()}\r\n        resourcesLoader={resourcesLoader}\r\n        project={project}\r\n        style={styles.thumbnailExtraStyle}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nconst SortableList = SortableContainer(\r\n  ({\r\n    direction,\r\n    project,\r\n    resourcesLoader,\r\n    onAddSprite,\r\n    selectedSprites,\r\n    onSelectSprite,\r\n    onSpriteContextMenu,\r\n  }) => {\r\n    const spritesCount = direction.getSpritesCount();\r\n    return (\r\n      <div style={styles.spritesList}>\r\n        {[\r\n          ...mapFor(0, spritesCount, i => {\r\n            const sprite = direction.getSprite(i);\r\n            return (\r\n              <SortableSpriteThumbnail\r\n                sprite={sprite}\r\n                key={sprite.ptr}\r\n                index={i}\r\n                selected={!!selectedSprites[sprite.ptr]}\r\n                onContextMenu={(x, y) => onSpriteContextMenu(x, y, sprite)}\r\n                onSelect={selected => onSelectSprite(sprite, selected)}\r\n                resourcesLoader={resourcesLoader}\r\n                project={project}\r\n              />\r\n            );\r\n          }),\r\n          <AddSpriteButton\r\n            displayHint={!direction.getSpritesCount()}\r\n            key=\"add-sprite-button\"\r\n            disabled\r\n            index={spritesCount}\r\n            onAdd={onAddSprite}\r\n          />,\r\n        ]}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\n/**\r\n * Check if all sprites of the given direction have the same points and collision masks\r\n */\r\nconst checkDirectionPointsAndCollisionsMasks = (direction: gdDirection) => {\r\n  let allDirectionSpritesHaveSamePoints = false;\r\n  let allDirectionSpritesHaveSameCollisionMasks = false;\r\n  if (direction.getSpritesCount() !== 0) {\r\n    allDirectionSpritesHaveSamePoints = allDirectionSpritesHaveSamePointsAs(\r\n      direction.getSprite(0),\r\n      direction\r\n    );\r\n    allDirectionSpritesHaveSameCollisionMasks = allDirectionSpritesHaveSameCollisionMasksAs(\r\n      direction.getSprite(0),\r\n      direction\r\n    );\r\n  }\r\n\r\n  return {\r\n    allDirectionSpritesHaveSamePoints,\r\n    allDirectionSpritesHaveSameCollisionMasks,\r\n  };\r\n};\r\n\r\ntype Props = {|\r\n  direction: gdDirection,\r\n  project: gdProject,\r\n  resourcesLoader: typeof ResourcesLoader,\r\n  resourceSources: Array<ResourceSource>,\r\n  resourceExternalEditors: Array<ResourceExternalEditor>,\r\n  onChooseResource: ChooseResourceFunction,\r\n  onSpriteContextMenu: (x: number, y: number, sprite: gdSprite) => void,\r\n  selectedSprites: {\r\n    [number]: boolean,\r\n  },\r\n  onSelectSprite: (sprite: gdSprite, selected: boolean) => void,\r\n  onReplaceByDirection: (newDirection: gdDirection) => void,\r\n  onChangeName: (newAnimationName: string) => void, // Used by piskel to set the name, if there is no name\r\n  objectName: string, // This is used for the default name of images created with Piskel.\r\n  animationName: string, // This is used for the default name of images created with Piskel.\r\n|};\r\n\r\nexport default class SpritesList extends Component<Props, void> {\r\n  onSortEnd = ({\r\n    oldIndex,\r\n    newIndex,\r\n  }: {\r\n    oldIndex: number,\r\n    newIndex: number,\r\n  }) => {\r\n    this.props.direction.moveSprite(oldIndex, newIndex);\r\n    this.forceUpdate();\r\n  };\r\n\r\n  onAddSprite = () => {\r\n    const {\r\n      resourceSources,\r\n      onChooseResource,\r\n      project,\r\n      direction,\r\n    } = this.props;\r\n    if (!resourceSources) return;\r\n    const sources = resourceSources.filter(source => source.kind === 'image');\r\n    if (!sources.length) return;\r\n\r\n    const {\r\n      allDirectionSpritesHaveSameCollisionMasks,\r\n      allDirectionSpritesHaveSamePoints,\r\n    } = checkDirectionPointsAndCollisionsMasks(direction);\r\n\r\n    onChooseResource({\r\n      // Should be updated once new sources are introduced in the desktop app.\r\n      // Search for \"sources[0]\" in the codebase for other places like this.\r\n      initialSourceName: sources[0].name,\r\n      multiSelection: true,\r\n      resourceKind: 'image',\r\n    }).then(resources => {\r\n      resources.forEach(resource => {\r\n        applyResourceDefaults(project, resource);\r\n        project.getResourcesManager().addResource(resource);\r\n\r\n        const sprite = new gd.Sprite();\r\n        sprite.setImageName(resource.getName());\r\n        if (allDirectionSpritesHaveSamePoints) {\r\n          copySpritePoints(direction.getSprite(0), sprite);\r\n        }\r\n        if (allDirectionSpritesHaveSameCollisionMasks) {\r\n          copySpritePolygons(direction.getSprite(0), sprite);\r\n        }\r\n        direction.addSprite(sprite);\r\n      });\r\n\r\n      // Important, we are responsible for deleting the resources that were given to us.\r\n      // Otherwise we have a memory leak, as calling addResource is making a copy of the resource.\r\n      resources.forEach(resource => resource.delete());\r\n\r\n      this.forceUpdate();\r\n    });\r\n  };\r\n\r\n  editWith = (externalEditor: ResourceExternalEditor) => {\r\n    const {\r\n      project,\r\n      direction,\r\n      resourcesLoader,\r\n      onReplaceByDirection,\r\n      onChangeName,\r\n      objectName,\r\n      animationName,\r\n    } = this.props;\r\n    const resourceNames = mapFor(0, direction.getSpritesCount(), i => {\r\n      return direction.getSprite(i).getImageName();\r\n    });\r\n\r\n    const {\r\n      allDirectionSpritesHaveSameCollisionMasks,\r\n      allDirectionSpritesHaveSamePoints,\r\n    } = checkDirectionPointsAndCollisionsMasks(direction);\r\n\r\n    let externalEditorData = {};\r\n    const metadataRaw = direction.getMetadata();\r\n    if (metadataRaw) {\r\n      try {\r\n        externalEditorData = JSON.parse(metadataRaw);\r\n      } catch (e) {\r\n        console.error('Malformed metadata', e);\r\n      }\r\n    }\r\n\r\n    externalEditor.edit({\r\n      project,\r\n      resourcesLoader,\r\n      singleFrame: false,\r\n      resourceNames,\r\n      extraOptions: {\r\n        fps:\r\n          direction.getTimeBetweenFrames() > 0\r\n            ? 1 / direction.getTimeBetweenFrames()\r\n            : 1,\r\n        name:\r\n          animationName ||\r\n          (resourceNames.length > 0\r\n            ? path.basename(resourceNames[0], path.extname(resourceNames[0]))\r\n            : objectName),\r\n        isLooping: direction.isLooping(),\r\n        externalEditorData,\r\n      },\r\n      onChangesSaved: resources => {\r\n        const newDirection = new gd.Direction();\r\n        newDirection.setTimeBetweenFrames(direction.getTimeBetweenFrames());\r\n        newDirection.setLoop(direction.isLooping());\r\n        resources.forEach(resource => {\r\n          const sprite = new gd.Sprite();\r\n          sprite.setImageName(resource.name);\r\n          // Restore collision masks and points\r\n          if (\r\n            resource.originalIndex !== undefined &&\r\n            resource.originalIndex !== null\r\n          ) {\r\n            const originalSprite = direction.getSprite(resource.originalIndex);\r\n            copySpritePoints(originalSprite, sprite);\r\n            copySpritePolygons(originalSprite, sprite);\r\n          } else {\r\n            if (allDirectionSpritesHaveSamePoints) {\r\n              copySpritePoints(direction.getSprite(0), sprite);\r\n            }\r\n            if (allDirectionSpritesHaveSameCollisionMasks) {\r\n              copySpritePolygons(direction.getSprite(0), sprite);\r\n            }\r\n          }\r\n          newDirection.addSprite(sprite);\r\n          sprite.delete();\r\n        });\r\n\r\n        // set metadata if there is such on the direction\r\n        if (resources[0].metadata) {\r\n          newDirection.setMetadata(JSON.stringify(resources[0].metadata));\r\n        }\r\n\r\n        // Burst the ResourcesLoader cache to force images to be reloaded (and not cached by the browser).\r\n        resourcesLoader.burstUrlsCacheForResources(project, resourceNames);\r\n        onReplaceByDirection(newDirection);\r\n        // Set optional animation name if the user hasn't done so\r\n        if (resources[0].newAnimationName) {\r\n          onChangeName(resources[0].newAnimationName);\r\n        }\r\n        newDirection.delete();\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MiniToolbar justifyContent=\"flex-end\" smallest>\r\n          <DirectionTools\r\n            direction={this.props.direction}\r\n            resourcesLoader={this.props.resourcesLoader}\r\n            project={this.props.project}\r\n            resourceExternalEditors={this.props.resourceExternalEditors}\r\n            onEditWith={this.editWith}\r\n          />\r\n        </MiniToolbar>\r\n        <SortableList\r\n          resourcesLoader={this.props.resourcesLoader}\r\n          direction={this.props.direction}\r\n          project={this.props.project}\r\n          onSortEnd={this.onSortEnd}\r\n          onAddSprite={this.onAddSprite}\r\n          selectedSprites={this.props.selectedSprites}\r\n          onSelectSprite={this.props.onSelectSprite}\r\n          onSpriteContextMenu={this.props.onSpriteContextMenu}\r\n          helperClass=\"sortable-helper\"\r\n          lockAxis=\"x\"\r\n          axis=\"x\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React from 'react';\nimport EmptyMessage from '../../../../UI/EmptyMessage';\nimport { Line, Column } from '../../../../UI/Grid';\nimport { mapFor } from '../../../../Utils/MapFor';\nimport PointsList from './PointsList';\nimport PointsPreview from './PointsPreview';\nimport ImagePreview from '../../../../ResourcesList/ResourcePreview/ImagePreview';\nimport {\n  getCurrentElements,\n  allSpritesHaveSamePointsAs,\n  copyAnimationsSpritePoints,\n} from '../Utils/SpriteObjectHelper';\nimport SpriteSelector from '../Utils/SpriteSelector';\nimport Window from '../../../../Utils/Window';\nimport every from 'lodash/every';\nimport ResourcesLoader from '../../../../ResourcesLoader';\nimport useForceUpdate from '../../../../Utils/UseForceUpdate';\nimport EditorMosaic, {\n  type Editor,\n  type EditorMosaicNode,\n} from '../../../../UI/EditorMosaic';\nimport { useResponsiveWindowWidth } from '../../../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport Background from '../../../../UI/Background';\nimport ScrollView from '../../../../UI/ScrollView';\nconst gd: libGDevelop = global.gd;\n\nconst horizontalMosaicNodes: EditorMosaicNode = {\n  direction: 'row',\n  first: 'preview',\n  second: 'properties',\n  splitPercentage: 50,\n};\n\nconst verticalMosaicNodes: EditorMosaicNode = {\n  direction: 'column',\n  first: 'preview',\n  second: 'properties',\n  splitPercentage: 50,\n};\n\ntype Props = {|\n  object: gdSpriteObject,\n  resourcesLoader: typeof ResourcesLoader,\n  project: gdProject,\n|};\n\nconst PointsEditor = (props: Props) => {\n  const [animationIndex, setAnimationIndex] = React.useState(0);\n  const [directionIndex, setDirectionIndex] = React.useState(0);\n  const [spriteIndex, setSpriteIndex] = React.useState(0);\n\n  // Note: these two booleans are set to false to avoid erasing points of other\n  // animations/frames (and they will be updated by updateSamePointsToggles). In\n  // theory, they should be set to the appropriate value at their initialization,\n  // for consistency of the state.\n  const [samePointsForAnimations, setSamePointsForAnimations] = React.useState(\n    false\n  );\n  const [samePointsForSprites, setSamePointsForSprites] = React.useState(false);\n  const forceUpdate = useForceUpdate();\n\n  const spriteObject = gd.asSpriteObject(props.object);\n  const { animation, sprite, hasValidSprite } = getCurrentElements(\n    spriteObject,\n    animationIndex,\n    directionIndex,\n    spriteIndex\n  );\n\n  const updatePoints = React.useCallback(\n    () => {\n      if (animation && sprite) {\n        if (samePointsForAnimations) {\n          mapFor(0, spriteObject.getAnimationsCount(), i => {\n            const otherAnimation = spriteObject.getAnimation(i);\n            copyAnimationsSpritePoints(sprite, otherAnimation);\n          });\n        } else if (samePointsForSprites) {\n          copyAnimationsSpritePoints(sprite, animation);\n        }\n      }\n\n      forceUpdate(); // Refresh the preview\n    },\n    [\n      animation,\n      sprite,\n      spriteObject,\n      samePointsForAnimations,\n      samePointsForSprites,\n      forceUpdate,\n    ]\n  );\n\n  const chooseAnimation = index => {\n    setAnimationIndex(index);\n    setDirectionIndex(0);\n    setSpriteIndex(0);\n  };\n\n  const chooseDirection = index => {\n    setDirectionIndex(index);\n    setSpriteIndex(0);\n  };\n\n  const chooseSprite = index => {\n    setSpriteIndex(index);\n  };\n\n  const updateSamePointsToggles = () => {\n    if (!animation || !sprite) return;\n\n    setSamePointsForAnimations(\n      every(\n        mapFor(0, spriteObject.getAnimationsCount(), i => {\n          const otherAnimation = spriteObject.getAnimation(i);\n          return allSpritesHaveSamePointsAs(sprite, otherAnimation);\n        })\n      )\n    );\n\n    setSamePointsForSprites(allSpritesHaveSamePointsAs(sprite, animation));\n  };\n\n  const setSamePointsForAllAnimations = (enable: boolean) => {\n    if (enable) {\n      const answer = Window.showConfirmDialog(\n        \"Having the same points for all animations will erase and reset all the other animations points. This can't be undone. Are you sure you want to share these points amongst all the animations of the object?\"\n      );\n      if (!answer) return;\n    }\n\n    setSamePointsForAnimations(enable);\n    setSamePointsForSprites(enable || samePointsForSprites);\n  };\n\n  const setSamePointsForAllSprites = (enable: boolean) => {\n    if (enable) {\n      const answer = Window.showConfirmDialog(\n        \"Having the same points for all frames will erase and reset all the other frames points. This can't be undone. Are you sure you want to share these points amongst all the frames of the animation?\"\n      );\n      if (!answer) return;\n    }\n\n    setSamePointsForAnimations(enable && samePointsForAnimations);\n    setSamePointsForSprites(enable);\n  };\n\n  React.useEffect(updateSamePointsToggles, [animationIndex]);\n\n  React.useEffect(updatePoints, [\n    samePointsForAnimations,\n    samePointsForSprites,\n  ]);\n\n  // Keep panes vertical for small screens, side-by-side for large screens\n  const screenSize = useResponsiveWindowWidth();\n  const editorNodes =\n    screenSize === 'small' ? verticalMosaicNodes : horizontalMosaicNodes;\n\n  if (!props.object.getAnimationsCount()) return null;\n\n  const editors: { [string]: Editor } = {\n    preview: {\n      type: 'primary',\n      noTitleBar: true,\n      renderEditor: () => (\n        <Background>\n          <ImagePreview\n            resourceName={hasValidSprite ? sprite.getImageName() : ''}\n            resourcesLoader={props.resourcesLoader}\n            project={props.project}\n            renderOverlay={overlayProps =>\n              hasValidSprite && (\n                <PointsPreview\n                  {...overlayProps}\n                  pointsContainer={sprite}\n                  onPointsUpdated={updatePoints}\n                />\n              )\n            }\n          />\n        </Background>\n      ),\n    },\n    properties: {\n      type: 'secondary',\n      noTitleBar: true,\n      renderEditor: () => (\n        <Background>\n          <ScrollView>\n            <Line>\n              <Column expand>\n                <SpriteSelector\n                  spriteObject={spriteObject}\n                  animationIndex={animationIndex}\n                  directionIndex={directionIndex}\n                  spriteIndex={spriteIndex}\n                  chooseAnimation={chooseAnimation}\n                  chooseDirection={chooseDirection}\n                  chooseSprite={chooseSprite}\n                  sameForAllAnimations={samePointsForAnimations}\n                  sameForAllSprites={samePointsForSprites}\n                  setSameForAllAnimations={setSamePointsForAllAnimations}\n                  setSameForAllSprites={setSamePointsForAllSprites}\n                  setSameForAllAnimationsLabel={\n                    <Trans>Share same points for all animations</Trans>\n                  }\n                  setSameForAllSpritesLabel={\n                    <Trans>\n                      Share same points for all sprites of this animation\n                    </Trans>\n                  }\n                />\n              </Column>\n            </Line>\n            {!!sprite && (\n              <PointsList\n                pointsContainer={sprite}\n                onPointsUpdated={updatePoints}\n              />\n            )}\n            {!sprite && (\n              <EmptyMessage>\n                <Trans>Choose an animation and frame to edit the points</Trans>\n              </EmptyMessage>\n            )}\n          </ScrollView>\n        </Background>\n      ),\n    },\n  };\n\n  return (\n    <div style={{ flex: 1 }}>\n      <EditorMosaic editors={editors} initialNodes={editorNodes} />\n    </div>\n  );\n};\n\nexport default PointsEditor;\n","// @flow\nimport * as React from 'react';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableHeaderColumn,\n  TableRow,\n  TableRowColumn,\n} from '../../../../UI/Table';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport newNameGenerator from '../../../../Utils/NewNameGenerator';\nimport { mapVector } from '../../../../Utils/MapFor';\nimport Window from '../../../../Utils/Window';\nimport styles from './styles';\nimport PointRow from './PointRow';\nimport useForceUpdate from '../../../../Utils/UseForceUpdate';\nimport { Column, Line, Spacer } from '../../../../UI/Grid';\nimport RaisedButton from '../../../../UI/RaisedButton';\nimport { Trans } from '@lingui/macro';\nimport AddIcon from '@material-ui/icons/Add';\nconst gd: libGDevelop = global.gd;\n\nconst SortablePointRow = SortableElement(PointRow);\n\ntype PointsListBodyProps = {|\n  pointsContainer: gdSprite,\n  onPointsUpdated: () => void,\n|};\n\nconst PointsListBody = (props: PointsListBodyProps) => {\n  const [nameErrors, setNameErrors] = React.useState({});\n  const { pointsContainer } = props;\n  const forceUpdate = useForceUpdate();\n\n  const onPointsUpdated = () => {\n    forceUpdate();\n    props.onPointsUpdated();\n  };\n\n  const updateOriginPointX = newValue => {\n    pointsContainer.getOrigin().setX(newValue);\n    onPointsUpdated();\n  };\n\n  const updateOriginPointY = newValue => {\n    pointsContainer.getOrigin().setY(newValue);\n    onPointsUpdated();\n  };\n\n  const updateCenterPointX = newValue => {\n    pointsContainer.getCenter().setX(newValue);\n    onPointsUpdated();\n  };\n\n  const updateCenterPointY = newValue => {\n    pointsContainer.getCenter().setY(newValue);\n    onPointsUpdated();\n  };\n\n  const updatePointX = (point, newValue) => {\n    point.setX(newValue);\n    onPointsUpdated();\n  };\n\n  const updatePointY = (point, newValue) => {\n    point.setY(newValue);\n    onPointsUpdated();\n  };\n\n  const nonDefaultPoints = pointsContainer.getAllNonDefaultPoints();\n  const pointsRows = mapVector(nonDefaultPoints, (point, i) => {\n    const pointName = point.getName();\n\n    return (\n      <SortablePointRow\n        index={i}\n        disabled\n        key={'point-' + pointName}\n        pointX={point.getX()}\n        pointY={point.getY()}\n        onChangePointX={newValue => updatePointX(point, newValue)}\n        onChangePointY={newValue => updatePointY(point, newValue)}\n        pointName={pointName}\n        nameError={nameErrors[pointName]}\n        onBlur={event => {\n          const newName = event.target.value;\n          if (pointName === newName) return;\n\n          let success = true;\n          if (pointsContainer.hasPoint(newName)) {\n            success = false;\n          } else {\n            point.setName(newName);\n            onPointsUpdated();\n          }\n\n          setNameErrors(old => ({ ...old, [pointName]: !success }));\n        }}\n        onRemove={() => {\n          const answer = Window.showConfirmDialog(\n            \"Are you sure you want to remove this point? This can't be undone.\"\n          );\n          if (!answer) return;\n\n          pointsContainer.delPoint(pointName);\n          onPointsUpdated();\n        }}\n      />\n    );\n  });\n\n  const originPoint = pointsContainer.getOrigin();\n  const centerPoint = pointsContainer.getCenter();\n\n  const originRow = (\n    <SortablePointRow\n      index={0}\n      key={'origin-point-row'}\n      pointName=\"Origin\"\n      pointX={originPoint.getX()}\n      pointY={originPoint.getY()}\n      onChangePointX={updateOriginPointX}\n      onChangePointY={updateOriginPointY}\n      disabled\n    />\n  );\n  const centerRow = (\n    <SortablePointRow\n      index={1}\n      key={'center-point-row'}\n      pointName=\"Center\"\n      isAutomatic={pointsContainer.isDefaultCenterPoint()}\n      pointX={centerPoint.getX()}\n      pointY={centerPoint.getY()}\n      onChangePointX={updateCenterPointX}\n      onChangePointY={updateCenterPointY}\n      disabled\n      onEdit={\n        pointsContainer.isDefaultCenterPoint()\n          ? () => {\n              pointsContainer.setDefaultCenterPoint(false);\n              onPointsUpdated();\n            }\n          : null\n      }\n      onRemove={\n        !pointsContainer.isDefaultCenterPoint()\n          ? () => {\n              pointsContainer.setDefaultCenterPoint(true);\n              onPointsUpdated();\n            }\n          : null\n      }\n    />\n  );\n\n  return <TableBody>{[originRow, centerRow, ...pointsRows]}</TableBody>;\n};\n\nconst SortablePointsListBody = SortableContainer(PointsListBody);\nSortablePointsListBody.muiName = 'TableBody';\n\ntype PointsListProps = {|\n  pointsContainer: gdSprite,\n  onPointsUpdated: () => void,\n|};\n\nconst PointsList = (props: PointsListProps) => {\n  return (\n    <Column expand>\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHeaderColumn style={styles.handleColumn} />\n            <TableHeaderColumn>Point name</TableHeaderColumn>\n            <TableHeaderColumn style={styles.coordinateColumn}>\n              X\n            </TableHeaderColumn>\n            <TableHeaderColumn style={styles.coordinateColumn}>\n              Y\n            </TableHeaderColumn>\n            <TableRowColumn style={styles.toolColumn} />\n          </TableRow>\n        </TableHeader>\n        <SortablePointsListBody\n          pointsContainer={props.pointsContainer}\n          onPointsUpdated={props.onPointsUpdated}\n          onSortEnd={({ oldIndex, newIndex }) => {\n            // Reordering points is not supported for now\n          }}\n          helperClass=\"sortable-helper\"\n          useDragHandle\n          lockToContainerEdges\n        />\n      </Table>\n      <Spacer />\n      <Line alignItems=\"center\" justifyContent=\"center\">\n        <RaisedButton\n          primary\n          icon={<AddIcon />}\n          label={<Trans>Add a point</Trans>}\n          onClick={() => {\n            const name = newNameGenerator('Point', name =>\n              props.pointsContainer.hasPoint(name)\n            );\n            const point = new gd.Point(name);\n            props.pointsContainer.addPoint(point);\n            point.delete();\n            props.onPointsUpdated();\n          }}\n        />\n      </Line>\n    </Column>\n  );\n};\n\nexport default PointsList;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { TableRow, TableRowColumn } from '../../../../UI/Table';\nimport IconButton from '../../../../UI/IconButton';\nimport Delete from '@material-ui/icons/Delete';\nimport Edit from '@material-ui/icons/Edit';\nimport TextField from '../../../../UI/TextField';\nimport styles from './styles';\nimport ThemeConsumer from '../../../../UI/Theme/ThemeConsumer';\nimport Text from '../../../../UI/Text';\n\ntype Props = {|\n  pointName: string,\n  nameError: boolean,\n  onBlur?: (ev: any) => void,\n  onRemove?: (ev: any) => void,\n  onEdit?: (ev: any) => void,\n  pointX: number,\n  pointY: number,\n  onChangePointX: (value: number) => void,\n  onChangePointY: (value: number) => void,\n  isAutomatic?: Boolean,\n|};\n\nconst PointRow = (props: Props) => (\n  <ThemeConsumer>\n    {muiTheme => (\n      <TableRow\n        style={{\n          backgroundColor: muiTheme.list.itemsBackgroundColor,\n        }}\n      >\n        <TableRowColumn style={styles.handleColumn}>\n          {/* <DragHandle /> Reordering point is not supported for now */}\n        </TableRowColumn>\n        <TableRowColumn>\n          <TextField\n            margin=\"none\"\n            defaultValue={props.pointName || 'Unnamed point'}\n            id={props.pointName}\n            fullWidth\n            errorText={\n              props.nameError ? 'This name is already taken' : undefined\n            }\n            disabled={!props.onBlur}\n            onBlur={props.onBlur}\n          />\n        </TableRowColumn>\n        <TableRowColumn style={styles.coordinateColumn}>\n          {!props.isAutomatic ? (\n            <TextField\n              margin=\"none\"\n              value={props.pointX}\n              type=\"number\"\n              id=\"point-x\"\n              onChange={(e, value) =>\n                props.onChangePointX(parseFloat(value || 0))\n              }\n            />\n          ) : (\n            <Text noMargin>\n              <Trans>(auto)</Trans>\n            </Text>\n          )}\n        </TableRowColumn>\n        <TableRowColumn style={styles.coordinateColumn}>\n          {!props.isAutomatic ? (\n            <TextField\n              margin=\"none\"\n              value={props.pointY}\n              type=\"number\"\n              id=\"point-y\"\n              onChange={(e, value) =>\n                props.onChangePointY(parseFloat(value || 0))\n              }\n            />\n          ) : (\n            <Text noMargin>\n              <Trans>(auto)</Trans>\n            </Text>\n          )}\n        </TableRowColumn>\n        <TableRowColumn style={styles.toolColumn}>\n          {!!props.onRemove && (\n            <IconButton size=\"small\" onClick={props.onRemove}>\n              <Delete />\n            </IconButton>\n          )}\n          {!!props.onEdit && (\n            <IconButton size=\"small\" onClick={props.onEdit}>\n              <Edit />\n            </IconButton>\n          )}\n        </TableRowColumn>\n      </TableRow>\n    )}\n  </ThemeConsumer>\n);\n\nexport default PointRow;\n","// @flow\nimport * as React from 'react';\nimport { mapVector } from '../../../../Utils/MapFor';\nimport useForceUpdate from '../../../../Utils/UseForceUpdate';\n\nconst styles = {\n  container: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n  },\n};\n\nconst pointKindIdentifiers = {\n  NORMAL: 1,\n  ORIGIN: 2,\n  CENTER: 3,\n};\ntype PointKind = 1 | 2 | 3;\n\ntype Props = {|\n  pointsContainer: gdSprite, // Could potentially be generalized to other things than Sprite in the future.\n  imageWidth: number,\n  imageHeight: number,\n  offsetTop: number,\n  offsetLeft: number,\n  imageZoomFactor: number,\n  onPointsUpdated: () => void,\n|};\n\ntype State = {|\n  draggedPoint: ?gdPoint,\n  draggedPointKind: ?PointKind,\n|};\n\nconst PointsPreview = (props: Props) => {\n  const frameRef = React.useRef<React.ElementRef<'div'> | null>(null);\n  const [state, setState] = React.useState<State>({\n    draggedPoint: null,\n    draggedPointKind: null,\n  });\n\n  const {\n    pointsContainer,\n    imageWidth,\n    imageHeight,\n    offsetTop,\n    offsetLeft,\n    imageZoomFactor,\n  } = props;\n\n  const forceUpdate = useForceUpdate();\n\n  const onStartDragPoint = (\n    draggedPoint: gdPoint,\n    draggedPointKind: PointKind\n  ) => {\n    if (state.draggedPoint) return;\n    setState({\n      draggedPoint,\n      draggedPointKind,\n    });\n  };\n\n  const onEndDragPoint = () => {\n    const draggingWasDone = !!state.draggedPoint;\n    if (draggingWasDone) props.onPointsUpdated();\n    setState({\n      draggedPoint: null,\n      draggedPointKind: null,\n    });\n  };\n\n  /**\n   * Move a point with the mouse. A similar dragging implementation is done in\n   * CollisionMasksPreview (but with svg elements).\n   *\n   * TODO: This could be optimized by avoiding the forceUpdate (not sure if worth it though).\n   */\n  const onMouseMove = (event: any) => {\n    const { draggedPoint, draggedPointKind } = state;\n    if (!draggedPoint || !frameRef.current) return;\n\n    const frameBoundingRect = frameRef.current.getBoundingClientRect();\n    const xOnFrame = event.clientX - frameBoundingRect.left;\n    const yOnFrame = event.clientY - frameBoundingRect.top;\n\n    if (draggedPointKind === pointKindIdentifiers.CENTER) {\n      props.pointsContainer.setDefaultCenterPoint(false);\n    }\n    draggedPoint.setX(xOnFrame / imageZoomFactor);\n    draggedPoint.setY(yOnFrame / imageZoomFactor);\n    forceUpdate();\n  };\n\n  const renderPoint = (\n    name: string,\n    x: number,\n    y: number,\n    kind: PointKind,\n    point: gdPoint\n  ) => {\n    const pointName =\n      kind === pointKindIdentifiers.ORIGIN\n        ? 'Origin'\n        : kind === pointKindIdentifiers.CENTER\n        ? 'Center'\n        : point.getName();\n    const imageSrc =\n      kind === pointKindIdentifiers.ORIGIN\n        ? 'res/originPoint.png'\n        : kind === pointKindIdentifiers.CENTER\n        ? 'res/centerPoint.png'\n        : 'res/point.png';\n    return (\n      <img\n        src={imageSrc}\n        title={pointName}\n        style={{\n          position: 'absolute',\n          left: x,\n          top: y,\n          transform: 'translate(-6px, -5px)',\n          cursor: 'move',\n        }}\n        alt=\"\"\n        key={name}\n        onPointerDown={e => {\n          e.preventDefault(); // Disable dragging ghost image on Firefox\n          onStartDragPoint(point, kind);\n        }}\n      />\n    );\n  };\n\n  const nonDefaultPoints = pointsContainer.getAllNonDefaultPoints();\n  const points = mapVector(nonDefaultPoints, (point, i) =>\n    renderPoint(\n      point.getName(),\n      point.getX() * imageZoomFactor,\n      point.getY() * imageZoomFactor,\n      pointKindIdentifiers.NORMAL,\n      point\n    )\n  );\n\n  const originPoint = pointsContainer.getOrigin();\n  const centerPoint = pointsContainer.getCenter();\n  const automaticCenterPosition = pointsContainer.isDefaultCenterPoint();\n\n  const frameStyle = {\n    position: 'absolute',\n    top: offsetTop || 0,\n    left: offsetLeft || 0,\n    width: imageWidth * imageZoomFactor,\n    height: imageHeight * imageZoomFactor,\n    overflow: 'visible',\n  };\n\n  return (\n    <div\n      style={styles.container}\n      onPointerMove={onMouseMove}\n      onPointerUp={onEndDragPoint}\n    >\n      <div style={frameStyle} ref={frameRef}>\n        {points}\n        {renderPoint(\n          'Origin',\n          originPoint.getX() * imageZoomFactor,\n          originPoint.getY() * imageZoomFactor,\n          pointKindIdentifiers.ORIGIN,\n          originPoint\n        )}\n        {renderPoint(\n          'Center',\n          (!automaticCenterPosition ? centerPoint.getX() : imageWidth / 2) *\n            imageZoomFactor,\n          (!automaticCenterPosition ? centerPoint.getY() : imageHeight / 2) *\n            imageZoomFactor,\n          pointKindIdentifiers.CENTER,\n          centerPoint\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PointsPreview;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React from 'react';\nimport FlatButton from '../../../../UI/FlatButton';\nimport EmptyMessage from '../../../../UI/EmptyMessage';\nimport { Line, Column } from '../../../../UI/Grid';\nimport { mapFor } from '../../../../Utils/MapFor';\nimport PolygonsList from './PolygonsList';\nimport CollisionMasksPreview from './CollisionMasksPreview';\nimport ImagePreview from '../../../../ResourcesList/ResourcePreview/ImagePreview';\nimport {\n  getCurrentElements,\n  allSpritesHaveSameCollisionMasksAs,\n  copyAnimationsSpriteCollisionMasks,\n} from '../Utils/SpriteObjectHelper';\nimport SpriteSelector from '../Utils/SpriteSelector';\nimport Window from '../../../../Utils/Window';\nimport every from 'lodash/every';\nimport ResourcesLoader from '../../../../ResourcesLoader';\nimport useForceUpdate from '../../../../Utils/UseForceUpdate';\nimport EditorMosaic, {\n  type Editor,\n  type EditorMosaicNode,\n} from '../../../../UI/EditorMosaic';\nimport { useResponsiveWindowWidth } from '../../../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport Background from '../../../../UI/Background';\nconst gd: libGDevelop = global.gd;\n\nconst horizontalMosaicNodes: EditorMosaicNode = {\n  direction: 'row',\n  first: 'preview',\n  second: 'properties',\n  splitPercentage: 50,\n};\n\nconst verticalMosaicNodes: EditorMosaicNode = {\n  direction: 'column',\n  first: 'preview',\n  second: 'properties',\n  splitPercentage: 50,\n};\n\ntype Props = {|\n  object: gdSpriteObject,\n  resourcesLoader: typeof ResourcesLoader,\n  project: gdProject,\n|};\n\nconst CollisionMasksEditor = (props: Props) => {\n  const [animationIndex, setAnimationIndex] = React.useState(0);\n  const [directionIndex, setDirectionIndex] = React.useState(0);\n  const [spriteIndex, setSpriteIndex] = React.useState(0);\n\n  // Note: these two booleans are set to false to avoid erasing points of other\n  // animations/frames (and they will be updated by updateSameCollisionMasksToggles). In\n  // theory, they should be set to the appropriate value at their initialization,\n  // for consistency of the state.\n  const [\n    sameCollisionMasksForAnimations,\n    setSameCollisionMasksForAnimations,\n  ] = React.useState(false);\n  const [\n    sameCollisionMasksForSprites,\n    setSameCollisionMasksForSprites,\n  ] = React.useState(false);\n  const [spriteWidth, setSpriteWidth] = React.useState(0);\n  const [spriteHeight, setSpriteHeight] = React.useState(0);\n  const forceUpdate = useForceUpdate();\n\n  const spriteObject = gd.asSpriteObject(props.object);\n  const { animation, sprite, hasValidSprite } = getCurrentElements(\n    spriteObject,\n    animationIndex,\n    directionIndex,\n    spriteIndex\n  );\n\n  const updateCollisionMasks = React.useCallback(\n    () => {\n      if (animation && sprite) {\n        if (sameCollisionMasksForAnimations) {\n          mapFor(0, spriteObject.getAnimationsCount(), i => {\n            const otherAnimation = spriteObject.getAnimation(i);\n            copyAnimationsSpriteCollisionMasks(sprite, otherAnimation);\n          });\n        } else if (sameCollisionMasksForSprites) {\n          copyAnimationsSpriteCollisionMasks(sprite, animation);\n        }\n      }\n\n      forceUpdate(); // Refresh the preview and the list\n    },\n    [\n      animation,\n      sprite,\n      spriteObject,\n      sameCollisionMasksForAnimations,\n      sameCollisionMasksForSprites,\n      forceUpdate,\n    ]\n  );\n\n  const chooseAnimation = index => {\n    setAnimationIndex(index);\n    setDirectionIndex(0);\n    setSpriteIndex(0);\n  };\n\n  const chooseDirection = index => {\n    setDirectionIndex(index);\n    setSpriteIndex(0);\n  };\n\n  const chooseSprite = index => {\n    setSpriteIndex(index);\n  };\n\n  const updateSameCollisionMasksToggles = () => {\n    if (!animation || !sprite) return;\n\n    setSameCollisionMasksForAnimations(\n      every(\n        mapFor(0, spriteObject.getAnimationsCount(), i => {\n          const otherAnimation = spriteObject.getAnimation(i);\n          return allSpritesHaveSameCollisionMasksAs(sprite, otherAnimation);\n        })\n      )\n    );\n\n    setSameCollisionMasksForSprites(\n      allSpritesHaveSameCollisionMasksAs(sprite, animation)\n    );\n  };\n\n  const onSetCollisionMaskAutomatic = React.useCallback(\n    (automatic: boolean = true) => {\n      if (!sprite) return;\n      sprite.setCollisionMaskAutomatic(automatic);\n      updateCollisionMasks();\n    },\n    [sprite, updateCollisionMasks]\n  );\n\n  const setSameCollisionMasksForAllAnimations = (enable: boolean) => {\n    if (enable) {\n      const answer = Window.showConfirmDialog(\n        \"Having the same collision masks for all animations will erase and reset all the other animations collision masks. This can't be undone. Are you sure you want to share these collision masks amongst all the animations of the object?\"\n      );\n      if (!answer) return;\n    }\n\n    setSameCollisionMasksForAnimations(enable);\n    setSameCollisionMasksForSprites(enable || sameCollisionMasksForSprites);\n  };\n\n  const setSameCollisionMasksForAllSprites = (enable: boolean) => {\n    if (enable) {\n      const answer = Window.showConfirmDialog(\n        \"Having the same collision masks for all animations will erase and reset all the other animations collision masks. This can't be undone. Are you sure you want to share these collision masks amongst all the animations of the object?\"\n      );\n      if (!answer) return;\n    }\n\n    setSameCollisionMasksForAnimations(\n      enable && sameCollisionMasksForAnimations\n    );\n    setSameCollisionMasksForSprites(enable);\n  };\n\n  const setCurrentSpriteSize = (spriteWidth: number, spriteHeight: number) => {\n    setSpriteWidth(spriteWidth);\n    setSpriteHeight(spriteHeight);\n  };\n\n  React.useEffect(updateCollisionMasks, [\n    sameCollisionMasksForAnimations,\n    sameCollisionMasksForSprites,\n  ]);\n\n  React.useEffect(updateSameCollisionMasksToggles, [animationIndex]);\n\n  // Keep panes vertical for small screens, side-by-side for large screens\n  const screenSize = useResponsiveWindowWidth();\n  const editorNodes =\n    screenSize === 'small' ? verticalMosaicNodes : horizontalMosaicNodes;\n\n  if (!props.object.getAnimationsCount()) return null;\n\n  const editors: { [string]: Editor } = {\n    preview: {\n      type: 'primary',\n      noTitleBar: true,\n      renderEditor: () => (\n        <Background>\n          <ImagePreview\n            resourceName={hasValidSprite ? sprite.getImageName() : ''}\n            resourcesLoader={props.resourcesLoader}\n            project={props.project}\n            onSize={setCurrentSpriteSize}\n            renderOverlay={overlayProps =>\n              hasValidSprite && (\n                <CollisionMasksPreview\n                  {...overlayProps}\n                  isDefaultBoundingBox={sprite.isCollisionMaskAutomatic()}\n                  polygons={sprite.getCustomCollisionMask()}\n                  onPolygonsUpdated={updateCollisionMasks}\n                />\n              )\n            }\n          />\n        </Background>\n      ),\n    },\n    properties: {\n      type: 'secondary',\n      noTitleBar: true,\n      renderEditor: () => (\n        <Background>\n          <Line>\n            <Column expand>\n              <SpriteSelector\n                spriteObject={spriteObject}\n                animationIndex={animationIndex}\n                directionIndex={directionIndex}\n                spriteIndex={spriteIndex}\n                chooseAnimation={chooseAnimation}\n                chooseDirection={chooseDirection}\n                chooseSprite={chooseSprite}\n                sameForAllAnimations={sameCollisionMasksForAnimations}\n                sameForAllSprites={sameCollisionMasksForSprites}\n                setSameForAllAnimations={setSameCollisionMasksForAllAnimations}\n                setSameForAllSprites={setSameCollisionMasksForAllSprites}\n                setSameForAllAnimationsLabel={\n                  <Trans>Share same collision masks for all animations</Trans>\n                }\n                setSameForAllSpritesLabel={\n                  <Trans>\n                    Share same collision masks for all sprites of this animation\n                  </Trans>\n                }\n              />\n            </Column>\n          </Line>\n          {!!sprite && !sprite.isCollisionMaskAutomatic() && (\n            <React.Fragment>\n              <PolygonsList\n                polygons={sprite.getCustomCollisionMask()}\n                onPolygonsUpdated={updateCollisionMasks}\n                restoreCollisionMask={() => onSetCollisionMaskAutomatic(true)}\n                spriteWidth={spriteWidth}\n                spriteHeight={spriteHeight}\n              />\n            </React.Fragment>\n          )}\n          {!!sprite && sprite.isCollisionMaskAutomatic() && (\n            <React.Fragment>\n              <EmptyMessage>\n                <Trans>\n                  This sprite uses the default collision mask, a rectangle that\n                  is as large as the sprite.\n                </Trans>\n              </EmptyMessage>\n              <Line justifyContent=\"center\">\n                <FlatButton\n                  label={<Trans>Use a custom collision mask</Trans>}\n                  primary={false}\n                  onClick={() => onSetCollisionMaskAutomatic(false)}\n                />\n              </Line>\n            </React.Fragment>\n          )}\n          {!sprite && (\n            <EmptyMessage>\n              <Trans>\n                Choose an animation and frame to edit the collision masks\n              </Trans>\n            </EmptyMessage>\n          )}\n        </Background>\n      ),\n    },\n  };\n\n  return (\n    <div style={{ flex: 1 }}>\n      <EditorMosaic editors={editors} initialNodes={editorNodes} />\n    </div>\n  );\n};\n\nexport default CollisionMasksEditor;\n","// @flow\nimport * as React from 'react';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableHeaderColumn,\n  TableRow,\n  TableRowColumn,\n} from '../../../../UI/Table';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport { mapVector } from '../../../../Utils/MapFor';\nimport styles from './styles';\nimport VerticeRow from './VerticeRow';\nimport {\n  Accordion,\n  AccordionBody,\n  AccordionHeader,\n} from '../../../../UI/Accordion';\nimport Text from '../../../../UI/Text';\nimport IconButton from '../../../../UI/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport AddIcon from '@material-ui/icons/Add';\nimport FlatButton from '../../../../UI/FlatButton';\nimport { Trans, t } from '@lingui/macro';\nimport { Column, Line, Spacer } from '../../../../UI/Grid';\nimport RaisedButtonWithSplitMenu from '../../../../UI/RaisedButtonWithSplitMenu';\nimport AlertMessage from '../../../../UI/AlertMessage';\nimport GDevelopThemeContext from '../../../../UI/Theme/ThemeContext';\nimport ScrollView from '../../../../UI/ScrollView';\nconst gd = global.gd;\n\nconst SortableVerticeRow = SortableElement(VerticeRow);\n\ntype VerticesTableProps = {|\n  vertices: gdVectorVector2f,\n  hasWarning: boolean,\n  onUpdated: () => void,\n\n  // Sprite size is useful to make sure polygon vertices\n  // are not put outside the sprite bounding box, which is not supported:\n  spriteWidth: number,\n  spriteHeight: number,\n|};\n\nconst VerticesTable = (props: VerticesTableProps) => {\n  const updateVerticeX = (vertice, newValue) => {\n    // Ensure vertice stays inside the sprite bounding box.\n    vertice.set_x(Math.min(props.spriteWidth, Math.max(newValue, 0)));\n    props.onUpdated();\n  };\n\n  const updateVerticeY = (vertice, newValue) => {\n    // Ensure vertice stays inside the sprite bounding box.\n    vertice.set_y(Math.min(props.spriteHeight, Math.max(newValue, 0)));\n    props.onUpdated();\n  };\n\n  return (\n    <Column expand>\n      {props.hasWarning && (\n        <AlertMessage kind=\"warning\">\n          <Trans>\n            The polygon is not convex. Ensure it is, otherwise the collision\n            mask won't work.\n          </Trans>\n        </AlertMessage>\n      )}\n      <Spacer />\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHeaderColumn />\n            <TableHeaderColumn style={styles.coordinateColumn}>\n              X\n            </TableHeaderColumn>\n            <TableHeaderColumn style={styles.coordinateColumn}>\n              Y\n            </TableHeaderColumn>\n            <TableRowColumn style={styles.toolColumn} />\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {mapVector(props.vertices, (vertice, j) => (\n            <SortableVerticeRow\n              index={j}\n              key={j}\n              disabled\n              verticeX={vertice.get_x()}\n              verticeY={vertice.get_y()}\n              onChangeVerticeX={newValue => updateVerticeX(vertice, newValue)}\n              onChangeVerticeY={newValue => updateVerticeY(vertice, newValue)}\n              onRemove={() => {\n                gd.removeFromVectorVector2f(props.vertices, j);\n                props.onUpdated();\n              }}\n              canRemove={props.vertices.size() > 3}\n            />\n          ))}\n        </TableBody>\n      </Table>\n      <Line justifyContent=\"center\">\n        <FlatButton\n          icon={<AddIcon size=\"small\" />}\n          label={<Trans>Add a vertex</Trans>}\n          onClick={() => {\n            const newVertice = new gd.Vector2f();\n            props.vertices.push_back(newVertice);\n            newVertice.delete();\n            props.onUpdated();\n          }}\n        />\n      </Line>\n    </Column>\n  );\n};\n\nconst SortableVerticesTable = SortableContainer(VerticesTable);\n\ntype PolygonSectionProps = {|\n  polygon: gdPolygon2d,\n  onUpdated: () => void,\n  onRemove: () => void,\n\n  // Sprite size is useful to make sure polygon vertices\n  // are not put outside the sprite bounding box, which is not supported:\n  spriteWidth: number,\n  spriteHeight: number,\n|};\n\nconst PolygonSection = (props: PolygonSectionProps) => {\n  const theme = React.useContext(GDevelopThemeContext);\n  const warningColor = theme.message.warning;\n\n  const vertices = props.polygon.getVertices();\n  const verticesCount = vertices.size();\n  const isConvex = props.polygon.isConvex();\n\n  const polygonActions = [\n    isConvex ? null : (\n      <IconButton\n        key=\"not-convex\"\n        size=\"small\"\n        tooltip={t`Polygon is not convex!`}\n      >\n        <WarningIcon style={{ color: warningColor }} />\n      </IconButton>\n    ),\n    <IconButton\n      key=\"delete-mask\"\n      size=\"small\"\n      onClick={ev => {\n        ev.stopPropagation();\n        props.onRemove();\n      }}\n      tooltip={t`Delete collision mask`}\n    >\n      <DeleteIcon />\n    </IconButton>,\n  ];\n\n  return (\n    <Accordion defaultExpanded>\n      <AccordionHeader actions={polygonActions}>\n        <Text displayInlineAsSpan>\n          {verticesCount === 3 && `Triangle`}\n          {verticesCount === 4 && `Quadrilateral`}\n          {verticesCount >= 5 && `Polygon with ${verticesCount} vertices`}\n        </Text>\n      </AccordionHeader>\n      <AccordionBody disableGutters>\n        <SortableVerticesTable\n          vertices={vertices}\n          hasWarning={!isConvex}\n          onUpdated={props.onUpdated}\n          spriteWidth={props.spriteWidth}\n          spriteHeight={props.spriteHeight}\n          onSortEnd={({ oldIndex, newIndex }) => {\n            // Reordering polygons is not supported for now\n          }}\n          helperClass=\"sortable-helper\"\n          useDragHandle\n          lockToContainerEdges\n        />\n      </AccordionBody>\n    </Accordion>\n  );\n};\n\ntype PolygonsListProps = {|\n  polygons: gdVectorPolygon2d,\n  onPolygonsUpdated: () => void,\n  restoreCollisionMask: () => void,\n\n  // Sprite size is useful to make sure polygon vertices\n  // are not put outside the sprite bounding box, which is not supported:\n  spriteWidth: number,\n  spriteHeight: number,\n|};\n\nconst PolygonsList = (props: PolygonsListProps) => {\n  const {\n    polygons,\n    spriteHeight,\n    spriteWidth,\n    onPolygonsUpdated,\n    restoreCollisionMask,\n  } = props;\n\n  const addCollisionMask = React.useCallback(\n    () => {\n      const newPolygon = gd.Polygon2d.createRectangle(\n        spriteWidth,\n        spriteHeight\n      );\n      newPolygon.move(spriteWidth / 2, spriteHeight / 2);\n      polygons.push_back(newPolygon);\n      onPolygonsUpdated();\n    },\n    [spriteHeight, spriteWidth, polygons, onPolygonsUpdated]\n  );\n\n  React.useEffect(\n    () => {\n      if (polygons.size() === 0) {\n        addCollisionMask();\n      }\n    },\n    [polygons, addCollisionMask]\n  );\n\n  return (\n    <React.Fragment>\n      <Column noMargin expand useFullHeight>\n        <ScrollView>\n          {mapVector(polygons, (polygon, i) => (\n            <PolygonSection\n              key={`polygon-${i}`}\n              polygon={polygon}\n              onUpdated={onPolygonsUpdated}\n              onRemove={() => {\n                gd.removeFromVectorPolygon2d(polygons, i);\n                if (polygons.size() === 0) {\n                  restoreCollisionMask();\n                }\n                onPolygonsUpdated();\n              }}\n              spriteWidth={spriteWidth}\n              spriteHeight={spriteHeight}\n            />\n          ))}\n        </ScrollView>\n        <Column>\n          <Line alignItems=\"center\" justifyContent=\"center\">\n            <RaisedButtonWithSplitMenu\n              primary\n              icon={<AddIcon />}\n              label={<Trans>Add collision mask</Trans>}\n              onClick={() => {\n                addCollisionMask();\n              }}\n              buildMenuTemplate={i18n => [\n                {\n                  label: i18n._(t`Restore the default collision mask`),\n                  click: restoreCollisionMask,\n                },\n              ]}\n            />\n          </Line>\n        </Column>\n      </Column>\n    </React.Fragment>\n  );\n};\n\nexport default PolygonsList;\n","// @flow\nimport React from 'react';\nimport { TableRow, TableRowColumn } from '../../../../UI/Table';\nimport IconButton from '../../../../UI/IconButton';\nimport Delete from '@material-ui/icons/Delete';\nimport TextField from '../../../../UI/TextField';\nimport styles from './styles';\nimport ThemeConsumer from '../../../../UI/Theme/ThemeConsumer';\n\ntype Props = {|\n  canRemove: boolean,\n  onRemove: () => void,\n  verticeX: number,\n  verticeY: number,\n  onChangeVerticeX: (value: number) => void,\n  onChangeVerticeY: (value: number) => void,\n|};\n\nconst VerticeRow = (props: Props) => (\n  <ThemeConsumer>\n    {muiTheme => (\n      <TableRow\n        style={{\n          backgroundColor: muiTheme.list.itemsBackgroundColor,\n        }}\n      >\n        <TableRowColumn />\n        <TableRowColumn style={styles.coordinateColumn}>\n          <TextField\n            margin=\"none\"\n            value={props.verticeX}\n            type=\"number\"\n            id=\"vertice-x\"\n            onChange={(e, value) =>\n              props.onChangeVerticeX(parseFloat(value || 0))\n            }\n          />\n        </TableRowColumn>\n        <TableRowColumn style={styles.coordinateColumn}>\n          <TextField\n            margin=\"none\"\n            value={props.verticeY}\n            type=\"number\"\n            id=\"vertice-y\"\n            onChange={(e, value) =>\n              props.onChangeVerticeY(parseFloat(value || 0))\n            }\n          />\n        </TableRowColumn>\n        <TableRowColumn style={styles.toolColumn}>\n          {!!props.onRemove && (\n            <IconButton\n              size=\"small\"\n              onClick={props.onRemove}\n              disabled={!props.canRemove}\n            >\n              <Delete />\n            </IconButton>\n          )}\n        </TableRowColumn>\n      </TableRow>\n    )}\n  </ThemeConsumer>\n);\n\nexport default VerticeRow;\n","// @flow\nimport * as React from 'react';\nimport { mapVector } from '../../../../Utils/MapFor';\nimport useForceUpdate from '../../../../Utils/UseForceUpdate';\n\nconst styles = {\n  vertexCircle: {\n    cursor: 'move',\n  },\n};\n\ntype Props = {|\n  polygons: gdVectorPolygon2d,\n  isDefaultBoundingBox: boolean,\n  imageWidth: number,\n  imageHeight: number,\n  offsetTop: number,\n  offsetLeft: number,\n  imageZoomFactor: number,\n  onPolygonsUpdated: () => void,\n|};\n\nconst CollisionMasksPreview = (props: Props) => {\n  const svgRef = React.useRef<React.ElementRef<'svg'> | null>(null);\n  const [draggedVertex, setDraggedVertex] = React.useState<gdVector2f | null>(\n    null\n  );\n\n  const {\n    polygons,\n    imageZoomFactor,\n    imageHeight,\n    imageWidth,\n    offsetTop,\n    offsetLeft,\n    isDefaultBoundingBox,\n  } = props;\n\n  const forceUpdate = useForceUpdate();\n\n  const onStartDragVertex = (vertex: gdVector2f) => {\n    if (draggedVertex) return;\n    setDraggedVertex(vertex);\n  };\n\n  const onEndDragVertex = () => {\n    const draggingWasDone = !!draggedVertex;\n    if (draggingWasDone) props.onPolygonsUpdated();\n    setDraggedVertex(null);\n  };\n\n  /**\n   * Move a vertex with the mouse. A similar dragging implementation is done in\n   * PointsPreview (but with div and img elements).\n   *\n   * TODO: This could be optimized by avoiding the forceUpdate (not sure if worth it though).\n   */\n  const onPointerMove = (event: any) => {\n    if (!draggedVertex || !svgRef.current) return;\n\n    // $FlowExpectedError Flow doesn't have SVG typings yet (@facebook/flow#4551)\n    const pointOnScreen = svgRef.current.createSVGPoint();\n    pointOnScreen.x = event.clientX;\n    pointOnScreen.y = event.clientY;\n    // $FlowExpectedError Flow doesn't have SVG typings yet (@facebook/flow#4551)\n    const screenToSvgMatrix = svgRef.current.getScreenCTM().inverse();\n    const pointOnSvg = pointOnScreen.matrixTransform(screenToSvgMatrix);\n\n    // Confine vertices to inside the sprite frame\n    const { frameX, frameY } = confinePointToFrame(pointOnSvg.x, pointOnSvg.y);\n\n    draggedVertex.set_x(frameX / imageZoomFactor);\n    draggedVertex.set_y(frameY / imageZoomFactor);\n    forceUpdate();\n  };\n\n  /**\n   * Given a point's coordinates, returns new coordinates that\n   * are confined inside the sprite frame.\n   */\n  const confinePointToFrame = (freeX: number, freeY: number) => {\n    const maxX = imageWidth * imageZoomFactor;\n    const maxY = imageHeight * imageZoomFactor;\n\n    const frameX = Math.min(maxX, Math.max(freeX, 0));\n    const frameY = Math.min(maxY, Math.max(freeY, 0));\n    return { frameX, frameY };\n  };\n\n  const renderBoundingBox = () => {\n    return (\n      <polygon\n        fill=\"rgba(255,0,0,0.2)\"\n        stroke=\"rgba(255,0,0,0.5)\"\n        strokeWidth={1}\n        fillRule=\"evenodd\"\n        points={`0,0 ${imageWidth * imageZoomFactor},0 ${imageWidth *\n          imageZoomFactor},${imageHeight * imageZoomFactor} 0,${imageHeight *\n          imageZoomFactor}`}\n      />\n    );\n  };\n\n  const renderPolygons = () => {\n    return (\n      <React.Fragment>\n        {mapVector(polygons, (polygon, i) => {\n          const vertices = polygon.getVertices();\n          return (\n            <polygon\n              key={`polygon-${i}`}\n              fill=\"rgba(255,0,0,0.2)\"\n              stroke=\"rgba(255,0,0,0.5)\"\n              strokeWidth={1}\n              fillRule=\"evenodd\"\n              points={mapVector(\n                vertices,\n                (vertex, j) =>\n                  `${vertex.get_x() * imageZoomFactor},${vertex.get_y() *\n                    imageZoomFactor}`\n              ).join(' ')}\n            />\n          );\n        })}\n        {mapVector(polygons, (polygon, i) => {\n          const vertices = polygon.getVertices();\n          return mapVector(vertices, (vertex, j) => (\n            <circle\n              onPointerDown={() => onStartDragVertex(vertex)}\n              key={`polygon-${i}-vertex-${j}`}\n              fill=\"rgba(255,0,0,0.75)\"\n              strokeWidth={1}\n              cx={vertex.get_x() * imageZoomFactor}\n              cy={vertex.get_y() * imageZoomFactor}\n              r={5}\n              style={styles.vertexCircle}\n            />\n          ));\n        })}\n      </React.Fragment>\n    );\n  };\n\n  const containerStyle = {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n  };\n\n  const svgStyle = {\n    position: 'absolute',\n    top: offsetTop || 0,\n    left: offsetLeft || 0,\n    width: imageWidth * imageZoomFactor,\n    height: imageHeight * imageZoomFactor,\n    overflow: 'visible',\n  };\n\n  return (\n    <div\n      style={containerStyle}\n      onPointerMove={onPointerMove}\n      onPointerUp={onEndDragVertex}\n    >\n      <svg style={svgStyle} ref={svgRef}>\n        {isDefaultBoundingBox && renderBoundingBox()}\n        {!isDefaultBoundingBox && renderPolygons()}\n      </svg>\n    </div>\n  );\n};\n\nexport default CollisionMasksPreview;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Line, Column } from '../../UI/Grid';\nimport EmptyMessage from '../../UI/EmptyMessage';\n\nexport default function EmptyEditor() {\n  return (\n    <Column>\n      <Line>\n        <EmptyMessage>\n          <Trans>\n            This object does not have any specific configuration. Add it on the\n            scene and use events to interact with it.\n          </Trans>\n        </EmptyMessage>\n      </Line>\n    </Column>\n  );\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Checkbox from '../../UI/Checkbox';\nimport ColorField from '../../UI/ColorField';\nimport {\n  rgbColorToRGBString,\n  rgbStringAndAlphaToRGBColor,\n} from '../../Utils/ColorTransformer';\nimport { type EditorProps } from './EditorProps.flow';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport { ResponsiveLineStackLayout, ColumnStackLayout } from '../../UI/Layout';\nconst gd = global.gd;\n\nexport default class PanelSpriteEditor extends React.Component<\n  EditorProps,\n  void\n> {\n  render() {\n    const { object } = this.props;\n    const shapePainterObject = gd.asShapePainterObject(object);\n\n    return (\n      <ColumnStackLayout>\n        <Checkbox\n          label={\n            <Trans>\n              Draw the shapes relative to the object position on the scene\n            </Trans>\n          }\n          checked={!shapePainterObject.areCoordinatesAbsolute()}\n          onCheck={(e, checked) => {\n            if (!checked) shapePainterObject.setCoordinatesAbsolute();\n            else shapePainterObject.setCoordinatesRelative();\n            this.forceUpdate();\n          }}\n        />\n        <Checkbox\n          label={<Trans>Clear the rendered image between each frame</Trans>}\n          checked={shapePainterObject.isClearedBetweenFrames()}\n          onCheck={(e, checked) => {\n            shapePainterObject.setClearBetweenFrames(checked);\n            this.forceUpdate();\n          }}\n        />\n        <ResponsiveLineStackLayout noMargin>\n          <ColorField\n            floatingLabelText={<Trans>Outline color</Trans>}\n            disableAlpha\n            fullWidth\n            color={rgbColorToRGBString({\n              r: shapePainterObject.getOutlineColorR(),\n              g: shapePainterObject.getOutlineColorG(),\n              b: shapePainterObject.getOutlineColorB(),\n            })}\n            onChange={color => {\n              const rgbColor = rgbStringAndAlphaToRGBColor(color);\n              if (rgbColor) {\n                shapePainterObject.setOutlineColor(\n                  rgbColor.r,\n                  rgbColor.g,\n                  rgbColor.b\n                );\n\n                this.forceUpdate();\n              }\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Outline opacity (0-255)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={shapePainterObject.getOutlineOpacity()}\n            onChange={value => {\n              shapePainterObject.setOutlineOpacity(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Outline size (in pixels)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={shapePainterObject.getOutlineSize()}\n            onChange={value => {\n              shapePainterObject.setOutlineSize(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <ColorField\n            floatingLabelText={<Trans>Fill color</Trans>}\n            disableAlpha\n            fullWidth\n            color={rgbColorToRGBString({\n              r: shapePainterObject.getFillColorR(),\n              g: shapePainterObject.getFillColorG(),\n              b: shapePainterObject.getFillColorB(),\n            })}\n            onChange={color => {\n              const rgbColor = rgbStringAndAlphaToRGBColor(color);\n              if (rgbColor) {\n                shapePainterObject.setFillColor(\n                  rgbColor.r,\n                  rgbColor.g,\n                  rgbColor.b\n                );\n\n                this.forceUpdate();\n              }\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Fill opacity (0-255)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={shapePainterObject.getFillOpacity()}\n            onChange={value => {\n              shapePainterObject.setFillOpacity(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n      </ColumnStackLayout>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Checkbox from '../../UI/Checkbox';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\nimport ColorField from '../../UI/ColorField';\nimport {\n  rgbColorToRGBString,\n  rgbStringAndAlphaToRGBColor,\n} from '../../Utils/ColorTransformer';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport { type EditorProps } from './EditorProps.flow';\nimport ResourceSelectorWithThumbnail from '../../ResourcesList/ResourceSelectorWithThumbnail';\nimport { ResponsiveLineStackLayout, ColumnStackLayout } from '../../UI/Layout';\nimport DismissableTutorialMessage from '../../Hints/DismissableTutorialMessage';\nimport { getObjectTutorialIds } from '../../Utils/GDevelopServices/Tutorial';\nconst gd = global.gd;\n\nexport default class ParticleEmitterEditor extends React.Component<\n  EditorProps,\n  void\n> {\n  render() {\n    const {\n      object,\n      project,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n    } = this.props;\n    const particleEmitterObject = gd.asParticleEmitterObject(object);\n    const tutorialIds = getObjectTutorialIds(object.getType());\n\n    return (\n      <ColumnStackLayout>\n        {tutorialIds.map(tutorialId => (\n          <DismissableTutorialMessage\n            key={tutorialId}\n            tutorialId={tutorialId}\n          />\n        ))}\n        <SelectField\n          fullWidth\n          floatingLabelText={<Trans>Particle type</Trans>}\n          value={particleEmitterObject.getRendererType()}\n          onChange={(e, i, value: string) => {\n            const rendererType = parseInt(value, 10) || 0;\n            particleEmitterObject.setRendererType(rendererType);\n            if (rendererType !== gd.ParticleEmitterObject.Quad) {\n              particleEmitterObject.setParticleTexture('');\n            }\n            this.forceUpdate();\n          }}\n        >\n          <SelectOption\n            value={gd.ParticleEmitterObject.Point}\n            primaryText={t`Circle`}\n          />\n          <SelectOption\n            value={gd.ParticleEmitterObject.Line}\n            primaryText={t`Line`}\n          />\n          <SelectOption\n            value={gd.ParticleEmitterObject.Quad}\n            primaryText={t`Image`}\n          />\n        </SelectField>\n        {particleEmitterObject.getRendererType() ===\n          gd.ParticleEmitterObject.Point && (\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Size</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getRendererParam1()}\n            onChange={value => {\n              particleEmitterObject.setRendererParam1(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n        )}\n        {particleEmitterObject.getRendererType() ===\n          gd.ParticleEmitterObject.Line && (\n          <ResponsiveLineStackLayout noMargin>\n            <SemiControlledTextField\n              commitOnBlur\n              floatingLabelText={<Trans>Lines length</Trans>}\n              fullWidth\n              type=\"number\"\n              value={particleEmitterObject.getRendererParam1()}\n              onChange={value => {\n                particleEmitterObject.setRendererParam1(parseFloat(value));\n                this.forceUpdate();\n              }}\n            />\n            <SemiControlledTextField\n              commitOnBlur\n              floatingLabelText={<Trans>Lines thickness</Trans>}\n              fullWidth\n              type=\"number\"\n              value={particleEmitterObject.getRendererParam2()}\n              onChange={value => {\n                particleEmitterObject.setRendererParam2(parseFloat(value));\n                this.forceUpdate();\n              }}\n            />\n          </ResponsiveLineStackLayout>\n        )}\n        {particleEmitterObject.getRendererType() ===\n          gd.ParticleEmitterObject.Quad && (\n          <ResourceSelectorWithThumbnail\n            project={project}\n            resourceSources={resourceSources}\n            onChooseResource={onChooseResource}\n            resourceKind=\"image\"\n            resourceName={particleEmitterObject.getParticleTexture()}\n            resourceExternalEditors={resourceExternalEditors}\n            onChange={resourceName => {\n              particleEmitterObject.setParticleTexture(resourceName);\n              this.forceUpdate();\n            }}\n            floatingLabelText={<Trans>Select an image</Trans>}\n          />\n        )}\n        {particleEmitterObject.getRendererType() ===\n          gd.ParticleEmitterObject.Quad && (\n          <ResponsiveLineStackLayout noMargin>\n            <SemiControlledTextField\n              commitOnBlur\n              floatingLabelText={<Trans>Particles start width</Trans>}\n              fullWidth\n              type=\"number\"\n              value={particleEmitterObject.getRendererParam1()}\n              onChange={value => {\n                particleEmitterObject.setRendererParam1(\n                  Math.max(0, parseFloat(value))\n                );\n                this.forceUpdate();\n              }}\n            />\n            <SemiControlledTextField\n              commitOnBlur\n              floatingLabelText={<Trans>Particles start height</Trans>}\n              fullWidth\n              type=\"number\"\n              value={particleEmitterObject.getRendererParam2()}\n              onChange={value => {\n                particleEmitterObject.setRendererParam2(\n                  Math.max(0, parseFloat(value))\n                );\n                this.forceUpdate();\n              }}\n            />\n          </ResponsiveLineStackLayout>\n        )}\n        <ResponsiveLineStackLayout noMargin>\n          <ColorField\n            floatingLabelText={<Trans>Particles start color</Trans>}\n            disableAlpha\n            fullWidth\n            color={rgbColorToRGBString({\n              r: particleEmitterObject.getParticleRed1(),\n              g: particleEmitterObject.getParticleGreen1(),\n              b: particleEmitterObject.getParticleBlue1(),\n            })}\n            onChange={color => {\n              const rgbColor = rgbStringAndAlphaToRGBColor(color);\n              if (rgbColor) {\n                particleEmitterObject.setParticleRed1(rgbColor.r);\n                particleEmitterObject.setParticleGreen1(rgbColor.g);\n                particleEmitterObject.setParticleBlue1(rgbColor.b);\n\n                this.forceUpdate();\n              }\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Start opacity (0-255)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleAlpha1()}\n            onChange={value => {\n              particleEmitterObject.setParticleAlpha1(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <ColorField\n            floatingLabelText={<Trans>Particles end color</Trans>}\n            disableAlpha\n            fullWidth\n            color={rgbColorToRGBString({\n              r: particleEmitterObject.getParticleRed2(),\n              g: particleEmitterObject.getParticleGreen2(),\n              b: particleEmitterObject.getParticleBlue2(),\n            })}\n            onChange={color => {\n              const rgbColor = rgbStringAndAlphaToRGBColor(color);\n              if (rgbColor) {\n                particleEmitterObject.setParticleRed2(rgbColor.r);\n                particleEmitterObject.setParticleGreen2(rgbColor.g);\n                particleEmitterObject.setParticleBlue2(rgbColor.b);\n\n                this.forceUpdate();\n              }\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>End opacity (0-255)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleAlpha2()}\n            onChange={value => {\n              particleEmitterObject.setParticleAlpha2(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <Checkbox\n          label={<Trans>Additive rendering</Trans>}\n          checked={particleEmitterObject.isRenderingAdditive()}\n          onCheck={(e, checked) => {\n            if (checked) particleEmitterObject.setRenderingAdditive();\n            else particleEmitterObject.setRenderingAlpha();\n            this.forceUpdate();\n          }}\n        />\n        <Checkbox\n          label={<Trans>Delete when out of particles</Trans>}\n          checked={particleEmitterObject.getDestroyWhenNoParticles()}\n          onCheck={(e, checked) => {\n            particleEmitterObject.setDestroyWhenNoParticles(checked);\n            this.forceUpdate();\n          }}\n        />\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Maximum number of particles displayed</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getMaxParticleNb()}\n            onChange={value => {\n              particleEmitterObject.setMaxParticleNb(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Number of particles in tank (-1 for infinite)</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getTank()}\n            onChange={value => {\n              particleEmitterObject.setTank(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Flow of particles (particles/seconds)</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getFlow()}\n            onChange={value => {\n              particleEmitterObject.setFlow(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Minimum emitter force applied on particles</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getEmitterForceMin()}\n            onChange={value => {\n              particleEmitterObject.setEmitterForceMin(\n                parseInt(value, 10) || 0\n              );\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Maximum emitter force applied on particles</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getEmitterForceMax()}\n            onChange={value => {\n              particleEmitterObject.setEmitterForceMax(\n                parseInt(value, 10) || 0\n              );\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Spray cone angle (in degrees)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getConeSprayAngle()}\n            onChange={value => {\n              particleEmitterObject.setConeSprayAngle(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Radius of the emitter</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getZoneRadius()}\n            onChange={value => {\n              particleEmitterObject.setZoneRadius(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Gravity on particles on X axis</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleGravityX()}\n            onChange={value => {\n              particleEmitterObject.setParticleGravityX(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Gravity on particles on Y axis</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleGravityY()}\n            onChange={value => {\n              particleEmitterObject.setParticleGravityY(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Particle minimum lifetime (in seconds)</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleLifeTimeMin()}\n            onChange={value => {\n              particleEmitterObject.setParticleLifeTimeMin(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Particle maximum lifetime (in seconds)</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleLifeTimeMax()}\n            onChange={value => {\n              particleEmitterObject.setParticleLifeTimeMax(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Particle start size (in percents)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleSize1()}\n            onChange={value => {\n              particleEmitterObject.setParticleSize1(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Particle end size (in percents)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleSize2()}\n            onChange={value => {\n              particleEmitterObject.setParticleSize2(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Particle minimum rotation speed (degrees/second)</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleAngle1()}\n            onChange={value => {\n              particleEmitterObject.setParticleAngle1(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Particle maximum rotation speed (degrees/second)</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleAngle2()}\n            onChange={value => {\n              particleEmitterObject.setParticleAngle2(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n      </ColumnStackLayout>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\n\nimport * as React from 'react';\nimport PropertiesEditor from '../../PropertiesEditor';\nimport propertiesMapToSchema from '../../PropertiesEditor/PropertiesMapToSchema';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport { type EditorProps } from './EditorProps.flow';\nimport { Line } from '../../UI/Grid';\nimport { getExtraObjectsInformation } from '../../Hints';\nimport { getObjectTutorialIds } from '../../Utils/GDevelopServices/Tutorial';\nimport AlertMessage from '../../UI/AlertMessage';\nimport { ColumnStackLayout } from '../../UI/Layout';\nimport DismissableTutorialMessage from '../../Hints/DismissableTutorialMessage';\n\nconst gd: libGDevelop = global.gd;\n\ntype Props = EditorProps;\n\nconst ObjectPropertiesEditor = (props: Props) => {\n  const {\n    object,\n    project,\n    resourceSources,\n    onChooseResource,\n    resourceExternalEditors,\n    unsavedChanges,\n  } = props;\n\n  // TODO: Workaround a bad design of ObjectJsImplementation. When getProperties\n  // and associated methods are redefined in JS, they have different arguments (\n  // see ObjectJsImplementation C++ implementation). If called directly here from JS,\n  // the arguments will be mismatched. To workaround this, always case the object to\n  // a base gdObject to ensure C++ methods are called.\n  const objectAsGdObject = gd.castObject(object, gd.gdObject);\n  const properties = objectAsGdObject.getProperties();\n\n  const propertiesSchema = propertiesMapToSchema(\n    properties,\n    object => object.getProperties(),\n    (object, name, value) => object.updateProperty(name, value)\n  );\n\n  const extraInformation = getExtraObjectsInformation()[\n    objectAsGdObject.getType()\n  ];\n\n  const tutorialIds = getObjectTutorialIds(objectAsGdObject.getType());\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <ColumnStackLayout>\n          {tutorialIds.map(tutorialId => (\n            <DismissableTutorialMessage\n              key={tutorialId}\n              tutorialId={tutorialId}\n            />\n          ))}\n          {propertiesSchema.length ? (\n            <React.Fragment>\n              {extraInformation ? (\n                <Line>\n                  <ColumnStackLayout noMargin>\n                    {extraInformation.map(({ kind, message }, index) => (\n                      <AlertMessage kind={kind} key={index}>\n                        {i18n._(message)}\n                      </AlertMessage>\n                    ))}\n                  </ColumnStackLayout>\n                </Line>\n              ) : null}\n              <PropertiesEditor\n                unsavedChanges={unsavedChanges}\n                schema={propertiesSchema}\n                instances={[objectAsGdObject]}\n                project={project}\n                resourceSources={resourceSources}\n                onChooseResource={onChooseResource}\n                resourceExternalEditors={resourceExternalEditors}\n              />\n            </React.Fragment>\n          ) : (\n            <EmptyMessage>\n              <Trans>\n                There is nothing to configure for this object. You can still use\n                events to interact with the object.\n              </Trans>\n            </EmptyMessage>\n          )}\n        </ColumnStackLayout>\n      )}\n    </I18n>\n  );\n};\n\nexport default ObjectPropertiesEditor;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport TextField from '../UI/TextField';\nimport Add from '@material-ui/icons/Add';\nimport Delete from '@material-ui/icons/Delete';\nimport IconButton from '../UI/IconButton';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport { MiniToolbarText } from '../UI/MiniToolbar';\nimport HelpIcon from '../UI/HelpIcon';\nimport NewBehaviorDialog from './NewBehaviorDialog';\nimport BehaviorsEditorService from './BehaviorsEditorService';\nimport Window from '../Utils/Window';\nimport { Column, Line } from '../UI/Grid';\nimport RaisedButton from '../UI/RaisedButton';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport DismissableTutorialMessage from '../Hints/DismissableTutorialMessage';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport useForceUpdate from '../Utils/UseForceUpdate';\nimport { Accordion, AccordionHeader, AccordionBody } from '../UI/Accordion';\nimport { EmptyPlaceholder } from '../UI/EmptyPlaceholder';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport ScrollView from '../UI/ScrollView';\nimport { IconContainer } from '../UI/IconContainer';\nimport { getBehaviorTutorialIds } from '../Utils/GDevelopServices/Tutorial';\nimport {\n  addBehaviorToObject,\n  listObjectBehaviorsTypes,\n} from '../Utils/Behavior';\nimport { sendBehaviorAdded } from '../Utils/Analytics/EventSender';\n\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  object: gdObject,\n  onUpdateBehaviorsSharedData: () => void,\n  onSizeUpdated?: ?() => void,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n|};\n\nconst BehaviorsEditor = (props: Props) => {\n  const [newBehaviorDialogOpen, setNewBehaviorDialogOpen] = React.useState(\n    false\n  );\n\n  const { object, project } = props;\n  const allBehaviorNames = object.getAllBehaviorNames().toJSArray();\n  const forceUpdate = useForceUpdate();\n\n  const { values } = React.useContext(PreferencesContext);\n\n  const addBehavior = (type: string, defaultName: string) => {\n    const wasBehaviorAdded = addBehaviorToObject(\n      project,\n      object,\n      type,\n      defaultName\n    );\n\n    if (wasBehaviorAdded) {\n      setNewBehaviorDialogOpen(false);\n      sendBehaviorAdded({\n        behaviorType: type,\n        parentEditor: 'behaviors-editor',\n      });\n    }\n\n    forceUpdate();\n    if (props.onSizeUpdated) props.onSizeUpdated();\n    props.onUpdateBehaviorsSharedData();\n  };\n\n  const onChangeBehaviorName = (\n    behaviorContent: gdBehaviorContent,\n    newName: string\n  ) => {\n    // TODO: This is disabled for now as there is no proper refactoring\n    // of events after a behavior renaming. Once refactoring is available,\n    // the text field can be enabled again and refactoring calls added here\n    // (or in a parent).\n    // Renaming a behavior is something that is really rare anyway! :)\n\n    if (object.hasBehaviorNamed(newName)) return;\n    object.renameBehavior(behaviorContent.getName(), newName);\n    forceUpdate();\n  };\n\n  const onRemoveBehavior = (behaviorName: string) => {\n    let message =\n      \"Are you sure you want to remove this behavior? This can't be undone.\";\n    const dependentBehaviors = gd.WholeProjectRefactorer.findDependentBehaviorNames(\n      project,\n      object,\n      behaviorName\n    ).toJSArray();\n    if (dependentBehaviors.length > 0) {\n      message +=\n        '\\nDependent behaviors will be removed too: ' +\n        dependentBehaviors.join(', ');\n    }\n    const answer = Window.showConfirmDialog(message);\n\n    if (answer) {\n      object.removeBehavior(behaviorName);\n      dependentBehaviors.forEach(name => object.removeBehavior(name));\n      if (props.onSizeUpdated) props.onSizeUpdated();\n    }\n  };\n\n  return (\n    <Column noMargin expand useFullHeight noOverflowParent>\n      {allBehaviorNames.length === 0 ? (\n        <Column noMargin expand justifyContent=\"center\">\n          <EmptyPlaceholder\n            title={<Trans>Add your first behavior</Trans>}\n            description={\n              <Trans>\n                Behaviors add features to objects in a matter of clicks.\n              </Trans>\n            }\n            actionLabel={<Trans>Add a behavior</Trans>}\n            helpPagePath=\"/behaviors\"\n            actionButtonId=\"add-behavior-button\"\n            onAdd={() => setNewBehaviorDialogOpen(true)}\n          />\n        </Column>\n      ) : (\n        <React.Fragment>\n          <ScrollView>\n            {allBehaviorNames.map((behaviorName, index) => {\n              const behaviorContent = object.getBehavior(behaviorName);\n              const behaviorTypeName = behaviorContent.getTypeName();\n\n              const behaviorMetadata = gd.MetadataProvider.getBehaviorMetadata(\n                gd.JsPlatform.get(),\n                behaviorTypeName\n              );\n              if (gd.MetadataProvider.isBadBehaviorMetadata(behaviorMetadata)) {\n                return (\n                  <Accordion key={behaviorName} defaultExpanded>\n                    <AccordionHeader\n                      actions={[\n                        <IconButton\n                          key=\"delete\"\n                          onClick={ev => {\n                            ev.stopPropagation();\n                            onRemoveBehavior(behaviorName);\n                          }}\n                        >\n                          <Delete />\n                        </IconButton>,\n                      ]}\n                    >\n                      <MiniToolbarText firstChild>\n                        <Trans>Unknown behavior</Trans>{' '}\n                      </MiniToolbarText>\n                      <Column noMargin expand>\n                        <TextField\n                          margin=\"none\"\n                          value={behaviorName}\n                          disabled\n                        />\n                      </Column>\n                    </AccordionHeader>\n                    <AccordionBody>\n                      <EmptyMessage>\n                        <Trans>\n                          This behavior is unknown. It might be a behavior that\n                          was defined in an extension and that was later\n                          removed. You should delete it.\n                        </Trans>\n                      </EmptyMessage>\n                    </AccordionBody>\n                  </Accordion>\n                );\n              }\n\n              const behavior = behaviorMetadata.get();\n              const BehaviorComponent = BehaviorsEditorService.getEditor(\n                behaviorTypeName\n              );\n              const tutorialIds = getBehaviorTutorialIds(behaviorTypeName);\n              const enabledTutorialIds = tutorialIds.filter(\n                tutorialId => !values.hiddenTutorialHints[tutorialId]\n              );\n              const iconUrl = behaviorMetadata.getIconFilename();\n\n              return (\n                <Accordion key={behaviorName} defaultExpanded>\n                  <AccordionHeader\n                    actions={[\n                      <HelpIcon\n                        key=\"help\"\n                        size=\"small\"\n                        helpPagePath={behaviorMetadata.getHelpPath()}\n                      />,\n                      <IconButton\n                        key=\"delete\"\n                        size=\"small\"\n                        onClick={ev => {\n                          ev.stopPropagation();\n                          onRemoveBehavior(behaviorName);\n                        }}\n                      >\n                        <Delete />\n                      </IconButton>,\n                    ]}\n                  >\n                    {iconUrl ? (\n                      <IconContainer\n                        src={iconUrl}\n                        alt={behaviorMetadata.getFullName()}\n                        size={20}\n                      />\n                    ) : null}\n                    <Column expand>\n                      <TextField\n                        value={behaviorName}\n                        hintText={t`Behavior name`}\n                        margin=\"none\"\n                        fullWidth\n                        disabled\n                        onChange={(e, text) =>\n                          onChangeBehaviorName(behaviorContent, text)\n                        }\n                        id={`behavior-${behaviorName}-name-text-field`}\n                      />\n                    </Column>\n                  </AccordionHeader>\n                  <AccordionBody>\n                    <Column\n                      expand\n                      noMargin\n                      // Avoid Physics2 behavior overflow on small screens\n                      noOverflowParent\n                    >\n                      {enabledTutorialIds.length ? (\n                        <Line>\n                          <ColumnStackLayout expand>\n                            {tutorialIds.map(tutorialId => (\n                              <DismissableTutorialMessage\n                                key={tutorialId}\n                                tutorialId={tutorialId}\n                              />\n                            ))}\n                          </ColumnStackLayout>\n                        </Line>\n                      ) : null}\n                      <Line>\n                        <BehaviorComponent\n                          behavior={behavior}\n                          behaviorContent={behaviorContent}\n                          project={project}\n                          object={object}\n                          resourceSources={props.resourceSources}\n                          onChooseResource={props.onChooseResource}\n                          resourceExternalEditors={\n                            props.resourceExternalEditors\n                          }\n                        />\n                      </Line>\n                    </Column>\n                  </AccordionBody>\n                </Accordion>\n              );\n            })}\n          </ScrollView>\n          <Column>\n            <Line justifyContent=\"flex-end\" expand>\n              <RaisedButton\n                key=\"add-behavior-line\"\n                label={<Trans>Add a behavior</Trans>}\n                primary\n                onClick={() => setNewBehaviorDialogOpen(true)}\n                icon={<Add />}\n                id=\"add-behavior-button\"\n              />\n            </Line>\n          </Column>\n        </React.Fragment>\n      )}\n\n      {newBehaviorDialogOpen && (\n        <NewBehaviorDialog\n          open={newBehaviorDialogOpen}\n          objectType={object.getType()}\n          objectBehaviorsTypes={listObjectBehaviorsTypes(object)}\n          onClose={() => setNewBehaviorDialogOpen(false)}\n          onChoose={addBehavior}\n          project={project}\n        />\n      )}\n    </Column>\n  );\n};\n\nexport default BehaviorsEditor;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport TextField from '../UI/TextField';\nimport Checkbox from '../UI/Checkbox';\nimport { ColumnStackLayout, ResponsiveLineStackLayout } from '../UI/Layout';\nimport Dialog from '../UI/Dialog';\nimport ColorField from '../UI/ColorField';\nimport {\n  type InstancesEditorSettings,\n  cloneInstancesEditorSettings,\n} from '../InstancesEditor/InstancesEditorSettings';\nimport {\n  hexNumberToRGBString,\n  rgbStringToHexNumber,\n} from '../Utils/ColorTransformer';\n\ntype Props = {|\n  instancesEditorSettings: InstancesEditorSettings,\n  onChangeInstancesEditorSettings: InstancesEditorSettings => void,\n  onApply: () => void,\n  onCancel: () => void,\n|};\n\n/** Below this value, rendering the grid is too costly (risk of infinite loop/memory saturation). */\nconst GRID_MIN_VALUE = 0.01;\n\nexport default function SetupGridDialog(props: Props) {\n  const [previousOptions] = React.useState(() =>\n    cloneInstancesEditorSettings(props.instancesEditorSettings)\n  );\n\n  const onCancel = () => {\n    props.onChangeInstancesEditorSettings({\n      ...props.instancesEditorSettings,\n      gridWidth: previousOptions.gridWidth,\n      gridHeight: previousOptions.gridHeight,\n      gridOffsetX: previousOptions.gridOffsetX,\n      gridOffsetY: previousOptions.gridOffsetY,\n      gridColor: previousOptions.gridColor,\n      gridType: previousOptions.gridType,\n    });\n    props.onCancel();\n  };\n\n  return (\n    <Dialog\n      onApply={props.onApply}\n      title={<Trans>Edit Grid Options</Trans>}\n      actions={[\n        <FlatButton\n          key=\"cancel\"\n          label={<Trans>Cancel</Trans>}\n          primary={false}\n          onClick={onCancel}\n        />,\n        <FlatButton\n          key=\"apply\"\n          label={<Trans>Apply</Trans>}\n          primary={true}\n          keyboardFocused={true}\n          onClick={props.onApply}\n        />,\n      ]}\n      cannotBeDismissed={true}\n      open\n      onRequestClose={onCancel}\n      maxWidth=\"sm\"\n      noMargin\n    >\n      <ColumnStackLayout>\n        <ResponsiveLineStackLayout noMargin expand>\n          <ColorField\n            floatingLabelText={<Trans>Line color</Trans>}\n            fullWidth\n            color={hexNumberToRGBString(\n              props.instancesEditorSettings.gridColor\n            )}\n            alpha={props.instancesEditorSettings.gridAlpha}\n            onChange={(color, alpha) => {\n              props.onChangeInstancesEditorSettings({\n                ...props.instancesEditorSettings,\n                gridColor: rgbStringToHexNumber(color),\n                // alpha can be 0 and we need to handle this case.\n                gridAlpha: alpha === undefined || alpha === null ? 1 : alpha,\n              });\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin expand>\n          <TextField\n            floatingLabelText={<Trans>Cell width (in pixels)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={props.instancesEditorSettings.gridWidth}\n            onChange={(e, value) =>\n              props.onChangeInstancesEditorSettings({\n                ...props.instancesEditorSettings,\n                gridWidth: Math.max(parseFloat(value), GRID_MIN_VALUE),\n              })\n            }\n          />\n          <TextField\n            floatingLabelText={<Trans>Cell height (in pixels)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={props.instancesEditorSettings.gridHeight}\n            onChange={(e, value) =>\n              props.onChangeInstancesEditorSettings({\n                ...props.instancesEditorSettings,\n                gridHeight: Math.max(parseFloat(value), GRID_MIN_VALUE),\n              })\n            }\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin expand>\n          <TextField\n            floatingLabelText={<Trans>X offset (in pixels)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={props.instancesEditorSettings.gridOffsetX}\n            onChange={(e, value) =>\n              props.onChangeInstancesEditorSettings({\n                ...props.instancesEditorSettings,\n                gridOffsetX: parseFloat(value),\n              })\n            }\n          />\n          <TextField\n            floatingLabelText={<Trans>Y offset (in pixels)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={props.instancesEditorSettings.gridOffsetY}\n            onChange={(e, value) =>\n              props.onChangeInstancesEditorSettings({\n                ...props.instancesEditorSettings,\n                gridOffsetY: parseFloat(value),\n              })\n            }\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin expand>\n          <Checkbox\n            checked={props.instancesEditorSettings.gridType === 'isometric'}\n            label={<Trans>Isometric</Trans>}\n            onCheck={(e, check) =>\n              props.onChangeInstancesEditorSettings({\n                ...props.instancesEditorSettings,\n                gridType: check ? 'isometric' : 'rectangular',\n              })\n            }\n          />\n        </ResponsiveLineStackLayout>\n      </ColumnStackLayout>\n    </Dialog>\n  );\n}\n","// @flow\nimport React, { Component } from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport ViewPosition from './ViewPosition';\nimport throttle from 'lodash/throttle';\nimport InstancesEditor, {\n  type InstancesEditorPropsWithoutSizeAndScroll,\n} from './index';\nimport { ScreenTypeMeasurer } from '../UI/Reponsive/ScreenTypeMeasurer';\nimport { FullSizeMeasurer } from '../UI/FullSizeMeasurer';\n\nconst styles = {\n  container: {\n    overflow: 'hidden',\n  },\n  xScrollbar: {\n    position: 'absolute',\n    top: -13,\n    left: 0,\n    right: 0,\n  },\n  yScrollbar: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: -13,\n    transform: 'rotate(180deg)',\n  },\n};\n\ntype Props = {|\n  ...InstancesEditorPropsWithoutSizeAndScroll,\n  wrappedEditorRef: ?(?InstancesEditor) => void,\n|};\n\ntype State = {|\n  xValue: number,\n  yValue: number,\n  xMin: number,\n  xMax: number,\n  yMin: number,\n  yMax: number,\n|};\n\nconst noop = () => {};\n\nexport default class FullSizeInstancesEditorWithScrollbars extends Component<\n  Props,\n  State\n> {\n  _editor: ?InstancesEditor = null;\n\n  state: State = {\n    xValue: 0,\n    yValue: 0,\n    xMin: -5000,\n    xMax: +5000,\n    yMin: -5000,\n    yMax: +5000,\n  };\n\n  componentDidMount() {\n    if (this._editor) {\n      this._handleViewPositionChange(this._editor.getViewPosition());\n    }\n  }\n\n  _handleXChange = (e: any, value: number) => {\n    const { xMin, xMax } = this.state;\n    const xValue = xMin + ((xMax - xMin) * value) / 100;\n    this.setState(\n      {\n        xValue,\n      },\n      () => {\n        if (this._editor) {\n          this._editor.scrollTo(this.state.xValue, this.state.yValue);\n        }\n      }\n    );\n  };\n\n  _handleYChange = (e: any, value: number) => {\n    const { yMin, yMax } = this.state;\n    // Substract the value from 100 as the slider is 180deg rotated. Not perfect though\n    // as it breaks when using the keyboard arrow keys (when focusing the slider).\n    const yValue = yMin + ((yMax - yMin) * (100 - value)) / 100;\n    this.setState(\n      {\n        yValue,\n      },\n      () => {\n        if (this._editor) {\n          this._editor.scrollTo(this.state.xValue, this.state.yValue);\n        }\n      }\n    );\n  };\n\n  _setAndAdjust = ({ xValue, yValue }: { xValue: number, yValue: number }) => {\n    const xMax = Math.max(Math.abs(xValue) + 100, this.state.xMax);\n    const yMax = Math.max(Math.abs(yValue) + 100, this.state.yMax);\n\n    this.setState({\n      xMax,\n      yMax,\n      xMin: -xMax,\n      yMin: -yMax,\n      xValue,\n      yValue,\n    });\n  };\n\n  _handleViewPositionChange = throttle(\n    (viewPosition: ?ViewPosition) => {\n      if (!viewPosition) return;\n\n      this._setAndAdjust({\n        xValue: viewPosition.getViewX(),\n        yValue: viewPosition.getViewY(),\n      });\n    },\n    500, // Throttle the updates after a scroll to avoid make lots of updates in a row that would kill CPU\n    { leading: false, trailing: true }\n  );\n\n  render() {\n    const { wrappedEditorRef, ...otherProps } = this.props;\n\n    return (\n      <ScreenTypeMeasurer>\n        {screenType => (\n          <FullSizeMeasurer>\n            {({ width, height }) => (\n              <div style={styles.container}>\n                <InstancesEditor\n                  onViewPositionChanged={\n                    screenType !== 'touch'\n                      ? this._handleViewPositionChange\n                      : noop\n                  }\n                  ref={(editorRef: ?InstancesEditor) => {\n                    wrappedEditorRef && wrappedEditorRef(editorRef);\n                    this._editor = editorRef;\n                  }}\n                  width={width}\n                  height={height}\n                  screenType={screenType}\n                  {...otherProps}\n                />\n                {screenType !== 'touch' && (\n                  <Slider\n                    value={\n                      ((this.state.xValue - this.state.xMin) /\n                        (this.state.xMax - this.state.xMin)) *\n                      100\n                    }\n                    onChange={this._handleXChange}\n                    style={styles.xScrollbar}\n                    orientation=\"horizontal\"\n                    onChangeCommitted={event => event.target.blur()}\n                  />\n                )}\n                {screenType !== 'touch' && (\n                  <Slider\n                    value={\n                      ((this.state.yValue - this.state.yMin) /\n                        (this.state.yMax - this.state.yMin)) *\n                      100\n                    }\n                    onChange={this._handleYChange}\n                    style={styles.yScrollbar}\n                    orientation=\"vertical\"\n                    onChangeCommitted={event => event.target.blur()}\n                  />\n                )}\n              </div>\n            )}\n          </FullSizeMeasurer>\n        )}\n      </ScreenTypeMeasurer>\n    );\n  }\n}\n","// @flow\n\nexport const shortenString = (str: string, maxLength: number) => {\n  return str.length > maxLength ? str.substring(0, maxLength) + '...' : str;\n};\n","// @flow\nimport React, { Component } from 'react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport IconButton from '../IconButton';\nimport FilterList from '@material-ui/icons/FilterList';\nimport ElementWithMenu from '../Menu/ElementWithMenu';\nimport { type MenuItemTemplate } from '../Menu/Menu.flow';\n\nconst styles = {\n  container: {\n    padding: 0,\n    width: 32,\n    height: 32,\n  },\n  icon: {\n    width: 16,\n    height: 16,\n  },\n};\n\ntype Props = {|\n  buildMenuTemplate: (i18n: I18nType) => Array<MenuItemTemplate>,\n|};\n\nexport default class TagsButton extends Component<Props, {||}> {\n  render() {\n    return (\n      <ElementWithMenu\n        element={\n          <IconButton style={styles.container}>\n            <FilterList htmlColor=\"white\" style={styles.icon} />\n          </IconButton>\n        }\n        buildMenuTemplate={this.props.buildMenuTemplate}\n      />\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type AlertMessageIdentifier } from '../MainFrame/Preferences/PreferencesContext';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\n\n/*\n * Define additional logic which executes after an object/instance has been created.\n * Also, InfoBar can be used which could notify users of the additional changes.\n * Declare new identifier for infoBar in Mainframe/Preferences/PreferenceContext\n * and add it in hints/explanation list.\n */\n\nexport type InfoBarDetails = {|\n  identifier: AlertMessageIdentifier,\n  message: MessageDescriptor,\n  touchScreenMessage: MessageDescriptor,\n|};\n\ntype InfoBarEvent = 'onObjectAdded' | 'onInstanceAdded';\n\nexport const onObjectAdded = (\n  object: gdObject,\n  layout: gdLayout,\n  project: gdProject\n): ?InfoBarDetails => {\n  const additionalWork = objectType[object.getType()];\n  if (additionalWork) {\n    additionalWork.onObjectAdded(object, layout, project);\n    return additionalWork.getInfoBarDetails('onObjectAdded');\n  }\n\n  return null;\n};\n\nexport const onInstanceAdded = (\n  instance: gdInitialInstance,\n  layout: gdLayout,\n  project: gdProject\n): ?InfoBarDetails => {\n  const objectName = instance.getObjectName();\n  let object: ?gdObject = null;\n  if (layout.hasObjectNamed(objectName)) object = layout.getObject(objectName);\n  else if (project.hasObjectNamed(objectName))\n    object = project.getObject(objectName);\n\n  const additionalWork = object ? objectType[object.getType()] : null;\n  if (additionalWork) {\n    additionalWork.onInstanceAdded(instance, layout, project);\n    return additionalWork.getInfoBarDetails('onInstanceAdded');\n  }\n\n  return null;\n};\n\nconst getLightingLayer = (layout: gdLayout): ?gdLayer => {\n  for (let i = 0; i < layout.getLayersCount(); i++) {\n    const layer = layout.getLayerAt(i);\n    if (layer.isLightingLayer()) return layer;\n  }\n\n  return null;\n};\n\nconst objectType = {\n  'Lighting::LightObject': {\n    onObjectAdded: (object: gdObject, layout: gdLayout, project: gdProject) => {\n      const lightingLayer = getLightingLayer(layout);\n      if (lightingLayer === null) {\n        const name = newNameGenerator('Lighting', name =>\n          layout.hasLayerNamed(name)\n        );\n        layout.insertNewLayer(name, layout.getLayersCount());\n        const layer: gdLayer = layout.getLayer('Lighting');\n        layer.setLightingLayer(true);\n        layer.setFollowBaseLayerCamera(true);\n        layer.setAmbientLightColor(128, 128, 128);\n      }\n    },\n\n    onInstanceAdded: (\n      instance: gdInitialInstance,\n      layout: gdLayout,\n      project: gdProject\n    ) => {\n      const lightingLayer = getLightingLayer(layout);\n      if (lightingLayer) {\n        instance.setLayer(lightingLayer.getName());\n      }\n    },\n\n    getInfoBarDetails: (infoBarEvent: InfoBarEvent): ?InfoBarDetails => {\n      if (infoBarEvent === 'onObjectAdded') {\n        return {\n          identifier: 'automatic-lighting-layer',\n          message: t`A lighting layer was created. Lights will be placed on it automatically. You can change the ambient light color in the properties of this layer`,\n          touchScreenMessage: t`A lighting layer was created. Lights will be placed on it automatically. You can change the ambient light color in the properties of this layer`,\n        };\n      }\n\n      if (infoBarEvent === 'onInstanceAdded') {\n        return {\n          identifier: 'object-moved-in-lighting-layer',\n          message: t`The light object was automatically placed on the Lighting layer.`,\n          touchScreenMessage: t`The light object was automatically placed on the Lighting layer.`,\n        };\n      }\n\n      return null;\n    },\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport ResourcesList from '../ResourcesList';\nimport ResourcePropertiesEditor from './ResourcePropertiesEditor';\nimport Toolbar from './Toolbar';\nimport EditorMosaic from '../UI/EditorMosaic';\nimport DismissableInfoBar from '../UI/Messages/DismissableInfoBar';\nimport ResourcesLoader from '../ResourcesLoader';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport Window from '../Utils/Window';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n  type ResourceKind,\n} from '../ResourcesList/ResourceSource';\nimport { getResourceFilePathStatus } from '../ResourcesList/ResourceUtils.js';\n\nconst gd: libGDevelop = global.gd;\n\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\nconst path = optionalRequire('path');\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 1,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n};\n\ntype State = {|\n  showPropertiesInfoBar: boolean,\n  selectedResource: ?gdResource,\n|};\n\ntype Props = {|\n  setToolbar: React.Node => void,\n  project: gdProject,\n  onDeleteResource: (resource: gdResource, cb: (boolean) => void) => void,\n  onRenameResource: (\n    resource: gdResource,\n    newName: string,\n    cb: (boolean) => void\n  ) => void,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n|};\n\nconst initialMosaicEditorNodes = {\n  direction: 'row',\n  first: 'properties',\n  second: 'resources-list',\n  splitPercentage: 66,\n};\n\nexport default class ResourcesEditor extends React.Component<Props, State> {\n  static defaultProps = {\n    setToolbar: () => {},\n  };\n\n  editorMosaic: ?EditorMosaic = null;\n  _propertiesEditor: ?ResourcePropertiesEditor = null;\n  _resourcesList: ?ResourcesList = null;\n  resourcesLoader = ResourcesLoader;\n  state = {\n    showPropertiesInfoBar: false,\n    selectedResource: null,\n  };\n\n  refreshResourcesList() {\n    if (this._resourcesList) this._resourcesList.forceUpdate();\n  }\n\n  updateToolbar() {\n    this.props.setToolbar(\n      <Toolbar\n        onOpenProjectFolder={this.openProjectFolder}\n        onOpenProperties={this.openProperties}\n        canDelete={!!this.state.selectedResource}\n        onDeleteSelection={() =>\n          this.deleteResource(this.state.selectedResource)\n        }\n      />\n    );\n  }\n\n  deleteResource = (resource: ?gdResource) => {\n    const { project, onDeleteResource } = this.props;\n    if (!resource) return;\n\n    const answer = Window.showConfirmDialog(\n      \"Are you sure you want to remove this resource? This can't be undone.\"\n    );\n    if (!answer) return;\n\n    onDeleteResource(resource, doRemove => {\n      if (!doRemove || !resource) return;\n\n      project.getResourcesManager().removeResource(resource.getName());\n      this.setState(\n        {\n          selectedResource: null,\n        },\n        () => {\n          // Force update of the resources list as otherwise it could render\n          // resource that was just deleted.\n          if (this._resourcesList) this._resourcesList.forceUpdateList();\n          this.updateToolbar();\n        }\n      );\n    });\n  };\n\n  _removeUnusedResources = (resourceKind: ResourceKind) => {\n    const { project } = this.props;\n    const selectedResourceName = this.state.selectedResource\n      ? this.state.selectedResource.getName()\n      : null;\n\n    const removedResourceNames = gd.ProjectResourcesAdder.getAllUseless(\n      project,\n      resourceKind\n    ).toJSArray();\n    console.info(\n      `Removing ${\n        removedResourceNames.length\n      } unused ${resourceKind} resource(s):`,\n      removedResourceNames\n    );\n\n    gd.ProjectResourcesAdder.removeAllUseless(project, resourceKind);\n\n    // The selectedResource might be *invalid* now if it was removed.\n    // Be sure to drop the reference to it if that's the case.\n    if (removedResourceNames.includes(selectedResourceName)) {\n      this._onResourceSelected(null);\n    }\n\n    // Force update of the resources list as otherwise it could render\n    // resources that were just deleted.\n    if (this._resourcesList) {\n      this._resourcesList.forceUpdateList();\n    }\n  };\n\n  _removeAllResourcesWithInvalidPath = () => {\n    const { project } = this.props;\n    const selectedResourceName = this.state.selectedResource\n      ? this.state.selectedResource.getName()\n      : null;\n\n    const resourcesManager = project.getResourcesManager();\n    const removedResourceNames = resourcesManager\n      .getAllResourceNames()\n      .toJSArray()\n      .filter(resourceName => {\n        return getResourceFilePathStatus(project, resourceName) === 'error';\n      });\n\n    removedResourceNames.forEach(resourceName => {\n      resourcesManager.removeResource(resourceName);\n      console.info('Removed due to invalid path: ' + resourceName);\n    });\n\n    // The selectedResource might be *invalid* now if it was removed.\n    // Be sure to drop the reference to it if that's the case.\n    if (removedResourceNames.includes(selectedResourceName)) {\n      this._onResourceSelected(null);\n    }\n\n    // Force update of the resources list as otherwise it could render\n    // resources that were just deleted.\n    if (this._resourcesList) {\n      this._resourcesList.forceUpdateList();\n    }\n  };\n\n  openProjectFolder = () => {\n    const project = this.props.project;\n    if (shell) shell.openItem(path.dirname(project.getProjectFile()));\n  };\n\n  openProperties = () => {\n    if (!this.editorMosaic) return;\n    if (!this.editorMosaic.openEditor('properties', 'start', 66, 'column')) {\n      this.setState({\n        showPropertiesInfoBar: true,\n      });\n    }\n  };\n\n  _onResourceSelected = (selectedResource: ?gdResource) => {\n    this.setState(\n      {\n        selectedResource,\n      },\n      () => {\n        if (this._propertiesEditor) this._propertiesEditor.forceUpdate();\n        this.updateToolbar();\n      }\n    );\n  };\n\n  render() {\n    const {\n      project,\n      onRenameResource,\n      onChooseResource,\n      resourceSources,\n    } = this.props;\n    const { selectedResource } = this.state;\n\n    const editors = {\n      properties: {\n        type: 'secondary',\n        title: t`Properties`,\n        renderEditor: () => (\n          <ResourcePropertiesEditor\n            key={selectedResource ? selectedResource.ptr : undefined}\n            resources={selectedResource ? [selectedResource] : []}\n            project={project}\n            resourcesLoader={this.resourcesLoader}\n            ref={propertiesEditor =>\n              (this._propertiesEditor = propertiesEditor)\n            }\n            onResourcePathUpdated={() => {\n              if (this._resourcesList) {\n                this._resourcesList.checkMissingPaths();\n              }\n            }}\n            onChooseResource={onChooseResource}\n            resourceSources={resourceSources}\n          />\n        ),\n      },\n      'resources-list': {\n        type: 'primary',\n        noTitleBar: true,\n        renderEditor: () => (\n          <ResourcesList\n            project={project}\n            onDeleteResource={this.deleteResource}\n            onRenameResource={onRenameResource}\n            onSelectResource={this._onResourceSelected}\n            selectedResource={selectedResource}\n            ref={resourcesList => (this._resourcesList = resourcesList)}\n            onRemoveUnusedResources={this._removeUnusedResources}\n            onRemoveAllResourcesWithInvalidPath={\n              this._removeAllResourcesWithInvalidPath\n            }\n          />\n        ),\n      },\n    };\n\n    return (\n      <div style={styles.container}>\n        <PreferencesContext.Consumer>\n          {({ getDefaultEditorMosaicNode, setDefaultEditorMosaicNode }) => (\n            <EditorMosaic\n              editors={editors}\n              ref={editorMosaic => (this.editorMosaic = editorMosaic)}\n              initialNodes={\n                getDefaultEditorMosaicNode('resources-editor') ||\n                initialMosaicEditorNodes\n              }\n              onPersistNodes={node =>\n                setDefaultEditorMosaicNode('resources-editor', node)\n              }\n            />\n          )}\n        </PreferencesContext.Consumer>\n        <DismissableInfoBar\n          message={\n            <Trans>\n              Properties panel is already opened. After selecting a resource,\n              inspect and change its properties from this panel.\n            </Trans>\n          }\n          show={!!this.state.showPropertiesInfoBar}\n          identifier=\"resource-properties-panel-explanation\"\n        />\n      </div>\n    );\n  }\n}\n","// @flow\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { AutoSizer } from 'react-virtualized';\nimport SortableVirtualizedItemList from '../UI/SortableVirtualizedItemList';\nimport Background from '../UI/Background';\nimport SearchBar from '../UI/SearchBar';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport { filterResourcesList } from './EnumerateResources';\nimport { mapVector } from '../Utils/MapFor';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport {\n  applyResourceDefaults,\n  getLocalResourceFullPath,\n  getResourceFilePathStatus,\n} from './ResourceUtils.js';\nimport { type MenuItemTemplate } from '../UI/Menu/Menu.flow';\nimport {\n  type ResourceKind,\n  allResourceKindsAndMetadata,\n} from './ResourceSource';\nimport optionalLazyRequire from '../Utils/OptionalLazyRequire';\nimport ResourcesLoader from '../ResourcesLoader';\nimport newNameGenerator from '../Utils/NewNameGenerator';\n\nconst lazyRequireGlob = optionalLazyRequire('glob');\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst hasElectron = electron ? true : false;\n\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  listContainer: {\n    flex: 1,\n  },\n};\n\nconst getResourceName = (resource: gdResource) => resource.getName();\n\ntype State = {|\n  renamedResource: ?gdResource,\n  searchText: string,\n  resourcesWithErrors: { [string]: '' | 'error' | 'warning' },\n|};\n\ntype Props = {|\n  project: gdProject,\n  selectedResource: ?gdResource,\n  onSelectResource: (resource: ?gdResource) => void,\n  onDeleteResource: (resource: gdResource) => void,\n  onRenameResource: (\n    resource: gdResource,\n    newName: string,\n    cb: (boolean) => void\n  ) => void,\n  onRemoveUnusedResources: ResourceKind => void,\n  onRemoveAllResourcesWithInvalidPath: () => void,\n|};\n\nexport default class ResourcesList extends React.Component<Props, State> {\n  sortableList: any;\n  state: State = {\n    renamedResource: null,\n    searchText: '',\n    resourcesWithErrors: {},\n  };\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    // The component is costly to render, so avoid any re-rendering as much\n    // as possible.\n    // We make the assumption that no changes to resources list is made outside\n    // from the component.\n    // If a change is made, the component won't notice it: you have to manually\n    // call forceUpdate.\n\n    if (\n      this.state.renamedResource !== nextState.renamedResource ||\n      this.state.searchText !== nextState.searchText\n    )\n      return true;\n\n    if (\n      this.props.project !== nextProps.project ||\n      this.props.selectedResource !== nextProps.selectedResource\n    )\n      return true;\n\n    return false;\n  }\n\n  _deleteResource = (resource: gdResource) => {\n    this.props.onDeleteResource(resource);\n  };\n\n  _locateResourceFile = (resource: gdResource) => {\n    const resourceFolderPath = path.dirname(\n      getLocalResourceFullPath(this.props.project, resource.getName())\n    );\n    electron.shell.openItem(resourceFolderPath);\n  };\n\n  _openResourceFile = (resource: gdResource) => {\n    const resourceFilePath = getLocalResourceFullPath(\n      this.props.project,\n      resource.getName()\n    );\n    electron.shell.openItem(resourceFilePath);\n  };\n\n  _copyResourceFilePath = (resource: gdResource) => {\n    const resourceFilePath = getLocalResourceFullPath(\n      this.props.project,\n      resource.getName()\n    );\n    electron.clipboard.writeText(resourceFilePath);\n  };\n\n  _scanForNewResources = (\n    extensions: Array<string>,\n    createResource: () => gdResource\n  ) => {\n    const glob = lazyRequireGlob();\n    if (!glob) return;\n\n    const project = this.props.project;\n    const resourcesManager = project.getResourcesManager();\n    const projectPath = path.dirname(project.getProjectFile());\n\n    const allExtensions = [\n      ...extensions,\n      ...extensions.map(extension => extension.toUpperCase()),\n    ];\n    const getAllFiles = (src, callback) => {\n      glob(src + '/**/*.{' + allExtensions.join(',') + '}', callback);\n    };\n    getAllFiles(projectPath, (error, allFiles) => {\n      if (error) {\n        console.error(`Error finding files inside ${projectPath}:`, error);\n        return;\n      }\n\n      const filesToCheck = new gd.VectorString();\n      allFiles.forEach(filePath =>\n        filesToCheck.push_back(path.relative(projectPath, filePath))\n      );\n      const filePathsNotInResources = project\n        .getResourcesManager()\n        .findFilesNotInResources(filesToCheck);\n      filesToCheck.delete();\n\n      mapVector(filePathsNotInResources, (relativeFilePath: string) => {\n        const resourceName = newNameGenerator(relativeFilePath, name =>\n          resourcesManager.hasResource(name)\n        );\n\n        const resource = createResource();\n        resource.setFile(relativeFilePath);\n        resource.setName(resourceName);\n        applyResourceDefaults(project, resource);\n        resourcesManager.addResource(resource);\n        resource.delete();\n\n        console.info(\n          `\"${relativeFilePath}\" added to project as resource named \"${resourceName}\".`\n        );\n      });\n\n      this.forceUpdate();\n    });\n  };\n\n  _editName = (resource: ?gdResource) => {\n    this.setState(\n      {\n        renamedResource: resource,\n      },\n      () => {\n        if (this.sortableList) this.sortableList.forceUpdateGrid();\n      }\n    );\n  };\n\n  _getResourceThumbnail = (resource: gdResource) => {\n    switch (resource.getKind()) {\n      case 'image':\n        return ResourcesLoader.getResourceFullUrl(\n          this.props.project,\n          resource.getName(),\n          {}\n        );\n      case 'audio':\n        return 'res/actions/music24.png';\n      case 'json':\n        return 'res/actions/fichier24.png';\n      case 'video':\n        return 'JsPlatform/Extensions/videoicon24.png';\n      case 'font':\n        return 'res/actions/font24.png';\n      case 'bitmapFont':\n        return 'JsPlatform/Extensions/bitmapfont32.png';\n      default:\n        return 'res/unknown32.png';\n    }\n  };\n\n  _rename = (resource: gdResource, newName: string) => {\n    const { project } = this.props;\n    this.setState({\n      renamedResource: null,\n    });\n\n    if (resource.getName() === newName) return;\n\n    if (project.getResourcesManager().hasResource(newName)) {\n      showWarningBox('Another resource with this name already exists', {\n        delayToNextTick: true,\n      });\n      return;\n    }\n\n    this.props.onRenameResource(resource, newName, doRename => {\n      if (!doRename) return;\n      resource.setName(newName);\n      this.forceUpdate();\n    });\n  };\n\n  _moveSelectionTo = (destinationResource: gdResource) => {\n    const { project, selectedResource } = this.props;\n    if (!selectedResource) return;\n\n    const resourcesManager = project.getResourcesManager();\n    resourcesManager.moveResource(\n      resourcesManager.getResourcePosition(selectedResource.getName()),\n      resourcesManager.getResourcePosition(destinationResource.getName())\n    );\n    this.forceUpdateList();\n  };\n\n  forceUpdateList = () => {\n    this.forceUpdate();\n    if (this.sortableList) this.sortableList.forceUpdateGrid();\n  };\n\n  _renderResourceMenuTemplate = (i18n: I18nType) => (\n    resource: gdResource,\n    _index: number\n  ): Array<MenuItemTemplate> => {\n    return [\n      {\n        label: i18n._(t`Rename`),\n        click: () => this._editName(resource),\n      },\n      {\n        label: i18n._(t`Delete`),\n        click: () => this._deleteResource(resource),\n      },\n      { type: 'separator' },\n      {\n        label: i18n._(t`Open File`),\n        click: () => this._openResourceFile(resource),\n        enabled: hasElectron,\n      },\n      {\n        label: i18n._(t`Locate File`),\n        click: () => this._locateResourceFile(resource),\n        enabled: hasElectron,\n      },\n      {\n        label: i18n._(t`Copy File Path`),\n        click: () => this._copyResourceFilePath(resource),\n        enabled: hasElectron,\n      },\n      { type: 'separator' },\n      {\n        label: i18n._(t`Scan in the project folder for...`),\n        submenu: allResourceKindsAndMetadata.map(\n          ({ displayName, fileExtensions, createNewResource }) => ({\n            label: i18n._(displayName),\n            click: () => {\n              this._scanForNewResources(fileExtensions, createNewResource);\n            },\n            enabled: hasElectron,\n          })\n        ),\n      },\n      { type: 'separator' },\n      {\n        label: i18n._(t`Remove unused...`),\n        submenu: allResourceKindsAndMetadata.map(({ displayName, kind }) => ({\n          label: i18n._(displayName),\n          click: () => {\n            this.props.onRemoveUnusedResources(kind);\n          },\n        })),\n      },\n      {\n        label: i18n._(t`Remove Resources with Invalid Path`),\n        click: () => {\n          this.props.onRemoveAllResourcesWithInvalidPath();\n        },\n        enabled: hasElectron,\n      },\n    ];\n  };\n\n  checkMissingPaths = () => {\n    const { project } = this.props;\n    const resourcesManager = project.getResourcesManager();\n    const resourceNames = resourcesManager.getAllResourceNames().toJSArray();\n    const resourcesWithErrors = {};\n    resourceNames.forEach(resourceName => {\n      resourcesWithErrors[resourceName] = getResourceFilePathStatus(\n        project,\n        resourceName\n      );\n    });\n    this.setState({ resourcesWithErrors });\n    this.forceUpdateList();\n  };\n\n  componentDidMount() {\n    this.checkMissingPaths();\n  }\n\n  render() {\n    const { project, selectedResource, onSelectResource } = this.props;\n    const { searchText } = this.state;\n\n    const resourcesManager = project.getResourcesManager();\n    const allResourcesList = resourcesManager\n      .getAllResourceNames()\n      .toJSArray()\n      .map(resourceName => resourcesManager.getResource(resourceName));\n    const filteredList = filterResourcesList(allResourcesList, searchText);\n\n    // Force List component to be mounted again if project\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const listKey = project.ptr;\n\n    return (\n      <Background>\n        <div style={styles.listContainer}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <I18n>\n                {({ i18n }) => (\n                  <SortableVirtualizedItemList\n                    key={listKey}\n                    ref={sortableList => (this.sortableList = sortableList)}\n                    fullList={filteredList}\n                    width={width}\n                    height={height}\n                    getItemName={getResourceName}\n                    getItemThumbnail={this._getResourceThumbnail}\n                    selectedItems={selectedResource ? [selectedResource] : []}\n                    onItemSelected={onSelectResource}\n                    renamedItem={this.state.renamedResource}\n                    onRename={this._rename}\n                    onMoveSelectionToItem={this._moveSelectionTo}\n                    buildMenuTemplate={this._renderResourceMenuTemplate(i18n)}\n                    erroredItems={this.state.resourcesWithErrors}\n                    reactDndType=\"GD_RESOURCE\"\n                  />\n                )}\n              </I18n>\n            )}\n          </AutoSizer>\n        </div>\n        <SearchBar\n          value={searchText}\n          onRequestSearch={() => {}}\n          onChange={text =>\n            this.setState({\n              searchText: text,\n            })\n          }\n        />\n      </Background>\n    );\n  }\n}\n","// @flow\n\nexport const filterResourcesList = (\n  list: Array<gdResource>,\n  searchText: string\n): Array<gdResource> => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list.filter((resource: gdResource) => {\n    return (\n      resource\n        .getName()\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1\n    );\n  });\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport React, { PureComponent } from 'react';\nimport { ToolbarGroup } from '../UI/Toolbar';\nimport ToolbarIcon from '../UI/ToolbarIcon';\nimport ToolbarSeparator from '../UI/ToolbarSeparator';\n\ntype Props = {|\n  onOpenProjectFolder: () => void,\n  onDeleteSelection: () => void,\n  canDelete: boolean,\n  onOpenProperties: () => void,\n|};\n\ntype State = {||};\n\nexport class Toolbar extends PureComponent<Props, State> {\n  render() {\n    const { canDelete } = this.props;\n\n    return (\n      <ToolbarGroup lastChild>\n        <ToolbarIcon\n          onClick={this.props.onOpenProjectFolder}\n          src=\"res/ribbon_default/open32.png\"\n          tooltip={t`Open the project folder`}\n        />\n        <ToolbarSeparator />\n        <ToolbarIcon\n          onClick={this.props.onOpenProperties}\n          src=\"res/ribbon_default/editprop32.png\"\n          tooltip={t`Open the properties panel`}\n        />\n        <ToolbarSeparator />\n        <ToolbarIcon\n          onClick={this.props.onDeleteSelection}\n          src=\"res/ribbon_default/deleteselected32.png\"\n          disabled={!canDelete}\n          tooltip={t`Delete the selected resource`}\n        />\n      </ToolbarGroup>\n    );\n  }\n}\n\nexport default Toolbar;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport FlatButton from '../../UI/FlatButton';\nimport Dialog from '../../UI/Dialog';\nimport Window from '../../Utils/Window';\nimport PreferencesContext from './PreferencesContext';\nimport { I18n } from '@lingui/react';\nimport LanguageSelector from './LanguageSelector';\n\ntype Props = {|\n  open: boolean,\n  onClose: (languageDidChange: boolean) => void,\n|};\n\nconst LanguageDialog = ({ open, onClose }: Props) => {\n  const { values } = React.useContext(PreferencesContext);\n\n  const [languageDidChange, setLanguageDidChange] = React.useState<boolean>(\n    false\n  );\n\n  if (!open) return null;\n\n  return (\n    <I18n>\n      {({ i18n }) => {\n        const isLoadingLanguage =\n          i18n.language !== values.language.replace('_', '-');\n\n        return (\n          <Dialog\n            actions={[\n              <FlatButton\n                label={\n                  isLoadingLanguage ? (\n                    <Trans>Loading...</Trans>\n                  ) : (\n                    <Trans>Close</Trans>\n                  )\n                }\n                primary={false}\n                onClick={() => {\n                  onClose(languageDidChange);\n                }}\n                disabled={isLoadingLanguage}\n                key=\"close\"\n              />,\n            ]}\n            secondaryActions={[\n              <FlatButton\n                label={<Trans>Report a wrong translation</Trans>}\n                key=\"report-wrong-translation\"\n                primary={false}\n                onClick={() =>\n                  Window.openExternalURL(\n                    'https://github.com/4ian/GDevelop/issues/969'\n                  )\n                }\n              />,\n            ]}\n            onRequestClose={() => onClose(languageDidChange)}\n            cannotBeDismissed={false}\n            open={open}\n            title={<Trans>Language</Trans>}\n          >\n            <LanguageSelector\n              onLanguageChanged={() => setLanguageDidChange(true)}\n            />\n          </Dialog>\n        );\n      }}\n    </I18n>\n  );\n};\nexport default LanguageDialog;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport { type StorageProvider } from '.';\nimport { List, ListItem } from '../UI/List';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport BackgroundText from '../UI/BackgroundText';\nimport { Column, Line } from '../UI/Grid';\nconst electron = optionalRequire('electron');\n\ntype Props = {|\n  storageProviders: Array<StorageProvider>,\n  onChooseProvider: StorageProvider => void,\n  onClose: () => void,\n|};\n\nconst OpenFromStorageProviderDialog = ({\n  onClose,\n  storageProviders,\n  onChooseProvider,\n}: Props) => {\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Dialog\n          title={<Trans>Choose where to load the project from</Trans>}\n          onRequestClose={onClose}\n          actions={[\n            <FlatButton\n              label={<Trans>Cancel</Trans>}\n              key=\"close\"\n              primary={false}\n              onClick={onClose}\n            />,\n          ]}\n          cannotBeDismissed={false}\n          open\n          noMargin\n          maxWidth=\"sm\"\n        >\n          <List>\n            {storageProviders\n              .filter(storageProvider => !storageProvider.hiddenInOpenDialog)\n              .map(storageProvider => (\n                <ListItem\n                  key={storageProvider.internalName}\n                  disabled={!!storageProvider.disabled}\n                  primaryText={i18n._(storageProvider.name)}\n                  leftIcon={\n                    storageProvider.renderIcon\n                      ? storageProvider.renderIcon()\n                      : undefined\n                  }\n                  onClick={() => onChooseProvider(storageProvider)}\n                />\n              ))}\n          </List>\n          {!electron && (\n            <Line>\n              <Column>\n                <BackgroundText>\n                  <Trans>\n                    If you have a popup blocker interrupting the opening, allow\n                    the popups and try a second time to open the project.\n                  </Trans>\n                </BackgroundText>\n              </Column>\n            </Line>\n          )}\n        </Dialog>\n      )}\n    </I18n>\n  );\n};\n\nexport default OpenFromStorageProviderDialog;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport { type StorageProvider } from '.';\nimport { List, ListItem } from '../UI/List';\n\ntype Props = {|\n  storageProviders: Array<StorageProvider>,\n  onChooseProvider: StorageProvider => void,\n  onClose: () => void,\n|};\n\nexport default ({ onClose, storageProviders, onChooseProvider }: Props) => {\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Dialog\n          title={<Trans>Choose where to save the project to</Trans>}\n          onRequestClose={onClose}\n          actions={[\n            <FlatButton\n              label={<Trans>Cancel</Trans>}\n              key=\"close\"\n              primary={false}\n              onClick={onClose}\n            />,\n          ]}\n          cannotBeDismissed={true}\n          open\n          noMargin\n          maxWidth=\"sm\"\n        >\n          <List>\n            {storageProviders\n              .filter(storageProvider => !storageProvider.hiddenInSaveDialog)\n              .map(storageProvider => (\n                <ListItem\n                  key={storageProvider.internalName}\n                  disabled={!!storageProvider.disabled}\n                  primaryText={i18n._(storageProvider.name)}\n                  leftIcon={\n                    storageProvider.renderIcon\n                      ? storageProvider.renderIcon()\n                      : undefined\n                  }\n                  onClick={() => onChooseProvider(storageProvider)}\n                />\n              ))}\n          </List>\n        </Dialog>\n      )}\n    </I18n>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport BackgroundText from '../UI/BackgroundText';\nimport { Column, Line } from '../UI/Grid';\nimport Text from '../UI/Text';\nimport { type StorageProviderOperations } from '.';\n\ntype OpenConfirmDialogProps = {|\n  onClose: () => void,\n  onConfirm: () => void,\n|};\n\nexport const OpenConfirmDialog = ({\n  onClose,\n  onConfirm,\n}: OpenConfirmDialogProps) => {\n  return (\n    <Dialog\n      title={<Trans>Confirm the opening</Trans>}\n      onApply={onConfirm}\n      actions={[\n        <FlatButton\n          label={<Trans>Cancel</Trans>}\n          key=\"close\"\n          primary={false}\n          onClick={onClose}\n        />,\n        <RaisedButton\n          label={<Trans>Open the project</Trans>}\n          key=\"open-project\"\n          primary\n          onClick={onConfirm}\n        />,\n      ]}\n      cannotBeDismissed={true}\n      open\n      maxWidth=\"sm\"\n    >\n      <Line>\n        <Column>\n          <Text>\n            <Trans>\n              You're about to open (or re-open) a project. Click on \"Open the\n              Project\" to continue.\n            </Trans>\n          </Text>\n        </Column>\n      </Line>\n      <Line>\n        <Column>\n          <BackgroundText>\n            <Trans>\n              If you have a popup blocker interrupting the opening, allow the\n              popups and try a second time to open the project.\n            </Trans>\n          </BackgroundText>\n        </Column>\n      </Line>\n    </Dialog>\n  );\n};\n\nexport const useOpenConfirmDialog = () => {\n  const interactionMade = React.useRef(false);\n  const pendingConfirmationPromiseResolve = React.useRef<?(boolean) => void>(\n    null\n  );\n  const [openConfirmDialogOpen, openOpenConfirmDialog] = React.useState(false);\n\n  return {\n    /**\n     * Ensure that the user does an interaction (i.e: click on a button), before\n     * resolving the promise, if the specified storage provider needs an interaction.\n     * This is for example the case when opening directly the web-app with a file\n     * to open from the URL (like a Google Drive file).\n     */\n    ensureInteractionHappened: (\n      storageProviderOperations: StorageProviderOperations\n    ): Promise<boolean> => {\n      return new Promise(resolve => {\n        if (\n          interactionMade.current ||\n          !storageProviderOperations.doesInitialOpenRequireUserInteraction\n        ) {\n          // No need for any interaction, just proceed.\n          resolve(true);\n          return;\n        }\n\n        // We need an interaction first, display a confirmation dialog\n        console.info(\n          'Displaying confirmation dialog to ensure an interaction is made before continuing.'\n        );\n        pendingConfirmationPromiseResolve.current = resolve;\n        openOpenConfirmDialog(true);\n      });\n    },\n    /**\n     * Render, if needed, the dialog that will ask the user to confirm the opening.\n     */\n    renderOpenConfirmDialog: () => {\n      if (!openConfirmDialogOpen) return null;\n\n      const closeAndResolveWith = (proceed: boolean) => {\n        interactionMade.current = true;\n        openOpenConfirmDialog(false);\n        const resolve = pendingConfirmationPromiseResolve.current;\n        if (resolve) {\n          resolve(proceed);\n          pendingConfirmationPromiseResolve.current = null;\n        }\n      };\n\n      return (\n        <OpenConfirmDialog\n          onClose={() => closeAndResolveWith(false)}\n          onConfirm={() => closeAndResolveWith(true)}\n        />\n      );\n    },\n  };\n};\n","// @flow\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\n\nexport default function verifyProjectContent(\n  i18n: I18nType,\n  content: Object\n): boolean {\n  if (!content.gdVersion && content.eventsFunctions) {\n    showErrorBox({\n      message: [\n        i18n._(t`Unable to open this file.`),\n        i18n._(\n          t`This file is an extension file for GDevelop 5. You should instead import it, using the window to add a new extension to your project.`\n        ),\n      ].join('\\n'),\n      rawError: undefined,\n      errorId: 'extension-opened-as-project-error',\n      doNotReport: true,\n    });\n    return false;\n  }\n\n  if (!content.gdVersion && !content.eventsFunctions) {\n    showErrorBox({\n      message: [\n        i18n._(t`Unable to open this file.`),\n        i18n._(\n          t`This file is not recognized as a GDevelop 5 project. Be sure to open a file that was saved using GDevelop.`\n        ),\n      ].join('\\n'),\n      rawError: undefined,\n      errorId: 'malformed-project-error',\n      doNotReport: true,\n    });\n    return false;\n  }\n  return true;\n}\n","import React from 'react';\n\n/**\n * A useState hook that returns a promise when the state is set.\n * *Don't use it* excepted for MainFrame. This is used while transitioning\n * MainFrame to hooks - and it's not typed properly.\n */\nexport default function useStateWithCallback(initialValue) {\n  const [state, setState] = React.useState(initialValue);\n  const callback = React.useRef(null);\n\n  const useStateWithCB = React.useCallback(\n    newValue => {\n      return new Promise(resolve => {\n        callback.current = resolve;\n        setState(newValue);\n      });\n    },\n    [setState]\n  );\n\n  React.useEffect(\n    () => {\n      if (callback.current !== null) {\n        callback.current(state);\n        callback.current = null;\n      }\n    },\n    [state]\n  );\n  return [state, useStateWithCB];\n}\n","// @flow\nimport * as React from 'react';\nimport { type I18n } from '@lingui/core';\nimport {\n  useCommand,\n  useCommandWithOptions,\n} from '../CommandPalette/CommandHooks';\nimport {\n  enumerateLayouts,\n  enumerateExternalEvents,\n  enumerateExternalLayouts,\n  enumerateEventsFunctionsExtensions,\n} from '../ProjectManager/EnumerateProjectItems';\n\ntype Item =\n  | gdLayout\n  | gdExternalEvents\n  | gdExternalLayout\n  | gdEventsFunctionsExtension;\n\n/**\n * Helper function to generate options list\n * for each kind of project item\n */\nconst generateProjectItemOptions = <T: Item>(\n  project: ?gdProject,\n  enumerate: (project: gdProject) => Array<T>,\n  onOpen: string => void\n) => {\n  if (!project) return [];\n  return enumerate(project).map(item => ({\n    text: item.getName(),\n    handler: () => onOpen(item.getName()),\n  }));\n};\n\ntype CommandHandlers = {|\n  i18n: I18n,\n  project: ?gdProject,\n  previewEnabled: boolean,\n  hasPreviewsRunning: boolean,\n  onOpenProjectManager: () => void,\n  onLaunchPreview: () => void | Promise<void>,\n  onLaunchDebugPreview: () => void,\n  onLaunchNetworkPreview: () => void,\n  onHotReloadPreview: () => void,\n  allowNetworkPreview: boolean,\n  onOpenHomePage: () => void,\n  onCreateProject: () => void,\n  onOpenProject: () => void,\n  onSaveProject: () => Promise<void>,\n  onSaveProjectAs: () => void,\n  onCloseApp: () => void,\n  onCloseProject: () => Promise<void>,\n  onExportGame: () => void,\n  onOpenLayout: string => void,\n  onOpenExternalEvents: string => void,\n  onOpenExternalLayout: string => void,\n  onOpenEventsFunctionsExtension: string => void,\n  onOpenCommandPalette: () => void,\n  onOpenProfile: () => void,\n  onOpenGamesDashboard: () => void,\n|};\n\nconst useMainFrameCommands = (handlers: CommandHandlers) => {\n  useCommand('QUIT_APP', true, {\n    handler: handlers.onCloseApp,\n  });\n\n  useCommand('OPEN_PROFILE', !!handlers.project, {\n    handler: handlers.onOpenProfile,\n  });\n\n  useCommand('OPEN_GAMES_DASHBOARD', !!handlers.project, {\n    handler: handlers.onOpenGamesDashboard,\n  });\n\n  useCommand('OPEN_PROJECT_MANAGER', !!handlers.project, {\n    handler: handlers.onOpenProjectManager,\n  });\n\n  useCommand('LAUNCH_NEW_PREVIEW', handlers.previewEnabled, {\n    handler: handlers.onLaunchPreview,\n  });\n\n  useCommand('HOT_RELOAD_PREVIEW', handlers.hasPreviewsRunning, {\n    handler: handlers.onHotReloadPreview,\n  });\n\n  useCommand(\n    'LAUNCH_DEBUG_PREVIEW',\n    handlers.previewEnabled && handlers.allowNetworkPreview,\n    {\n      handler: handlers.onLaunchDebugPreview,\n    }\n  );\n\n  useCommand(\n    'LAUNCH_NETWORK_PREVIEW',\n    handlers.previewEnabled && handlers.allowNetworkPreview,\n    {\n      handler: handlers.onLaunchNetworkPreview,\n    }\n  );\n\n  useCommand('OPEN_HOME_PAGE', true, {\n    handler: handlers.onOpenHomePage,\n  });\n\n  useCommand('CREATE_NEW_PROJECT', true, {\n    handler: handlers.onCreateProject,\n  });\n\n  useCommand('OPEN_PROJECT', true, {\n    handler: handlers.onOpenProject,\n  });\n\n  useCommand('SAVE_PROJECT', !!handlers.project, {\n    handler: handlers.onSaveProject,\n  });\n\n  useCommand('SAVE_PROJECT_AS', !!handlers.project, {\n    handler: handlers.onSaveProjectAs,\n  });\n\n  useCommand('CLOSE_PROJECT', !!handlers.project, {\n    handler: handlers.onCloseProject,\n  });\n\n  useCommand('EXPORT_GAME', !!handlers.project, {\n    handler: handlers.onExportGame,\n  });\n\n  useCommand('OPEN_COMMAND_PALETTE', true, {\n    handler: handlers.onOpenCommandPalette,\n  });\n\n  useCommandWithOptions('OPEN_LAYOUT', !!handlers.project, {\n    generateOptions: React.useCallback(\n      () =>\n        generateProjectItemOptions(\n          handlers.project,\n          enumerateLayouts,\n          handlers.onOpenLayout\n        ),\n      [handlers.project, handlers.onOpenLayout]\n    ),\n  });\n\n  useCommandWithOptions('OPEN_EXTERNAL_EVENTS', !!handlers.project, {\n    generateOptions: React.useCallback(\n      () =>\n        generateProjectItemOptions(\n          handlers.project,\n          enumerateExternalEvents,\n          handlers.onOpenExternalEvents\n        ),\n      [handlers.project, handlers.onOpenExternalEvents]\n    ),\n  });\n\n  useCommandWithOptions('OPEN_EXTERNAL_LAYOUT', !!handlers.project, {\n    generateOptions: React.useCallback(\n      () =>\n        generateProjectItemOptions(\n          handlers.project,\n          enumerateExternalLayouts,\n          handlers.onOpenExternalLayout\n        ),\n      [handlers.project, handlers.onOpenExternalLayout]\n    ),\n  });\n\n  useCommandWithOptions('OPEN_EXTENSION', !!handlers.project, {\n    generateOptions: React.useCallback(\n      () =>\n        generateProjectItemOptions(\n          handlers.project,\n          enumerateEventsFunctionsExtensions,\n          handlers.onOpenEventsFunctionsExtension\n        ),\n      [handlers.project, handlers.onOpenEventsFunctionsExtension]\n    ),\n  });\n};\n\nexport default useMainFrameCommands;\n","// @flow\nimport * as React from 'react';\nimport {\n  CommandManagerInterface,\n  type Command,\n  type NamedCommand,\n} from './CommandManager';\nimport { type CommandName } from './CommandsList';\nimport CommandsContext from './CommandsContext';\nimport useRefInit from './UseRefInitHook';\n\nclass ScopedCommandManager implements CommandManagerInterface {\n  _commands: { [CommandName]: Command };\n  _centralManager: CommandManagerInterface;\n  _isActive: boolean;\n\n  constructor(centralCommandManager) {\n    this._commands = {};\n    this._isActive = false;\n    this._centralManager = centralCommandManager;\n  }\n\n  setActive = (active: boolean) => {\n    this._isActive = active;\n  };\n\n  registerCommand = (commandName: CommandName, command: Command) => {\n    this._commands[commandName] = command;\n    if (this._isActive)\n      this._centralManager.registerCommand(commandName, command);\n  };\n\n  deregisterCommand = (commandName: CommandName) => {\n    delete this._commands[commandName];\n    if (this._isActive) this._centralManager.deregisterCommand(commandName);\n  };\n\n  registerAllCommandsToCentralManager = () => {\n    Object.keys(this._commands).forEach(commandName => {\n      this._centralManager.registerCommand(\n        commandName,\n        this._commands[commandName]\n      );\n    });\n  };\n\n  deregisterAllCommandsFromCentralManager = () => {\n    Object.keys(this._commands).forEach(commandName => {\n      this._centralManager.deregisterCommand(commandName);\n    });\n  };\n\n  getAllNamedCommands = () => {\n    return Object.keys(this._commands).map<NamedCommand>(commandName => {\n      const cmd = this._commands[commandName];\n      // $FlowFixMe\n      return { ...cmd, name: commandName };\n    });\n  };\n\n  getNamedCommand = (commandName: CommandName) => {\n    const command = this._commands[commandName];\n    if (command) return { name: commandName, ...(command: Command) };\n    return this._centralManager.getNamedCommand(commandName);\n  };\n}\n\ntype Props = {|\n  children: React.Node,\n  active: boolean,\n|};\n\nconst CommandsContextScopedProvider = (props: Props) => {\n  const centralManager = React.useContext(CommandsContext);\n  const scopedManager = useRefInit(\n    () => new ScopedCommandManager(centralManager)\n  );\n\n  React.useEffect(\n    () => {\n      if (!props.active) return;\n      scopedManager.setActive(true);\n      scopedManager.registerAllCommandsToCentralManager();\n      return () => {\n        scopedManager.setActive(false);\n        scopedManager.deregisterAllCommandsFromCentralManager();\n      };\n    },\n    [props.active, scopedManager]\n  );\n\n  return (\n    <CommandsContext.Provider value={scopedManager}>\n      {props.children}\n    </CommandsContext.Provider>\n  );\n};\n\nexport default CommandsContextScopedProvider;\n","// @flow\nimport * as React from 'react';\nimport {\n  type PreviewDebuggerServer,\n  type DebuggerId,\n  type HotReloaderLog,\n} from '../Export/PreviewLauncher.flow';\n\n/** Represents what should be run when a preview is launched */\nexport type PreviewState = {|\n  /** The previewed layout name, set by the current editor. */\n  previewLayoutName: ?string,\n  /** The previewed external layout name, set by the current editor. */\n  previewExternalLayoutName: ?string,\n\n  /** If true, the previewed layout/external layout is overriden, */\n  isPreviewOverriden: boolean,\n  /** The layout name to be used instead of the one set by the current editor. */\n  overridenPreviewLayoutName: ?string,\n  /** The external layout name to be used instead of the one set by the current editor. */\n  overridenPreviewExternalLayoutName: ?string,\n|};\n\ntype PreviewDebuggerServerWatcherResults = {|\n  previewDebuggerIds: Array<DebuggerId>,\n  hotReloadLogs: Array<HotReloaderLog>,\n  clearHotReloadLogs: () => void,\n|};\n\n/**\n * Return the ids of the debuggers being run, watching for changes (new\n * debugger launched or existing one closed).\n */\nexport const usePreviewDebuggerServerWatcher = (\n  previewDebuggerServer: ?PreviewDebuggerServer\n): PreviewDebuggerServerWatcherResults => {\n  const [debuggerIds, setDebuggerIds] = React.useState<Array<DebuggerId>>([]);\n  const [hotReloadLogs, setHotReloadLogs] = React.useState<\n    Array<HotReloaderLog>\n  >([]);\n  React.useEffect(\n    () => {\n      if (!previewDebuggerServer) {\n        setDebuggerIds([]);\n        return;\n      }\n\n      const unregisterCallbacks = previewDebuggerServer.registerCallbacks({\n        onErrorReceived: err => {\n          // Nothing to do.\n        },\n        onConnectionClosed: ({ id, debuggerIds }) => {\n          setDebuggerIds([...debuggerIds]);\n        },\n        onConnectionOpened: ({ id, debuggerIds }) => {\n          setDebuggerIds([...debuggerIds]);\n        },\n        onServerStateChanged: () => {\n          // Nothing to do.\n        },\n        onHandleParsedMessage: ({ id, parsedMessage }) => {\n          if (parsedMessage.command === 'hotReloader.logs') {\n            setHotReloadLogs(parsedMessage.payload);\n          }\n        },\n      });\n      return () => {\n        unregisterCallbacks();\n      };\n    },\n    [previewDebuggerServer]\n  );\n  const clearHotReloadLogs = React.useCallback(() => setHotReloadLogs([]), [\n    setHotReloadLogs,\n  ]);\n\n  return { previewDebuggerIds: debuggerIds, hotReloadLogs, clearHotReloadLogs };\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport HelpButton from '../UI/HelpButton';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport Text from '../UI/Text';\nimport { type HotReloaderLog } from '../Export/PreviewLauncher.flow';\nimport { NewPreviewIcon } from './HotReloadPreviewButton';\n\ntype Props = {|\n  logs: Array<HotReloaderLog>,\n  onClose: () => void,\n  onLaunchNewPreview: () => void,\n|};\n\nconst shouldDisplayDialogForLogs = logs =>\n  logs.filter(log => log.kind === 'error' || log.kind === 'fatal').length > 0;\n\nexport default function HotReloadLogsDialog({\n  onClose,\n  onLaunchNewPreview,\n  logs,\n}: Props) {\n  if (!shouldDisplayDialogForLogs(logs)) {\n    return null;\n  }\n\n  return (\n    <Dialog\n      title={<Trans>Restarting the preview from scratch is required</Trans>}\n      onRequestClose={onClose}\n      actions={[\n        <FlatButton\n          label={<Trans>Close</Trans>}\n          key=\"close\"\n          primary={false}\n          onClick={onClose}\n        />,\n        <RaisedButton\n          icon={<NewPreviewIcon />}\n          label={<Trans>Close and launch a new preview</Trans>}\n          key=\"new-preview\"\n          primary\n          onClick={onLaunchNewPreview}\n        />,\n      ]}\n      secondaryActions={[\n        <HelpButton key=\"help\" helpPagePath={'/interface/preview'} />,\n      ]}\n      open\n      cannotBeDismissed\n    >\n      <ColumnStackLayout noMargin>\n        <Text>\n          <Trans>\n            Your latest changes could not be applied to the preview(s) being\n            run. You should start a new preview instead to make sure that all\n            your changes are reflected in the game.\n          </Trans>\n        </Text>\n      </ColumnStackLayout>\n    </Dialog>\n  );\n}\n","// @flow\nimport { useEffect, useState } from 'react';\nimport optionalRequire from './OptionalRequire';\nconst electron = optionalRequire('electron');\nconst ipc = electron ? electron.ipcRenderer : null;\n\nconst richPresenceStartTimestamp = Date.now();\n\nconst updateDiscordRichPresence = (project: ?gdProject) => {\n  if (ipc === null) return;\n\n  const config = {\n    details: project ? 'Working on:' : 'Not working on',\n    state: project ? project.getName() : 'any game',\n    startTimestamp: richPresenceStartTimestamp,\n    largeImageKey: 'gdicon',\n    largeImageText: 'GDevelop',\n  };\n\n  ipc.send('update-discord-rich-presence', config);\n};\n\nexport const useDiscordRichPresence = (project: ?gdProject) => {\n  const [lastCallTime, setLastCallTime] = useState(0);\n  useEffect(() => updateDiscordRichPresence(project));\n  useEffect(\n    () => {\n      if (performance.now() - lastCallTime > 60000) {\n        setLastCallTime(performance.now());\n        updateDiscordRichPresence(project);\n      }\n    },\n    [project, lastCallTime]\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { Trans } from '@lingui/macro';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport Dialog from '../UI/Dialog';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport {\n  type ChooseResourceOptions,\n  type ResourceSource,\n} from './ResourceSource';\nimport FlatButton from '../UI/FlatButton';\nimport { Column, Line } from '../UI/Grid';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport Text from '../UI/Text';\nimport { useScreenType } from '../UI/Reponsive/ScreenTypeMeasurer';\nimport Window from '../Utils/Window';\nimport optionalRequire from '../Utils/OptionalRequire';\n\nconst electron = optionalRequire('electron');\n\ntype Props = {|\n  project: gdProject,\n  i18n: I18nType,\n  options: ChooseResourceOptions,\n  resourceSources: Array<ResourceSource>,\n  onClose: () => void,\n  onChooseResources: (resources: Array<gdResource>) => void,\n|};\n\nexport const NewResourceDialog = ({\n  project,\n  options,\n  i18n,\n  resourceSources,\n  onClose,\n  onChooseResources,\n}: Props) => {\n  const screenType = useScreenType();\n  const preferences = React.useContext(PreferencesContext);\n  const possibleResourceSources = resourceSources.filter(\n    ({ kind }) => kind === options.resourceKind\n  );\n  const standaloneTabResourceSources = possibleResourceSources.filter(\n    ({ displayTab }) => displayTab === 'standalone'\n  );\n  const importTabResourceSources = possibleResourceSources.filter(\n    ({ displayTab }) => displayTab === 'import'\n  );\n  const initialSource = possibleResourceSources.find(\n    ({ name }) => name === options.initialSourceName\n  );\n  const isInitialSourceHeadless =\n    initialSource && initialSource.selectResourcesHeadless;\n  const [currentTab, setCurrentTab] = React.useState(() => {\n    if (!initialSource) return 'import';\n\n    if (initialSource.displayTab === 'import') return 'import';\n    if (initialSource.displayTab === 'standalone') {\n      return 'standalone-' + initialSource.name;\n    }\n\n    return 'import';\n  });\n\n  React.useEffect(\n    () => {\n      if (!initialSource) return;\n      const { selectResourcesHeadless } = initialSource;\n      if (!selectResourcesHeadless) return;\n\n      (async () => {\n        try {\n          const resources = await selectResourcesHeadless({\n            i18n,\n            options,\n            project,\n            getLastUsedPath: preferences.getLastUsedPath,\n            setLastUsedPath: preferences.setLastUsedPath,\n          });\n          onChooseResources(resources);\n        } catch (error) {\n          console.error('Unexpected error from a resource source:', error);\n          onChooseResources([]);\n        }\n      })();\n    },\n    // eslint-disable-next-line\n    []\n  );\n\n  if (isInitialSourceHeadless) return null;\n\n  return (\n    <Dialog\n      open\n      onRequestClose={onClose}\n      fullHeight\n      flexBody\n      secondaryActions={[\n        !electron && screenType !== 'touch' ? (\n          <FlatButton\n            key=\"download-gdevelop\"\n            label={\n              <Trans>Download GDevelop to use images from your computer</Trans>\n            }\n            onClick={() =>\n              Window.openExternalURL('https://gdevelop-app.com/download')\n            }\n          />\n        ) : null,\n      ]}\n      actions={[\n        <FlatButton\n          key=\"close\"\n          label={<Trans>Close</Trans>}\n          primary\n          onClick={onClose}\n        />,\n      ]}\n      noMargin\n    >\n      <Column expand noMargin>\n        <Tabs value={currentTab} onChange={setCurrentTab}>\n          {standaloneTabResourceSources.map(({ name, displayName }) => (\n            <Tab\n              label={i18n._(displayName)}\n              value={'standalone-' + name}\n              key={name}\n            />\n          ))}\n          <Tab\n            label={<Trans>Choose a file</Trans>}\n            value=\"import\"\n            key=\"import\"\n          />\n        </Tabs>\n        {standaloneTabResourceSources.map(source => {\n          if (currentTab !== 'standalone-' + source.name) return null;\n\n          return source.renderComponent({\n            i18n,\n            options,\n            project,\n            getLastUsedPath: preferences.getLastUsedPath,\n            setLastUsedPath: preferences.setLastUsedPath,\n            onChooseResources,\n          });\n        })}\n        {currentTab === 'import' ? (\n          <Line expand>\n            <ColumnStackLayout expand>\n              {importTabResourceSources.map(source => (\n                <React.Fragment key={source.name}>\n                  <Text size=\"title\">{i18n._(source.displayName)}</Text>\n                  {source.renderComponent({\n                    i18n,\n                    options,\n                    project,\n                    getLastUsedPath: preferences.getLastUsedPath,\n                    setLastUsedPath: preferences.setLastUsedPath,\n                    onChooseResources,\n                  })}\n                </React.Fragment>\n              ))}\n            </ColumnStackLayout>\n          </Line>\n        ) : null}\n      </Column>\n    </Dialog>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { I18nProvider } from '@lingui/react';\nimport { setupI18n } from '@lingui/core';\nimport { getTranslationFunction } from './getTranslationFunction';\nimport { type I18n as I18nType } from '@lingui/core';\nconst gd = global.gd;\n\ntype Catalog = any;\ntype Catalogs = {\n  [string]: Catalog,\n};\n\ntype Props = {|\n  language: string,\n  children: React.Node,\n|};\n\ntype State = {\n  language: string,\n  i18n: ?I18nType,\n  catalogs: Catalogs,\n};\n\nexport default class GDI18nProvider extends React.Component<Props, State> {\n  state = {\n    language: 'en',\n    catalogs: {},\n    i18n: null,\n  };\n\n  componentDidMount() {\n    this._loadLanguage(this.props.language);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.language !== this.props.language) {\n      this._loadLanguage(this.props.language);\n    }\n  }\n\n  _loadCatalog = (language: string): Promise<Catalogs> => {\n    if (this.state.catalogs[language]) {\n      return Promise.resolve(this.state.catalogs);\n    }\n\n    return import(/* webpackMode: \"lazy\", webpackChunkName: \"locales-[request]\" */\n    `../../locales/${language.replace('-', '_')}/messages`).then(\n      catalog => {\n        return { ...this.state.catalogs, [language]: catalog };\n      },\n      (error: Error) => {\n        console.error('Error while loading language=' + language, error);\n        return this.state.catalogs;\n      }\n    );\n  };\n\n  _loadLanguage(language: string) {\n    this._loadCatalog(language).then(catalogs => {\n      this.setState(\n        {\n          language,\n          catalogs,\n          i18n: setupI18n({\n            language: language,\n            catalogs,\n          }),\n        },\n        () => {\n          const { i18n } = this.state;\n          gd.getTranslation = getTranslationFunction(i18n);\n          console.info(`Loaded \"${language}\" language`);\n        }\n      );\n    });\n  }\n\n  render() {\n    // Use language from the state, as it is synchronized with the catalogs,\n    // while the language from props is the \"target language\", and sometime\n    // can be a language for which the catalog is not loaded yet (which would\n    // create warning and a \"flash\" effect when changing language).\n    const { i18n, catalogs, language } = this.state;\n    const { children } = this.props;\n\n    if (!i18n) return null; // Skip rendering when catalog isn't loaded.\n\n    return (\n      <I18nProvider i18n={i18n} language={language} catalogs={catalogs}>\n        {children}\n      </I18nProvider>\n    );\n  }\n}\n","var map = {\n\t\"./af_ZA/messages\": [\n\t\t2012,\n\t\t5\n\t],\n\t\"./ar_SA/messages\": [\n\t\t2013,\n\t\t6\n\t],\n\t\"./az_AZ/messages\": [\n\t\t2014,\n\t\t7\n\t],\n\t\"./bg_BG/messages\": [\n\t\t2015,\n\t\t8\n\t],\n\t\"./bn_BD/messages\": [\n\t\t2016,\n\t\t9\n\t],\n\t\"./ca_ES/messages\": [\n\t\t2017,\n\t\t10\n\t],\n\t\"./cs_CZ/messages\": [\n\t\t2018,\n\t\t11\n\t],\n\t\"./da_DK/messages\": [\n\t\t2019,\n\t\t12\n\t],\n\t\"./de_DE/messages\": [\n\t\t2020,\n\t\t13\n\t],\n\t\"./el_GR/messages\": [\n\t\t2021,\n\t\t14\n\t],\n\t\"./en/messages\": [\n\t\t2022,\n\t\t15\n\t],\n\t\"./eo_UY/messages\": [\n\t\t2023,\n\t\t16\n\t],\n\t\"./es_ES/messages\": [\n\t\t2024,\n\t\t17\n\t],\n\t\"./fa_IR/messages\": [\n\t\t2025,\n\t\t18\n\t],\n\t\"./fi_FI/messages\": [\n\t\t2026,\n\t\t19\n\t],\n\t\"./fil_PH/messages\": [\n\t\t2027,\n\t\t20\n\t],\n\t\"./fr_FR/messages\": [\n\t\t2028,\n\t\t21\n\t],\n\t\"./ha_HG/messages\": [\n\t\t2029,\n\t\t22\n\t],\n\t\"./he_IL/messages\": [\n\t\t2030,\n\t\t23\n\t],\n\t\"./hi_IN/messages\": [\n\t\t2031,\n\t\t24\n\t],\n\t\"./hu_HU/messages\": [\n\t\t2032,\n\t\t25\n\t],\n\t\"./id_ID/messages\": [\n\t\t2033,\n\t\t26\n\t],\n\t\"./ig_NG/messages\": [\n\t\t2034,\n\t\t27\n\t],\n\t\"./it_IT/messages\": [\n\t\t2035,\n\t\t28\n\t],\n\t\"./ja_JP/messages\": [\n\t\t2036,\n\t\t29\n\t],\n\t\"./ka_GE/messages\": [\n\t\t2037,\n\t\t30\n\t],\n\t\"./km_KH/messages\": [\n\t\t2038,\n\t\t31\n\t],\n\t\"./ko_KR/messages\": [\n\t\t2039,\n\t\t32\n\t],\n\t\"./lt_LT/messages\": [\n\t\t2040,\n\t\t33\n\t],\n\t\"./lv_LV/messages\": [\n\t\t2041,\n\t\t34\n\t],\n\t\"./mr_IN/messages\": [\n\t\t2042,\n\t\t35\n\t],\n\t\"./ms_MY/messages\": [\n\t\t2043,\n\t\t36\n\t],\n\t\"./my_MM/messages\": [\n\t\t2044,\n\t\t37\n\t],\n\t\"./nl_NL/messages\": [\n\t\t2045,\n\t\t38\n\t],\n\t\"./no_NO/messages\": [\n\t\t2046,\n\t\t39\n\t],\n\t\"./pl_PL/messages\": [\n\t\t2047,\n\t\t40\n\t],\n\t\"./pseudo_LOCALE/messages\": [\n\t\t2048,\n\t\t41\n\t],\n\t\"./pt_BR/messages\": [\n\t\t2049,\n\t\t42\n\t],\n\t\"./pt_PT/messages\": [\n\t\t2050,\n\t\t43\n\t],\n\t\"./ro_RO/messages\": [\n\t\t2051,\n\t\t44\n\t],\n\t\"./ru_RU/messages\": [\n\t\t2052,\n\t\t45\n\t],\n\t\"./si_LK/messages\": [\n\t\t2053,\n\t\t46\n\t],\n\t\"./sk_SK/messages\": [\n\t\t2054,\n\t\t47\n\t],\n\t\"./sl_SI/messages\": [\n\t\t2055,\n\t\t48\n\t],\n\t\"./sq_AL/messages\": [\n\t\t2056,\n\t\t49\n\t],\n\t\"./sr_CS/messages\": [\n\t\t2057,\n\t\t50\n\t],\n\t\"./sr_SP/messages\": [\n\t\t2058,\n\t\t51\n\t],\n\t\"./sv_SE/messages\": [\n\t\t2059,\n\t\t52\n\t],\n\t\"./th_TH/messages\": [\n\t\t2060,\n\t\t53\n\t],\n\t\"./tr_TR/messages\": [\n\t\t2061,\n\t\t54\n\t],\n\t\"./uk_UA/messages\": [\n\t\t2062,\n\t\t55\n\t],\n\t\"./ur_PK/messages\": [\n\t\t2063,\n\t\t56\n\t],\n\t\"./uz_UZ/messages\": [\n\t\t2064,\n\t\t57\n\t],\n\t\"./vi_VN/messages\": [\n\t\t2065,\n\t\t58\n\t],\n\t\"./yo_NG/messages\": [\n\t\t2066,\n\t\t59\n\t],\n\t\"./zh_CN/messages\": [\n\t\t2067,\n\t\t60\n\t],\n\t\"./zh_TW/messages\": [\n\t\t2068,\n\t\t61\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 1870;\nmodule.exports = webpackAsyncContext;","// @flow\nimport * as React from 'react';\nimport Text from '../UI/Text';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport PropertiesEditor from '../PropertiesEditor';\nimport propertiesMapToSchema from '../PropertiesEditor/PropertiesMapToSchema';\nimport { List } from '@material-ui/core';\n\ntype Props = {|\n  project: gdProject,\n|};\n\nfunction ExtensionsProperties(props: Props) {\n  const { project } = props;\n  const allExtensions = project.getCurrentPlatform().getAllPlatformExtensions();\n  const propertyList = [];\n  for (let i = 0; i < allExtensions.size(); i++) {\n    const extension = allExtensions.at(i);\n    const properties = project\n      .getExtensionProperties()\n      .getAllExtensionProperties(extension.getName(), project);\n    if (properties.keys().size() === 0) continue;\n    const propertiesSchema = propertiesMapToSchema(\n      properties,\n      instance =>\n        project\n          .getExtensionProperties()\n          .getAllExtensionProperties(extension.getName(), project),\n      (instance, propertyName, newValue) => {\n        if (\n          project\n            .getExtensionProperties()\n            .getAllExtensionProperties(extension.getName(), project)\n            .get(propertyName)\n            .getType() === 'boolean'\n        ) {\n          project\n            .getExtensionProperties()\n            .setValue(\n              extension.getName(),\n              propertyName,\n              newValue === '1' ? 'true' : 'false'\n            );\n        } else {\n          project\n            .getExtensionProperties()\n            .setValue(extension.getName(), propertyName, newValue);\n        }\n      }\n    );\n\n    propertyList.push(\n      <ColumnStackLayout key={extension.getName()} noMargin>\n        <Text size=\"title\">{extension.getFullName()}</Text>\n        <PropertiesEditor\n          schema={propertiesSchema}\n          instances={[extension.getAllProperties()]}\n        />\n      </ColumnStackLayout>\n    );\n  }\n\n  return propertyList.length ? <List>{propertyList}</List> : null;\n}\n\nexport default ExtensionsProperties;\n","// @flow\nimport { t, Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport SubscriptionChecker from '../Profile/SubscriptionChecker';\nimport Checkbox from '../UI/Checkbox';\nimport ColorField from '../UI/ColorField';\nimport { I18n } from '@lingui/react';\nimport { Line } from '../UI/Grid';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport { ColumnStackLayout, ResponsiveLineStackLayout } from '../UI/Layout';\nimport {\n  hexNumberToRGBString,\n  rgbStringToHexNumber,\n} from '../Utils/ColorTransformer';\nimport useForceUpdate from '../Utils/UseForceUpdate';\nimport ResourceSelectorWithThumbnail from '../ResourcesList/ResourceSelectorWithThumbnail';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport Text from '../UI/Text';\n\ntype Props = {\n  loadingScreen: gdLoadingScreen,\n  onChangeSubscription: () => void,\n\n  // For resources:\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n};\n\nexport const LoadingScreenEditor = ({\n  loadingScreen,\n  onChangeSubscription,\n  project,\n  resourceSources,\n  onChooseResource,\n  resourceExternalEditors,\n}: Props) => {\n  const subscriptionChecker = React.useRef<?SubscriptionChecker>(null);\n  const forceUpdate = useForceUpdate();\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <ColumnStackLayout expand noMargin>\n          <Text size=\"title\">\n            <Trans>Background</Trans>\n          </Text>\n          <Line noMargin>\n            <ResourceSelectorWithThumbnail\n              floatingLabelText={<Trans>Background image</Trans>}\n              project={project}\n              resourceSources={resourceSources}\n              onChooseResource={onChooseResource}\n              resourceExternalEditors={resourceExternalEditors}\n              resourceKind=\"image\"\n              resourceName={loadingScreen.getBackgroundImageResourceName()}\n              onChange={resourceName => {\n                loadingScreen.setBackgroundImageResourceName(resourceName);\n                forceUpdate();\n              }}\n            />\n          </Line>\n          <ResponsiveLineStackLayout noMargin>\n            <ColorField\n              fullWidth\n              floatingLabelText={<Trans>Background color</Trans>}\n              disableAlpha\n              color={hexNumberToRGBString(loadingScreen.getBackgroundColor())}\n              onChange={color => {\n                loadingScreen.setBackgroundColor(rgbStringToHexNumber(color));\n                forceUpdate();\n              }}\n            />\n            <SemiControlledTextField\n              floatingLabelText={\n                <Trans>Background fade in duration (in seconds)</Trans>\n              }\n              step={0.1}\n              fullWidth\n              type=\"number\"\n              value={'' + loadingScreen.getBackgroundFadeInDuration()}\n              onChange={value => {\n                loadingScreen.setBackgroundFadeInDuration(\n                  Math.max(0, parseFloat(value))\n                );\n                forceUpdate();\n              }}\n            />\n          </ResponsiveLineStackLayout>\n          <Text size=\"title\">\n            <Trans>Logo</Trans>\n          </Text>\n          <Checkbox\n            label={\n              <Trans>Display GDevelop logo at startup (in exported game)</Trans>\n            }\n            checked={loadingScreen.isGDevelopSplashShown()}\n            onCheck={(e, checked) => {\n              if (!checked) {\n                if (\n                  subscriptionChecker.current &&\n                  !subscriptionChecker.current.checkHasSubscription()\n                )\n                  return;\n              }\n              loadingScreen.showGDevelopSplash(checked);\n              forceUpdate();\n            }}\n          />\n          <SelectField\n            fullWidth\n            floatingLabelText={<Trans>GDevelop logo style</Trans>}\n            value={loadingScreen.getGDevelopLogoStyle()}\n            onChange={(e, i, value: string) => {\n              loadingScreen.setGDevelopLogoStyle(value);\n              forceUpdate();\n            }}\n          >\n            <SelectOption value=\"light\" primaryText={t`Light (plain)`} />\n            <SelectOption\n              value=\"light-colored\"\n              primaryText={t`Light (colored)`}\n            />\n            <SelectOption value=\"dark\" primaryText={t`Dark (plain)`} />\n            <SelectOption\n              value=\"dark-colored\"\n              primaryText={t`Dark (colored)`}\n            />\n          </SelectField>\n          <ResponsiveLineStackLayout noMargin>\n            <SemiControlledTextField\n              floatingLabelText={\n                <Trans>Logo and progress fade in delay (in seconds)</Trans>\n              }\n              step={0.1}\n              fullWidth\n              type=\"number\"\n              value={'' + loadingScreen.getLogoAndProgressLogoFadeInDelay()}\n              onChange={value => {\n                loadingScreen.setLogoAndProgressLogoFadeInDelay(\n                  Math.max(0, parseFloat(value))\n                );\n                forceUpdate();\n              }}\n            />\n            <SemiControlledTextField\n              floatingLabelText={\n                <Trans>Logo and progress fade in duration (in seconds)</Trans>\n              }\n              step={0.1}\n              fullWidth\n              type=\"number\"\n              value={'' + loadingScreen.getLogoAndProgressFadeInDuration()}\n              onChange={value => {\n                loadingScreen.setLogoAndProgressFadeInDuration(\n                  Math.max(0, parseFloat(value))\n                );\n                forceUpdate();\n              }}\n            />\n          </ResponsiveLineStackLayout>\n          <Text size=\"title\">\n            <Trans>Progress bar</Trans>\n          </Text>\n          <Checkbox\n            label={<Trans>Show progress bar</Trans>}\n            checked={loadingScreen.getShowProgressBar()}\n            onCheck={(e, checked) => {\n              loadingScreen.setShowProgressBar(checked);\n              forceUpdate();\n            }}\n          />\n          <ResponsiveLineStackLayout noMargin>\n            <SemiControlledTextField\n              floatingLabelText={<Trans>Progress bar minimum width</Trans>}\n              fullWidth\n              type=\"number\"\n              value={'' + loadingScreen.getProgressBarMinWidth()}\n              onChange={value => {\n                loadingScreen.setProgressBarMinWidth(\n                  Math.max(0, parseFloat(value))\n                );\n                forceUpdate();\n              }}\n              helperMarkdownText={i18n._(t`In pixels. 0 to ignore.`)}\n            />\n            <SemiControlledTextField\n              floatingLabelText={<Trans>Progress bar width</Trans>}\n              fullWidth\n              type=\"number\"\n              value={'' + loadingScreen.getProgressBarWidthPercent()}\n              onChange={value => {\n                loadingScreen.setProgressBarWidthPercent(\n                  Math.min(100, Math.max(1, parseFloat(value)))\n                );\n                forceUpdate();\n              }}\n              helperMarkdownText={i18n._(t`As a percent of the game width.`)}\n            />\n            <SemiControlledTextField\n              floatingLabelText={<Trans>Progress bar maximum width</Trans>}\n              fullWidth\n              type=\"number\"\n              value={'' + loadingScreen.getProgressBarMaxWidth()}\n              onChange={value => {\n                loadingScreen.setProgressBarMaxWidth(\n                  Math.max(0, parseFloat(value))\n                );\n                forceUpdate();\n              }}\n              helperMarkdownText={i18n._(t`In pixels. 0 to ignore.`)}\n            />\n          </ResponsiveLineStackLayout>\n          <SemiControlledTextField\n            floatingLabelText={<Trans>Progress bar height</Trans>}\n            fullWidth\n            type=\"number\"\n            value={'' + loadingScreen.getProgressBarHeight()}\n            onChange={value => {\n              loadingScreen.setProgressBarHeight(\n                Math.max(1, parseFloat(value))\n              );\n              forceUpdate();\n            }}\n          />\n          <ColorField\n            fullWidth\n            floatingLabelText={<Trans>Progress bar color</Trans>}\n            disableAlpha\n            color={hexNumberToRGBString(loadingScreen.getProgressBarColor())}\n            onChange={color => {\n              loadingScreen.setProgressBarColor(rgbStringToHexNumber(color));\n              forceUpdate();\n            }}\n          />\n          <Text size=\"title\">\n            <Trans>Duration</Trans>\n          </Text>\n          <SemiControlledTextField\n            floatingLabelText={\n              <Trans>Minimum duration of the screen (in seconds)</Trans>\n            }\n            step={0.1}\n            fullWidth\n            type=\"number\"\n            value={'' + loadingScreen.getMinDuration()}\n            onChange={value => {\n              loadingScreen.setMinDuration(Math.max(0, parseFloat(value)));\n              forceUpdate();\n            }}\n            helperMarkdownText={i18n._(\n              t`When previewing the game in the editor, this duration is ignored (the game preview starts as soon as possible).`\n            )}\n          />\n          <SubscriptionChecker\n            ref={subscriptionChecker}\n            onChangeSubscription={onChangeSubscription}\n            mode=\"mandatory\"\n            id=\"Disable GDevelop splash at startup\"\n            title={<Trans>Disable GDevelop splash at startup</Trans>}\n          />\n        </ColumnStackLayout>\n      )}\n    </I18n>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport Checkbox from '../UI/Checkbox';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport Dialog from '../UI/Dialog';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport {\n  getProjectPropertiesErrors,\n  displayProjectErrorsBox,\n  validatePackageName,\n} from '../Utils/ProjectErrorsChecker';\nimport DismissableAlertMessage from '../UI/DismissableAlertMessage';\nimport HelpButton from '../UI/HelpButton';\nimport { ResponsiveLineStackLayout, ColumnStackLayout } from '../UI/Layout';\nimport Text from '../UI/Text';\nimport ExtensionsProperties from './ExtensionsProperties';\nimport { useSerializableObjectCancelableEditor } from '../Utils/SerializableObjectCancelableEditor';\nimport RaisedButton from '../UI/RaisedButton';\nimport Window from '../Utils/Window';\nimport { I18n } from '@lingui/react';\nimport AlertMessage from '../UI/AlertMessage';\nimport { GameRegistration } from '../GameDashboard/GameRegistration';\nimport { Tab, Tabs } from '../UI/Tabs';\nimport { LoadingScreenEditor } from './LoadingScreenEditor';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport {\n  type HotReloadPreviewButtonProps,\n  NewPreviewIcon,\n} from '../HotReload/HotReloadPreviewButton';\nimport PublicGameProperties from '../GameDashboard/PublicGameProperties';\n\ntype Props = {|\n  project: gdProject,\n  open: boolean,\n  initialTab: 'properties' | 'loading-screen',\n  onClose: Function,\n  onApply: Function,\n  onChangeSubscription: () => void,\n  hotReloadPreviewButtonProps?: ?HotReloadPreviewButtonProps,\n\n  // For resources:\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n|};\n\ntype ProjectProperties = {|\n  gameResolutionWidth: number,\n  gameResolutionHeight: number,\n  adaptGameResolutionAtRuntime: boolean,\n  name: string,\n  description: string,\n  author: string,\n  authorIds: string[],\n  version: string,\n  packageName: string,\n  orientation: string,\n  scaleMode: string,\n  pixelsRounding: boolean,\n  sizeOnStartupMode: string,\n  minFPS: number,\n  maxFPS: number,\n  isFolderProject: boolean,\n  useDeprecatedZeroAsDefaultZOrder: boolean,\n|};\n\nfunction loadPropertiesFromProject(project: gdProject): ProjectProperties {\n  return {\n    gameResolutionWidth: project.getGameResolutionWidth(),\n    gameResolutionHeight: project.getGameResolutionHeight(),\n    adaptGameResolutionAtRuntime: project.getAdaptGameResolutionAtRuntime(),\n    name: project.getName(),\n    description: project.getDescription(),\n    author: project.getAuthor(),\n    authorIds: project.getAuthorIds().toJSArray(),\n    version: project.getVersion(),\n    packageName: project.getPackageName(),\n    orientation: project.getOrientation(),\n    scaleMode: project.getScaleMode(),\n    pixelsRounding: project.getPixelsRounding(),\n    sizeOnStartupMode: project.getSizeOnStartupMode(),\n    minFPS: project.getMinimumFPS(),\n    maxFPS: project.getMaximumFPS(),\n    isFolderProject: project.isFolderProject(),\n    useDeprecatedZeroAsDefaultZOrder: project.getUseDeprecatedZeroAsDefaultZOrder(),\n  };\n}\n\nfunction applyPropertiesToProject(\n  project: gdProject,\n  newProperties: ProjectProperties\n) {\n  const t = str => str; //TODO\n  const {\n    gameResolutionWidth,\n    gameResolutionHeight,\n    adaptGameResolutionAtRuntime,\n    name,\n    description,\n    authorIds,\n    author,\n    version,\n    packageName,\n    orientation,\n    scaleMode,\n    pixelsRounding,\n    sizeOnStartupMode,\n    minFPS,\n    maxFPS,\n    isFolderProject,\n    useDeprecatedZeroAsDefaultZOrder,\n  } = newProperties;\n  project.setGameResolutionSize(gameResolutionWidth, gameResolutionHeight);\n  project.setAdaptGameResolutionAtRuntime(adaptGameResolutionAtRuntime);\n  project.setName(name);\n  project.setDescription(description);\n  const projectAuthorIds = project.getAuthorIds();\n  projectAuthorIds.clear();\n  authorIds.forEach(authorId => projectAuthorIds.push_back(authorId));\n  project.setAuthor(author);\n  project.setVersion(version);\n  project.setPackageName(packageName);\n  project.setOrientation(orientation);\n  project.setScaleMode(scaleMode);\n  project.setPixelsRounding(pixelsRounding);\n  project.setSizeOnStartupMode(sizeOnStartupMode);\n  project.setMinimumFPS(minFPS);\n  project.setMaximumFPS(maxFPS);\n  project.setFolderProject(isFolderProject);\n  project.setUseDeprecatedZeroAsDefaultZOrder(useDeprecatedZeroAsDefaultZOrder);\n\n  return displayProjectErrorsBox(t, getProjectPropertiesErrors(t, project));\n}\n\nfunction ProjectPropertiesDialog(props: Props) {\n  const { project, hotReloadPreviewButtonProps } = props;\n\n  const initialProperties = React.useMemo(\n    () => loadPropertiesFromProject(project),\n    [project]\n  );\n  let [name, setName] = React.useState(initialProperties.name);\n  let [description, setDescription] = React.useState(\n    initialProperties.description\n  );\n  let [authorIds, setAuthorIds] = React.useState(initialProperties.authorIds);\n  let [gameResolutionWidth, setGameResolutionWidth] = React.useState(\n    initialProperties.gameResolutionWidth\n  );\n  let [gameResolutionHeight, setGameResolutionHeight] = React.useState(\n    initialProperties.gameResolutionHeight\n  );\n  let [\n    adaptGameResolutionAtRuntime,\n    setAdaptGameResolutionAtRuntime,\n  ] = React.useState(initialProperties.adaptGameResolutionAtRuntime);\n  let [author, setAuthor] = React.useState(initialProperties.author);\n  let [version, setVersion] = React.useState(initialProperties.version);\n  let [packageName, setPackageName] = React.useState(\n    initialProperties.packageName\n  );\n  let [orientation, setOrientation] = React.useState(\n    initialProperties.orientation\n  );\n  let [scaleMode, setScaleMode] = React.useState(initialProperties.scaleMode);\n  let [pixelsRounding, setPixelsRounding] = React.useState(\n    initialProperties.pixelsRounding\n  );\n  let [sizeOnStartupMode, setSizeOnStartupMode] = React.useState(\n    initialProperties.sizeOnStartupMode\n  );\n  let [minFPS, setMinFPS] = React.useState(initialProperties.minFPS);\n  let [maxFPS, setMaxFPS] = React.useState(initialProperties.maxFPS);\n  let [isFolderProject, setIsFolderProject] = React.useState(\n    initialProperties.isFolderProject\n  );\n  let [\n    useDeprecatedZeroAsDefaultZOrder,\n    setUseDeprecatedZeroAsDefaultZOrder,\n  ] = React.useState(initialProperties.useDeprecatedZeroAsDefaultZOrder);\n\n  const defaultPackageName = 'com.example.mygame';\n  const defaultVersion = '1.0.0';\n\n  const [currentTab, setCurrentTab] = React.useState<\n    'properties' | 'loading-screen'\n  >(props.initialTab);\n\n  const onCancelLoadingScreenChanges = useSerializableObjectCancelableEditor({\n    serializableObject: project.getLoadingScreen(),\n    onCancel: props.onClose,\n  });\n  const onCancelChanges = useSerializableObjectCancelableEditor({\n    serializableObject: project.getExtensionProperties(),\n    onCancel: onCancelLoadingScreenChanges,\n  });\n\n  const onApply = () => {\n    if (\n      applyPropertiesToProject(project, {\n        gameResolutionWidth,\n        gameResolutionHeight,\n        adaptGameResolutionAtRuntime,\n        name,\n        description,\n        author,\n        authorIds,\n        version,\n        packageName,\n        orientation,\n        scaleMode,\n        pixelsRounding,\n        sizeOnStartupMode,\n        minFPS,\n        maxFPS,\n        isFolderProject,\n        useDeprecatedZeroAsDefaultZOrder,\n      })\n    )\n      props.onApply();\n  };\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <React.Fragment>\n          <Dialog\n            onApply={onApply}\n            actions={[\n              <FlatButton\n                label={<Trans>Cancel</Trans>}\n                primary={false}\n                onClick={onCancelChanges}\n                key=\"cancel\"\n              />,\n              <FlatButton\n                label={<Trans>Apply</Trans>}\n                primary={true}\n                onClick={onApply}\n                key=\"apply\"\n              />,\n            ]}\n            secondaryActions={[\n              <HelpButton\n                helpPagePath=\"/interface/project-manager/properties\"\n                key=\"help\"\n              />,\n              hotReloadPreviewButtonProps ? (\n                <FlatButton\n                  key=\"hot-reload-preview-button\"\n                  icon={<NewPreviewIcon />}\n                  label={<Trans>Run a preview (with loading screen)</Trans>}\n                  onClick={\n                    hotReloadPreviewButtonProps.launchProjectWithLoadingScreenPreview\n                  }\n                />\n              ) : null,\n            ]}\n            noTitleMargin\n            open={props.open}\n            onRequestClose={onCancelChanges}\n            fullHeight\n            flexBody\n            title={\n              <div>\n                <Tabs value={currentTab} onChange={setCurrentTab}>\n                  <Tab\n                    label={<Trans>Properties</Trans>}\n                    value={'properties'}\n                    key={'properties'}\n                  />\n                  <Tab\n                    label={<Trans>Loading Screen</Trans>}\n                    value={'loading-screen'}\n                    key={'loading-screen'}\n                  />\n                </Tabs>\n              </div>\n            }\n          >\n            {currentTab === 'properties' && (\n              <ColumnStackLayout expand noMargin>\n                <Text size=\"title\">\n                  <Trans>Game Info</Trans>\n                </Text>\n                <PublicGameProperties\n                  name={name}\n                  setName={setName}\n                  description={description}\n                  setDescription={setDescription}\n                  project={project}\n                  authorIds={authorIds}\n                  setAuthorIds={setAuthorIds}\n                  orientation={orientation}\n                  setOrientation={setOrientation}\n                />\n                <Text size=\"title\">\n                  <Trans>Packaging</Trans>\n                </Text>\n                <SemiControlledTextField\n                  floatingLabelText={\n                    <Trans>Package name (for iOS and Android)</Trans>\n                  }\n                  fullWidth\n                  hintText={defaultPackageName}\n                  type=\"text\"\n                  value={packageName}\n                  onChange={setPackageName}\n                  errorText={\n                    validatePackageName(packageName) ? (\n                      undefined\n                    ) : (\n                      <Trans>\n                        The package name is containing invalid characters or not\n                        following the convention \"xxx.yyy.zzz\" (numbers allowed\n                        after a letter only).\n                      </Trans>\n                    )\n                  }\n                />\n                <SemiControlledTextField\n                  floatingLabelText={<Trans>Version number (X.Y.Z)</Trans>}\n                  fullWidth\n                  hintText={defaultVersion}\n                  type=\"text\"\n                  value={version}\n                  onChange={setVersion}\n                />\n                <SemiControlledTextField\n                  floatingLabelText={<Trans>Publisher name</Trans>}\n                  fullWidth\n                  hintText={t`Your name`}\n                  helperMarkdownText={i18n._(\n                    t`This will be used when packaging and submitting your application to the stores.`\n                  )}\n                  type=\"text\"\n                  value={author}\n                  onChange={setAuthor}\n                />\n                {useDeprecatedZeroAsDefaultZOrder ? (\n                  <React.Fragment>\n                    <Text size=\"title\">\n                      <Trans>Z Order of objects created from events</Trans>\n                    </Text>\n                    <AlertMessage kind=\"info\">\n                      <Trans>\n                        When you create an object using an action, GDevelop now\n                        sets the Z order of the object to the maximum value that\n                        was found when starting the scene for each layer. This\n                        allow to make sure that objects that you create are in\n                        front of others. This game was created before this\n                        change, so GDevelop maintains the old behavior: newly\n                        created objects Z order is set to 0. It's recommended\n                        that you switch to the new behavior by clicking the\n                        following button.\n                      </Trans>\n                    </AlertMessage>\n                    <RaisedButton\n                      onClick={() => {\n                        const answer = Window.showConfirmDialog(\n                          i18n._(\n                            t`Make sure to verify all your events creating objects, and optionally add an action to set the Z order back to 0 if it's important for your game. Do you want to continue (recommened)?`\n                          )\n                        );\n                        if (!answer) return;\n\n                        setUseDeprecatedZeroAsDefaultZOrder(false);\n                      }}\n                      label={\n                        <Trans>\n                          Switch to create objects with the highest Z order of\n                          the layer\n                        </Trans>\n                      }\n                    />\n                  </React.Fragment>\n                ) : null}\n                <Text size=\"title\">\n                  <Trans>Analytics</Trans>\n                </Text>\n                <GameRegistration project={project} />\n                <Text size=\"title\">\n                  <Trans>Resolution and rendering</Trans>\n                </Text>\n                <ResponsiveLineStackLayout noMargin>\n                  <SemiControlledTextField\n                    floatingLabelText={<Trans>Game resolution width</Trans>}\n                    fullWidth\n                    type=\"number\"\n                    value={'' + gameResolutionWidth}\n                    onChange={value =>\n                      setGameResolutionWidth(Math.max(1, parseInt(value, 10)))\n                    }\n                  />\n                  <SemiControlledTextField\n                    floatingLabelText={<Trans>Game resolution height</Trans>}\n                    fullWidth\n                    type=\"number\"\n                    value={'' + gameResolutionHeight}\n                    onChange={value =>\n                      setGameResolutionHeight(Math.max(1, parseInt(value, 10)))\n                    }\n                  />\n                </ResponsiveLineStackLayout>\n                <SelectField\n                  fullWidth\n                  floatingLabelText={\n                    <Trans>\n                      Game resolution resize mode (fullscreen or window)\n                    </Trans>\n                  }\n                  value={sizeOnStartupMode}\n                  onChange={(e, i, value: string) =>\n                    setSizeOnStartupMode(value)\n                  }\n                >\n                  <SelectOption\n                    value=\"\"\n                    primaryText={t`No changes to the game size`}\n                  />\n                  <SelectOption\n                    value=\"adaptWidth\"\n                    primaryText={t`Change width to fit the screen or window size`}\n                  />\n                  <SelectOption\n                    value=\"adaptHeight\"\n                    primaryText={t`Change height to fit the screen or window size`}\n                  />\n                </SelectField>\n                <Checkbox\n                  label={\n                    <Trans>\n                      Update resolution during the game to fit the screen or\n                      window size\n                    </Trans>\n                  }\n                  disabled={sizeOnStartupMode === ''}\n                  checked={adaptGameResolutionAtRuntime}\n                  onCheck={(e, checked) =>\n                    setAdaptGameResolutionAtRuntime(checked)\n                  }\n                />\n                <ResponsiveLineStackLayout noMargin>\n                  <SemiControlledTextField\n                    floatingLabelText={<Trans>Minimum FPS</Trans>}\n                    fullWidth\n                    type=\"number\"\n                    value={'' + minFPS}\n                    onChange={value =>\n                      setMinFPS(Math.max(0, parseInt(value, 10)))\n                    }\n                  />\n                  <SemiControlledTextField\n                    floatingLabelText={\n                      <Trans>Maximum FPS (0 for unlimited)</Trans>\n                    }\n                    fullWidth\n                    type=\"number\"\n                    value={'' + maxFPS}\n                    onChange={value =>\n                      setMaxFPS(Math.max(0, parseInt(value, 10)))\n                    }\n                  />\n                </ResponsiveLineStackLayout>\n                {maxFPS > 0 && maxFPS < 60 && (\n                  <DismissableAlertMessage\n                    identifier=\"maximum-fps-too-low\"\n                    kind=\"warning\"\n                  >\n                    <Trans>\n                      Most monitors have a refresh rate of 60 FPS. Setting a\n                      maximum number of FPS under 60 will force the game to skip\n                      frames, and the real number of FPS will be way below 60,\n                      making the game laggy and impacting the gameplay\n                      negatively. Consider putting 60 or more for the maximum\n                      number or FPS, or disable it by setting 0.\n                    </Trans>\n                  </DismissableAlertMessage>\n                )}\n                {minFPS < 20 && (\n                  <DismissableAlertMessage\n                    identifier=\"minimum-fps-too-low\"\n                    kind=\"warning\"\n                  >\n                    <Trans>\n                      Setting the minimum number of FPS below 20 will increase a\n                      lot the time that is allowed between the simulation of two\n                      frames of the game. If case of a sudden slowdown, or on\n                      slow computers, this can create buggy behaviors like\n                      objects passing beyond a wall. Consider setting 20 as the\n                      minimum FPS.\n                    </Trans>\n                  </DismissableAlertMessage>\n                )}\n                <SelectField\n                  fullWidth\n                  floatingLabelText={\n                    <Trans>Scale mode (also called \"Sampling\")</Trans>\n                  }\n                  value={scaleMode}\n                  onChange={(e, i, value: string) => setScaleMode(value)}\n                >\n                  <SelectOption\n                    value=\"linear\"\n                    primaryText={t`Linear (antialiased rendering, good for most games)`}\n                  />\n                  <SelectOption\n                    value=\"nearest\"\n                    primaryText={t`Nearest (no antialiasing, good for pixel perfect games)`}\n                  />\n                </SelectField>\n                <Checkbox\n                  label={\n                    <Trans>\n                      Round pixels when rendering, useful for pixel perfect\n                      games.\n                    </Trans>\n                  }\n                  checked={pixelsRounding}\n                  onCheck={(e, checked) => setPixelsRounding(checked)}\n                />\n                {scaleMode === 'nearest' && (\n                  <DismissableAlertMessage\n                    identifier=\"use-non-smoothed-textures\"\n                    kind=\"info\"\n                  >\n                    <Trans>\n                      To obtain the best pixel-perfect effect possible, go in\n                      the resources editor and disable the Smoothing for all\n                      images of your game. It will be done automatically for new\n                      images added from now.\n                    </Trans>\n                  </DismissableAlertMessage>\n                )}\n                {pixelsRounding && (\n                  <DismissableAlertMessage\n                    identifier=\"use-pixel-rounding\"\n                    kind=\"info\"\n                  >\n                    <Trans>\n                      To avoid flickering on objects followed by the camera, use\n                      sprites with even dimensions.\n                    </Trans>\n                  </DismissableAlertMessage>\n                )}\n\n                <Text size=\"title\">\n                  <Trans>Project files</Trans>\n                </Text>\n                <SelectField\n                  fullWidth\n                  floatingLabelText={<Trans>Project file type</Trans>}\n                  value={isFolderProject ? 'folder-project' : 'single-file'}\n                  onChange={(e, i, value: string) =>\n                    setIsFolderProject(value === 'folder-project')\n                  }\n                >\n                  <SelectOption\n                    value={'single-file'}\n                    primaryText={t`Single file (default)`}\n                  />\n                  <SelectOption\n                    value={'folder-project'}\n                    primaryText={t`Multiple files, saved in folder next to the main file`}\n                  />\n                </SelectField>\n                <ExtensionsProperties project={project} />\n              </ColumnStackLayout>\n            )}\n            {currentTab === 'loading-screen' && (\n              <LoadingScreenEditor\n                loadingScreen={project.getLoadingScreen()}\n                onChangeSubscription={() => {\n                  onCancelChanges();\n                  props.onChangeSubscription();\n                }}\n                project={project}\n                resourceSources={props.resourceSources}\n                onChooseResource={props.onChooseResource}\n                resourceExternalEditors={props.resourceExternalEditors}\n              />\n            )}\n          </Dialog>\n        </React.Fragment>\n      )}\n    </I18n>\n  );\n}\n\nexport default ProjectPropertiesDialog;\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\n// This is \"AccountTree\" material icon.\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M22 11V3h-7v3H9V3H2v8h7V8h2v10h4v3h7v-8h-7v3h-2V8h2v3z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { useCommand } from '../CommandPalette/CommandHooks';\n\ntype Props = {|\n  project: ?gdProject,\n  onOpenProjectProperties: () => void,\n  onOpenProjectLoadingScreen: () => void,\n  onOpenProjectVariables: () => void,\n  onOpenResourcesDialog: () => void,\n  onOpenSearchExtensionDialog: () => void,\n  onOpenPlatformSpecificAssetsDialog: () => void,\n|};\n\nconst ProjectManagerCommands = (props: Props) => {\n  useCommand('OPEN_PROJECT_PROPERTIES', !!props.project, {\n    handler: props.onOpenProjectProperties,\n  });\n  useCommand('OPEN_PROJECT_LOADING_SCREEN', !!props.project, {\n    handler: props.onOpenProjectLoadingScreen,\n  });\n\n  useCommand('OPEN_PROJECT_VARIABLES', !!props.project, {\n    handler: props.onOpenProjectVariables,\n  });\n\n  useCommand('OPEN_PLATFORM_SPECIFIC_ASSETS_DIALOG', !!props.project, {\n    handler: props.onOpenPlatformSpecificAssetsDialog,\n  });\n\n  useCommand('OPEN_PROJECT_RESOURCES', !!props.project, {\n    handler: props.onOpenResourcesDialog,\n  });\n\n  useCommand('OPEN_SEARCH_EXTENSIONS_DIALOG', !!props.project, {\n    handler: props.onOpenSearchExtensionDialog,\n  });\n\n  return null;\n};\n\nexport default ProjectManagerCommands;\n","// @flow\n\nimport React from 'react';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport ExtensionInstallDialog from '../AssetStore/ExtensionStore/ExtensionInstallDialog';\nimport EventsFunctionsExtensionsContext from '../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport { type ExtensionShortHeader } from '../Utils/GDevelopServices/Extension';\nimport { installExtension } from '../AssetStore/ExtensionStore/InstallExtension';\n\ntype Props = {|\n  project: gdProject,\n  onClose: () => void,\n  extensionShortHeader: ExtensionShortHeader,\n  extensionName: string,\n  onInstallExtension: ExtensionShortHeader => void,\n  onOpenEventsFunctionsExtension: string => void,\n|};\n\nfunction InstalledExtensionDetails({\n  project,\n  onClose,\n  extensionShortHeader,\n  extensionName,\n  onInstallExtension,\n  onOpenEventsFunctionsExtension,\n}: Props) {\n  const [isInstalling, setIsInstalling] = React.useState<boolean>(false);\n  const eventsFunctionsExtensionsState = React.useContext(\n    EventsFunctionsExtensionsContext\n  );\n\n  const installOrUpdateExtension = async (i18n: I18nType) => {\n    setIsInstalling(true);\n    try {\n      onInstallExtension(extensionShortHeader);\n      await installExtension(\n        i18n,\n        project,\n        eventsFunctionsExtensionsState,\n        extensionShortHeader\n      );\n    } finally {\n      setIsInstalling(false);\n    }\n  };\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <ExtensionInstallDialog\n          project={project}\n          isInstalling={isInstalling}\n          onClose={onClose}\n          onInstall={() => installOrUpdateExtension(i18n)}\n          extensionShortHeader={extensionShortHeader}\n          onEdit={() => {\n            onOpenEventsFunctionsExtension(extensionName);\n            onClose();\n          }}\n        />\n      )}\n    </I18n>\n  );\n}\n\nexport default InstalledExtensionDetails;\n","// @flow\nimport * as React from 'react';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { type MenuItemTemplate } from '../UI/Menu/Menu.flow';\nimport { IconContainer } from '../UI/IconContainer';\nimport { ListItem } from '../UI/List';\nimport ThemeConsumer from '../UI/Theme/ThemeConsumer';\nimport TextField, {\n  noMarginTextFieldInListItemTopOffset,\n} from '../UI/TextField';\nimport { shouldValidate } from '../UI/KeyboardShortcuts/InteractionKeys';\nimport { textEllipsisStyle } from '../UI/TextEllipsis';\n\nimport { ExtensionStoreContext } from '../AssetStore/ExtensionStore/ExtensionStoreContext';\nimport { type ExtensionShortHeader } from '../Utils/GDevelopServices/Extension';\n\nconst styles = {\n  noIndentNestedList: {\n    padding: 0,\n  },\n  itemTextField: {\n    top: noMarginTextFieldInListItemTopOffset,\n  },\n};\n\ntype ProjectStructureItemProps = {|\n  autoGenerateNestedIndicator?: boolean,\n  initiallyOpen?: boolean,\n  leftIcon?: React$Element<any>,\n  indentNestedItems?: boolean,\n  renderNestedItems: () => Array<React$Element<any> | null>,\n  primaryText: React.Node,\n  error?: ?Error,\n  onRefresh?: () => void,\n  open?: boolean,\n|};\n\nexport const ProjectStructureItem = (props: ProjectStructureItemProps) => (\n  <ThemeConsumer>\n    {muiTheme => {\n      const {\n        error,\n        leftIcon,\n        onRefresh,\n        indentNestedItems,\n        autoGenerateNestedIndicator,\n        initiallyOpen,\n        open,\n        primaryText,\n        renderNestedItems,\n      } = props;\n      return (\n        <ListItem\n          open={open}\n          autoGenerateNestedIndicator={autoGenerateNestedIndicator}\n          initiallyOpen={initiallyOpen}\n          primaryText={primaryText}\n          renderNestedItems={renderNestedItems}\n          onReload={onRefresh}\n          style={{\n            backgroundColor: muiTheme.listItem.groupBackgroundColor,\n            borderBottom: `1px solid ${muiTheme.listItem.separatorColor}`,\n          }}\n          nestedListStyle={\n            indentNestedItems ? undefined : styles.noIndentNestedList\n          }\n          leftIcon={error ? <WarningIcon /> : leftIcon}\n          displayReloadButton={!!error}\n          reloadButtonTooltip={`An error has occured in functions. Click to reload them.`}\n        />\n      );\n    }}\n  </ThemeConsumer>\n);\n\ntype ItemProps = {|\n  primaryText: string,\n  textEndAdornment?: React.Node,\n  editingName: boolean,\n  leftIcon?: ?React.Node,\n  onEdit: () => void,\n  onDelete: () => void,\n  addLabel: string,\n  onAdd: () => void,\n  onRename: string => void,\n  onEditName: () => void,\n  onCopy: () => void,\n  onCut: () => void,\n  onPaste: () => void,\n  onDuplicate: () => void,\n  canPaste: () => boolean,\n  canMoveUp: boolean,\n  onMoveUp: () => void,\n  canMoveDown: boolean,\n  onMoveDown: () => void,\n  buildExtraMenuTemplate?: (i18n: I18nType) => Array<MenuItemTemplate>,\n  style?: ?Object,\n|};\n\nexport const Item = ({\n  primaryText,\n  textEndAdornment,\n  editingName,\n  leftIcon,\n  onEdit,\n  onDelete,\n  addLabel,\n  onAdd,\n  onRename,\n  onEditName,\n  onCopy,\n  onCut,\n  onPaste,\n  onDuplicate,\n  canPaste,\n  canMoveUp,\n  onMoveUp,\n  canMoveDown,\n  onMoveDown,\n  buildExtraMenuTemplate,\n  style,\n}: ItemProps) => {\n  const textField = React.useRef<?TextField>(null);\n\n  React.useEffect(\n    () => {\n      if (editingName)\n        setTimeout(() => {\n          if (textField.current) textField.current.focus();\n        }, 100);\n    },\n    [editingName]\n  );\n\n  const label = editingName ? (\n    <TextField\n      id=\"rename-item-field\"\n      margin=\"none\"\n      ref={textField}\n      defaultValue={primaryText}\n      onBlur={e => onRename(e.currentTarget.value)}\n      onKeyPress={event => {\n        if (shouldValidate(event)) {\n          if (textField.current) textField.current.blur();\n        }\n      }}\n      fullWidth\n      style={styles.itemTextField}\n    />\n  ) : (\n    <div\n      style={{ display: 'inline-flex', width: '100%', alignItems: 'center' }}\n    >\n      <span style={textEllipsisStyle} title={primaryText}>\n        {primaryText}\n      </span>\n      {textEndAdornment && (\n        <span\n          style={{\n            marginLeft: 5,\n            display: 'flex',\n          }}\n        >\n          {textEndAdornment}\n        </span>\n      )}\n    </div>\n  );\n\n  return (\n    <ThemeConsumer>\n      {muiTheme => (\n        <I18n>\n          {({ i18n }) => (\n            <ListItem\n              style={{\n                borderBottom: `1px solid ${muiTheme.listItem.separatorColor}`,\n                ...style,\n              }}\n              primaryText={label}\n              leftIcon={leftIcon}\n              displayMenuButton\n              buildMenuTemplate={(i18n: I18nType) => [\n                {\n                  label: i18n._(t`Edit`),\n                  click: onEdit,\n                },\n                ...(buildExtraMenuTemplate ? buildExtraMenuTemplate(i18n) : []),\n                { type: 'separator' },\n                {\n                  label: i18n._(t`Rename`),\n                  click: onEditName,\n                },\n                {\n                  label: i18n._(t`Delete`),\n                  click: onDelete,\n                },\n                {\n                  label: i18n._(addLabel),\n                  visible: !!onAdd,\n                  click: onAdd,\n                },\n                { type: 'separator' },\n                {\n                  label: i18n._(t`Copy`),\n                  click: onCopy,\n                },\n                {\n                  label: i18n._(t`Cut`),\n                  click: onCut,\n                },\n                {\n                  label: i18n._(t`Paste`),\n                  enabled: canPaste(),\n                  click: onPaste,\n                },\n                {\n                  label: i18n._(t`Duplicate`),\n                  click: onDuplicate,\n                },\n                { type: 'separator' },\n                {\n                  label: i18n._(t`Move up`),\n                  enabled: canMoveUp,\n                  click: onMoveUp,\n                },\n                {\n                  label: i18n._(t`Move down`),\n                  enabled: canMoveDown,\n                  click: onMoveDown,\n                },\n              ]}\n              onClick={() => {\n                // It's essential to discard clicks when editing the name,\n                // to avoid weird opening of an editor (accompanied with a\n                // closing of the project manager) when clicking on the text\n                // field.\n                if (!editingName) onEdit();\n              }}\n            />\n          )}\n        </I18n>\n      )}\n    </ThemeConsumer>\n  );\n};\n\ntype EventFunctionExtensionItemProps = {|\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  onEdit: ({ [string]: ExtensionShortHeader }) => void,\n  onRename: string => void,\n  onEditName: () => void,\n  isEditingName: boolean,\n  onDelete: () => void,\n  onAdd: () => void,\n  onCopy: () => void,\n  onCut: () => void,\n  onPaste: () => void,\n  onDuplicate: () => void,\n  canPaste: () => boolean,\n  canMoveUp: boolean,\n  onMoveUp: () => void,\n  canMoveDown: boolean,\n  onMoveDown: () => void,\n|};\n\nexport const EventFunctionExtensionItem = ({\n  eventsFunctionsExtension,\n  onEdit,\n  onRename,\n  onEditName,\n  isEditingName,\n  onDelete,\n  onAdd,\n  onCopy,\n  onCut,\n  onPaste,\n  onDuplicate,\n  canPaste,\n  canMoveUp,\n  onMoveUp,\n  canMoveDown,\n  onMoveDown,\n}: EventFunctionExtensionItemProps) => {\n  const name = eventsFunctionsExtension.getName();\n  const iconUrl = eventsFunctionsExtension.getIconUrl();\n\n  const { extensionShortHeadersByName } = React.useContext(\n    ExtensionStoreContext\n  );\n\n  return (\n    <Item\n      leftIcon={\n        iconUrl ? (\n          <IconContainer\n            size={24}\n            alt={eventsFunctionsExtension.getFullName()}\n            src={iconUrl}\n          />\n        ) : null\n      }\n      primaryText={name}\n      editingName={isEditingName}\n      onEdit={() => onEdit(extensionShortHeadersByName)}\n      onDelete={onDelete}\n      addLabel={t`Add a New Extension`}\n      onAdd={onAdd}\n      onRename={onRename}\n      onEditName={onEditName}\n      onCopy={onCopy}\n      onCut={onCut}\n      onPaste={onPaste}\n      onDuplicate={onDuplicate}\n      canPaste={canPaste}\n      canMoveUp={canMoveUp}\n      onMoveUp={onMoveUp}\n      canMoveDown={canMoveDown}\n      onMoveDown={onMoveDown}\n    />\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { List, ListItem } from '../UI/List';\nimport SearchBar, {\n  useShouldAutofocusSearchbar,\n  type SearchBarInterface,\n} from '../UI/SearchBar';\nimport ListIcon from '../UI/ListIcon';\nimport { AddListItem, SearchListItem } from '../UI/ListCommonItem';\nimport Window from '../Utils/Window';\nimport VariablesEditorDialog from '../VariablesList/VariablesEditorDialog';\nimport ProjectPropertiesDialog from './ProjectPropertiesDialog';\nimport {\n  enumerateLayouts,\n  enumerateExternalEvents,\n  enumerateExternalLayouts,\n  enumerateEventsFunctionsExtensions,\n  filterProjectItemsList,\n} from './EnumerateProjectItems';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport Clipboard, { SafeExtractor } from '../Utils/Clipboard';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\nimport ExtensionsSearchDialog from '../AssetStore/ExtensionStore/ExtensionsSearchDialog';\nimport Flag from '@material-ui/icons/Flag';\nimport Close from '@material-ui/icons/Close';\nimport SettingsApplications from '@material-ui/icons/SettingsApplications';\nimport PhotoLibrary from '@material-ui/icons/PhotoLibrary';\nimport Settings from '@material-ui/icons/Settings';\nimport Save from '@material-ui/icons/Save';\nimport VariableTree from '../UI/CustomSvgIcons/VariableTree';\nimport ArtTrack from '@material-ui/icons/ArtTrack';\nimport AddToHomeScreen from '@material-ui/icons/AddToHomeScreen';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport ScenePropertiesDialog from '../SceneEditor/ScenePropertiesDialog';\nimport SceneVariablesDialog from '../SceneEditor/SceneVariablesDialog';\nimport { isExtensionNameTaken } from './EventFunctionExtensionNameVerifier';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\nimport ProjectManagerCommands from './ProjectManagerCommands';\nimport { type HotReloadPreviewButtonProps } from '../HotReload/HotReloadPreviewButton';\nimport { type ExtensionShortHeader } from '../Utils/GDevelopServices/Extension';\nimport EventsRootVariablesFinder from '../Utils/EventsRootVariablesFinder';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport InstalledExtensionDetails from './InstalledExtensionDetails';\nimport {\n  Item,\n  ProjectStructureItem,\n  EventFunctionExtensionItem,\n} from './ProjectManagerItems';\nimport { Tooltip } from '@material-ui/core';\n\nconst LAYOUT_CLIPBOARD_KIND = 'Layout';\nconst EXTERNAL_LAYOUT_CLIPBOARD_KIND = 'External layout';\nconst EXTERNAL_EVENTS_CLIPBOARD_KIND = 'External events';\nconst EVENTS_FUNCTIONS_EXTENSION_CLIPBOARD_KIND = 'Events Functions Extension';\n\nconst styles = {\n  container: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    overflowY: 'hidden',\n  },\n  list: {\n    flex: 1,\n    overflowY: 'scroll',\n    padding: 0,\n  },\n};\n\ntype Props = {|\n  project: gdProject,\n  onDeleteLayout: gdLayout => void,\n  onDeleteExternalEvents: gdExternalEvents => void,\n  onDeleteExternalLayout: gdExternalLayout => void,\n  onDeleteEventsFunctionsExtension: gdEventsFunctionsExtension => void,\n  onRenameLayout: (string, string) => void,\n  onRenameExternalEvents: (string, string) => void,\n  onRenameExternalLayout: (string, string) => void,\n  onRenameEventsFunctionsExtension: (string, string) => void,\n  onOpenLayout: string => void,\n  onOpenExternalEvents: string => void,\n  onOpenExternalLayout: string => void,\n  onOpenEventsFunctionsExtension: string => void,\n  onSaveProject: () => Promise<void>,\n  onSaveProjectAs: () => void,\n  onCloseProject: () => void,\n  onExportProject: () => void,\n  onOpenPreferences: () => void,\n  onOpenProfile: () => void,\n  onOpenGamesDashboard: () => void,\n  onOpenResources: () => void,\n  onOpenPlatformSpecificAssets: () => void,\n  onChangeSubscription: () => void,\n  eventsFunctionsExtensionsError: ?Error,\n  onReloadEventsFunctionsExtensions: () => void,\n  freezeUpdate: boolean,\n  unsavedChanges?: UnsavedChanges,\n  hotReloadPreviewButtonProps: HotReloadPreviewButtonProps,\n  onInstallExtension: ExtensionShortHeader => void,\n\n  // For resources:\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n|};\n\ntype State = {|\n  editedPropertiesLayout: ?gdLayout,\n  editedVariablesLayout: ?gdLayout,\n  renamedItemKind: ?string,\n  renamedItemName: string,\n  searchText: string,\n  projectPropertiesDialogOpen: boolean,\n  projectPropertiesDialogInitialTab: 'properties' | 'loading-screen',\n  projectVariablesEditorOpen: boolean,\n  extensionsSearchDialogOpen: boolean,\n  openedExtensionShortHeader: ?ExtensionShortHeader,\n  openedExtensionName: ?string,\n  isInstallingExtension: boolean,\n  layoutPropertiesDialogOpen: boolean,\n  layoutVariablesDialogOpen: boolean,\n|};\n\nexport default class ProjectManager extends React.Component<Props, State> {\n  _searchBar: ?SearchBarInterface;\n\n  state = {\n    editedPropertiesLayout: null,\n    editedVariablesLayout: null,\n    renamedItemKind: null,\n    renamedItemName: '',\n    searchText: '',\n    projectPropertiesDialogOpen: false,\n    projectPropertiesDialogInitialTab: 'properties',\n    projectVariablesEditorOpen: false,\n    extensionsSearchDialogOpen: false,\n    openedExtensionShortHeader: null,\n    openedExtensionName: null,\n    isInstallingExtension: false,\n    layoutPropertiesDialogOpen: false,\n    layoutVariablesDialogOpen: false,\n  };\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    if (\n      nextState.projectPropertiesDialogOpen !==\n        this.state.projectPropertiesDialogOpen ||\n      nextState.projectVariablesEditorOpen !==\n        this.state.projectVariablesEditorOpen ||\n      nextState.extensionsSearchDialogOpen !==\n        this.state.extensionsSearchDialogOpen ||\n      nextState.openedExtensionShortHeader !==\n        this.state.openedExtensionShortHeader\n    )\n      return true;\n\n    // Rendering the component is (super) costly (~20ms) as it iterates over\n    // every project layouts/external layouts/external events,\n    // so the prop freezeUpdate allow to ask the component to stop\n    // updating, for example when hidden.\n    return !nextProps.freezeUpdate;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    // Typical usage (don't forget to compare props):\n    if (!this.props.freezeUpdate && prevProps.freezeUpdate) {\n      if (useShouldAutofocusSearchbar() && this._searchBar)\n        this._searchBar.focus();\n    }\n  }\n\n  _openProjectProperties = () => {\n    this.setState({\n      projectPropertiesDialogOpen: true,\n      projectPropertiesDialogInitialTab: 'properties',\n    });\n  };\n\n  _openProjectLoadingScreen = () => {\n    this.setState({\n      projectPropertiesDialogOpen: true,\n      projectPropertiesDialogInitialTab: 'loading-screen',\n    });\n  };\n\n  _openProjectVariables = () => {\n    this.setState({\n      projectVariablesEditorOpen: true,\n    });\n  };\n\n  _openSearchExtensionDialog = () => {\n    this.setState({ extensionsSearchDialogOpen: true });\n  };\n\n  _onEditName = (kind: ?string, name: string) => {\n    this.setState({\n      renamedItemKind: kind,\n      renamedItemName: name,\n    });\n  };\n\n  _copyLayout = (layout: gdLayout) => {\n    Clipboard.set(LAYOUT_CLIPBOARD_KIND, {\n      layout: serializeToJSObject(layout),\n      name: layout.getName(),\n    });\n  };\n\n  _cutLayout = (layout: gdLayout) => {\n    this._copyLayout(layout);\n    this.props.onDeleteLayout(layout);\n  };\n\n  _pasteLayout = (index: number) => {\n    if (!Clipboard.has(LAYOUT_CLIPBOARD_KIND)) return;\n\n    const clipboardContent = Clipboard.get(LAYOUT_CLIPBOARD_KIND);\n    const copiedLayout = SafeExtractor.extractObjectProperty(\n      clipboardContent,\n      'layout'\n    );\n    const name = SafeExtractor.extractStringProperty(clipboardContent, 'name');\n    if (!name || !copiedLayout) return;\n\n    const { project } = this.props;\n\n    const newName = newNameGenerator(name, name =>\n      project.hasLayoutNamed(name)\n    );\n\n    const newLayout = project.insertNewLayout(newName, index);\n\n    unserializeFromJSObject(\n      newLayout,\n      copiedLayout,\n      'unserializeFrom',\n      project\n    );\n    newLayout.setName(newName); // Unserialization has overwritten the name.\n    newLayout.updateBehaviorsSharedData(project);\n\n    this._onProjectItemModified();\n  };\n\n  _duplicateLayout = (layout: gdLayout, index: number) => {\n    this._copyLayout(layout);\n    this._pasteLayout(index);\n  };\n\n  _addLayout = (index: number, i18n: I18nType) => {\n    const { project } = this.props;\n\n    const newName = newNameGenerator(i18n._(t`Untitled scene`), name =>\n      project.hasLayoutNamed(name)\n    );\n    const newLayout = project.insertNewLayout(newName, index + 1);\n\n    newLayout.setName(newName);\n    newLayout.updateBehaviorsSharedData(project);\n\n    this._onProjectItemModified();\n  };\n\n  _onOpenLayoutProperties = (layout: ?gdLayout) => {\n    this.setState({ editedPropertiesLayout: layout });\n  };\n\n  _onOpenLayoutVariables = (layout: ?gdLayout) => {\n    this.setState({ editedVariablesLayout: layout });\n  };\n\n  _addExternalEvents = (index: number, i18n: I18nType) => {\n    const { project } = this.props;\n\n    const newName = newNameGenerator(\n      i18n._(t`Untitled external events`),\n      name => project.hasExternalEventsNamed(name)\n    );\n    project.insertNewExternalEvents(newName, index + 1);\n    this._onProjectItemModified();\n  };\n\n  _addExternalLayout = (index: number, i18n: I18nType) => {\n    const { project } = this.props;\n\n    const newName = newNameGenerator(\n      i18n._(t`Untitled external layout`),\n      name => project.hasExternalLayoutNamed(name)\n    );\n    project.insertNewExternalLayout(newName, index + 1);\n    this._onProjectItemModified();\n  };\n\n  _addEventsFunctionsExtension = (index: number, i18n: I18nType) => {\n    const { project } = this.props;\n\n    const newName = newNameGenerator(i18n._(t`UntitledExtension`), name =>\n      isExtensionNameTaken(name, project)\n    );\n    project.insertNewEventsFunctionsExtension(newName, index + 1);\n    this._onProjectItemModified();\n  };\n\n  _moveUpLayout = (index: number) => {\n    const { project } = this.props;\n    if (index <= 0) return;\n\n    project.swapLayouts(index, index - 1);\n    this._onProjectItemModified();\n  };\n\n  _moveDownLayout = (index: number) => {\n    const { project } = this.props;\n    if (index >= project.getLayoutsCount() - 1) return;\n\n    project.swapLayouts(index, index + 1);\n    this._onProjectItemModified();\n  };\n\n  _copyExternalEvents = (externalEvents: gdExternalEvents) => {\n    Clipboard.set(EXTERNAL_EVENTS_CLIPBOARD_KIND, {\n      externalEvents: serializeToJSObject(externalEvents),\n      name: externalEvents.getName(),\n    });\n  };\n\n  _cutExternalEvents = (externalEvents: gdExternalEvents) => {\n    this._copyExternalEvents(externalEvents);\n    this.props.onDeleteExternalEvents(externalEvents);\n  };\n\n  _pasteExternalEvents = (index: number) => {\n    if (!Clipboard.has(EXTERNAL_EVENTS_CLIPBOARD_KIND)) return;\n\n    const clipboardContent = Clipboard.get(EXTERNAL_EVENTS_CLIPBOARD_KIND);\n    const copiedExternalEvents = SafeExtractor.extractObjectProperty(\n      clipboardContent,\n      'externalEvents'\n    );\n    const name = SafeExtractor.extractStringProperty(clipboardContent, 'name');\n    if (!name || !copiedExternalEvents) return;\n\n    const { project } = this.props;\n\n    const newName = newNameGenerator(name, name =>\n      project.hasExternalEventsNamed(name)\n    );\n\n    const newExternalEvents = project.insertNewExternalEvents(newName, index);\n\n    unserializeFromJSObject(\n      newExternalEvents,\n      copiedExternalEvents,\n      'unserializeFrom',\n      project\n    );\n    newExternalEvents.setName(newName); // Unserialization has overwritten the name.\n\n    this._onProjectItemModified();\n  };\n\n  _duplicateExternalEvents = (\n    externalEvents: gdExternalEvents,\n    index: number\n  ) => {\n    this._copyExternalEvents(externalEvents);\n    this._pasteExternalEvents(index);\n  };\n\n  _moveUpExternalEvents = (index: number) => {\n    const { project } = this.props;\n    if (index <= 0) return;\n\n    project.swapExternalEvents(index, index - 1);\n    this._onProjectItemModified();\n  };\n\n  _moveDownExternalEvents = (index: number) => {\n    const { project } = this.props;\n    if (index >= project.getExternalEventsCount() - 1) return;\n\n    project.swapExternalEvents(index, index + 1);\n    this._onProjectItemModified();\n  };\n\n  _copyExternalLayout = (externalLayout: gdExternalLayout) => {\n    Clipboard.set(EXTERNAL_LAYOUT_CLIPBOARD_KIND, {\n      externalLayout: serializeToJSObject(externalLayout),\n      name: externalLayout.getName(),\n    });\n  };\n\n  _cutExternalLayout = (externalLayout: gdExternalLayout) => {\n    this._copyExternalLayout(externalLayout);\n    this.props.onDeleteExternalLayout(externalLayout);\n  };\n\n  _pasteExternalLayout = (index: number) => {\n    if (!Clipboard.has(EXTERNAL_LAYOUT_CLIPBOARD_KIND)) return;\n\n    const clipboardContent = Clipboard.get(EXTERNAL_LAYOUT_CLIPBOARD_KIND);\n    const copiedExternalLayout = SafeExtractor.extractObjectProperty(\n      clipboardContent,\n      'externalLayout'\n    );\n    const name = SafeExtractor.extractStringProperty(clipboardContent, 'name');\n    if (!name || !copiedExternalLayout) return;\n\n    const { project } = this.props;\n\n    const newName = newNameGenerator(name, name =>\n      project.hasExternalLayoutNamed(name)\n    );\n\n    const newExternalLayout = project.insertNewExternalLayout(newName, index);\n\n    unserializeFromJSObject(newExternalLayout, copiedExternalLayout);\n    newExternalLayout.setName(newName); // Unserialization has overwritten the name.\n    this._onProjectItemModified();\n  };\n\n  _duplicateExternalLayout = (\n    externalLayout: gdExternalLayout,\n    index: number\n  ) => {\n    this._copyExternalLayout(externalLayout);\n    this._pasteExternalLayout(index);\n  };\n\n  _moveUpExternalLayout = (index: number) => {\n    const { project } = this.props;\n    if (index <= 0) return;\n\n    project.swapExternalLayouts(index, index - 1);\n    this._onProjectItemModified();\n  };\n\n  _moveDownExternalLayout = (index: number) => {\n    const { project } = this.props;\n    if (index >= project.getExternalLayoutsCount() - 1) return;\n\n    project.swapExternalLayouts(index, index + 1);\n    this._onProjectItemModified();\n  };\n\n  _copyEventsFunctionsExtension = (\n    eventsFunctionsExtension: gdEventsFunctionsExtension\n  ) => {\n    Clipboard.set(EVENTS_FUNCTIONS_EXTENSION_CLIPBOARD_KIND, {\n      eventsFunctionsExtension: serializeToJSObject(eventsFunctionsExtension),\n      name: eventsFunctionsExtension.getName(),\n    });\n  };\n\n  _cutEventsFunctionsExtension = (\n    eventsFunctionsExtension: gdEventsFunctionsExtension\n  ) => {\n    this._copyEventsFunctionsExtension(eventsFunctionsExtension);\n    this.props.onDeleteEventsFunctionsExtension(eventsFunctionsExtension);\n  };\n\n  _duplicateEventsFunctionsExtension = (\n    eventsFunctionsExtension: gdEventsFunctionsExtension,\n    index: number\n  ) => {\n    this._copyEventsFunctionsExtension(eventsFunctionsExtension);\n    this._pasteEventsFunctionsExtension(index);\n  };\n\n  _pasteEventsFunctionsExtension = (index: number) => {\n    if (!Clipboard.has(EVENTS_FUNCTIONS_EXTENSION_CLIPBOARD_KIND)) return;\n\n    const clipboardContent = Clipboard.get(\n      EVENTS_FUNCTIONS_EXTENSION_CLIPBOARD_KIND\n    );\n    const copiedEventsFunctionsExtension = SafeExtractor.extractObjectProperty(\n      clipboardContent,\n      'eventsFunctionsExtension'\n    );\n    const name = SafeExtractor.extractStringProperty(clipboardContent, 'name');\n    if (!name || !copiedEventsFunctionsExtension) return;\n\n    const { project } = this.props;\n\n    const newName = newNameGenerator(name, name =>\n      isExtensionNameTaken(name, project)\n    );\n\n    const newEventsFunctionsExtension = project.insertNewEventsFunctionsExtension(\n      newName,\n      index\n    );\n\n    unserializeFromJSObject(\n      newEventsFunctionsExtension,\n      copiedEventsFunctionsExtension,\n      'unserializeFrom',\n      project\n    );\n    newEventsFunctionsExtension.setName(newName); // Unserialization has overwritten the name.\n\n    this._onProjectItemModified();\n    this.props.onReloadEventsFunctionsExtensions();\n  };\n\n  _moveUpEventsFunctionsExtension = (index: number) => {\n    const { project } = this.props;\n    if (index <= 0) return;\n\n    project.swapEventsFunctionsExtensions(index, index - 1);\n    this._onProjectItemModified();\n  };\n\n  _moveDownEventsFunctionsExtension = (index: number) => {\n    const { project } = this.props;\n    if (index >= project.getEventsFunctionsExtensionsCount() - 1) return;\n\n    project.swapEventsFunctionsExtensions(index, index + 1);\n    this._onProjectItemModified();\n  };\n\n  _onEditEventsFunctionExtensionOrSeeDetails = (\n    extensionShortHeadersByName: { [string]: ExtensionShortHeader },\n    eventsFunctionsExtension: gdEventsFunctionsExtension,\n    name: string\n  ) => {\n    // If the extension is coming from the store, open its details.\n    // If that's not the case, or if it cannot be found in the store, edit it directly.\n    const originName = eventsFunctionsExtension.getOriginName();\n    if (originName !== 'gdevelop-extension-store') {\n      this.props.onOpenEventsFunctionsExtension(name);\n      return;\n    }\n    const originIdentifier = eventsFunctionsExtension.getOriginIdentifier();\n    const extensionShortHeader = extensionShortHeadersByName[originIdentifier];\n    if (!extensionShortHeader) {\n      console.warn(\n        `This extension was downloaded from the store but its reference ${originIdentifier} couldn't be found in the store. Opening the extension in the editor...`\n      );\n      this.props.onOpenEventsFunctionsExtension(name);\n      return;\n    }\n    this.setState({\n      openedExtensionShortHeader: extensionShortHeader,\n      openedExtensionName: name,\n    });\n  };\n\n  _renderMenu() {\n    // If there is already a main menu (as the native one made with\n    // Electron), don't show it in the Project Manager.\n    if (Window.hasMainMenu()) return null;\n\n    return (\n      <React.Fragment>\n        <ListItem\n          key=\"save\"\n          primaryText={<Trans>Save</Trans>}\n          leftIcon={<Save />}\n          onClick={() => this.props.onSaveProject()}\n        />\n        <ListItem\n          key=\"save-as\"\n          primaryText={<Trans>Save as...</Trans>}\n          leftIcon={<FileCopy />}\n          onClick={() => this.props.onSaveProjectAs()}\n        />\n        <ListItem\n          key=\"export\"\n          primaryText={<Trans>Export</Trans>}\n          leftIcon={<AddToHomeScreen />}\n          onClick={() => this.props.onExportProject()}\n        />\n        <ListItem\n          key=\"close\"\n          primaryText={<Trans>Close</Trans>}\n          leftIcon={<Close />}\n          onClick={() => this.props.onCloseProject()}\n        />\n        <ListItem\n          key=\"preferences\"\n          primaryText={<Trans>Preferences</Trans>}\n          leftIcon={<Settings />}\n          onClick={() => this.props.onOpenPreferences()}\n        />\n        <ListItem\n          key=\"profile\"\n          primaryText={<Trans>My profile</Trans>}\n          leftIcon={<AccountCircle />}\n          onClick={() => this.props.onOpenProfile()}\n        />\n        <ListItem\n          key=\"games-dashboard\"\n          primaryText={<Trans>Published Games Dashboard</Trans>}\n          leftIcon={<TimelineIcon />}\n          onClick={() => this.props.onOpenGamesDashboard()}\n        />\n      </React.Fragment>\n    );\n  }\n\n  _onSearchChange = (text: string) =>\n    this.setState({\n      searchText: text,\n    });\n\n  _onRequestSearch = () => {\n    /* Do nothing for now, but we could open the first result. */\n  };\n\n  _onProjectItemModified = () => {\n    this.forceUpdate();\n    if (this.props.unsavedChanges)\n      this.props.unsavedChanges.triggerUnsavedChanges();\n  };\n\n  _setProjectFirstLayout = (layoutName: string) => {\n    this.props.project.setFirstLayout(layoutName);\n    this.forceUpdate();\n  };\n\n  render() {\n    const {\n      project,\n      eventsFunctionsExtensionsError,\n      onReloadEventsFunctionsExtensions,\n      onInstallExtension,\n    } = this.props;\n    const {\n      renamedItemKind,\n      renamedItemName,\n      searchText,\n      openedExtensionShortHeader,\n      openedExtensionName,\n    } = this.state;\n\n    const forceOpen = searchText !== '' ? true : undefined;\n\n    const firstLayoutName = project.getFirstLayout();\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <div style={styles.container}>\n            <ProjectManagerCommands\n              project={this.props.project}\n              onOpenProjectProperties={this._openProjectProperties}\n              onOpenProjectLoadingScreen={this._openProjectLoadingScreen}\n              onOpenProjectVariables={this._openProjectVariables}\n              onOpenResourcesDialog={this.props.onOpenResources}\n              onOpenPlatformSpecificAssetsDialog={\n                this.props.onOpenPlatformSpecificAssets\n              }\n              onOpenSearchExtensionDialog={this._openSearchExtensionDialog}\n            />\n            <List style={styles.list}>\n              {this._renderMenu()}\n              <ProjectStructureItem\n                primaryText={<Trans>Game settings</Trans>}\n                leftIcon={\n                  <ListIcon\n                    iconSize={24}\n                    isGDevelopIcon\n                    src=\"res/ribbon_default/projectManager32.png\"\n                  />\n                }\n                initiallyOpen={false}\n                autoGenerateNestedIndicator={true}\n                indentNestedItems\n                renderNestedItems={() => [\n                  <ListItem\n                    key=\"properties\"\n                    primaryText={<Trans>Properties</Trans>}\n                    leftIcon={<SettingsApplications />}\n                    onClick={this._openProjectProperties}\n                  />,\n                  <ListItem\n                    key=\"global-variables\"\n                    primaryText={<Trans>Global variables</Trans>}\n                    leftIcon={<VariableTree />}\n                    onClick={this._openProjectVariables}\n                  />,\n                  <ListItem\n                    key=\"icons\"\n                    primaryText={<Trans>Icons and thumbnail</Trans>}\n                    leftIcon={<PhotoLibrary />}\n                    onClick={this.props.onOpenPlatformSpecificAssets}\n                  />,\n                  <ListItem\n                    key=\"resources\"\n                    primaryText={<Trans>Resources</Trans>}\n                    leftIcon={<ArtTrack />}\n                    onClick={this.props.onOpenResources}\n                  />,\n                ]}\n              />\n              <ProjectStructureItem\n                primaryText={<Trans>Scenes</Trans>}\n                leftIcon={\n                  <ListIcon\n                    iconSize={24}\n                    isGDevelopIcon\n                    src=\"res/ribbon_default/sceneadd32.png\"\n                  />\n                }\n                initiallyOpen={true}\n                open={forceOpen}\n                autoGenerateNestedIndicator={!forceOpen}\n                renderNestedItems={() =>\n                  filterProjectItemsList(enumerateLayouts(project), searchText)\n                    .map((layout: gdLayout, i: number) => {\n                      const name = layout.getName();\n                      return (\n                        <Item\n                          key={i}\n                          primaryText={name}\n                          textEndAdornment={\n                            name === firstLayoutName ? (\n                              <Tooltip\n                                title={i18n._(\n                                  t`This scene will be used as the start scene.`\n                                )}\n                              >\n                                <Flag color=\"disabled\" fontSize=\"small\" />\n                              </Tooltip>\n                            ) : (\n                              undefined\n                            )\n                          }\n                          editingName={\n                            renamedItemKind === 'layout' &&\n                            renamedItemName === name\n                          }\n                          onEdit={() => this.props.onOpenLayout(name)}\n                          onDelete={() => this.props.onDeleteLayout(layout)}\n                          addLabel={t`Add a New Scene`}\n                          onAdd={() => this._addLayout(i, i18n)}\n                          onRename={newName => {\n                            this.props.onRenameLayout(name, newName);\n                            this._onEditName(null, '');\n                          }}\n                          onEditName={() => this._onEditName('layout', name)}\n                          onCopy={() => this._copyLayout(layout)}\n                          onCut={() => this._cutLayout(layout)}\n                          onPaste={() => this._pasteLayout(i)}\n                          onDuplicate={() => this._duplicateLayout(layout, i)}\n                          canPaste={() => Clipboard.has(LAYOUT_CLIPBOARD_KIND)}\n                          canMoveUp={i !== 0}\n                          onMoveUp={() => this._moveUpLayout(i)}\n                          canMoveDown={i !== project.getLayoutsCount() - 1}\n                          onMoveDown={() => this._moveDownLayout(i)}\n                          buildExtraMenuTemplate={(i18n: I18nType) => [\n                            {\n                              label: i18n._(t`Edit Scene Properties`),\n                              enabled: true,\n                              click: () => this._onOpenLayoutProperties(layout),\n                            },\n                            {\n                              label: i18n._(t`Edit Scene Variables`),\n                              enabled: true,\n                              click: () => this._onOpenLayoutVariables(layout),\n                            },\n                            {\n                              label: i18n._(t`Set as start scene`),\n                              enabled: name !== firstLayoutName,\n                              click: () => this._setProjectFirstLayout(name),\n                            },\n                          ]}\n                        />\n                      );\n                    })\n                    .concat(\n                      <AddListItem\n                        key={'add-scene'}\n                        onClick={() =>\n                          this._addLayout(project.getLayoutsCount(), i18n)\n                        }\n                        primaryText={<Trans>Click to add a scene</Trans>}\n                      />\n                    )\n                }\n              />\n              <ProjectStructureItem\n                primaryText={<Trans>External events</Trans>}\n                leftIcon={\n                  <ListIcon\n                    iconSize={24}\n                    isGDevelopIcon\n                    src=\"res/ribbon_default/externalevents32.png\"\n                  />\n                }\n                initiallyOpen={false}\n                open={forceOpen}\n                autoGenerateNestedIndicator={!forceOpen}\n                renderNestedItems={() =>\n                  filterProjectItemsList(\n                    enumerateExternalEvents(project),\n                    searchText\n                  )\n                    .map((externalEvents, i) => {\n                      const name = externalEvents.getName();\n                      return (\n                        <Item\n                          key={i}\n                          primaryText={name}\n                          editingName={\n                            renamedItemKind === 'external-events' &&\n                            renamedItemName === name\n                          }\n                          onEdit={() => this.props.onOpenExternalEvents(name)}\n                          onDelete={() =>\n                            this.props.onDeleteExternalEvents(externalEvents)\n                          }\n                          addLabel={t`Add New External Events`}\n                          onAdd={() => this._addExternalEvents(i, i18n)}\n                          onRename={newName => {\n                            this.props.onRenameExternalEvents(name, newName);\n                            this._onEditName(null, '');\n                          }}\n                          onEditName={() =>\n                            this._onEditName('external-events', name)\n                          }\n                          onCopy={() =>\n                            this._copyExternalEvents(externalEvents)\n                          }\n                          onCut={() => this._cutExternalEvents(externalEvents)}\n                          onPaste={() => this._pasteExternalEvents(i)}\n                          onDuplicate={() =>\n                            this._duplicateExternalEvents(externalEvents, i)\n                          }\n                          canPaste={() =>\n                            Clipboard.has(EXTERNAL_EVENTS_CLIPBOARD_KIND)\n                          }\n                          canMoveUp={i !== 0}\n                          onMoveUp={() => this._moveUpExternalEvents(i)}\n                          canMoveDown={\n                            i !== project.getExternalEventsCount() - 1\n                          }\n                          onMoveDown={() => this._moveDownExternalEvents(i)}\n                        />\n                      );\n                    })\n                    .concat(\n                      <AddListItem\n                        key={'add-external-events'}\n                        primaryText={\n                          <Trans>Click to add external events</Trans>\n                        }\n                        onClick={() =>\n                          this._addExternalEvents(\n                            project.getExternalEventsCount(),\n                            i18n\n                          )\n                        }\n                      />\n                    )\n                }\n              />\n              <ProjectStructureItem\n                primaryText={<Trans>External layouts</Trans>}\n                leftIcon={\n                  <ListIcon\n                    iconSize={24}\n                    isGDevelopIcon\n                    src=\"res/ribbon_default/externallayout32.png\"\n                  />\n                }\n                initiallyOpen={false}\n                open={forceOpen}\n                autoGenerateNestedIndicator={!forceOpen}\n                renderNestedItems={() =>\n                  filterProjectItemsList(\n                    enumerateExternalLayouts(project),\n                    searchText\n                  )\n                    .map((externalLayout, i) => {\n                      const name = externalLayout.getName();\n                      return (\n                        <Item\n                          key={i}\n                          primaryText={name}\n                          editingName={\n                            renamedItemKind === 'external-layout' &&\n                            renamedItemName === name\n                          }\n                          onEdit={() => this.props.onOpenExternalLayout(name)}\n                          onDelete={() =>\n                            this.props.onDeleteExternalLayout(externalLayout)\n                          }\n                          addLabel={t`Add a New External Layout`}\n                          onAdd={() => this._addExternalLayout(i, i18n)}\n                          onRename={newName => {\n                            this.props.onRenameExternalLayout(name, newName);\n                            this._onEditName(null, '');\n                          }}\n                          onEditName={() =>\n                            this._onEditName('external-layout', name)\n                          }\n                          onCopy={() =>\n                            this._copyExternalLayout(externalLayout)\n                          }\n                          onCut={() => this._cutExternalLayout(externalLayout)}\n                          onPaste={() => this._pasteExternalLayout(i)}\n                          onDuplicate={() =>\n                            this._duplicateExternalLayout(externalLayout, i)\n                          }\n                          canPaste={() =>\n                            Clipboard.has(EXTERNAL_LAYOUT_CLIPBOARD_KIND)\n                          }\n                          canMoveUp={i !== 0}\n                          onMoveUp={() => this._moveUpExternalLayout(i)}\n                          canMoveDown={\n                            i !== project.getExternalLayoutsCount() - 1\n                          }\n                          onMoveDown={() => this._moveDownExternalLayout(i)}\n                        />\n                      );\n                    })\n                    .concat(\n                      <AddListItem\n                        key={'add-external-layout'}\n                        primaryText={\n                          <Trans>Click to add an external layout</Trans>\n                        }\n                        onClick={() =>\n                          this._addExternalLayout(\n                            project.getExternalLayoutsCount(),\n                            i18n\n                          )\n                        }\n                      />\n                    )\n                }\n              />\n              <ProjectStructureItem\n                primaryText={<Trans>Functions/Behaviors</Trans>}\n                error={eventsFunctionsExtensionsError}\n                onRefresh={onReloadEventsFunctionsExtensions}\n                leftIcon={\n                  <ListIcon\n                    iconSize={24}\n                    isGDevelopIcon\n                    src=\"res/ribbon_default/function32.png\"\n                  />\n                }\n                initiallyOpen={false}\n                open={forceOpen}\n                autoGenerateNestedIndicator={\n                  !forceOpen && !eventsFunctionsExtensionsError\n                }\n                renderNestedItems={() =>\n                  filterProjectItemsList(\n                    enumerateEventsFunctionsExtensions(project),\n                    searchText\n                  )\n                    .map((eventsFunctionsExtension, i) => {\n                      const name = eventsFunctionsExtension.getName();\n                      return (\n                        <EventFunctionExtensionItem\n                          key={i}\n                          eventsFunctionsExtension={eventsFunctionsExtension}\n                          isEditingName={\n                            renamedItemKind === 'events-functions-extension' &&\n                            renamedItemName === name\n                          }\n                          onEdit={extensionShortHeadersByName =>\n                            this._onEditEventsFunctionExtensionOrSeeDetails(\n                              extensionShortHeadersByName,\n                              eventsFunctionsExtension,\n                              name\n                            )\n                          }\n                          onDelete={() =>\n                            this.props.onDeleteEventsFunctionsExtension(\n                              eventsFunctionsExtension\n                            )\n                          }\n                          onAdd={() =>\n                            this._addEventsFunctionsExtension(i, i18n)\n                          }\n                          onRename={newName => {\n                            this.props.onRenameEventsFunctionsExtension(\n                              name,\n                              newName\n                            );\n                            this._onEditName(null, '');\n                          }}\n                          onEditName={() =>\n                            this._onEditName('events-functions-extension', name)\n                          }\n                          onCopy={() =>\n                            this._copyEventsFunctionsExtension(\n                              eventsFunctionsExtension\n                            )\n                          }\n                          onCut={() =>\n                            this._cutEventsFunctionsExtension(\n                              eventsFunctionsExtension\n                            )\n                          }\n                          onPaste={() => this._pasteEventsFunctionsExtension(i)}\n                          onDuplicate={() =>\n                            this._duplicateEventsFunctionsExtension(\n                              eventsFunctionsExtension,\n                              i\n                            )\n                          }\n                          canPaste={() =>\n                            Clipboard.has(\n                              EVENTS_FUNCTIONS_EXTENSION_CLIPBOARD_KIND\n                            )\n                          }\n                          canMoveUp={i !== 0}\n                          onMoveUp={() =>\n                            this._moveUpEventsFunctionsExtension(i)\n                          }\n                          canMoveDown={\n                            i !==\n                            project.getEventsFunctionsExtensionsCount() - 1\n                          }\n                          onMoveDown={() =>\n                            this._moveDownEventsFunctionsExtension(i)\n                          }\n                        />\n                      );\n                    })\n                    .concat(\n                      <AddListItem\n                        key={'add-events-functions-extension'}\n                        primaryText={\n                          <Trans>Click to add functions and behaviors</Trans>\n                        }\n                        onClick={() =>\n                          this._addEventsFunctionsExtension(\n                            project.getEventsFunctionsExtensionsCount(),\n                            i18n\n                          )\n                        }\n                      />\n                    )\n                    .concat(\n                      <SearchListItem\n                        key={'extensions-search'}\n                        primaryText={<Trans>Search for new extensions</Trans>}\n                        onClick={this._openSearchExtensionDialog}\n                      />\n                    )\n                }\n              />\n            </List>\n            <SearchBar\n              ref={searchBar => (this._searchBar = searchBar)}\n              value={searchText}\n              onRequestSearch={this._onRequestSearch}\n              onChange={this._onSearchChange}\n            />\n            {this.state.projectVariablesEditorOpen && (\n              <VariablesEditorDialog\n                title={<Trans>Global Variables</Trans>}\n                open\n                variablesContainer={project.getVariables()}\n                onCancel={() =>\n                  this.setState({ projectVariablesEditorOpen: false })\n                }\n                onApply={() => {\n                  if (this.props.unsavedChanges)\n                    this.props.unsavedChanges.triggerUnsavedChanges();\n                  this.setState({ projectVariablesEditorOpen: false });\n                }}\n                emptyPlaceholderTitle={\n                  <Trans>Add your first global variable</Trans>\n                }\n                emptyPlaceholderDescription={\n                  <Trans>\n                    These variables hold additional information on a project.\n                  </Trans>\n                }\n                helpPagePath={'/all-features/variables/global-variables'}\n                hotReloadPreviewButtonProps={\n                  this.props.hotReloadPreviewButtonProps\n                }\n                onComputeAllVariableNames={() =>\n                  EventsRootVariablesFinder.findAllGlobalVariables(\n                    project.getCurrentPlatform(),\n                    project\n                  )\n                }\n              />\n            )}\n            {this.state.projectPropertiesDialogOpen && (\n              <ProjectPropertiesDialog\n                open\n                initialTab={this.state.projectPropertiesDialogInitialTab}\n                project={project}\n                onClose={() =>\n                  this.setState({ projectPropertiesDialogOpen: false })\n                }\n                onApply={() => {\n                  if (this.props.unsavedChanges)\n                    this.props.unsavedChanges.triggerUnsavedChanges();\n                  this.setState({ projectPropertiesDialogOpen: false });\n                }}\n                onChangeSubscription={this.props.onChangeSubscription}\n                resourceSources={this.props.resourceSources}\n                onChooseResource={this.props.onChooseResource}\n                resourceExternalEditors={this.props.resourceExternalEditors}\n                hotReloadPreviewButtonProps={\n                  this.props.hotReloadPreviewButtonProps\n                }\n              />\n            )}\n            {!!this.state.editedPropertiesLayout && (\n              <ScenePropertiesDialog\n                open\n                layout={this.state.editedPropertiesLayout}\n                project={this.props.project}\n                onApply={() => {\n                  if (this.props.unsavedChanges)\n                    this.props.unsavedChanges.triggerUnsavedChanges();\n                  this._onOpenLayoutProperties(null);\n                }}\n                onClose={() => this._onOpenLayoutProperties(null)}\n                onEditVariables={() => {\n                  this._onOpenLayoutVariables(\n                    this.state.editedPropertiesLayout\n                  );\n                  this._onOpenLayoutProperties(null);\n                }}\n              />\n            )}\n            {!!this.state.editedVariablesLayout && (\n              <SceneVariablesDialog\n                open\n                project={project}\n                layout={this.state.editedVariablesLayout}\n                onClose={() => this._onOpenLayoutVariables(null)}\n                onApply={() => {\n                  if (this.props.unsavedChanges)\n                    this.props.unsavedChanges.triggerUnsavedChanges();\n                  this._onOpenLayoutVariables(null);\n                }}\n                hotReloadPreviewButtonProps={\n                  this.props.hotReloadPreviewButtonProps\n                }\n              />\n            )}\n            {this.state.extensionsSearchDialogOpen && (\n              <ExtensionsSearchDialog\n                project={project}\n                onClose={() =>\n                  this.setState({ extensionsSearchDialogOpen: false })\n                }\n                onInstallExtension={onInstallExtension}\n              />\n            )}\n            {openedExtensionShortHeader && openedExtensionName && (\n              <InstalledExtensionDetails\n                project={project}\n                onClose={() =>\n                  this.setState({\n                    openedExtensionShortHeader: null,\n                    openedExtensionName: null,\n                  })\n                }\n                onOpenEventsFunctionsExtension={\n                  this.props.onOpenEventsFunctionsExtension\n                }\n                extensionShortHeader={openedExtensionShortHeader}\n                extensionName={openedExtensionName}\n                onInstallExtension={onInstallExtension}\n              />\n            )}\n          </div>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport FlatButton from '../UI/FlatButton';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport AlertMessage from '../UI/AlertMessage';\nimport { type AuthenticatedUser } from './AuthenticatedUserContext';\nimport { useIsMounted } from '../Utils/UseIsMounted';\nimport ProfileDetails from './ProfileDetails';\nimport { markBadgesAsSeen } from '../Utils/GDevelopServices/Badge';\nimport { useTimeout } from '../Utils/UseTimeout';\n\ntype Props = {|\n  onEditProfile: () => void,\n  onChangeEmail: () => void,\n  authenticatedUser: AuthenticatedUser,\n|};\n\nconst AuthenticatedUserProfileDetails = ({\n  onEditProfile,\n  onChangeEmail,\n  authenticatedUser,\n}: Props) => {\n  const profile = authenticatedUser.profile;\n  const firebaseUser = authenticatedUser.firebaseUser;\n  const isMounted = useIsMounted();\n  const [emailSent, setEmailSent] = React.useState<boolean>(false);\n  const sendEmail = React.useCallback(\n    () => {\n      authenticatedUser.onSendEmailVerification();\n      setEmailSent(true);\n      setTimeout(() => {\n        if (!isMounted.current) return;\n        setEmailSent(false);\n      }, 3000);\n    },\n    [authenticatedUser, isMounted]\n  );\n\n  useTimeout(\n    React.useCallback(() => markBadgesAsSeen(authenticatedUser), [\n      authenticatedUser,\n    ]),\n    5000\n  );\n\n  return firebaseUser && profile ? (\n    <ColumnStackLayout noMargin>\n      {firebaseUser && !firebaseUser.emailVerified && (\n        <AlertMessage\n          kind=\"info\"\n          renderRightButton={() => (\n            <FlatButton\n              label={\n                emailSent ? (\n                  <Trans>Email sent!</Trans>\n                ) : (\n                  <Trans>Send it again</Trans>\n                )\n              }\n              onClick={sendEmail}\n              disabled={emailSent}\n              primary\n            />\n          )}\n        >\n          <Trans>\n            It looks like your email is not verified. Click on the link received\n            by email to verify your account. Didn't receive it?\n          </Trans>\n        </AlertMessage>\n      )}\n      <ProfileDetails\n        // The firebase user is the source of truth for the emails.\n        profile={\n          authenticatedUser.profile\n            ? { ...authenticatedUser.profile, email: firebaseUser.email }\n            : null\n        }\n        isAuthenticatedUserProfile\n        onChangeEmail={onChangeEmail}\n        onEditProfile={onEditProfile}\n        badges={authenticatedUser.badges}\n      />\n    </ColumnStackLayout>\n  ) : (\n    <PlaceholderLoader />\n  );\n};\n\nexport default AuthenticatedUserProfileDetails;\n","// @flow\nimport { useEffect } from 'react';\n\nexport const useTimeout = (callback: any, delay: number) => {\n  useEffect(\n    () => {\n      const id = setTimeout(callback, delay);\n      return () => clearTimeout(id);\n    },\n    [callback, delay]\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { Column, Line } from '../UI/Grid';\nimport { type Subscription } from '../Utils/GDevelopServices/Usage';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Trans } from '@lingui/macro';\nimport Text from '../UI/Text';\n\ntype Props = {\n  subscription: ?Subscription,\n  onChangeSubscription: Function,\n};\n\nexport default ({ subscription, onChangeSubscription }: Props) =>\n  subscription ? (\n    <Column>\n      <Line alignItems=\"center\">\n        <Text size=\"title\">My online services subscriptions</Text>\n      </Line>\n      {subscription.planId ? (\n        <>\n          <Line>\n            <Text>\n              <Trans>\n                You are subscribed to {subscription.planId}. Congratulations!\n                You have access to more online services, including building your\n                game for Android, Windows, macOS and Linux in one click!\n              </Trans>\n            </Text>\n          </Line>\n          <Line justifyContent=\"flex-end\">\n            <RaisedButton\n              label={<Trans>Upgrade/change</Trans>}\n              primary\n              onClick={onChangeSubscription}\n            />\n          </Line>\n        </>\n      ) : (\n        <>\n          <Line>\n            <Text>\n              <Trans>\n                If you don't have a subscription, consider getting one now.\n                Accounts allow you to access all of the online services. With\n                just one click, you can build your game for Android, Windows,\n                macOS and Linux!\n              </Trans>\n            </Text>\n          </Line>\n          <Line justifyContent=\"flex-end\">\n            <RaisedButton\n              label={<Trans>Choose a subscription</Trans>}\n              primary\n              onClick={onChangeSubscription}\n            />\n          </Line>\n        </>\n      )}\n    </Column>\n  ) : (\n    <PlaceholderLoader />\n  );\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { AccordionHeader, AccordionBody, Accordion } from '../UI/Accordion';\nimport { IconContainer } from '../UI/IconContainer';\nimport { Column, Line } from '../UI/Grid';\nimport {\n  type ExtensionShortHeader,\n  getUserExtensionShortHeaders,\n} from '../Utils/GDevelopServices/Extension';\nimport {\n  type ExampleShortHeader,\n  getUserExampleShortHeaders,\n} from '../Utils/GDevelopServices/Example';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport Text from '../UI/Text';\nimport BackgroundText from '../UI/BackgroundText';\nimport EmptyMessage from '../UI/EmptyMessage';\n\ntype ContributionLineProps = {|\n  fullName: string,\n  previewIconUrl?: string,\n  shortDescription?: string,\n|};\n\nexport const ContributionLine = ({\n  fullName,\n  previewIconUrl,\n  shortDescription,\n}: ContributionLineProps) => (\n  <Line>\n    {previewIconUrl && (\n      <IconContainer alt={fullName} src={previewIconUrl} size={64} />\n    )}\n    <Column expand>\n      <Text noMargin>{fullName}</Text>\n      <Text noMargin size=\"body2\">\n        {shortDescription}\n      </Text>\n    </Column>\n  </Line>\n);\n\ntype ExamplesAccordionProps = {|\n  examples: Array<ExampleShortHeader>,\n  exampleError: ?Error,\n|};\n\nexport const ExamplesAccordion = ({\n  examples,\n  exampleError,\n}: ExamplesAccordionProps) => {\n  if (exampleError)\n    return (\n      <Column>\n        <Line alignItems=\"center\">\n          <Text>\n            <Trans>Error retrieving the examples</Trans>\n          </Text>\n        </Line>\n      </Column>\n    );\n\n  return (\n    <Accordion>\n      <AccordionHeader>\n        <Text displayInlineAsSpan>\n          <Trans>Examples ({examples.length})</Trans>\n        </Text>\n      </AccordionHeader>\n      <AccordionBody disableGutters>\n        {examples.length === 0 ? (\n          <EmptyMessage>\n            <Trans>You haven't contributed any examples</Trans>\n          </EmptyMessage>\n        ) : (\n          <Column>\n            {examples.map(example => (\n              <ContributionLine\n                key={example.name}\n                shortDescription={example.shortDescription}\n                fullName={example.name}\n                previewIconUrl={\n                  example.previewImageUrls ? example.previewImageUrls[0] : ''\n                }\n              />\n            ))}\n          </Column>\n        )}\n      </AccordionBody>\n    </Accordion>\n  );\n};\n\ntype ExtensionsAccordionProps = {|\n  extensions: Array<ExtensionShortHeader>,\n  extensionError: ?Error,\n|};\n\nexport const ExtensionsAccordion = ({\n  extensions,\n  extensionError,\n}: ExtensionsAccordionProps) => {\n  if (extensionError)\n    return (\n      <Column>\n        <Line alignItems=\"center\">\n          <Text>\n            <Trans>Error retrieving the extensions</Trans>\n          </Text>\n        </Line>\n      </Column>\n    );\n\n  return (\n    <Accordion>\n      <AccordionHeader>\n        <Text displayInlineAsSpan>\n          <Trans>Extensions ({extensions.length})</Trans>\n        </Text>\n      </AccordionHeader>\n      <AccordionBody disableGutters>\n        {extensions.length === 0 ? (\n          <EmptyMessage>\n            <Trans>You haven't contributed any extensions</Trans>\n          </EmptyMessage>\n        ) : (\n          <Column>\n            {extensions.map(extension => (\n              <ContributionLine\n                key={extension.name}\n                shortDescription={extension.shortDescription}\n                fullName={extension.fullName}\n                previewIconUrl={extension.previewIconUrl}\n              />\n            ))}\n          </Column>\n        )}\n      </AccordionBody>\n    </Accordion>\n  );\n};\n\n// Change examples to assets when the feature is developed.\ntype AssetsAccordionProps = {|\n  examples: ?Array<ExampleShortHeader>,\n|};\n\nconst AssetsAccordion = ({ examples }: AssetsAccordionProps) => (\n  <Accordion disabled>\n    <AccordionHeader>\n      <Text displayInlineAsSpan>\n        <Trans>Assets (coming soon!)</Trans>\n      </Text>\n    </AccordionHeader>\n  </Accordion>\n);\n\ntype Props = {|\n  userId: string,\n|};\n\nexport default ({ userId }: Props) => {\n  const [\n    extensions,\n    setExtensions,\n  ] = React.useState<?Array<ExtensionShortHeader>>(null);\n  const [examples, setExamples] = React.useState<?Array<ExampleShortHeader>>(\n    null\n  );\n  const [extensionError, setExtensionError] = React.useState<?Error>(null);\n  const [exampleError, setExampleError] = React.useState<?Error>(null);\n\n  const fetchUserExtensions = React.useCallback(\n    () => {\n      (async () => {\n        if (!userId) return;\n        try {\n          const extensions = await getUserExtensionShortHeaders(userId);\n          setExtensions(extensions);\n        } catch (error) {\n          console.error('Error while loading extensions:', error);\n          setExtensionError(error);\n        }\n      })();\n    },\n    [userId]\n  );\n\n  React.useEffect(\n    () => {\n      fetchUserExtensions();\n    },\n    [fetchUserExtensions]\n  );\n\n  const fetchUserExamples = React.useCallback(\n    () => {\n      (async () => {\n        if (!userId) return;\n        try {\n          const examples = await getUserExampleShortHeaders(userId);\n          setExamples(examples);\n        } catch (error) {\n          console.error('Error while loading examples:', error);\n          setExampleError(error);\n        }\n      })();\n    },\n    [userId]\n  );\n\n  React.useEffect(\n    () => {\n      fetchUserExamples();\n    },\n    [fetchUserExamples]\n  );\n\n  return (\n    <>\n      <Column>\n        <Line alignItems=\"center\">\n          <Text size=\"title\">\n            <Trans>Contributions</Trans>\n          </Text>\n        </Line>\n      </Column>\n      {examples && extensions ? (\n        <>\n          <ExtensionsAccordion\n            extensions={extensions}\n            extensionError={extensionError}\n          />\n          <ExamplesAccordion examples={examples} exampleError={exampleError} />\n          <AssetsAccordion examples={examples} />\n          <Column>\n            <BackgroundText>\n              <Trans>\n                Missing some contributions? If you are the author, create a Pull\n                Request on the corresponding GitHub repository after adding your\n                username in the authors of the example or the extension - or\n                directly ask the original author to add your username.\n              </Trans>\n            </BackgroundText>\n          </Column>\n        </>\n      ) : (\n        <PlaceholderLoader />\n      )}\n    </>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { Card, CardActions, CardHeader, Chip } from '@material-ui/core';\nimport * as React from 'react';\nimport { Column, Line, Spacer } from '../UI/Grid';\nimport RaisedButton from '../UI/RaisedButton';\nimport { getGameUrl, type Game } from '../Utils/GDevelopServices/Game';\nimport { ResponsiveLineStackLayout } from '../UI/Layout';\nimport Window from '../Utils/Window';\nimport { GameThumbnail } from './GameThumbnail';\n\ntype Props = {|\n  game: Game,\n  isCurrentGame: boolean,\n  onOpenGameManager: () => void,\n|};\n\nexport const GameCard = ({ game, isCurrentGame, onOpenGameManager }: Props) => {\n  const openGameUrl = () => {\n    const url = getGameUrl(game);\n    if (!url) return;\n    Window.openExternalURL(url);\n  };\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Card key={game.id}>\n          <ResponsiveLineStackLayout>\n            <GameThumbnail\n              gameName={game.gameName}\n              thumbnailUrl={game.thumbnailUrl}\n            />\n            <Column expand>\n              <CardHeader\n                title={game.gameName}\n                subheader={\n                  <Line alignItems=\"center\" noMargin>\n                    <Trans>Created on {i18n.date(game.createdAt * 1000)}</Trans>\n                    {isCurrentGame && (\n                      <>\n                        <Spacer />\n                        <Chip\n                          size=\"small\"\n                          label={<Trans>Currently edited</Trans>}\n                          color=\"primary\"\n                        />\n                      </>\n                    )}\n                    {game.publicWebBuildId && (\n                      <>\n                        <Spacer />\n                        <Chip\n                          size=\"small\"\n                          label={\n                            game.discoverable ? (\n                              <Trans>Discoverable on Liluo.io</Trans>\n                            ) : (\n                              <Trans>Published on Liluo.io</Trans>\n                            )\n                          }\n                        />\n                      </>\n                    )}\n                  </Line>\n                }\n              />\n              <CardActions>\n                <ResponsiveLineStackLayout\n                  expand\n                  noMargin\n                  justifyContent=\"flex-end\"\n                >\n                  {game.publicWebBuildId && (\n                    <RaisedButton\n                      label={<Trans>Open in browser</Trans>}\n                      onClick={openGameUrl}\n                    />\n                  )}\n                  <RaisedButton\n                    label={<Trans>Manage game</Trans>}\n                    onClick={onOpenGameManager}\n                    primary\n                  />\n                </ResponsiveLineStackLayout>\n              </CardActions>\n            </Column>\n          </ResponsiveLineStackLayout>\n        </Card>\n      )}\n    </I18n>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport AuthenticatedUserContext from '../Profile/AuthenticatedUserContext';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport PlaceholderError from '../UI/PlaceholderError';\nimport { type Game, getGames } from '../Utils/GDevelopServices/Game';\nimport { GameCard } from './GameCard';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport { GameRegistration } from './GameRegistration';\nimport { GameDetailsDialog, type GamesDetailsTab } from './GameDetailsDialog';\n\ntype Props = {|\n  project: ?gdProject,\n|};\n\nexport const GamesList = (props: Props) => {\n  const [error, setError] = React.useState<?Error>(null);\n  const [games, setGames] = React.useState<?Array<Game>>(null);\n  const {\n    authenticated,\n    firebaseUser,\n    getAuthorizationHeader,\n  } = React.useContext(AuthenticatedUserContext);\n  const [openedGame, setOpenedGame] = React.useState<?Game>(null);\n  const [\n    openedGameInitialTab,\n    setOpenedGameInitialTab,\n  ] = React.useState<GamesDetailsTab>('details');\n\n  const loadGames = React.useCallback(\n    async () => {\n      if (!authenticated || !firebaseUser) return;\n\n      try {\n        setError(null);\n        const games = await getGames(getAuthorizationHeader, firebaseUser.uid);\n        setGames(games);\n      } catch (error) {\n        console.error('Error while loading user games.', error);\n        setError(error);\n      }\n    },\n    [authenticated, firebaseUser, getAuthorizationHeader]\n  );\n\n  React.useEffect(\n    () => {\n      loadGames();\n    },\n    [loadGames]\n  );\n\n  if (!authenticated) {\n    return null;\n  }\n\n  if (!games && error) {\n    return (\n      <PlaceholderError\n        onRetry={() => {\n          loadGames();\n        }}\n      >\n        <Trans>\n          Can't load the games. Verify your internet connection or retry later.\n        </Trans>\n      </PlaceholderError>\n    );\n  }\n\n  if (!games) {\n    return <PlaceholderLoader />;\n  }\n\n  const projectUuid = props.project ? props.project.getProjectUuid() : null;\n  const thisGame = games.find(game => !!projectUuid && game.id === projectUuid);\n  const displayedGames = [\n    thisGame,\n    ...games.filter(game => game !== thisGame),\n  ].filter(Boolean);\n\n  return (\n    <ColumnStackLayout noMargin>\n      <GameRegistration\n        project={props.project}\n        hideIfRegistered\n        hideLoader\n        onGameRegistered={() => {\n          loadGames();\n        }}\n      />\n      {displayedGames.map(game => (\n        <GameCard\n          key={game.id}\n          isCurrentGame={!!projectUuid && game.id === projectUuid}\n          game={game}\n          onOpenGameManager={() => {\n            setOpenedGameInitialTab('details');\n            setOpenedGame(game);\n          }}\n        />\n      ))}\n      {openedGame && (\n        <GameDetailsDialog\n          game={openedGame}\n          project={\n            !!projectUuid && openedGame.id === projectUuid\n              ? props.project\n              : null\n          }\n          initialTab={openedGameInitialTab}\n          onClose={() => {\n            setOpenedGame(null);\n          }}\n          onGameUpdated={updatedGame => {\n            setGames(\n              games.map(game => (game === openedGame ? updatedGame : game))\n            );\n            setOpenedGame(updatedGame);\n          }}\n          onGameDeleted={() => {\n            setOpenedGame(null);\n            loadGames();\n          }}\n        />\n      )}\n    </ColumnStackLayout>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport Dialog from '../UI/Dialog';\nimport { Column, Line } from '../UI/Grid';\nimport CreateProfile from './CreateProfile';\nimport AuthenticatedUserProfileDetails from './AuthenticatedUserProfileDetails';\nimport HelpButton from '../UI/HelpButton';\nimport SubscriptionDetails from './SubscriptionDetails';\nimport ContributionsDetails from './ContributionsDetails';\nimport AuthenticatedUserContext from './AuthenticatedUserContext';\nimport { GamesList } from '../GameDashboard/GamesList';\nimport { ColumnStackLayout } from '../UI/Layout';\n\ntype Props = {|\n  currentProject: ?gdProject,\n  open: boolean,\n  onClose: () => void,\n  onChangeSubscription: () => void,\n  initialTab: 'profile' | 'games-dashboard',\n|};\n\nconst ProfileDialog = ({\n  currentProject,\n  open,\n  onClose,\n  onChangeSubscription,\n  initialTab,\n}: Props) => {\n  const [currentTab, setCurrentTab] = React.useState<string>(initialTab);\n  const authenticatedUser = React.useContext(AuthenticatedUserContext);\n\n  const _onChangeTab = React.useCallback(\n    (newTab: string) => {\n      setCurrentTab(newTab);\n    },\n    [setCurrentTab]\n  );\n\n  React.useEffect(\n    () => {\n      if (open) authenticatedUser.onRefreshUserProfile();\n    },\n    // We don't want to fetch again when authenticatedUser changes,\n    // just the first time this page opens.\n    [authenticatedUser.onRefreshUserProfile, open] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  return (\n    <Dialog\n      actions={[\n        <FlatButton\n          label={<Trans>Close</Trans>}\n          key=\"close\"\n          primary={false}\n          onClick={onClose}\n        />,\n      ]}\n      secondaryActions={[\n        <HelpButton\n          key=\"help\"\n          helpPagePath={\n            currentTab === 'games-dashboard'\n              ? '/interface/games-dashboard'\n              : '/interface/profile'\n          }\n        />,\n        authenticatedUser.authenticated && authenticatedUser.profile && (\n          <FlatButton\n            label={<Trans>Logout</Trans>}\n            key=\"logout\"\n            onClick={authenticatedUser.onLogout}\n          />\n        ),\n      ]}\n      onRequestClose={onClose}\n      cannotBeDismissed={false}\n      open={open}\n      noMargin\n      fullHeight\n      noTitleMargin\n      title={\n        <Tabs value={currentTab} onChange={_onChangeTab}>\n          <Tab label={<Trans>My Profile</Trans>} value=\"profile\" />\n          <Tab label={<Trans>Games Dashboard</Trans>} value=\"games-dashboard\" />\n        </Tabs>\n      }\n    >\n      {currentTab === 'profile' &&\n        (authenticatedUser.authenticated && authenticatedUser.profile ? (\n          <Column noMargin>\n            <AuthenticatedUserProfileDetails\n              authenticatedUser={authenticatedUser}\n              onEditProfile={authenticatedUser.onEdit}\n              onChangeEmail={authenticatedUser.onChangeEmail}\n            />\n            <SubscriptionDetails\n              subscription={authenticatedUser.subscription}\n              onChangeSubscription={onChangeSubscription}\n            />\n            <ContributionsDetails userId={authenticatedUser.profile.id} />\n          </Column>\n        ) : (\n          <Column>\n            <CreateProfile\n              onLogin={authenticatedUser.onLogin}\n              onCreateAccount={authenticatedUser.onCreateAccount}\n            />\n          </Column>\n        ))}\n      {currentTab === 'games-dashboard' &&\n        (authenticatedUser.authenticated ? (\n          <Line>\n            <ColumnStackLayout expand noOverflowParent>\n              <GamesList project={currentProject} />\n            </ColumnStackLayout>\n          </Line>\n        ) : (\n          <Column>\n            <CreateProfile\n              onLogin={authenticatedUser.onLogin}\n              onCreateAccount={authenticatedUser.onCreateAccount}\n              message={\n                <Trans>\n                  Create an account to register your games and to get access to\n                  metrics collected anonymously, like the number of daily\n                  players and retention of the players after a few days.\n                </Trans>\n              }\n            />\n          </Column>\n        ))}\n    </Dialog>\n  );\n};\n\nexport default ProfileDialog;\n","// @flow\nimport * as React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/styles';\nimport GridList from '@material-ui/core/GridList';\nimport { GridListTile } from '@material-ui/core';\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos';\nimport ListOutlined from '@material-ui/icons/ListOutlined';\nimport { Skeleton } from '@material-ui/lab';\n\nimport Window from '../Utils/Window';\nimport Text from './Text';\nimport { Line, Spacer } from './Grid';\nimport { useResponsiveWindowWidth } from './Reponsive/ResponsiveWindowMeasurer';\nimport FlatButton from './FlatButton';\nimport { shouldValidate } from './KeyboardShortcuts/InteractionKeys';\nimport AlertMessage from './AlertMessage';\n\ntype Thumbnail = {\n  id: string,\n  title: string,\n  thumbnailUrl: string,\n  +link?: string,\n  +onClick?: () => void,\n};\n\ntype SkeletonThumbnail = {\n  ...Thumbnail,\n  skeleton: boolean,\n};\n\ntype Props<ThumbnailType> = {|\n  title: React.Node,\n  items: ?Array<ThumbnailType>,\n  additionalAction?: React.Node,\n  onBrowseAllClick?: () => void,\n  browseAllLink?: string,\n  browseAllLabel: React.Node,\n  displayItemTitles?: boolean,\n  error?: React.Node,\n|};\n\nconst referenceSizesByWindowSize = {\n  imageHeight: {\n    small: 120,\n    medium: 130,\n    large: 140,\n  },\n  arrowWidth: {\n    small: 24,\n    medium: 30,\n    large: 36,\n  },\n};\n\nconst cellSpacing = 12;\nconst titleHeight = 24;\nconst spacerSize = 4;\nconst focusItemBorderWidth = 2;\nconst rightArrowMargin = cellSpacing / 2; // Necessary because MUI adds a margin to GridList corresponding to cell spacing\nconst skeletonNumber = 4;\nconst randomNumbers = Array(skeletonNumber)\n  .fill(0)\n  .map(e => Math.random());\n\nconst styles = {\n  itemTitle: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    overflowWrap: 'break-word',\n    whiteSpace: 'nowrap',\n  },\n  gridList: { position: 'relative' },\n  image: {\n    display: 'block',\n    objectFit: 'cover',\n  },\n  error: { display: 'flex', justifyContent: 'center', alignItems: 'center' },\n  itemTitleContainer: { height: titleHeight },\n  arrowContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 32,\n  },\n};\n\nconst useStylesForGridList = makeStyles({\n  root: {\n    overflowX: 'scroll',\n    overflowY: 'hidden',\n    flexWrap: 'nowrap',\n    scrollbarWidth: 'none' /* For Firefox */,\n    '-ms-overflow-style': 'none' /* For Internet Explorer and Edge */,\n    '&::-webkit-scrollbar': {\n      height: 0 /* For Chrome, Safari, and Opera */,\n    },\n  },\n});\n\nconst useStylesForGridListItem = makeStyles(theme =>\n  createStyles({\n    root: {\n      width: 'unset !important',\n      '&:focus': {\n        border: `${focusItemBorderWidth}px solid ${theme.palette.primary.main}`,\n        outline: 'none',\n      },\n      '&:focus-visible': { outline: 'unset' },\n    },\n    tile: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n  })\n);\n\nconst useStylesForLeftArrow = makeStyles({\n  arrow: { '& > path': { transform: 'translate(5px, 0px)' } }, // Translate path inside SVG since MUI icon is not centered\n});\n\nconst Carousel = <ThumbnailType: Thumbnail>({\n  title,\n  items,\n  additionalAction,\n  browseAllLink,\n  onBrowseAllClick,\n  browseAllLabel,\n  error,\n  displayItemTitles = true,\n}: Props<ThumbnailType>) => {\n  const [\n    shouldDisplayLeftArrow,\n    setShouldDisplayLeftArrow,\n  ] = React.useState<boolean>(false);\n  const classesForGridList = useStylesForGridList();\n  const classesForGridListItem = useStylesForGridListItem();\n  const classesForLeftArrow = useStylesForLeftArrow();\n  const scrollView = React.useRef<?HTMLUListElement>(null);\n  const [hoveredElement, setHoveredElement] = React.useState<?HTMLElement>(\n    null\n  );\n  const areItemsSet = items && items.length > 0;\n  const itemsToDisplay =\n    items && items.length > 0\n      ? items\n      : Array(skeletonNumber)\n          .fill({\n            skeleton: true,\n            title: '',\n            thumbnail: '',\n          })\n          .map((item, index) => ({ ...item, id: `skeleton${index}` }));\n\n  const windowSize = useResponsiveWindowWidth();\n  const imageHeight = referenceSizesByWindowSize.imageHeight[windowSize];\n  const arrowWidth = referenceSizesByWindowSize.arrowWidth[windowSize];\n  const cellWidth = (16 / 9) * imageHeight;\n  const widthUnit = cellWidth + cellSpacing;\n\n  const cellHeight =\n    imageHeight +\n    (displayItemTitles ? titleHeight + spacerSize : 2 * focusItemBorderWidth); // Take focus border into account to make sure it is not cut (box-sizing: content-box not working)\n\n  const renderImage = React.useCallback(\n    (item: ThumbnailType | SkeletonThumbnail): React.Node => (\n      <img\n        src={item.thumbnailUrl}\n        style={{\n          ...styles.image,\n          height: imageHeight,\n          minHeight: imageHeight,\n          width: cellWidth,\n        }}\n        alt={item.title}\n        title={item.title}\n      />\n    ),\n    [cellWidth, imageHeight]\n  );\n\n  const openLinkCallback = (link: string): (() => void) => (): void => {\n    Window.openExternalURL(link);\n  };\n\n  const renderThumbnail = React.useCallback(\n    (item: ThumbnailType | SkeletonThumbnail): ?React.Node => {\n      if (!item.skeleton && !item.link && !item.thumbnailUrl) return null;\n      if (item.thumbnailUrl || item.link) {\n        return renderImage(item);\n      }\n      if (item.skeleton) {\n        return (\n          <Skeleton variant=\"rect\" height={imageHeight} width={cellWidth} />\n        );\n      }\n    },\n    [renderImage, cellWidth, imageHeight]\n  );\n\n  const renderItemTitle = React.useCallback(\n    (item: ThumbnailType | SkeletonThumbnail, index: number): ?React.Node => {\n      if (!displayItemTitles) return null;\n      return (\n        <>\n          <Spacer />\n          {item.title ? (\n            <div style={{ ...styles.itemTitleContainer, width: cellWidth }}>\n              <Text noMargin style={styles.itemTitle}>\n                {item.title}\n              </Text>\n            </div>\n          ) : (\n            <Skeleton\n              variant=\"rect\"\n              height={titleHeight}\n              width={(cellWidth / 3) * (1 + 2 * randomNumbers[index])} // Make rectangles of different lengths so that the UI feels more \"alive\".\n            />\n          )}\n        </>\n      );\n    },\n    [cellWidth, displayItemTitles]\n  );\n\n  const roundScroll = React.useCallback(\n    (value: number): number => {\n      return Math.round(value / widthUnit) * widthUnit;\n    },\n    [widthUnit]\n  );\n\n  const getVisibleThumbnailsCount = React.useCallback(\n    (element: HTMLElement): number =>\n      Math.max(Math.floor(element.offsetWidth / widthUnit), 1),\n    [widthUnit]\n  );\n\n  const computeScroll = React.useCallback(\n    (\n      direction: 'left' | 'right',\n      scrollViewElement: HTMLUListElement\n    ): number => {\n      const visibleThumbnailsCount = getVisibleThumbnailsCount(\n        scrollViewElement\n      );\n      const scale = visibleThumbnailsCount * widthUnit;\n\n      const currentScroll = scrollViewElement.scrollLeft;\n      const currentFirstVisibleItemIndex = Math.round(\n        currentScroll / widthUnit\n      );\n\n      if (\n        direction === 'right' &&\n        currentFirstVisibleItemIndex >\n          itemsToDisplay.length - visibleThumbnailsCount - 1\n      )\n        return 0;\n      return roundScroll(\n        scrollViewElement.scrollLeft + scale * (direction === 'left' ? -1 : 1)\n      );\n    },\n    [widthUnit, itemsToDisplay, roundScroll, getVisibleThumbnailsCount]\n  );\n\n  const onClickArrow = React.useCallback(\n    (direction: 'left' | 'right') => (): void => {\n      const scrollViewElement = scrollView.current;\n      if (!scrollViewElement) return;\n      const newScrollPosition = computeScroll(direction, scrollViewElement);\n\n      scrollViewElement.scrollTo({\n        left: newScrollPosition,\n        behavior: 'smooth',\n      });\n    },\n    [computeScroll]\n  );\n\n  const handleScroll = React.useCallback(\n    (): void => {\n      const scrollViewElement = scrollView.current;\n      if (!scrollViewElement) return;\n\n      if (!shouldDisplayLeftArrow)\n        setShouldDisplayLeftArrow(scrollViewElement.scrollLeft !== 0);\n    },\n    [shouldDisplayLeftArrow]\n  );\n\n  const handleScrollEnd = React.useCallback(\n    (): void => {\n      const scrollViewElement = scrollView.current;\n      if (!scrollViewElement) return;\n\n      scrollViewElement.scrollTo({\n        left: roundScroll(scrollViewElement.scrollLeft),\n        behavior: 'smooth',\n      });\n    },\n    [roundScroll]\n  );\n\n  const onFocusItem = React.useCallback(\n    (event: SyntheticFocusEvent<HTMLLIElement>, index: number): void => {\n      // Clicked element receives focus before click event is triggered.\n      // If a scroll occurs before onmouseup event and the element is scrolled out\n      // of the cursor, the click of the user is logically but wrongly ignored.\n      if (event.currentTarget !== hoveredElement) {\n        const element = event.currentTarget;\n        const parent = element.offsetParent;\n        if (!parent || !(parent instanceof HTMLElement)) return;\n\n        const visibleThumbnailsCount = getVisibleThumbnailsCount(parent);\n\n        // Browsers handle differently a focus on an out-of-sight element.\n        // To ensure the behavior is the same across all browsers, we compute\n        // the scroll value to reach to make the tab navigation pleasant.\n        const elementBoundingRect = element.getBoundingClientRect();\n        const parentBoundingRect = parent.getBoundingClientRect();\n        const isHiddenLeft =\n          Math.round(elementBoundingRect.left - parentBoundingRect.left) < 0;\n        const isHiddenRight =\n          Math.round(elementBoundingRect.right - parentBoundingRect.right) >= 0;\n        if (isHiddenLeft)\n          parent.scroll({\n            left: element.offsetLeft,\n          });\n        else if (isHiddenRight)\n          parent.scroll({\n            left: widthUnit * (index - visibleThumbnailsCount + 1),\n          });\n      }\n    },\n    [getVisibleThumbnailsCount, hoveredElement, widthUnit]\n  );\n\n  React.useEffect(\n    () => {\n      const scrollViewElement = scrollView.current;\n      if (!scrollViewElement) return;\n\n      // Add event listeners on component mount. There is no need to\n      // remove them with a cleanup function because scrollview element\n      // does not change and they will be destroyed when the element is\n      // removed from the DOM.\n      scrollViewElement.addEventListener('scroll', handleScroll);\n      scrollViewElement.addEventListener('touchend', handleScrollEnd);\n      scrollViewElement.addEventListener('touchleave', handleScrollEnd);\n    },\n    [handleScroll, handleScrollEnd]\n  );\n\n  return (\n    <Line noMargin>\n      <div\n        style={{\n          ...styles.arrowContainer,\n          width: arrowWidth,\n        }}\n        onClick={onClickArrow('left')}\n      >\n        {areItemsSet && shouldDisplayLeftArrow && (\n          <ArrowBackIos className={classesForLeftArrow.arrow} />\n        )}\n      </div>\n      <div\n        style={{\n          width: `calc(100% - ${2 * arrowWidth}px - ${rightArrowMargin}px)`,\n        }}\n      >\n        <Line justifyContent=\"space-between\" alignItems=\"center\">\n          <Text size=\"bold-title\">{title}</Text>\n          <Line>\n            {additionalAction && (\n              <>\n                {additionalAction}\n                <Spacer />\n              </>\n            )}\n            <FlatButton\n              onClick={\n                onBrowseAllClick ||\n                (browseAllLink ? openLinkCallback(browseAllLink) : () => {})\n              }\n              label={browseAllLabel}\n              icon={<ListOutlined />}\n            />\n          </Line>\n        </Line>\n        {error ? (\n          <div style={{ ...styles.error, height: cellHeight }}>\n            <AlertMessage kind=\"warning\">{error}</AlertMessage>\n          </div>\n        ) : (\n          <GridList\n            classes={classesForGridList}\n            cols={itemsToDisplay.length}\n            cellHeight={cellHeight}\n            spacing={cellSpacing}\n            style={styles.gridList}\n            ref={scrollView}\n          >\n            {itemsToDisplay.map((item, index) => (\n              <GridListTile\n                classes={classesForGridListItem}\n                key={item.id}\n                tabIndex={0}\n                onFocus={event => onFocusItem(event, index)}\n                onMouseEnter={event => setHoveredElement(event.currentTarget)}\n                onMouseLeave={() => setHoveredElement(null)}\n                onKeyPress={(\n                  event: SyntheticKeyboardEvent<HTMLLIElement>\n                ): void => {\n                  if (shouldValidate(event)) {\n                    if (item.link) openLinkCallback(item.link)();\n                    if (item.onClick) item.onClick();\n                  }\n                }}\n                onClick={\n                  item.link\n                    ? openLinkCallback(item.link)\n                    : item.onClick\n                    ? item.onClick\n                    : null\n                }\n              >\n                {renderThumbnail(item)}\n                {renderItemTitle(item, index)}\n              </GridListTile>\n            ))}\n          </GridList>\n        )}\n      </div>\n      {areItemsSet && (\n        <div\n          style={{\n            ...styles.arrowContainer,\n            width: arrowWidth,\n            marginLeft: rightArrowMargin,\n          }}\n          onClick={onClickArrow('right')}\n        >\n          <ArrowForwardIos />\n        </div>\n      )}\n    </Line>\n  );\n};\n\nexport default Carousel;\n","// @flow\nimport * as React from 'react';\nimport { Paper } from '@material-ui/core';\n\nconst styles = {\n  scrollContainer: {\n    flex: 1,\n    display: 'flex',\n    overflowY: 'scroll',\n  },\n};\n\ntype Props = {|\n  children: React.Node,\n|};\n\nconst ScrollBackground = ({ children }: Props) => (\n  <Paper\n    style={{\n      ...styles.scrollContainer,\n    }}\n    square\n  >\n    {children}\n  </Paper>\n);\n\nexport default ScrollBackground;\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport Text from '../UI/Text';\nimport { type ShowcasedGame } from '../Utils/GDevelopServices/Game';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport TagChips from '../UI/TagChips';\nimport { MarkdownText } from '../UI/MarkdownText';\nimport { Column, Spacer } from '../UI/Grid';\nimport { CorsAwareImage } from '../UI/CorsAwareImage';\n\nimport ShowcasedGameButton from './ShowcasedGameButtons';\nimport ShowcasedGameTitle from './ShowcasedGameTitle';\n\nconst styles = {\n  image: { width: '100%', maxHeight: '300px', objectFit: 'cover' },\n};\n\nconst ShowcasedGameDialog = ({\n  open,\n  onClose,\n  showcasedGame,\n}: {|\n  open: boolean,\n  onClose: () => void,\n  showcasedGame: ShowcasedGame,\n|}): React.Node => {\n  return (\n    <Dialog\n      maxWidth=\"xs\"\n      open={open}\n      actions={[\n        <FlatButton\n          label={<Trans>Close</Trans>}\n          key=\"close\"\n          primary={false}\n          onClick={onClose}\n        />,\n      ]}\n    >\n      <Column noMargin expand>\n        <CorsAwareImage\n          style={styles.image}\n          src={showcasedGame.thumbnailUrl}\n          alt={showcasedGame.title}\n        />\n        <ShowcasedGameTitle showcasedGame={showcasedGame} forceColumn />\n        {showcasedGame.genres.length ? (\n          <TagChips tags={showcasedGame.genres} />\n        ) : null}\n        <Text size=\"body2\" displayInlineAsSpan>\n          <MarkdownText source={showcasedGame.description} allowParagraphs />\n        </Text>\n        <Spacer />\n        <ShowcasedGameButton showcasedGame={showcasedGame} forceColumn />\n      </Column>\n    </Dialog>\n  );\n};\n\nexport default ShowcasedGameDialog;\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport { makeStyles } from '@material-ui/core';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport Avatar from '@material-ui/core/Avatar';\nimport { type Profile } from '../../Utils/GDevelopServices/Authentication';\nimport { getGravatarUrl } from '../GravatarUrl';\nimport DotBadge from '../DotBadge';\n\ntype Props = {|\n  profile: ?Profile,\n  onClick: () => void,\n  displayNotificationBadge: boolean,\n|};\n\nconst useStyles = makeStyles({\n  root: { flexDirection: 'column' },\n  anchorOriginTopRightCircle: {\n    top: 5,\n    right: 5,\n  },\n});\n\nconst UserChip = ({ profile, onClick, displayNotificationBadge }: Props) => {\n  const classes = useStyles();\n  return (\n    <DotBadge\n      overlap=\"circle\"\n      invisible={!displayNotificationBadge}\n      classes={classes}\n    >\n      <Chip\n        variant=\"outlined\"\n        avatar={\n          profile ? (\n            <Avatar\n              src={getGravatarUrl(profile.email || '', { size: 30 })}\n              sx={{ width: 30, height: 30 }}\n            />\n          ) : (\n            <FaceIcon />\n          )\n        }\n        label={\n          profile ? (\n            profile.username || profile.email\n          ) : (\n            <span>\n              <Trans>Click to connect</Trans>\n            </span>\n          )\n        }\n        onClick={onClick}\n      />\n    </DotBadge>\n  );\n};\n\nexport default UserChip;\n","// @flow\n\nimport { type AuthenticatedUser } from '../Profile/AuthenticatedUserContext';\n\nexport const hasPendingNotifications = (\n  authenticatedUser: AuthenticatedUser\n): boolean => {\n  if (!authenticatedUser.authenticated) return false;\n\n  const { badges } = authenticatedUser;\n  if (badges && badges.length > 0) {\n    return badges.some(badge => !badge.seen);\n  }\n\n  return false;\n};\n","// @flow\nimport * as React from 'react';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { Trans, t } from '@lingui/macro';\nimport Language from '@material-ui/icons/Language';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport HelpIcon from '@material-ui/icons/Help';\nimport AddCircleOutline from '@material-ui/icons/AddCircleOutline';\n\nimport FlatButton from '../../../UI/FlatButton';\nimport IconButton from '../../../UI/IconButton';\nimport { Line, Spacer } from '../../../UI/Grid';\nimport RaisedButton from '../../../UI/RaisedButton';\nimport Carousel from '../../../UI/Carousel';\nimport { ResponsiveLineStackLayout } from '../../../UI/Layout';\nimport Window from '../../../Utils/Window';\nimport { TutorialContext } from '../../../Tutorial/TutorialContext';\n\nimport { type RenderEditorContainerPropsWithRef } from '../BaseEditor';\nimport ScrollBackground from './ScrollBackground';\nimport { GamesShowcaseContext } from '../../../GamesShowcase/GamesShowcaseContext';\nimport { type ShowcasedGame } from '../../../Utils/GDevelopServices/Game';\nimport ShowcasedGameDialog from '../../../GamesShowcase/ShowcasedGameDialog';\nimport { type ExampleShortHeader } from '../../../Utils/GDevelopServices/Example';\nimport { type Tutorial } from '../../../Utils/GDevelopServices/Tutorial';\nimport { ExampleStoreContext } from '../../../AssetStore/ExampleStore/ExampleStoreContext';\nimport UserChip from '../../../UI/User/UserChip';\nimport AuthenticatedUserContext from '../../../Profile/AuthenticatedUserContext';\nimport { useResponsiveWindowWidth } from '../../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport { ExampleDialog } from '../../../AssetStore/ExampleStore/ExampleDialog';\nimport ProjectPreCreationDialog from '../../../ProjectCreation/ProjectPreCreationDialog';\nimport {\n  type OnCreateFromExampleShortHeaderFunction,\n  type OnCreateBlankFunction,\n  type OnOpenProjectAfterCreationFunction,\n  type ProjectCreationSettings,\n} from '../../../ProjectCreation/CreateProjectDialog';\nimport RaisedButtonWithSplitMenu from '../../../UI/RaisedButtonWithSplitMenu';\nimport PreferencesContext from '../../Preferences/PreferencesContext';\nimport { type FileMetadataAndStorageProviderName } from '../../../ProjectsStorage';\nimport { sendTutorialOpened } from '../../../Utils/Analytics/EventSender';\nimport { hasPendingNotifications } from '../../../Utils/Notification';\nimport optionalRequire from '../../../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n    maxWidth: 1200,\n    marginTop: 10,\n    marginBottom: 20,\n    padding: 0,\n    alignSelf: 'center',\n    width: '100%',\n  },\n};\n\ntype Props = {|\n  project: ?gdProject,\n\n  isActive: boolean,\n  projectItemName: ?string,\n  project: ?gdProject,\n  setToolbar: (?React.Node) => void,\n\n  // Project opening\n  canOpen: boolean,\n  onOpen: () => void,\n  onOpenRecentFile: (file: FileMetadataAndStorageProviderName) => void,\n  onOpenExamples: () => void,\n  onOpenProjectManager: () => void,\n  onCloseProject: () => Promise<void>,\n\n  // Other dialogs opening:\n  onOpenTutorials: () => void,\n  onOpenGamesShowcase: () => void,\n  onOpenHelpFinder: () => void,\n  onOpenLanguageDialog: () => void,\n  onOpenProfile: () => void,\n\n  // Project creation\n  onCreateFromExampleShortHeader: OnCreateFromExampleShortHeaderFunction,\n  onCreateBlank: OnCreateBlankFunction,\n  onOpenProjectAfterCreation: OnOpenProjectAfterCreationFunction,\n|};\n\ntype HomePageEditorInterface = {|\n  getProject: () => void,\n  updateToolbar: () => void,\n  forceUpdateEditor: () => void,\n|};\n\nconst prepareTutorials = (tutorials: Array<Tutorial>) =>\n  tutorials.slice(0, 16).map(tutorial => {\n    const { link, ...tutorialWithoutLink } = tutorial;\n    return {\n      ...tutorialWithoutLink,\n      onClick: () => {\n        sendTutorialOpened(tutorial.id);\n        Window.openExternalURL(link);\n      },\n    };\n  });\n\nconst betweenCarouselSpacerCount = 6;\n\nconst renderBetweenCarouselSpace = (offset: number = 0) =>\n  Array(betweenCarouselSpacerCount)\n    .fill(0)\n    .map((e, index) => <Spacer key={`spacer${index + offset}`} />);\n\nexport const HomePage = React.memo<Props>(\n  React.forwardRef<Props, HomePageEditorInterface>(\n    (\n      {\n        project,\n        canOpen,\n        onOpen,\n        onOpenRecentFile,\n        onCreateFromExampleShortHeader,\n        onCreateBlank,\n        onOpenProjectAfterCreation,\n        onOpenExamples,\n        onOpenProjectManager,\n        onCloseProject,\n        onOpenTutorials,\n        onOpenGamesShowcase,\n        onOpenHelpFinder,\n        onOpenLanguageDialog,\n        onOpenProfile,\n        setToolbar,\n      }: Props,\n      ref\n    ) => {\n      const getProject = () => {\n        return undefined;\n      };\n\n      const updateToolbar = () => {\n        if (setToolbar) setToolbar(null);\n      };\n\n      const forceUpdateEditor = () => {\n        // No updates to be done\n      };\n\n      React.useImperativeHandle(ref, () => ({\n        getProject,\n        updateToolbar,\n        forceUpdateEditor,\n      }));\n\n      const windowWidth = useResponsiveWindowWidth();\n      const authenticatedUser = React.useContext(AuthenticatedUserContext);\n      const { getRecentProjectFiles } = React.useContext(PreferencesContext);\n      const {\n        tutorials,\n        fetchTutorials,\n        error: tutorialLoadingError,\n      } = React.useContext(TutorialContext);\n      const {\n        allShowcasedGames: showcasedGames,\n        fetchShowcasedGamesAndFilters,\n        error: showcaseLoadingError,\n      } = React.useContext(GamesShowcaseContext);\n      const {\n        allExamples: examples,\n        fetchExamplesAndFilters,\n        error: exampleLoadingError,\n      } = React.useContext(ExampleStoreContext);\n\n      React.useEffect(\n        () => {\n          fetchShowcasedGamesAndFilters();\n          fetchExamplesAndFilters();\n          fetchTutorials();\n        },\n        [\n          fetchExamplesAndFilters,\n          fetchShowcasedGamesAndFilters,\n          fetchTutorials,\n          getRecentProjectFiles,\n        ]\n      );\n\n      const [\n        preCreationDialogOpen,\n        setPreCreationDialogOpen,\n      ] = React.useState<boolean>(false);\n      const [isOpening, setIsOpening] = React.useState<boolean>(false);\n      const [\n        selectedShowcasedGame,\n        setSelectedShowcasedGame,\n      ] = React.useState<?ShowcasedGame>(null);\n      const [\n        selectedExample,\n        setSelectedExample,\n      ] = React.useState<?ExampleShortHeader>(null);\n\n      const buildRecentProjectFilesMenuTemplate = React.useCallback(\n        (i18n: I18nType) => {\n          const recentFiles = getRecentProjectFiles();\n          if (!recentFiles.length) {\n            return [\n              {\n                label: i18n._(t`No project opened recently`),\n                disabled: true,\n              },\n            ];\n          }\n\n          return recentFiles.map(file => ({\n            label: file.fileMetadata.fileIdentifier,\n            click: () => onOpenRecentFile(file),\n          }));\n        },\n        [getRecentProjectFiles, onOpenRecentFile]\n      );\n\n      const prepareExamples = React.useCallback(\n        (examples: Array<ExampleShortHeader>) =>\n          examples\n            .filter(\n              example =>\n                example.previewImageUrls.length &&\n                example.tags.includes('Starter')\n            )\n            .slice(0, 16)\n            .map(example => ({\n              id: example.id,\n              title: example.name,\n              thumbnailUrl:\n                example.previewImageUrls.find(url =>\n                  url.endsWith('preview.png')\n                ) || example.previewImageUrls[0],\n              onClick: () => setSelectedExample(example),\n            })),\n        []\n      );\n\n      const prepareShowcasedGames = React.useCallback(\n        (games: Array<ShowcasedGame>) =>\n          games.slice(0, 16).map(game => ({\n            id: game.title,\n            title: game.title,\n            thumbnailUrl: game.thumbnailUrl,\n            onClick: () => setSelectedShowcasedGame(game),\n          })),\n        []\n      );\n\n      const createProject = async (\n        i18n: I18nType,\n        settings: ProjectCreationSettings\n      ) => {\n        setIsOpening(true);\n\n        try {\n          let projectMetadata;\n\n          if (selectedExample) {\n            projectMetadata = await onCreateFromExampleShortHeader({\n              i18n,\n              exampleShortHeader: selectedExample,\n              settings,\n            });\n          } else {\n            projectMetadata = await onCreateBlank({\n              i18n,\n              settings,\n            });\n          }\n\n          if (!projectMetadata) return;\n\n          setPreCreationDialogOpen(false);\n          setSelectedExample(null);\n          onOpenProjectAfterCreation({ ...projectMetadata });\n        } finally {\n          setIsOpening(false);\n        }\n      };\n\n      return (\n        <I18n>\n          {({ i18n }) => (\n            <>\n              <ScrollBackground>\n                <div style={styles.container}>\n                  <div style={styles.content}>\n                    <div\n                      style={{\n                        margin: `0px ${windowWidth === 'small' ? 15 : 35}px`,\n                      }}\n                    >\n                      <ResponsiveLineStackLayout justifyContent=\"space-between\">\n                        <UserChip\n                          profile={authenticatedUser.profile}\n                          onClick={onOpenProfile}\n                          displayNotificationBadge={hasPendingNotifications(\n                            authenticatedUser\n                          )}\n                        />\n                        <ResponsiveLineStackLayout\n                          justifyContent=\"flex-end\"\n                          noColumnMargin\n                        >\n                          {!project && (\n                            <RaisedButton\n                              primary\n                              label={<Trans>Create a blank project</Trans>}\n                              onClick={() => {\n                                setPreCreationDialogOpen(true);\n                              }}\n                              icon={<AddCircleOutline />}\n                              id=\"home-create-blank-project-button\"\n                            />\n                          )}\n                          {!project && canOpen && (\n                            <RaisedButtonWithSplitMenu\n                              label={<Trans>Open a project</Trans>}\n                              onClick={onOpen}\n                              buildMenuTemplate={\n                                buildRecentProjectFilesMenuTemplate\n                              }\n                            />\n                          )}\n                          {!!project && (\n                            <>\n                              <RaisedButton\n                                label={<Trans>Open Project Manager</Trans>}\n                                onClick={onOpenProjectManager}\n                                primary\n                              />\n                              <Spacer />\n                              <FlatButton\n                                label={<Trans>Close project</Trans>}\n                                onClick={() => {\n                                  onCloseProject();\n                                }}\n                                id=\"home-close-project-button\"\n                              />\n                            </>\n                          )}\n                        </ResponsiveLineStackLayout>\n                      </ResponsiveLineStackLayout>\n                    </div>\n                    <Carousel\n                      title={<Trans>Start from an example</Trans>}\n                      items={examples ? prepareExamples(examples) : null}\n                      displayItemTitles\n                      onBrowseAllClick={onOpenExamples}\n                      browseAllLabel={<Trans>More examples</Trans>}\n                      error={\n                        exampleLoadingError && (\n                          <>\n                            <Trans>\n                              An error ocurred while loading examples.\n                            </Trans>{' '}\n                            <Trans>\n                              Please check your internet connection or try again\n                              later.\n                            </Trans>\n                          </>\n                        )\n                      }\n                    />\n                    {renderBetweenCarouselSpace()}\n                    <Carousel\n                      title={<Trans>Learn game making</Trans>}\n                      items={tutorials ? prepareTutorials(tutorials) : null}\n                      displayItemTitles={false}\n                      onBrowseAllClick={onOpenTutorials}\n                      browseAllLabel={<Trans>All tutorials</Trans>}\n                      error={\n                        tutorialLoadingError && (\n                          <>\n                            <Trans>\n                              An error ocurred while loading tutorials.\n                            </Trans>{' '}\n                            <Trans>\n                              Please check your internet connection or try again\n                              later.\n                            </Trans>\n                          </>\n                        )\n                      }\n                    />\n                    {renderBetweenCarouselSpace(betweenCarouselSpacerCount)}\n                    <Carousel\n                      title={<Trans>Games made by the community</Trans>}\n                      items={\n                        showcasedGames\n                          ? prepareShowcasedGames(showcasedGames)\n                          : null\n                      }\n                      displayItemTitles\n                      additionalAction={\n                        <RaisedButton\n                          label={<Trans>Play on Liluo.io</Trans>}\n                          onClick={() =>\n                            Window.openExternalURL('https://liluo.io')\n                          }\n                        />\n                      }\n                      onBrowseAllClick={onOpenGamesShowcase}\n                      browseAllLabel={<Trans>Browse all</Trans>}\n                      error={\n                        showcaseLoadingError && (\n                          <>\n                            <Trans>\n                              An error ocurred while loading showcased games.\n                            </Trans>{' '}\n                            <Trans>\n                              Please check your internet connection or try again\n                              later.\n                            </Trans>\n                          </>\n                        )\n                      }\n                    />\n                  </div>\n                  <Line noMargin>\n                    <ResponsiveLineStackLayout\n                      alignItems=\"center\"\n                      justifyContent=\"space-between\"\n                      expand\n                    >\n                      <ResponsiveLineStackLayout\n                        noMargin\n                        justifyContent=\"center\"\n                      >\n                        <FlatButton\n                          icon={<ForumIcon />}\n                          label={<Trans>Community Forums</Trans>}\n                          onClick={() =>\n                            Window.openExternalURL(\n                              'https://forum.gdevelop-app.com'\n                            )\n                          }\n                        />\n                        <FlatButton\n                          icon={<HelpIcon />}\n                          label={<Trans>Help and documentation</Trans>}\n                          onClick={onOpenHelpFinder}\n                        />\n                        {!electron && (\n                          <RaisedButton\n                            label={\n                              <Trans>Download the full desktop version</Trans>\n                            }\n                            onClick={() =>\n                              Window.openExternalURL(\n                                'https://gdevelop.io/download'\n                              )\n                            }\n                          />\n                        )}\n                      </ResponsiveLineStackLayout>\n                      <Line\n                        noMargin\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n                      >\n                        <IconButton\n                          className=\"icon-youtube\"\n                          onClick={() =>\n                            Window.openExternalURL(\n                              'https://www.youtube.com/c/GDevelopApp'\n                            )\n                          }\n                          tooltip={t`Tutorials on YouTube`}\n                        />\n                        <IconButton\n                          className=\"icon-discord\"\n                          onClick={() =>\n                            Window.openExternalURL(\n                              'https://discord.gg/gdevelop'\n                            )\n                          }\n                          tooltip={t`GDevelop on Discord`}\n                        />\n                        <IconButton\n                          className=\"icon-reddit\"\n                          onClick={() =>\n                            Window.openExternalURL(\n                              'https://www.reddit.com/r/gdevelop'\n                            )\n                          }\n                          tooltip={t`GDevelop on Reddit`}\n                        />\n                        <IconButton\n                          className=\"icon-twitter\"\n                          onClick={() =>\n                            Window.openExternalURL(\n                              'https://twitter.com/GDevelopApp'\n                            )\n                          }\n                          tooltip={t`GDevelop on Twitter`}\n                        />\n                        <IconButton\n                          className=\"icon-facebook\"\n                          onClick={() =>\n                            Window.openExternalURL(\n                              'https://www.facebook.com/GDevelopApp'\n                            )\n                          }\n                          tooltip={t`GDevelop on Facebook`}\n                        />\n                        <FlatButton\n                          label={i18n.language}\n                          onClick={onOpenLanguageDialog}\n                          icon={<Language />}\n                        />\n                      </Line>\n                    </ResponsiveLineStackLayout>\n                  </Line>\n                </div>\n              </ScrollBackground>\n              {selectedShowcasedGame && (\n                <ShowcasedGameDialog\n                  open\n                  onClose={() => setSelectedShowcasedGame(null)}\n                  showcasedGame={selectedShowcasedGame}\n                />\n              )}\n              {selectedExample && (\n                <ExampleDialog\n                  isOpening={isOpening}\n                  onClose={() => setSelectedExample(null)}\n                  exampleShortHeader={selectedExample}\n                  onOpen={() => {\n                    setPreCreationDialogOpen(true);\n                  }}\n                />\n              )}\n              {preCreationDialogOpen && (\n                <ProjectPreCreationDialog\n                  open\n                  isOpening={isOpening}\n                  onClose={() => setPreCreationDialogOpen(false)}\n                  onCreate={options => createProject(i18n, options)}\n                />\n              )}\n            </>\n          )}\n        </I18n>\n      );\n    }\n  ),\n  // Prevent any update to the editor if the editor is not active,\n  // and so not visible to the user.\n  (prevProps, nextProps) => prevProps.isActive || nextProps.isActive\n);\n\nexport const renderHomePageContainer = (\n  props: RenderEditorContainerPropsWithRef\n) => (\n  <HomePage\n    ref={props.ref}\n    project={props.project}\n    isActive={props.isActive}\n    projectItemName={props.projectItemName}\n    setToolbar={props.setToolbar}\n    canOpen={props.canOpen}\n    onOpen={props.onOpen}\n    onOpenRecentFile={props.onOpenRecentFile}\n    onOpenExamples={props.onOpenExamples}\n    onCreateFromExampleShortHeader={props.onCreateFromExampleShortHeader}\n    onCreateBlank={props.onCreateBlank}\n    onOpenProjectAfterCreation={props.onOpenProjectAfterCreation}\n    onOpenProjectManager={props.onOpenProjectManager}\n    onCloseProject={props.onCloseProject}\n    onOpenTutorials={props.onOpenTutorials}\n    onOpenGamesShowcase={props.onOpenGamesShowcase}\n    onOpenHelpFinder={props.onOpenHelpFinder}\n    onOpenLanguageDialog={props.onOpenLanguageDialog}\n    onOpenProfile={props.onOpenProfile}\n  />\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport PropertiesEditor from '../../PropertiesEditor';\nimport propertiesMapToSchema from '../../PropertiesEditor/PropertiesMapToSchema';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport { Column } from '../../UI/Grid';\nimport { type BehaviorEditorProps } from './BehaviorEditorProps.flow';\n\ntype Props = BehaviorEditorProps;\n\nexport default class BehaviorPropertiesEditor extends React.Component<Props> {\n  render() {\n    const { behavior, behaviorContent, object } = this.props;\n    const properties = behavior.getProperties(behaviorContent.getContent());\n\n    const propertiesSchema = propertiesMapToSchema(\n      properties,\n      behaviorContent => behavior.getProperties(behaviorContent.getContent()),\n      (behaviorContent, name, value) => {\n        behavior.updateProperty(behaviorContent.getContent(), name, value);\n      },\n      object\n    );\n\n    return (\n      <Column expand>\n        {propertiesSchema.length ? (\n          <PropertiesEditor\n            schema={propertiesSchema}\n            instances={[behaviorContent]}\n          />\n        ) : (\n          <EmptyMessage>\n            <Trans>\n              There is nothing to configure for this behavior. You can still use\n              events to interact with the object and this behavior.\n            </Trans>\n          </EmptyMessage>\n        )}\n      </Column>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport useForceUpdate from '../../../Utils/UseForceUpdate';\nimport { type Vertex } from './PolygonEditor';\n\ntype Props = {|\n  shape: string,\n  dimensionA: number,\n  dimensionB: number,\n  offsetX: number,\n  offsetY: number,\n  polygonOrigin: string,\n  vertices: Array<Vertex>,\n  width: number,\n  height: number,\n  frameOffsetTop: number,\n  frameOffsetLeft: number,\n  zoomFactor: number,\n  onMoveVertex: (index: number, newX: number, newY: number) => void,\n|};\n\ntype State = {|\n  draggedVertex: ?Vertex,\n  draggedIndex: number,\n|};\n\nconst ShapePreview = (props: Props) => {\n  const svgRef = React.useRef<React.ElementRef<'svg'> | null>(null);\n  const [state, setState] = React.useState<State>({\n    draggedVertex: null,\n    draggedIndex: -1,\n  });\n\n  const forceUpdate = useForceUpdate();\n\n  const onVertexDown = (vertex: Vertex, index: number) => {\n    if (state.draggedVertex) return;\n    setState({ draggedVertex: vertex, draggedIndex: index });\n  };\n\n  const onMouseUp = () => {\n    const { draggedVertex, draggedIndex } = state;\n    const draggingWasDone = !!draggedVertex;\n    if (draggingWasDone)\n      props.onMoveVertex(\n        draggedIndex,\n        Math.round(draggedVertex ? draggedVertex.x : 0),\n        Math.round(draggedVertex ? draggedVertex.y : 0)\n      );\n    setState({ draggedVertex: null, draggedIndex: -1 });\n  };\n\n  const onMouseMove = (event: any) => {\n    const { polygonOrigin, width, height, zoomFactor } = props;\n    const { draggedVertex } = state;\n    if (!draggedVertex) return;\n\n    // $FlowExpectedError Flow doesn't have SVG typings yet (@facebook/flow#4551)\n    const pointOnScreen = svgRef.current.createSVGPoint();\n    pointOnScreen.x = event.clientX;\n    pointOnScreen.y = event.clientY;\n    // $FlowExpectedError Flow doesn't have SVG typings yet (@facebook/flow#4551)\n    const screenToSvgMatrix = svgRef.current.getScreenCTM().inverse();\n    const pointOnSvg = pointOnScreen.matrixTransform(screenToSvgMatrix);\n\n    const { frameX, frameY } = confinePointToFrame(pointOnSvg.x, pointOnSvg.y);\n\n    draggedVertex.x =\n      frameX / zoomFactor -\n      props.offsetX -\n      (polygonOrigin === 'Center' ? width / 2 : 0);\n    draggedVertex.y =\n      frameY / zoomFactor -\n      props.offsetY -\n      (polygonOrigin === 'Center' ? height / 2 : 0);\n\n    forceUpdate();\n  };\n\n  /**\n   * Given a point's coordinates, returns new coordinates that\n   * are confined inside the sprite frame.\n   */\n  const confinePointToFrame = (freeX: number, freeY: number) => {\n    const maxX = props.width * props.zoomFactor;\n    const maxY = props.height * props.zoomFactor;\n\n    const frameX = Math.min(maxX, Math.max(freeX, 0));\n    const frameY = Math.min(maxY, Math.max(freeY, 0));\n    return { frameX, frameY };\n  };\n\n  const renderBox = () => {\n    const {\n      dimensionA,\n      dimensionB,\n      width,\n      height,\n      offsetX,\n      offsetY,\n      zoomFactor,\n    } = props;\n    const fixedWidth = dimensionA > 0 ? dimensionA : width > 0 ? width : 1;\n    const fixedHeight = dimensionB > 0 ? dimensionB : height > 0 ? height : 1;\n\n    return (\n      <rect\n        key={'boxShape'}\n        fill=\"rgba(255,0,0,0.75)\"\n        strokeWidth={1}\n        x={(offsetX + width / 2 - fixedWidth / 2) * zoomFactor}\n        y={(offsetY + height / 2 - fixedHeight / 2) * zoomFactor}\n        width={fixedWidth * zoomFactor}\n        height={fixedHeight * zoomFactor}\n      />\n    );\n  };\n\n  const renderCircle = () => {\n    const { dimensionA, width, height, offsetX, offsetY, zoomFactor } = props;\n\n    return (\n      <circle\n        key={'circleShape'}\n        fill=\"rgba(255,0,0,0.75)\"\n        strokeWidth={1}\n        cx={(offsetX + width / 2) * zoomFactor}\n        cy={(offsetY + height / 2) * zoomFactor}\n        r={\n          (dimensionA > 0\n            ? dimensionA\n            : width + height > 0\n            ? (width + height) / 4\n            : 1) * zoomFactor\n        }\n      />\n    );\n  };\n\n  const renderEdge = () => {\n    const {\n      dimensionA,\n      dimensionB,\n      width,\n      height,\n      offsetX,\n      offsetY,\n      zoomFactor,\n    } = props;\n\n    const halfLength =\n      (dimensionA > 0 ? dimensionA : width > 0 ? width : 1) / 2;\n    const cos = Math.cos((dimensionB * Math.PI) / 180);\n    const sin = Math.sin((dimensionB * Math.PI) / 180);\n\n    return (\n      <line\n        key={'edgeShape'}\n        stroke=\"rgba(255,0,0,0.75)\"\n        strokeWidth={2}\n        x1={(offsetX + width / 2 - halfLength * cos) * zoomFactor}\n        y1={(offsetY + height / 2 - halfLength * sin) * zoomFactor}\n        x2={(offsetX + width / 2 + halfLength * cos) * zoomFactor}\n        y2={(offsetY + height / 2 + halfLength * sin) * zoomFactor}\n      />\n    );\n  };\n\n  const renderPolygon = () => {\n    const {\n      vertices,\n      polygonOrigin,\n      width,\n      height,\n      offsetX,\n      offsetY,\n      zoomFactor,\n    } = props;\n\n    return (\n      <React.Fragment>\n        <polygon\n          key={'polygonShape'}\n          fill=\"rgba(255,0,0,0.75)\"\n          strokeWidth={1}\n          fillRule=\"evenodd\"\n          points={vertices\n            .map(\n              vertex =>\n                `${(vertex.x +\n                  offsetX +\n                  (polygonOrigin === 'Center' ? width / 2 : 0)) *\n                  zoomFactor},${(vertex.y +\n                  offsetY +\n                  (polygonOrigin === 'Center' ? height / 2 : 0)) *\n                  zoomFactor}`\n            )\n            .join(' ')}\n        />\n        {vertices.map((vertex, index) => (\n          <circle\n            onPointerDown={() => onVertexDown(vertex, index)}\n            key={`vertex-${index}`}\n            fill=\"rgba(150,0,0,0.75)\"\n            strokeWidth={1}\n            style={{ cursor: 'move' }}\n            cx={\n              (vertex.x +\n                offsetX +\n                (polygonOrigin === 'Center' ? width / 2 : 0)) *\n              zoomFactor\n            }\n            cy={\n              (vertex.y +\n                offsetY +\n                (polygonOrigin === 'Center' ? height / 2 : 0)) *\n              zoomFactor\n            }\n            r={5}\n          />\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  const containerStyle = {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n  };\n\n  const frameStyle = {\n    position: 'absolute',\n    top: props.frameOffsetTop || 0,\n    left: props.frameOffsetLeft || 0,\n    width: props.width * props.zoomFactor,\n    height: props.height * props.zoomFactor,\n    overflow: 'visible',\n  };\n\n  return (\n    <div\n      style={containerStyle}\n      onPointerMove={onMouseMove}\n      onPointerUp={onMouseUp}\n    >\n      <svg style={frameStyle} ref={svgRef}>\n        {props.shape === 'Box' && renderBox()}\n        {props.shape === 'Circle' && renderCircle()}\n        {props.shape === 'Edge' && renderEdge()}\n        {props.shape === 'Polygon' && renderPolygon()}\n      </svg>\n    </div>\n  );\n};\n\nexport default ShapePreview;\n","// @flow\r\nimport * as React from 'react';\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableRowColumn,\r\n  TableBody,\r\n  TableHeader,\r\n  TableHeaderColumn,\r\n} from '../../../UI/Table';\r\nimport SemiControlledTextField from '../../../UI/SemiControlledTextField';\r\nimport Warning from '@material-ui/icons/Warning';\r\nimport IconButton from '../../../UI/IconButton';\r\nimport ThemeConsumer from '../../../UI/Theme/ThemeConsumer';\r\nimport AddCircle from '@material-ui/icons/AddCircle';\r\nimport Delete from '@material-ui/icons/Delete';\r\n\r\nexport type Vertex = {|\r\n  x: number,\r\n  y: number,\r\n|};\r\n\r\ntype Props = {|\r\n  vertices: Array<Vertex>,\r\n  onChangeVertexX: (newValue: number, index: number) => void,\r\n  onChangeVertexY: (newValue: number, index: number) => void,\r\n  onAdd: () => void,\r\n  onRemove: (index: number) => void,\r\n|};\r\n\r\nexport default class PolygonEditor extends React.Component<Props> {\r\n  _isPolygonConvex(vertices: Array<Vertex>) {\r\n    // Get edges\r\n    let edges = [];\r\n    let v1 = null;\r\n    let v2 = null;\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      v1 = vertices[i];\r\n      if (i + 1 >= vertices.length) v2 = vertices[0];\r\n      else v2 = vertices[i + 1];\r\n      edges.push({ x: v2.x - v1.x, y: v2.y - v1.y });\r\n    }\r\n\r\n    // Check convexity\r\n    if (edges.length < 3) return false;\r\n\r\n    const zProductIsPositive =\r\n      edges[0].x * edges[0 + 1].y - edges[0].y * edges[0 + 1].x > 0;\r\n\r\n    for (let i = 1; i < edges.length - 1; ++i) {\r\n      let zCrossProduct =\r\n        edges[i].x * edges[i + 1].y - edges[i].y * edges[i + 1].x;\r\n      let zCrossProductIsPositive = zCrossProduct > 0;\r\n      if (zCrossProductIsPositive !== zProductIsPositive) return false;\r\n    }\r\n\r\n    let lastZCrossProduct =\r\n      edges[edges.length - 1].x * edges[0].y -\r\n      edges[edges.length - 1].y * edges[0].x;\r\n    let lastZCrossProductIsPositive = lastZCrossProduct > 0;\r\n    if (lastZCrossProductIsPositive !== zProductIsPositive) return false;\r\n\r\n    // Check for repeated vertices (would crash Box2D during the game)\r\n    for (let i = 0; i < vertices.length - 1; ++i) {\r\n      for (let j = i + 1; j < vertices.length; ++j) {\r\n        if (vertices[i].x === vertices[j].x && vertices[i].y === vertices[j].y)\r\n          return false;\r\n      }\r\n    }\r\n\r\n    // Check if all vertices are aligned (would crash Box2D during the game)\r\n    let alignedX = true;\r\n    let alignedY = true;\r\n    for (let i = 0; i < vertices.length - 1; ++i) {\r\n      if (vertices[i].x !== vertices[i + 1].x) alignedX = false;\r\n      if (vertices[i].y !== vertices[i + 1].y) alignedY = false;\r\n    }\r\n    if (alignedX || alignedY) return false;\r\n\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      vertices,\r\n      onChangeVertexX,\r\n      onChangeVertexY,\r\n      onAdd,\r\n      onRemove,\r\n    } = this.props;\r\n\r\n    return (\r\n      <ThemeConsumer>\r\n        {muiTheme => (\r\n          <Table>\r\n            <TableHeader>\r\n              <TableRow>\r\n                <TableHeaderColumn />\r\n                <TableHeaderColumn>X</TableHeaderColumn>\r\n                <TableHeaderColumn>Y</TableHeaderColumn>\r\n                <TableRowColumn />\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {vertices.map((value, index) => {\r\n                return (\r\n                  <TableRow\r\n                    key={`vertexRow${index}`}\r\n                    style={{\r\n                      backgroundColor: muiTheme.list.itemsBackgroundColor,\r\n                    }}\r\n                  >\r\n                    <TableRowColumn>\r\n                      {!this._isPolygonConvex(vertices) && <Warning />}\r\n                    </TableRowColumn>\r\n                    <TableRowColumn>\r\n                      <SemiControlledTextField\r\n                        margin=\"none\"\r\n                        fullWidth\r\n                        value={value.x.toString(10)}\r\n                        onChange={newValue =>\r\n                          onChangeVertexX(parseFloat(newValue) || 0, index)\r\n                        }\r\n                        type=\"number\"\r\n                      />\r\n                    </TableRowColumn>\r\n                    <TableRowColumn>\r\n                      <SemiControlledTextField\r\n                        margin=\"none\"\r\n                        fullWidth\r\n                        value={value.y.toString(10)}\r\n                        onChange={newValue =>\r\n                          onChangeVertexY(parseFloat(newValue) || 0, index)\r\n                        }\r\n                        type=\"number\"\r\n                      />\r\n                    </TableRowColumn>\r\n                    <TableRowColumn>\r\n                      <IconButton size=\"small\" onClick={() => onRemove(index)}>\r\n                        <Delete />\r\n                      </IconButton>\r\n                    </TableRowColumn>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              <TableRow>\r\n                <TableRowColumn />\r\n                <TableRowColumn />\r\n                <TableRowColumn />\r\n                <TableRowColumn>\r\n                  <IconButton onClick={onAdd}>\r\n                    <AddCircle />\r\n                  </IconButton>\r\n                </TableRowColumn>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        )}\r\n      </ThemeConsumer>\r\n    );\r\n  }\r\n}\r\n","// @flow\r\nimport { t } from '@lingui/macro';\r\nimport { Trans } from '@lingui/macro';\r\n\r\nimport * as React from 'react';\r\nimport { Line, Column } from '../../../UI/Grid';\r\nimport Checkbox from '../../../UI/Checkbox';\r\nimport SelectField from '../../../UI/SelectField';\r\nimport SelectOption from '../../../UI/SelectOption';\r\nimport SemiControlledTextField from '../../../UI/SemiControlledTextField';\r\nimport ImagePreview from '../../../ResourcesList/ResourcePreview/ImagePreview';\r\nimport ResourceSelector from '../../../ResourcesList/ResourceSelector';\r\nimport ResourcesLoader from '../../../ResourcesLoader';\r\nimport ShapePreview from './ShapePreview.js';\r\nimport PolygonEditor from './PolygonEditor.js';\r\nimport { type BehaviorEditorProps } from '../BehaviorEditorProps.flow';\r\nimport Text from '../../../UI/Text';\r\nimport DismissableAlertMessage from '../../../UI/DismissableAlertMessage';\r\nimport { ResponsiveLineStackLayout } from '../../../UI/Layout';\r\nimport EmptyMessage from '../../../UI/EmptyMessage';\r\nimport useForceUpdate from '../../../Utils/UseForceUpdate';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\ntype Props = BehaviorEditorProps;\r\n\r\nconst NumericProperty = (props: {|\r\n  properties: gdMapStringPropertyDescriptor,\r\n  propertyName: string,\r\n  step: number,\r\n  onUpdate: (newValue: string) => void,\r\n|}) => {\r\n  const { properties, propertyName, step, onUpdate } = props;\r\n\r\n  return (\r\n    <SemiControlledTextField\r\n      fullWidth\r\n      value={properties.get(propertyName).getValue()}\r\n      key={propertyName}\r\n      floatingLabelText={properties.get(propertyName).getLabel()}\r\n      step={step}\r\n      onChange={onUpdate}\r\n      type=\"number\"\r\n    />\r\n  );\r\n};\r\n\r\nconst BitGroupEditor = (props: {|\r\n  bits: Array<boolean>,\r\n  onChange: (index: number, value: boolean) => void,\r\n|}) => {\r\n  return (\r\n    <div style={{ overflowX: 'auto', flex: 1 }}>\r\n      <ButtonGroup disableElevation fullWidth>\r\n        {props.bits.map((bit, index) => (\r\n          <Button\r\n            key={index}\r\n            variant={bit ? 'contained' : 'outlined'}\r\n            color={bit ? 'primary' : 'default'}\r\n            onClick={() => props.onChange(index, !bit)}\r\n          >\r\n            {index + 1}\r\n          </Button>\r\n        ))}\r\n      </ButtonGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Physics2Editor = (props: Props) => {\r\n  const { current: resourcesLoader } = React.useRef(ResourcesLoader);\r\n  const [image, setImage] = React.useState('');\r\n  const { behavior, behaviorContent } = props;\r\n  const forceUpdate = useForceUpdate();\r\n\r\n  const isBitEnabled = (bitsValue: number, pos: number) => {\r\n    return !!(bitsValue & (1 << pos));\r\n  };\r\n\r\n  const enableBit = (bitsValue: number, pos: number, enable: boolean) => {\r\n    if (enable) bitsValue |= 1 << pos;\r\n    else bitsValue &= ~(1 << pos);\r\n    return bitsValue;\r\n  };\r\n\r\n  const properties = behavior.getProperties(behaviorContent.getContent());\r\n  const bits = Array(16).fill(null);\r\n  const shape = properties.get('shape').getValue();\r\n  const layersValues = parseInt(properties.get('layers').getValue(), 10);\r\n  const masksValues = parseInt(properties.get('masks').getValue(), 10);\r\n\r\n  return (\r\n    <Column\r\n      expand\r\n      // Avoid overflow on small screens\r\n      noOverflowParent\r\n    >\r\n      <Line>\r\n        <SelectField\r\n          key={'bodyType'}\r\n          fullWidth\r\n          floatingLabelText={properties.get('bodyType').getLabel()}\r\n          value={properties.get('bodyType').getValue()}\r\n          onChange={(e, i, newValue: string) => {\r\n            behavior.updateProperty(\r\n              behaviorContent.getContent(),\r\n              'bodyType',\r\n              newValue\r\n            );\r\n            forceUpdate();\r\n          }}\r\n        >\r\n          {[\r\n            <SelectOption\r\n              key={'dynamic'}\r\n              value={'Dynamic'}\r\n              primaryText={t`Dynamic`}\r\n            />,\r\n            <SelectOption\r\n              key={'static'}\r\n              value={'Static'}\r\n              primaryText={t`Static`}\r\n            />,\r\n            <SelectOption\r\n              key={'kinematic'}\r\n              value={'Kinematic'}\r\n              primaryText={t`Kinematic`}\r\n            />,\r\n          ]}\r\n        </SelectField>\r\n      </Line>\r\n      <ResponsiveLineStackLayout>\r\n        <Checkbox\r\n          label={properties.get('bullet').getLabel()}\r\n          checked={properties.get('bullet').getValue() === 'true'}\r\n          onCheck={(e, checked) => {\r\n            behavior.updateProperty(\r\n              behaviorContent.getContent(),\r\n              'bullet',\r\n              checked ? '1' : '0'\r\n            );\r\n            forceUpdate();\r\n          }}\r\n        />\r\n        <Checkbox\r\n          label={properties.get('fixedRotation').getLabel()}\r\n          checked={properties.get('fixedRotation').getValue() === 'true'}\r\n          onCheck={(e, checked) => {\r\n            behavior.updateProperty(\r\n              behaviorContent.getContent(),\r\n              'fixedRotation',\r\n              checked ? '1' : '0'\r\n            );\r\n            forceUpdate();\r\n          }}\r\n        />\r\n        <Checkbox\r\n          label={properties.get('canSleep').getLabel()}\r\n          checked={properties.get('canSleep').getValue() === 'true'}\r\n          onCheck={(e, checked) => {\r\n            behavior.updateProperty(\r\n              behaviorContent.getContent(),\r\n              'canSleep',\r\n              checked ? '1' : '0'\r\n            );\r\n            forceUpdate();\r\n          }}\r\n        />\r\n      </ResponsiveLineStackLayout>\r\n      <Line>\r\n        <DismissableAlertMessage\r\n          identifier=\"physics2-shape-collisions\"\r\n          kind=\"info\"\r\n        >\r\n          <Trans>\r\n            The shape used in the Physics behavior is independent from the\r\n            collision mask of the object. Be sure to use the \"Collision\"\r\n            condition provided by the Physics behavior in the events. The usual\r\n            \"Collision\" condition won't take into account the shape that you've\r\n            set up here.\r\n          </Trans>\r\n        </DismissableAlertMessage>\r\n      </Line>\r\n      <Line>\r\n        <SelectField\r\n          fullWidth\r\n          floatingLabelText={properties.get('shape').getLabel()}\r\n          value={properties.get('shape').getValue()}\r\n          onChange={(e, i, newValue: string) => {\r\n            behavior.updateProperty(\r\n              behaviorContent.getContent(),\r\n              'shape',\r\n              newValue\r\n            );\r\n            forceUpdate();\r\n          }}\r\n        >\r\n          <SelectOption key={'box'} value={'Box'} primaryText={t`Box`} />\r\n          <SelectOption\r\n            key={'circle'}\r\n            value={'Circle'}\r\n            primaryText={t`Circle`}\r\n          />\r\n          <SelectOption key={'edge'} value={'Edge'} primaryText={t`Edge`} />\r\n          <SelectOption\r\n            key={'polygon'}\r\n            value={'Polygon'}\r\n            primaryText={t`Polygon`}\r\n          />\r\n        </SelectField>\r\n      </Line>\r\n      <ResponsiveLineStackLayout>\r\n        {shape !== 'Polygon' && (\r\n          <SemiControlledTextField\r\n            fullWidth\r\n            value={properties\r\n              .get(shape === 'Polygon' ? 'PolygonOriginX' : 'shapeDimensionA')\r\n              .getValue()}\r\n            key={'shapeDimensionA'}\r\n            floatingLabelText={\r\n              shape === 'Circle'\r\n                ? 'Radius'\r\n                : shape === 'Edge'\r\n                ? 'Length'\r\n                : 'Width'\r\n            }\r\n            min={0}\r\n            onChange={newValue => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                shape === 'Polygon' ? 'PolygonOriginX' : 'shapeDimensionA',\r\n                newValue\r\n              );\r\n              forceUpdate();\r\n            }}\r\n            type=\"number\"\r\n          />\r\n        )}\r\n        {shape !== 'Polygon' && shape !== 'Circle' && (\r\n          <SemiControlledTextField\r\n            fullWidth\r\n            value={properties\r\n              .get(shape === 'Polygon' ? 'PolygonOriginY' : 'shapeDimensionB')\r\n              .getValue()}\r\n            key={'shapeDimensionB'}\r\n            floatingLabelText={shape === 'Edge' ? 'Angle' : 'Height'}\r\n            min={shape === 'Edge' ? undefined : 0}\r\n            onChange={newValue => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                shape === 'Polygon' ? 'PolygonOriginY' : 'shapeDimensionB',\r\n                newValue\r\n              );\r\n              forceUpdate();\r\n            }}\r\n            type=\"number\"\r\n          />\r\n        )}\r\n        {shape === 'Polygon' && (\r\n          <SelectField\r\n            fullWidth\r\n            floatingLabelText={properties.get('polygonOrigin').getLabel()}\r\n            value={properties.get('polygonOrigin').getValue()}\r\n            onChange={(e, i, newValue: string) => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'polygonOrigin',\r\n                newValue\r\n              );\r\n              forceUpdate();\r\n            }}\r\n          >\r\n            {[\r\n              <SelectOption\r\n                key={'center'}\r\n                value={'Center'}\r\n                primaryText={t`Center`}\r\n              />,\r\n              <SelectOption\r\n                key={'origin'}\r\n                value={'Origin'}\r\n                primaryText={t`Origin`}\r\n              />,\r\n              <SelectOption\r\n                key={'topLeft'}\r\n                value={'TopLeft'}\r\n                primaryText={t`Top-Left`}\r\n              />,\r\n            ]}\r\n          </SelectField>\r\n        )}\r\n        <NumericProperty\r\n          properties={properties}\r\n          propertyName={'shapeOffsetX'}\r\n          step={1}\r\n          onUpdate={newValue => {\r\n            behavior.updateProperty(\r\n              behaviorContent.getContent(),\r\n              'shapeOffsetX',\r\n              newValue\r\n            );\r\n            forceUpdate();\r\n          }}\r\n        />\r\n        <NumericProperty\r\n          properties={properties}\r\n          propertyName={'shapeOffsetY'}\r\n          step={1}\r\n          onUpdate={newValue => {\r\n            behavior.updateProperty(\r\n              behaviorContent.getContent(),\r\n              'shapeOffsetY',\r\n              newValue\r\n            );\r\n            forceUpdate();\r\n          }}\r\n        />\r\n      </ResponsiveLineStackLayout>\r\n      <Line>\r\n        <ResourceSelector\r\n          floatingLabelText={\r\n            <Trans>\r\n              A temporary image to help you visualize the shape/polygon\r\n            </Trans>\r\n          }\r\n          project={props.project}\r\n          resourceSources={props.resourceSources}\r\n          onChooseResource={props.onChooseResource}\r\n          resourceExternalEditors={props.resourceExternalEditors}\r\n          resourcesLoader={resourcesLoader}\r\n          resourceKind={'image'}\r\n          initialResourceName={''}\r\n          fullWidth\r\n          onChange={resourceName => {\r\n            setImage(resourceName);\r\n            forceUpdate();\r\n          }}\r\n        />\r\n      </Line>\r\n      {!image && (\r\n        <Line>\r\n          <EmptyMessage>\r\n            <Trans>\r\n              To preview the shape that the Physics engine will use for this\r\n              object, choose first a temporary image to use for the preview.\r\n            </Trans>\r\n          </EmptyMessage>\r\n        </Line>\r\n      )}\r\n      {image && (\r\n        <Line>\r\n          <div\r\n            style={{\r\n              width:\r\n                '100%' /* This div prevents ImagePreview to overflow outside the parent */,\r\n            }}\r\n          >\r\n            <ImagePreview\r\n              resourceName={image}\r\n              project={props.project}\r\n              resourcesLoader={resourcesLoader}\r\n              fixedHeight={200}\r\n              renderOverlay={overlayProps => {\r\n                // The result from `getProperties` is temporary, and because this renderOverlay\r\n                // function can be called outside of the render, we must get the properties again.\r\n                const properties = behavior.getProperties(\r\n                  behaviorContent.getContent()\r\n                );\r\n\r\n                return (\r\n                  <ShapePreview\r\n                    shape={properties.get('shape').getValue()}\r\n                    dimensionA={parseFloat(\r\n                      properties.get('shapeDimensionA').getValue()\r\n                    )}\r\n                    dimensionB={parseFloat(\r\n                      properties.get('shapeDimensionB').getValue()\r\n                    )}\r\n                    offsetX={parseFloat(\r\n                      properties.get('shapeOffsetX').getValue()\r\n                    )}\r\n                    offsetY={parseFloat(\r\n                      properties.get('shapeOffsetY').getValue()\r\n                    )}\r\n                    polygonOrigin={properties.get('polygonOrigin').getValue()}\r\n                    vertices={JSON.parse(properties.get('vertices').getValue())}\r\n                    width={overlayProps.imageWidth}\r\n                    height={overlayProps.imageHeight}\r\n                    frameOffsetTop={overlayProps.offsetTop}\r\n                    frameOffsetLeft={overlayProps.offsetLeft}\r\n                    zoomFactor={overlayProps.imageZoomFactor}\r\n                    onMoveVertex={(index, newX, newY) => {\r\n                      let vertices = JSON.parse(\r\n                        properties.get('vertices').getValue()\r\n                      );\r\n                      vertices[index].x = newX;\r\n                      vertices[index].y = newY;\r\n                      behavior.updateProperty(\r\n                        behaviorContent.getContent(),\r\n                        'vertices',\r\n                        JSON.stringify(vertices)\r\n                      );\r\n                      forceUpdate();\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n        </Line>\r\n      )}\r\n      {shape === 'Polygon' && (\r\n        <Line>\r\n          <PolygonEditor\r\n            vertices={JSON.parse(properties.get('vertices').getValue())}\r\n            onChangeVertexX={(newValue, index) => {\r\n              let vertices = JSON.parse(properties.get('vertices').getValue());\r\n              vertices[index].x = newValue;\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'vertices',\r\n                JSON.stringify(vertices)\r\n              );\r\n              forceUpdate();\r\n            }}\r\n            onChangeVertexY={(newValue, index) => {\r\n              let vertices = JSON.parse(properties.get('vertices').getValue());\r\n              vertices[index].y = newValue;\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'vertices',\r\n                JSON.stringify(vertices)\r\n              );\r\n              forceUpdate();\r\n            }}\r\n            onAdd={() => {\r\n              let vertices = JSON.parse(properties.get('vertices').getValue());\r\n              if (vertices.length >= 8) return;\r\n              vertices.push({ x: 0, y: 0 });\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'vertices',\r\n                JSON.stringify(vertices)\r\n              );\r\n              forceUpdate();\r\n            }}\r\n            onRemove={index => {\r\n              let vertices = JSON.parse(properties.get('vertices').getValue());\r\n              vertices.splice(index, 1);\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'vertices',\r\n                JSON.stringify(vertices)\r\n              );\r\n              forceUpdate();\r\n            }}\r\n          />\r\n        </Line>\r\n      )}\r\n      <ResponsiveLineStackLayout>\r\n        <NumericProperty\r\n          properties={properties}\r\n          propertyName={'density'}\r\n          step={0.1}\r\n          onUpdate={newValue => {\r\n            behavior.updateProperty(\r\n              behaviorContent.getContent(),\r\n              'density',\r\n              parseFloat(newValue) > 0 ? newValue : '0'\r\n            );\r\n            forceUpdate();\r\n          }}\r\n        />\r\n        <NumericProperty\r\n          properties={properties}\r\n          propertyName={'gravityScale'}\r\n          step={0.1}\r\n          onUpdate={newValue => {\r\n            behavior.updateProperty(\r\n              behaviorContent.getContent(),\r\n              'gravityScale',\r\n              newValue\r\n            );\r\n            forceUpdate();\r\n          }}\r\n        />\r\n      </ResponsiveLineStackLayout>\r\n      <ResponsiveLineStackLayout>\r\n        <NumericProperty\r\n          properties={properties}\r\n          propertyName={'friction'}\r\n          step={0.1}\r\n          onUpdate={newValue => {\r\n            behavior.updateProperty(\r\n              behaviorContent.getContent(),\r\n              'friction',\r\n              parseFloat(newValue) > 0 ? newValue : '0'\r\n            );\r\n            forceUpdate();\r\n          }}\r\n        />\r\n        <NumericProperty\r\n          properties={properties}\r\n          propertyName={'restitution'}\r\n          step={0.1}\r\n          onUpdate={newValue => {\r\n            behavior.updateProperty(\r\n              behaviorContent.getContent(),\r\n              'restitution',\r\n              parseFloat(newValue) > 0 ? newValue : '0'\r\n            );\r\n            forceUpdate();\r\n          }}\r\n        />\r\n      </ResponsiveLineStackLayout>\r\n      <ResponsiveLineStackLayout>\r\n        <NumericProperty\r\n          properties={properties}\r\n          propertyName={'linearDamping'}\r\n          step={0.05}\r\n          onUpdate={newValue => {\r\n            behavior.updateProperty(\r\n              behaviorContent.getContent(),\r\n              'linearDamping',\r\n              newValue\r\n            );\r\n            forceUpdate();\r\n          }}\r\n        />\r\n        <NumericProperty\r\n          properties={properties}\r\n          propertyName={'angularDamping'}\r\n          step={0.05}\r\n          onUpdate={newValue => {\r\n            behavior.updateProperty(\r\n              behaviorContent.getContent(),\r\n              'angularDamping',\r\n              newValue\r\n            );\r\n            forceUpdate();\r\n          }}\r\n        />\r\n      </ResponsiveLineStackLayout>\r\n      <Line>\r\n        <Text style={{ marginRight: 10 }}>\r\n          {properties.get('layers').getLabel()}\r\n        </Text>\r\n        <BitGroupEditor\r\n          bits={bits.map((_, idx) => isBitEnabled(layersValues, idx))}\r\n          onChange={(index, value) => {\r\n            const newValue = enableBit(layersValues, index, value);\r\n            behavior.updateProperty(\r\n              behaviorContent.getContent(),\r\n              'layers',\r\n              newValue.toString(10)\r\n            );\r\n            forceUpdate();\r\n          }}\r\n        />\r\n      </Line>\r\n      <Line>\r\n        <Text style={{ marginRight: 10 }}>\r\n          {properties.get('masks').getLabel()}\r\n        </Text>\r\n        <BitGroupEditor\r\n          bits={bits.map((_, idx) => isBitEnabled(masksValues, idx))}\r\n          onChange={(index, value) => {\r\n            const newValue = enableBit(masksValues, index, value);\r\n            behavior.updateProperty(\r\n              behaviorContent.getContent(),\r\n              'masks',\r\n              newValue.toString(10)\r\n            );\r\n            forceUpdate();\r\n          }}\r\n        />\r\n      </Line>\r\n    </Column>\r\n  );\r\n};\r\n\r\nexport default Physics2Editor;\r\n","// @flow\nimport BehaviorPropertiesEditor from './Editors/BehaviorPropertiesEditor';\nimport Physics2Editor from './Editors/Physics2Editor';\n\n/**\n * A service returning editor components for each behavior type.\n */\nexport default {\n  getEditor(behaviorType: string) {\n    if (!this.components[behaviorType]) {\n      return BehaviorPropertiesEditor; // Default properties editor\n    }\n    return this.components[behaviorType].component; // Custom  behavior editor\n  },\n  components: {\n    'Physics2::Physics2Behavior': {\n      component: Physics2Editor,\n    },\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { getShortcutMetadataFromEvent, getShortcutDisplayName } from './index';\n\nconst styles = {\n  shortcutBox: {\n    padding: 15,\n    textAlign: 'center',\n  },\n};\n\ntype Props = {|\n  commandText: ?string,\n  onSet: (shortcut: string) => void,\n  onClose: () => void,\n|};\n\nconst DetectShortcutDialog = (props: Props) => {\n  const [shortcutString, setShortcutString] = React.useState('');\n  const [isValid, setIsValid] = React.useState(false);\n\n  const onApply = () => {\n    shortcutString && props.onSet(shortcutString);\n    props.onClose();\n  };\n\n  React.useEffect(() => {\n    const handler = (e: KeyboardEvent) => {\n      e.preventDefault();\n      const metadata = getShortcutMetadataFromEvent(e);\n      if (e.type === 'keyup') return;\n      setIsValid(metadata.isValid);\n      setShortcutString(metadata.shortcutString);\n    };\n    document.addEventListener('keyup', handler);\n    document.addEventListener('keydown', handler);\n    return () => {\n      document.removeEventListener('keydown', handler);\n      document.removeEventListener('keyup', handler);\n    };\n  }, []);\n\n  return (\n    <Dialog\n      open\n      title={<Trans>Set shortcut</Trans>}\n      onRequestClose={props.onClose}\n      cannotBeDismissed={false}\n      maxWidth=\"xs\"\n      actions={[\n        <FlatButton\n          key=\"Cancel\"\n          label={<Trans>Cancel</Trans>}\n          onClick={props.onClose}\n        />,\n        <FlatButton\n          label={<Trans>Set shortcut</Trans>}\n          primary\n          key=\"Set\"\n          onClick={onApply}\n          disabled={!isValid}\n        />,\n      ]}\n      secondaryActions={[\n        <FlatButton\n          key=\"Remove\"\n          label={<Trans>Remove shortcut</Trans>}\n          onClick={() => {\n            props.onSet('');\n            props.onClose();\n          }}\n        />,\n      ]}\n    >\n      <Typography>{props.commandText}</Typography>\n      <Paper variant=\"outlined\" style={styles.shortcutBox}>\n        <Typography>\n          {shortcutString ? (\n            getShortcutDisplayName(shortcutString)\n          ) : (\n            <Trans>Press a shortcut combination...</Trans>\n          )}\n        </Typography>\n      </Paper>\n    </Dialog>\n  );\n};\n\nexport default DetectShortcutDialog;\n","// @flow\nimport * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport { type I18n } from '@lingui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Chip from '@material-ui/core/Chip';\nimport IconButton from '../UI/IconButton';\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport commandsList, { type CommandName } from '../CommandPalette/CommandsList';\n\nconst styles = {\n  shortcutChip: {\n    borderRadius: 3,\n  },\n};\n\ntype Props = {|\n  i18n: I18n,\n  commandName: CommandName,\n  isDefault: boolean,\n  shortcutString: string,\n  isClashing: boolean,\n  onEditShortcut: () => void,\n  onResetShortcut: () => void,\n|};\n\nconst ShortcutsListRow = (props: Props) => {\n  return (\n    <ListItem>\n      <ListItemText\n        primary={props.i18n._(commandsList[props.commandName].displayText)}\n      />\n      <ListItemSecondaryAction>\n        {props.isClashing && (\n          <IconButton tooltip={t`This shortcut clashes with another action.`}>\n            <WarningIcon />\n          </IconButton>\n        )}\n        <Chip\n          style={styles.shortcutChip}\n          label={props.shortcutString || <Trans>No shortcut</Trans>}\n          onClick={props.onEditShortcut}\n          title={props.i18n._(t`Edit shortcut`)}\n          color={props.shortcutString ? 'secondary' : 'default'}\n        />\n        {!props.isDefault && (\n          <IconButton\n            onClick={props.onResetShortcut}\n            tooltip={t`Reset to default`}\n          >\n            <RotateLeftIcon />\n          </IconButton>\n        )}\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default ShortcutsListRow;\n","// @flow\nimport * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport { type I18n } from '@lingui/core';\nimport List from '@material-ui/core/List';\nimport Text from '../UI/Text';\nimport DetectShortcutDialog from './DetectShortcutDialog';\nimport { Line } from '../UI/Grid';\nimport RaisedButton from '../UI/RaisedButton';\nimport DismissableAlertMessage from '../UI/DismissableAlertMessage';\nimport { type ShortcutMap } from './DefaultShortcuts';\nimport { getShortcutDisplayName } from './index';\nimport Window from '../Utils/Window';\nimport defaultShortcuts from '../KeyboardShortcuts/DefaultShortcuts';\nimport ShortcutsListRow from './ShortcutsListRow';\nimport commandsList, {\n  type CommandName,\n  commandAreas,\n} from '../CommandPalette/CommandsList';\n\n/**\n * Get shortcut string to be displayed after patching the default\n * shortcut with user-defined shortcut, if any.\n */\nconst getPatchedShortcutString = (\n  defaultShortcut: string,\n  userShortcut?: string\n) => {\n  // User shortcut can be empty string when user has removed a shortcut,\n  // so we check userShortcut against null/undefined.\n  return userShortcut == null ? defaultShortcut : userShortcut;\n};\n\n/**\n * Sorts all commands into an object keyed by area name, and also creates a\n * reverse mapping from shortcut string to list of commands with that shortcut.\n */\nconst sortCommandsIntoAreasAndGetReverseMap = (\n  userShortcutMap: ShortcutMap\n) => {\n  const areaWiseCommands = {};\n  const shortcutStringToCommands: { [string]: Array<CommandName> } = {};\n  Object.keys(commandsList)\n    .filter(name => !commandsList[name].noShortcut)\n    .forEach(name => {\n      // Sort commands by area\n      const areaName = commandsList[name].area;\n      if (!areaWiseCommands[areaName]) areaWiseCommands[areaName] = [];\n      areaWiseCommands[areaName].push(name);\n\n      // Add to shortcut-command mapping\n      const userShortcut = userShortcutMap[name];\n      const defaultShortcut = defaultShortcuts[name] || '';\n      const shortcutString = getPatchedShortcutString(\n        defaultShortcut,\n        userShortcut\n      );\n      if (shortcutString === '') return;\n      shortcutStringToCommands[shortcutString] = (\n        shortcutStringToCommands[shortcutString] || []\n      ).concat(name);\n    });\n\n  return [areaWiseCommands, shortcutStringToCommands];\n};\n\ntype Props = {|\n  i18n: I18n,\n  userShortcutMap: ShortcutMap,\n  onEdit: (commandName: CommandName, shortcut: string) => void,\n  onReset: () => void,\n|};\n\nconst ShortcutsList = (props: Props) => {\n  const [\n    editedShortcut,\n    setEditedShortcut,\n  ] = React.useState<null | CommandName>(null);\n\n  const resetAllShortcutsToDefault = () => {\n    const answer = Window.showConfirmDialog(\n      props.i18n._(\n        t`Are you sure you want to reset all shortcuts to their default values?`\n      ),\n      'question'\n    );\n    if (answer) props.onReset();\n  };\n\n  const resetShortcut = (commandName: CommandName) => {\n    props.onEdit(commandName, defaultShortcuts[commandName]);\n  };\n\n  const [\n    areaWiseCommands,\n    shortcutStringToCommands,\n  ] = sortCommandsIntoAreasAndGetReverseMap(props.userShortcutMap);\n\n  const commandPaletteShortcut = getShortcutDisplayName(\n    props.userShortcutMap['OPEN_COMMAND_PALETTE'] ||\n      defaultShortcuts['OPEN_COMMAND_PALETTE']\n  );\n\n  return (\n    <>\n      <Line>\n        <DismissableAlertMessage\n          kind=\"info\"\n          identifier=\"command-palette-shortcut\"\n        >\n          <Trans>You can open the command palette by pressing</Trans>{' '}\n          {commandPaletteShortcut}\n        </DismissableAlertMessage>\n      </Line>\n      <Line>\n        <RaisedButton\n          label={<Trans>Reset all shortcuts to default</Trans>}\n          onClick={resetAllShortcutsToDefault}\n        />\n      </Line>\n      <List>\n        {Object.keys(areaWiseCommands).map(areaName => (\n          <React.Fragment key={areaName}>\n            <Text size=\"title\">{props.i18n._(commandAreas[areaName])}</Text>\n            {areaWiseCommands[areaName].map(commandName => {\n              // Get default and user-set shortcuts\n              const userShortcut = props.userShortcutMap[commandName];\n              const defaultShortcut = defaultShortcuts[commandName] || '';\n              const shortcutString = getPatchedShortcutString(\n                defaultShortcut,\n                userShortcut\n              );\n              const shortcutDisplayName = getShortcutDisplayName(\n                shortcutString\n              );\n              // Check if shortcut clashes with another command\n              const clashingCommands = shortcutStringToCommands[shortcutString];\n              const hasClash = clashingCommands && clashingCommands.length > 1;\n\n              return (\n                <ShortcutsListRow\n                  i18n={props.i18n}\n                  key={commandName}\n                  shortcutString={shortcutDisplayName}\n                  commandName={commandName}\n                  isDefault={shortcutString === defaultShortcut}\n                  isClashing={hasClash}\n                  onEditShortcut={() => setEditedShortcut(commandName)}\n                  onResetShortcut={() => resetShortcut(commandName)}\n                />\n              );\n            })}\n          </React.Fragment>\n        ))}\n      </List>\n      {editedShortcut && (\n        <DetectShortcutDialog\n          commandText={props.i18n._(commandsList[editedShortcut].displayText)}\n          onClose={() => setEditedShortcut(null)}\n          onSet={shortcut => {\n            props.onEdit(editedShortcut, shortcut);\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ShortcutsList;\n","// @flow\nimport { t, Trans } from '@lingui/macro';\nimport { type I18n } from '@lingui/core';\n\nimport React from 'react';\nimport SelectField from '../../UI/SelectField';\nimport FlatButton from '../../UI/FlatButton';\nimport SelectOption from '../../UI/SelectOption';\nimport Toggle from '../../UI/Toggle';\nimport Dialog from '../../UI/Dialog';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport { themes } from '../../UI/Theme';\nimport { getAllThemes } from '../../CodeEditor/Theme';\nimport Window from '../../Utils/Window';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport PreferencesContext from './PreferencesContext';\nimport Text from '../../UI/Text';\nimport { ResponsiveLineStackLayout } from '../../UI/Layout';\nimport { Tabs, Tab } from '../../UI/Tabs';\nimport RaisedButton from '../../UI/RaisedButton';\nimport ShortcutsList from '../../KeyboardShortcuts/ShortcutsList';\nimport LanguageSelector from './LanguageSelector';\nconst electron = optionalRequire('electron');\n\ntype Props = {|\n  i18n: I18n,\n  onClose: (languageDidChange: boolean) => void,\n|};\n\nconst PreferencesDialog = ({ i18n, onClose }: Props) => {\n  const [currentTab, setCurrentTab] = React.useState('preferences');\n  const [languageDidChange, setLanguageDidChange] = React.useState<boolean>(\n    false\n  );\n  const {\n    values,\n    setThemeName,\n    setCodeEditorThemeName,\n    setAutoDownloadUpdates,\n    showAllAlertMessages,\n    showAllTutorialHints,\n    setAutoDisplayChangelog,\n    setEventsSheetShowObjectThumbnails,\n    setAutosaveOnPreview,\n    setUseNewInstructionEditorDialog,\n    setUseUndefinedVariablesInAutocompletion,\n    setUseGDJSDevelopmentWatcher,\n    setEventsSheetUseAssignmentOperators,\n    getDefaultEditorMosaicNode,\n    setDefaultEditorMosaicNode,\n    setAutoOpenMostRecentProject,\n    resetShortcutsToDefault,\n    setShortcutForCommand,\n    setIsMenuBarHiddenInPreview,\n    setBackdropClickBehavior,\n    setIsAlwaysOnTopInPreview,\n    setEventsSheetCancelInlineParameter,\n  } = React.useContext(PreferencesContext);\n\n  return (\n    <Dialog\n      actions={[\n        <FlatButton\n          key=\"close\"\n          label={<Trans>Close</Trans>}\n          primary={false}\n          onClick={() => onClose(languageDidChange)}\n        />,\n      ]}\n      onRequestClose={() => onClose(languageDidChange)}\n      cannotBeDismissed={true}\n      open\n      noTitleMargin\n      maxWidth=\"sm\"\n      noMargin\n      title={\n        <Tabs value={currentTab} onChange={setCurrentTab}>\n          <Tab label={<Trans>Preferences</Trans>} value=\"preferences\" />\n          <Tab label={<Trans>Keyboard Shortcuts</Trans>} value=\"shortcuts\" />\n        </Tabs>\n      }\n    >\n      {currentTab === 'preferences' && (\n        <Column>\n          <Text size=\"title\">\n            <Trans>Language</Trans>\n          </Text>\n          <LanguageSelector\n            onLanguageChanged={() => {\n              setLanguageDidChange(true);\n            }}\n          />\n          <Text size=\"title\">\n            <Trans>Appearance</Trans>\n          </Text>\n          <ResponsiveLineStackLayout noMargin>\n            <SelectField\n              floatingLabelText={<Trans>UI Theme</Trans>}\n              value={values.themeName}\n              onChange={(e, i, value: string) => setThemeName(value)}\n              fullWidth\n            >\n              {Object.keys(themes).map(themeName => (\n                <SelectOption\n                  value={themeName}\n                  primaryText={themeName}\n                  key={themeName}\n                />\n              ))}\n            </SelectField>\n            <SelectField\n              floatingLabelText={<Trans>Code editor Theme</Trans>}\n              value={values.codeEditorThemeName}\n              onChange={(e, i, value: string) => setCodeEditorThemeName(value)}\n              fullWidth\n            >\n              {getAllThemes().map(codeEditorTheme => (\n                <SelectOption\n                  value={codeEditorTheme.themeName}\n                  primaryText={codeEditorTheme.name}\n                  key={codeEditorTheme.themeName}\n                />\n              ))}\n            </SelectField>\n          </ResponsiveLineStackLayout>\n          <Line noMargin>\n            <Text>\n              <Trans>You can contribute and create your own themes: </Trans>\n            </Text>\n            <FlatButton\n              label={<Trans>Learn more</Trans>}\n              onClick={() => {\n                Window.openExternalURL(\n                  'https://github.com/4ian/GDevelop/tree/master/newIDE#theming'\n                );\n              }}\n            />\n          </Line>\n          <Text size=\"title\">\n            <Trans>Layouts</Trans>\n          </Text>\n          <Line>\n            <Column>\n              <RaisedButton\n                label={<Trans>Reset Scene Editor layout</Trans>}\n                onClick={() => setDefaultEditorMosaicNode('scene-editor', null)}\n                disabled={!getDefaultEditorMosaicNode('scene-editor')}\n              />\n              <Spacer />\n              <RaisedButton\n                label={<Trans>Reset Scene Editor (small window) layout</Trans>}\n                onClick={() =>\n                  setDefaultEditorMosaicNode('scene-editor-small', null)\n                }\n                disabled={!getDefaultEditorMosaicNode('scene-editor-small')}\n              />\n              <Spacer />\n              <RaisedButton\n                label={<Trans>Reset Debugger layout</Trans>}\n                onClick={() => setDefaultEditorMosaicNode('debugger', null)}\n                disabled={!getDefaultEditorMosaicNode('debugger')}\n              />\n              <Spacer />\n              <RaisedButton\n                label={<Trans>Reset Resource Editor layout</Trans>}\n                onClick={() =>\n                  setDefaultEditorMosaicNode('resources-editor', null)\n                }\n                disabled={!getDefaultEditorMosaicNode('resources-editor')}\n              />\n              <Spacer />\n              <RaisedButton\n                label={<Trans>Reset Extension Editor layout</Trans>}\n                onClick={() =>\n                  setDefaultEditorMosaicNode(\n                    'events-functions-extension-editor',\n                    null\n                  )\n                }\n                disabled={\n                  !getDefaultEditorMosaicNode(\n                    'events-functions-extension-editor'\n                  )\n                }\n              />\n            </Column>\n          </Line>\n          <Text size=\"title\">\n            <Trans>Dialogs</Trans>\n          </Text>\n          <Line>\n            <SelectField\n              floatingLabelText={<Trans>Dialog backdrop click behavior</Trans>}\n              value={values.backdropClickBehavior}\n              onChange={(e, i, value: string) =>\n                setBackdropClickBehavior(value)\n              }\n              fullWidth\n            >\n              <SelectOption value=\"cancel\" primaryText={t`Cancel changes`} />\n              <SelectOption value=\"apply\" primaryText={t`Apply changes`} />\n              <SelectOption value=\"nothing\" primaryText={t`Do nothing`} />\n            </SelectField>\n          </Line>\n          <Text size=\"title\">\n            <Trans>Updates</Trans>\n          </Text>\n          <Line>\n            <Toggle\n              onToggle={(e, check) => setAutoDownloadUpdates(check)}\n              toggled={values.autoDownloadUpdates}\n              labelPosition=\"right\"\n              label={\n                <Trans>Auto download and install updates (recommended)</Trans>\n              }\n            />\n          </Line>\n          <Line>\n            <Toggle\n              onToggle={(e, check) => setAutoDisplayChangelog(check)}\n              toggled={values.autoDisplayChangelog}\n              labelPosition=\"right\"\n              label={\n                <Trans>\n                  Display What's New when a new version is launched\n                  (recommended)\n                </Trans>\n              }\n            />\n          </Line>\n          <Text size=\"title\">\n            <Trans>Events Sheet</Trans>\n          </Text>\n          <Line>\n            <Toggle\n              onToggle={(e, check) => setEventsSheetShowObjectThumbnails(check)}\n              toggled={values.eventsSheetShowObjectThumbnails}\n              labelPosition=\"right\"\n              label={<Trans>Display object thumbnails in Events Sheets</Trans>}\n            />\n          </Line>\n          <Line>\n            <Toggle\n              onToggle={(e, check) =>\n                setEventsSheetUseAssignmentOperators(check)\n              }\n              toggled={values.eventsSheetUseAssignmentOperators}\n              labelPosition=\"right\"\n              label={\n                <Trans>Display assignment operators in Events Sheets</Trans>\n              }\n            />\n          </Line>\n          <Line>\n            <Toggle\n              onToggle={(e, check) => setUseNewInstructionEditorDialog(check)}\n              toggled={values.useNewInstructionEditorDialog}\n              labelPosition=\"right\"\n              label={<Trans>Use the new action/condition editor</Trans>}\n            />\n          </Line>\n          <Line>\n            <Toggle\n              onToggle={(e, check) =>\n                setUseUndefinedVariablesInAutocompletion(check)\n              }\n              toggled={values.useUndefinedVariablesInAutocompletion}\n              labelPosition=\"right\"\n              label={\n                <Trans>\n                  Suggest names of variables used in events but not declared in\n                  the list of variables\n                </Trans>\n              }\n            />\n          </Line>\n          <Line>\n            <SelectField\n              floatingLabelText={\n                <Trans>\n                  Escape key behavior when editing an parameter inline\n                </Trans>\n              }\n              value={values.eventsSheetCancelInlineParameter}\n              onChange={(e, i, value: string) => {\n                setEventsSheetCancelInlineParameter(value);\n              }}\n              fullWidth\n            >\n              <SelectOption value=\"cancel\" primaryText={t`Cancel changes`} />\n              <SelectOption value=\"apply\" primaryText={t`Apply changes`} />\n            </SelectField>\n          </Line>\n          <Text size=\"title\">\n            <Trans>Embedded help and tutorials</Trans>\n          </Text>\n          <Line>\n            <Column noMargin>\n              <Line>\n                <RaisedButton\n                  label={<Trans>Reset hidden embedded explanations</Trans>}\n                  onClick={() => showAllAlertMessages()}\n                  disabled={!Object.keys(values.hiddenAlertMessages).length}\n                />\n              </Line>\n              <Line>\n                <RaisedButton\n                  label={<Trans>Reset hidden embedded tutorials</Trans>}\n                  onClick={() => showAllTutorialHints()}\n                  disabled={!Object.keys(values.hiddenTutorialHints).length}\n                />\n              </Line>\n            </Column>\n          </Line>\n          <Text size=\"title\">\n            <Trans>Advanced</Trans>\n          </Text>\n          <Line>\n            <Toggle\n              onToggle={(e, check) => setAutosaveOnPreview(check)}\n              toggled={values.autosaveOnPreview}\n              labelPosition=\"right\"\n              label={<Trans>Auto-save project on Preview</Trans>}\n            />\n          </Line>\n          <Line>\n            <Toggle\n              onToggle={(e, check) => setAutoOpenMostRecentProject(check)}\n              toggled={values.autoOpenMostRecentProject}\n              labelPosition=\"right\"\n              label={\n                <Trans>\n                  Automatically re-open the project edited during last session\n                </Trans>\n              }\n            />\n          </Line>\n          {electron && (\n            <>\n              <Line>\n                <Toggle\n                  onToggle={(e, check) => setIsMenuBarHiddenInPreview(check)}\n                  toggled={values.isMenuBarHiddenInPreview}\n                  labelPosition=\"right\"\n                  label={<Trans>Hide the menu bar in the preview window</Trans>}\n                />\n              </Line>\n              <Line>\n                <Toggle\n                  onToggle={(e, check) => setIsAlwaysOnTopInPreview(check)}\n                  toggled={values.isAlwaysOnTopInPreview}\n                  labelPosition=\"right\"\n                  label={\n                    <Trans>\n                      Always display the preview window on top of the editor\n                    </Trans>\n                  }\n                />\n              </Line>\n            </>\n          )}\n          {Window.isDev() && (\n            <Line>\n              <Toggle\n                onToggle={(e, check) => setUseGDJSDevelopmentWatcher(check)}\n                toggled={values.useGDJSDevelopmentWatcher}\n                labelPosition=\"right\"\n                label={\n                  <Trans>\n                    Watch changes in game engine (GDJS) sources and auto import\n                    them (dev only)\n                  </Trans>\n                }\n              />\n            </Line>\n          )}\n        </Column>\n      )}\n      {currentTab === 'shortcuts' && (\n        <Column>\n          <ShortcutsList\n            i18n={i18n}\n            userShortcutMap={values.userShortcutMap}\n            onEdit={setShortcutForCommand}\n            onReset={resetShortcutsToDefault}\n          />\n        </Column>\n      )}\n    </Dialog>\n  );\n};\n\nexport default PreferencesDialog;\n","// @flow\nimport { fuzzyOrEmptyFilter } from '../../Utils/FuzzyOrEmptyFilter';\n\n/**\n * Filters options both simply and fuzzy-ly,\n * prioritizing simple-matched options\n */\nconst filterOptions = <T>(\n  options: Array<T>,\n  state: { getOptionLabel: T => string, inputValue: string }\n) => {\n  const searchText = state.inputValue.toLowerCase();\n  if (searchText === '') return options;\n\n  const directMatches = [];\n  const fuzzyMatches = [];\n  options.forEach(option => {\n    const optionText = state.getOptionLabel(option).toLowerCase();\n    if (optionText.includes(searchText)) return directMatches.push(option);\n    if (fuzzyOrEmptyFilter(searchText, optionText))\n      return fuzzyMatches.push(option);\n  });\n\n  return [...directMatches, ...fuzzyMatches];\n};\n\nexport default filterOptions;\n","// @flow\nconst fuzzyFilter = (searchText: string, key: string) => {\n  const compareString = key.toLowerCase();\n  searchText = searchText.toLowerCase();\n\n  let searchTextIndex = 0;\n  for (let index = 0; index < key.length; index++) {\n    if (compareString[index] === searchText[searchTextIndex]) {\n      searchTextIndex += 1;\n    }\n  }\n\n  return searchTextIndex === searchText.length;\n};\n\n/**\n * A fuzzy filter that still return true if the key is empty.\n */\nexport const fuzzyOrEmptyFilter = (searchText: string, key: string) => {\n  return !key || fuzzyFilter(searchText, key);\n};\n","// @flow\nimport * as React from 'react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { type MessageDescriptor } from '../../Utils/i18n/MessageDescriptor.flow';\nimport ListIcon from '../../UI/ListIcon';\nimport { useShortcutMap } from '../../KeyboardShortcuts';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Chip from '@material-ui/core/Chip';\nimport TextField from '@material-ui/core/TextField';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport filterOptions from './FilterOptions';\nimport { type NamedCommand, type CommandOption } from '../CommandManager';\nimport commandsList, { commandAreas } from '../CommandsList';\nimport { getShortcutDisplayName } from '../../KeyboardShortcuts';\n\nconst useStyles = makeStyles({\n  shortcutChip: {\n    borderRadius: 3,\n  },\n  listItemContainer: {\n    width: '100%',\n  },\n});\n\ntype Item = NamedCommand | CommandOption;\n\ntype Props<T> = {|\n  onClose: () => void,\n  onSelect: (item: T) => void,\n  items: Array<T>,\n  placeholder: MessageDescriptor,\n  i18n: I18nType,\n|};\n\nconst AutocompletePicker = (\n  props: Props<NamedCommand> | Props<CommandOption>\n) => {\n  const [open, setOpen] = React.useState(true);\n  const shortcutMap = useShortcutMap();\n  const classes = useStyles();\n\n  const handleClose = (_, reason) => {\n    if (reason === 'select-option') return;\n    props.onClose();\n  };\n\n  const handleSelect = (_, item) => {\n    props.onSelect(item);\n  };\n\n  const getItemHint = (item: Item) => {\n    if (item.text) return null;\n    else if (item.name) {\n      const shortcutString = shortcutMap[item.name];\n      if (!shortcutString) return null;\n      const shortcutDisplayName = getShortcutDisplayName(shortcutString);\n      return (\n        <ListItemSecondaryAction>\n          <Chip className={classes.shortcutChip} label={shortcutDisplayName} />\n        </ListItemSecondaryAction>\n      );\n    }\n  };\n\n  const getItemText = (item: Item) => {\n    if (item.text) return item.text;\n    else if (item.name) {\n      const { area, displayText } = commandsList[item.name];\n      const areaText = commandAreas[area];\n      return props.i18n._(areaText) + ' 〉' + props.i18n._(displayText);\n    }\n  };\n\n  const getItemIcon = (item: Item) => {\n    if (item.text && item.iconSrc) {\n      return <ListIcon iconSize={20} src={item.iconSrc} />;\n    } else return <ChevronRightIcon />;\n  };\n\n  return (\n    <Autocomplete\n      open={open}\n      onClose={handleClose}\n      onOpen={() => setOpen(true)}\n      options={props.items}\n      getOptionLabel={getItemText}\n      onChange={handleSelect}\n      openOnFocus\n      autoHighlight\n      filterOptions={filterOptions}\n      renderInput={params => (\n        <TextField\n          {...params}\n          placeholder={props.i18n._(props.placeholder)}\n          variant=\"outlined\"\n          autoFocus\n        />\n      )}\n      renderOption={item => (\n        <ListItem\n          dense\n          component=\"div\"\n          ContainerComponent=\"div\"\n          classes={{ container: classes.listItemContainer }}\n        >\n          <ListItemIcon>{getItemIcon(item)}</ListItemIcon>\n          <ListItemText primary={getItemText(item)} />\n          {getItemHint(item)}\n        </ListItem>\n      )}\n    />\n  );\n};\n\nexport default AutocompletePicker;\n","// @flow\nimport React from 'react';\nimport { I18n } from '@lingui/react';\nimport { t } from '@lingui/macro';\nimport Dialog from '@material-ui/core/Dialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CommandsContext from '../CommandsContext';\nimport {\n  type NamedCommand,\n  type NamedCommandWithOptions,\n  type CommandOption,\n} from '../CommandManager';\nimport AutocompletePicker from './AutocompletePicker';\nimport commandsList, { type CommandName } from '../CommandsList';\n\n// Show the command palette dialog at the top of the screen\nconst useStyles = makeStyles({\n  scrollPaper: {\n    alignItems: 'flex-start',\n  },\n});\n\nexport type CommandPaletteInterface = {|\n  open: (open?: boolean) => void,\n  launchCommand: (commandName: CommandName) => void,\n|};\n\ntype PaletteMode = 'closed' | 'command' | 'option';\n\nconst CommandPalette = React.forwardRef<{||}, CommandPaletteInterface>(\n  (props, ref) => {\n    const classes = useStyles();\n    const commandManager = React.useContext(CommandsContext);\n    const [mode, setMode] = React.useState<PaletteMode>('closed');\n    const [\n      selectedCommand,\n      selectCommand,\n    ] = React.useState<null | NamedCommandWithOptions>(null);\n\n    // Takes a command and if simple command, executes handler\n    // If command with options, opens options of the palette\n    const handleCommandChoose = React.useCallback(\n      (command: NamedCommand) => {\n        if (command.handler) {\n          // Simple command\n          command.handler();\n          if (command.name !== 'OPEN_COMMAND_PALETTE') {\n            // Don't close palette if the command is for opening it\n            setMode('closed');\n          }\n        } else {\n          // Command with options\n          selectCommand(command);\n          setMode('option');\n        }\n      },\n      [selectCommand, setMode]\n    );\n\n    // Executes handler of a command option and closes palette\n    const handleOptionChoose = (option: CommandOption) => {\n      option.handler();\n      setMode('closed');\n    };\n\n    // Opens the palette in command mode\n    const openPalette = React.useCallback((open? = true) => {\n      if (open) setMode('command');\n      else setMode('closed');\n    }, []);\n\n    // Takes command name, gets command object from\n    // manager and launches command accordingly\n    const launchCommand = React.useCallback(\n      commandName => {\n        const command = commandManager.getNamedCommand(commandName);\n        if (!command) return;\n        handleCommandChoose(command);\n      },\n      [handleCommandChoose, commandManager]\n    );\n\n    React.useImperativeHandle(ref, () => ({\n      open: openPalette,\n      launchCommand,\n    }));\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Dialog\n            onClose={() => setMode('closed')}\n            aria-label=\"command-palette\"\n            open={mode !== 'closed'}\n            fullWidth\n            hideBackdrop\n            maxWidth=\"sm\"\n            classes={classes}\n            transitionDuration={0}\n          >\n            {mode === 'command' && (\n              // Command picker\n              <AutocompletePicker\n                i18n={i18n}\n                items={\n                  (commandManager\n                    .getAllNamedCommands()\n                    .filter(\n                      command => !commandsList[command.name].ghost\n                    ): Array<NamedCommand>)\n                }\n                placeholder={t`Start typing a command...`}\n                onClose={() => setMode('closed')}\n                onSelect={handleCommandChoose}\n              />\n            )}\n            {mode === 'option' && selectedCommand && (\n              // Command options picker\n              <AutocompletePicker\n                i18n={i18n}\n                items={selectedCommand.generateOptions()}\n                placeholder={commandsList[selectedCommand.name]}\n                onClose={() => setMode('closed')}\n                onSelect={handleOptionChoose}\n              />\n            )}\n          </Dialog>\n        )}\n      </I18n>\n    );\n  }\n);\n\nexport default CommandPalette;\n","// @flow\nimport * as React from 'react';\nimport MuiBadge from '@material-ui/core/Badge';\n\ntype Props = {|\n  children: React.Node,\n  badgeContent: React.Node,\n  color: 'error' | 'primary' | 'secondary' | 'default',\n|};\n\nconst Badge = (props: Props) => <MuiBadge {...props} />;\n\nexport default Badge;\n","// @flow\nimport { I18n } from '@lingui/react';\nimport { t } from '@lingui/macro';\nimport React from 'react';\nimport TextField from '../UI/TextField';\nimport ColorPicker from '../UI/ColorField/ColorPicker';\nimport { TreeTableCell, TreeTableRow } from '../UI/TreeTable';\nimport DragHandle from '../UI/DragHandle';\n\ntype Props = {|\n  layout: gdLayout,\n  onBackgroundColorChanged: () => void,\n|};\n\nexport default ({ layout, onBackgroundColorChanged }: Props) => (\n  <I18n>\n    {({ i18n }) => (\n      <TreeTableRow>\n        <TreeTableCell>\n          <DragHandle disabled />\n        </TreeTableCell>\n        <TreeTableCell expand>\n          <TextField\n            fullWidth\n            value={i18n._(t`Background color`)}\n            margin=\"none\"\n            disabled\n          />\n        </TreeTableCell>\n        <TreeTableCell>\n          <ColorPicker\n            disableAlpha\n            color={{\n              r: layout.getBackgroundColorRed(),\n              g: layout.getBackgroundColorGreen(),\n              b: layout.getBackgroundColorBlue(),\n              a: 255,\n            }}\n            onChangeComplete={color => {\n              layout.setBackgroundColor(color.rgb.r, color.rgb.g, color.rgb.b);\n              onBackgroundColorChanged();\n            }}\n          />\n        </TreeTableCell>\n      </TreeTableRow>\n    )}\n  </I18n>\n);\n","// @flow\nimport { t, Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport { mapReverseFor } from '../Utils/MapFor';\nimport LayerRow from './LayerRow';\nimport BackgroundColorRow from './BackgroundColorRow';\nimport { Column, Line } from '../UI/Grid';\nimport Add from '@material-ui/icons/Add';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\nimport ScrollView from '../UI/ScrollView';\nimport { FullSizeMeasurer } from '../UI/FullSizeMeasurer';\nimport Background from '../UI/Background';\nimport { type HotReloadPreviewButtonProps } from '../HotReload/HotReloadPreviewButton';\nimport RaisedButtonWithSplitMenu from '../UI/RaisedButtonWithSplitMenu';\n\nconst SortableLayerRow = SortableElement(LayerRow);\n\ntype LayersListBodyState = {|\n  nameErrors: { [string]: boolean },\n|};\n\nclass LayersListBody extends Component<*, LayersListBodyState> {\n  state = {\n    nameErrors: {},\n  };\n\n  _onLayerModified = () => {\n    if (this.props.unsavedChanges)\n      this.props.unsavedChanges.triggerUnsavedChanges();\n    this.forceUpdate();\n  };\n\n  render() {\n    const { layersContainer, onEditEffects, onEdit, width } = this.props;\n\n    const layersCount = layersContainer.getLayersCount();\n    const containerLayersList = mapReverseFor(0, layersCount, i => {\n      const layer = layersContainer.getLayerAt(i);\n      const layerName = layer.getName();\n      const isLightingLayer = layer.isLightingLayer();\n\n      return (\n        <SortableLayerRow\n          index={layersCount - 1 - i}\n          key={'layer-' + layerName}\n          layer={layer}\n          layerName={layerName}\n          isLightingLayer={isLightingLayer}\n          nameError={this.state.nameErrors[layerName]}\n          effectsCount={layer.getEffects().getEffectsCount()}\n          onEditEffects={() => onEditEffects(layer)}\n          onEdit={() => onEdit(layer)}\n          onBlur={event => {\n            const newName = event.target.value;\n            if (layerName === newName) return;\n\n            let success = true;\n            if (layersContainer.hasLayerNamed(newName)) {\n              success = false;\n            } else {\n              this.props.onRenameLayer(layerName, newName, doRename => {\n                if (doRename)\n                  layersContainer.getLayer(layerName).setName(newName);\n              });\n            }\n\n            this.setState({\n              nameErrors: {\n                ...this.state.nameErrors,\n                [layerName]: !success,\n              },\n            });\n          }}\n          onRemove={() => {\n            this.props.onRemoveLayer(layerName, doRemove => {\n              if (!doRemove) return;\n\n              layersContainer.removeLayer(layerName);\n              this._onLayerModified();\n            });\n          }}\n          isVisible={layer.getVisibility()}\n          onChangeVisibility={visible => {\n            layer.setVisibility(visible);\n            this._onLayerModified();\n          }}\n          width={width}\n        />\n      );\n    });\n\n    return (\n      <Column noMargin expand>\n        {containerLayersList}\n        <BackgroundColorRow\n          layout={layersContainer}\n          onBackgroundColorChanged={() => this._onLayerModified()}\n        />\n      </Column>\n    );\n  }\n}\n\nconst SortableLayersListBody = SortableContainer(LayersListBody);\n\ntype Props = {|\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  layersContainer: gdLayout,\n  onEditLayerEffects: (layer: ?gdLayer) => void,\n  onEditLayer: (layer: ?gdLayer) => void,\n  onRemoveLayer: (layerName: string, cb: (done: boolean) => void) => void,\n  onRenameLayer: (\n    oldName: string,\n    newName: string,\n    cb: (done: boolean) => void\n  ) => void,\n  unsavedChanges?: ?UnsavedChanges,\n\n  // Preview:\n  hotReloadPreviewButtonProps: HotReloadPreviewButtonProps,\n|};\n\ntype State = {|\n  effectsEditedLayer: ?gdLayer,\n|};\n\nconst hasLightingLayer = (layout: gdLayout) => {\n  const layersCount = layout.getLayersCount();\n  return (\n    mapReverseFor(0, layersCount, i =>\n      layout.getLayerAt(i).isLightingLayer()\n    ).filter(Boolean).length > 0\n  );\n};\n\nexport default class LayersList extends Component<Props, State> {\n  _addLayer = () => {\n    const { layersContainer } = this.props;\n    const name = newNameGenerator('Layer', name =>\n      layersContainer.hasLayerNamed(name)\n    );\n    layersContainer.insertNewLayer(name, layersContainer.getLayersCount());\n    this._onLayerModified();\n  };\n\n  _addLightingLayer = () => {\n    const { layersContainer } = this.props;\n    const name = newNameGenerator('Lighting', name =>\n      layersContainer.hasLayerNamed(name)\n    );\n    layersContainer.insertNewLayer(name, layersContainer.getLayersCount());\n    const layer = layersContainer.getLayer(name);\n    layer.setLightingLayer(true);\n    layer.setFollowBaseLayerCamera(true);\n    layer.setAmbientLightColor(200, 200, 200);\n    this._onLayerModified();\n  };\n\n  _onLayerModified = () => {\n    if (this.props.unsavedChanges)\n      this.props.unsavedChanges.triggerUnsavedChanges();\n    this.forceUpdate();\n  };\n\n  render() {\n    // Force the list to be mounted again if layersContainer\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const listKey = this.props.layersContainer.ptr;\n    const isLightingLayerPresent = hasLightingLayer(this.props.layersContainer);\n\n    return (\n      <Background>\n        <ScrollView autoHideScrollbar>\n          <FullSizeMeasurer>\n            {({ width }) => (\n              // TODO: The list is costly to render when there are many layers, consider\n              // using SortableVirtualizedItemList.\n              <SortableLayersListBody\n                key={listKey}\n                layersContainer={this.props.layersContainer}\n                onEditEffects={this.props.onEditLayerEffects}\n                onEdit={this.props.onEditLayer}\n                onRemoveLayer={this.props.onRemoveLayer}\n                onRenameLayer={this.props.onRenameLayer}\n                onSortEnd={({ oldIndex, newIndex }) => {\n                  const layersCount = this.props.layersContainer.getLayersCount();\n                  this.props.layersContainer.moveLayer(\n                    layersCount - 1 - oldIndex,\n                    layersCount - 1 - newIndex\n                  );\n                  this._onLayerModified();\n                }}\n                helperClass=\"sortable-helper\"\n                useDragHandle\n                unsavedChanges={this.props.unsavedChanges}\n                width={width}\n              />\n            )}\n          </FullSizeMeasurer>\n          <Column>\n            <Line justifyContent=\"flex-end\" expand>\n              <RaisedButtonWithSplitMenu\n                label={<Trans>Add a layer</Trans>}\n                primary\n                onClick={this._addLayer}\n                icon={<Add />}\n                buildMenuTemplate={i18n => [\n                  {\n                    label: i18n._(t`Add lighting layer`),\n                    enabled: !isLightingLayerPresent,\n                    click: this._addLightingLayer,\n                  },\n                ]}\n              />\n            </Line>\n          </Column>\n        </ScrollView>\n      </Background>\n    );\n  }\n}\n","// @flow\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\nimport { Trans } from '@lingui/macro';\nimport React from 'react';\nimport { TreeTableRow, TreeTableCell } from '../UI/TreeTable';\nimport InlineCheckbox from '../UI/InlineCheckbox';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FlareIcon from '@material-ui/icons/Flare';\nimport IconButton from '../UI/IconButton';\nimport Delete from '@material-ui/icons/Delete';\nimport TextField from '../UI/TextField';\nimport DragHandle from '../UI/DragHandle';\nimport ElementWithMenu from '../UI/Menu/ElementWithMenu';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Badge from '../UI/Badge';\n\ntype Props = {|\n  layerName: string,\n  nameError: boolean,\n  onBlur: () => void,\n  onRemove: () => void,\n  isVisible: boolean,\n  isLightingLayer: boolean,\n  onChangeVisibility: boolean => void,\n  effectsCount: number,\n  onEditEffects: () => void,\n  onEdit: () => void,\n  width: number,\n|};\n\nexport default ({\n  layerName,\n  nameError,\n  onBlur,\n  onRemove,\n  isVisible,\n  effectsCount,\n  onEditEffects,\n  onChangeVisibility,\n  width,\n  isLightingLayer,\n  onEdit,\n}: Props) => (\n  <I18n>\n    {({ i18n }) => (\n      <TreeTableRow>\n        <TreeTableCell>\n          <DragHandle />\n        </TreeTableCell>\n        <TreeTableCell expand>\n          <TextField\n            margin=\"none\"\n            defaultValue={layerName || i18n._(t`Base layer`)}\n            id={layerName}\n            errorText={\n              nameError ? <Trans>This name is already taken</Trans> : undefined\n            }\n            disabled={!layerName}\n            onBlur={onBlur}\n            fullWidth\n          />\n        </TreeTableCell>\n        <TreeTableCell>\n          {width < 350 ? (\n            <ElementWithMenu\n              element={\n                <IconButton size=\"small\">\n                  <MoreVert />\n                </IconButton>\n              }\n              buildMenuTemplate={(i18n: I18nType) => [\n                {\n                  label: isLightingLayer\n                    ? i18n._(t`Edit lighting properties`)\n                    : i18n._(t`Edit properties`),\n                  click: onEdit,\n                },\n                {\n                  label: i18n._(t`Edit effects (${effectsCount})`),\n                  click: onEditEffects,\n                },\n                {\n                  type: 'checkbox',\n                  label: i18n._(t`Visible`),\n                  checked: isVisible,\n                  click: () => onChangeVisibility(!isVisible),\n                },\n                { type: 'separator' },\n                {\n                  label: i18n._(t`Delete`),\n                  enabled: !!layerName,\n                  click: onRemove,\n                },\n              ]}\n            />\n          ) : (\n            <React.Fragment>\n              <InlineCheckbox\n                checked={isVisible}\n                checkedIcon={<Visibility />}\n                uncheckedIcon={<VisibilityOff />}\n                onCheck={(e, value) => onChangeVisibility(value)}\n                tooltipOrHelperText={\n                  isVisible ? (\n                    <Trans>Hide layer</Trans>\n                  ) : (\n                    <Trans>Show layer</Trans>\n                  )\n                }\n              />\n              <IconButton\n                size=\"small\"\n                onClick={onEditEffects}\n                tooltip={t`Edit effects (${effectsCount})`}\n              >\n                <Badge badgeContent={effectsCount} color=\"primary\">\n                  <FlareIcon />\n                </Badge>\n              </IconButton>\n              <IconButton\n                size=\"small\"\n                onClick={onEdit}\n                tooltip={\n                  isLightingLayer\n                    ? t`Edit lighting properties`\n                    : t`Edit properties`\n                }\n              >\n                {isLightingLayer ? <EmojiObjectsIcon /> : <EditIcon />}\n              </IconButton>\n              <IconButton\n                size=\"small\"\n                onClick={onRemove}\n                disabled={!layerName}\n                tooltip={t`Delete the layer`}\n              >\n                <Delete />\n              </IconButton>\n            </React.Fragment>\n          )}\n        </TreeTableCell>\n      </TreeTableRow>\n    )}\n  </I18n>\n);\n","// @flow\nimport * as React from 'react';\nimport { enumerateObjects } from './EnumerateObjects';\nimport { useCommandWithOptions } from '../CommandPalette/CommandHooks';\nimport { type CommandOption } from '../CommandPalette/CommandManager';\nimport ObjectsRenderingService from '../ObjectsRendering/ObjectsRenderingService';\n\nconst generateLayoutObjectsOptions = (\n  project: gdProject,\n  layout: gdLayout,\n  onChoose: (object: gdObject, arg: ?string) => void,\n  onChooseArg: ?string\n): Array<CommandOption> => {\n  return enumerateObjects(project, layout).containerObjectsList.map(item => ({\n    text: item.object.getName(),\n    handler: () => onChoose(item.object, onChooseArg),\n    iconSrc: ObjectsRenderingService.getThumbnail.bind(ObjectsRenderingService)(\n      project,\n      item.object\n    ),\n  }));\n};\n\ntype Props = {|\n  project: gdProject,\n  layout: gdLayout,\n  onEditObject: (object: gdObject, initialTab: ?string) => void,\n  onEditObjectVariables: (object: gdObject) => void,\n|};\n\nconst useObjectsListCommands = (props: Props) => {\n  const { project, layout, onEditObject, onEditObjectVariables } = props;\n  useCommandWithOptions('EDIT_OBJECT', true, {\n    generateOptions: React.useCallback(\n      () => generateLayoutObjectsOptions(project, layout, onEditObject),\n      [project, layout, onEditObject]\n    ),\n  });\n\n  useCommandWithOptions('EDIT_OBJECT_BEHAVIORS', true, {\n    generateOptions: React.useCallback(\n      () =>\n        generateLayoutObjectsOptions(\n          project,\n          layout,\n          onEditObject,\n          'behaviors'\n        ),\n      [project, layout, onEditObject]\n    ),\n  });\n\n  useCommandWithOptions('EDIT_OBJECT_EFFECTS', true, {\n    generateOptions: React.useCallback(\n      () =>\n        generateLayoutObjectsOptions(project, layout, onEditObject, 'effects'),\n      [project, layout, onEditObject]\n    ),\n  });\n\n  useCommandWithOptions('EDIT_OBJECT_VARIABLES', true, {\n    generateOptions: React.useCallback(\n      () =>\n        generateLayoutObjectsOptions(project, layout, onEditObjectVariables),\n      [project, layout, onEditObjectVariables]\n    ),\n  });\n};\n\nexport default useObjectsListCommands;\n","// @flow\nimport * as React from 'react';\nimport { enumerateGroups } from '../ObjectsList/EnumerateObjects';\nimport { useCommandWithOptions } from '../CommandPalette/CommandHooks';\n\ntype Props = {|\n  project: gdProject,\n  layout: gdLayout,\n  onEditObjectGroup: (group: gdObjectGroup) => void,\n|};\n\nconst useObjectGroupsListCommands = (props: Props) => {\n  const { project, layout, onEditObjectGroup } = props;\n\n  useCommandWithOptions('EDIT_OBJECT_GROUP', true, {\n    generateOptions: React.useCallback(\n      () =>\n        [\n          ...enumerateGroups(layout.getObjectGroups()),\n          ...enumerateGroups(project.getObjectGroups()),\n        ].map(group => ({\n          text: group.getName(),\n          handler: () => onEditObjectGroup(group),\n        })),\n      [onEditObjectGroup, project, layout]\n    ),\n  });\n};\n\nexport default useObjectGroupsListCommands;\n","// @flow\nimport * as React from 'react';\nimport { mapReverseFor } from '../Utils/MapFor';\nimport { useCommandWithOptions } from '../CommandPalette/CommandHooks';\n\ntype Props = {|\n  layout: gdLayout,\n  onEditLayerEffects: (layer: gdLayer) => void,\n  onEditLayer: (layer: gdLayer) => void,\n|};\n\nconst useLayersListCommands = (props: Props) => {\n  const { layout, onEditLayerEffects, onEditLayer } = props;\n\n  useCommandWithOptions('EDIT_LAYER_EFFECTS', true, {\n    generateOptions: React.useCallback(\n      () => {\n        const layersCount = layout.getLayersCount();\n        return mapReverseFor(0, layersCount, i => {\n          const layer = layout.getLayerAt(i);\n          return {\n            text: layer.getName() || 'Base layer',\n            handler: () => onEditLayerEffects(layer),\n          };\n        });\n      },\n      [layout, onEditLayerEffects]\n    ),\n  });\n\n  useCommandWithOptions('EDIT_LAYER', true, {\n    generateOptions: React.useCallback(\n      () => {\n        const layersCount = layout.getLayersCount();\n        return mapReverseFor(0, layersCount, i => {\n          const layer = layout.getLayerAt(i);\n          return {\n            text: layer.getName() || 'Base layer',\n            handler: () => onEditLayer(layer),\n          };\n        });\n      },\n      [layout, onEditLayer]\n    ),\n  });\n};\n\nexport default useLayersListCommands;\n","// @flow\nimport { useCommand } from '../CommandPalette/CommandHooks';\nimport useObjectsListCommands from '../ObjectsList/UseObjectsListCommands';\nimport useObjectGroupsListCommands from '../ObjectGroupsList/UseObjectGroupsListCommands';\nimport useLayersListCommands from '../LayersList/UseLayersListCommands';\n\ntype Props = {|\n  project: gdProject,\n  layout: gdLayout,\n  onEditObject: (object: gdObject) => void,\n  onEditObjectVariables: (object: gdObject) => void,\n  onOpenSceneProperties: () => void,\n  onOpenSceneVariables: () => void,\n  onEditObjectGroup: (group: gdObjectGroup) => void,\n  onEditLayerEffects: (layer: gdLayer) => void,\n  onEditLayer: (layer: gdLayer) => void,\n|};\n\nconst UseSceneEditorCommands = (props: Props) => {\n  const {\n    project,\n    layout,\n    onEditObject,\n    onEditObjectVariables,\n    onOpenSceneProperties,\n    onOpenSceneVariables,\n    onEditObjectGroup,\n    onEditLayerEffects,\n    onEditLayer,\n  } = props;\n\n  useCommand('OPEN_SCENE_PROPERTIES', true, {\n    handler: onOpenSceneProperties,\n  });\n\n  useCommand('OPEN_SCENE_VARIABLES', true, {\n    handler: onOpenSceneVariables,\n  });\n\n  useObjectsListCommands({\n    project,\n    layout,\n    onEditObject,\n    onEditObjectVariables,\n  });\n\n  useObjectGroupsListCommands({\n    project,\n    layout,\n    onEditObjectGroup,\n  });\n\n  useLayersListCommands({\n    layout,\n    onEditLayerEffects,\n    onEditLayer,\n  });\n\n  return null;\n};\n\nexport default UseSceneEditorCommands;\n","// @flow\nimport * as React from 'react';\nimport {\n  type AssetShortHeader,\n  isPixelArt,\n} from '../Utils/GDevelopServices/Asset';\nimport { getPixelatedImageRendering } from '../Utils/CssHelpers';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Text from '../UI/Text';\nimport { CorsAwareImage } from '../UI/CorsAwareImage';\nimport CheckeredBackground from '../ResourcesList/CheckeredBackground';\n\nconst paddingSize = 10;\nconst styles = {\n  previewContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  previewImage: {\n    position: 'relative',\n    objectFit: 'contain',\n    verticalAlign: 'middle',\n    pointerEvents: 'none',\n  },\n  previewImagePixelated: {\n    width: '100%',\n    imageRendering: getPixelatedImageRendering(),\n    padding: 15,\n  },\n  icon: {\n    color: '#fff',\n  },\n  cardContainer: {\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  titleContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: 48,\n    color: '#fff',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    backgroundColor: 'rgb(0,0,0,0.5)',\n  },\n  title: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n};\n\ntype Props = {|\n  size: number,\n  assetShortHeader: AssetShortHeader,\n  onOpenDetails: () => void,\n|};\n\nexport const AssetCard = ({ assetShortHeader, onOpenDetails, size }: Props) => {\n  return (\n    <ButtonBase onClick={onOpenDetails} focusRipple>\n      <div style={{ ...styles.cardContainer, width: size, height: size }}>\n        <div style={{ ...styles.previewContainer, width: size, height: size }}>\n          <CheckeredBackground />\n          <CorsAwareImage\n            key={assetShortHeader.previewImageUrls[0]}\n            style={{\n              maxWidth: 128 - 2 * paddingSize,\n              maxHeight: 128 - 2 * paddingSize,\n              ...styles.previewImage,\n              ...(isPixelArt(assetShortHeader)\n                ? styles.previewImagePixelated\n                : undefined),\n            }}\n            src={assetShortHeader.previewImageUrls[0]}\n            alt={assetShortHeader.name}\n          />\n        </div>\n        <div style={styles.titleContainer}>\n          <Text noMargin style={styles.title}>\n            {assetShortHeader.name}\n          </Text>\n          <Text noMargin style={styles.title} size=\"body2\">\n            {assetShortHeader.shortDescription}\n          </Text>\n        </div>\n      </div>\n    </ButtonBase>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport SearchBar, { useShouldAutofocusSearchbar } from '../UI/SearchBar';\nimport { Column, Line } from '../UI/Grid';\nimport Background from '../UI/Background';\nimport ScrollView from '../UI/ScrollView';\nimport { type AssetShortHeader } from '../Utils/GDevelopServices/Asset';\nimport { BoxSearchResults } from '../UI/Search/BoxSearchResults';\nimport { type SearchBarInterface } from '../UI/SearchBar';\nimport { FiltersChooser } from '../UI/Search/FiltersChooser';\nimport { AssetStoreContext } from './AssetStoreContext';\nimport { AssetCard } from './AssetCard';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nimport Subheader from '../UI/Subheader';\nimport { CategoryChooser } from '../UI/Search/CategoryChooser';\n\nconst styles = {\n  searchBar: {\n    // TODO: Can we put this in the search bar by default?\n    flexShrink: 0,\n  },\n};\n\ntype Props = {\n  project: gdProject,\n  objectsContainer: gdObjectsContainer,\n  events: gdEventsList,\n  onOpenDetails: AssetShortHeader => void,\n  focusOnMount?: boolean,\n};\n\nexport const AssetStore = ({\n  project,\n  objectsContainer,\n  events,\n  onOpenDetails,\n  focusOnMount,\n}: Props) => {\n  const {\n    filters,\n    searchResults,\n    error,\n    fetchAssetsAndFilters,\n    filtersState,\n    searchText,\n    setSearchText,\n  } = React.useContext(AssetStoreContext);\n\n  React.useEffect(\n    () => {\n      fetchAssetsAndFilters();\n    },\n    [fetchAssetsAndFilters]\n  );\n\n  const searchBar = React.useRef<?SearchBarInterface>(null);\n  const shouldAutofocusSearchbar = useShouldAutofocusSearchbar();\n\n  React.useEffect(\n    () => {\n      if (focusOnMount && shouldAutofocusSearchbar && searchBar.current) {\n        searchBar.current.focus();\n      }\n    },\n    [shouldAutofocusSearchbar, focusOnMount]\n  );\n\n  return (\n    <ResponsiveWindowMeasurer>\n      {windowWidth => (\n        <Column expand noMargin useFullHeight>\n          <SearchBar\n            value={searchText}\n            onChange={setSearchText}\n            onRequestSearch={() => {}}\n            style={styles.searchBar}\n            ref={searchBar}\n            id=\"asset-store-search-bar\"\n          />\n          <Line\n            expand\n            overflow={\n              'hidden' /* Somehow required on Chrome/Firefox to avoid children growing (but not on Safari) */\n            }\n          >\n            <Background\n              noFullHeight\n              noExpand\n              width={windowWidth === 'small' ? 150 : 250}\n            >\n              <ScrollView>\n                <Subheader>\n                  <Trans>Categories</Trans>\n                </Subheader>\n                <CategoryChooser\n                  allItemsLabel={<Trans>All assets</Trans>}\n                  allFilters={filters}\n                  filtersState={filtersState}\n                  error={error}\n                />\n                <Subheader>\n                  <Trans>Filters</Trans>\n                </Subheader>\n                <FiltersChooser\n                  allFilters={filters}\n                  filtersState={filtersState}\n                  error={error}\n                />\n              </ScrollView>\n            </Background>\n            <BoxSearchResults\n              baseSize={128}\n              onRetry={fetchAssetsAndFilters}\n              error={error}\n              searchItems={searchResults}\n              renderSearchItem={(assetShortHeader, size) => (\n                <AssetCard\n                  size={size}\n                  onOpenDetails={() => onOpenDetails(assetShortHeader)}\n                  assetShortHeader={assetShortHeader}\n                />\n              )}\n            />\n          </Line>\n        </Column>\n      )}\n    </ResponsiveWindowMeasurer>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Column } from '../UI/Grid';\nimport Text from '../UI/Text';\nimport Chip from '@material-ui/core/Chip';\nimport RaisedButton from '../UI/RaisedButton';\nimport {\n  type AssetShortHeader,\n  type Asset,\n  type Author,\n  getAsset,\n  isPixelArt,\n} from '../Utils/GDevelopServices/Asset';\nimport { getPixelatedImageRendering } from '../Utils/CssHelpers';\nimport LeftLoader from '../UI/LeftLoader';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport PlaceholderError from '../UI/PlaceholderError';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport Add from '@material-ui/icons/Add';\nimport { ResponsiveLineStackLayout } from '../UI/Layout';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport { CorsAwareImage } from '../UI/CorsAwareImage';\nimport { AssetStoreContext } from './AssetStoreContext';\nimport Link from '@material-ui/core/Link';\nimport Window from '../Utils/Window';\nimport CheckeredBackground from '../ResourcesList/CheckeredBackground';\n\nconst styles = {\n  previewImagePixelated: {\n    width: '100%',\n    imageRendering: getPixelatedImageRendering(),\n    padding: 15,\n  },\n  previewBackground: {\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n  },\n  verticalPreviewBackground: {\n    width: 250,\n  },\n  horizontalPreviewBackground: {\n    height: 170,\n  },\n  chip: {\n    marginBottom: 2,\n    marginRight: 2,\n  },\n  previewImage: {\n    position: 'relative',\n    maxWidth: '100%',\n    maxHeight: '100%',\n    verticalAlign: 'middle',\n    pointerEvents: 'none',\n    objectFit: 'contain',\n  },\n};\n\ntype Props = {|\n  project: gdProject,\n  layout: ?gdLayout,\n  objectsContainer: gdObjectsContainer,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n\n  assetShortHeader: AssetShortHeader,\n  onAdd: () => void,\n  onClose: () => void,\n  canInstall: boolean,\n  isBeingInstalled: boolean,\n|};\n\nexport const AssetDetails = ({\n  project,\n  layout,\n  objectsContainer,\n  resourceSources,\n  onChooseResource,\n  resourceExternalEditors,\n  assetShortHeader,\n  onAdd,\n  onClose,\n  canInstall,\n  isBeingInstalled,\n}: Props) => {\n  const { authors, licenses } = React.useContext(AssetStoreContext);\n  const [asset, setAsset] = React.useState<?Asset>(null);\n  const [error, setError] = React.useState<?Error>(null);\n  const loadAsset = React.useCallback(\n    () => {\n      (async () => {\n        try {\n          const loadedAsset = await getAsset(assetShortHeader);\n          setAsset(loadedAsset);\n        } catch (error) {\n          console.log('Error while loading asset:', error);\n          setError(error);\n        }\n      })();\n    },\n    [assetShortHeader]\n  );\n\n  React.useEffect(\n    () => {\n      loadAsset();\n    },\n    [loadAsset]\n  );\n\n  const canAddAsset = canInstall && !isBeingInstalled && !!asset;\n  const onAddAsset = React.useCallback(\n    () => {\n      if (canAddAsset) onAdd();\n    },\n    [onAdd, canAddAsset]\n  );\n\n  const assetAuthors: ?Array<Author> =\n    asset && authors\n      ? asset.authors\n          .map(authorName => {\n            return authors.find(({ name }) => name === authorName);\n          })\n          .filter(Boolean)\n      : [];\n  const assetLicense =\n    asset && licenses\n      ? licenses.find(({ name }) => name === asset.license)\n      : null;\n\n  return (\n    <Dialog\n      open\n      title={<Trans>Add an object from the store</Trans>}\n      onRequestClose={onClose}\n      actions={[\n        <FlatButton key=\"back\" label={<Trans>Back</Trans>} onClick={onClose} />,\n        <LeftLoader\n          isLoading={isBeingInstalled || (!asset && !error)}\n          key=\"install\"\n        >\n          <RaisedButton\n            primary\n            icon={<Add />}\n            label={<Trans>Add to the game</Trans>}\n            onClick={onAddAsset}\n            disabled={!canAddAsset}\n            id=\"add-asset-button\"\n          />\n        </LeftLoader>,\n      ]}\n      onApply={onAddAsset}\n      id={'asset-details-dialog'}\n    >\n      <Column expand noMargin>\n        <ResponsiveLineStackLayout noMargin>\n          <ResponsiveWindowMeasurer>\n            {windowWidth => (\n              <div\n                style={{\n                  ...styles.previewBackground,\n                  ...(windowWidth === 'small'\n                    ? styles.horizontalPreviewBackground\n                    : styles.verticalPreviewBackground),\n                }}\n              >\n                <CheckeredBackground />\n                <CorsAwareImage\n                  style={{\n                    ...styles.previewImage,\n                    ...(isPixelArt(assetShortHeader)\n                      ? styles.previewImagePixelated\n                      : undefined),\n                  }}\n                  src={assetShortHeader.previewImageUrls[0]}\n                  alt={assetShortHeader.name}\n                />\n              </div>\n            )}\n          </ResponsiveWindowMeasurer>\n          <Column expand>\n            <div>\n              <Text size=\"title\" displayInlineAsSpan>\n                {assetShortHeader.name}\n              </Text>{' '}\n              {assetShortHeader.shortDescription && (\n                <React.Fragment>\n                  -{' '}\n                  <Text size=\"body\" displayInlineAsSpan>\n                    {assetShortHeader.shortDescription}\n                  </Text>\n                </React.Fragment>\n              )}\n            </div>\n            <span>\n              {assetShortHeader.tags.map(tag => (\n                <Chip size=\"small\" style={styles.chip} label={tag} key={tag} />\n              ))}\n            </span>\n            {asset ? (\n              <React.Fragment>\n                <Text size=\"body\">\n                  <Trans>By:</Trans>{' '}\n                  {!!assetAuthors &&\n                    assetAuthors.map(author => {\n                      return (\n                        <Link\n                          key={author.name}\n                          component=\"button\"\n                          onClick={() => {\n                            Window.openExternalURL(author.website);\n                          }}\n                        >\n                          {author.name}\n                        </Link>\n                      );\n                    })}\n                </Text>\n                <Text size=\"body\">\n                  {!!assetLicense && (\n                    <Trans>\n                      License:{' '}\n                      {\n                        <Link\n                          component=\"button\"\n                          onClick={() => {\n                            Window.openExternalURL(assetLicense.website);\n                          }}\n                        >\n                          {assetLicense.name}\n                        </Link>\n                      }\n                    </Trans>\n                  )}\n                </Text>\n                <Text size=\"body\">{asset.description}</Text>\n              </React.Fragment>\n            ) : error ? (\n              <PlaceholderError onRetry={loadAsset}>\n                <Trans>\n                  Error while loading the asset. Verify your internet connection\n                  or try again later.\n                </Trans>\n              </PlaceholderError>\n            ) : (\n              <PlaceholderLoader />\n            )}\n          </Column>\n        </ResponsiveLineStackLayout>\n      </Column>\n    </Dialog>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport ListIcon from '../UI/ListIcon';\nimport Subheader from '../UI/Subheader';\nimport { List, ListItem } from '../UI/List';\nimport {\n  enumerateObjectTypes,\n  type EnumeratedObjectMetadata,\n} from '../ObjectsList/EnumerateObjects';\nimport HelpButton from '../UI/HelpButton';\nimport { Column } from '../UI/Grid';\nimport DismissableInfoBar from '../UI/Messages/DismissableInfoBar';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport { AssetStore } from '.';\nimport { type AssetShortHeader } from '../Utils/GDevelopServices/Asset';\nimport EventsFunctionsExtensionsContext from '../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport { installAsset } from './InstallAsset';\nimport { AssetDetails } from './AssetDetails';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport {\n  sendAssetAddedToProject,\n  sendAssetOpened,\n  sendNewObjectCreated,\n} from '../Utils/Analytics/EventSender';\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport { useResourceFetcher } from '../ProjectsStorage/ResourceFetcher';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport ScrollView from '../UI/ScrollView';\n\nconst ObjectListItem = ({\n  objectMetadata,\n  onClick,\n}: {|\n  objectMetadata: EnumeratedObjectMetadata,\n  onClick: () => void,\n|}) => {\n  if (objectMetadata.name === '') {\n    // Base object is an \"abstract\" object\n    return null;\n  }\n\n  return (\n    <ListItem\n      leftIcon={\n        <ListIcon\n          src={objectMetadata.iconFilename}\n          iconSize={40}\n          isGDevelopIcon\n        />\n      }\n      key={objectMetadata.name}\n      primaryText={objectMetadata.fullName}\n      secondaryText={objectMetadata.description}\n      secondaryTextLines={2}\n      onClick={onClick}\n    />\n  );\n};\n\ntype Props = {|\n  project: gdProject,\n  layout: ?gdLayout,\n  objectsContainer: gdObjectsContainer,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  events: gdEventsList,\n  onClose: () => void,\n  onCreateNewObject: (type: string) => void,\n  onObjectAddedFromAsset: gdObject => void,\n|};\n\nexport default function NewObjectDialog({\n  project,\n  layout,\n  objectsContainer,\n  resourceSources,\n  onChooseResource,\n  resourceExternalEditors,\n  events,\n  onClose,\n  onCreateNewObject,\n  onObjectAddedFromAsset,\n}: Props) {\n  const {\n    setNewObjectDialogDefaultTab,\n    getNewObjectDialogDefaultTab,\n  } = React.useContext(PreferencesContext);\n  const [assetWasInstalled, setAssetWasInstalled] = React.useState(false);\n  const [openedAsset, setOpenedAsset] = React.useState<null | AssetShortHeader>(\n    null\n  );\n\n  const [currentTab, setCurrentTab] = React.useState(\n    getNewObjectDialogDefaultTab()\n  );\n  const allObjectMetadata = React.useMemo(() => enumerateObjectTypes(project), [\n    project,\n  ]);\n  const objectsByCategory: {\n    [string]: Array<EnumeratedObjectMetadata>,\n  } = React.useMemo(\n    () => {\n      const objectsByCategory = {};\n      allObjectMetadata.forEach(objectMetadata => {\n        const category = objectMetadata.categoryFullName;\n        objectsByCategory[category] = [\n          ...(objectsByCategory[category] || []),\n          objectMetadata,\n        ];\n      });\n      return objectsByCategory;\n    },\n    [allObjectMetadata]\n  );\n\n  const resourcesFetcher = useResourceFetcher();\n  React.useEffect(() => setNewObjectDialogDefaultTab(currentTab), [\n    setNewObjectDialogDefaultTab,\n    currentTab,\n  ]);\n\n  const [\n    assetBeingInstalled,\n    setAssetBeingInstalled,\n  ] = React.useState<?AssetShortHeader>(null);\n  const eventsFunctionsExtensionsState = React.useContext(\n    EventsFunctionsExtensionsContext\n  );\n  const onInstallAsset = React.useCallback(\n    (assetShortHeader: AssetShortHeader) => {\n      setAssetBeingInstalled(assetShortHeader);\n      (async () => {\n        try {\n          const installOutput = await installAsset({\n            assetShortHeader,\n            eventsFunctionsExtensionsState,\n            project,\n            objectsContainer,\n            events,\n          });\n          sendAssetAddedToProject({\n            id: assetShortHeader.id,\n            name: assetShortHeader.name,\n          });\n          console.log('Asset successfully installed.');\n\n          installOutput.createdObjects.forEach(object => {\n            onObjectAddedFromAsset(object);\n          });\n\n          await resourcesFetcher.ensureResourcesAreFetched(project);\n\n          setOpenedAsset(null);\n          setAssetWasInstalled(true);\n        } catch (error) {\n          console.error('Error while installing the asset:', error);\n          showErrorBox({\n            message: `There was an error while installing the asset \"${\n              assetShortHeader.name\n            }\". Verify your internet connection or try again later.`,\n            rawError: error,\n            errorId: 'install-asset-error',\n          });\n        }\n\n        setAssetBeingInstalled(null);\n      })();\n    },\n    [\n      resourcesFetcher,\n      eventsFunctionsExtensionsState,\n      project,\n      objectsContainer,\n      events,\n      onObjectAddedFromAsset,\n    ]\n  );\n\n  return (\n    <Dialog\n      title={<Trans>Add a new object</Trans>}\n      secondaryActions={[<HelpButton helpPagePath=\"/objects\" key=\"help\" />]}\n      actions={[\n        <FlatButton\n          key=\"close\"\n          label={<Trans>Close</Trans>}\n          primary={false}\n          onClick={onClose}\n          id=\"close-button\"\n        />,\n      ]}\n      onRequestClose={onClose}\n      cannotBeDismissed={false}\n      open\n      flexBody\n      noMargin\n      fullHeight\n      id=\"new-object-dialog\"\n    >\n      <Column noMargin expand>\n        <Tabs value={currentTab} onChange={setCurrentTab}>\n          <Tab label={<Trans>Search Asset Store</Trans>} value=\"asset-store\" />\n          <Tab\n            label={<Trans>New object from scratch</Trans>}\n            value=\"new-object\"\n          />\n        </Tabs>\n        {currentTab === 'asset-store' && (\n          <AssetStore\n            focusOnMount\n            project={project}\n            objectsContainer={objectsContainer}\n            events={events}\n            onOpenDetails={assetShortHeader => {\n              setOpenedAsset(assetShortHeader);\n              sendAssetOpened({\n                id: assetShortHeader.id,\n                name: assetShortHeader.name,\n              });\n            }}\n          />\n        )}\n        {currentTab === 'new-object' && (\n          <ScrollView>\n            <List>\n              {Object.keys(objectsByCategory).map(category => {\n                const categoryObjectMetadata = objectsByCategory[category];\n                return (\n                  <React.Fragment key={category}>\n                    <Subheader>{category}</Subheader>\n                    {categoryObjectMetadata.map(objectMetadata => (\n                      <ObjectListItem\n                        key={objectMetadata.name}\n                        objectMetadata={objectMetadata}\n                        onClick={() => {\n                          sendNewObjectCreated(objectMetadata.name);\n                          onCreateNewObject(objectMetadata.name);\n                        }}\n                      />\n                    ))}\n                  </React.Fragment>\n                );\n              })}\n            </List>\n          </ScrollView>\n        )}\n      </Column>\n      {openedAsset !== null ? (\n        <AssetDetails\n          project={project}\n          layout={layout}\n          objectsContainer={objectsContainer}\n          resourceSources={resourceSources}\n          onChooseResource={onChooseResource}\n          resourceExternalEditors={resourceExternalEditors}\n          assetShortHeader={openedAsset}\n          onAdd={() => onInstallAsset(openedAsset)}\n          onClose={() => setOpenedAsset(null)}\n          canInstall={!assetBeingInstalled}\n          isBeingInstalled={\n            !!assetBeingInstalled && assetBeingInstalled.id === openedAsset.id\n          }\n        />\n      ) : null}\n      {resourcesFetcher.renderResourceFetcherDialog()}\n      <DismissableInfoBar\n        identifier=\"asset-installed-explanation\"\n        message={\n          <Trans>\n            The object was added to the list of objects. You can now use it on\n            the scene, in events, and customize it.\n          </Trans>\n        }\n        show={assetWasInstalled}\n      />\n    </Dialog>\n  );\n}\n","// @flow\nimport React, { Component } from 'react';\nimport InstructionOrExpressionSelector from './index';\nimport {\n  createTree,\n  type InstructionTreeNode,\n} from '../../../InstructionOrExpression/CreateTree';\nimport { enumerateAllInstructions } from '../../../InstructionOrExpression/EnumerateInstructions';\nimport {\n  type EnumeratedInstructionMetadata,\n  filterEnumeratedInstructionOrExpressionMetadataByScope,\n} from '../../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\nimport { type EventsScope } from '../../../InstructionOrExpression/EventsScope.flow';\n\ntype Props = {|\n  isCondition: boolean,\n  focusOnMount?: boolean,\n  selectedType: string,\n  onChoose: (type: string, EnumeratedInstructionMetadata) => void,\n  scope: EventsScope,\n|};\n\nconst style = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n};\n\nexport default class InstructionSelector extends Component<Props, {||}> {\n  instructionsInfo: Array<EnumeratedInstructionMetadata> = filterEnumeratedInstructionOrExpressionMetadataByScope(\n    enumerateAllInstructions(this.props.isCondition),\n    this.props.scope\n  );\n  instructionsInfoTree: InstructionTreeNode = createTree(this.instructionsInfo);\n\n  render() {\n    const { isCondition, scope, ...otherProps } = this.props;\n    return (\n      <InstructionOrExpressionSelector\n        style={style}\n        instructionsInfo={this.instructionsInfo}\n        instructionsInfoTree={this.instructionsInfoTree}\n        iconSize={24}\n        useSubheaders\n        {...otherProps}\n      />\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport InstructionSelector from './InstructionOrExpressionSelector/InstructionSelector.js';\nimport InstructionParametersEditor from './InstructionParametersEditor.js';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../../ResourcesList/ResourceExternalEditor.flow';\nimport { type EventsScope } from '../../InstructionOrExpression/EventsScope.flow';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 1,\n  },\n  parametersEditor: {\n    flex: 2,\n    display: 'flex',\n    zIndex: 1, // Put the Paper shadow on the type selector\n  },\n};\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  instruction: gdInstruction,\n  isCondition: boolean,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  style?: Object,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n  anchorEl?: any, // Unused\n|};\ntype State = {||};\n\nexport default class InstructionEditor extends React.Component<Props, State> {\n  _instructionParametersEditor: ?InstructionParametersEditor;\n\n  chooseType = (type: string) => {\n    const { instruction } = this.props;\n    instruction.setType(type);\n    this.forceUpdate(() => {\n      if (this._instructionParametersEditor) {\n        this._instructionParametersEditor.focus();\n      }\n    });\n  };\n\n  render() {\n    const {\n      instruction,\n      isCondition,\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      scope,\n    } = this.props;\n\n    return (\n      <div style={styles.container}>\n        <InstructionSelector\n          isCondition={isCondition}\n          selectedType={instruction.getType()}\n          onChoose={this.chooseType}\n          focusOnMount={!instruction.getType()}\n          scope={scope}\n        />\n        <Paper style={styles.parametersEditor} square elevation={2}>\n          <InstructionParametersEditor\n            project={project}\n            scope={scope}\n            globalObjectsContainer={globalObjectsContainer}\n            objectsContainer={objectsContainer}\n            isCondition={isCondition}\n            instruction={instruction}\n            resourceSources={this.props.resourceSources}\n            onChooseResource={this.props.onChooseResource}\n            resourceExternalEditors={this.props.resourceExternalEditors}\n            openInstructionOrExpression={this.props.openInstructionOrExpression}\n            ref={instructionParametersEditor =>\n              (this._instructionParametersEditor = instructionParametersEditor)\n            }\n            focusOnMount={!!instruction.getType()}\n          />\n        </Paper>\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport InstructionEditor from './index.js';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource';\nimport { type ResourceExternalEditor } from '../../ResourcesList/ResourceExternalEditor.flow';\nimport { type EventsScope } from '../../InstructionOrExpression/EventsScope.flow';\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  instruction: gdInstruction,\n  isCondition: boolean,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  style?: Object,\n  isNewInstruction: boolean,\n  onCancel: () => void,\n  onSubmit: () => void,\n  open: boolean,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n  anchorEl?: any, // Unused\n  canPasteInstructions: boolean, // Unused\n  onPasteInstructions: () => void, // Unused\n|};\ntype State = {||};\n\nexport default class InstructionEditorDialog extends React.Component<\n  Props,\n  State\n> {\n  render() {\n    const {\n      isNewInstruction,\n      onCancel,\n      onSubmit,\n      open,\n      canPasteInstructions,\n      onPasteInstructions,\n      ...otherProps\n    } = this.props;\n    const actions = [\n      <FlatButton\n        key=\"cancel\"\n        label={<Trans>Cancel</Trans>}\n        primary={false}\n        onClick={onCancel}\n      />,\n      <FlatButton\n        key=\"ok\"\n        label={<Trans>Ok</Trans>}\n        primary={true}\n        keyboardFocused={false}\n        onClick={onSubmit}\n      />,\n    ];\n\n    return (\n      <Dialog\n        onApply={onSubmit}\n        actions={actions}\n        open={open}\n        cannotBeDismissed={true}\n        onRequestClose={onCancel}\n        maxWidth={false}\n        flexBody\n        noMargin\n      >\n        <InstructionEditor {...otherProps} />\n      </Dialog>\n    );\n  }\n}\n","//@flow\nimport React from 'react';\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport TextField from '../../UI/TextField';\nimport { ColumnStackLayout, TextFieldWithButtonLayout } from '../../UI/Layout';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport RaisedButton from '../../UI/RaisedButton';\nimport FlatButton from '../../UI/FlatButton';\nimport { ResourceStore } from '../../AssetStore/ResourceStore';\nimport Dialog from '../../UI/Dialog';\n\nimport useForceUpdate from '../../Utils/UseForceUpdate';\nimport {\n  getHelpLink,\n  isRelativePathToDocumentationRoot,\n  isDocumentationAbsoluteUrl,\n} from '../../Utils/HelpLink';\nimport axios from 'axios';\nimport { useIsMounted } from '../../Utils/UseIsMounted';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport { UsersAutocomplete } from '../../Utils/UsersAutocomplete';\nimport SemiControlledAutoComplete from '../../UI/SemiControlledAutoComplete';\n\nconst downloadSvgAsBase64 = async (url: string): Promise<string> => {\n  try {\n    const response = await axios.get(url, { responseType: 'arraybuffer' });\n\n    const image = btoa(\n      new Uint8Array(response.data).reduce(\n        (data, byte) => data + String.fromCharCode(byte),\n        ''\n      )\n    );\n    if (image.length > 100 * 1024) {\n      throw new Error(\n        `Icon is too big (size after base64 conversion: ${image.length})`\n      );\n    }\n\n    const contentType = response.headers\n      ? response.headers['content-type'].toLowerCase()\n      : '';\n    if (contentType !== 'image/svg+xml')\n      throw new Error(\n        `Wrong content type. Got: \"${contentType}\", expected \"image/svg+xml\"`\n      );\n\n    return `data:${contentType};base64,${image}`;\n  } catch (err) {\n    console.error('Unable to import the icon.', err);\n    throw err;\n  }\n};\n\ntype HelpPathTextFieldProps = {|\n  i18n: I18nType,\n  helpPath: string,\n  onChangeHelpPath: string => void,\n|};\n\nconst HelpPathTextField = ({\n  i18n,\n  helpPath,\n  onChangeHelpPath,\n}: HelpPathTextFieldProps) => {\n  const isAbsoluteUrl = isDocumentationAbsoluteUrl(helpPath);\n  const isRelativePath = isRelativePathToDocumentationRoot(helpPath);\n  const helperText = helpPath\n    ? (isRelativePath\n        ? i18n._(\n            t`This is a relative path that will open in the GDevelop wiki.`\n          )\n        : i18n._(t`This is link to a webpage.`)) +\n      ` [${i18n._(t`Click here to test the link.`)}](${getHelpLink(helpPath)})`\n    : i18n._(\n        t`This can either be a URL to a web page, or a path starting with a slash that will be opened in the GDevelop wiki. Leave empty if there is no help page, although it's recommended you eventually write one if you distribute the extension.`\n      );\n\n  return (\n    <TextField\n      floatingLabelText={<Trans>Help page URL</Trans>}\n      value={helpPath}\n      onChange={(e, text) => {\n        onChangeHelpPath(text);\n      }}\n      errorText={\n        !!helpPath && !isAbsoluteUrl && !isRelativePath ? (\n          <Trans>\n            This is not a URL starting with \"http://\" or \"https://\".\n          </Trans>\n        ) : null\n      }\n      helperMarkdownText={helperText}\n      fullWidth\n    />\n  );\n};\n\ntype Props = {|\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  onLoadChange: (isLoading: boolean) => void,\n  isLoading: boolean,\n|};\n\nexport const ExtensionOptionsEditor = ({\n  eventsFunctionsExtension,\n  onLoadChange,\n  isLoading,\n}: Props) => {\n  const forceUpdate = useForceUpdate();\n  const [resourceStoreOpen, setResourceStoreOpen] = React.useState(false);\n  const isMounted = useIsMounted();\n\n  return (\n    <I18n>\n      {({ i18n }: { i18n: I18nType }) => (\n        <ColumnStackLayout noMargin>\n          <TextField\n            floatingLabelText={<Trans>Name</Trans>}\n            value={eventsFunctionsExtension.getName()}\n            disabled\n            fullWidth\n          />\n          <TextFieldWithButtonLayout\n            renderButton={style => (\n              <RaisedButton\n                onClick={() => {\n                  setResourceStoreOpen(true);\n                }}\n                primary\n                label={<Trans>Choose</Trans>}\n                disabled={isLoading}\n                style={style}\n              />\n            )}\n            renderTextField={() => (\n              <SemiControlledTextField\n                floatingLabelText={<Trans>Icon URL</Trans>}\n                value={eventsFunctionsExtension.getPreviewIconUrl()}\n                onChange={text => {\n                  eventsFunctionsExtension.setPreviewIconUrl(text);\n                }}\n                disabled\n                fullWidth\n              />\n            )}\n          />\n          <TextField\n            floatingLabelText={<Trans>Name displayed in editor</Trans>}\n            value={eventsFunctionsExtension.getFullName()}\n            onChange={(e, text) => {\n              eventsFunctionsExtension.setFullName(text);\n              forceUpdate();\n            }}\n            fullWidth\n          />\n          <TextField\n            floatingLabelText={<Trans>Short description</Trans>}\n            value={eventsFunctionsExtension.getShortDescription()}\n            onChange={(e, text) => {\n              eventsFunctionsExtension.setShortDescription(text);\n              forceUpdate();\n            }}\n            multiline\n            fullWidth\n            rows={2}\n            rowsMax={2}\n          />\n          <TextField\n            floatingLabelText={<Trans>Description (markdown supported)</Trans>}\n            value={eventsFunctionsExtension.getDescription()}\n            onChange={(e, text) => {\n              eventsFunctionsExtension.setDescription(text);\n              forceUpdate();\n            }}\n            multiline\n            fullWidth\n            rows={5}\n            rowsMax={15}\n          />\n          <TextField\n            floatingLabelText={<Trans>Version</Trans>}\n            value={eventsFunctionsExtension.getVersion()}\n            onChange={(e, text) => {\n              eventsFunctionsExtension.setVersion(text);\n              forceUpdate();\n            }}\n            fullWidth\n          />\n          <SemiControlledAutoComplete\n            floatingLabelText={<Trans>Category (shown in the editor)</Trans>}\n            fullWidth\n            value={eventsFunctionsExtension.getCategory()}\n            onChange={category => {\n              eventsFunctionsExtension.setCategory(category);\n              forceUpdate();\n            }}\n            dataSource={[\n              {\n                text: '',\n                value: 'General',\n              },\n              {\n                text: 'Ads',\n                value: 'Ads',\n              },\n              {\n                text: 'Audio',\n                value: 'Audio',\n              },\n              {\n                text: 'Advanced',\n                value: 'Advanced',\n              },\n              {\n                text: 'Device',\n                value: 'Device',\n              },\n              {\n                text: 'Input',\n                value: 'Input',\n              },\n              {\n                text: 'Network',\n                value: 'Network',\n              },\n              {\n                text: 'Third-party',\n                value: 'Third-party',\n              },\n            ]}\n          />\n          <SemiControlledTextField\n            floatingLabelText={<Trans>Tags (comma separated)</Trans>}\n            value={eventsFunctionsExtension\n              .getTags()\n              .toJSArray()\n              .join(', ')}\n            onChange={text => {\n              const tags = eventsFunctionsExtension.getTags();\n              tags.clear();\n              text\n                .split(',')\n                .map(tag => tag.trim())\n                .filter(Boolean)\n                .forEach(tag => {\n                  tags.push_back(tag);\n                });\n              forceUpdate();\n            }}\n            fullWidth\n          />\n          <HelpPathTextField\n            i18n={i18n}\n            helpPath={eventsFunctionsExtension.getHelpPath()}\n            onChangeHelpPath={helpPath => {\n              eventsFunctionsExtension.setHelpPath(helpPath);\n              forceUpdate();\n            }}\n          />\n          <UsersAutocomplete\n            userIds={eventsFunctionsExtension.getAuthorIds().toJSArray()}\n            onChange={userIds => {\n              const projectAuthorIds = eventsFunctionsExtension.getAuthorIds();\n              projectAuthorIds.clear();\n              userIds.forEach(userId => projectAuthorIds.push_back(userId));\n            }}\n            floatingLabelText={<Trans>Authors</Trans>}\n            helperText={\n              <Trans>\n                Select the usernames of the contributors to this extension. They\n                will be displayed in the order selected. Do not see your name?\n                Go to the Profile section and create an account!\n              </Trans>\n            }\n          />\n          {resourceStoreOpen && (\n            <Dialog\n              title={<Trans>Choose an icon for the extension</Trans>}\n              actions={[\n                <FlatButton\n                  key=\"cancel\"\n                  label={<Trans>Cancel</Trans>}\n                  primary={false}\n                  onClick={() => {\n                    setResourceStoreOpen(false);\n                  }}\n                />,\n              ]}\n              cannotBeDismissed={false}\n              open\n              noMargin\n            >\n              <ResourceStore\n                onChoose={resource => {\n                  setResourceStoreOpen(false);\n                  onLoadChange(true);\n                  downloadSvgAsBase64(resource.url)\n                    .then(\n                      base64Svg => {\n                        if (!isMounted.current) return;\n\n                        eventsFunctionsExtension.setPreviewIconUrl(\n                          resource.url\n                        );\n                        eventsFunctionsExtension.setIconUrl(base64Svg);\n                      },\n                      rawError => {\n                        if (!isMounted.current) return;\n\n                        showErrorBox({\n                          message: i18n._(\n                            t`Unable to download the icon. Verify your internet connection or try again later.`\n                          ),\n                          rawError,\n                          errorId: 'icon-download-error',\n                        });\n                      }\n                    )\n                    .then(() => {\n                      if (!isMounted.current) return;\n\n                      onLoadChange(false);\n                    });\n                }}\n                resourceKind={'svg'}\n              />\n            </Dialog>\n          )}\n        </ColumnStackLayout>\n      )}\n    </I18n>\n  );\n};\n","//@flow\nimport React from 'react';\nimport { Trans, t } from '@lingui/macro';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport {\n  Table,\n  TableRow,\n  TableBody,\n  TableRowColumn,\n  TableHeader,\n  TableHeaderColumn,\n} from '../../UI/Table';\nimport Paper from '@material-ui/core/Paper';\nimport RaisedButton from '../../UI/RaisedButton';\nimport IconButton from '../../UI/IconButton';\nimport Add from '@material-ui/icons/Add';\nimport Delete from '@material-ui/icons/Delete';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\nimport { Line, Column } from '../../UI/Grid';\n\nimport { mapVector } from '../../Utils/MapFor';\nimport newNameGenerator from '../../Utils/NewNameGenerator';\nimport useForceUpdate from '../../Utils/UseForceUpdate';\nimport BackgroundText from '../../UI/BackgroundText';\nimport { showWarningBox } from '../../UI/Messages/MessageBox';\n\nconst checkNameExists = (\n  name: string,\n  deps: gdVectorDependencyMetadata\n): boolean => {\n  for (let i = 0; i < deps.size(); i++)\n    if (deps.at(i).getName() === name) return true;\n  return false;\n};\n\ntype Props = {| eventsFunctionsExtension: gdEventsFunctionsExtension |};\n\nexport const ExtensionDependenciesEditor = ({\n  eventsFunctionsExtension,\n}: Props) => {\n  const deps = eventsFunctionsExtension.getAllDependencies();\n  const forceUpdate = useForceUpdate();\n\n  const addDependency = () => {\n    eventsFunctionsExtension\n      .addDependency()\n      .setName(\n        newNameGenerator('New Dependency', newName =>\n          checkNameExists(newName, deps)\n        )\n      )\n      .setExportName('my-dependency')\n      .setVersion('1.0.0')\n      .setDependencyType('cordova');\n    forceUpdate();\n  };\n\n  return (\n    <Column>\n      <Line expand>\n        <TableContainer\n          component={({ children }) => (\n            <Paper elevation={4} style={{ minWidth: '100%' }}>\n              {children}\n            </Paper>\n          )}\n        >\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHeaderColumn>\n                  <Trans>Name</Trans>\n                </TableHeaderColumn>\n                <TableHeaderColumn>\n                  <Trans>Export name</Trans>\n                </TableHeaderColumn>\n                <TableHeaderColumn>\n                  <Trans>Version</Trans>\n                </TableHeaderColumn>\n                <TableHeaderColumn>\n                  <Trans>Dependency type</Trans>\n                </TableHeaderColumn>\n                <TableHeaderColumn>\n                  <Trans>Action</Trans>\n                </TableHeaderColumn>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {// $FlowFixMe - unsure why Flow complains about TableRow.\n              mapVector<gdDependencyMetadata, TableRow>(\n                eventsFunctionsExtension.getAllDependencies(),\n                (dependency, index) => (\n                  // $FlowFixMe - unsure why Flow complains about TableRow.\n                  <TableRow key={dependency.getName()}>\n                    <TableRowColumn>\n                      <SemiControlledTextField\n                        commitOnBlur\n                        value={dependency.getName()}\n                        onChange={newName => {\n                          if (newName === dependency.getName()) return;\n\n                          if (checkNameExists(newName, deps)) {\n                            showWarningBox(\n                              `This name is already in use! Please use a unique name.`,\n                              { delayToNextTick: true }\n                            );\n                          } else {\n                            dependency.setName(newName);\n                            forceUpdate();\n                          }\n                        }}\n                        margin=\"none\"\n                      />\n                    </TableRowColumn>\n                    <TableRowColumn>\n                      <SemiControlledTextField\n                        commitOnBlur\n                        value={dependency.getExportName()}\n                        onChange={newExportName => {\n                          if (newExportName === dependency.getExportName())\n                            return;\n\n                          dependency.setExportName(newExportName);\n                          forceUpdate();\n                        }}\n                        margin=\"none\"\n                      />\n                    </TableRowColumn>\n                    <TableRowColumn>\n                      <SemiControlledTextField\n                        commitOnBlur\n                        value={dependency.getVersion()}\n                        onChange={newVersion => {\n                          if (newVersion === dependency.getVersion()) return;\n\n                          dependency.setVersion(newVersion);\n                          forceUpdate();\n                        }}\n                        margin=\"none\"\n                      />\n                    </TableRowColumn>\n                    <TableRowColumn>\n                      <SelectField\n                        value={dependency.getDependencyType()}\n                        onChange={(_, __, newType) => {\n                          if (newType === dependency.getDependencyType())\n                            return;\n\n                          dependency.setDependencyType(newType);\n                          forceUpdate();\n                        }}\n                        margin=\"none\"\n                      >\n                        <SelectOption value=\"npm\" primaryText={t`NPM`} />\n                        <SelectOption\n                          value=\"cordova\"\n                          primaryText={t`Cordova`}\n                        />\n                      </SelectField>\n                    </TableRowColumn>\n                    <TableRowColumn>\n                      <IconButton\n                        tooltip={t`Delete`}\n                        onClick={() => {\n                          eventsFunctionsExtension.removeDependencyAt(index);\n                          forceUpdate();\n                        }}\n                        size=\"small\"\n                      >\n                        <Delete />\n                      </IconButton>\n                    </TableRowColumn>\n                  </TableRow>\n                )\n              )}\n            </TableBody>\n          </Table>\n          <Column expand>\n            <Line justifyContent=\"flex-end\">\n              <RaisedButton\n                primary\n                icon={<Add />}\n                label={<Trans>Add</Trans>}\n                onClick={addDependency}\n              />\n            </Line>\n          </Column>\n        </TableContainer>\n      </Line>\n      <Line>\n        <BackgroundText>\n          <Trans>\n            Dependencies allow to add additional libraries in the exported\n            games. NPM dependencies will be included for Electron builds\n            (Windows, macOS, Linux) and Cordova dependencies will be included\n            for Cordova builds (Android, iOS). Note that this is intended for\n            usage in JavaScript events only. If you are only using standard\n            events, you should not worry about this.\n          </Trans>\n        </BackgroundText>\n      </Line>\n    </Column>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport CloudUpload from '@material-ui/icons/CloudUpload';\nimport { Column, Line } from '../../UI/Grid';\nimport HelpButton from '../../UI/HelpButton';\nimport EventsFunctionsExtensionsContext, {\n  type EventsFunctionsExtensionsState,\n} from '../../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport RaisedButton from '../../UI/RaisedButton';\nimport Window from '../../Utils/Window';\nimport Text from '../../UI/Text';\nimport { ExtensionOptionsEditor } from './ExtensionOptionsEditor';\nimport { Tab, Tabs } from '../../UI/Tabs';\nimport { ExtensionDependenciesEditor } from './ExtensionDependenciesEditor';\n\nconst exportExtension = (\n  eventsFunctionsExtensionsState: EventsFunctionsExtensionsState,\n  eventsFunctionsExtension: gdEventsFunctionsExtension\n) => {\n  const eventsFunctionsExtensionWriter = eventsFunctionsExtensionsState.getEventsFunctionsExtensionWriter();\n  if (!eventsFunctionsExtensionWriter)\n    return Promise.reject(new Error('Not supported'));\n\n  return eventsFunctionsExtensionWriter\n    .chooseEventsFunctionExtensionFile(eventsFunctionsExtension.getName())\n    .then(pathOrUrl => {\n      if (!pathOrUrl) return;\n\n      eventsFunctionsExtensionWriter\n        .writeEventsFunctionsExtension(eventsFunctionsExtension, pathOrUrl)\n        .then();\n    });\n};\n\nconst openGitHubIssue = () => {\n  const body = `\n**⚠️ Please edit and complete this before submitting your extension:**\n\n## Describe the extension\nA clear and concise description of what the extension is, how useful it is.\n\n## Checklist\n\n- [ ] Extension has a proper name and description.\n- [ ] Extension has tags (for example: \"platform, brick, breakable\").\n- [ ] All behaviors have a description.\n- [ ] All functions (actions, conditions, expressions) have descriptions.\n- [ ] I confirm that this extension can be intergrated to this GitHub repository, distributed and MIT licensed.\n\n## Extension file\n\nFinally, attach the .json file of your extension here.\n\nYou also may have to create an account on GitHub before posting.\nIf your extension is high quality and useful, it will be added to the list of GDevelop community extensions.\nWhen you're ready, remove this last paragraph and click on \"Submit new issue\". Thanks 🙌`;\n  Window.openExternalURL(\n    `https://github.com/4ian/GDevelop-extensions/issues/new?body=${encodeURIComponent(\n      body\n    )}&title=New%20extension`\n  );\n};\n\ntype TabName = 'options' | 'dependencies';\n\ntype Props = {|\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  onClose: () => void,\n  open: boolean,\n|};\n\nexport default function OptionsEditorDialog({\n  eventsFunctionsExtension,\n  onClose,\n  open,\n}: Props) {\n  const [currentTab, setCurrentTab] = React.useState<TabName>('options');\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [exportDialogOpen, setExportDialogOpen] = React.useState(false);\n\n  const eventsFunctionsExtensionsState = React.useContext(\n    EventsFunctionsExtensionsContext\n  );\n  const eventsFunctionsExtensionWriter = eventsFunctionsExtensionsState.getEventsFunctionsExtensionWriter();\n\n  return (\n    <Dialog\n      secondaryActions={[\n        <HelpButton key=\"help\" helpPagePath=\"/extensions/create\" />,\n        eventsFunctionsExtensionWriter ? (\n          <FlatButton\n            icon={<CloudUpload />}\n            key=\"export\"\n            label={<Trans>Export extension</Trans>}\n            onClick={() => {\n              setExportDialogOpen(true);\n            }}\n            disabled={isLoading}\n          />\n        ) : null,\n      ]}\n      actions={[\n        <FlatButton\n          label={<Trans>Close</Trans>}\n          primary={true}\n          keyboardFocused={true}\n          onClick={() => onClose()}\n          disabled={isLoading}\n          key={'close'}\n        />,\n      ]}\n      cannotBeDismissed={true}\n      open={open}\n      noTitleMargin\n      title={\n        <Tabs value={currentTab} onChange={setCurrentTab}>\n          <Tab label={<Trans>Options</Trans>} value=\"options\" />\n          <Tab label={<Trans>Dependencies</Trans>} value=\"dependencies\" />\n        </Tabs>\n      }\n      onRequestClose={isLoading ? () => {} : onClose}\n    >\n      {currentTab === 'options' && (\n        <ExtensionOptionsEditor\n          eventsFunctionsExtension={eventsFunctionsExtension}\n          onLoadChange={setIsLoading}\n          isLoading={isLoading}\n        />\n      )}\n      {currentTab === 'dependencies' && (\n        <ExtensionDependenciesEditor\n          eventsFunctionsExtension={eventsFunctionsExtension}\n        />\n      )}\n      {exportDialogOpen && (\n        <Dialog\n          secondaryActions={[\n            <HelpButton key=\"help\" helpPagePath=\"/extensions/share\" />,\n          ]}\n          actions={[\n            <FlatButton\n              label={<Trans>Close</Trans>}\n              keyboardFocused={true}\n              onClick={() => {\n                setExportDialogOpen(false);\n              }}\n              key={'close'}\n            />,\n          ]}\n          open\n          cannotBeDismissed={false}\n          onRequestClose={() => {\n            setExportDialogOpen(false);\n          }}\n        >\n          <Column expand>\n            <Line>\n              <Text>\n                <Trans>\n                  You can export the extension to a file to easily import it in\n                  another project. If your extension is providing useful and\n                  reusable functions or behaviors, consider sharing it with the\n                  GDevelop community!\n                </Trans>\n              </Text>\n            </Line>\n            <Line>\n              <RaisedButton\n                icon={<CloudUpload />}\n                primary\n                label={<Trans>Export to a file</Trans>}\n                onClick={() => {\n                  exportExtension(\n                    eventsFunctionsExtensionsState,\n                    eventsFunctionsExtension\n                  );\n                }}\n              />\n              <FlatButton\n                label={<Trans>Submit extension to the community</Trans>}\n                onClick={openGitHubIssue}\n              />\n            </Line>\n          </Column>\n        </Dialog>\n      )}\n    </Dialog>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport CheckeredBackground from '../CheckeredBackground';\n\nconst styles = {\n  previewContainer: {\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 200,\n  },\n  iconContainer: {\n    display: 'flex',\n    flex: 1,\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n  },\n  icon: { width: 60, height: 60 },\n};\n\ntype Props = {|\n  renderIcon: ({| style: Object |}) => React.Node,\n|};\n\n/**\n * Display a generic container to display an icon.\n */\nexport default ({ renderIcon }: Props) => (\n  <div style={styles.previewContainer}>\n    <CheckeredBackground />\n    <div style={styles.iconContainer}>{renderIcon({ style: styles.icon })}</div>\n  </div>\n);\n","// @flow\nimport * as React from 'react';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type ResourceKind } from '../ResourceSource';\nimport ImagePreview from './ImagePreview';\nimport GenericIconPreview from './GenericIconPreview';\nimport Audiotrack from '@material-ui/icons/Audiotrack';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport VideoLibrary from '@material-ui/icons/VideoLibrary';\nimport FontDownload from '@material-ui/icons/FontDownload';\n\ntype Props = {|\n  project: gdProject,\n  resourceName: string,\n  resourcePath?: string,\n  resourcesLoader: typeof ResourcesLoader,\n  onSize?: (number, number) => void,\n|};\n\ntype State = {|\n  resourceKind: ?ResourceKind,\n|};\n\n/**\n * Display the right preview for any given resource of a project\n */\nexport default class ResourcePreview extends React.PureComponent<Props, State> {\n  state = this._loadFrom(this.props);\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      newProps.resourceName !== this.props.resourceName ||\n      newProps.project !== this.props.project ||\n      newProps.resourcePath !== this.props.resourcePath\n    ) {\n      this.setState(this._loadFrom(newProps));\n    }\n  }\n\n  _loadFrom(props: Props): State {\n    const { project, resourceName } = props;\n    const resourcesManager = project.getResourcesManager();\n    const resourceKind = resourcesManager.hasResource(resourceName)\n      ? resourcesManager.getResource(resourceName).getKind()\n      : null;\n\n    return {\n      resourceKind,\n    };\n  }\n\n  render() {\n    const { resourceKind } = this.state;\n\n    switch (resourceKind) {\n      case 'image':\n        return (\n          <ImagePreview\n            project={this.props.project}\n            resourceName={this.props.resourceName}\n            resourcesLoader={this.props.resourcesLoader}\n            onSize={this.props.onSize}\n            resourcePath={this.props.resourcePath}\n          />\n        );\n      case 'audio':\n        return (\n          <GenericIconPreview renderIcon={props => <Audiotrack {...props} />} />\n        );\n      case 'json':\n        return (\n          <GenericIconPreview\n            renderIcon={props => <InsertDriveFile {...props} />}\n          />\n        );\n      case 'video':\n        return (\n          <GenericIconPreview\n            renderIcon={props => <VideoLibrary {...props} />}\n          />\n        );\n      case 'font':\n      case 'bitmapFont':\n        return (\n          <GenericIconPreview\n            renderIcon={props => <FontDownload {...props} />}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Background from '../../UI/Background';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport PropertiesEditor from '../../PropertiesEditor';\nimport ResourcePreview from '../../ResourcesList/ResourcePreview';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport propertiesMapToSchema from '../../PropertiesEditor/PropertiesMapToSchema';\nimport { type Schema } from '../../PropertiesEditor';\n\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource';\n\nconst styles = {\n  propertiesContainer: {\n    padding: 8,\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    flex: 2,\n  },\n};\n\ntype Props = {|\n  project: gdProject,\n  resourcesLoader: typeof ResourcesLoader,\n  resources: Array<gdResource>,\n  onResourcePathUpdated: () => void,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n|};\n\nexport default class ResourcePropertiesEditor extends React.Component<\n  Props,\n  {}\n> {\n  schema: Schema = [\n    {\n      name: 'Resource name',\n      valueType: 'string',\n      disabled: true,\n      getValue: (resource: gdResource) => resource.getName(),\n      setValue: (resource: gdResource, newValue: string) =>\n        resource.setName(newValue),\n    },\n    {\n      name: 'File',\n      valueType: 'string',\n      getValue: (resource: gdResource) => resource.getFile(),\n      setValue: (resource: gdResource, newValue: string) =>\n        resource.setFile(newValue),\n      onEditButtonClick: () => this._chooseResourcePath(),\n    },\n  ];\n\n  _renderEmpty() {\n    return (\n      <EmptyMessage>\n        <Trans>\n          Resources are automatically added to your project whenever you add an\n          image, a font or a video to an object or when you choose an audio file\n          in events. Choose a resource to display its properties.\n        </Trans>\n      </EmptyMessage>\n    );\n  }\n\n  _chooseResourcePath = () => {\n    const {\n      resources,\n      onResourcePathUpdated,\n      onChooseResource,\n      resourceSources,\n    } = this.props;\n    const resource = resources[0];\n    const sources = resourceSources.filter(\n      source => source.kind === resource.getKind()\n    );\n    if (!sources.length) return;\n    onChooseResource({\n      // Should be updated once new sources are introduced in the desktop app.\n      // Search for \"sources[0]\" in the codebase for other places like this.\n      initialSourceName: sources[0].name,\n      multiSelection: true,\n      resourceKind: resource.getKind(),\n    }).then(resources => {\n      if (!resources.length) return; // No path was chosen by the user.\n      resource.setFile(resources[0].getFile());\n\n      // Important, we are responsible for deleting the resources that were given to us.\n      // Otherwise we have a memory leak.\n      resources.forEach(resource => resource.delete());\n\n      onResourcePathUpdated();\n      this.forceUpdate();\n    });\n  };\n\n  _renderResourcesProperties() {\n    const { resources } = this.props;\n    //TODO: Multiple resources support\n    const properties = resources[0].getProperties();\n    const resourceSchema = propertiesMapToSchema(\n      properties,\n      resource => resource.getProperties(),\n      (resource, name, value) => resource.updateProperty(name, value)\n    );\n\n    return (\n      <div\n        style={styles.propertiesContainer}\n        key={resources.map(resource => '' + resource.ptr).join(';')}\n      >\n        <PropertiesEditor\n          schema={this.schema.concat(resourceSchema)}\n          instances={resources}\n        />\n      </div>\n    );\n  }\n\n  _renderPreview() {\n    const { resources, project, resourcesLoader } = this.props;\n    if (!resources || !resources.length) return;\n\n    return (\n      <ResourcePreview\n        resourceName={resources[0].getName()}\n        resourcePath={resources[0].getFile()}\n        resourcesLoader={resourcesLoader}\n        project={project}\n      />\n    );\n  }\n\n  render() {\n    const { resources } = this.props;\n\n    return (\n      <Background maxWidth>\n        {this._renderPreview()}\n        {!resources || !resources.length\n          ? this._renderEmpty()\n          : this._renderResourcesProperties()}\n      </Background>\n    );\n  }\n}\n","// @flow\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport ToolbarIcon from '../../UI/ToolbarIcon';\nimport FlatButton from '../../UI/FlatButton';\nimport ElementWithMenu from '../../UI/Menu/ElementWithMenu';\nimport { type PreviewState } from '../PreviewState';\nimport GDevelopThemeContext from '../../UI/Theme/ThemeContext';\n\nexport type PreviewAndPublishButtonsProps = {|\n  onPreviewWithoutHotReload: () => void,\n  onOpenDebugger: () => void,\n  onNetworkPreview: () => void,\n  onHotReloadPreview: () => void,\n  setPreviewOverride: ({|\n    isPreviewOverriden: boolean,\n    overridenPreviewLayoutName: ?string,\n    overridenPreviewExternalLayoutName: ?string,\n  |}) => void,\n  canDoNetworkPreview: boolean,\n  isPreviewEnabled: boolean,\n  hasPreviewsRunning: boolean,\n  previewState: PreviewState,\n  exportProject: () => void,\n  hasProject: boolean,\n|};\n\nexport default function PreviewAndPublishButtons({\n  onPreviewWithoutHotReload,\n  onNetworkPreview,\n  onOpenDebugger,\n  onHotReloadPreview,\n  canDoNetworkPreview,\n  isPreviewEnabled,\n  hasPreviewsRunning,\n  previewState,\n  setPreviewOverride,\n  exportProject,\n  hasProject,\n}: PreviewAndPublishButtonsProps) {\n  const theme = React.useContext(GDevelopThemeContext);\n  const debugBuildMenuTemplate = React.useCallback(\n    (i18n: I18nType) => [\n      {\n        label: i18n._(t`Start Network Preview (Preview over WiFi/LAN)`),\n        click: onNetworkPreview,\n        enabled: canDoNetworkPreview,\n      },\n      { type: 'separator' },\n      {\n        label: i18n._(t`Start Preview with Debugger and Performance Profiler`),\n        click: onOpenDebugger,\n      },\n    ],\n    [onNetworkPreview, onOpenDebugger, canDoNetworkPreview]\n  );\n  const previewBuildMenuTemplate = React.useCallback(\n    (i18n: I18nType) => [\n      {\n        label: i18n._(t`Launch another preview in a new window`),\n        click: onPreviewWithoutHotReload,\n        enabled: isPreviewEnabled && hasPreviewsRunning,\n      },\n      { type: 'separator' },\n      ...(previewState.overridenPreviewLayoutName\n        ? [\n            {\n              type: 'checkbox',\n              label: previewState.overridenPreviewExternalLayoutName\n                ? i18n._(\n                    t`Start all previews from external layout ${\n                      previewState.overridenPreviewExternalLayoutName\n                    }`\n                  )\n                : i18n._(\n                    t`Start all previews from scene ${\n                      previewState.overridenPreviewLayoutName\n                    }`\n                  ),\n              checked: previewState.isPreviewOverriden,\n              click: () =>\n                setPreviewOverride({\n                  isPreviewOverriden: !previewState.isPreviewOverriden,\n                  overridenPreviewLayoutName:\n                    previewState.overridenPreviewLayoutName,\n                  overridenPreviewExternalLayoutName:\n                    previewState.overridenPreviewExternalLayoutName,\n                }),\n            },\n            { type: 'separator' },\n          ]\n        : []),\n      {\n        label: previewState.previewExternalLayoutName\n          ? i18n._(\n              t`Use this external layout inside this scene to start all previews`\n            )\n          : i18n._(t`Use this scene to start all previews`),\n        click: () =>\n          setPreviewOverride({\n            isPreviewOverriden: true,\n            overridenPreviewLayoutName: previewState.previewLayoutName,\n            overridenPreviewExternalLayoutName:\n              previewState.previewExternalLayoutName,\n          }),\n        enabled:\n          previewState.previewLayoutName !==\n            previewState.overridenPreviewLayoutName ||\n          previewState.previewExternalLayoutName !==\n            previewState.overridenPreviewExternalLayoutName,\n      },\n    ],\n    [\n      onPreviewWithoutHotReload,\n      isPreviewEnabled,\n      hasPreviewsRunning,\n      setPreviewOverride,\n      previewState,\n    ]\n  );\n\n  const onClickPreview = event => {\n    if (event.target) event.target.blur();\n    onHotReloadPreview();\n  };\n\n  return (\n    <React.Fragment>\n      <ElementWithMenu\n        element={\n          <ToolbarIcon\n            disabled={!isPreviewEnabled}\n            src=\"res/ribbon_default/bug32.png\"\n            tooltip={t`Advanced preview options (debugger, network preview...)`}\n          />\n        }\n        buildMenuTemplate={debugBuildMenuTemplate}\n      />\n      <ElementWithMenu\n        element={\n          <FlatButton\n            onClick={onClickPreview}\n            disabled={!isPreviewEnabled}\n            icon={\n              <img\n                alt=\"Preview\"\n                src={\n                  hasPreviewsRunning\n                    ? 'res/ribbon_default/hotReload64.png'\n                    : previewState.isPreviewOverriden\n                    ? 'res/ribbon_default/previewOverride32.png'\n                    : 'res/ribbon_default/preview64.png'\n                }\n                width={32}\n                height={32}\n                style={{\n                  filter: !isPreviewEnabled\n                    ? 'grayscale(100%)'\n                    : theme.gdevelopIconsCSSFilter,\n                }}\n              />\n            }\n            label={\n              hasPreviewsRunning ? (\n                <Trans>Update</Trans>\n              ) : (\n                <Trans>Preview</Trans>\n              )\n            }\n            id={'toolbar-preview-button'}\n            exceptionalTooltipForToolbar={\n              hasPreviewsRunning ? (\n                <Trans>\n                  Apply changes to the running preview, right click for more\n                </Trans>\n              ) : previewState.isPreviewOverriden ? (\n                <Trans>Preview is overridden, right click for more</Trans>\n              ) : previewState.previewExternalLayoutName ? (\n                <Trans>\n                  Launch a preview of the external layout inside the scene,\n                  right click for more\n                </Trans>\n              ) : (\n                <Trans>\n                  Launch a preview of the scene, right click for more\n                </Trans>\n              )\n            }\n          />\n        }\n        openMenuWithSecondaryClick\n        buildMenuTemplate={previewBuildMenuTemplate}\n      />\n      <FlatButton\n        onClick={exportProject}\n        disabled={!hasProject}\n        icon={\n          <img\n            alt=\"Publish\"\n            src={'res/ribbon_default/networkicon32.png'}\n            width={32}\n            height={32}\n            style={{\n              filter: !hasProject\n                ? 'grayscale(100%)'\n                : theme.gdevelopIconsCSSFilter,\n            }}\n          />\n        }\n        label={<Trans>Publish</Trans>}\n        exceptionalTooltipForToolbar={\n          <Trans>Export the game (Web, Android, iOS...)</Trans>\n        }\n      />\n    </React.Fragment>\n  );\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { Toolbar, ToolbarGroup } from '../../UI/Toolbar';\nimport ToolbarIcon from '../../UI/ToolbarIcon';\nimport ToolbarSeparator from '../../UI/ToolbarSeparator';\nimport ElementWithMenu from '../../UI/Menu/ElementWithMenu';\nimport Window from '../../Utils/Window';\nimport PreviewAndPublishButtons, {\n  type PreviewAndPublishButtonsProps,\n} from './PreviewAndPublishButtons';\n\nexport type MainFrameToolbarProps = {|\n  showProjectIcons: boolean,\n  hasProject: boolean,\n  toggleProjectManager: () => void,\n  requestUpdate: ?() => void,\n  simulateUpdateDownloaded: ?() => void,\n  simulateUpdateAvailable: ?() => void,\n  exportProject: () => void,\n  ...PreviewAndPublishButtonsProps,\n|};\n\nexport type ToolbarInterface = {|\n  setEditorToolbar: any => void,\n|};\n\nexport default React.forwardRef<MainFrameToolbarProps, ToolbarInterface>(\n  function MainframeToolbar(props: MainFrameToolbarProps, ref) {\n    const isDev = Window.isDev();\n\n    const [editorToolbar, setEditorToolbar] = React.useState<?any>(null);\n    React.useImperativeHandle(ref, () => ({\n      setEditorToolbar,\n    }));\n\n    return (\n      <Toolbar>\n        <ToolbarGroup firstChild>\n          {props.showProjectIcons && (\n            <ToolbarIcon\n              onClick={props.toggleProjectManager}\n              src=\"res/ribbon_default/projectManager32.png\"\n              disabled={!props.hasProject}\n              tooltip={t`Project manager`}\n            />\n          )}\n          {isDev && props.showProjectIcons && <ToolbarSeparator />}\n          {isDev && (\n            <ElementWithMenu\n              element={<ToolbarIcon src=\"res/ribbon_default/bug32.png\" />}\n              buildMenuTemplate={() => [\n                {\n                  label: 'Simulate update downloaded',\n                  disabled: !props.simulateUpdateDownloaded,\n                  click: () => {\n                    props.simulateUpdateDownloaded &&\n                      props.simulateUpdateDownloaded();\n                  },\n                },\n                {\n                  label: 'Simulate update available',\n                  disabled: !props.simulateUpdateAvailable,\n                  click: () => {\n                    props.simulateUpdateAvailable &&\n                      props.simulateUpdateAvailable();\n                  },\n                },\n              ]}\n            />\n          )}\n        </ToolbarGroup>\n        <ToolbarGroup>\n          <PreviewAndPublishButtons\n            onPreviewWithoutHotReload={props.onPreviewWithoutHotReload}\n            onOpenDebugger={props.onOpenDebugger}\n            onNetworkPreview={props.onNetworkPreview}\n            onHotReloadPreview={props.onHotReloadPreview}\n            setPreviewOverride={props.setPreviewOverride}\n            canDoNetworkPreview={props.canDoNetworkPreview}\n            isPreviewEnabled={props.isPreviewEnabled}\n            previewState={props.previewState}\n            hasPreviewsRunning={props.hasPreviewsRunning}\n            exportProject={props.exportProject}\n            hasProject={props.hasProject}\n          />\n        </ToolbarGroup>\n        {editorToolbar || <ToolbarGroup />}\n      </Toolbar>\n    );\n  }\n);\n","// @flow\nimport * as React from 'react';\nimport GDevelopThemeContext from '../../UI/Theme/ThemeContext';\n\nconst styles = {\n  columnDropIndicator: {\n    borderRight: '1px solid',\n    borderLeft: '1px solid',\n    width: 7,\n    marginLeft: '-1px',\n    height: '100%',\n    boxSizing: 'border-box',\n  },\n};\n\nexport function ColumnDropIndicator() {\n  const gdevelopTheme = React.useContext(GDevelopThemeContext);\n  return (\n    <div\n      style={{\n        ...styles.columnDropIndicator,\n        backgroundColor: gdevelopTheme.closableTabs.selectedBackgroundColor,\n        borderColor: gdevelopTheme.closableTabs.backgroundColor,\n      }}\n    />\n  );\n}\n","// @flow\nimport * as React from 'react';\n\nimport { makeDragSourceAndDropTarget } from '../../UI/DragAndDrop/DragSourceAndDropTarget';\nimport { ScreenTypeMeasurer } from '../../UI/Reponsive/ScreenTypeMeasurer';\nimport { ColumnDropIndicator } from './DropIndicator';\nimport {\n  type EditorTabsState,\n  type EditorTab,\n  getEditors,\n  getCurrentTabIndex,\n} from './EditorTabsHandler';\nimport {\n  ClosableTabs,\n  ClosableTab,\n  type ClosableTabProps,\n} from '../../UI/ClosableTabs';\n\ntype DraggableClosableTabsProps = {|\n  hideLabels?: boolean,\n  editorTabs: EditorTabsState,\n  onClickTab: (index: number) => void,\n  onCloseTab: (editor: EditorTab) => void,\n  onCloseOtherTabs: (editor: EditorTab) => void,\n  onCloseAll: () => void,\n  onTabActived: (editor: EditorTab) => void,\n  onDropTab: (fromIndex: number, toHoveredIndex: number) => void,\n|};\n\nexport function DraggableClosableTabs({\n  hideLabels,\n  editorTabs,\n  onClickTab,\n  onCloseTab,\n  onCloseOtherTabs,\n  onCloseAll,\n  onTabActived,\n  onDropTab,\n}: DraggableClosableTabsProps) {\n  let draggedTabIndex: ?number = null;\n\n  return (\n    <ClosableTabs hideLabels={hideLabels}>\n      {getEditors(editorTabs).map((editorTab, id) => {\n        const isCurrentTab = getCurrentTabIndex(editorTabs) === id;\n        return (\n          <DraggableClosableTab\n            index={id}\n            label={editorTab.label}\n            icon={editorTab.icon}\n            key={editorTab.key}\n            id={`tab-${editorTab.key.replace(/\\s/g, '-')}`}\n            active={isCurrentTab}\n            onClick={() => onClickTab(id)}\n            onClose={() => onCloseTab(editorTab)}\n            onCloseOthers={() => onCloseOtherTabs(editorTab)}\n            onCloseAll={onCloseAll}\n            onActivated={() => onTabActived(editorTab)}\n            closable={editorTab.closable}\n            onBeginDrag={() => {\n              draggedTabIndex = id;\n              return editorTab;\n            }}\n            onDrop={toHoveredIndex => {\n              if (typeof draggedTabIndex === 'number') {\n                onDropTab(draggedTabIndex, id);\n                draggedTabIndex = null;\n              }\n            }}\n          />\n        );\n      })}\n    </ClosableTabs>\n  );\n}\n\ntype DraggableClosableTabProps = {|\n  index: number,\n  onBeginDrag: () => EditorTab,\n  onDrop: (toIndex: number) => void,\n  ...ClosableTabProps,\n|};\n\nexport function DraggableClosableTab({\n  index,\n  id,\n  active,\n  onClose,\n  onCloseOthers,\n  onCloseAll,\n  label,\n  icon,\n  closable,\n  onClick,\n  onActivated,\n  onBeginDrag,\n  onDrop,\n}: DraggableClosableTabProps) {\n  const DragSourceAndDropTarget = makeDragSourceAndDropTarget<EditorTab>(\n    'draggable-closable-tab'\n  );\n\n  return (\n    <ScreenTypeMeasurer>\n      {screenType => (\n        <DragSourceAndDropTarget\n          beginDrag={onBeginDrag}\n          canDrag={() => {\n            // On touchscreens, we disable drag and drop.\n            if (screenType === 'touch') return false;\n            // We want \"Home\" tab to stay on the left.\n            return index !== 0;\n          }}\n          canDrop={() => true}\n          drop={() => onDrop(index)}\n        >\n          {({ connectDragSource, connectDropTarget, isOver, canDrop }) => {\n            // Add an extra div because connectDropTarget/connectDragSource can\n            // only be used on native elements.\n            const dropTarget = connectDropTarget(\n              <div\n                style={{\n                  display: 'flex',\n                  flexShrink: 0,\n                }}\n              >\n                <ClosableTab\n                  id={id}\n                  active={active}\n                  onClose={onClose}\n                  onCloseOthers={onCloseOthers}\n                  onCloseAll={onCloseAll}\n                  label={label}\n                  icon={icon}\n                  closable={closable}\n                  onClick={onClick}\n                  onActivated={onActivated}\n                  key={id}\n                />\n                {isOver && <ColumnDropIndicator />}\n              </div>\n            );\n\n            if (!dropTarget) return null;\n\n            return connectDragSource(dropTarget);\n          }}\n        </DragSourceAndDropTarget>\n      )}\n    </ScreenTypeMeasurer>\n  );\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport TextField from '../UI/TextField';\nimport FlatButton from '../UI/FlatButton';\nimport Window from '../Utils/Window';\nimport { List, ListItem } from '../UI/List';\nimport { Column } from '../UI/Grid';\nimport algoliasearch from 'algoliasearch/lite';\nimport debounce from 'lodash/debounce';\nimport Text from '../UI/Text';\n\nconst styles = {\n  dropdownMenuContainer: {\n    maxHeight: 300,\n    overflowY: 'scroll',\n  },\n};\n\ntype Props = {|\n  onChange: string => void,\n  value: string,\n|};\n\ntype AlgoliaResult = {|\n  content: string,\n  url: string,\n  hierarchy: {|\n    lvl0: ?string,\n    lvl1: ?string,\n    lvl2: ?string,\n    lvl3: ?string,\n    lvl4: ?string,\n    lvl5: ?string,\n    lvl6: ?string,\n  |},\n  objectID: string,\n|};\n\ntype State = {|\n  results: ?Array<AlgoliaResult>,\n  error: ?Error,\n|};\n\nconst fixSomeHtmlCharacters = (str: string) => {\n  return str\n    .replace(/&amp;/g, '&')\n    .replace(/&quot;/g, '\"')\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&#x27;/g, \"'\");\n};\n\nconst indexName = 'gdevelop';\nconst appId = 'BH4D9OD16A';\nconst apiKey = '69c73fc1a710bb79543d4b91f6b81c08';\nconst algoliaOptions = { hitsPerPage: 5 };\n\nexport default class DocSearchArea extends React.Component<Props, State> {\n  // $FlowFixMe\n  client = algoliasearch(appId, apiKey, algoliaOptions);\n  state = {\n    results: null,\n    error: null,\n  };\n\n  _handleSearchTextChange = (searchText: string) => {\n    this.props.onChange(searchText);\n  };\n\n  _launchSearchRequest = debounce(() => {\n    if (this.props.value) {\n      this.client\n        // $FlowFixMe\n        .search([\n          {\n            indexName: indexName,\n            query: this.props.value,\n            params: algoliaOptions,\n          },\n        ])\n        .then(\n          data => {\n            let hits = data.results[0].hits;\n            console.log(hits);\n\n            this.setState({\n              results: hits,\n              error: null,\n            });\n          },\n          error => {\n            this.setState({\n              error,\n            });\n          }\n        );\n    }\n  }, 200);\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.value !== this.props.value && this.props.value) {\n      this._launchSearchRequest();\n    }\n  }\n\n  _renderResult = (result: AlgoliaResult) => {\n    const primaryText =\n      result.hierarchy.lvl0 ||\n      result.hierarchy.lvl1 ||\n      result.hierarchy.lvl2 ||\n      result.hierarchy.lvl3 ||\n      result.hierarchy.lvl4 ||\n      result.hierarchy.lvl5 ||\n      result.hierarchy.lvl6 ||\n      '';\n\n    const secondaryText = [\n      result.hierarchy.lvl0,\n      result.hierarchy.lvl1,\n      result.hierarchy.lvl2,\n      result.hierarchy.lvl3,\n      result.hierarchy.lvl4,\n      result.hierarchy.lvl5,\n      result.hierarchy.lvl6,\n    ]\n      .filter(text => !!text)\n      .filter(text => text !== primaryText)\n      .join(' - ');\n\n    return (\n      <ListItem\n        key={result.objectID}\n        primaryText={fixSomeHtmlCharacters(primaryText)}\n        secondaryText={fixSomeHtmlCharacters(result.content || secondaryText)}\n        secondaryTextLines={2}\n        onClick={() => {\n          Window.openExternalURL(result.url);\n        }}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <TextField\n          id={'help-finder-search-bar'}\n          fullWidth\n          hintText={t`Search on the documentation.`}\n          value={this.props.value}\n          onChange={(e, text) => this.props.onChange(text)}\n        />\n        <div\n          id=\"help-finder-dropdown-menu-container\"\n          className=\"algolia-autocomplete\"\n          style={{\n            ...styles.dropdownMenuContainer,\n            visibility: !this.props.value ? 'hidden' : undefined,\n          }}\n        />\n        {this.state.error ? (\n          <Text>\n            <Trans>\n              Unable to search in the documentation. Are you sure you are online\n              and have a proper internet connection?\n            </Trans>\n          </Text>\n        ) : this.state.results ? (\n          <List>\n            {this.state.results.map(result => this._renderResult(result))}\n          </List>\n        ) : (\n          <React.Fragment>\n            <Text>\n              <Trans>Examples:</Trans>\n            </Text>\n            <Column expand>\n              <Text>\n                Coins in platformer\n                <br />\n                Export on Android\n                <br />\n                Add a score\n                <br />\n                Move enemies\n                <br />\n                ...\n                <br />\n              </Text>\n            </Column>\n          </React.Fragment>\n        )}\n        <Text align=\"right\">\n          This search is powered by{' '}\n          <FlatButton\n            onClick={() => Window.openExternalURL('http://algolia.com/')}\n            label={'Algolia'}\n          />\n        </Text>\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport Window from '../Utils/Window';\nimport DocSearchArea from './DocSearchArea';\nimport debounce from 'lodash/debounce';\nimport {\n  sendHelpFinderOpened,\n  sendHelpSearch,\n} from '../Utils/Analytics/EventSender';\n\ntype Props = {|\n  open: boolean,\n  onClose: () => void,\n|};\n\ntype State = {|\n  searchText: string,\n|};\n\nexport default class HelpFinder extends React.PureComponent<Props, State> {\n  state = {\n    searchText: '',\n  };\n\n  componentWillReceiveProps(newProps: Props) {\n    if (newProps.open && !this.props.open) {\n      sendHelpFinderOpened();\n    }\n  }\n\n  _handleSearchTextChange = (searchText: string) => {\n    this.setState({\n      searchText,\n    });\n    this._sendHelpSearch();\n  };\n\n  _sendHelpSearch = debounce(() => {\n    if (this.state.searchText) sendHelpSearch(this.state.searchText.trim());\n  }, 2900);\n\n  render() {\n    const { open, onClose } = this.props;\n\n    return (\n      <Dialog\n        title={<Trans>Help!</Trans>}\n        onRequestClose={onClose}\n        actions={[\n          <FlatButton\n            label={<Trans>Close</Trans>}\n            key=\"close\"\n            primary={false}\n            onClick={onClose}\n          />,\n        ]}\n        secondaryActions={[\n          <FlatButton\n            key=\"forum\"\n            primary={false}\n            onClick={() => {\n              Window.openExternalURL('https://forum.gdevelop-app.com');\n            }}\n            label={<Trans>Community forum</Trans>}\n          />,\n          <FlatButton\n            key=\"wiki\"\n            primary={false}\n            onClick={() => {\n              Window.openExternalURL(\n                'http://wiki.compilgames.net/doku.php/gdevelop5/start'\n              );\n            }}\n            label={<Trans>Browse the documentation</Trans>}\n          />,\n        ]}\n        cannotBeDismissed={false}\n        open={open}\n      >\n        <DocSearchArea\n          value={this.state.searchText}\n          onChange={this._handleSearchTextChange}\n        />\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport Dialog from '../UI/Dialog';\nimport { type AuthenticatedUser } from './AuthenticatedUserContext';\nimport { Column, Line, Spacer } from '../UI/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport BackgroundText from '../UI/BackgroundText';\nimport VerifiedUser from '@material-ui/icons/VerifiedUser';\nimport Text from '../UI/Text';\nimport { useInterval } from '../Utils/UseInterval';\n\ntype Props = {|\n  onClose: Function,\n  authenticatedUser: AuthenticatedUser,\n|};\n\nexport default function SubscriptionPendingDialog({\n  onClose,\n  authenticatedUser,\n}: Props) {\n  const hasPlan =\n    !!authenticatedUser &&\n    !!authenticatedUser.subscription &&\n    !!authenticatedUser.subscription.planId;\n  useInterval(\n    () => {\n      authenticatedUser.onRefreshUserProfile().catch(() => {\n        // Ignore any error, will be retried anyway.\n      });\n    },\n    hasPlan ? null : 3900\n  );\n\n  return (\n    <Dialog\n      actions={[\n        hasPlan ? (\n          <RaisedButton\n            label={<Trans>Done!</Trans>}\n            key=\"close\"\n            primary\n            onClick={onClose}\n          />\n        ) : (\n          <FlatButton\n            label={<Trans>Cancel and close</Trans>}\n            key=\"close\"\n            primary={false}\n            onClick={onClose}\n          />\n        ),\n      ]}\n      maxWidth=\"sm\"\n      cannotBeDismissed={true}\n      open\n      noMargin\n    >\n      {!hasPlan ? (\n        <Column>\n          <Line>\n            <Text>\n              <Trans>\n                Thanks for getting a subscription and supporting GDevelop!\n              </Trans>{' '}\n              {'❤️'}\n              <b>\n                <Trans>\n                  Your browser will now open to enter your payment details\n                  (handled securely by Stripe.com).\n                </Trans>\n              </b>\n            </Text>\n          </Line>\n          <Line justifyContent=\"center\" alignItems=\"center\">\n            <CircularProgress size={20} />\n            <Spacer />\n            <Text>Waiting for the subscription confirmation...</Text>\n          </Line>\n          <Spacer />\n          <Line justifyContent=\"center\">\n            <BackgroundText>\n              <Trans>\n                Once you're done, come back to GDevelop and your account will be\n                upgraded automatically, unlocking the extra exports and online\n                services.\n              </Trans>\n            </BackgroundText>\n          </Line>\n        </Column>\n      ) : (\n        <Column>\n          <Line>\n            <Text>\n              <Trans>\n                Thanks for getting a subscription and supporting GDevelop!\n              </Trans>{' '}\n              {'❤️'}\n            </Text>\n          </Line>\n          <Line justifyContent=\"center\" alignItems=\"center\">\n            <VerifiedUser />\n            <Spacer />\n            <Text>\n              <b>\n                <Trans>Your new plan is now activated</Trans>\n              </b>\n            </Text>\n          </Line>\n          <Spacer />\n          <Line justifyContent=\"center\">\n            <BackgroundText>\n              <Trans>\n                Your account is upgraded, with the extra exports and online\n                services. If you wish to change later, come back to your profile\n                and choose another plan.\n              </Trans>\n            </BackgroundText>\n          </Line>\n        </Column>\n      )}\n    </Dialog>\n  );\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport AuthenticatedUserContext, {\n  type AuthenticatedUser,\n} from './AuthenticatedUserContext';\nimport { Column, Line } from '../UI/Grid';\nimport {\n  getSubscriptionPlans,\n  type PlanDetails,\n  changeUserSubscription,\n  getRedirectToCheckoutUrl,\n} from '../Utils/GDevelopServices/Usage';\nimport RaisedButton from '../UI/RaisedButton';\nimport CheckCircle from '@material-ui/icons/CheckCircle';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport { showMessageBox, showErrorBox } from '../UI/Messages/MessageBox';\nimport LeftLoader from '../UI/LeftLoader';\nimport PlaceholderMessage from '../UI/PlaceholderMessage';\nimport {\n  sendSubscriptionDialogShown,\n  sendChoosePlanClicked,\n} from '../Utils/Analytics/EventSender';\nimport SubscriptionPendingDialog from './SubscriptionPendingDialog';\nimport Window from '../Utils/Window';\nimport Text from '../UI/Text';\nimport ThemeConsumer from '../UI/Theme/ThemeConsumer';\n\nconst styles = {\n  descriptionText: {\n    marginLeft: 16,\n    marginRight: 16,\n  },\n  card: {\n    margin: 16,\n  },\n  actions: {\n    textAlign: 'right',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  bulletIcon: { width: 20, height: 20, marginLeft: 5, marginRight: 10 },\n  bulletText: { flex: 1 },\n};\n\ntype Props = {|\n  open: boolean,\n  onClose: Function,\n|};\n\ntype State = {|\n  isLoading: boolean,\n  subscriptionPendingDialogOpen: boolean,\n|};\n\nexport default class SubscriptionDialog extends React.Component<Props, State> {\n  state = { isLoading: false, subscriptionPendingDialogOpen: false };\n\n  componentDidMount() {\n    if (this.props.open) {\n      sendSubscriptionDialogShown();\n    }\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (!this.props.open && newProps.open) {\n      sendSubscriptionDialogShown();\n    }\n  }\n\n  choosePlan = (\n    i18n: I18nType,\n    authenticatedUser: AuthenticatedUser,\n    plan: PlanDetails\n  ) => {\n    const {\n      getAuthorizationHeader,\n      subscription,\n      firebaseUser,\n    } = authenticatedUser;\n    if (!firebaseUser || !subscription) return;\n    sendChoosePlanClicked(plan.planId);\n\n    if (subscription.stripeSubscriptionId) {\n      const answer = Window.showConfirmDialog(\n        plan.planId\n          ? i18n._(t`Are you sure you want to subscribe to this new plan?`)\n          : i18n._(t`Are you sure you want to cancel your subscription?`)\n      );\n      if (!answer) return;\n\n      // We already have a stripe customer, change the subscription without\n      // asking for the user card.\n      this.setState({ isLoading: true });\n      changeUserSubscription(getAuthorizationHeader, firebaseUser.uid, {\n        planId: plan.planId,\n      }).then(\n        () =>\n          this.handleUpdatedSubscriptionSuccess(i18n, authenticatedUser, plan),\n        (err: Error) => this.handleUpdatedSubscriptionFailure(i18n, err)\n      );\n    } else {\n      this.setState({\n        subscriptionPendingDialogOpen: true,\n      });\n      Window.openExternalURL(\n        getRedirectToCheckoutUrl(\n          plan.planId || '',\n          firebaseUser.uid,\n          firebaseUser.email || ''\n        )\n      );\n    }\n  };\n\n  handleUpdatedSubscriptionSuccess = (\n    i18n: I18nType,\n    authenticatedUser: AuthenticatedUser,\n    plan: PlanDetails\n  ) => {\n    authenticatedUser.onRefreshUserProfile();\n    this.setState({ isLoading: false });\n    if (plan.planId) {\n      showMessageBox(\n        i18n._(\n          t`Congratulations, your new subscription is now active!\\n\\nYou can now use the services unlocked with this plan.`\n        )\n      );\n    } else {\n      showMessageBox(\n        i18n._(\n          t`Your subscription was properly cancelled. Sorry to see you go!`\n        )\n      );\n    }\n  };\n\n  handleUpdatedSubscriptionFailure = (i18n: I18nType, rawError: Error) => {\n    this.setState({ isLoading: false });\n    showErrorBox({\n      message: i18n._(\n        t`Your subscription could not be updated. Please try again later!`\n      ),\n      rawError,\n      errorId: 'subscription-update-error',\n    });\n  };\n\n  _renderPrice(plan: PlanDetails): React.Node {\n    return !plan.monthlyPriceInEuros ? (\n      <Trans>Free</Trans>\n    ) : (\n      <Trans>{plan.monthlyPriceInEuros}€/month</Trans>\n    );\n  }\n\n  _isLoading = (authenticatedUser: AuthenticatedUser) =>\n    !authenticatedUser.subscription ||\n    !authenticatedUser.profile ||\n    this.state.isLoading;\n\n  render() {\n    const { open, onClose } = this.props;\n    const { subscriptionPendingDialogOpen } = this.state;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <AuthenticatedUserContext.Consumer>\n            {(authenticatedUser: AuthenticatedUser) => (\n              <ThemeConsumer>\n                {muiTheme => (\n                  <Dialog\n                    actions={[\n                      <FlatButton\n                        label={<Trans>Close</Trans>}\n                        key=\"close\"\n                        primary={false}\n                        onClick={onClose}\n                      />,\n                    ]}\n                    onRequestClose={onClose}\n                    cannotBeDismissed={true}\n                    open={open}\n                    noMargin\n                  >\n                    <Column>\n                      <Line>\n                        <Text>\n                          <Trans>\n                            Get a subscription to gain more one-click exports,\n                            remove the GDevelop splashscreen and messages asking\n                            you to get a subscription. With a subscription,\n                            you're also supporting the development of GDevelop,\n                            which is an open-source software maintained by\n                            volunteers in their free time.\n                          </Trans>\n                        </Text>\n                      </Line>\n                    </Column>\n                    {getSubscriptionPlans().map(plan => (\n                      <Card key={plan.planId || ''} style={styles.card}>\n                        <CardHeader\n                          title={\n                            <span>\n                              <b>{plan.name}</b> - {this._renderPrice(plan)}\n                            </span>\n                          }\n                          subheader={\n                            plan.smallDescription\n                              ? i18n._(plan.smallDescription)\n                              : ''\n                          }\n                        />\n                        <CardContent>\n                          {plan.descriptionBullets.map(\n                            (descriptionBullet, index) => (\n                              <Column key={index} expand>\n                                <Line noMargin alignItems=\"center\">\n                                  {authenticatedUser.subscription &&\n                                  authenticatedUser.subscription.planId ===\n                                    plan.planId ? (\n                                    <CheckCircle\n                                      style={{\n                                        ...styles.bulletIcon,\n                                        color: muiTheme.message.valid,\n                                      }}\n                                    />\n                                  ) : (\n                                    <CheckCircle style={styles.bulletIcon} />\n                                  )}\n                                  <Text style={styles.bulletText}>\n                                    {i18n._(descriptionBullet.message)}{' '}\n                                    {descriptionBullet.isLocalAppOnly && (\n                                      <Trans>(on the desktop app only)</Trans>\n                                    )}\n                                  </Text>\n                                </Line>\n                              </Column>\n                            )\n                          )}\n                          <Text style={styles.descriptionText}>\n                            {plan.extraDescription\n                              ? i18n._(plan.extraDescription)\n                              : ''}\n                          </Text>\n                        </CardContent>\n                        <CardActions style={styles.actions}>\n                          {authenticatedUser.subscription &&\n                          authenticatedUser.subscription.planId ===\n                            plan.planId ? (\n                            <FlatButton\n                              disabled\n                              label={<Trans>This is your current plan</Trans>}\n                              onClick={() =>\n                                this.choosePlan(i18n, authenticatedUser, plan)\n                              }\n                            />\n                          ) : plan.planId ? (\n                            <LeftLoader\n                              isLoading={this._isLoading(authenticatedUser)}\n                            >\n                              <RaisedButton\n                                primary\n                                disabled={this._isLoading(authenticatedUser)}\n                                label={<Trans>Choose this plan</Trans>}\n                                onClick={() =>\n                                  this.choosePlan(i18n, authenticatedUser, plan)\n                                }\n                              />\n                            </LeftLoader>\n                          ) : (\n                            <LeftLoader\n                              isLoading={this._isLoading(authenticatedUser)}\n                            >\n                              <FlatButton\n                                disabled={this._isLoading(authenticatedUser)}\n                                label={<Trans>Cancel your subscription</Trans>}\n                                onClick={() =>\n                                  this.choosePlan(i18n, authenticatedUser, plan)\n                                }\n                              />\n                            </LeftLoader>\n                          )}\n                        </CardActions>\n                      </Card>\n                    ))}\n                    <Column>\n                      <Line>\n                        <EmptyMessage>\n                          <Trans>\n                            Subscriptions can be stopped at any time. GDevelop\n                            uses Stripe.com for secure payment. No credit card\n                            data is stored by GDevelop: everything is managed by\n                            Stripe secure infrastructure.\n                          </Trans>\n                        </EmptyMessage>\n                      </Line>\n                    </Column>\n                    {!authenticatedUser.authenticated && (\n                      <PlaceholderMessage>\n                        <Text>\n                          <Trans>\n                            Create a GDevelop account to continue. It's free and\n                            you'll be able to access to online services like\n                            one-click builds:\n                          </Trans>\n                        </Text>\n                        <RaisedButton\n                          label={<Trans>Create my account</Trans>}\n                          primary\n                          onClick={authenticatedUser.onLogin}\n                        />\n                        <FlatButton\n                          label={<Trans>Not now, thanks</Trans>}\n                          onClick={onClose}\n                        />\n                      </PlaceholderMessage>\n                    )}\n                    {subscriptionPendingDialogOpen && (\n                      <SubscriptionPendingDialog\n                        authenticatedUser={authenticatedUser}\n                        onClose={() => {\n                          this.setState(\n                            {\n                              subscriptionPendingDialogOpen: false,\n                            },\n                            () => authenticatedUser.onRefreshUserProfile()\n                          );\n                        }}\n                      />\n                    )}\n                  </Dialog>\n                )}\n              </ThemeConsumer>\n            )}\n          </AuthenticatedUserContext.Consumer>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport Changelog from '.';\nimport Text from '../../UI/Text';\nimport useForceUpdate from '../../Utils/UseForceUpdate';\n\ntype Props = {|\n  open: boolean,\n  onClose: () => void,\n|};\n\nconst ChangelogDialog = ({ open, onClose }: Props) => {\n  const forceUpdate = useForceUpdate();\n  if (!open) {\n    // Don't render anything, to avoid in particular sending useless requests.\n    return null;\n  }\n\n  const actions = [\n    <FlatButton\n      key=\"close\"\n      label={<Trans>Close</Trans>}\n      primary={true}\n      onClick={onClose}\n    />,\n  ];\n\n  return (\n    <Dialog\n      title={<Trans>What's new in GDevelop?</Trans>}\n      actions={actions}\n      open={open}\n      onRequestClose={onClose}\n      cannotBeDismissed={false}\n    >\n      <Text>\n        <Trans>\n          GDevelop was upgraded to a new version! Check out the changes.\n        </Trans>\n      </Text>\n      <Changelog\n        onUpdated={forceUpdate} // Force update to ensure dialog is properly positionned\n      />\n    </Dialog>\n  );\n};\n\nexport default ChangelogDialog;\n","// @flow\nimport * as React from 'react';\nimport ChangelogDialog from './ChangelogDialog';\nimport PreferencesContext from '../Preferences/PreferencesContext';\n\ntype ContainerProps = {|\n  defaultOpen: boolean,\n|};\n\nconst ChangelogDialogContainer = ({ defaultOpen }: ContainerProps) => {\n  const [open, setOpen] = React.useState(defaultOpen);\n\n  return <ChangelogDialog open={open} onClose={() => setOpen(false)} />;\n};\n\n/**\n * The container showing the ChangelogDialog only if a a new version\n * of GDevelop is detected.\n */\nexport default (props: {||}) => (\n  <PreferencesContext.Consumer>\n    {({ values, verifyIfIsNewVersion }) => (\n      <ChangelogDialogContainer\n        defaultOpen={verifyIfIsNewVersion() && values.autoDisplayChangelog}\n      />\n    )}\n  </PreferencesContext.Consumer>\n);\n","// @flow\nimport * as React from 'react';\nimport {\n  useCommand,\n  useCommandWithOptions,\n} from '../CommandPalette/CommandHooks';\nimport { type EventMetadata } from './EnumerateEventsMetadata';\n\ntype Props = {|\n  onAddStandardEvent: () => void,\n  onAddSubEvent: () => void,\n  canAddSubEvent: boolean,\n  onAddCommentEvent: () => void,\n  allEventsMetadata: Array<EventMetadata>,\n  onAddEvent: (eventType: string) => Array<gdBaseEvent>,\n  onToggleDisabledEvent: () => void,\n  canToggleEventDisabled: boolean,\n  onRemove: () => void,\n  canRemove: boolean,\n  undo: () => void,\n  canUndo: boolean,\n  redo: () => void,\n  canRedo: boolean,\n  onToggleSearchPanel: () => void,\n  onOpenSettings?: ?() => void,\n|};\n\nconst ToolbarCommands = (props: Props) => {\n  const { onAddEvent } = props;\n\n  useCommand('ADD_STANDARD_EVENT', true, {\n    handler: props.onAddStandardEvent,\n  });\n\n  useCommand('ADD_SUBEVENT', props.canAddSubEvent, {\n    handler: props.onAddSubEvent,\n  });\n\n  useCommand('ADD_COMMENT_EVENT', true, {\n    handler: props.onAddCommentEvent,\n  });\n\n  useCommand('TOGGLE_EVENT_DISABLED', props.canToggleEventDisabled, {\n    handler: props.onToggleDisabledEvent,\n  });\n\n  useCommandWithOptions('CHOOSE_AND_ADD_EVENT', true, {\n    generateOptions: React.useCallback(\n      () =>\n        props.allEventsMetadata.map(metadata => ({\n          text: metadata.fullName,\n          handler: () => {\n            onAddEvent(metadata.type);\n          },\n        })),\n      [props.allEventsMetadata, onAddEvent]\n    ),\n  });\n\n  useCommand('DELETE_SELECTION', props.canRemove, {\n    handler: props.onRemove,\n  });\n\n  useCommand('EVENTS_EDITOR_UNDO', props.canUndo, {\n    handler: props.undo,\n  });\n\n  useCommand('EVENTS_EDITOR_REDO', props.canRedo, {\n    handler: props.redo,\n  });\n\n  useCommand('SEARCH_EVENTS', true, {\n    handler: props.onToggleSearchPanel,\n  });\n\n  useCommand('OPEN_EXTENSION_SETTINGS', !!props.onOpenSettings, {\n    handler: props.onOpenSettings || (() => {}),\n  });\n\n  return null;\n};\n\nexport default ToolbarCommands;\n","//@flow\nimport { t } from '@lingui/macro';\nimport React, { PureComponent } from 'react';\nimport { ToolbarGroup } from '../UI/Toolbar';\nimport ToolbarSeparator from '../UI/ToolbarSeparator';\nimport ToolbarIcon from '../UI/ToolbarIcon';\nimport ElementWithMenu from '../UI/Menu/ElementWithMenu';\nimport ToolbarCommands from './ToolbarCommands';\nimport { type EventMetadata } from './EnumerateEventsMetadata';\n\ntype Props = {|\n  onAddStandardEvent: () => void,\n  onAddSubEvent: () => void,\n  canAddSubEvent: boolean,\n  onAddCommentEvent: () => void,\n  allEventsMetadata: Array<EventMetadata>,\n  onAddEvent: (eventType: string) => Array<gdBaseEvent>,\n  onToggleDisabledEvent: () => void,\n  canToggleEventDisabled: boolean,\n  onRemove: () => void,\n  canRemove: boolean,\n  undo: () => void,\n  canUndo: boolean,\n  redo: () => void,\n  canRedo: boolean,\n  onToggleSearchPanel: () => void,\n  onOpenSettings?: ?() => void,\n|};\n\nexport class Toolbar extends PureComponent<Props> {\n  render() {\n    return (\n      <>\n        <ToolbarCommands {...this.props} />\n        <ToolbarGroup lastChild>\n          <ToolbarIcon\n            onClick={this.props.onAddStandardEvent}\n            src=\"res/ribbon_default/eventadd32.png\"\n            tooltip={t`Add a new empty event`}\n          />\n          <ToolbarIcon\n            onClick={this.props.onAddSubEvent}\n            src=\"res/ribbon_default/subeventadd32.png\"\n            disabled={!this.props.canAddSubEvent}\n            tooltip={t`Add a sub-event to the selected event`}\n          />\n          <ToolbarIcon\n            onClick={this.props.onAddCommentEvent}\n            src=\"res/ribbon_default/commentaireadd32.png\"\n            tooltip={t`Add a comment`}\n          />\n          <ElementWithMenu\n            element={\n              <ToolbarIcon\n                src=\"res/ribbon_default/add32.png\"\n                tooltip={t`Choose and add an event`}\n              />\n            }\n            buildMenuTemplate={() =>\n              this.props.allEventsMetadata.map(metadata => {\n                return {\n                  label: metadata.fullName,\n                  click: () => {\n                    this.props.onAddEvent(metadata.type);\n                  },\n                };\n              })\n            }\n          />\n          <ToolbarSeparator />\n          <ToolbarIcon\n            onClick={this.props.onRemove}\n            src=\"res/ribbon_default/deleteselected32.png\"\n            disabled={!this.props.canRemove}\n            tooltip={t`Delete the selected event(s)`}\n          />\n          <ToolbarIcon\n            onClick={this.props.undo}\n            src=\"res/ribbon_default/undo32.png\"\n            disabled={!this.props.canUndo}\n            tooltip={t`Undo the last changes`}\n          />\n          <ToolbarIcon\n            onClick={this.props.redo}\n            src=\"res/ribbon_default/redo32.png\"\n            disabled={!this.props.canRedo}\n            tooltip={t`Redo the last changes`}\n          />\n          <ToolbarSeparator />\n          <ToolbarIcon\n            onClick={() => this.props.onToggleSearchPanel()}\n            src=\"res/ribbon_default/search32.png\"\n            tooltip={t`Search in events`}\n            acceleratorString={'CmdOrCtrl+F'}\n          />\n          {this.props.onOpenSettings && <ToolbarSeparator />}\n          {this.props.onOpenSettings && (\n            <ToolbarIcon\n              onClick={this.props.onOpenSettings}\n              src=\"res/ribbon_default/pref32.png\"\n              tooltip={t`Open settings`}\n            />\n          )}\n        </ToolbarGroup>\n      </>\n    );\n  }\n}\n\nexport default Toolbar;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { AutoSizer } from 'react-virtualized';\nimport SortableVirtualizedItemList from '../UI/SortableVirtualizedItemList';\nimport SearchBar from '../UI/SearchBar';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport Background from '../UI/Background';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport {\n  enumerateEventsBasedBehaviors,\n  filterEventsBasedBehaviorsList,\n} from './EnumerateEventsBasedBehaviors';\nimport Clipboard, { SafeExtractor } from '../Utils/Clipboard';\nimport Window from '../Utils/Window';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\n\nconst EVENTS_BASED_BEHAVIOR_CLIPBOARD_KIND = 'Events Based Behavior';\n\nconst styles = {\n  listContainer: {\n    flex: 1,\n  },\n};\n\ntype State = {|\n  renamedEventsBasedBehavior: ?gdEventsBasedBehavior,\n  searchText: string,\n|};\n\nconst getEventsBasedBehaviorName = (\n  eventsBasedBehavior: gdEventsBasedBehavior\n) => eventsBasedBehavior.getName();\n\ntype Props = {|\n  project: gdProject,\n  eventsBasedBehaviorsList: gdEventsBasedBehaviorsList,\n  selectedEventsBasedBehavior: ?gdEventsBasedBehavior,\n  onSelectEventsBasedBehavior: (\n    eventsBasedBehavior: ?gdEventsBasedBehavior\n  ) => void,\n  onDeleteEventsBasedBehavior: (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    cb: (boolean) => void\n  ) => void,\n  onRenameEventsBasedBehavior: (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    newName: string,\n    cb: (boolean) => void\n  ) => void,\n  onEventsBasedBehaviorRenamed: (\n    eventsBasedBehavior: gdEventsBasedBehavior\n  ) => void,\n  onEditProperties: (eventsBasedBehavior: gdEventsBasedBehavior) => void,\n  unsavedChanges?: ?UnsavedChanges,\n|};\n\nexport default class EventsBasedBehaviorsList extends React.Component<\n  Props,\n  State\n> {\n  static defaultProps = {\n    onDeleteEventsBasedBehavior: (\n      eventsBasedBehavior: gdEventsBasedBehavior,\n      cb: boolean => void\n    ) => cb(true),\n    onRenameEventsBasedBehavior: (\n      eventsBasedBehavior: gdEventsBasedBehavior,\n      newName: string,\n      cb: boolean => void\n    ) => cb(true),\n  };\n\n  sortableList: ?SortableVirtualizedItemList<gdEventsBasedBehavior>;\n  state: State = {\n    renamedEventsBasedBehavior: null,\n    searchText: '',\n  };\n\n  _deleteEventsBasedBehavior = (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    { askForConfirmation }: {| askForConfirmation: boolean |}\n  ) => {\n    const { eventsBasedBehaviorsList } = this.props;\n\n    if (askForConfirmation) {\n      const answer = Window.showConfirmDialog(\n        \"Are you sure you want to remove this behavior? This can't be undone.\"\n      );\n      if (!answer) return;\n    }\n\n    this.props.onDeleteEventsBasedBehavior(eventsBasedBehavior, doRemove => {\n      if (!doRemove) return;\n\n      eventsBasedBehaviorsList.remove(eventsBasedBehavior.getName());\n      this._onEventsBasedBehaviorModified();\n    });\n  };\n\n  _editName = (renamedEventsBasedBehavior: ?gdEventsBasedBehavior) => {\n    this.setState(\n      {\n        renamedEventsBasedBehavior,\n      },\n      () => {\n        if (this.sortableList) this.sortableList.forceUpdateGrid();\n      }\n    );\n  };\n\n  _rename = (eventsBasedBehavior: gdEventsBasedBehavior, newName: string) => {\n    const { eventsBasedBehaviorsList } = this.props;\n    this.setState({\n      renamedEventsBasedBehavior: null,\n    });\n\n    if (eventsBasedBehavior.getName() === newName) return;\n\n    if (eventsBasedBehaviorsList.has(newName)) {\n      showWarningBox('Another behavior with this name already exists.', {\n        delayToNextTick: true,\n      });\n      return;\n    }\n\n    this.props.onRenameEventsBasedBehavior(\n      eventsBasedBehavior,\n      newName,\n      doRename => {\n        if (!doRename) return;\n        eventsBasedBehavior.setName(newName);\n        this._onEventsBasedBehaviorModified();\n        this.props.onEventsBasedBehaviorRenamed(eventsBasedBehavior);\n      }\n    );\n  };\n\n  _moveSelectionTo = (\n    destinationEventsBasedBehavior: gdEventsBasedBehavior\n  ) => {\n    const {\n      eventsBasedBehaviorsList,\n      selectedEventsBasedBehavior,\n    } = this.props;\n    if (!selectedEventsBasedBehavior) return;\n\n    eventsBasedBehaviorsList.move(\n      eventsBasedBehaviorsList.getPosition(selectedEventsBasedBehavior),\n      eventsBasedBehaviorsList.getPosition(destinationEventsBasedBehavior)\n    );\n\n    this.forceUpdateList();\n  };\n\n  forceUpdateList = () => {\n    this._onEventsBasedBehaviorModified();\n    if (this.sortableList) this.sortableList.forceUpdateGrid();\n  };\n\n  _copyEventsBasedBehavior = (eventsBasedBehavior: gdEventsBasedBehavior) => {\n    Clipboard.set(EVENTS_BASED_BEHAVIOR_CLIPBOARD_KIND, {\n      eventsBasedBehavior: serializeToJSObject(eventsBasedBehavior),\n      name: eventsBasedBehavior.getName(),\n    });\n  };\n\n  _cutEventsBasedBehavior = (eventsBasedBehavior: gdEventsBasedBehavior) => {\n    this._copyEventsBasedBehavior(eventsBasedBehavior);\n    this._deleteEventsBasedBehavior(eventsBasedBehavior, {\n      askForConfirmation: false,\n    });\n  };\n\n  _pasteEventsBasedBehavior = (index: number) => {\n    if (!Clipboard.has(EVENTS_BASED_BEHAVIOR_CLIPBOARD_KIND)) return;\n\n    const clipboardContent = Clipboard.get(\n      EVENTS_BASED_BEHAVIOR_CLIPBOARD_KIND\n    );\n    const copiedEventsBasedBehavior = SafeExtractor.extractObjectProperty(\n      clipboardContent,\n      'eventsBasedBehavior'\n    );\n    const name = SafeExtractor.extractStringProperty(clipboardContent, 'name');\n    if (!name || !copiedEventsBasedBehavior) return;\n\n    const { project, eventsBasedBehaviorsList } = this.props;\n\n    const newName = newNameGenerator(name, name =>\n      eventsBasedBehaviorsList.has(name)\n    );\n\n    const newEventsBasedBehavior = eventsBasedBehaviorsList.insertNew(\n      newName,\n      index\n    );\n\n    unserializeFromJSObject(\n      newEventsBasedBehavior,\n      copiedEventsBasedBehavior,\n      'unserializeFrom',\n      project\n    );\n    newEventsBasedBehavior.setName(newName);\n\n    this._onEventsBasedBehaviorModified();\n  };\n\n  _renderEventsBasedBehaviorMenuTemplate = (i18n: I18nType) => (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    index: number\n  ) => {\n    return [\n      {\n        label: i18n._(t`Properties`),\n        click: () => this.props.onEditProperties(eventsBasedBehavior),\n      },\n      {\n        type: 'separator',\n      },\n      {\n        label: i18n._(t`Rename`),\n        click: () => this._editName(eventsBasedBehavior),\n      },\n      {\n        label: i18n._(t`Delete`),\n        click: () =>\n          this._deleteEventsBasedBehavior(eventsBasedBehavior, {\n            askForConfirmation: true,\n          }),\n      },\n      {\n        type: 'separator',\n      },\n      {\n        label: i18n._(t`Copy`),\n        click: () => this._copyEventsBasedBehavior(eventsBasedBehavior),\n      },\n      {\n        label: i18n._(t`Cut`),\n        click: () => this._cutEventsBasedBehavior(eventsBasedBehavior),\n      },\n      {\n        label: i18n._(t`Paste`),\n        enabled: Clipboard.has(EVENTS_BASED_BEHAVIOR_CLIPBOARD_KIND),\n        click: () => this._pasteEventsBasedBehavior(index),\n      },\n    ];\n  };\n\n  _addNewEventsBasedBehavior = () => {\n    const { eventsBasedBehaviorsList } = this.props;\n\n    const name = newNameGenerator('MyBehavior', name =>\n      eventsBasedBehaviorsList.has(name)\n    );\n    eventsBasedBehaviorsList.insertNew(\n      name,\n      eventsBasedBehaviorsList.getCount()\n    );\n    this._onEventsBasedBehaviorModified();\n  };\n\n  _onEventsBasedBehaviorModified() {\n    if (this.props.unsavedChanges)\n      this.props.unsavedChanges.triggerUnsavedChanges();\n    this.forceUpdate();\n  }\n\n  render() {\n    const {\n      project,\n      eventsBasedBehaviorsList,\n      selectedEventsBasedBehavior,\n      onSelectEventsBasedBehavior,\n    } = this.props;\n    const { searchText } = this.state;\n\n    const list = filterEventsBasedBehaviorsList(\n      enumerateEventsBasedBehaviors(eventsBasedBehaviorsList),\n      searchText\n    );\n\n    // Force List component to be mounted again if project or eventsBasedBehaviorsList\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const listKey = project.ptr + ';' + eventsBasedBehaviorsList.ptr;\n\n    return (\n      <Background>\n        <div style={styles.listContainer}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <I18n>\n                {({ i18n }) => (\n                  <SortableVirtualizedItemList\n                    key={listKey}\n                    ref={sortableList => (this.sortableList = sortableList)}\n                    fullList={list}\n                    width={width}\n                    height={height}\n                    onAddNewItem={this._addNewEventsBasedBehavior}\n                    addNewItemLabel={<Trans>Add a new behavior</Trans>}\n                    getItemName={getEventsBasedBehaviorName}\n                    selectedItems={\n                      selectedEventsBasedBehavior\n                        ? [selectedEventsBasedBehavior]\n                        : []\n                    }\n                    onItemSelected={onSelectEventsBasedBehavior}\n                    renamedItem={this.state.renamedEventsBasedBehavior}\n                    onRename={this._rename}\n                    onMoveSelectionToItem={this._moveSelectionTo}\n                    buildMenuTemplate={this._renderEventsBasedBehaviorMenuTemplate(\n                      i18n\n                    )}\n                    reactDndType=\"GD_EVENTS_BASED_BEHAVIOR\"\n                  />\n                )}\n              </I18n>\n            )}\n          </AutoSizer>\n        </div>\n        <SearchBar\n          value={searchText}\n          onRequestSearch={() => {}}\n          onChange={text =>\n            this.setState({\n              searchText: text,\n            })\n          }\n        />\n      </Background>\n    );\n  }\n}\n","//@flow\nimport { mapVector } from '../Utils/MapFor';\n\nexport const enumerateEventsBasedBehaviors = (\n  eventsFunctionsContainer: gdEventsBasedBehaviorsList\n): Array<gdEventsBasedBehavior> =>\n  mapVector(\n    eventsFunctionsContainer,\n    eventsBasedBehavior => eventsBasedBehavior\n  );\n\nexport const filterEventsBasedBehaviorsList = (\n  list: Array<gdEventsBasedBehavior>,\n  searchText: string\n): Array<gdEventsBasedBehavior> => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list.filter(\n    (item: any) =>\n      item\n        .getName()\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport { Column, Line, Spacer } from '../../../../UI/Grid';\nimport ImagePreview from '../../../../ResourcesList/ResourcePreview/ImagePreview';\nimport Replay from '@material-ui/icons/Replay';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport Pause from '@material-ui/icons/Pause';\nimport Timer from '@material-ui/icons/Timer';\nimport TextField from '../../../../UI/TextField';\nimport FlatButton from '../../../../UI/FlatButton';\nimport Text from '../../../../UI/Text';\n\ntype Props = {|\n  spritesContainer: Object,\n  resourcesLoader: Object,\n  project: Object,\n  timeBetweenFrames: number,\n  onChangeTimeBetweenFrames: number => void,\n|};\n\ntype State = {|\n  currentFrameIndex: number,\n  currentFrameElapsedTime: number,\n  paused: boolean,\n  fps: number,\n|};\n\nconst styles = {\n  timeField: {\n    width: 75,\n  },\n  timeIcon: {\n    paddingLeft: 6,\n    paddingRight: 8,\n  },\n};\n\nexport default class AnimationPreview extends Component<Props, State> {\n  state = {\n    currentFrameIndex: 0,\n    currentFrameElapsedTime: 0,\n    paused: false,\n    fps: Math.round(1 / this.props.timeBetweenFrames),\n  };\n\n  nextUpdate = null;\n  previousUpdateTimeInMs = 0;\n\n  componentDidMount() {\n    this.nextUpdate = requestAnimationFrame(this._updateAnimation);\n  }\n\n  componentWillUnmount() {\n    if (this.nextUpdate) cancelAnimationFrame(this.nextUpdate);\n  }\n\n  replay = () =>\n    this.setState({\n      currentFrameIndex: 0,\n      currentFrameElapsedTime: 0,\n      paused: false,\n    });\n\n  play = () =>\n    this.setState({\n      paused: false,\n    });\n\n  pause = () =>\n    this.setState({\n      paused: true,\n    });\n\n  _updateAnimation = (updateTimeInMs: number) => {\n    const elapsedTime = this.previousUpdateTimeInMs\n      ? (updateTimeInMs - this.previousUpdateTimeInMs) / 1000\n      : 0;\n\n    const { spritesContainer, timeBetweenFrames } = this.props;\n    const { currentFrameIndex, currentFrameElapsedTime, paused } = this.state;\n\n    let newFrameIndex = currentFrameIndex;\n    let newFrameElapsedTime = currentFrameElapsedTime;\n    newFrameElapsedTime += paused ? 0 : elapsedTime;\n\n    if (newFrameElapsedTime > timeBetweenFrames) {\n      const count = Math.floor(newFrameElapsedTime / timeBetweenFrames);\n      newFrameIndex += count;\n      newFrameElapsedTime = newFrameElapsedTime - count * timeBetweenFrames;\n      if (newFrameElapsedTime < 0) newFrameElapsedTime = 0;\n    }\n\n    if (newFrameIndex >= spritesContainer.getSpritesCount()) {\n      newFrameIndex = spritesContainer.isLooping()\n        ? newFrameIndex % spritesContainer.getSpritesCount()\n        : spritesContainer.getSpritesCount() - 1;\n    }\n    if (newFrameIndex < 0) newFrameIndex = 0; //May happen if there is no frame.\n\n    this.setState({\n      currentFrameIndex: newFrameIndex,\n      currentFrameElapsedTime: newFrameElapsedTime,\n    });\n    this.nextUpdate = requestAnimationFrame(this._updateAnimation);\n    this.previousUpdateTimeInMs = updateTimeInMs;\n  };\n\n  render() {\n    const {\n      spritesContainer,\n      resourcesLoader,\n      project,\n      timeBetweenFrames,\n      onChangeTimeBetweenFrames,\n    } = this.props;\n    const { currentFrameIndex, paused, fps } = this.state;\n\n    const hasValidSprite =\n      currentFrameIndex < spritesContainer.getSpritesCount();\n    const sprite = hasValidSprite\n      ? spritesContainer.getSprite(currentFrameIndex)\n      : null;\n\n    return (\n      <Column expand noOverflowParent>\n        <ImagePreview\n          resourceName={sprite ? sprite.getImageName() : ''}\n          resourcesLoader={resourcesLoader}\n          project={project}\n        />\n        <Line noMargin alignItems=\"center\">\n          <Text>\n            <Trans>FPS:</Trans>\n          </Text>\n          <Spacer />\n          <TextField\n            margin=\"none\"\n            value={fps}\n            onChange={(e, text) => {\n              const fps = parseFloat(text);\n              if (fps > 0) {\n                this.setState({ fps });\n                onChangeTimeBetweenFrames(parseFloat((1 / fps).toFixed(4)));\n                this.replay();\n              }\n            }}\n            id=\"direction-time-between-frames\"\n            type=\"number\"\n            step={1}\n            min={1}\n            max={100}\n            style={styles.timeField}\n            autoFocus={true}\n          />\n          <Timer style={styles.timeIcon} />\n          <TextField\n            margin=\"none\"\n            value={timeBetweenFrames}\n            onChange={(e, text) => {\n              const time = parseFloat(text);\n              if (time > 0) {\n                this.setState({ fps: Math.round(1 / time) });\n                onChangeTimeBetweenFrames(time);\n                this.replay();\n              }\n            }}\n            id=\"direction-time-between-frames\"\n            type=\"number\"\n            step={0.005}\n            precision={2}\n            min={0.01}\n            max={5}\n            style={styles.timeField}\n          />\n          <FlatButton\n            icon={<Replay />}\n            label={<Trans>Replay</Trans>}\n            onClick={this.replay}\n          />\n          <FlatButton\n            icon={paused ? <PlayArrow /> : <Pause />}\n            label={paused ? 'Play' : 'Pause'}\n            onClick={paused ? this.play : this.pause}\n          />\n        </Line>\n      </Column>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport Timer from '@material-ui/icons/Timer';\nimport FlatButton from '../../../UI/FlatButton';\nimport Checkbox from '../../../UI/Checkbox';\nimport Brush from '@material-ui/icons/Brush';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport TextField from '../../../UI/TextField';\nimport Dialog from '../../../UI/Dialog';\nimport AnimationPreview from './AnimationPreview';\nimport ResourcesLoader from '../../../ResourcesLoader';\nimport { type ResourceExternalEditor } from '../../../ResourcesList/ResourceExternalEditor.flow';\nimport { ResponsiveWindowMeasurer } from '../../../UI/Reponsive/ResponsiveWindowMeasurer';\n\nconst styles = {\n  container: {\n    paddingLeft: 12,\n    paddingRight: 12,\n    display: 'flex',\n    alignItems: 'center',\n  },\n  timeField: {\n    width: 75,\n  },\n  timeIcon: {\n    paddingLeft: 6,\n    paddingRight: 6,\n  },\n  spacer: {\n    width: 16,\n  },\n};\n\nconst formatTime = (time: number) => Number(time.toFixed(6));\n\ntype Props = {|\n  direction: gdDirection,\n  resourcesLoader: typeof ResourcesLoader,\n  project: gdProject,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  onEditWith: ResourceExternalEditor => void,\n|};\n\ntype State = {|\n  timeBetweenFrames: number,\n  timeError: boolean,\n  previewOpen: boolean,\n|};\n\nexport default class DirectionTools extends Component<Props, State> {\n  state = {\n    timeBetweenFrames: formatTime(this.props.direction.getTimeBetweenFrames()),\n    timeError: false,\n    previewOpen: false,\n  };\n\n  componentWillReceiveProps(newProps: Props) {\n    this.setState({\n      timeBetweenFrames: formatTime(\n        this.props.direction.getTimeBetweenFrames()\n      ),\n      timeError: false,\n    });\n  }\n\n  saveTimeBetweenFrames = () => {\n    const { direction } = this.props;\n\n    const newTime = Math.max(parseFloat(this.state.timeBetweenFrames), 0.00001);\n    const newTimeIsValid = !isNaN(newTime);\n\n    if (newTimeIsValid) direction.setTimeBetweenFrames(newTime);\n    this.setState({\n      timeBetweenFrames: formatTime(\n        this.props.direction.getTimeBetweenFrames()\n      ),\n      timeError: newTimeIsValid,\n    });\n  };\n\n  setLooping = (check: boolean) => {\n    const { direction } = this.props;\n\n    direction.setLoop(!!check);\n    this.forceUpdate();\n  };\n\n  openPreview = (open: boolean) => {\n    this.setState({\n      previewOpen: open,\n    });\n    if (!open) {\n      this.saveTimeBetweenFrames();\n    }\n  };\n\n  render() {\n    const {\n      direction,\n      resourcesLoader,\n      project,\n      resourceExternalEditors,\n      onEditWith,\n    } = this.props;\n\n    const imageResourceExternalEditors = resourceExternalEditors.filter(\n      ({ kind }) => kind === 'image'\n    );\n\n    return (\n      <div style={styles.container}>\n        <ResponsiveWindowMeasurer>\n          {windowWidth =>\n            windowWidth !== 'small' &&\n            !!imageResourceExternalEditors.length && (\n              <FlatButton\n                label={imageResourceExternalEditors[0].displayName}\n                icon={<Brush />}\n                onClick={() => onEditWith(imageResourceExternalEditors[0])}\n              />\n            )\n          }\n        </ResponsiveWindowMeasurer>\n        <FlatButton\n          label={<Trans>Preview</Trans>}\n          icon={<PlayArrow />}\n          onClick={() => this.openPreview(true)}\n        />\n        <Timer style={styles.timeIcon} />\n        <TextField\n          value={this.state.timeBetweenFrames}\n          onChange={(e, text) =>\n            this.setState({ timeBetweenFrames: parseFloat(text) || 0 })\n          }\n          onBlur={() => this.saveTimeBetweenFrames()}\n          id=\"direction-time-between-frames\"\n          margin=\"none\"\n          style={styles.timeField}\n          type=\"number\"\n          step={0.005}\n          precision={2}\n          min={0.01}\n          max={5}\n        />\n        <span style={styles.spacer} />\n        <Checkbox\n          checked={direction.isLooping()}\n          label={<Trans>Loop</Trans>}\n          onCheck={(e, check) => this.setLooping(check)}\n        />\n        {this.state.previewOpen && (\n          <Dialog\n            actions={[\n              <FlatButton\n                label={<Trans>OK</Trans>}\n                primary\n                onClick={() => this.openPreview(false)}\n                key=\"ok\"\n              />,\n            ]}\n            noMargin\n            cannotBeDismissed={false}\n            onRequestClose={() => this.openPreview(false)}\n            open={this.state.previewOpen}\n            fullHeight\n            flexBody\n          >\n            <AnimationPreview\n              spritesContainer={direction}\n              resourcesLoader={resourcesLoader}\n              project={project}\n              timeBetweenFrames={this.state.timeBetweenFrames}\n              onChangeTimeBetweenFrames={text =>\n                this.setState({ timeBetweenFrames: text })\n              }\n            />\n          </Dialog>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport { useCommand } from '../CommandPalette/CommandHooks';\n\ntype Props = {|\n  openObjectsList: () => void,\n  openObjectGroupsList: () => void,\n  openPropertiesPanel: () => void,\n  toggleInstancesList: () => void,\n  toggleLayersList: () => void,\n  undo: () => void,\n  canUndo: boolean,\n  redo: () => void,\n  canRedo: boolean,\n  deleteSelection: () => void,\n  canDeleteSelection: boolean,\n  toggleWindowMask: () => void,\n  toggleGrid: () => void,\n  setupGrid: () => void,\n|};\n\nconst ToolbarCommands = (props: Props) => {\n  useCommand('OPEN_OBJECTS_PANEL', true, {\n    handler: props.openObjectsList,\n  });\n\n  useCommand('OPEN_OBJECT_GROUPS_PANEL', true, {\n    handler: props.openObjectGroupsList,\n  });\n\n  useCommand('OPEN_PROPERTIES_PANEL', true, {\n    handler: props.openPropertiesPanel,\n  });\n\n  useCommand('TOGGLE_INSTANCES_PANEL', true, {\n    handler: props.toggleInstancesList,\n  });\n\n  useCommand('TOGGLE_LAYERS_PANEL', true, {\n    handler: props.toggleLayersList,\n  });\n\n  useCommand('SCENE_EDITOR_UNDO', props.canUndo, {\n    handler: props.undo,\n  });\n\n  useCommand('SCENE_EDITOR_REDO', props.canRedo, {\n    handler: props.redo,\n  });\n\n  useCommand('DELETE_INSTANCES', props.canDeleteSelection, {\n    handler: props.deleteSelection,\n  });\n\n  useCommand('TOGGLE_WINDOW_MASK', true, {\n    handler: props.toggleWindowMask,\n  });\n\n  useCommand('TOGGLE_GRID', true, {\n    handler: props.toggleGrid,\n  });\n\n  useCommand('OPEN_SETUP_GRID', true, {\n    handler: props.setupGrid,\n  });\n\n  return null;\n};\n\nexport default ToolbarCommands;\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\nimport React, { PureComponent } from 'react';\nimport { ToolbarGroup } from '../UI/Toolbar';\nimport ToolbarSeparator from '../UI/ToolbarSeparator';\nimport ToolbarIcon from '../UI/ToolbarIcon';\nimport ElementWithMenu from '../UI/Menu/ElementWithMenu';\nimport ToolbarCommands from './ToolbarCommands';\nimport InstancesSelection from '../InstancesEditor/InstancesSelection';\n\ntype Props = {|\n  openObjectsList: () => void,\n  openObjectGroupsList: () => void,\n  openProperties: () => void,\n  undo: () => void,\n  canUndo: boolean,\n  redo: () => void,\n  canRedo: boolean,\n  deleteSelection: () => void,\n  instancesSelection: InstancesSelection,\n  toggleInstancesList: () => void,\n  toggleLayersList: () => void,\n  isWindowMaskShown: () => boolean,\n  toggleWindowMask: () => void,\n  isGridShown: () => boolean,\n  toggleGrid: () => void,\n  openSetupGrid: () => void,\n  zoomIn: () => void,\n  zoomOut: () => void,\n  centerView: () => void,\n  setZoomFactor: number => void,\n  onOpenSettings?: ?() => void,\n|};\n\nexport class Toolbar extends PureComponent<Props> {\n  render() {\n    return (\n      <>\n        <ToolbarCommands\n          openObjectsList={this.props.openObjectsList}\n          openObjectGroupsList={this.props.openObjectGroupsList}\n          openPropertiesPanel={this.props.openProperties}\n          toggleInstancesList={this.props.toggleInstancesList}\n          toggleLayersList={this.props.toggleLayersList}\n          undo={this.props.undo}\n          canUndo={this.props.canUndo}\n          redo={this.props.redo}\n          canRedo={this.props.canRedo}\n          deleteSelection={this.props.deleteSelection}\n          toggleWindowMask={this.props.toggleWindowMask}\n          toggleGrid={this.props.toggleGrid}\n          setupGrid={this.props.openSetupGrid}\n          canDeleteSelection={\n            this.props.instancesSelection.getSelectedInstances().length !== 0\n          }\n        />\n        <ToolbarGroup lastChild>\n          <ToolbarIcon\n            onClick={this.props.openObjectsList}\n            src=\"res/ribbon_default/objects64.png\"\n            tooltip={t`Open the objects editor`}\n          />\n          <ToolbarIcon\n            onClick={this.props.openObjectGroupsList}\n            src={'res/ribbon_default/objectsgroups64.png'}\n            tooltip={t`Open the objects groups editor`}\n          />\n          <ToolbarIcon\n            onClick={this.props.openProperties}\n            src=\"res/ribbon_default/editprop32.png\"\n            tooltip={t`Open the properties panel`}\n          />\n          <ToolbarIcon\n            onClick={this.props.toggleInstancesList}\n            src=\"res/ribbon_default/ObjectsPositionsList32.png\"\n            tooltip={t`Open the list of instances`}\n          />\n          <ToolbarIcon\n            onClick={this.props.toggleLayersList}\n            src=\"res/ribbon_default/layers32.png\"\n            tooltip={t`Open the layers editor`}\n          />\n          <ToolbarSeparator />\n          <ToolbarIcon\n            onClick={this.props.undo}\n            src=\"res/ribbon_default/undo32.png\"\n            disabled={!this.props.canUndo}\n            tooltip={t`Undo the last changes`}\n          />\n          <ToolbarIcon\n            onClick={this.props.redo}\n            src=\"res/ribbon_default/redo32.png\"\n            disabled={!this.props.canRedo}\n            tooltip={t`Redo the last changes`}\n          />\n          <ToolbarSeparator />\n          <ToolbarIcon\n            onClick={this.props.deleteSelection}\n            src=\"res/ribbon_default/deleteselected32.png\"\n            disabled={\n              !this.props.instancesSelection.getSelectedInstances().length\n            }\n            tooltip={t`Delete the selected instances from the scene`}\n          />\n          <ToolbarSeparator />\n          <ElementWithMenu\n            element={\n              <ToolbarIcon\n                src=\"res/ribbon_default/grid32.png\"\n                tooltip={t`Toggle/edit grid`}\n              />\n            }\n            buildMenuTemplate={(i18n: I18nType) => [\n              {\n                type: 'checkbox',\n                label: i18n._(t`Show Mask`),\n                checked: this.props.isWindowMaskShown(),\n                click: () => this.props.toggleWindowMask(),\n              },\n              {\n                type: 'checkbox',\n                label: i18n._(t`Show grid`),\n                checked: this.props.isGridShown(),\n                click: () => this.props.toggleGrid(),\n              },\n              { type: 'separator' },\n              {\n                label: i18n._(t`Setup grid`),\n                click: () => this.props.openSetupGrid(),\n              },\n            ]}\n          />\n          <ElementWithMenu\n            element={\n              <ToolbarIcon\n                src=\"res/ribbon_default/zoom32.png\"\n                tooltip={t`Change editor zoom`}\n              />\n            }\n            buildMenuTemplate={(i18n: I18nType) => [\n              {\n                label: i18n._(t`Zoom in`),\n                click: this.props.zoomIn,\n                accelerator: 'CmdOrCtrl+numadd',\n              },\n              {\n                label: i18n._(t`Zoom out`),\n                click: this.props.zoomOut,\n                accelerator: 'CmdOrCtrl+numsub',\n              },\n              {\n                label: i18n._(t`Center View`),\n                click: () => this.props.centerView(),\n              },\n              { type: 'separator' },\n              { label: '5%', click: () => this.props.setZoomFactor(0.05) },\n              { label: '10%', click: () => this.props.setZoomFactor(0.1) },\n              { label: '25%', click: () => this.props.setZoomFactor(0.25) },\n              { label: '50%', click: () => this.props.setZoomFactor(0.5) },\n              { label: '100%', click: () => this.props.setZoomFactor(1.0) },\n              { label: '150%', click: () => this.props.setZoomFactor(1.5) },\n              { label: '200%', click: () => this.props.setZoomFactor(2.0) },\n              { label: '400%', click: () => this.props.setZoomFactor(4.0) },\n            ]}\n          />\n          {this.props.onOpenSettings && <ToolbarSeparator />}\n          {this.props.onOpenSettings && (\n            <ToolbarIcon\n              onClick={this.props.onOpenSettings}\n              src=\"res/ribbon_default/pref32.png\"\n              tooltip={t`Open settings`}\n            />\n          )}\n        </ToolbarGroup>\n      </>\n    );\n  }\n}\n\nexport default Toolbar;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { largeSelectedArea, largeSelectableArea } from '../ClassNames';\nimport { type EventRendererProps } from './EventRenderer';\n\nexport default class UnknownEvent extends React.Component<\n  EventRendererProps,\n  *\n> {\n  render() {\n    return (\n      <p\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n        })}\n      >\n        {'Unknown event of type ' + this.props.event.getType()}\n      </p>\n    );\n  }\n}\n","import UnknownEvent from './Renderers/UnknownEvent';\nimport StandardEvent from './Renderers/StandardEvent';\nimport GroupEvent from './Renderers/GroupEvent';\nimport CommentEvent from './Renderers/CommentEvent';\nimport ForEachEvent from './Renderers/ForEachEvent';\nimport ForEachChildVariableEvent from './Renderers/ForEachChildVariableEvent';\nimport RepeatEvent from './Renderers/RepeatEvent';\nimport WhileEvent from './Renderers/WhileEvent';\nimport LinkEvent from './Renderers/LinkEvent';\nimport JsCodeEvent from './Renderers/JsCodeEvent';\n\nexport default {\n  components: {\n    unknownEvent: UnknownEvent,\n    'BuiltinCommonInstructions::Standard': StandardEvent,\n    'BuiltinCommonInstructions::Group': GroupEvent,\n    'BuiltinCommonInstructions::Comment': CommentEvent,\n    'BuiltinCommonInstructions::ForEach': ForEachEvent,\n    'BuiltinCommonInstructions::ForEachChildVariable': ForEachChildVariableEvent,\n    'BuiltinCommonInstructions::Repeat': RepeatEvent,\n    'BuiltinCommonInstructions::While': WhileEvent,\n    'BuiltinCommonInstructions::Link': LinkEvent,\n    'BuiltinCommonInstructions::JsCode': JsCodeEvent,\n  },\n  getEventComponent: function(event) {\n    if (this.components.hasOwnProperty(event.getType()))\n      return this.components[event.getType()];\n    else return this.components.unknownEvent;\n  },\n  registerEvent: function(eventType, renderFunction) {\n    if (!this.components.hasOwnProperty(eventType)) {\n      console.warn(\n        'Tried to register renderer for events \"' +\n          eventType +\n          '\", but a renderer already exists.'\n      );\n      return;\n    }\n\n    this.components[eventType] = renderFunction;\n  },\n};\n","//@flow\nimport React from 'react';\nimport { LeaderboardAdmin } from '../GameDashboard/LeaderboardAdmin';\n\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport HelpButton from '../UI/HelpButton';\nimport { Trans } from '@lingui/macro';\n\ntype Props = {|\n  onClose: () => void,\n  open: boolean,\n  project: gdProject,\n|};\n\nconst LeaderboardDialog = ({ onClose, open, project }: Props) => {\n  const [isLoading, setIsLoading] = React.useState(false);\n  return (\n    <Dialog\n      actions={[\n        <FlatButton\n          label={<Trans>Close</Trans>}\n          disabled={isLoading}\n          onClick={onClose}\n          key={'Close'}\n        />,\n      ]}\n      secondaryActions={[\n        <HelpButton\n          key=\"help\"\n          helpPagePath=\"/interface/games-dashboard/leaderboard-administration\"\n        />,\n      ]}\n      open={open}\n      cannotBeDismissed={true}\n      onRequestClose={() => {\n        if (!isLoading) onClose();\n      }}\n      title={<Trans>Leaderboards</Trans>}\n      flexBody\n      fullHeight\n    >\n      <LeaderboardAdmin onLoading={setIsLoading} project={project} />\n    </Dialog>\n  );\n};\n\nexport default LeaderboardDialog;\n","// @flow\nimport React from 'react';\nimport { Trans, t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport {\n  type ParameterFieldProps,\n  type ParameterFieldInterface,\n} from './ParameterFieldCommons';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\nimport { TextFieldWithButtonLayout } from '../../UI/Layout';\nimport RaisedButtonWithSplitMenu from '../../UI/RaisedButtonWithSplitMenu';\nimport { type Leaderboard } from '../../Utils/GDevelopServices/Play';\nimport LeaderboardContext from '../../Leaderboard/LeaderboardContext';\nimport LeaderboardDialog from '../../Leaderboard/LeaderboardDialog';\nimport GenericExpressionField from './GenericExpressionField';\nimport { breakUuid } from '../../Utils/GDevelopServices/Play';\nimport { useOnlineStatus } from '../../Utils/OnlineStatus';\n\nconst getInlineParameterDisplayValue = (\n  leaderboards: ?Array<Leaderboard>,\n  value: string\n): string => {\n  if (!leaderboards) return value;\n  const leaderboard = leaderboards.find(\n    leaderboard => `\"${leaderboard.id}\"` === value\n  );\n  return leaderboard ? leaderboard.name : value;\n};\n\nconst useFetchLeaderboards = () => {\n  const { leaderboards, listLeaderboards } = React.useContext(\n    LeaderboardContext\n  );\n  const fetchLeaderboards = React.useCallback(\n    async () => {\n      await listLeaderboards();\n    },\n    [listLeaderboards]\n  );\n  React.useEffect(\n    () => {\n      if (!leaderboards) {\n        fetchLeaderboards();\n      }\n    },\n    [fetchLeaderboards, leaderboards]\n  );\n\n  return leaderboards;\n};\n\nexport default React.forwardRef<ParameterFieldProps, ParameterFieldInterface>(\n  function LeaderboardIdField(props, ref) {\n    const isOnline = useOnlineStatus();\n    const leaderboards = useFetchLeaderboards();\n    const [isAdminOpen, setIsAdminOpen] = React.useState(false);\n    const inputFieldRef = React.useRef<?(GenericExpressionField | SelectField)>(\n      null\n    );\n    React.useImperativeHandle(ref, () => ({\n      focus: () => {\n        if (inputFieldRef.current) {\n          inputFieldRef.current.focus();\n        }\n      },\n    }));\n\n    const isCurrentValueInLeaderboardList =\n      leaderboards &&\n      !!leaderboards.find(leaderboard => `\"${leaderboard.id}\"` === props.value);\n\n    const [isExpressionField, setIsExpressionField] = React.useState(\n      !leaderboards || (!!props.value && !isCurrentValueInLeaderboardList)\n    );\n\n    const onChangeSelectValue = (event, value) => {\n      props.onChange(event.target.value);\n    };\n\n    const onChangeTextValue = (value: string) => {\n      props.onChange(value);\n    };\n\n    const fieldLabel = props.parameterMetadata\n      ? props.parameterMetadata.getDescription()\n      : undefined;\n\n    const gameHasLeaderboards = leaderboards && leaderboards.length > 0;\n\n    const selectOptions = React.useMemo(\n      () =>\n        leaderboards && gameHasLeaderboards\n          ? leaderboards.map(leaderboard => (\n              <SelectOption\n                key={leaderboard.id}\n                value={`\"${leaderboard.id}\"`}\n                primaryText={`${leaderboard.name} ${\n                  leaderboard.id ? `(${breakUuid(leaderboard.id)})` : ''\n                }`}\n              />\n            ))\n          : [\n              <SelectOption\n                disabled\n                key=\"empty\"\n                value=\"empty\"\n                primaryText={''}\n              />,\n            ],\n      [leaderboards, gameHasLeaderboards]\n    );\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <>\n            <TextFieldWithButtonLayout\n              renderTextField={() =>\n                !isExpressionField ? (\n                  <SelectField\n                    ref={inputFieldRef}\n                    value={props.value}\n                    onChange={onChangeSelectValue}\n                    margin={props.isInline ? 'none' : 'dense'}\n                    fullWidth\n                    floatingLabelText={fieldLabel}\n                    hintText={\n                      gameHasLeaderboards\n                        ? props.parameterMetadata &&\n                          props.parameterMetadata.isOptional()\n                          ? t`Choose a leaderboard (optional)`\n                          : t`Choose a leaderboard`\n                        : t`No leaderboards`\n                    }\n                    helperMarkdownText={\n                      !gameHasLeaderboards\n                        ? i18n._(\n                            t`There are currently no leaderboards created for this game. Open the leaderboards manager to create one.`\n                          )\n                        : (props.parameterMetadata &&\n                            props.parameterMetadata.getLongDescription()) ||\n                          null\n                    }\n                  >\n                    {selectOptions}\n                  </SelectField>\n                ) : (\n                  <GenericExpressionField\n                    ref={inputFieldRef}\n                    expressionType=\"string\"\n                    {...props}\n                    onChange={onChangeTextValue}\n                    onExtractAdditionalErrors={(\n                      currentExpression: string,\n                      currentExpressionNode: gdExpressionNode\n                    ) => {\n                      if (!leaderboards) {\n                        if (!isOnline)\n                          return 'Unable to fetch leaderboards as you are offline.';\n                        return 'Your game may not be registered, create one in the leaderboard manager.';\n                      }\n                    }}\n                  />\n                )\n              }\n              renderButton={style => (\n                <RaisedButtonWithSplitMenu\n                  icon={<OpenInNew />}\n                  style={style}\n                  primary\n                  onClick={() => setIsAdminOpen(true)}\n                  buildMenuTemplate={i18n => [\n                    {\n                      label: isExpressionField\n                        ? i18n._(t`Select the leaderboard from a list`)\n                        : i18n._(\n                            t`Enter the leaderboard id as a text or an expression`\n                          ),\n                      disabled: !leaderboards,\n                      click: () => setIsExpressionField(!isExpressionField),\n                    },\n                  ]}\n                />\n              )}\n            />\n            {isAdminOpen && !!props.project && (\n              <LeaderboardDialog\n                onClose={() => setIsAdminOpen(false)}\n                open={isAdminOpen}\n                project={props.project}\n              />\n            )}\n          </>\n        )}\n      </I18n>\n    );\n  }\n);\n\nconst InlineLeaderboardIdField = ({\n  value,\n  parameterMetadata,\n  InvalidParameterValue,\n}: ParameterInlineRendererProps) => {\n  const leaderboards = useFetchLeaderboards();\n\n  if (!value) {\n    if (parameterMetadata.isOptional()) {\n      return (\n        <span>\n          <Trans>No leaderboard chosen</Trans>\n        </span>\n      );\n    } else {\n      return (\n        <InvalidParameterValue isEmpty>\n          <Trans>Choose a leaderboard</Trans>\n        </InvalidParameterValue>\n      );\n    }\n  }\n\n  return <span>{getInlineParameterDisplayValue(leaderboards, value)}</span>;\n};\n\nexport const renderInlineLeaderboardIdField = (\n  props: ParameterInlineRendererProps\n) => <InlineLeaderboardIdField {...props} />;\n","//@flow\nimport { findGDJS } from '../GameEngineFinder/LocalGDJSFinder';\nimport optionalRequire from '../Utils/OptionalRequire';\nconst fs = optionalRequire('fs');\nconst path = optionalRequire('path');\n\nexport const setupAutocompletions = (monaco: any) => {\n  const importAllJsFilesFromFolder = (folderPath: string) =>\n    fs.readdir(folderPath, (error: ?Error, filenames: Array<string>) => {\n      if (error) {\n        console.error(\n          'Unable to read GDJS files for setting up autocompletions:',\n          error\n        );\n        return;\n      }\n\n      filenames.forEach(filename => {\n        if (filename.endsWith('.ts') || filename.endsWith('.js')) {\n          const fullPath = path.join(folderPath, filename);\n          fs.readFile(fullPath, 'utf8', (fileError, content) => {\n            if (fileError) {\n              console.error(\n                `Unable to read ${fullPath} for setting up autocompletions:`,\n                fileError\n              );\n              return;\n            }\n\n            monaco.languages.typescript.javascriptDefaults.addExtraLib(\n              content,\n              fullPath\n            );\n          });\n        }\n      });\n    });\n\n  findGDJS().then(({ gdjsRoot }) => {\n    // Autocompletions are generated by reading the sources of the game engine\n    // (much like how autocompletions work in Visual Studio Code) - *not* the built files.\n    // The built files are stripped of their types and documentation, so it would\n    // not work.\n    //\n    // We could also use the TypeScript compiler to emit .d.ts files when building GDJS,\n    // but this would make TypeScript slower (at least 2x slower) and we would still need\n    // to copy and read an equivalent number of files.\n    const runtimePath = path.join(gdjsRoot, 'Runtime-sources');\n    const runtimeTypesPath = path.join(runtimePath, 'types');\n    const runtimeLibsPath = path.join(runtimePath, 'libs');\n    const runtimePixiRenderersPath = path.join(runtimePath, 'pixi-renderers');\n    const runtimeCocosRenderersPath = path.join(runtimePath, 'cocos-renderers');\n    const runtimeHowlerSoundManagerPath = path.join(\n      runtimePath,\n      'howler-sound-manager'\n    );\n    const runtimeCocosSoundManagerPath = path.join(\n      runtimePath,\n      'cocos-sound-manager'\n    );\n    const runtimeFontfaceobserverFontManagerPath = path.join(\n      runtimePath,\n      'fontfaceobserver-font-manager'\n    );\n    const extensionsPath = path.join(runtimePath, 'Extensions');\n    const eventToolsPath = path.join(runtimePath, 'events-tools');\n\n    importAllJsFilesFromFolder(runtimePath);\n    importAllJsFilesFromFolder(runtimeTypesPath);\n    importAllJsFilesFromFolder(runtimeLibsPath);\n    importAllJsFilesFromFolder(runtimePixiRenderersPath);\n    importAllJsFilesFromFolder(runtimeCocosRenderersPath);\n    importAllJsFilesFromFolder(runtimeHowlerSoundManagerPath);\n    importAllJsFilesFromFolder(runtimeCocosSoundManagerPath);\n    importAllJsFilesFromFolder(runtimeFontfaceobserverFontManagerPath);\n    importAllJsFilesFromFolder(eventToolsPath);\n    fs.readdir(extensionsPath, (error: ?Error, folderNames: Array<string>) => {\n      if (error) {\n        console.error(\n          'Unable to read Extensions folders for setting up autocompletions:',\n          error\n        );\n        return;\n      }\n\n      folderNames\n        .filter(\n          folderName =>\n            !folderName.endsWith('.txt') &&\n            !folderName.endsWith('.md') &&\n            !folderName.endsWith('.flow.js') &&\n            !folderName.endsWith('.gitignore')\n        )\n        .forEach(folderName =>\n          importAllJsFilesFromFolder(path.join(extensionsPath, folderName))\n        );\n    });\n\n    monaco.languages.typescript.javascriptDefaults.addExtraLib(\n      `\n/** Represents the scene being played. */\nvar runtimeScene = new gdjs.RuntimeScene();\n\n/**\n * The instances of objects that are passed to your JavaScript function.\n * @type {gdjs.RuntimeObject[]}\n */\nvar objects = [];\n\n/**\n * @type {EventsFunctionContext}\n */\nvar eventsFunctionContext = {};\n`,\n      'this-mock-the-context-of-events.js'\n    );\n  });\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { setupAutocompletions } from './LocalCodeEditorAutocompletions';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport RaisedButton from '../UI/RaisedButton';\nimport Text from '../UI/Text';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport { getAllThemes } from './Theme';\n\nexport type State = {|\n  MonacoEditor: ?any,\n  error: ?Error,\n|};\nexport type Props = {|\n  value: string,\n  onChange: string => void,\n  width?: number,\n  height?: number,\n  onEditorMounted?: () => void,\n|};\n\nconst monacoEditorOptions = {\n  scrollBeyondLastLine: false,\n  minimap: {\n    enabled: false,\n  },\n};\n\n// There is only a single instance of monaco living, keep track\n// of if its initialized or not.\nlet monacoCompletionsInitialized = false;\nlet monacoThemesInitialized = false;\n\nexport class CodeEditor extends React.Component<Props, State> {\n  state = {\n    MonacoEditor: null,\n    error: null,\n  };\n\n  setupEditorThemes = (monaco: any) => {\n    if (!monacoThemesInitialized) {\n      monacoThemesInitialized = true;\n\n      getAllThemes().forEach(codeEditorTheme => {\n        // Builtin themes don't have themeData, don't redefine them.\n        if (codeEditorTheme.themeData) {\n          monaco.editor.defineTheme(\n            codeEditorTheme.themeName,\n            codeEditorTheme.themeData\n          );\n        }\n      });\n    }\n  };\n\n  setupEditorCompletions = (editor: any, monaco: any) => {\n    if (!monacoCompletionsInitialized) {\n      monacoCompletionsInitialized = true;\n\n      monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\n        // noLib: true,\n        target: monaco.languages.typescript.ScriptTarget.ES6,\n        allowNonTsExtensions: true,\n        allowJs: true,\n        checkJs: true,\n      });\n      setupAutocompletions(monaco);\n    }\n\n    if (this.props.onEditorMounted) this.props.onEditorMounted();\n  };\n\n  componentDidMount() {\n    this.loadMonacoEditor();\n  }\n\n  handleLoadError(error: Error) {\n    this.setState({\n      error,\n    });\n  }\n\n  loadMonacoEditor() {\n    this.setState({\n      error: null,\n    });\n\n    // Define the global variable used by Monaco Editor to find its worker\n    // (used, at least, for auto-completions).\n    window.MonacoEnvironment = {\n      getWorkerUrl: function(workerId, label) {\n        return 'external/monaco-editor-min/vs/base/worker/workerMain.js';\n      },\n    };\n\n    import(/* webpackChunkName: \"react-monaco-editor\" */ 'react-monaco-editor')\n      .then(module =>\n        this.setState({\n          MonacoEditor: module.default,\n        })\n      )\n      .catch(this.handleLoadError);\n  }\n\n  _handleContextMenu = (event: SyntheticEvent<>) => {\n    // Prevent right click to bubble up and trigger the context menu\n    // of the event.\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  render() {\n    const { MonacoEditor, error } = this.state;\n    if (error) {\n      return (\n        <React.Fragment>\n          <Text>\n            <Trans>Unable to load the code editor</Trans>\n          </Text>\n          <RaisedButton\n            label={<Trans>Retry</Trans>}\n            onClick={this.loadMonacoEditor}\n          />\n        </React.Fragment>\n      );\n    }\n\n    if (!MonacoEditor) {\n      return <PlaceholderLoader />;\n    }\n\n    return (\n      <div onContextMenu={this._handleContextMenu}>\n        <PreferencesContext.Consumer>\n          {({ values: preferences }) => (\n            <MonacoEditor\n              width={this.props.width || 600}\n              height={this.props.height || 200}\n              language=\"javascript\"\n              theme={preferences.codeEditorThemeName}\n              value={this.props.value}\n              onChange={this.props.onChange}\n              editorWillMount={this.setupEditorThemes}\n              editorDidMount={this.setupEditorCompletions}\n              options={{\n                ...monacoEditorOptions,\n                fontSize: preferences.eventsSheetZoomLevel,\n              }}\n            />\n          )}\n        </PreferencesContext.Consumer>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}